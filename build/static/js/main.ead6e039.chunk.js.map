{"version":3,"sources":["components/shared/Header.js","components/landing/Landing.js","components/drivers/DriverFunctions.js","components/traders/TraderFunctions.js","styles/MiscellaneousStyles.js","controls/Preloader.js","styles/CardStyles.js","components/login/Login.js","components/register/Register.js","components/register/EmailConfirmation.js","components/register/AccountSetup.js","components/register/Congratulations.js","components/drivers/dashboard/profile/ProfilePhoto.js","controls/ImageUploader.js","components/drivers/dashboard/profile/documents/drivingLicence/AddDrivingLicenceDialog.js","components/drivers/dashboard/profile/documents/drivingLicence/AddDrivingLicenceButton.js","components/drivers/dashboard/profile/documents/entryExitCard/AddEntryExitCardDialog.js","components/drivers/dashboard/profile/documents/entryExitCard/AddEntryExitCardButton.js","components/drivers/dashboard/profile/documents/identityCard/AddIdentityCardDialog.js","components/drivers/dashboard/profile/documents/identityCard/AddIdentityCardButton.js","components/drivers/dashboard/profile/documents/drivingLicence/EditDrivingLicenceDialog.js","components/drivers/dashboard/profile/documents/drivingLicence/DrivingLicenceListItem.js","components/drivers/dashboard/profile/documents/entryExitCard/EditEntryExitCardDialog.js","components/drivers/dashboard/profile/documents/entryExitCard/EntryExitCardListItem.js","components/drivers/dashboard/profile/documents/identityCard/EditIdentityCardDialog.js","components/drivers/dashboard/profile/documents/identityCard/IdentityCardListItem.js","components/drivers/dashboard/profile/documents/DocumentsList.js","components/drivers/dashboard/profile/Profile.js","components/drivers/dashboard/trucks/TruckSettings.js","components/drivers/dashboard/trucks/AddTruckDialog.js","components/drivers/dashboard/trucks/trailers/AddTrailerDialog.js","components/drivers/dashboard/trucks/trailers/AddTrailer.js","components/drivers/dashboard/trucks/trailers/EditTrailerDialog.js","components/drivers/dashboard/trucks/trailers/TrailersList.js","components/drivers/dashboard/trucks/trailers/Trailers.js","components/drivers/dashboard/trucks/Truck.js","components/drivers/dashboard/permits/AddPermitLicenceDialog.js","components/drivers/dashboard/permits/EditPermitLicenceDialog.js","components/drivers/dashboard/permits/PermitLicencesList.js","components/drivers/dashboard/permits/Permits.js","components/drivers/dashboard/financial_affairs/FinancialAffairs.js","components/drivers/dashboard/jobs/jobRequests/TraderRequestTab.js","components/drivers/dashboard/jobs/jobRequests/TraderTab.js","components/drivers/dashboard/jobs/jobRequests/TraderRequest.js","components/drivers/dashboard/jobs/jobRequests/TraderRequestsCarousel.js","components/drivers/dashboard/jobs/jobRequests/EditJobRequestDialog.js","components/drivers/dashboard/jobs/jobRequests/JobRequestPackageItem.js","components/drivers/dashboard/jobs/jobRequests/AddJobRequestDialog.js","controls/ProgressBar.js","components/drivers/dashboard/jobs/jobRequests/JobRequestsList.js","components/drivers/dashboard/jobs/jobRequests/JobRequests.js","components/drivers/dashboard/jobs/jobOffers/DocumentsDialog.js","components/drivers/dashboard/jobs/jobOffers/TraderTab.js","components/drivers/dashboard/jobs/jobOffers/JobOfferTab.js","components/drivers/dashboard/jobs/jobOffers/BidJobOfferDialog.js","components/drivers/dashboard/jobs/jobOffers/JobOfferPostListItem.js","components/drivers/dashboard/jobs/jobOffers/JobOfferPostsList.js","components/drivers/dashboard/jobs/jobOffers/JobOffers.js","components/drivers/dashboard/jobs/onGoingJobs/OnGoingJobs.js","components/drivers/dashboard/jobs/Jobs.js","components/drivers/dashboard/payments/Payments.js","components/drivers/dashboard/settings/GeneralSettings.js","components/drivers/dashboard/settings/CodeConfirmationDialog.js","components/drivers/dashboard/settings/UsernameAndEmailSettings.js","components/drivers/dashboard/settings/PasswordSettings.js","components/drivers/dashboard/settings/Settings.js","components/drivers/dashboard/DriversDashboard.js","components/traders/dashboard/profile/ProfilePhoto.js","components/traders/dashboard/profile/documents/identityCard/AddIdentityCardDialog.js","components/traders/dashboard/profile/documents/identityCard/AddIdentityCardButton.js","components/traders/dashboard/profile/documents/commercialRegisterCertificate/AddCommercialRegisterCertificateDialog.js","components/traders/dashboard/profile/documents/commercialRegisterCertificate/AddCommercialRegisterCertificateButton.js","components/traders/dashboard/profile/documents/identityCard/EditIdentityCardDialog.js","components/traders/dashboard/profile/documents/identityCard/IdentityCardListItem.js","components/traders/dashboard/profile/documents/commercialRegisterCertificate/EditCommercialRegisterCertificateDialog.js","components/traders/dashboard/profile/documents/commercialRegisterCertificate/CommercialRegisterCertificateListItem.js","components/traders/dashboard/profile/documents/DocumentsList.js","components/traders/dashboard/profile/Profile.js","controls/Alert.js","components/traders/dashboard/jobs/jobRequests/DocumentsDialog.js","components/traders/dashboard/jobs/jobRequests/DriverTab.js","components/traders/dashboard/jobs/jobRequests/TrailersDialog.js","components/traders/dashboard/jobs/jobRequests/TruckTab.js","components/traders/dashboard/jobs/jobRequests/JobRequestTab.js","components/traders/dashboard/jobs/jobRequests/SendTraderRequestDialog.js","components/traders/dashboard/jobs/jobRequests/JobRequestPostListItem.js","components/traders/dashboard/jobs/jobRequests/JobRequestPostsList.js","components/traders/dashboard/jobs/jobRequests/JobRequests.js","components/traders/dashboard/jobs/jobOffers/DocumentsDialog.js","components/traders/dashboard/jobs/jobOffers/DriverTab.js","components/traders/dashboard/jobs/jobOffers/TrailersDialog.js","components/traders/dashboard/jobs/jobOffers/TruckTab.js","components/traders/dashboard/jobs/jobOffers/DriverRequest.js","components/traders/dashboard/jobs/jobOffers/DriverRequestsCarousel.js","components/traders/dashboard/jobs/jobOffers/EditJobOfferDialog.js","components/traders/dashboard/jobs/jobOffers/JobOfferPackageItem.js","components/traders/dashboard/jobs/jobOffers/AddJobOfferDialog.js","components/traders/dashboard/jobs/jobOffers/JobOffersList.js","components/traders/dashboard/jobs/jobOffers/JobOffers.js","components/traders/dashboard/jobs/onGoingJobs/OnGoingJobs.js","components/traders/dashboard/jobs/Jobs.js","components/traders/dashboard/settings/GeneralSettings.js","components/traders/dashboard/payments/Payments.js","components/traders/dashboard/settings/CodeConfirmationDialog.js","components/traders/dashboard/settings/UsernameAndEmailSettings.js","components/traders/dashboard/settings/PasswordSettings.js","components/traders/dashboard/settings/Settings.js","components/traders/dashboard/TradersDashboard.js","controls/BackToTop.js","components/shared/Footer.js","App.js","index.js","res/strings.js"],"names":["Header","props","logOut","event","preventDefault","localStorage","userToken","removeItem","Token","history","push","state","DriverLoggedIn","bind","token","jwt_decode","loginRegisterLinks","className","to","userLinks","DriverID","onClick","this","type","data-toggle","data-target","Strings","APP_NAME","toUpperCase","id","Component","withRouter","Landing","class","style","width","backgroundColor","alt","src","data-source-index","color","fontWeight","href","textDecoration","registerDriver","newCredentials","a","async","axios","post","NAQEL_SERVER","Username","Email","Password","RegisterAs","then","response","data","localeCompare","USERNAME_OR_EMAIL_TAKEN","setItem","setupDriverAccount","newDriver","FirstName","LastName","DateOfBirth","Gender","Address","PhoneNumber","Nationality","console","log","loginDriver","driver","EmailOrUsername","SignInAs","getData","request","Get","get","headers","Authorization","uploadDriverProfilePhoto","driverProfilePhoto","PhotoURL","FileName","generalSettings","updatedDriver","validateUsername","username","validateEmail","email","sendCode","usernameAndEmailSettings","validatePassword","passwordPackage","passwordSettings","addTruck","newTruck","PlateNumber","Owner","ProductionYear","Brand","Model","Type","MaximumWeight","updateTruckPhoto","updatedTruck","updateTruck","addTrailer","newTrailer","deleteTrailer","discardedTrailer","delete","TrailerID","addDrivingLicence","newDrivingLicence","LicenceNumber","ReleaseDate","ExpiryDate","updateDrivingLicence","updatedDrivingLicence","deleteDrivingLicence","discardedDrivingLicence","addEntryExitCard","newEntryExitCard","EntryExitNumber","NumberOfMonths","updateEntryExitCard","updatedEntryExitCard","deleteEntryExitCard","discardedEntryExitCard","addIdentityCard","newIdentityCard","IDNumber","updateIdentityCard","updatedIdentityCard","deleteIdentityCard","discardedIdentityCard","addPermitLicence","newPermitLicence","PermitNumber","Code","Place","deletePermitLicence","discardedPermitLicence","PermitLicenceID","updatePermitLicence","updatedPermitLicence","addJobRequest","newJobRequest","LoadingPlace","UnloadingPlace","TripType","Price","updateJobRequest","updatedJobRequest","JobRequestID","deleteJobRequest","discardedJobRequest","addDriverRequest","newDriverRequest","JobOfferID","registerTrader","res","setupTraderAccount","newTrader","loginTrader","trader","catch","error","uploadTraderProfilePhoto","traderProfilePhoto","updatedTrader","addJobOffer","newJobOffer","CargoType","CargoWeight","LoadingDate","LoadingTime","EntryExit","AcceptedDelay","JobOfferType","updateJobOffer","updatedJobOffer","deleteJobOffer","discardedJobOffer","addTraderRequest","newTraderReqeust","Required","paddingLeft","PreloaderScreen","background","position","zIndex","top","display","alignItems","justifyContent","height","Preloader","textAlign","LoginCardBack","backgroundImage","backgroundAttachment","backgroundRepeat","backgroundSize","RegisterCardBack","EmailConfirmationCardBack","AccountSetupCardBack","CongratulationsCardBack","Card","padding","alignContent","boxShadow","CardLarge","CardXLarge","margin","CardChild","CardTitle","paddingTop","Login","onChange","name","target","value","setState","validateField","onSubmit","ValidForm","user","Message","LoggedInAsDriver","LoginError","LoggedInAsTrader","ValidEmailOrUsername","ValidPassword","Errors","field","noValidate","htmlFor","placeholder","aria-haspopup","role","aria-expanded","aria-labelledby","e","disabled","Register","ConfirmPassword","NullError","UsernameOrEmailTaken","newCredentialsToken","PasswordsMatched","ValidEmail","Agreed","fieldValidationErrors","match","length","refs","agreementCheckBox","checked","validateForm","autocomplete","required","maxWidth","ref","AgreementError","tabindex","aria-hidden","String","data-dismiss","EmailConfirmation","code","ConfirmationCode","InvalidCodeError","AccountSetup","verifiedCredentialsToken","decoded","newUser","ValidFirstName","ValidLastName","ValidDateOfBirth","ValidNationality","ValidAddress","ValidPhoneNumber","Date","atl","rows","IsCreatedSuccessfully","ProfilePhoto","onImageUpload","Image","files","formData","FormData","append","IMAGE_UPLOADER","onUploadProgress","UploadProgress","message","imageUrl","filename","photoURL","ImageURL","profilePhoto","fileInput","border","click","ImageUploader","startsWith","OnInvalidImageSelected","exception","OnImageUploaded","Width","Height","Source","AddDrivingLicenceDialog","OnOK","cancelButton","ValidLicenceNumber","ValidType","ValidReleaseDate","ValidExpiryDate","ValidPhotoURL","getTime","tabIndex","ImageCategory","autoComplete","OnCancel","AddDrivingLicenceButton","minWidth","onMouseDown","OnDocumentsUpdated","AddEntryExitCardDialog","ValidEntryExitNumber","ValidNumberOfMonths","releaseDate","expiryDate","setMonth","getMonth","toLocaleString","AddEntryExitCardButton","AddIdentityCardDialog","ValidIDNumber","min","max","AddIdentityCardButton","EditDrivingLicenceDialog","drivingLicence","DrivingLicence","DrivingLicenceID","DrivingLicenceListItem","onDelete","onComponentUpdated","Index","overflow","EditEntryExitCardDialog","entryExitCard","EntryExitCard","EntryExitCardListItem","EntryExitCardID","EditIdentityCardDialog","identityCard","IdentityCard","IdentityCardListItem","IdentityCardID","DocumentsList","onDocumentsUpdated","index","undefined","Profile","WarningAlert","Driver","marginBottom","TruckSettings","OnTruckSettingsUpdated","ValidPlateNumber","ValidOwner","ValidProductionYear","ValidBrand","ValidModel","ValidMaximumWeight","truck","Truck","currentYear","getFullYear","AddTruckDialog","AddTrailerDialog","AddTrailer","OnTrailerAdded","EditTrailerDialog","updatedTrailer","Trailer","updateTrailer","dialogID","TrailersList","Trailers","OnTrailersUpdated","EditTrailerDialogs","map","key","editTrailerDialogs","TruckFound","AddPermitLicenceDialog","ValidPermitNumber","ValidCode","ValidPlace","EditPermitLicenceDialog","PermitLicence","DialogID","PermitLicencesList","PermitLicences","AllPermitLicences","onSearch","SearchString","allPermitLicences","filteredPermitLicences","i","includes","EditPermitLicenceDialogs","paddingRight","editPermitLicenceDialogs","Permits","onPermitLicencesUpdated","permitLicencesList","FinancialAffairs","borderRadius","TraderRequestTab","traderRequest","TraderRequest","toDateString","Created","toTimeString","TraderTab","Trader","JobRequestTab","traderRequestPackage","TraderRequestPackage","aria-controls","TraderRequestsCarousel","traderRequestPackages","TraderRequestPackages","data-ride","data-interval","data-slide","EditJobRequestDialog","CanEdit","JobRequest","ValidLoadingPlace","ValidUnloadingPlace","ValidPrice","step","JobRequestPackageItem","jobRequestID","OnJobRequestUpdated","jobRequest","JobRequestPackage","createdHoursAgo","Math","abs","TimeCreated","WaitingTime","fontSize","AddJobRequestDialog","ProgressBar","JobRequestsList","Searching","AllJobRequestPackages","JobRequestPackages","allJobRequestPackages","filteredJobRequestPackages","count","jobRequestPackage","jobRequestPackages","borderTop","JobRequests","DocumentsDialog","Documents","commercialRegisterCertificate","CommercialRegisterCertificate","identityCardRow","commercialRegisterCertificateRow","Number","UUID","substring","jobOffer","JobOffer","BidJobOfferDialog","IsRequestSent","JobOfferPostsList","onSendRequest","JobOfferPost","RequestSent","OnRequestSent","requestSent","documents","JobOfferTab","JobOfferPosts","marginTop","jobOfferPost","JobOfferPostListItem","jobOfferPosts","JobOffers","OnGoingJobs","Jobs","Payments","GeneralSettings","OnSettingsSaved","SettingsSaved","CodeConfirmationDialog","ConfirmCode","ValidConfirmCode","UsernameAndEmailSettings","NewUsername","NewEmail","ValidNewUsername","ValidNewEmail","CodeConfirmation","PasswordSettings","CurrentPassword","NewPassword","ValidCurrentPassword","ValidNewPassword","ValidConfirmPassword","Settings","componentDidMount","forceUpdate","DriversDashboard","onCloseNavigation","SideNavWidth","marginLeft","float","AddCommercialRegisterCertificateDialog","newCommercialRegisterCertificate","addCommercialRegisterCertificate","readOnly","AddCommercialRegisterCertificateButton","onRefresh","Key","floor","random","EditCommercialRegisterCertificateDialog","updatedCommercialRegisterCertificate","updateCommercialRegisterCertificate","CommercialRegisterCertificateListItem","discardedCommercialRegisterCertificate","deleteCommercialRegisterCertificate","ID","Alert","aria-label","OnClose","DriverTab","DriverProfilePhoto","TrailersDialog","trailers","trailer","TruckTab","SendTraderRequestDialog","newTraderRequest","ValidCargoType","ValidCargoWeight","ValidLoadingDate","ValidLoadingTime","ValidAcceptedDelay","JobRequestPostListItem","JobRequestPost","JobRequestPostsList","JobRequestPosts","onClose","jobRequestPost","jobRequestPosts","driverRequest","DriverRequest","driverRequestPackage","DriverRequestPackage","driverTabID","truckTabID","DriverRequestsCarousel","driverRequestPackages","DriverRequestPackages","EditJobOfferDialog","aria-pressed","defaultChecked","JobOfferPackageItem","jobOfferID","OnJobOfferUpdated","JobOfferPackage","AddJobOfferDialog","JobOffersList","AllJobOfferPackages","JobOfferPackages","allJobOfferPackages","filteredJobOfferPackages","jobOfferPackage","jobOfferPackages","TradersDashboard","BackToTop","right","bottom","Footer","asp-area","asp-controller","asp-action","App","basename","exact","path","component","Congratulations","ReactDOM","render","document","getElementById","module","exports","USER_TOKEN","USER_NOT_FOUND","INVALID_PASSWORD"],"mappings":"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","file":"static/js/main.ead6e039.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Strings from \"../../res/strings\"\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DriverLoggedIn: false\r\n        };\r\n\r\n        this.logOut = this.logOut.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    logOut = event => {\r\n        event.preventDefault();\r\n\r\n        if (localStorage.userToken) {\r\n            localStorage.removeItem(\"userToken\");\r\n        }\r\n        else if (localStorage.Token) {\r\n            localStorage.removeItem(\"Token\");\r\n        }\r\n\r\n        this.props.history.push(`/login`);\r\n    }\r\n\r\n    render() {\r\n        let token;\r\n\r\n        if (localStorage.Token) {\r\n            token = jwt_decode(localStorage.Token);\r\n        }\r\n\r\n        const loginRegisterLinks = <ul className=\"nav navbar-nav navbar-right\">\r\n            <li>\r\n                <Link to=\"/register\">Register</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/login\">Login</Link>\r\n            </li>\r\n        </ul>;\r\n\r\n        const userLinks = <ul className=\"nav navbar-nav navbar-right\">\r\n            <li>\r\n                <Link to={(token && token.DriverID) ? \"/drivers\" : \"/traders\"}>Dashboard</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"\" onClick={this.logOut.bind(this)}>Logout</Link>\r\n            </li>\r\n        </ul>;\r\n\r\n        return (\r\n            <header>\r\n                <nav className=\"navbar navbar-default\">\r\n                    <div className=\"navbar-local color-accent theme-dark\">\r\n                        <div className=\"container\">\r\n                            <div className=\"navbar-header\">\r\n                                <button type=\"button\" className=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-2\">\r\n                                    <span className=\"sr-only\">Toggle navigation</span>\r\n                                    <i className=\"glyph glyph-hamburger\"></i>\r\n                                </button>\r\n                                <Link to=\"/\" className=\"navbar-brand\">{Strings.APP_NAME.toUpperCase()}</Link>\r\n                            </div>\r\n                            <div className=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-2\">\r\n                                <ul className=\"nav navbar-nav\"></ul>\r\n                                {localStorage.Token ? userLinks : loginRegisterLinks}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n        );\r\n    }\r\n};\r\n\r\nexport default withRouter(Header);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"slider\">\r\n                    <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                    <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        alt=\"truck.png\" src=\"./images/truck.png\" data-source-index=\"2\" />\r\n                                </div>\r\n                                <div class=\"col-md-12 col-md-pull-12\">\r\n                                    <div class=\"type-h3\" style={{ color: \"#008575\", }}>Weclome to Naqel</div>\r\n                                    <div class=\"type-sh3\" style={{ color: \"#949496\", }}>Transport Services On-The-Go</div>\r\n                                    <p style={{ color: \"#D1D2D4\", }}>Welcome to Naqel! If you are a trader or a broker, and you want to publish job opportunities for drivers nearby, well, you are on the right place. Naqel is a mediator among traders, brokers and drivers, and provides intuitive and secure way to get transport services.</p>\r\n                                    <p style={{ color: \"#D1D2D4\", }}>Not a Trader or a Broker? No worries! Naqel provides services for drivers too. If you are a driver, and you are searching for job opportunities, you are just one step away. Create your account on our Web Service, and we will notify you job oppprtunities on your personal account.</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#16171F\" }}>\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                    <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        alt=\"oath.png\" src=\"./images/oath.png\" data-source-index=\"2\" />\r\n                                </div>\r\n                                <div class=\"col-md-12 col-md-pull-12\">\r\n                                    <div class=\"type-h3\" style={{ color: \"#008575\", }}>Privacy</div>\r\n                                    <div class=\"type-sh3\" style={{ color: \"#949496\", }}>Your Privacy is Important to Us</div>\r\n                                    <p style={{ color: \"#D1D2D4\", }}>Naqel's Privacy Statement describes the types of data we collect from you, how we use your data, and the legal bases we have to process your data. The Privacy Statement also describes how Naqel uses your content, which is information submitted by you to Naqel via the Services.</p>\r\n                                    <p style={{ color: \"#D1D2D4\", }}>Where processing is based on consent and to the extent permitted by law, by agreeing to these Terms, you consent to Naqel's collection, use and disclosure of your content and data as described in the privacy statement.</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#00201C\" }}>\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                    <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        alt=\"account.png\" src=\"./images/account.png\" data-source-index=\"2\" />\r\n                                </div>\r\n                                <div class=\"col-md-12 col-md-pull-12\">\r\n                                    <div class=\"type-h3\" style={{ color: \"#008575\", }}>User Accounts</div>\r\n                                    <div class=\"type-sh3\" style={{ color: \"#949496\", }}>Signup and/or Login</div>\r\n                                    <p style={{ color: \"#D1D2D4\", }}>Do you want to use our services right now? No Worries! Just signup by filling up precise forms and/or login to your profile. Drivers can view job opprotunities on their dashboards. Traders and/or Brokers can post job requests for freight from thier accounts.</p>\r\n                                    <div class=\"btn-group\">\r\n                                        <Link to=\"/register\" class=\"btn btn-secondary\">Signup</Link>\r\n                                        <Link to=\"/login\" class=\"btn btn-primary\">Login</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"jumbotron theme-dark\" style={{ backgroundColor: \"#202020\", }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-24 text-center\">\r\n                                <div class=\"row section-gallery\">\r\n                                    <div class=\"col-md-8\">\r\n                                        <h4 style={{ fontWeight: \"bold\", }}>LOCATION</h4>\r\n                                        <div class=\"type-p1 text-center\">\r\n                                            Wah\r\n                            <br />\r\n                                            Punjab, Pakistan\r\n                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-8\">\r\n                                        <h4 style={{ fontWeight: \"bold\", }}>AROUND THE GLOBE</h4>\r\n                                        <div class=\"type-p1 text-center text-light\" style={{ color: \"#25AAE1\", }}>\r\n                                            <a class=\"fa\" href=\"#\">\r\n                                                <i class=\"fab fa-fw fa-facebook-f\"></i>\r\n                                            </a>\r\n                                            <a class=\"fa\" href=\"#\">\r\n                                                <i class=\"fab fa-fw fa-instagram\"></i>\r\n                                            </a>\r\n                                            <a class=\"fa\" href=\"#\">\r\n                                                <i class=\"fab fa-fw fa-twitter\"></i>\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-8\">\r\n                                        <h4 style={{ fontWeight: \"bold\", }}>CONTACT US</h4>\r\n                                        <div class=\"type-p1 text-center\">Naqel is created by Core Infinite. For more information, visit <a style={{ textDecoration: \"none\", color: \"#008575\", }} href=\"#\" class=\"color-type-accent\">coreinfinte.com</a></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Landing;","import axios from \"axios\";\r\nimport Strings from \"../../res/strings\";\r\n\r\n// POST: Register\r\nexport const registerDriver = async newCredentials => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/register`, {\r\n        Username: newCredentials.Username,\r\n        Email: newCredentials.Email,\r\n        Password: newCredentials.Password,\r\n        RegisterAs: newCredentials.RegisterAs,\r\n    }).then(response => {\r\n        if (response.data.localeCompare(Strings.USERNAME_OR_EMAIL_TAKEN) === 0) {\r\n            return response.data;\r\n        }\r\n        else {\r\n            localStorage.setItem(\"newCredentialsToken\", response.data);\r\n            return response.data;\r\n        }\r\n    });\r\n};\r\n\r\n// POST: AccountSetup\r\nexport const setupDriverAccount = async newDriver => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/accountSetup`, {\r\n        Username: newDriver.Username,\r\n        Email: newDriver.Email,\r\n        Password: newDriver.Password,\r\n        RegisterAs: newDriver.RegisterAs,\r\n        FirstName: newDriver.FirstName,\r\n        LastName: newDriver.LastName,\r\n        DateOfBirth: newDriver.DateOfBirth,\r\n        Gender: newDriver.Gender,\r\n        Address: newDriver.Address,\r\n        PhoneNumber: newDriver.PhoneNumber,\r\n        Nationality: newDriver.Nationality,\r\n    }).then(response => {\r\n        console.log(response.data);\r\n    });\r\n};\r\n\r\n// POST: Login\r\nexport const loginDriver = async driver => {\r\n    console.log(`Sending HTTP POST request on ${Strings.NAQEL_SERVER}drivers/login`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/login`, {\r\n        EmailOrUsername: driver.EmailOrUsername,\r\n        Password: driver.Password,\r\n        SignInAs: driver.SignInAs,\r\n    }).then(response => {\r\n        return response.data;\r\n    })\r\n};\r\n\r\n// GET: GetData\r\nexport const getData = async request => {\r\n    console.log(`Sending GET request to ${Strings.NAQEL_SERVER}drivers/get${request.Get}...`);\r\n    return await axios.get(`${Strings.NAQEL_SERVER}drivers/get${request.Get}`, {\r\n        headers: { Authorization: `JWT ${request.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UploadDriverProfilePhoto\r\nexport const uploadDriverProfilePhoto = async driverProfilePhoto => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/uploadDriverProfilePhoto`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/uploadDriverProfilePhoto`, {\r\n        PhotoURL: driverProfilePhoto.PhotoURL,\r\n        FileName: driverProfilePhoto.FileName\r\n    }, {\r\n        headers: { Authorization: `JWT ${driverProfilePhoto.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: GeneralSettings\r\nexport const generalSettings = async updatedDriver => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/generalSettings`, {\r\n        FirstName: updatedDriver.FirstName,\r\n        LastName: updatedDriver.LastName,\r\n        Address: updatedDriver.Address,\r\n        PhoneNumber: updatedDriver.PhoneNumber,\r\n        Gender: updatedDriver.Gender,\r\n        Nationality: updatedDriver.Nationality,\r\n        DateOfBirth: updatedDriver.DateOfBirth,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedDriver.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateUsername\r\nexport const validateUsername = async username => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/validateUsername`, {\r\n        Username: username\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateEmail\r\nexport const validateEmail = async email => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/validateEmail`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POSTL SendCode\r\nexport const sendCode = async email => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}users/sendCode...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/sendCode`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UsernameAndEmailSettings\r\nexport const usernameAndEmailSettings = async updatedDriver => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/usernameAndEmailSettings...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/usernameAndEmailSettings`, {\r\n        Username: updatedDriver.Username,\r\n        Email: updatedDriver.Email\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedDriver.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidatePassword\r\nexport const validatePassword = async passwordPackage => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/validatePassword`, {\r\n        Password: passwordPackage.Password\r\n    }, {\r\n        headers: { Authorization: `JWT ${passwordPackage.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: PasswordSettings\r\nexport const passwordSettings = async updatedDriver => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/passwordSettings`, {\r\n        Password: updatedDriver.Password,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedDriver.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddTruck\r\nexport const addTruck = async newTruck => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addTruck...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addTruck`, {\r\n        PlateNumber: newTruck.PlateNumber,\r\n        Owner: newTruck.Owner,\r\n        ProductionYear: newTruck.ProductionYear,\r\n        Brand: newTruck.Brand,\r\n        Model: newTruck.Model,\r\n        Type: newTruck.Type,\r\n        MaximumWeight: newTruck.MaximumWeight,\r\n        PhotoURL: newTruck.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTruck.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UpdateTruckPhoto\r\nexport const updateTruckPhoto = async updatedTruck => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateTruckPhoto...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateTruckPhoto`, {\r\n        PhotoURL: updatedTruck.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTruck.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UpdateTruck\r\nexport const updateTruck = async updatedTruck => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateTruck...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateTruck`, {\r\n        PlateNumber: updatedTruck.PlateNumber,\r\n        Owner: updatedTruck.Owner,\r\n        ProductionYear: updatedTruck.ProductionYear,\r\n        Brand: updatedTruck.Brand,\r\n        Model: updatedTruck.Model,\r\n        Type: updatedTruck.Type,\r\n        MaximumWeight: updatedTruck.MaximumWeight\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTruck.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddTrailer\r\nexport const addTrailer = async newTrailer => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addTrailer...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addTrailer`, {\r\n        MaximumWeight: newTrailer.MaximumWeight,\r\n        PhotoURL: newTrailer.PhotoURL,\r\n        Type: newTrailer.Type\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTrailer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteTrailer\r\nexport const deleteTrailer = async discardedTrailer => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteTrailer...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteTrailer`, {\r\n        headers: { Authorization: `JWT ${discardedTrailer.Token}` },\r\n        data: { TrailerID: discardedTrailer.TrailerID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateTrailer\r\nexport const updateTrailer = updatedTrailer => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateTrailer...`);\r\n    return axios.post(`${Strings.NAQEL_SERVER}drivers/updateTrailer`, {\r\n        TrailerID: updatedTrailer.TrailerID,\r\n        MaximumWeight: updatedTrailer.MaximumWeight,\r\n        PhotoURL: updatedTrailer.PhotoURL,\r\n        Type: updatedTrailer.Type\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTrailer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addDrivingLicence\r\nexport const addDrivingLicence = async newDrivingLicence => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addDrivingLicence...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addDrivingLicence`, {\r\n        LicenceNumber: newDrivingLicence.LicenceNumber,\r\n        Type: newDrivingLicence.Type,\r\n        ReleaseDate: newDrivingLicence.ReleaseDate,\r\n        ExpiryDate: newDrivingLicence.ExpiryDate,\r\n        PhotoURL: newDrivingLicence.PhotoURL,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newDrivingLicence.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateDrivingLicence\r\nexport const updateDrivingLicence = async updatedDrivingLicence => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateDrivingLicence...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateDrivingLicence`, {\r\n        LicenceNumber: updatedDrivingLicence.LicenceNumber,\r\n        Type: updatedDrivingLicence.Type,\r\n        ReleaseDate: updatedDrivingLicence.ReleaseDate,\r\n        ExpiryDate: updatedDrivingLicence.ExpiryDate,\r\n        PhotoURL: updatedDrivingLicence.PhotoURL,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedDrivingLicence.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteDrivingLicence\r\nexport const deleteDrivingLicence = async discardedDrivingLicence => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteDrivingLicence...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteDrivingLicence`, {\r\n            headers: { Authorization: `JWT ${discardedDrivingLicence.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addEntryExitCard\r\nexport const addEntryExitCard = async newEntryExitCard => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addEntryExitCard...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addEntryExitCard`, {\r\n        EntryExitNumber: newEntryExitCard.EntryExitNumber,\r\n        Type: newEntryExitCard.Type,\r\n        ReleaseDate: newEntryExitCard.ReleaseDate,\r\n        NumberOfMonths: newEntryExitCard.NumberOfMonths,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newEntryExitCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateEntryExiCard\r\nexport const updateEntryExitCard = async updatedEntryExitCard => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateEntryExitCard...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateEntryExitCard`, {\r\n        EntryExitNumber: updatedEntryExitCard.EntryExitNumber,\r\n        Type: updatedEntryExitCard.Type,\r\n        ReleaseDate: updatedEntryExitCard.ReleaseDate,\r\n        NumberOfMonths: updatedEntryExitCard.NumberOfMonths,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedEntryExitCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteEntryExitCard\r\nexport const deleteEntryExitCard = async discardedEntryExitCard => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteEntryExitCard...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteEntryExitCard`, {\r\n        headers: { Authorization: `JWT ${discardedEntryExitCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addIdentityCard\r\nexport const addIdentityCard = async newIdentityCard => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addIdentityCard...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addIdentityCard`, {\r\n        Token: newIdentityCard.Token,\r\n        IDNumber: newIdentityCard.IDNumber,\r\n        PhotoURL: newIdentityCard.PhotoURL,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateIdentityCard\r\nexport const updateIdentityCard = async updatedIdentityCard => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateIdentityCard...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateIdentityCard`, {\r\n        Token: updatedIdentityCard.Token,\r\n        IDNumber: updatedIdentityCard.IDNumber,\r\n        PhotoURL: updatedIdentityCard.PhotoURL,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteIdentityCard\r\nexport const deleteIdentityCard = async discardedIdentityCard => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteIdentityCard...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteIdentityCard`, {\r\n        headers: { Authorization: `JWT ${discardedIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addPermitLicence\r\nexport const addPermitLicence = async newPermitLicence => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addPermitLicence...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addPermitLicence`, {\r\n        PermitNumber: newPermitLicence.PermitNumber,\r\n        ExpiryDate: newPermitLicence.ExpiryDate,\r\n        PhotoURL: newPermitLicence.PhotoURL,\r\n        Code: newPermitLicence.Code,\r\n        Place: newPermitLicence.Place\r\n    }, {\r\n        headers: { Authorization: `JWT ${newPermitLicence.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deletePermitLicence\r\nexport const deletePermitLicence = async discardedPermitLicence => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deletePermitLicence...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deletePermitLicence`, {\r\n        headers: { Authorization: `JWT ${discardedPermitLicence.Token}` },\r\n        data: { PermitLicenceID: discardedPermitLicence.PermitLicenceID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updatePermitLicence\r\nexport const updatePermitLicence = async updatedPermitLicence => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updatePermitLicence...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updatePermitLicence`, {\r\n        PermitLicenceID: updatedPermitLicence.PermitLicenceID,\r\n        PermitNumber: updatedPermitLicence.PermitNumber,\r\n        ExpiryDate: updatedPermitLicence.ExpiryDate,\r\n        PhotoURL: updatedPermitLicence.PhotoURL,\r\n        Code: updatedPermitLicence.Code,\r\n        Place: updatedPermitLicence.Place\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedPermitLicence.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addJobRequest\r\nexport const addJobRequest = async newJobRequest => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addJobRequest...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addJobRequest`, {\r\n        LoadingPlace: newJobRequest.LoadingPlace,\r\n        UnloadingPlace: newJobRequest.UnloadingPlace,\r\n        TripType: newJobRequest.TripType,\r\n        Price: newJobRequest.Price,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newJobRequest.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateJobRequest\r\nexport const updateJobRequest = async updatedJobRequest => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateJobRequest...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateJobRequest`, {\r\n        JobRequestID: updatedJobRequest.JobRequestID,\r\n        LoadingPlace: updatedJobRequest.LoadingPlace,\r\n        UnloadingPlace: updatedJobRequest.UnloadingPlace,\r\n        TripType: updatedJobRequest.TripType,\r\n        Price: updatedJobRequest.Price,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedJobRequest.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteJobRequest\r\nexport const deleteJobRequest = async discardedJobRequest => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteJobRequest...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteJobRequest`, {\r\n        headers: { Authorization: `JWT ${discardedJobRequest.Token}` },\r\n        data: { JobRequestID: discardedJobRequest.JobRequestID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addDriverRequest\r\nexport const addDriverRequest = async newDriverRequest => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addDriverRequest...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addDriverRequest`, {\r\n        JobOfferID: newDriverRequest.JobOfferID,\r\n        Price: newDriverRequest.Price\r\n    }, {\r\n        headers: { Authorization: `JWT ${newDriverRequest.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};","import axios from \"axios\";\r\nimport Strings from \"../../res/strings\";\r\n\r\n// POST: Register\r\nexport const registerTrader = async newCredentials => {\r\n    console.log(\"I'm in registerTrader axios...\");\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/register`, {\r\n        Username: newCredentials.Username,\r\n        Email: newCredentials.Email,\r\n        Password: newCredentials.Password,\r\n        RegisterAs: newCredentials.RegisterAs,\r\n    }).then(res => {\r\n        if (res.data.localeCompare(Strings.USERNAME_OR_EMAIL_TAKEN) === 0) {\r\n            return res.data;\r\n        }\r\n        else {\r\n            localStorage.setItem(\"newCredentialsToken\", res.data);\r\n            return res.data;\r\n        }\r\n    });\r\n};\r\n\r\n// POST: AccountSetup\r\nexport const setupTraderAccount = async newTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/accountSetup`, {\r\n        Username: newTrader.Username,\r\n        Email: newTrader.Email,\r\n        Password: newTrader.Password,\r\n        RegisterAs: newTrader.RegisterAs,\r\n        FirstName: newTrader.FirstName,\r\n        LastName: newTrader.LastName,\r\n        DateOfBirth: newTrader.DateOfBirth,\r\n        Gender: newTrader.Gender,\r\n        Address: newTrader.Address,\r\n        PhoneNumber: newTrader.PhoneNumber,\r\n        Nationality: newTrader.Nationality,\r\n    }).then(res => {\r\n        console.log(res.data);\r\n    });\r\n};\r\n\r\n// POST: Login\r\nexport const loginTrader = async trader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/login`, {\r\n        EmailOrUsername: trader.EmailOrUsername,\r\n        Password: trader.Password\r\n    }).then(response => {\r\n        return response.data;\r\n    }).catch(error => {\r\n        console.log(error);\r\n    });\r\n};\r\n\r\n// GET: GetData\r\nexport const getData = async request => {\r\n    console.log(`Sending GET request to ${Strings.NAQEL_SERVER}traders/get${request.Get}...`);\r\n    return await axios.get(`${Strings.NAQEL_SERVER}traders/get${request.Get}`, {\r\n        headers: { Authorization: `JWT ${request.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UploadDriverProfilePhoto\r\nexport const uploadTraderProfilePhoto = async traderProfilePhoto => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/uploadTraderProfilePhoto`, {\r\n        PhotoURL: traderProfilePhoto.PhotoURL,\r\n        FileName: traderProfilePhoto.FileName\r\n    }, {\r\n        headers: { Authorization: `JWT ${traderProfilePhoto.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: GeneralSettings\r\nexport const generalSettings = async updatedTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/generalSettings`, {\r\n        FirstName: updatedTrader.FirstName,\r\n        LastName: updatedTrader.LastName,\r\n        Address: updatedTrader.Address,\r\n        PhoneNumber: updatedTrader.PhoneNumber,\r\n        Gender: updatedTrader.Gender,\r\n        Nationality: updatedTrader.Nationality,\r\n        DateOfBirth: updatedTrader.DateOfBirth,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTrader.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateUsername\r\nexport const validateUsername = async username => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/validateUsername`, {\r\n        Username: username\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateEmail\r\nexport const validateEmail = async email => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/validateEmail`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POSTL SendCode\r\nexport const sendCode = async email => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/sendCode`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UsernameAndEmailSettings\r\nexport const usernameAndEmailSettings = async updatedTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/usernameAndEmailSettings`, {\r\n        Username: updatedTrader.Username,\r\n        Email: updatedTrader.Email\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTrader.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidatePassword\r\nexport const validatePassword = async passwordPackage => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/validatePassword`, {\r\n        Password: passwordPackage.Password\r\n    }, {\r\n        headers: { Authorization: `JWT ${passwordPackage.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: PasswordSettings\r\nexport const passwordSettings = async updatedTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/passwordSettings`, {\r\n        Password: updatedTrader.Password,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTrader.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addIdentityCard\r\nexport const addIdentityCard = newIdentityCard => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/addIdentityCard`, {\r\n        IDNumber: newIdentityCard.IDNumber,\r\n        PhotoURL: newIdentityCard.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${newIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateIdentityCard\r\nexport const updateIdentityCard = updatedIdentityCard => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/updateIdentityCard`, {\r\n        IDNumber: updatedIdentityCard.IDNumber,\r\n        PhotoURL: updatedIdentityCard.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteIdentityCard\r\nexport const deleteIdentityCard = discardedIdentityCard => {\r\n    return axios.delete(`${Strings.NAQEL_SERVER}traders/deleteIdentityCard`, {\r\n        headers: { Authorization: `JWT ${discardedIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addCommercialRegisterCertificate\r\nexport const addCommercialRegisterCertificate = newCommercialRegisterCertificate => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/addCommercialRegisterCertificate`, {\r\n        Number: newCommercialRegisterCertificate.Number,\r\n        Type: newCommercialRegisterCertificate.Type,\r\n        PhotoURL: newCommercialRegisterCertificate.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${newCommercialRegisterCertificate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateCommercialRegisterCertificate\r\nexport const updateCommercialRegisterCertificate = updatedCommercialRegisterCertificate => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/updateCommercialRegisterCertificate`, {\r\n        Number: updatedCommercialRegisterCertificate.Number,\r\n        Type: updatedCommercialRegisterCertificate.Type,\r\n        PhotoURL: updatedCommercialRegisterCertificate.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedCommercialRegisterCertificate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteCommercialRegisterCertificate\r\nexport const deleteCommercialRegisterCertificate = discardedCommercialRegisterCertificate => {\r\n    return axios.delete(`${Strings.NAQEL_SERVER}traders/deleteCommercialRegisterCertificate`, {\r\n        headers: { Authorization: `JWT ${discardedCommercialRegisterCertificate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addJobOffer\r\nexport const addJobOffer = async newJobOffer => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addJobOffer`, {\r\n        TripType: newJobOffer.TripType,\r\n        CargoType: newJobOffer.CargoType,\r\n        CargoWeight: newJobOffer.CargoWeight,\r\n        LoadingPlace: newJobOffer.LoadingPlace,\r\n        UnloadingPlace: newJobOffer.UnloadingPlace,\r\n        LoadingDate: newJobOffer.LoadingDate,\r\n        LoadingTime: newJobOffer.LoadingTime,\r\n        EntryExit: newJobOffer.EntryExit,\r\n        Price: newJobOffer.Price,\r\n        AcceptedDelay: newJobOffer.AcceptedDelay,\r\n        JobOfferType: newJobOffer.JobOfferType\r\n    }, {\r\n        headers: { Authorization: `JWT ${newJobOffer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateJobOffer\r\nexport const updateJobOffer = async updatedJobOffer => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/updateJobOffer`, {\r\n        JobOfferID: updatedJobOffer.JobOfferID,\r\n        TripType: updatedJobOffer.TripType,\r\n        CargoType: updatedJobOffer.CargoType,\r\n        CargoWeight: updatedJobOffer.CargoWeight,\r\n        LoadingPlace: updatedJobOffer.LoadingPlace,\r\n        UnloadingPlace: updatedJobOffer.UnloadingPlace,\r\n        LoadingDate: updatedJobOffer.LoadingDate,\r\n        LoadingTime: updatedJobOffer.LoadingTime,\r\n        EntryExit: updatedJobOffer.EntryExit,\r\n        Price: updatedJobOffer.Price,\r\n        AcceptedDelay: updatedJobOffer.AcceptedDelay,\r\n        JobOfferType: updatedJobOffer.JobOfferType\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedJobOffer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deleteJobOffer\r\nexport const deleteJobOffer = async discardedJobOffer => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}traders/deleteJobOffer...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}traders/deleteJobOffer`, {\r\n        JobOfferID: discardedJobOffer.JobOfferID\r\n    }, {\r\n        headers: { Authorization: `JWT ${discardedJobOffer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addATraderRequest\r\nexport const addTraderRequest = async newTraderReqeust => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/addTraderRequest...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addTraderRequest`, {\r\n        JobRequestID: newTraderReqeust.JobRequestID,\r\n        CargoType: newTraderReqeust.CargoType,\r\n        CargoWeight: newTraderReqeust.CargoWeight,\r\n        LoadingDate: newTraderReqeust.LoadingDate,\r\n        LoadingTime: newTraderReqeust.LoadingTime,\r\n        EntryExit: newTraderReqeust.EntryExit,\r\n        AcceptedDelay: newTraderReqeust.AcceptedDelay\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTraderReqeust.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};","export const Required = {\r\n    paddingLeft: \"5px\",\r\n    fontWeight: \"bold\",\r\n};\r\n\r\nexport const SelectOptionStyle = {\r\n    maxWidth: \"296px\",\r\n};\r\n\r\nexport const PreloaderScreen = {\r\n    background: \"rgba(0, 0, 0, 0.8)\",\r\n    position: \"fixed\",\r\n    zIndex: \"10\",\r\n    top: \"0px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n    height: \"100%\"\r\n};\r\n\r\nexport default {\r\n    Required,\r\n    SelectOptionStyle,\r\n    PreloaderScreen\r\n};","import React, { Component } from \"react\";\r\nimport { PreloaderScreen } from \"../styles/MiscellaneousStyles\";\r\n\r\nclass Preloader extends Component {\r\n    render() {\r\n        return (\r\n            <div style={PreloaderScreen}>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                    <img src=\"./images/preloader.gif\" alt=\"preloader.gif\" height=\"200\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Preloader;","export const LoginCardBack = {\r\n    backgroundImage: \"url(/images/login_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n};\r\n\r\nexport const RegisterCardBack = {\r\n    backgroundImage: \"url(/images/signup_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n};\r\n\r\nexport const EmailConfirmationCardBack = {\r\n    backgroundImage: \"url(/images/passcode_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n};\r\n\r\nexport const AccountSetupCardBack = {\r\n    backgroundImage: \"url(/images/create_account_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n};\r\n\r\nexport const CongratulationsCardBack = {\r\n    backgroundImage: \"url(/images/congrats_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n};\r\n\r\nexport const Card = {\r\n    backgroundColor: \"rgba(229, 229, 229, 0.8)\",\r\n    height: \"auto\",\r\n    width: \"350px\",\r\n    padding: \"30px\",\r\n    alignContent: \"center\",\r\n    boxShadow: \"0 6px 6px rgba(0, 0, 0, 0.6)\",\r\n};\r\n\r\nexport const CardLarge = {\r\n    backgroundColor: \"rgba(229, 229, 229, 0.8)\",\r\n    height: \"auto\",\r\n    padding: \"30px\",\r\n    alignContent: \"center\",\r\n    boxShadow: \"0 6px 6px rgba(0, 0, 0, 0.6)\",\r\n};\r\n\r\nexport const CardXLarge = {\r\n    backgroundColor: \"rgba(229, 229, 229, 0.8)\",\r\n    height: \"auto\",\r\n    width: \"60%\",\r\n    margin: \"50px\",\r\n    boxShadow: \"0 6px 6px rgba(0, 0, 0, 0.6)\",\r\n};\r\n\r\nexport const CardChild = {\r\n    width: \"100%\",\r\n};\r\n\r\nexport const CardTitle = {\r\n    paddingTop: \"10px\",\r\n};\r\n\r\nexport default {\r\n    LoginCardBack,\r\n    RegisterCardBack,\r\n    EmailConfirmationCardBack,\r\n    AccountSetupCardBack,\r\n    CongratulationsCardBack,\r\n    Card,\r\n    CardLarge,\r\n    CardXLarge,\r\n    CardChild,\r\n    CardTitle,\r\n};","import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { loginDriver } from \"../drivers/DriverFunctions\";\r\nimport { loginTrader } from \"../traders/TraderFunctions\";\r\nimport Preloader from \"../../controls/Preloader\";\r\n\r\nimport {\r\n    LoginCardBack,\r\n    Card,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            EmailOrUsername: \"\",\r\n            Password: \"\",\r\n            SignInAs: \"Driver\",\r\n\r\n            ValidEmailOrUsername: false,\r\n            ValidPassword: false,\r\n\r\n            ValidForm: false,\r\n            LoggedInAsDriver: false,\r\n            LoggedInAsTrader: false,\r\n            LoginError: null,\r\n\r\n            Errors: {\r\n                EmailOrUsername: \"\",\r\n                Password: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value }, () => {\r\n            this.validateField(name, value)\r\n        });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidEmailOrUsername = this.state.ValidEmailOrUsername;\r\n        let ValidPassword = this.state.ValidPassword;\r\n\r\n        switch (field) {\r\n            case \"EmailOrUsername\":\r\n                ValidEmailOrUsername = (value !== \"\");\r\n                Errors.EmailOrUsername = ValidEmailOrUsername ? \"\" : \"Email or username is required.\";\r\n                break;\r\n            case \"Password\":\r\n                ValidPassword = (value != \"\");\r\n                Errors.Password = ValidPassword ? \"\" : \"Password is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidEmailOrUsername: ValidEmailOrUsername,\r\n            ValidPassword: ValidPassword\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidEmailOrUsername &&\r\n                    this.state.ValidPassword\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        await event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const user = {\r\n            EmailOrUsername: this.state.EmailOrUsername,\r\n            Password: this.state.Password,\r\n            SignInAs: this.state.SignInAs,\r\n        };\r\n\r\n        if (this.state.SignInAs === \"Driver\") {\r\n            console.log(\"logging in as Driver...\");\r\n\r\n            await loginDriver(user).then(response => {\r\n                console.log(response);\r\n                if (response.Message === \"Login successful.\") {\r\n                    localStorage.setItem(\"Token\", response.Token);\r\n\r\n                    this.setState({\r\n                        LoggedInAsDriver: true,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        LoginError: <div>\r\n                            <label className=\"control-label text-danger\">{response.Message}</label>\r\n                            <br />\r\n                        </div>,\r\n                        Preloader: null,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            console.log(\"Logging in as Trader or Broker...\");\r\n\r\n            await loginTrader(user).then(response => {\r\n                if (response.Message === \"Login successful.\") {\r\n                    localStorage.setItem(\"Token\", response.Token);\r\n\r\n                    this.setState({\r\n                        LoggedInAsTrader: true,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        LoginError: <div>\r\n                            <label className=\"control-label text-danger\">{response.Message}</label>\r\n                            <br />\r\n                        </div>,\r\n                        Preloader: null,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.LoggedInAsDriver) {\r\n            return <Redirect to={\"/drivers\"} />;\r\n        }\r\n        else if (this.state.LoggedInAsTrader) {\r\n            return <Redirect to={\"/traders\"} />;\r\n        }\r\n        else {\r\n            return <div>\r\n                <div className=\"middle\" style={LoginCardBack}>\r\n                    <div className=\"theme-default animated fadeIn\" style={Card} >\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/login.png\" alt=\"Login.png\" height=\"60\" />\r\n                            <div className=\"type-h3\" style={CardTitle}>Sign In</div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"EmailOrUsername\" className=\"control-label\">Email or Username</label>\r\n                                    <input type=\"email\" className=\"form-control\" name=\"EmailOrUsername\" placeholder=\"someone@provider.com\"\r\n                                        value={this.state.EmailOrUsername} onChange={this.onChange} />\r\n                                    <span className=\"text-danger\">{this.state.Errors.EmailOrUsername}</span>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"Password\" className=\"control-label\">Password</label>\r\n                                    <input type=\"password\" className=\"form-control\" name=\"Password\" placeholder=\"Password\"\r\n                                        value={this.state.Password} onChange={this.onChange} />\r\n                                    <span className=\"text-danger\">{this.state.Errors.Password}</span>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"control-label\">Sign In As</label>\r\n                                    <div className=\"dropdown\" style={{ width: \"100%\" }}>\r\n                                        <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                            <span>{this.state.SignInAs}</span>\r\n                                            <span className=\"caret\"></span>\r\n                                        </button>\r\n                                        <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                            <li><Link onClick={e => { this.state.SignInAs = \"Driver\" }} onChange={this.onChange}>Driver</Link></li>\r\n                                            <li><Link onClick={e => { this.state.SignInAs = \"Trader\" }} onChange={this.onChange}>Trader</Link></li>\r\n                                            <li><Link onClick={e => { this.state.SignInAs = \"Broker\" }} onChange={this.onChange}>Broker</Link></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    {this.state.LoginError}\r\n                                    <label className=\"control-label\"><Link to=\"/\">Forgot password</Link></label>\r\n                                    <br />\r\n                                    <label className=\"control-label\">No account? <span><Link to=\"/register\">Register now</Link></span></label>\r\n                                </div>\r\n                                <div>\r\n                                    <input type=\"submit\" value=\"Sign In\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.Preloader}\r\n            </div>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default Login;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { registerDriver } from \"../drivers/DriverFunctions\";\r\nimport { registerTrader } from \"../traders/TraderFunctions\"\r\nimport Strings from \"../../res/strings\";\r\nimport { Required } from \"../../styles/MiscellaneousStyles\";\r\n\r\nimport {\r\n    RegisterCardBack,\r\n    Card,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            Email: \"\",\r\n            Password: \"\",\r\n            ConfirmPassword: \"\",\r\n            RegisterAs: \"Driver\",\r\n            NullError: false,\r\n\r\n            PasswordsMatched: false,\r\n            UsernameOrEmailTaken: false,\r\n            ValidEmail: false,\r\n            ValidPassword: false,\r\n            ValidForm: false,\r\n            Agreed: false,\r\n\r\n            Errors: {\r\n                Email: \"\",\r\n                Password: \"\",\r\n                ConfirmPassword: \"\",\r\n                Agreed: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let fieldValidationErrors = this.state.Errors;\r\n        let ValidEmail = this.state.ValidEmail;\r\n        let ValidPassword = this.state.ValidPassword;\r\n        let PasswordsMatched = this.state.PasswordsMatched;\r\n        let Agreed = this.state.Agreed;\r\n\r\n        switch (field) {\r\n            case \"Email\":\r\n                ValidEmail = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n                fieldValidationErrors.Email = ValidEmail ? \"\" : \"Email is invalid.\";\r\n                break;\r\n            case \"Password\":\r\n                ValidPassword = value.length >= 6;\r\n                fieldValidationErrors.Password = ValidPassword ? \"\" : \"Password is too short.\";\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                PasswordsMatched = this.state.Password === value;\r\n                fieldValidationErrors.ConfirmPassword = PasswordsMatched ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n            case \"IsAgree\":\r\n                Agreed = this.refs.agreementCheckBox.checked;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: fieldValidationErrors,\r\n            ValidEmail: ValidEmail,\r\n            ValidPassword: ValidPassword,\r\n            PasswordsMatched: PasswordsMatched,\r\n            Agreed: Agreed,\r\n        }, this.validateForm);\r\n    }\r\n\r\n    validateForm() {\r\n        this.setState({\r\n            ValidForm: this.state.ValidEmail &&\r\n                this.state.ValidPassword &&\r\n                this.state.PasswordsMatched &&\r\n                this.state.Agreed\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.Username === \"\" ||\r\n            this.state.Email === \"\" ||\r\n            this.state.Password === \"\" ||\r\n            this.state.ConfirmPassword === \"\") {\r\n\r\n            this.setState({\r\n                NullError: true,\r\n                UsernameOrEmailTaken: false,\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const newCredentials = {\r\n            Username: this.state.Username,\r\n            Password: this.state.Password,\r\n            Email: this.state.Email,\r\n            RegisterAs: this.state.RegisterAs,\r\n        }\r\n\r\n        if (newCredentials.RegisterAs == \"Driver\") {\r\n            await registerDriver(newCredentials).then(response => {\r\n                if (response && localStorage.newCredentialsToken) {\r\n                    this.props.history.push(\"/emailConfirmation\");\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        NullError: false,\r\n                        UsernameOrEmailTaken: true,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else if (newCredentials.RegisterAs == \"Trader\" || newCredentials.RegisterAs == \"Broker\") {\r\n            console.log(\"Seting up resources for new trader or broker...\");\r\n            await registerTrader(newCredentials).then(response => {\r\n                if (response && localStorage.newCredentialsToken) {\r\n                    this.props.history.push(\"/emailConfirmation\");\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        NullError: false,\r\n                        UsernameOrEmailTaken: true,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"middle\" style={RegisterCardBack}>\r\n                    <div class=\"theme-default animated fadeIn\" style={Card}>\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/signup.png\" alt=\"signup.png\" height=\"60\" />\r\n                            <div class=\"type-h3\" style={CardTitle}>Sign Up</div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"Username\" class=\"control-label\">Username</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"Username\" type=\"text\" name=\"Username\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Username} onChange={this.onChange} required />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"Email\" class=\"control-label\">Email</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"Email\" type=\"email\" name=\"Email\" class=\"form-control\" placeholder=\"someone@example.com\" autocomplete=\"off\"\r\n                                        value={this.state.Email} onChange={this.onChange} />\r\n                                    <span class=\"text-danger\">{this.state.Errors[\"Email\"]}</span>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"Password\" class=\"control-label\">Password</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"Password\" type=\"password\" name=\"Password\" class=\"form-control\"\r\n                                        value={this.state.Password} onChange={this.onChange} />\r\n                                    <span class=\"text-danger\">{this.state.Errors[\"Password\"]}</span>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"ConfirmPassword\" class=\"control-label\">Confirm Password</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"ConfirmPassword\" type=\"password\" name=\"ConfirmPassword\" class=\"form-control\"\r\n                                        value={this.state.ConfirmPassword} onChange={this.onChange} />\r\n                                    <span class=\"text-danger\">{this.state.Errors[\"ConfirmPassword\"]}</span>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"control-label\">Register As</label>\r\n                                    <div class=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                        <button id=\"example-dropdown\" class=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                            <span>{this.state.RegisterAs}</span>\r\n                                            <span class=\"caret\"></span>\r\n                                        </button>\r\n                                        <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                            <li><Link onClick={e => { this.state.RegisterAs = \"Driver\" }} onChange={this.onChange}>Driver</Link></li>\r\n                                            <li><Link onClick={e => { this.state.RegisterAs = \"Trader\" }} onChange={this.onChange}>Trader</Link></li>\r\n                                            <li><Link onClick={e => { this.state.RegisterAs = \"Broker\" }} onChange={this.onChange}>Broker</Link></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div class=\"checkbox\">\r\n                                        <label class=\"control-label\">\r\n                                            <input ref=\"agreementCheckBox\" type=\"checkbox\" name=\"IsAgree\" value=\"\" onChange={this.onChange}></input>\r\n                                            <span>Agree with our </span>\r\n                                            <span>\r\n                                                <Link data-toggle=\"modal\" data-target=\"#terms\">Terms and Conditions</Link>\r\n                                            </span>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    {this.state.NullError &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">All fields are required.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                    {this.state.UsernameOrEmailTaken &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">Username or email is already taken.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                    {this.state.AgreementError &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">You must agree to our terms and conditions.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n\r\n                                    <label class=\"control-label\">Have an account? <span><Link to=\"/login\">Sign In Now!</Link></span></label>\r\n                                </div>\r\n                                <input type=\"submit\" value=\"Next\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"modal\" id=\"terms\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content animated fadeIn\">\r\n                            <div class=\"modal-header\">\r\n                                <h4 class=\"modal-title\" id=\"modal-sample-label\">Terms of Use</h4>\r\n                            </div>\r\n                            <div class=\"modal-body text-justify\">\r\n                                Your privacy is important to us. <span>{Strings.APP_NAME}</span>'s Privacy Statement describes the types of data we collect from you, how we use your Data, and the legal bases we have to process your Data. The Privacy Statement also describes how {String.APP_NAME} uses your content, which is information submitted by you to {Strings.APP_NAME} via the Services. Where processing is based on consent and to the extent permitted by law, by agreeing to these Terms, you consent to {Strings.APP_NAME}� collection, use and disclosure of your content and data as described in the privacy statement. In some cases, we will provide separate notice and request your consent as referenced in the privacy statement.\r\n                                </div>\r\n                            <div class=\"modal-footer\">\r\n                                <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Ok</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Register;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\"; \r\nimport { Required } from \"../../styles/MiscellaneousStyles\";\r\n\r\nimport {\r\n    EmailConfirmationCardBack,\r\n    Card,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass EmailConfirmation extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            ConfirmationCode: 0,\r\n            NullError: false,\r\n            InvalidCodeError: false,\r\n            Errors: {}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        const code = jwt_decode(localStorage.newCredentialsToken).Code; \r\n\r\n        if (this.state.ConfirmationCode === \"\") {\r\n\r\n            this.setState({\r\n                NullError: true,\r\n                InvalidCodeError: false,\r\n            });\r\n\r\n            return;\r\n        }\r\n        else if (this.state.ConfirmationCode != code) {\r\n\r\n            this.setState({\r\n                NullError: false,\r\n                InvalidCodeError: true,\r\n            });\r\n\r\n            return;\r\n        }\r\n        else {\r\n            localStorage.setItem(\"verifiedCredentialsToken\", localStorage.newCredentialsToken);\r\n            localStorage.removeItem(\"newCredentialsToken\");\r\n            this.props.history.push(\"/setupAccount\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.newCredentialsToken) {\r\n            this.props.history.push(\"/register\");\r\n            return <a />\r\n        }\r\n        else {\r\n            return (\r\n                <div class=\"middle\" style={EmailConfirmationCardBack}>\r\n                    <div class=\"theme-default animated fadeIn\" style={Card}>\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/passcode.png\" alt=\"passcode.png\" height=\"60\" />\r\n                            <div class=\"type-h3\" style={CardTitle}>Email Confirmation</div>\r\n                            <div class=\"type-sh3\">We delivered a confirmation code to your email.</div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"ConfirmationCode\" class=\"control-label\">Confirmation Code</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"ConfirmationCode\" type=\"text\" name=\"ConfirmationCode\" class=\"form-control\"\r\n                                        value={this.state.ConfirmationCode} onChange={this.onChange} />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    {this.state.NullError &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">Confirmation code is required.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                    {this.state.InvalidCodeError &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">Invalid code.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <input type=\"submit\" value=\"Next\" class=\"btn btn-primary\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport default EmailConfirmation;","import React, { Component } from \"react\";\r\nimport { setupDriverAccount } from \"../drivers/DriverFunctions\";\r\nimport { setupTraderAccount } from \"../traders/TraderFunctions\";\r\nimport { Required } from \"../../styles/MiscellaneousStyles\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport {\r\n    AccountSetupCardBack,\r\n    CardLarge,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass AccountSetup extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            Email: \"\",\r\n            Password: \"\",\r\n            RegisterAs: \"\",\r\n\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            DateOfBirth: \"\",\r\n            Gender: \"Male\",\r\n            Nationality: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n\r\n            ValidFirstName: false,\r\n            ValidLastName: false,\r\n            ValidDateOfBirth: false,\r\n            ValidNationality: false,\r\n            ValidAddress: false,\r\n            ValidPhoneNumber: false,\r\n\r\n            ValidForm: false,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                DateOfBirth: \"\",\r\n                Nationality: \"\",\r\n                Address: \"\",\r\n                PhoneNumber: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFirstName = this.state.ValidFirstName;\r\n        let ValidLastName = this.state.ValidLastName;\r\n        let ValidDateOfBirth = this.state.ValidDateOfBirth;\r\n        let ValidNationality = this.state.ValidNationality;\r\n        let ValidAddress = this.state.ValidAddress;\r\n        let ValidPhoneNumber = this.state.ValidPhoneNumber;\r\n\r\n        switch (field) {\r\n            case \"FirstName\":\r\n                ValidFirstName = ((value !== \"\") &&\r\n                    (value.match(/^[a-zA-Z ]+$/)));\r\n                Errors.FirstName = ValidFirstName ? \"\" : \"First name is invalid.\";\r\n                break;\r\n            case \"LastName\":\r\n                ValidLastName = ((value !== \"\") &&\r\n                    (value.match(/^[a-zA-Z ]+$/)));\r\n                Errors.LastName = ValidLastName ? \"\" : \"Last name is invalid.\";\r\n                break;\r\n            case \"DateOfBirth\":\r\n                ValidDateOfBirth = (new Date(value) < new Date());\r\n                Errors.DateOfBirth = ValidDateOfBirth ? \"\" : \"Your Birthday must be earlier than today.\";\r\n                break;\r\n            case \"Nationality\":\r\n                ValidNationality = ((value !== \"\") &&\r\n                    (value.match(/^[a-zA-Z ]+$/)));\r\n                Errors.Nationality = ValidNationality ? \"\" : \"Nationality is invalid.\";\r\n                break;\r\n            case \"Address\":\r\n                ValidAddress = (value !== \"\");\r\n                Errors.Address = ValidAddress ? \"\" : \"Address is required.\";\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = value.match(/^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/);\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFirstName: ValidFirstName,\r\n            ValidLastName: ValidLastName,\r\n            ValidDateOfBirth: ValidDateOfBirth,\r\n            ValidNationality: ValidNationality,\r\n            ValidAddress: ValidAddress,\r\n            ValidPhoneNumber: ValidPhoneNumber\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidFirstName &&\r\n                    this.state.ValidLastName &&\r\n                    this.state.ValidDateOfBirth &&\r\n                    this.state.ValidNationality &&\r\n                    this.state.ValidAddress &&\r\n                    this.state.ValidPhoneNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (localStorage.verifiedCredentialsToken) {\r\n            const decoded = jwt_decode(localStorage.verifiedCredentialsToken);\r\n            this.state.Username = decoded.Username;\r\n            this.state.Email = decoded.Email;\r\n            this.state.Password = decoded.Password;\r\n            this.state.RegisterAs = decoded.RegisterAs;\r\n        }\r\n\r\n        const newUser = {\r\n            Username: this.state.Username,\r\n            Email: this.state.Email,\r\n            Password: this.state.Password,\r\n            RegisterAs: this.state.RegisterAs,\r\n            FirstName: this.state.FirstName,\r\n            LastName: this.state.LastName,\r\n            DateOfBirth: this.state.DateOfBirth,\r\n            Gender: this.state.Gender,\r\n            Address: this.state.Address,\r\n            PhoneNumber: this.state.PhoneNumber,\r\n            Nationality: this.state.Nationality,\r\n        }\r\n\r\n        if (newUser.RegisterAs == \"Driver\") {\r\n            await setupDriverAccount(newUser).then(response => {\r\n                localStorage.removeItem(\"verifiedCredentialsToken\");\r\n                localStorage.setItem(\"IsCreatedSuccessfully\", true);\r\n                this.props.history.push(\"/congratulations\");\r\n            });\r\n        }\r\n        if (newUser.RegisterAs == \"Trader\" || newUser.RegisterAs == \"Broker\") {\r\n            await setupTraderAccount(newUser).then(response => {\r\n                localStorage.removeItem(\"verifiedCredentialsToken\");\r\n                localStorage.setItem(\"IsCreatedSuccessfully\", true);\r\n                this.props.history.push(\"/congratulations\");\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.verifiedCredentialsToken) {\r\n            this.props.history.push(\"/register\");\r\n            return <a />\r\n        }\r\n        else {\r\n            return (\r\n                <div class=\"middle\" style={AccountSetupCardBack}>\r\n                    <div class=\"theme-default animated fadeIn\" style={CardLarge}>\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/create_account.png\" atl=\"create_account.png\" height=\"60\" />\r\n                            <div class=\"type-h3\" style={CardTitle}>\r\n                                Create Account\r\n                                </div>\r\n                            <div class=\"type-sh3\">\r\n                                Just one more step, and you're done!\r\n                                </div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-8\">\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"FirstName\" class=\"control-label\">First Name</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"FirstName\" autocomplete=\"off\"\r\n                                                value={this.state.FirstName} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.FirstName}</span>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"LastName\" class=\"control-label\">Last Name</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"LastName\" autocomplete=\"off\"\r\n                                                value={this.state.LastName} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.LastName}</span>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"DateOfBirth\" class=\"control-label\">Date of Birth</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"date\" class=\"form-control\" name=\"DateOfBirth\" autocomplete=\"off\"\r\n                                                value={this.state.DateOfBirth} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.DateOfBirth}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-8\">\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"Gender\" class=\"control-label\">Gender</label>\r\n                                            <div class=\"dropdown\" style={{ width: \"193px\", maxWidth: \"296px\", }}>\r\n                                                <button id=\"example-dropdown\" class=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                    aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                    <span>{this.state.Gender}</span>\r\n                                                    <span class=\"caret\"></span>\r\n                                                </button>\r\n                                                <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                    <li><a onClick={() => { this.setState({ Gender: \"Male\" }); }}>Male</a></li>\r\n                                                    <li><a onClick={() => { this.setState({ Gender: \"Female\" }); }}>Female</a></li>\r\n                                                </ul>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"Nationality\" class=\"control-label\">Nationality</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"Nationality\" autocomplete=\"off\"\r\n                                                value={this.state.Nationality} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.Nationality}</span>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"PhoneNumber\" class=\"control-label\">Phone Number</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autocomplete=\"off\"\r\n                                                placeholder=\"+XXXXXXXXXXXX\" value={this.state.PhoneNumber} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.PhoneNumber}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-8\">\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"Address\" class=\"control-label\">Address</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <textarea class=\"form-control\" rows=\"5\" name=\"Address\" autocomplete=\"off\"\r\n                                                value={this.state.Address} onChange={this.onChange}></textarea>\r\n                                            <span class=\"text-danger\">{this.state.Errors.Address}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"submit\" value=\"Create\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport default AccountSetup;","import React, { Component } from \"react\";\r\nimport { CongratulationsCardBack, CardXLarge } from \"../../styles/CardStyles\";\r\n\r\nclass EmailConfirmation extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n        localStorage.removeItem(\"IsCreatedSuccessfully\");\r\n        this.props.history.push(\"/login\");\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.IsCreatedSuccessfully) {\r\n            this.props.history.push(\"/register\");\r\n            return <a />\r\n        }\r\n        else {\r\n            return (\r\n                <div class=\"middle\" style={CongratulationsCardBack}>\r\n                    <div class=\"jumbotron theme-default animated fadeIn\" style={CardXLarge}>\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                    <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        alt=\"congrats.png\" src=\"./images/congrats.png\" data-source-index=\"2\" />\r\n                                </div>\r\n                                <div class=\"col-md-12 col-md-pull-12\">\r\n                                    <div class=\"type-h3\">Congratulations</div>\r\n                                    <div class=\"type-sh3\">Your account has been created successfully.</div>\r\n                                    <br />\r\n                                    <form noValidate onSubmit={this.onSubmit}>\r\n                                        <input type=\"submit\" value=\"Sign In\" class=\"btn btn-primary\" />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>);\r\n        }\r\n    }\r\n};\r\n\r\nexport default EmailConfirmation;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { getData, uploadDriverProfilePhoto } from \"../../DriverFunctions\";\r\nimport Strings from \"../../../../res/strings\";\r\n\r\nclass ProfilePhoto extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Image: null,\r\n            PhotoURL: \"./images/defaultProfilePhoto.png\",\r\n            UploadProgress: null\r\n        };\r\n\r\n        this.onImageUpload = this.onImageUpload.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"ProfilePhoto\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Profile photo found.\") {\r\n                    let profilePhoto = response.ProfilePhoto;\r\n\r\n                    this.setState({\r\n                        PhotoURL: profilePhoto.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.state({\r\n                        PhotoURL: \"./images/defaultProfilePhoto.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onImageUpload = async event => {\r\n        this.state.Image = event.target.files[0];\r\n        const formData = new FormData();\r\n\r\n        try {\r\n            formData.append(\"Image\", this.state.Image, this.state.Image.name);\r\n\r\n            await axios.post(Strings.IMAGE_UPLOADER, formData, {\r\n                onUploadProgress: event => {\r\n                    this.setState({\r\n                        UploadProgress: <div className=\"progress-bar\">\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                        </div>\r\n                    });\r\n                }\r\n            }).then(async response => {\r\n                response = response.data;\r\n\r\n                if (response.message === \"Image uploaded successfully.\") {\r\n                    const driverProfilePhoto = {\r\n                        Token: localStorage.Token,\r\n                        PhotoURL: response.imageUrl,\r\n                        FileName: response.filename\r\n                    };\r\n\r\n                    let photoURL = response.imageUrl;\r\n\r\n                    await uploadDriverProfilePhoto(driverProfilePhoto).then(response => {\r\n                        if (response.Message === \"Profile photo is updated.\" ||\r\n                            response.Message === \"Profile photo is added.\") {\r\n\r\n                            this.setState({\r\n                                PhotoURL: photoURL,\r\n                                UploadProgress: null\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }).catch(() => {\r\n                this.setState({\r\n                    ImageURL: \"./images/defaultProfilePhoto.png\",\r\n                    UploadProgress: null\r\n                });\r\n            });\r\n        }\r\n        catch (exception) {\r\n            this.setState({\r\n                UploadProgress: null\r\n            });\r\n\r\n            return;\r\n        }\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <input type=\"file\" onChange={this.onImageUpload} style={{ display: \"none\", }} ref={fileInput => this.fileInput = fileInput} />\r\n            <figure className=\"media\">\r\n                <div className=\"media-img media-img-has-play ratio-movie\" style={{\r\n                    width: \"200px\",\r\n                    height: \"200px\",\r\n                    border: \"0px\",\r\n                    padding: \"0px\",\r\n                    border: \"5px solid #3A3A3C\"\r\n                }}>\r\n                    <a href=\"#\" onClick={() => this.fileInput.click()}>\r\n                        <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                            src={this.state.PhotoURL} alt=\"profile_photo.png\" />\r\n                        <i className=\"glyph glyph-edit\"></i>\r\n                    </a>\r\n                </div>\r\n            </figure>\r\n            {this.state.UploadProgress}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ProfilePhoto;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Strings from \"../res/strings\";\r\n\r\nclass ImageUploader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Image: null,\r\n            UploadProgress: null,\r\n        };\r\n\r\n        this.onImageUpload = this.onImageUpload.bind(this);\r\n    }\r\n\r\n    onImageUpload = event => {\r\n        this.state.Image = event.target.files[0];\r\n\r\n        if (this.state.Image) {\r\n            let mimeType = this.state.Image.type;\r\n\r\n            if (!mimeType.startsWith(\"image\")) {\r\n                this.props.OnInvalidImageSelected();\r\n                return;\r\n            }\r\n        }\r\n\r\n        const formData = new FormData();\r\n\r\n        try {\r\n            formData.append(\"Image\", this.state.Image, this.state.Image.name);\r\n        }\r\n        catch (exception) {\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        axios.post(Strings.IMAGE_UPLOADER, formData, {\r\n            onUploadProgress: event => {\r\n                this.setState({\r\n                    UploadProgress: (\r\n                        <div className=\"progress-bar\">\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                        </div>\r\n                    ),\r\n                });\r\n            }\r\n        }).then(async response => {\r\n            this.props.OnImageUploaded(response.data);\r\n\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n        }).catch((error) => {\r\n            this.props.OnImageUploaded(error);\r\n\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async e => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"file\" onChange={this.onImageUpload} style={{ display: \"none\", }} ref={fileInput => this.fileInput = fileInput} />\r\n                <figure className=\"media\">\r\n                    <div className=\"media-img media-img-has-play ratio-movie\" style={{\r\n                        width: this.props.Width,\r\n                        height: this.props.Height,\r\n                        border: \"0px\",\r\n                        padding: \"0px\",\r\n                        border: \"5px solid #3A3A3C\"\r\n                    }}>\r\n                        <a onClick={() => this.fileInput.click()}>\r\n                            <img src={this.props.Source} alt=\"dafault-image.png\" />\r\n                            <i className=\"glyph glyph-edit\"></i>\r\n                        </a>\r\n                    </div>\r\n                </figure>\r\n                {this.state.UploadProgress}\r\n            </div>\r\n                \r\n        );\r\n    }\r\n};\r\n\r\nexport default ImageUploader;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addDrivingLicence } from \"../../../../DriverFunctions.js\";\r\n\r\nclass AddDrivingLicenceDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LicenceNumber: \"\",\r\n            Type: \"\",\r\n            ReleaseDate: new Date(),\r\n            ExpiryDate: new Date(),\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidLicenceNumber: false,\r\n            ValidType: false,\r\n            ValidReleaseDate: false,\r\n            ValidExpiryDate: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                LicenceNumber: \"\",\r\n                Type: \"\",\r\n                ReleaseDate: \"\",\r\n                ExpiryDate: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidLicenceNumber = this.state.ValidLicenceNumber;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidReleaseDate = this.state.ValidReleaseDate;\r\n        let ValidExpiryDate = this.state.ValidExpiryDate;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"LicenceNumber\":\r\n                ValidLicenceNumber = (value !== \"\");\r\n                Errors.LicenceNumber = ValidLicenceNumber ? \"\" : \"Licence number is required.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Licence type is required\";\r\n                break;\r\n            case \"ReleaseDate\":\r\n                ValidReleaseDate = (new Date(value).getTime() < new Date(this.state.ExpiryDate).getTime());\r\n                Errors.ReleaseDate = ValidReleaseDate ? \"\" : \"Release date must be earlier than Expiry date.\";\r\n                break;\r\n            case \"ExpiryDate\":\r\n                ValidExpiryDate = (new Date(value).getTime() > new Date().getTime());\r\n                Errors.ExpiryDate = ValidExpiryDate ? \"\" : \"Expiry Date must be later than today.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidLicenceNumber: ValidLicenceNumber,\r\n            ValidType: ValidType,\r\n            ValidReleaseDate: ValidReleaseDate,\r\n            ValidExpiryDate: ValidExpiryDate,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidLicenceNumber &&\r\n                        this.state.ValidType &&\r\n                        this.state.ValidReleaseDate &&\r\n                        this.state.ValidExpiryDate &&\r\n                        this.state.ValidPhotoURL,\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newDrivingLicence = {\r\n            Token: localStorage.Token,\r\n            LicenceNumber: this.state.LicenceNumber,\r\n            Type: this.state.Type,\r\n            ReleaseDate: this.state.ReleaseDate,\r\n            ExpiryDate: this.state.ExpiryDate,\r\n            PhotoURL: this.state.PhotoURL,\r\n        }\r\n\r\n        console.log(\"Going to add the Driving Licence.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addDrivingLicence(newDrivingLicence).then(response => {\r\n            if (response.Message === \"Driving Licence is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div className=\"modal\" id=\"add-driving-licence-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Add Driving Licence</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"DrivingLicence\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Licence Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"LicenceNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LicenceNumber} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LicenceNumber}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Licence Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Release Date</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"ReleaseDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ReleaseDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ReleaseDate}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Expiry Date</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"ExpiryDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ExpiryDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ExpiryDate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddDrivingLicenceDialog;","import React, { Component } from \"react\";\r\nimport AddDrivingLicenceDialog from \"./AddDrivingLicenceDialog.js\";\r\n\r\nclass AddDrivingLicenceButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddDrivingLicenceDialog: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-driving-licence-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddDrivingLicenceDialog: (<AddDrivingLicenceDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddDrivingLicenceDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />),\r\n                        });\r\n                    }}>\r\n                    <span className=\"fas fa-plus\" aria-hidden=\"true\"></span> Driving Licence\r\n                </button>\r\n                {this.state.AddDrivingLicenceDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddDrivingLicenceButton;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addEntryExitCard } from \"../../../../DriverFunctions.js\";\r\n\r\nclass AddEntryExitCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            EntryExitNumber: \"\",\r\n            Type: \"Simple\",\r\n            ReleaseDate: new Date(),\r\n            NumberOfMonths: \"\",\r\n\r\n            ValidEntryExitNumber: false,\r\n            ValidReleaseDate: false,\r\n            ValidNumberOfMonths: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                EntryExitNumber: \"\",\r\n                ReleaseDate: \"\",\r\n                NumberOfMonths: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidEntryExitNumber = this.state.ValidEntryExitNumber;\r\n        let ValidReleaseDate = this.state.ValidReleaseDate;\r\n        let ValidNumberOfMonths = this.state.ValidNumberOfMonths;\r\n\r\n        switch (field) {\r\n            case \"EntryExitNumber\":\r\n                ValidEntryExitNumber = (value !== \"\");\r\n                Errors.EntryExitNumber = ValidEntryExitNumber ? \"\" : \"Entry/exit number is required.\";\r\n                break;\r\n            case \"ReleaseDate\":\r\n                ValidReleaseDate = (new Date(value).getTime() <= new Date());\r\n                Errors.ReleaseDate = ValidReleaseDate ? \"\" : \"Release date must not be later than today.\";\r\n                break;\r\n            case \"NumberOfMonths\":\r\n                ValidNumberOfMonths = (value !== \"\");\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : \"Number of months is required.\";\r\n\r\n                if (Errors.NumberOfMonths !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNumberOfMonths = (value > 0)\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : \"Number of months must be greater than 0.\";\r\n\r\n                if (Errors.NumberOfMonths !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                let releaseDate = new Date(this.state.ReleaseDate);\r\n                let expiryDate = new Date(releaseDate.setMonth(releaseDate.getMonth() + value));\r\n\r\n                ValidNumberOfMonths = (expiryDate > new Date());\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : `Your card is expired if it is for ${value} months. Your card might be expired on ${expiryDate.toLocaleString()}`;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidEntryExitNumber: ValidEntryExitNumber,\r\n            ValidReleaseDate: ValidReleaseDate,\r\n            ValidNumberOfMonths: ValidNumberOfMonths,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidEntryExitNumber &&\r\n                        this.state.ValidReleaseDate &&\r\n                        this.state.ValidNumberOfMonths\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newEntryExitCard = {\r\n            Token: localStorage.Token,\r\n            EntryExitNumber: this.state.EntryExitNumber,\r\n            Type: this.state.Type,\r\n            ReleaseDate: this.state.ReleaseDate,\r\n            NumberOfMonths: this.state.NumberOfMonths\r\n        };\r\n\r\n        console.log(\"Going to add Entry/Exit Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addEntryExitCard(newEntryExitCard).then(response => {\r\n            if (response.Message === \"Entry/Exit card is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div className=\"modal\" id=\"add-entry-exit-card-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Add Entry/Exit Card</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Entry/Exit Number</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"EntryExitNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.EntryExitNumber} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.EntryExitNumber}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Card Type</label><br />\r\n                                                <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                    <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                        aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                        <span>{this.state.Type}</span>\r\n                                                        <span className=\"caret\"></span>\r\n                                                    </button>\r\n                                                    <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                        <li><a onClick={() => { this.setState({ Type: \"Simple\" }); }}>Simple</a></li>\r\n                                                        <li><a onClick={() => { this.setState({ Type: \"Multiple\" }); }}>Multiple</a></li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Release Date</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"date\" name=\"ReleaseDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.ReleaseDate} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.ReleaseDate}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Number of Months</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"NumberOfMonths\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.NumberOfMonths} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.NumberOfMonths}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddEntryExitCardDialog;","import React, { Component } from \"react\";\r\nimport AddEntryExitCardDialog from \"./AddEntryExitCardDialog.js\";\r\n\r\nclass AddEntryExitCardButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddEntryExitCardDialog: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-entry-exit-card-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddEntryExitCardDialog: <AddEntryExitCardDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddEntryExitCardDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />\r\n                        });\r\n                    }}>\r\n                    <span className=\"fas fa-plus\" aria-hidden=\"true\"></span> Entry/Exit Card</button>\r\n                {this.state.AddEntryExitCardDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddEntryExitCardButton;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addIdentityCard } from \"../../../../DriverFunctions.js\";\r\n\r\nclass AddIdentityCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidIDNumber: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                IDNumber: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidIDNumber = this.state.ValidIDNumber;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"IDNumber\":\r\n                ValidIDNumber = (value !== \"\");\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidIDNumber = (value >= 1000000000 && value <= 9999999999);\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number must be 10-digits long.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidIDNumber: ValidIDNumber,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidIDNumber &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newIdentityCard = {\r\n            Token: localStorage.Token,\r\n            IDNumber: this.state.IDNumber,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to add Identity Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addIdentityCard(newIdentityCard).then(response => {\r\n            if (response.Message === \"Identity card is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div className=\"modal\" id=\"add-identity-card-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Add Identity Card</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    Height=\"220px\"\r\n                                                    Width=\"220px\"\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }}\r\n                                                    ImageCategory=\"IdentityCard\" />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">ID Number</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"IDNumber\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                    value={this.state.IDNumber} onChange={this.onChange} min=\"1000000000\" max=\"9999999999\" />\r\n                                                <span className=\"text-danger\">{this.state.Errors.IDNumber}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddIdentityCardDialog;","import React, { Component } from \"react\";\r\nimport AddIdentityCardDialog from \"./AddIdentityCardDialog.js\";\r\n\r\nclass AddIdentityCardButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddIdentityCardDialog: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-identity-card-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddIdentityCardDialog: <AddIdentityCardDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddIdentityCardDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />,\r\n                        });\r\n                    }}>\r\n                    <span className=\"fas fa-plus\" aria-hidden=\"true\"></span> Identity Card</button>\r\n                {this.state.AddIdentityCardDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddIdentityCardButton;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateDrivingLicence } from \"../../../../DriverFunctions.js\";\r\n\r\nclass EditDrivingLicenceDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LicenceNumber: \"\",\r\n            Type: \"\",\r\n            ReleaseDate: new Date(),\r\n            ExpiryDate: new Date(),\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidLicenceNumber: true,\r\n            ValidType: true,\r\n            ValidReleaseDate: true,\r\n            ValidExpiryDate: true,\r\n            ValidPhotoURL: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                LicenceNumber: \"\",\r\n                Type: \"\",\r\n                ReleaseDate: \"\",\r\n                ExpiryDate: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DrivingLicence\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Driving licence found.\") {\r\n                    let drivingLicence = response.DrivingLicence;\r\n\r\n                    this.setState({\r\n                        DrivingLicenceID: drivingLicence.DrivingLicenceID,\r\n                        LicenceNumber: drivingLicence.LicenceNumber,\r\n                        Type: drivingLicence.Type,\r\n                        ReleaseDate: drivingLicence.ReleaseDate,\r\n                        ExpiryDate: drivingLicence.ExpiryDate,\r\n                        PhotoURL: drivingLicence.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DrivingLicenceID: \"\",\r\n                        LicenceNumber: \"\",\r\n                        Type: \"\",\r\n                        ReleaseDate: new Date(),\r\n                        ExpiryDate: new Date(),\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidLicenceNumber = this.state.ValidLicenceNumber;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidReleaseDate = this.state.ValidReleaseDate;\r\n        let ValidExpiryDate = this.state.ValidExpiryDate;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"LicenceNumber\":\r\n                ValidLicenceNumber = (value !== \"\");\r\n                Errors.LicenceNumber = ValidLicenceNumber ? \"\" : \"Licence number is required.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Licence type is required\";\r\n                break;\r\n            case \"ReleaseDate\":\r\n                ValidReleaseDate = (new Date(value).getTime() < new Date(this.state.ExpiryDate).getTime());\r\n                Errors.ReleaseDate = ValidReleaseDate ? \"\" : \"Release date must be earlier than Expiry date.\";\r\n                break;\r\n            case \"ExpiryDate\":\r\n                ValidExpiryDate = (new Date(value).getTime() > new Date().getTime());\r\n                Errors.ExpiryDate = ValidExpiryDate ? \"\" : \"Expiry Date must be later than today.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidLicenceNumber: ValidLicenceNumber,\r\n            ValidType: ValidType,\r\n            ValidReleaseDate: ValidReleaseDate,\r\n            ValidExpiryDate: ValidExpiryDate,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidLicenceNumber &&\r\n                        this.state.ValidType &&\r\n                        this.state.ValidReleaseDate &&\r\n                        this.state.ValidExpiryDate &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedDrivingLicence = {\r\n            Token: localStorage.Token,\r\n            LicenceNumber: this.state.LicenceNumber,\r\n            Type: this.state.Type,\r\n            ReleaseDate: this.state.ReleaseDate,\r\n            ExpiryDate: this.state.ExpiryDate,\r\n            PhotoURL: this.state.PhotoURL,\r\n        }\r\n\r\n        console.log(\"Going to update the Driving Licence.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateDrivingLicence(updatedDrivingLicence).then(response => {\r\n            if (response.Message === \"Driving Licence is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id=\"edit-driving-licence-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Driving Licence</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"DrivingLicence\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Licence Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"LicenceNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LicenceNumber} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LicenceNumber}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Licence Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Release Date</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"ReleaseDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ReleaseDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ReleaseDate}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Expiry Date</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"ExpiryDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ExpiryDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ExpiryDate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default EditDrivingLicenceDialog;","import React, { Component } from \"react\";\r\nimport EditDriverLicenceDialog from \"./EditDrivingLicenceDialog.js\";\r\nimport { getData, deleteDrivingLicence } from \"../../../../DriverFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass DrivingLicenceListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DrivingLicenceID: \"\",\r\n            LicenceNumber: \"\",\r\n            Type: \"\",\r\n            ReleaseDate: \"\",\r\n            ExpiryDate: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n            EditDrivingLicenceDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedDrivingLicence = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete Driving Licence...`);\r\n\r\n        await deleteDrivingLicence(discardedDrivingLicence).then(response => {\r\n            if (response.Message === \"Driving Licence is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DrivingLicence\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Driving licence found.\") {\r\n                    let drivingLicence = response.DrivingLicence;\r\n\r\n                    this.setState({\r\n                        DrivingLicenceID: drivingLicence.DrivingLicenceID,\r\n                        LicenceNumber: drivingLicence.LicenceNumber,\r\n                        Type: drivingLicence.Type,\r\n                        ReleaseDate: drivingLicence.ReleaseDate,\r\n                        ExpiryDate: drivingLicence.ExpiryDate,\r\n                        PhotoURL: drivingLicence.PhotoURL\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DrivingLicenceID: \"\",\r\n                        LicenceNumber: \"\",\r\n                        Type: \"\",\r\n                        ReleaseDate: \"\",\r\n                        ExpiryDate: \"\",\r\n                        PhotoURL: \"./images/default_image.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"list-items-row\">\r\n                <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#driving-licence-${this.state.DrivingLicenceID}`}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                            <i className=\"glyph glyph-add\"></i>\r\n                            <i className=\"glyph glyph-remove\"></i>\r\n                            <strong>{this.props.Index}</strong>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <img className=\"img-responsive visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                src={this.state.PhotoURL} alt=\"trailer.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>DRIVING LICENCE</span>\r\n                            </div>\r\n                            <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                <span className=\"fas fa-hashtag\" style={{ color: \"#606060\" }}></span>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Licence Number:</span> {this.state.LicenceNumber}\r\n                            </div>\r\n                            <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                <span className=\"fas fa-star-of-life\" style={{ color: \"#606060\" }}></span>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Licence Type:</span> {this.state.Type}\r\n                            </div>\r\n                            <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                <span className=\"fas fa-calendar\" style={{ color: \"#606060\" }}></span>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Release Date:</span> {this.state.ReleaseDate}\r\n                            </div>\r\n                            <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                <span className=\"fas fa-calendar\" style={{ color: \"#606060\" }}></span>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Expiry Date:</span> {this.state.ExpiryDate}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"collapse\" id={`driving-licence-${this.state.DrivingLicenceID}`}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-18 col-md-offset-2\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block\"\r\n                                src={this.state.PhotoURL} alt=\"trailer.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"col-md-4 text-right\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#edit-driving-licence-dialog\"\r\n                                onMouseDown={() => {\r\n                                    this.setState({\r\n                                        EditDrivingLicenceDialog: <EditDriverLicenceDialog\r\n                                            OnCancel={() => {\r\n                                                this.setState({\r\n                                                    EditDrivingLicenceDialog: null\r\n                                                });\r\n                                            }}\r\n                                            OnOK={cancelButton => {\r\n                                                cancelButton.click();\r\n                                                this.onComponentUpdated();\r\n                                            }} />\r\n                                    });\r\n                                }}>\r\n                                Edit\r\n                                </button>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </div>               \r\n                {this.state.Preloader}\r\n                {this.state.EditDrivingLicenceDialog}\r\n            </li>        \r\n        );\r\n    }\r\n};\r\n\r\nexport default DrivingLicenceListItem;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateEntryExitCard } from \"../../../../DriverFunctions.js\";\r\n\r\nclass EditEntryExitCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            EntryExitNumber: \"\",\r\n            Type: \"Simple\",\r\n            ReleaseDate: new Date(),\r\n            NumberOfMonths: \"\",\r\n\r\n            ValidEntryExitNumber: true,\r\n            ValidReleaseDate: true,\r\n            ValidNumberOfMonths: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                EntryExitNumber: \"\",\r\n                ReleaseDate: \"\",\r\n                NumberOfMonths: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"EntryExitCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Entry/exit card found.\") {\r\n                    let entryExitCard = response.EntryExitCard;\r\n\r\n                    this.setState({\r\n                        EntryExitNumber: entryExitCard.EntryExitNumber,\r\n                        Type: entryExitCard.Type,\r\n                        ReleaseDate: entryExitCard.ReleaseDate,\r\n                        NumberOfMonths: entryExitCard.NumberOfMonths\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        EntryExitNumber: \"\",\r\n                        Type: \"Simple\",\r\n                        ReleaseDate: new Date(),\r\n                        NumberOfMonths: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidEntryExitNumber = this.state.ValidEntryExitNumber;\r\n        let ValidReleaseDate = this.state.ValidReleaseDate;\r\n        let ValidNumberOfMonths = this.state.ValidNumberOfMonths;\r\n\r\n        switch (field) {\r\n            case \"EntryExitNumber\":\r\n                ValidEntryExitNumber = (value !== \"\");\r\n                Errors.EntryExitNumber = ValidEntryExitNumber ? \"\" : \"Entry/exit number is required.\";\r\n                break;\r\n            case \"ReleaseDate\":\r\n                ValidReleaseDate = (new Date(value).getTime() <= new Date());\r\n                Errors.ReleaseDate = ValidReleaseDate ? \"\" : \"Release date must not be later than today.\";\r\n                break;\r\n            case \"NumberOfMonths\":\r\n                ValidNumberOfMonths = (value !== \"\");\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : \"Number of months is required.\";\r\n\r\n                if (Errors.NumberOfMonths !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNumberOfMonths = (value > 0)\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : \"Number of months must be greater than 0.\";\r\n\r\n                if (Errors.NumberOfMonths !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                let releaseDate = new Date(this.state.ReleaseDate);\r\n                let expiryDate = new Date(releaseDate.setMonth(releaseDate.getMonth() + value));\r\n\r\n                ValidNumberOfMonths = (expiryDate > new Date());\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : `Your card is expired if it is for ${value} months. Your card might be expired on ${expiryDate.toLocaleString()}`;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidEntryExitNumber: ValidEntryExitNumber,\r\n            ValidReleaseDate: ValidReleaseDate,\r\n            ValidNumberOfMonths: ValidNumberOfMonths,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidEntryExitNumber &&\r\n                    this.state.ValidReleaseDate &&\r\n                    this.state.ValidNumberOfMonths\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedEntryExitCard = {\r\n            Token: localStorage.Token,\r\n            EntryExitNumber: this.state.EntryExitNumber,\r\n            Type: this.state.Type,\r\n            ReleaseDate: this.state.ReleaseDate,\r\n            NumberOfMonths: this.state.NumberOfMonths\r\n        };\r\n\r\n        console.log(\"Going to update Entry/Exit Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateEntryExitCard(updatedEntryExitCard).then(response => {\r\n            if (response.Message === \"Entry/Exit card is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal\" id=\"edit-entry-exit-card-dialog\"\r\n                tabindex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Edit Entry/Exit Card</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Entry/Exit Number</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"EntryExitNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.EntryExitNumber} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.EntryExitNumber}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Card Type</label><br />\r\n                                                <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                    <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                        aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                        <span>{this.state.Type}</span>\r\n                                                        <span className=\"caret\"></span>\r\n                                                    </button>\r\n                                                    <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                        <li><a onClick={() => {\r\n                                                            this.setState({ Type: \"Simple\" });\r\n                                                            this.validateField(\"\", \"\");\r\n                                                        }}>Simple</a></li>\r\n                                                        <li><a onClick={() => {\r\n                                                            this.setState({ Type: \"Multiple\" });\r\n                                                            this.validateField(\"\", \"\");\r\n                                                        }}>Multiple</a></li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Release Date</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"date\" name=\"ReleaseDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.ReleaseDate} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.ReleaseDate}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Number of Months</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"NumberOfMonths\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.NumberOfMonths} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.NumberOfMonths}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default EditEntryExitCardDialog;","import React, { Component } from \"react\";\r\nimport EditEntryExitCardDialog from \"./EditEntryExitCardDialog.js\";\r\nimport { getData, deleteEntryExitCard } from \"../../../../DriverFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass EntryExitCardListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            EntryExitCardID: \"\",\r\n            EntryExitNumber: \"\",\r\n            Type: \"Simple\",\r\n            ReleaseDate: \"\",\r\n            NumberOfMonths: \"\",\r\n\r\n            EditEntryExitCardDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedEntryExitCard = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete Exit/Entry card.`);\r\n\r\n        await deleteEntryExitCard(discardedEntryExitCard).then(response => {\r\n            if (response.Message === \"Entry/Exit card is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"EntryExitCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Entry/exit card found.\") {\r\n                    let entryExitCard = response.EntryExitCard;\r\n\r\n                    this.setState({\r\n                        EntryExitCardID: entryExitCard.EntryExitCardID,\r\n                        EntryExitNumber: entryExitCard.EntryExitNumber,\r\n                        Type: entryExitCard.Type,\r\n                        ReleaseDate: entryExitCard.ReleaseDate,\r\n                        NumberOfMonths: entryExitCard.NumberOfMonths,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        EntryExitCardID: \"\",\r\n                        EntryExitNumber: \"\",\r\n                        Type: \"Simple\",\r\n                        ReleaseDate: \"\",\r\n                        NumberOfMonths: \"\",\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"list-items-row\">\r\n                <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#entry-exit-card-${this.state.EntryExitCardID}`}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                            <i className=\"glyph glyph-add\"></i>\r\n                            <i className=\"glyph glyph-remove\"></i>\r\n                            <strong>{this.props.Index}</strong>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <img className=\"img-responsive visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                src=\"./images/default_image.png\" alt=\"trailer.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>ENTRY/EXIT CARD</span>\r\n                            </div>\r\n                            <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                <span className=\"fas fa-hashtag\" style={{ color: \"#606060\" }}></span>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Entry/Exit Number:</span> {this.state.EntryExitNumber}\r\n                            </div>\r\n                            <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                <span className=\"fas fa-star-of-life\" style={{ color: \"#606060\" }}></span>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Licence Type:</span> {this.state.Type}\r\n                            </div>\r\n                            <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                <span className=\"fas fa-calendar\" style={{ color: \"#606060\" }}></span>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Release Date:</span> {this.state.ReleaseDate}\r\n                            </div>\r\n                            <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                <span className=\"fas fa-calendar\" style={{ color: \"#606060\" }}></span>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Number of Months:</span> {this.state.NumberOfMonths}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"collapse\" id={`entry-exit-card-${this.state.EntryExitCardID}`}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-18 col-md-offset-2\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block\"\r\n                                src=\"./images/default_image.png\" alt=\"trailer.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"col-md-4 text-right\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#edit-entry-exit-card-dialog\"\r\n                                onMouseDown={() => {\r\n                                    this.setState({\r\n                                        EditEntryExitCardDialog: <EditEntryExitCardDialog\r\n                                            OnCancel={() => {\r\n                                                this.setState({\r\n                                                    EditEntryExitCardDialog: null\r\n                                                });\r\n                                            }}\r\n                                            OnOK={cancelButton => {\r\n                                                cancelButton.click();\r\n                                                this.onComponentUpdated();\r\n                                            }} />\r\n                                    });\r\n                                }}>\r\n                                Edit\r\n                                </button>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </div>               \r\n                {this.state.Preloader}\r\n                {this.state.EditEntryExitCardDialog}\r\n            </li>        \r\n        );\r\n    }\r\n};\r\n\r\nexport default EntryExitCardListItem;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateIdentityCard } from \"../../../../DriverFunctions.js\";\r\n\r\nclass EditIdentityCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidIDNumber: true,\r\n            ValidPhotoURL: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                IDNumber: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Identity card found.\") {\r\n                    let identityCard = response.IdentityCard;\r\n\r\n                    this.setState({\r\n                        IDNumber: identityCard.IDNumber,\r\n                        PhotoURL: identityCard.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        IDNumber: \"\",\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidIDNumber = this.state.ValidIDNumber;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"IDNumber\":\r\n                ValidIDNumber = (value !== \"\");\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidIDNumber = (value >= 1000000000 && value <= 9999999999);\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number must be 10-digits long.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidIDNumber: ValidIDNumber,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidIDNumber &&\r\n                    this.state.ValidPhotoURL\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedIdentityCard = {\r\n            Token: localStorage.Token,\r\n            IDNumber: this.state.IDNumber,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to update Identity Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateIdentityCard(updatedIdentityCard).then(response => {\r\n            if (response.Message === \"Identity card is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id=\"edit-identity-card-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Identity Card</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"IdentityCard\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">ID Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"IDNumber\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.IDNumber} onChange={this.onChange} min=\"1000000000\" max=\"99999999999\" />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.IDNumber}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default EditIdentityCardDialog;","import React, { Component } from \"react\";\r\nimport EditIdentityCardDialog from \"./EditIdentityCardDialog.js\";\r\nimport { getData, deleteIdentityCard } from \"../../../../DriverFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass IdentityCardListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IdentityCardID: \"\",\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            EditIdentityCardDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedIdentityCard = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete Identity Card.`);\r\n\r\n        await deleteIdentityCard(discardedIdentityCard).then(response => {\r\n            if (response.Message === \"Identity card is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Identity card found.\") {\r\n                    let identityCard = response.IdentityCard;\r\n\r\n                    this.setState({\r\n                        IdentityCardID: identityCard.IdentityCardID,\r\n                        IDNumber: identityCard.IDNumber,\r\n                        PhotoURL: identityCard.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        IdentityCardID: \"\",\r\n                        IDNumber: \"\",\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return <li className=\"list-items-row\">\r\n            <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#identity-card-${this.state.IdentityCardID}`}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-2\">\r\n                        <i className=\"glyph glyph-add\"></i>\r\n                        <i className=\"glyph glyph-remove\"></i>\r\n                        <strong>{this.props.Index}</strong>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <img className=\"img-responsive visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                            src={this.state.PhotoURL} alt=\"identity_card.png\" data-source-index=\"2\" style={{\r\n                                overflow: \"hidden\",\r\n                                border: \"5px solid #3A3A3C\",\r\n                                margin: \"5px\"\r\n                            }} />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                            <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>IDENTITY CARD</span>\r\n                        </div>\r\n                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                            <span className=\"fas fa-hashtag\" style={{ color: \"#606060\" }}></span>\r\n                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>ID Number:</span> {this.state.IDNumber}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`identity-card-${this.state.IdentityCardID}`}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-18 col-md-offset-2\">\r\n                        <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block\"\r\n                            src={this.state.PhotoURL} alt=\"trailer.png\" data-source-index=\"2\" style={{\r\n                                overflow: \"hidden\",\r\n                                border: \"5px solid #3A3A3C\",\r\n                                margin: \"5px\"\r\n                            }} />\r\n                    </div>\r\n                    <div className=\"col-md-4 text-right\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary\"\r\n                            data-toggle=\"modal\"\r\n                            data-target=\"#edit-identity-card-dialog\"\r\n                            onMouseDown={() => {\r\n                                this.setState({\r\n                                    EditIdentityCardDialog: (<EditIdentityCardDialog\r\n                                        OnCancel={() => {\r\n                                            this.setState({\r\n                                                EditIdentityCardDialog: null\r\n                                            });\r\n                                        }}\r\n                                        OnOK={cancelButton => {\r\n                                            cancelButton.click();\r\n                                            this.onComponentUpdated();\r\n                                        }} />)\r\n                                });\r\n                            }}>\r\n                            Edit\r\n                                </button>\r\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {this.state.Preloader}\r\n            {this.state.EditIdentityCardDialog}\r\n        </li>;\r\n    }\r\n};\r\n\r\nexport default IdentityCardListItem;","import React, { Component } from \"react\";\r\nimport AddDrivingLicenceButton from \"./drivingLicence/AddDrivingLicenceButton.js\";\r\nimport AddEntryExitCardButton from \"./entryExitCard/AddEntryExitCardButton.js\";\r\nimport AddIdentityCardButton from \"./identityCard/AddIdentityCardButton.js\";\r\nimport DrivingLicenceListItem from \"./drivingLicence/DrivingLicenceListItem.js\"; \r\nimport EntryExitCardListItem from \"./entryExitCard/EntryExitCardListItem.js\";\r\nimport IdentityCardListItem from \"./identityCard/IdentityCardListItem.js\";\r\nimport { getData } from \"../../../DriverFunctions\";\r\n\r\nclass DocumentsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddDrivingLicenceButton: null,\r\n            AddEntryExitCardButton: null,\r\n            AddIdentityCardButton: null, \r\n            DrivingLicenceListItem: null,\r\n            EntryExitCardListItem: null,\r\n            IdentityCardListItem: null,\r\n        };\r\n\r\n        this.onDocumentsUpdated = this.onDocumentsUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onDocumentsUpdated();\r\n    }\r\n\r\n    onDocumentsUpdated = () => {\r\n        let index = 0;\r\n        let drivingLicence;\r\n        let entryExitCard;\r\n        let identityCard;\r\n\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DrivingLicence\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Driving licence found.\") {\r\n                    drivingLicence = response.DrivingLicence;\r\n                }\r\n                else {\r\n                    drivingLicence = undefined;\r\n                }\r\n\r\n                request = {\r\n                    Token: localStorage.Token,\r\n                    Get: \"EntryExitCard\"\r\n                };\r\n\r\n                getData(request).then(response => {\r\n                    if (response.Message === \"Entry/exit card found.\") {\r\n                        entryExitCard = response.EntryExitCard;\r\n                    }\r\n                    else {\r\n                        entryExitCard = undefined;\r\n                    }\r\n\r\n                    request = {\r\n                        Token: localStorage.Token,\r\n                        Get: \"IdentityCard\"\r\n                    };\r\n\r\n                    getData(request).then(response => {\r\n                        if (response.Message === \"Identity card found.\") {\r\n                            identityCard = response.IdentityCard;\r\n                        }\r\n                        else {\r\n                            identityCard = undefined;\r\n                        }\r\n\r\n                        (drivingLicence) ? this.setState({\r\n                            AddDrivingLicenceButton: null,\r\n                            DrivingLicenceListItem: <DrivingLicenceListItem\r\n                                Index={++index}\r\n                                OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                        }) : this.setState({\r\n                            AddDrivingLicenceButton: <AddDrivingLicenceButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                            DrivingLicenceListItem: null\r\n                        });\r\n\r\n                        (entryExitCard) ? this.setState({\r\n                            AddEntryExitCardButton: null,\r\n                            EntryExitCardListItem: <EntryExitCardListItem\r\n                                Index={++index}\r\n                                OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                        }) : this.setState({\r\n                            AddEntryExitCardButton: <AddEntryExitCardButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                            EntryExitCardListItem: null\r\n                        });\r\n\r\n                        (identityCard) ? this.setState({\r\n                            AddIdentityCardButton: null,\r\n                            IdentityCardListItem: <IdentityCardListItem\r\n                                Index={++index}\r\n                                OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                        }) : this.setState({\r\n                            AddIdentityCardButton: <AddIdentityCardButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                            IdentityCardListItem: null\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Documents</div>\r\n                <div style={{ padding: \"10px\", backgroundColor: \"#E5E5E5\" }}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-18 col-md-offset-2\"></div>\r\n                        <div className=\"col-md-4 text-right\">\r\n                            {this.state.AddDrivingLicenceButton}\r\n                            {this.state.AddEntryExitCardButton}\r\n                            {this.state.AddIdentityCardButton}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {this.state.DrivingLicenceListItem}\r\n                    {this.state.EntryExitCardListItem}\r\n                    {this.state.IdentityCardListItem}\r\n                </ol>\r\n            </section>         \r\n        );\r\n    }\r\n};\r\n\r\nexport default DocumentsList;","import React, { Component } from \"react\";\r\nimport ProfilePhoto from \"./ProfilePhoto\";\r\nimport DocumentsList from \"./documents/DocumentsList.js\";\r\nimport { getData } from \"../../DriverFunctions.js\";\r\n\r\nclass Profile extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            Username: \"\",\r\n            Password: \"\",\r\n            Email: \"\",\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\",\r\n\r\n            WarningAlert: null,\r\n            Errors: {}\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Driver\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver found.\") {\r\n                    let driver = response.Driver;\r\n\r\n                    this.setState({\r\n                        Username: driver.Username,\r\n                        Password: driver.Password,\r\n                        Email: driver.Email,\r\n                        FirstName: driver.FirstName,\r\n                        LastName: driver.LastName,\r\n                        DateOfBirth: driver.DateOfBirth,\r\n                        Gender: driver.Gender,\r\n                        Address: driver.Address,\r\n                        PhoneNumber: driver.PhoneNumber,\r\n                        Nationality: driver.Nationality,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Username: \"\",\r\n                        Password: \"\",\r\n                        Email: \"\",\r\n                        FirstName: \"\",\r\n                        LastName: \"\",\r\n                        Address: \"\",\r\n                        PhoneNumber: \"\",\r\n                        Gender: \"\",\r\n                        Nationality: \"\",\r\n                        DateOfBirth: \"\",\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group\" style={{ marginBottom: \"5px\", }}>\r\n                                <ProfilePhoto />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-18\">\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                {this.state.FirstName + \" \" + this.state.LastName}\r\n                            </div>\r\n                            <div className=\"type-sh3\">\r\n                                <span className=\"fas fa-car\" style={{ color: \"#606060\" }}></span>   Driver\r\n                                    </div>\r\n                            <div>\r\n                                <ol className=\"list-items theme-alt\">\r\n                                    <li className=\"list-items-row\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-2\">\r\n                                                <strong><span className=\"fas fa-at\" style={{ color: \"#008575\" }}></span></strong>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Username:</a>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                {this.state.Username}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"list-items-row\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-2\">\r\n                                                <strong><span className=\"fas fa-envelope\" style={{ color: \"#008575\", }}></span></strong>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Email:</a>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                {this.state.Email}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"list-items-row\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-2\">\r\n                                                <strong><span className=\"fas fa-phone\" style={{ color: \"#008575\" }}></span></strong>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Phone Number:</a>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                {this.state.PhoneNumber}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#00221E\" }}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"type-h3\" style={{ paddingTop: \"10px\", }}>\r\n                                Details\r\n                                    </div>\r\n                            <ol className=\"list-items theme-alt\">\r\n                                <li className=\"list-items-row\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-2\">\r\n                                            <strong><span className=\"fas fa-birthday-cake\" style={{ color: \"#008575\", }}></span></strong>\r\n                                        </div>\r\n                                        <div className=\"col-md-4\">\r\n                                            <a style={{ textDecoration: \"none\", }}>Date of Birth:</a>\r\n                                        </div>\r\n                                        <div className=\"col-md-4\">\r\n                                            {this.state.DateOfBirth}\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                                <li className=\"list-items-row\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-2\">\r\n                                            {this.state.Gender === \"Male\" &&\r\n                                                <strong><span className=\"fas fa-male\" style={{ color: \"#008575\", }}></span></strong>\r\n                                            }\r\n                                            {this.state.Gender === \"Female\" &&\r\n                                                <strong><span className=\"fas fa-female\" style={{ color: \"#008575\", }}></span></strong>\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"col-md-4\">\r\n                                            <a style={{ textDecoration: \"none\", }}>Gender:</a>\r\n                                        </div>\r\n                                        <div className=\"col-md-4\">\r\n                                            {this.state.Gender}\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                                <li className=\"list-items-row\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-2\">\r\n                                            <strong><span className=\"fas fa-flag\" style={{ color: \"#008575\" }}></span></strong>\r\n                                        </div>\r\n                                        <div className=\"col-md-4\">\r\n                                            <a style={{ textDecoration: \"none\", }}>Nationality:</a>\r\n                                        </div>\r\n                                        <div className=\"col-md-4\">\r\n                                            {this.state.Nationality}\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                                <li className=\"list-items-row\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-2\">\r\n                                            <strong><span className=\"fas fa-map-marker\" style={{ color: \"#008575\" }}></span></strong>\r\n                                        </div>\r\n                                        <div className=\"col-md-4\">\r\n                                            <a style={{ textDecoration: \"none\", }}>Address:</a>\r\n                                        </div>\r\n                                        <div className=\"col-md-4\">\r\n                                            {this.state.Address}\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            </ol>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <DocumentsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Profile;","import React, { Component } from \"react\";\r\nimport { getData, updateTruck } from \"../../DriverFunctions\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\n\r\nclass TruckSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            PlateNumber: \"\",\r\n            Owner: \"\",\r\n            ProductionYear: \"\",\r\n            Brand: \"\",\r\n            Model: \"\",\r\n            Type: \"\",\r\n            MaximumWeight: \"\",\r\n\r\n            ValidPlateNumber: true,\r\n            ValidOwner: true,\r\n            ValidProductionYear: true,\r\n            ValidBrand: true,\r\n            ValidModel: true,\r\n            ValidType: true,\r\n            ValidMaximumWeight: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                PlateNumber: \"\",\r\n                Owner: \"\",\r\n                ProductionYear: \"\",\r\n                Brand: \"\",\r\n                Model: \"\",\r\n                Type: \"\",\r\n                MaximumWeight: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Truck\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Truck found.\") {\r\n                    let truck = response.Truck;\r\n\r\n                    this.setState({\r\n                        PlateNumber: truck.PlateNumber,\r\n                        Owner: truck.Owner,\r\n                        ProductionYear: truck.ProductionYear,\r\n                        Brand: truck.Brand,\r\n                        Model: truck.Model,\r\n                        Type: truck.Type,\r\n                        MaximumWeight: truck.MaximumWeight\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        PlateNumber: \"\",\r\n                        Owner: \"\",\r\n                        ProductionYear: \"\",\r\n                        Brand: \"\",\r\n                        Model: \"\",\r\n                        Type: \"\",\r\n                        MaximumWeight: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidPlateNumber = this.state.ValidPlateNumber;\r\n        let ValidOwner = this.state.ValidOwner;\r\n        let ValidProductionYear = this.state.ValidProductionYear;\r\n        let ValidBrand = this.state.ValidBrand;\r\n        let ValidModel = this.state.ValidModel;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidMaximumWeight = this.state.MaximumWeight;\r\n\r\n        switch (field) {\r\n            case \"PlateNumber\":\r\n                ValidPlateNumber = ((value !== \"\") && (value >= 1 && value <= 999));\r\n                Errors.PlateNumber = ValidPlateNumber ? \"\" : \"Plate Number must be between 001 and 999.\";\r\n                break;\r\n            case \"Owner\":\r\n                ValidOwner = (value !== \"\");\r\n                Errors.Owner = ValidOwner ? \"\" : \"Owner is required.\";\r\n                break;\r\n            case \"ProductionYear\":\r\n                let currentYear = new Date().getFullYear();\r\n                ValidProductionYear = ((value !== \"\") && (value >= 2000 && value <= currentYear));\r\n                Errors.ProductionYear = ValidProductionYear ? \"\" : `Production Year must be between 2000 and ${currentYear}`;\r\n                break;\r\n            case \"Brand\":\r\n                ValidBrand = (value !== \"\");\r\n                Errors.Brand = ValidBrand ? \"\" : \"Brand is required.\";\r\n                break;\r\n            case \"Model\":\r\n                ValidModel = (value !== \"\");\r\n                Errors.Model = ValidModel ? \"\" : \"Model is required.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required\";\r\n                break;\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n\r\n                if (Errors.MaximumWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidMaximumWeight = (value >= 700);\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum weight must be greater than 699.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPlateNumber: ValidPlateNumber,\r\n            ValidOwner: ValidOwner,\r\n            ValidProductionYear: ValidProductionYear,\r\n            ValidBrand: ValidBrand,\r\n            ValidModel: ValidModel,\r\n            ValidType: ValidType,\r\n            ValidMaximumWeight: ValidMaximumWeight\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidPlateNumber &&\r\n                    this.state.ValidOwner &&\r\n                    this.state.ValidProductionYear &&\r\n                    this.state.ValidBrand &&\r\n                    this.state.ValidModel &&\r\n                    this.state.ValidType &&\r\n                    this.state.MaximumWeight\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedTruck = {\r\n            Token: localStorage.Token,\r\n            PlateNumber: this.state.PlateNumber,\r\n            Owner: this.state.Owner,\r\n            ProductionYear: this.state.ProductionYear,\r\n            Brand: this.state.Brand,\r\n            Model: this.state.Model,\r\n            Type: this.state.Type,\r\n            MaximumWeight: this.state.MaximumWeight\r\n        };\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateTruck(updatedTruck).then(response => {\r\n            if (response.Message === \"Truck is updated.\") {\r\n                this.setState({\r\n                    Preloader: null,\r\n                    ValidForm: false\r\n                });\r\n\r\n                this.props.OnTruckSettingsUpdated();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Truck Settings</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-list-ol\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"number\" name=\"PlateNumber\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.PlateNumber} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Plate Number</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.PlateNumber}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-user\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"Owner\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Owner} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Owner</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.Owner}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-calendar-day\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"number\" name=\"ProductionYear\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.ProductionYear} onChange={this.onChange} placeholder=\"XXXX\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Production Year</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"ProductionYear\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-copyright\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"Brand\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Brand} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Brand</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.Brand}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-list-ol\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"Model\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Model} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Truck Model</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.Model}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-cog\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Type} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Truck Type</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.Type}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-weight\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"number\" name=\"MaximumWeight\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Maximum Weight (GVW)</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.MaximumWeight}</div>\r\n                            </div>\r\n                        </div>                      \r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default TruckSettings;","import React, { Component } from \"react\";\r\nimport { addTruck } from \"../../DriverFunctions\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { Required } from \"../../../../styles/MiscellaneousStyles\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader\";\r\n\r\nclass AddTruckDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PlateNumber: \"\",\r\n            Owner: \"\",\r\n            ProductionYear: \"\",\r\n            Brand: \"\",\r\n            Model: \"\",\r\n            Type: \"\",\r\n            MaximumWeight: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidPlateNumber: false,\r\n            ValidOwner: false,\r\n            ValidProductionYear: false,\r\n            ValidBrand: false,\r\n            ValidModel: false,\r\n            ValidType: false,\r\n            ValidMaximumWeight: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                PlateNumber: \"\",\r\n                Owner: \"\",\r\n                ProductionYear: \"\",\r\n                Brand: \"\",\r\n                Model: \"\",\r\n                Type: \"\",\r\n                MaximumWeight: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidPlateNumber = this.state.ValidPlateNumber;\r\n        let ValidOwner = this.state.ValidOwner;\r\n        let ValidProductionYear = this.state.ValidProductionYear;\r\n        let ValidBrand = this.state.ValidBrand;\r\n        let ValidModel = this.state.ValidModel;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidMaximumWeight = this.state.ValidMaximumWeight;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"PlateNumber\":\r\n                ValidPlateNumber = (value !== \"\");\r\n                Errors.PlateNumber = ValidPlateNumber ? \"\" : \"Plate number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPlateNumber = (value >= 100 && value <= 999);\r\n                Errors.PlateNumber = ValidPlateNumber ? \"\" : \"Plate number must be 3-digits long.\";\r\n                break;\r\n            case \"Owner\":\r\n                ValidOwner = (value !== \"\");\r\n                Errors.Owner = ValidOwner ? \"\" : \"Owner is required.\";\r\n                break;\r\n            case \"ProductionYear\":\r\n                let currentYear = new Date().getFullYear();\r\n                ValidProductionYear = ((value !== \"\") && (value >= 2000 && value <= currentYear));\r\n                Errors.ProductionYear = ValidProductionYear ? \"\" : `Production Year must be between 2000 and ${currentYear}`;\r\n                break;\r\n            case \"Brand\":\r\n                ValidBrand = (value !== \"\");\r\n                Errors.Brand = ValidBrand ? \"\" : \"Brand is required.\";\r\n                break;\r\n            case \"Model\":\r\n                ValidModel = (value !== \"\");\r\n                Errors.Model = ValidModel ? \"\" : \"Model is required.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required\";\r\n                break;\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n\r\n                if (Errors.MaximumWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidMaximumWeight = (value >= 700);\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum weight must be greater than 699.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPlateNumber: ValidPlateNumber,\r\n            ValidOwner: ValidOwner,\r\n            ValidProductionYear: ValidProductionYear,\r\n            ValidBrand: ValidBrand,\r\n            ValidModel: ValidModel,\r\n            ValidType: ValidType,\r\n            ValidMaximumWeight: ValidMaximumWeight,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidPlateNumber &&\r\n                        this.state.ValidOwner &&\r\n                        this.state.ValidProductionYear &&\r\n                        this.state.ValidBrand &&\r\n                        this.state.ValidModel &&\r\n                        this.state.ValidType &&\r\n                        this.state.ValidMaximumWeight &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newTruck = {\r\n            Token: localStorage.Token,\r\n            PlateNumber: this.state.PlateNumber,\r\n            Owner: this.state.Owner,\r\n            ProductionYear: this.state.ProductionYear,\r\n            Brand: this.state.Brand,\r\n            Model: this.state.Model,\r\n            Type: this.state.Type,\r\n            MaximumWeight: this.state.MaximumWeight,\r\n            PhotoURL: this.state.PhotoURL\r\n        }\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addTruck(newTruck).then(response => {\r\n            if (response.Message === \"Truck is added.\") {\r\n                this.props.OnOK();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal\" id=\"add-truck-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <p>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">New Truck</div>\r\n                                    <div className=\"type-sh3\">These detials will be displayed on your profile.</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <ImageUploader Source={this.state.PhotoURL}\r\n                                                    Height=\"220px\" Width=\"220px\"\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }}\r\n                                                    ImageCategory=\"Truck\" />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">                                          \r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Plate Number</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"PlateNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.PlateNumber} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.PlateNumber}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Owner</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Owner\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Owner} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Owner}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Production Year</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"ProductionYear\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.ProductionYear} onChange={this.onChange} placeholder=\"XXXX\" />\r\n                                                <span className=\"text-danger\">{this.state.Errors.ProductionYear}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Brand</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Brand\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Brand} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Brand}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Truck Model</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Model\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Model} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Model}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Truck Type</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Type} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Maximum Weight (GVW)</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"MaximumWeight\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.MaximumWeight}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\"  disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>             \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddTruckDialog;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles\";\r\nimport ImageUploader from \"../../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { addTrailer } from \"../../../DriverFunctions.js\";\r\n\r\nclass AddTrailerDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            MaximumWeight: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n            Type: \"\",\r\n\r\n            ValidMaximumWeight: false,\r\n            ValidPhotoURL: false,\r\n            ValidType: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                MaximumWeight: \"\",\r\n                PhotoURL: \"\",\r\n                Type: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidMaximumWeight = this.state.ValidMaximumWeight;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n        let ValidType = this.state.ValidType;\r\n\r\n        switch (field) {\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n\r\n                if (Errors.MaximumWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidMaximumWeight = (value >= 700);\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum weight must be greater than 699.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidMaximumWeight: ValidMaximumWeight,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n            ValidType: ValidType\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidMaximumWeight &&\r\n                        this.state.ValidPhotoURL &&\r\n                        this.state.ValidType\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newTrailer = {\r\n            Token: localStorage.Token,\r\n            MaximumWeight: this.state.MaximumWeight,\r\n            PhotoURL: this.state.PhotoURL,\r\n            Type: this.state.Type\r\n        }\r\n\r\n        console.log(\"Going to add the trailer...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addTrailer(newTrailer).then(response => {\r\n            if (response.Message === \"Trailer is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id=\"add-trailer-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">New Trailer</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\" Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Maximum Weight (GVW)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"MaximumWeight\" className=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.MaximumWeight}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Trailer Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddTrailerDialog;","import React, { Component } from \"react\";\r\nimport AddTrailerDialog from \"./AddTrailerDialog\";\r\n\r\nclass AddTrailer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddTrailerDialog: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron theme-dark\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-24 text-center\">\r\n                            <img src=\"./images/trailer.png\" alt=\"trailer.png\" height=\"50\" />\r\n                            <h3 style={{paddingTop:\"5px\"}}>Trailers</h3>\r\n                            <div className=\"type-sh3\">Your Truck is All Set Up</div>\r\n                            <div className=\"col-md-12 col-md-offset-6\">\r\n                                <div className=\"type-p3\">\r\n                                    RECOMMENDED: Since your truck is all set up, you're good to go for adding up to TWO trailers to it.\r\n                                </div>\r\n                                <div className=\"btn-group\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-primary\"\r\n                                        style={{ minWidth: \"152px\" }}\r\n                                        data-toggle=\"modal\"\r\n                                        data-target=\"#add-trailer-dialog\"\r\n                                        onMouseDown={() => {\r\n                                            this.setState({\r\n                                                AddTrailerDialog: <AddTrailerDialog\r\n                                                    OnCancel={() => {\r\n                                                        this.setState({\r\n                                                            AddTrailerDialog: null\r\n                                                        });\r\n                                                    }}\r\n                                                    OnOK={cancelButton => {\r\n                                                        cancelButton.click();\r\n                                                        this.props.OnTrailerAdded();\r\n                                                    }} />\r\n                                            });\r\n                                        }}>\r\n                                        <span className=\"fas fa-plus\" aria-hidden=\"true\"></span>Add Trailer</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.AddTrailerDialog}\r\n            </div>           \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddTrailer;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles\";\r\nimport ImageUploader from \"../../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { updateTrailer } from \"../../../DriverFunctions.js\";\r\n\r\nclass EditTrailerDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            MaximumWeight: this.props.Trailer.MaximumWeight,\r\n            PhotoURL: this.props.Trailer.PhotoURL,\r\n            Type: this.props.Trailer.Type,\r\n\r\n            ValidMaximumWeight: true,\r\n            ValidPhotoURL: true,\r\n            ValidType: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                MaximumWeight: \"\",\r\n                PhotoURL: \"\",\r\n                Type: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidMaximumWeight = this.state.ValidMaximumWeight;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n        let ValidType = this.state.ValidType;\r\n\r\n        switch (field) {\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n\r\n                if (Errors.MaximumWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidMaximumWeight = (value >= 700);\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum weight must be greater than 699.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidMaximumWeight: ValidMaximumWeight,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n            ValidType: ValidType\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidMaximumWeight &&\r\n                        this.state.ValidPhotoURL &&\r\n                        this.state.ValidType\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedTrailer = {\r\n            Token: localStorage.Token,\r\n            TrailerID: this.props.Trailer.TrailerID,\r\n            MaximumWeight: this.state.MaximumWeight,\r\n            PhotoURL: this.state.PhotoURL,\r\n            Type: this.state.Type\r\n        }\r\n\r\n        console.log(\"Going to update trailer...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        updateTrailer(updatedTrailer).then(response => {\r\n            if (response.Message === \"Trailer is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id={`edit-trailer-dialog${this.props.dialogID}`}\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Trailer</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\" Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory={this.state.ImageCategory} />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Maximum Weight (GVW)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"MaximumWeight\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.MaximumWeight}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Trailer Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default EditTrailerDialog;","import React, { Component } from \"react\";\r\nimport { deleteTrailer } from \"../../../DriverFunctions.js\";\r\nimport EditTrailerDialog from \"./EditTrailerDialog.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\n\r\nclass TrailersList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Trailers: this.props.Trailers,\r\n            EditTrailerDialogs: [],\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async index => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedTrailer = {\r\n            Token: localStorage.Token,\r\n            TrailerID: this.state.Trailers[index].TrailerID \r\n        };\r\n\r\n        console.log(`Going to delete Trailers[${index}]...`);\r\n\r\n        await deleteTrailer(discardedTrailer).then(response => {\r\n            if (response.Message === \"Trailer is deleted.\") {\r\n                this.props.OnTrailersUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Trailers</div>\r\n            <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                {this.state.Trailers.map((value, index) => {\r\n                    return <li key={index} className=\"list-items-row\">\r\n                        <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#${value.TrailerID}`}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-2\">\r\n                                    <i className=\"glyph glyph-add\"></i>\r\n                                    <i className=\"glyph glyph-remove\"></i>\r\n                                    <strong>{index + 1}</strong>\r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                    <img className=\"img-responsive visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        src={value.PhotoURL} alt=\"trailer.png\" data-source-index=\"2\" style={{\r\n                                            overflow: \"hidden\",\r\n                                            border: \"5px solid #3A3A3C\",\r\n                                            margin: \"5px\"\r\n                                        }} />\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                        <span className=\"fas fa-weight\" style={{ color: \"#606060\" }}></span>\r\n                                        <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Maximum Weight (GVM):</span> {value.MaximumWeight}\r\n                                    </div>\r\n                                    <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                        <span className=\"fas fa-star-of-life\" style={{ color: \"#606060\" }}></span>\r\n                                        <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Trailer Type:</span> {value.Type}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"collapse\" id={value.TrailerID}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-18 col-md-offset-2\">\r\n                                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block\"\r\n                                        src={value.PhotoURL} alt=\"trailer.png\" data-source-index=\"2\" style={{\r\n                                            overflow: \"hidden\",\r\n                                            border: \"5px solid #3A3A3C\",\r\n                                            margin: \"5px\"\r\n                                        }} />\r\n                                </div>\r\n                                <div className=\"col-md-4 text-right\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-primary\"\r\n                                        data-toggle=\"modal\"\r\n                                        data-target={`#edit-trailer-dialog${index}`}\r\n                                        onMouseDown={() => {\r\n                                            let editTrailerDialogs = this.state.EditTrailerDialogs;\r\n\r\n                                            editTrailerDialogs[index] = <EditTrailerDialog\r\n                                                dialogID={index}\r\n                                                Trailer={value}\r\n                                                OnCancel={() => {\r\n                                                    let editTrailerDialogs = this.state.EditTrailerDialogs\r\n                                                    editTrailerDialogs[index] = null;\r\n\r\n                                                    this.setState({\r\n                                                        EditTrailerDialogs: editTrailerDialogs,\r\n                                                    });\r\n\r\n                                                }}\r\n                                                OnOK={cancelButton => {\r\n                                                    cancelButton.click();\r\n                                                    this.props.OnTrailersUpdated();\r\n                                                }} />;\r\n\r\n                                            this.setState({\r\n                                                EditTrailerDialogs: editTrailerDialogs,\r\n                                            });\r\n                                        }}>\r\n                                        Edit</button>\r\n                                    <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(index); }}>Delete</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {this.state.EditTrailerDialogs[index]}\r\n                    </li>\r\n                })}\r\n            </ol>\r\n            {this.state.Preloader}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TrailersList;","import React, { Component } from \"react\";\r\nimport AddTrailer from \"./AddTrailer\";\r\nimport TrailersList from \"./TrailersList\"\r\nimport { getData } from \"../../../DriverFunctions\";\r\n\r\nclass Trailers extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddTrailer: null,\r\n            TrailersList: null\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Trailers\"\r\n            };\r\n\r\n            this.setState({\r\n                AddTrailer: null,\r\n                TrailersList: null\r\n            });\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Trailers found.\") {\r\n\r\n                    if (response.Trailers.length < 2) {\r\n                        this.setState({\r\n                            AddTrailer: <AddTrailer OnTrailerAdded={this.onComponentUpdated} />,\r\n                            TrailersList: <TrailersList Trailers={response.Trailers}\r\n                                OnTrailersUpdated={this.onComponentUpdated} />\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            AddTrailer: null,\r\n                            TrailersList: <TrailersList Trailers={response.Trailers}\r\n                                OnTrailersUpdated={this.onComponentUpdated} />\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AddTrailer: <AddTrailer OnTrailerAdded={this.onComponentUpdated} />,\r\n                        TrailersList: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            {this.state.AddTrailer}\r\n            {this.state.TrailersList}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Trailers;","import React, { Component } from \"react\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader\";\r\nimport { getData, updateTruckPhoto } from \"../../DriverFunctions\";\r\nimport TruckSettings from \"./TruckSettings\";\r\nimport AddTruckDialog from \"./AddTruckDialog\";\r\nimport Trailers from \"./trailers/Trailers\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\n\r\nclass Truck extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            PlateNumber: \"\",\r\n            Owner: \"\",\r\n            ProductionYear: \"\",\r\n            Brand: \"\",\r\n            Model: \"\",\r\n            Type: \"\",\r\n            MaximumWeight: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n            TruckFound: false,\r\n            AddTruckDialog: null,\r\n            AddTrailer: null,\r\n            TrailersList: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Truck\"\r\n            };\r\n\r\n            this.setState({\r\n                Preloader: <Preloader />\r\n            });\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Truck found.\") {\r\n                    let truck = response.Truck;\r\n\r\n                    this.setState({\r\n                        PlateNumber: truck.PlateNumber,\r\n                        Owner: truck.Owner,\r\n                        ProductionYear: truck.ProductionYear,\r\n                        Brand: truck.Brand,\r\n                        Model: truck.Model,\r\n                        Type: truck.Type,\r\n                        MaximumWeight: truck.MaximumWeight,\r\n                        PhotoURL: truck.PhotoURL,\r\n                        TruckFound: true,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        PlateNumber: \"\",\r\n                        Owner: \"\",\r\n                        ProductionYear: \"\",\r\n                        Brand: \"\",\r\n                        Model: \"\",\r\n                        Type: \"\",\r\n                        MaximumWeight: \"\",\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                        TruckFound: false,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.TruckFound) {\r\n            return <section>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <ImageUploader Source={this.state.PhotoURL}\r\n                                    Height=\"200px\" Width=\"200px\"\r\n                                    OnImageUploaded={async response => {\r\n                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                            const updatedTruck = {\r\n                                                Token: localStorage.Token,\r\n                                                PhotoURL: response.imageUrl\r\n                                            };\r\n\r\n                                            await updateTruckPhoto(updatedTruck).then(response => {\r\n                                                if (response.Message === \"Truck photo updated.\") {\r\n                                                    this.setState({\r\n                                                        PhotoURL: updatedTruck.PhotoURL\r\n                                                    });\r\n                                                }\r\n                                            });\r\n                                        }\r\n                                    }}\r\n                                    OnInvalidImageSelected={() => {\r\n                                        return;\r\n                                    }}\r\n                                    ImageCategory=\"Truck\" />\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                    {`${this.state.Brand} ${this.state.Model}`}\r\n                                </div>\r\n                                <div className=\"type-sh3\">\r\n                                    <span className=\"fas fa-truck\" style={{ color: \"#606060\" }}></span>   {this.state.Type}\r\n                                </div>\r\n                                <div>\r\n                                    <ol className=\"list-items theme-alt\">\r\n                                        <li className=\"list-items-row\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-2\">\r\n                                                    <strong><span className=\"fas fa-list-ol\" style={{ color: \"#008575\" }}></span></strong>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <a href=\"\" style={{ textDecoration: \"none\", }}>Plate Number:</a>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    {this.state.PlateNumber}\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li className=\"list-items-row\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-2\">\r\n                                                    <strong><span className=\"fas fa-calendar-day\" style={{ color: \"#008575\", }}></span></strong>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <a style={{ textDecoration: \"none\", }}>Production Year:</a>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    {this.state.ProductionYear}\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li className=\"list-items-row\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-2\">\r\n                                                    <strong><span className=\"fas fa-weight\" style={{ color: \"#008575\" }}></span></strong>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <a style={{ textDecoration: \"none\", }}>Maximum Weight:</a>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    {`${this.state.MaximumWeight} GVW`}\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ol>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <TruckSettings OnTruckSettingsUpdated={this.onComponentUpdated} />\r\n                <Trailers />\r\n                {this.state.Preloader}\r\n            </section>;\r\n        }\r\n        else {\r\n            return <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"add_truck.png\" src=\"./images/add_truck.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div className=\"col-md-12 col-md-pull-12\">\r\n                                <div className=\"type-h3\">Truck</div>\r\n                                <div className=\"type-sh3\">You have not added any truck yet.</div>\r\n                                <p>Adding your truck will let the Traders or Brokers see details about your it. Valid and complete details of your truck make more chances for you to receive job requests.</p>\r\n                                <div className=\"btn-group\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-primary\"\r\n                                        style={{ minWidth: \"152px\" }}\r\n                                        data-toggle=\"modal\"\r\n                                        data-target=\"#add-truck-dialog\"\r\n                                        onMouseDown={() => {\r\n                                            this.setState({\r\n                                                AddTruckDialog: <AddTruckDialog\r\n                                                    OnCancel={() => {\r\n                                                        this.setState({\r\n                                                            AddTruckDialog: null,\r\n                                                        });\r\n                                                    }}\r\n                                                    OnOK={cancelButton => {\r\n                                                        cancelButton.click();\r\n                                                        this.onComponentUpdated();\r\n                                                    }} />\r\n                                            });\r\n                                        }}>\r\n                                        <span className=\"fas fa-plus\" aria-hidden=\"true\"></span>Add Now</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.AddTruckDialog}\r\n                {this.state.Preloader}\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default Truck;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { addPermitLicence } from \"../../DriverFunctions.js\";\r\n\r\nclass AddPermitLicenceDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PermitNumber: \"\",\r\n            ExpiryDate: new Date(),\r\n            PhotoURL: \"./images/default_image.png\",\r\n            Code: \"\",\r\n            Place: \"\",\r\n\r\n            ValidPermitNumber: false,\r\n            ValidExpiryDate: false,\r\n            ValidPhotoURL: false,\r\n            ValidCode: false,\r\n            ValidPlace: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                PermitNumber: \"\",\r\n                ExpiryDate: \"\",\r\n                PhotoURL: \"\",\r\n                Code: \"\",\r\n                Place: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidPermitNumber = this.state.ValidPermitNumber;\r\n        let ValidExpiryDate = this.state.ValidExpiryDate;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n        let ValidCode = this.state.ValidCode;\r\n        let ValidPlace = this.state.ValidPlace;\r\n\r\n        switch (field) {\r\n            case \"PermitNumber\":\r\n                ValidPermitNumber = (value !== \"\");\r\n                Errors.PermitNumber = ValidPermitNumber ? \"\" : \"Permit number is required.\";\r\n\r\n                if (Errors.PermitNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPermitNumber = (value !== \"\");\r\n                Errors.PermitNumber = ValidPermitNumber ? \"\" : \"Permit number is required.\";\r\n\r\n                break;\r\n            case \"ExpiryDate\":\r\n                ValidExpiryDate = (new Date(value).getTime() >= new Date().getTime());\r\n                Errors.ExpiryDate = ValidExpiryDate ? \"\" : \"Expiry Date must be later than yesterday.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            case \"Code\":\r\n                ValidCode = (value !== \"\");\r\n                Errors.Code = ValidCode ? \"\" : \"Permit code is required.\";\r\n                break;\r\n            case \"Place\":\r\n                ValidPlace = (value !== \"\");\r\n                Errors.Place = ValidPlace ? \"\" : \"Permit place is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPermitNumber: ValidPermitNumber,\r\n            ValidExpiryDate: ValidExpiryDate,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n            ValidCode: ValidCode,\r\n            ValidPlace: ValidPlace,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidPermitNumber &&\r\n                        this.state.ValidExpiryDate &&\r\n                        this.state.ValidPhotoURL &&\r\n                        this.state.ValidCode &&\r\n                        this.state.ValidPlace\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newPermitLicence = {\r\n            Token: localStorage.Token,\r\n            PermitNumber: this.state.PermitNumber,\r\n            ExpiryDate: this.state.ExpiryDate,\r\n            PhotoURL: this.state.PhotoURL,\r\n            Code: this.state.Code,\r\n            Place: this.state.Place\r\n        }\r\n\r\n        console.log(\"Going to add Permit Licence.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addPermitLicence(newPermitLicence).then(response => {\r\n            if (response.Message === \"Permit Licence is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div className=\"modal\" id=\"add-permit-licence-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Add Permit Licence</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    Height=\"220px\"\r\n                                                    Width=\"220px\"\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }} />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Permit Number</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"PermitNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.PermitNumber} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.PermitNumber}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Expiry Date</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"date\" name=\"ExpiryDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.ExpiryDate} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.ExpiryDate}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Permit Code</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Code\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Code} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Code}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Permit Place</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Place\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Place} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Place}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddPermitLicenceDialog;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../styles/MiscellaneousStyles\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { updatePermitLicence } from \"../../DriverFunctions.js\";\r\n\r\nclass EditPermitLicenceDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PermitNumber: this.props.PermitLicence.PermitNumber,\r\n            ExpiryDate: this.props.PermitLicence.ExpiryDate,\r\n            PhotoURL: this.props.PermitLicence.PhotoURL,\r\n            Code: this.props.PermitLicence.Code,\r\n            Place: this.props.PermitLicence.Place,\r\n\r\n            ValidPermitNumber: true,\r\n            ValidExpiryDate: true,\r\n            ValidPhotoURL: true,\r\n            ValidCode: true,\r\n            ValidPlace: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                PermitNumber: \"\",\r\n                ExpiryDate: \"\",\r\n                PhotoURL: \"\",\r\n                Code: \"\",\r\n                Place: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidPermitNumber = this.state.ValidPermitNumber;\r\n        let ValidExpiryDate = this.state.ValidExpiryDate;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n        let ValidCode = this.state.ValidCode;\r\n        let ValidPlace = this.state.ValidPlace;\r\n\r\n        switch (field) {\r\n            case \"PermitNumber\":\r\n                ValidPermitNumber = (value !== \"\");\r\n                Errors.PermitNumber = ValidPermitNumber ? \"\" : \"Permit number is required.\";\r\n                break;\r\n            case \"ExpiryDate\":\r\n                ValidExpiryDate = (new Date(value).getTime() >= new Date().getTime());\r\n                Errors.ExpiryDate = ValidExpiryDate ? \"\" : \"Expiry Date must be later than yesterday.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            case \"Code\":\r\n                ValidCode = (value !== \"\");\r\n                Errors.Code = ValidCode ? \"\" : \"Permit code is required.\";\r\n                break;\r\n            case \"Place\":\r\n                ValidPlace = (value !== \"\");\r\n                Errors.Place = ValidPlace ? \"\" : \"Permit place is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPermitNumber: ValidPermitNumber,\r\n            ValidExpiryDate: ValidExpiryDate,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n            ValidCode: ValidCode,\r\n            ValidPlace: ValidPlace,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidPermitNumber &&\r\n                    this.state.ValidExpiryDate &&\r\n                    this.state.ValidPhotoURL &&\r\n                    this.state.ValidCode &&\r\n                    this.state.ValidPlace\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedPermitLicence = {\r\n            Token: localStorage.Token,\r\n            PermitLicenceID: this.props.PermitLicence.PermitLicenceID,\r\n            PermitNumber: this.state.PermitNumber,\r\n            ExpiryDate: this.state.ExpiryDate,\r\n            PhotoURL: this.state.PhotoURL,\r\n            Code: this.state.Code,\r\n            Place: this.state.Place\r\n        }\r\n\r\n        console.log(\"Going to update Permit Licence.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updatePermitLicence(updatedPermitLicence).then(response => {\r\n            if (response.Message === \"Permit Licence is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div className=\"modal\" id={`edit-permit-dialog${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Add Permit Licence</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    Height=\"220px\"\r\n                                                    Width=\"220px\"\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }} />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Permit Number</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"PermitNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.PermitNumber} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.PermitNumber}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Expiry Date</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"date\" name=\"ExpiryDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.ExpiryDate} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.ExpiryDate}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Permit Code</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Code\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Code} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Code}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Permit Place</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Place\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Place} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Place}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default EditPermitLicenceDialog;","import React, { Component } from \"react\";\r\nimport { getData, deletePermitLicence } from \"../../DriverFunctions.js\";\r\nimport EditPermitLicenceDialog from \"./EditPermitLicenceDialog.js\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\n\r\nclass PermitLicencesList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllPermitLicences: [],\r\n            PermitLicences: [],\r\n            EditPermitLicenceDialogs: [],\r\n            SearchString: \"\",\r\n            Preloader: null,\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    onDelete = async index => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedPermitLicence = {\r\n            Token: localStorage.Token,\r\n            PermitLicenceID: this.state.PermitLicences[index].PermitLicenceID \r\n        };\r\n\r\n        console.log(`Going to delete PermitLicences[${index}]`);\r\n\r\n        await deletePermitLicence(discardedPermitLicence).then(response => {\r\n            if (response.Message === \"Permit Licence is deleted.\") {\r\n                this.onComponentUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"PermitLicences\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Permit licences found.\") {\r\n                    this.setState({\r\n                        AllPermitLicences: response.PermitLicences,\r\n                        PermitLicences: response.PermitLicences\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllPermitLicences: [],\r\n                        PermitLicences: []\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.SearchString === \"\") {\r\n            this.setState({\r\n                PermitLicences: this.state.AllPermitLicences\r\n            });\r\n        }\r\n\r\n        const allPermitLicences = this.state.AllPermitLicences;\r\n        let filteredPermitLicences = [];\r\n\r\n        for (var i = 0; i < allPermitLicences.length; i++) {\r\n            if (allPermitLicences[i].Place.includes(this.state.SearchString)) {\r\n                filteredPermitLicences[i] = allPermitLicences[i];\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            PermitLicences: filteredPermitLicences\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Permit Licences</div>\r\n                <nav className=\"navbar navbar-default\">\r\n                    <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                        <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                            <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                                <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search by Permit Place\"\r\n                                            style={{ maxWidth: \"500px\", width: \"100%\" }} autoComplete=\"off\"\r\n                                            value={this.state.SearchString} onChange={this.onChange} />\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {this.state.PermitLicences.map((value, index) => {\r\n                        return <li key={index} className=\"list-items-row\">\r\n                            <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#${value.PermitLicenceID}`}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-2\">\r\n                                        <i className=\"glyph glyph-add\"></i>\r\n                                        <i className=\"glyph glyph-remove\"></i>\r\n                                        <strong>{index + 1}</strong>\r\n                                    </div>\r\n                                    <div className=\"col-md-4\">\r\n                                        <img className=\"img-responsive visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                            src={value.PhotoURL} alt=\"permit.png\" data-source-index=\"2\" style={{\r\n                                                overflow: \"hidden\",\r\n                                                border: \"5px solid #3A3A3C\",\r\n                                                margin: \"5px\"\r\n                                            }} />\r\n                                    </div>\r\n                                    <div className=\"col-md-6\">\r\n                                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                            <span className=\"fas fa-hashtag\" style={{ color: \"#606060\" }}></span>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Permit Number:</span> {value.PermitNumber}\r\n                                        </div>\r\n                                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                            <span className=\"fas fa-calendar\" style={{ color: \"#606060\" }}></span>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Expiry Date:</span> {value.ExpiryDate}\r\n                                        </div>\r\n                                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                            <span className=\"fas fa-asterisk\" style={{ color: \"#606060\" }}></span>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Permit Code:</span> {value.Code}\r\n                                        </div>\r\n                                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                            <span className=\"fas fa-map-marker-alt\" style={{ color: \"#606060\" }}></span>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Permit Place:</span> {value.Place}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6\">\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"collapse\" id={value.PermitLicenceID}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-18 col-md-offset-2\">\r\n                                        <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block\"\r\n                                            src={value.PhotoURL} alt=\"permit.png\" data-source-index=\"2\" style={{\r\n                                                overflow: \"hidden\",\r\n                                                border: \"5px solid #3A3A3C\",\r\n                                                margin: \"5px\"\r\n                                            }} />\r\n                                    </div>\r\n                                    <div className=\"col-md-4 text-right\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-primary\"\r\n                                            data-toggle=\"modal\"\r\n                                            data-target={`#edit-permit-dialog${index}`}\r\n                                            onMouseDown={() => {\r\n                                                let editPermitLicenceDialogs = this.state.EditPermitLicenceDialogs;\r\n\r\n                                                editPermitLicenceDialogs[index] = <EditPermitLicenceDialog\r\n                                                    DialogID={index}\r\n                                                    PermitLicence={value}\r\n                                                    OnCancel={() => {\r\n                                                        let editPermitLicenceDialogs = this.state.EditPermitLicenceDialogs;\r\n                                                        editPermitLicenceDialogs[index] = null;\r\n\r\n                                                        this.setState({\r\n                                                            EditPermitLicenceDialogs: editPermitLicenceDialogs,\r\n                                                        });\r\n\r\n                                                    }}\r\n                                                    OnOK={cancelButton => {\r\n                                                        cancelButton.click();\r\n                                                        this.onComponentUpdated();\r\n                                                    }} />;\r\n\r\n                                                this.setState({\r\n                                                    EditPermitLicenceDialogs: editPermitLicenceDialogs,\r\n                                                });\r\n                                            }}>\r\n                                            Edit\r\n                                            </button>\r\n                                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(index); }}>Delete</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {this.state.EditPermitLicenceDialogs[index]}\r\n                        </li>\r\n                    })}\r\n                </ol>\r\n                {this.state.Preloader}\r\n            </section>         \r\n        );\r\n    }\r\n};\r\n\r\nexport default PermitLicencesList;","import React, { Component } from \"react\";\r\nimport AddPermitLicenceDialog from \"./AddPermitLicenceDialog.js\";\r\nimport PermitLicencesList from \"./PermitLicencesList.js\"\r\n\r\nclass Permits extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddPermitLicenceDialog: null\r\n        };\r\n\r\n        this.onPermitLicencesUpdated = this.onPermitLicencesUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onPermitLicencesUpdated();\r\n    }\r\n\r\n    onPermitLicencesUpdated = () => {\r\n        this.PermitLicencesList.onComponentUpdated();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"permit.png\" src=\"./images/permit.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div className=\"col-md-12 col-md-pull-12\">\r\n                                <div className=\"type-h3\">Permit Licences</div>\r\n                                <div className=\"type-sh3\">Manage your Permits</div>\r\n                                <p>If you are a non-Saudi driver, then you must have at least one permit licence.</p>\r\n                                <div className=\"btn-group\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-primary\"\r\n                                        data-toggle=\"modal\"\r\n                                        data-target=\"#add-permit-licence-dialog\"\r\n                                        onMouseDown={() => {\r\n                                            this.setState({\r\n                                                AddPermitLicenceDialog: (<AddPermitLicenceDialog\r\n                                                    OnCancel={() => {\r\n                                                        this.setState({\r\n                                                            AddPermitLicenceDialog: null,\r\n                                                        });\r\n                                                    }}\r\n                                                    OnOK={cancelButton => {\r\n                                                        cancelButton.click();\r\n                                                        this.onPermitLicencesUpdated();\r\n                                                    }} />),\r\n                                            });\r\n                                        }}>\r\n                                        New Permit Licence</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <PermitLicencesList ref={permitLicencesList => this.PermitLicencesList = permitLicencesList} />\r\n                {this.state.AddPermitLicenceDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Permits;","import React, { Component } from \"react\";\r\n\r\nclass FinancialAffairs extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"jumbotron\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"tools.png\" src=\"./images/tools.png\" style={{ borderRadius: \"50%\" }} data-source-index=\"1\" />\r\n                            </div>\r\n                            <div class=\"col-md-12 col-md-pull-12\">\r\n                                <div class=\"type-h3\" style={{ color: \"#008575\", }}>\r\n                                    Financial Affairs\r\n                    </div>\r\n                                <div class=\"type-sh3\" style={{ color: \"#949496\", }}>\r\n                                    Under-Construction\r\n                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default FinancialAffairs;","import React, { Component } from \"react\";\r\n\r\nclass TraderRequestTab extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const traderRequest = this.props.TraderRequest;\r\n        const index = this.props.Index;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"col-md-24\">\r\n                        <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>{`Request # ${index + 1}.`}</div>\r\n                        {(index === 0) ? <div className=\"type-sh3\" style={{ color: \"#FFBF15\" }}>\r\n                            <span className=\"fas fa-certificate\" style={{ color: \"#FFBF15\" }}></span>   LATEST\r\n                        </div> : null}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-box\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Cargo Type</div>\r\n                                        <div className=\"content-text-secondary\">{traderRequest.CargoType}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-weight\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Cargo Weight</div>\r\n                                        <div className=\"content-text-secondary\">{`${traderRequest.CargoWeight} lbs.`}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-id-badge\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Entry/Exit</div>\r\n                                        <div className=\"content-text-secondary\">{(traderRequest.EntryExit === 1) ?\r\n                                            <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                            <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Date</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(traderRequest.LoadingDate).toDateString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Time</div>\r\n                                        <div className=\"content-text-secondary\">{traderRequest.LoadingTime}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Accpeted Delay</div>\r\n                                        <div className=\"content-text-secondary\">{`${traderRequest.AcceptedDelay} Hour(s)`}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Requested on</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(traderRequest.Created).toDateString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Requested at</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(traderRequest.Created).toTimeString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderRequestTab;","import React, { Component } from \"react\";\r\n\r\nclass TraderTab extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const trader = this.props.Trader;\r\n        const profilePhoto = this.props.ProfilePhoto ?\r\n            this.props.ProfilePhoto : \"./images/defaultProfilePhoto.png\";\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group\" style={{ marginBottom: \"5px\", }}>\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={profilePhoto} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-18\">\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                {trader.FirstName + \" \" + trader.LastName}\r\n                            </div>\r\n                            <div className=\"type-sh3\">\r\n                                <span className=\"fas fa-briefcase\" style={{ color: \"#606060\" }}></span>   {trader.Type}\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className={(trader.Gender === \"Male\") ? \"fas fa-male\" : \"fas fa-female\"}></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Gender</div>\r\n                                                <div className=\"content-text-secondary\">{trader.Gender}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-birthday-cake\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Birthday</div>\r\n                                                <div className=\"content-text-secondary\">{trader.DateOfBirth}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-flag\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Nationality</div>\r\n                                                <div className=\"content-text-secondary\">{trader.Nationality}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-envelope\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Email</div>\r\n                                                <div className=\"content-text-secondary\">{trader.Email}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-phone\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Phone Number</div>\r\n                                                <div className=\"content-text-secondary\">{trader.PhoneNumber}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderTab;","import React, { Component } from \"react\";\r\nimport TraderRequestTab from \"./TraderRequestTab\";\r\nimport TraderTab from \"./TraderTab\";\r\n\r\nclass JobRequestTab extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const traderRequestPackage = this.props.TraderRequestPackage;\r\n        const trader = traderRequestPackage.Trader;\r\n        const profilePhoto = traderRequestPackage.ProfilePhoto; \r\n        const traderRequest = traderRequestPackage.TraderRequest;\r\n\r\n        return <section>\r\n            <ul className=\"nav nav-tabs\" role=\"tablist\"\r\n                style={{\r\n                    padding: \"10px\",\r\n                    backgroundColor: \"#EFEFEF\",\r\n                    width: \"100%\",\r\n                    margin: \"0px\"\r\n                }}>\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href={`#trader-request-tab-${index}`} aria-controls={`trader-request-tab-${index}`} role=\"tab\" data-toggle=\"tab\">{`Request # ${index + 1}.`}</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href={`#trader-tab-${index}`} aria-controls={`trader-tab-${index}`} role=\"tab\" data-toggle=\"tab\">{trader.Type}</a>\r\n                </li>\r\n            </ul>\r\n            <div className=\"tab-content\">\r\n                <div role=\"tabpanel\" className=\"tab-pane active\" id={`trader-request-tab-${index}`}>\r\n                    <TraderRequestTab TraderRequest={traderRequest} Index={index} />\r\n                </div>\r\n                <div role=\"tabpanel\" className=\"tab-pane\" id={`trader-tab-${index}`}>\r\n                    <TraderTab Trader={trader} ProfilePhoto={profilePhoto} />\r\n                </div>\r\n            </div>\r\n            <div style={{ backgroundColor: \"#EFEFEF\", textAlign: \"right\", padding: \"10px\" }}>\r\n                <button className=\"btn btn-primary\">Start Job</button>\r\n            </div>\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobRequestTab;","import React, { Component } from \"react\";\r\nimport TraderRequest from \"./TraderRequest\";\r\n\r\nclass TraderRequestsCarousel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const traderRequestPackages = this.props.TraderRequestPackages;\r\n        return <section>\r\n            <div id=\"myCarousel\" className=\"carousel slide\" data-ride=\"false\" data-interval=\"20000\" >\r\n                <div style={{ backgroundColor: \"#008575\", textAlign: \"center\" }}>\r\n                    {(traderRequestPackages.length > 1) ? \r\n                        <ul className=\"pager theme-alt\" style={{ margin: \"0px\" }}>\r\n                            <li className=\"pager-next\">\r\n                                <a href=\"#myCarousel\" data-slide=\"prev\">\r\n                                    <i aria-hidden=\"true\" className=\"glyph glyph-chevron-left-2\"></i>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"pager-next\">\r\n                                <a href=\"#myCarousel\" data-slide=\"next\">\r\n                                    <i aria-hidden=\"true\" className=\"glyph glyph-chevron-right-2\"></i>\r\n                                </a>\r\n                            </li>\r\n                        </ul> : null}\r\n                </div>\r\n                <div className=\"carousel-inner\">\r\n                    {traderRequestPackages.map((traderRequestPackage, index) => {\r\n                        return <div key={index} className={(index === 0) ? \"item active\" : \"item\"}>\r\n                            <TraderRequest TraderRequestPackage={traderRequestPackage} Index={0} />\r\n                        </div>;\r\n                    })}\r\n                </div>               \r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderRequestsCarousel;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { updateJobRequest } from \"../../../DriverFunctions.js\";\r\n\r\nclass EditJobRequestDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LoadingPlace: this.props.JobRequest.LoadingPlace,\r\n            UnloadingPlace: this.props.JobRequest.UnloadingPlace,\r\n            TripType: this.props.JobRequest.TripType,\r\n            Price: this.props.JobRequest.Price,\r\n\r\n            ValidLoadingPlace: true,\r\n            ValidUnloadingPlace: true,\r\n            ValidPrice: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                LoadingPlace: \"\",\r\n                UnloadingPlace: \"\",\r\n                Price: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidLoadingPlace = this.state.ValidLoadingPlace;\r\n        let ValidUnloadingPlace = this.state.ValidUnloadingPlace;\r\n        let ValidPrice = this.state.ValidPrice;\r\n\r\n        switch (field) {\r\n            case \"LoadingPlace\":\r\n                ValidLoadingPlace = (value !== \"\");\r\n                Errors.LoadingPlace = ValidLoadingPlace ? \"\" : \"Loading place is required.\";\r\n                break;\r\n            case \"UnloadingPlace\":\r\n                ValidUnloadingPlace = (value !== \"\");\r\n                Errors.UnloadingPlace = ValidUnloadingPlace ? \"\" : \"Unloading place is required.\";\r\n                break;\r\n            case \"Price\":\r\n                ValidPrice = (value > 0.00);\r\n                Errors.Price = ValidPrice ? \"\" : \"Price must be more than $0.00.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidLoadingPlace: ValidLoadingPlace,\r\n            ValidUnloadingPlace: ValidUnloadingPlace,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.LoadingPlace &&\r\n                    this.state.ValidUnloadingPlace &&\r\n                    this.state.ValidPrice\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (!this.props.CanEdit()) {\r\n            return;\r\n        }\r\n\r\n        const updatedJobRequest = {\r\n            Token: localStorage.Token,\r\n            JobRequestID: this.props.JobRequest.JobRequestID,\r\n            LoadingPlace: this.state.LoadingPlace,\r\n            UnloadingPlace: this.state.UnloadingPlace,\r\n            TripType: this.state.TripType,\r\n            Price: this.state.Price\r\n        };\r\n\r\n        console.log(\"Going to update Job Request.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateJobRequest(updatedJobRequest).then(response => {\r\n            if (response.Message === \"Job request is updated.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div className=\"modal\" id={`edit-job-request-dialog-${this.props.DialogID}`}\r\n                    tabindex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Job Request</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"control-label\">Loading Place</label>\r\n                                                        <span className=\"text-danger\" style={Required}>*</span>\r\n                                                        <input type=\"text\" name=\"LoadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                            value={this.state.LoadingPlace} onChange={this.onChange} />\r\n                                                        <span className=\"text-danger\">{this.state.Errors.LoadingPlace}</span>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"control-label\">Unloading Place</label>\r\n                                                        <span className=\"text-danger\" style={Required}>*</span>\r\n                                                        <input type=\"text\" name=\"UnloadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                            value={this.state.UnloadingPlace} onChange={this.onChange} />\r\n                                                        <span className=\"text-danger\">{this.state.Errors.UnloadingPlace}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"control-label\">Trip Type</label><br />\r\n                                                        <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                            <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                                aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                                <span>{this.state.TripType}</span>\r\n                                                                <span className=\"caret\"></span>\r\n                                                            </button>\r\n                                                            <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                                <li><a onClick={() => {\r\n                                                                    this.setState({ TripType: \"One Way\" });\r\n                                                                    this.validateField(\"\", \"\");\r\n                                                                }}>One Way</a></li>\r\n                                                                <li><a onClick={() => {\r\n                                                                    this.setState({ TripType: \"Two Way\" });\r\n                                                                    this.validateField(\"\", \"\");\r\n                                                                }}>Two Way</a></li>\r\n                                                            </ul>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"control-label\">Price (USD)</label>\r\n                                                        <span className=\"text-danger\" style={Required}>*</span>\r\n                                                        <input type=\"number\" min=\"0.00\" step=\"0.01\" max=\"100.00\" name=\"Price\"\r\n                                                            className=\"form-control\" autoComplete=\"off\" value={this.state.Price} onChange={this.onChange} />\r\n                                                        <span className=\"text-danger\">{this.state.Errors.Price}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\"\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default EditJobRequestDialog;","import React, { Component } from \"react\";\r\nimport TraderRequestsCarousel from \"./TraderRequestsCarousel\";\r\nimport EditJobRequestDialog from \"./EditJobRequestDialog\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { deleteJobRequest } from \"../../../DriverFunctions\";\r\n\r\nclass JobRequestPackageItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async jobRequestID => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedJobRequest = {\r\n            Token: localStorage.Token,\r\n            JobRequestID: jobRequestID\r\n        };\r\n\r\n        console.log(`Going to delete Job request...`);\r\n\r\n        await deleteJobRequest(discardedJobRequest).then(response => {\r\n            if (response.Message === \"Job request is deleted.\") {\r\n                this.props.OnJobRequestUpdated();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const jobRequest = this.props.JobRequestPackage.JobRequest;\r\n        const traderRequestPackages = this.props.JobRequestPackage.TraderRequestPackages;\r\n        const index = this.props.Index;\r\n\r\n        const createdHoursAgo = Math.abs(new Date() - new Date(jobRequest.TimeCreated)) / 36e5;\r\n\r\n        return <section>\r\n           <div className=\"jumbotron theme-default\">\r\n               <div className=\"container\">\r\n                   <div className=\"col-md-24\">\r\n                       <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>{`${index + 1}.`}</div>\r\n                       <div className=\"type-sh3\">\r\n                           <span className=\"fas fa-tag\" style={{ color: \"#606060\" }}></span>   {`$${jobRequest.Price}`}\r\n                       </div>\r\n                   </div>\r\n                   <div className=\"row\">\r\n                       <div className=\"col-md-12\">\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-map-marker-alt\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Loading Place</div>\r\n                                       <div className=\"content-text-secondary\">{jobRequest.LoadingPlace}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-map-marker-alt\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Unloading Place</div>\r\n                                       <div className=\"content-text-secondary\">{jobRequest.UnloadingPlace}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-map-signs\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Trip Type</div>\r\n                                       <div className=\"content-text-secondary\">{jobRequest.TripType}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                       <div className=\"col-md-12\">\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-plug\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Available</div>\r\n                                       <div className=\"content-text-secondary\">{(createdHoursAgo < jobRequest.WaitingTime) ? \r\n                                           <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                           <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-calendar\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Posted on</div>\r\n                                       <div className=\"content-text-secondary\">{new Date(jobRequest.TimeCreated).toDateString()}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-clock\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Posted at</div>\r\n                                       <div className=\"content-text-secondary\">{new Date(jobRequest.TimeCreated).toTimeString()}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                   </div>\r\n               </div>\r\n            </div>\r\n\r\n            <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                <button type=\"button\" className=\"btn btn-default\"\r\n                    data-toggle=\"modal\"\r\n                    disabled={(traderRequestPackages.length !== 0)}\r\n                    data-target={`#edit-job-request-dialog-${index}`}>Edit</button>\r\n                <button className=\"btn btn-danger\" onClick={async () => { await this.onDelete(jobRequest.JobRequestID); }}>Delete</button>\r\n            </div>\r\n\r\n            <EditJobRequestDialog\r\n                DialogID={index}\r\n                JobRequest={jobRequest}\r\n                CanEdit={() => { return (traderRequestPackages.length === 0) ? true : false }}\r\n                OnOK={() => { this.props.OnJobRequestUpdated(); }} />\r\n\r\n            <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#job-request-package-${index}`} style={{ backgroundColor: \"#DFDFDF\" }}>\r\n                <div className=\"type-h4\" style={{ color: \"#008575\", padding: \"10px\", textAlign: \"right\" }}>\r\n                    <span style={{\r\n                        backgroundColor: \"#D75A4A\",\r\n                        color: \"#FEFEFE\",\r\n                        textAlign: \"center\",\r\n                        fontWeight: \"bold\",\r\n                        fontSize: \"x-small\",\r\n                        padding: \"5px\",\r\n                        borderRadius: \"50%\",\r\n                        width: \"20px\",\r\n                        height: \"20px\",\r\n                        display: \"inline-block\"\r\n                    }}>{traderRequestPackages.length}</span> Trader Requests <i className=\"fas fa-ellipsis-v\"></i></div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`job-request-package-${index}`}>\r\n                {(traderRequestPackages.length === 0) ? <div className=\"jumbotron theme-dark\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-24 text-center\">\r\n                                <h3><span className=\"fas fa-exclamation-triangle\" style={{ color: \"#FFBF15\" }}></span> No requests found.</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> : <TraderRequestsCarousel TraderRequestPackages={traderRequestPackages} />}\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            </div>\r\n\r\n            {this.state.Preloader}\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobRequestPackageItem;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { addJobRequest } from \"../../../DriverFunctions.js\";\r\n\r\nclass AddJobRequestDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LoadingPlace: \"\",\r\n            UnloadingPlace: \"\",\r\n            TripType: \"One Way\",\r\n            Price: 0.00,\r\n\r\n            ValidLoadingPlace: false,\r\n            ValidUnloadingPlace: false,\r\n            ValidPrice: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                LoadingPlace: \"\",\r\n                UnloadingPlace: \"\",\r\n                Price: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidLoadingPlace = this.state.ValidLoadingPlace;\r\n        let ValidUnloadingPlace = this.state.ValidUnloadingPlace;\r\n        let ValidPrice = this.state.ValidPrice;\r\n\r\n        switch (field) {\r\n            case \"LoadingPlace\":\r\n                ValidLoadingPlace = (value !== \"\");\r\n                Errors.LoadingPlace = ValidLoadingPlace ? \"\" : \"Loading place is required.\";\r\n                break;\r\n            case \"UnloadingPlace\":\r\n                ValidUnloadingPlace = (value !== \"\");\r\n                Errors.UnloadingPlace = ValidUnloadingPlace ? \"\" : \"Unloading place is required.\";\r\n                break;\r\n            case \"Price\":\r\n                ValidPrice = (value > 0.00);\r\n                Errors.Price = ValidPrice ? \"\" : \"Price must be more than $0.00.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidLoadingPlace: ValidLoadingPlace,\r\n            ValidUnloadingPlace: ValidUnloadingPlace,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.LoadingPlace &&\r\n                        this.state.ValidUnloadingPlace &&\r\n                        this.state.ValidPrice\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newJobRequest = {\r\n            Token: localStorage.Token,\r\n            LoadingPlace: this.state.LoadingPlace,\r\n            UnloadingPlace: this.state.UnloadingPlace,\r\n            TripType: this.state.TripType,\r\n            Price: this.state.Price\r\n        };\r\n\r\n        console.log(\"Going to add Job Request.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addJobRequest(newJobRequest).then(response => {\r\n            if (response.Message === \"Job request is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div className=\"modal\" id=\"add-job-request-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Add Job Request</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"control-label\">Loading Place</label>\r\n                                                        <span className=\"text-danger\" style={Required}>*</span>\r\n                                                        <input type=\"text\" name=\"LoadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                            value={this.state.LoadingPlace} onChange={this.onChange} />\r\n                                                        <span className=\"text-danger\">{this.state.Errors.LoadingPlace}</span>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"control-label\">Unloading Place</label>\r\n                                                        <span className=\"text-danger\" style={Required}>*</span>\r\n                                                        <input type=\"text\" name=\"UnloadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                            value={this.state.UnloadingPlace} onChange={this.onChange} />\r\n                                                        <span className=\"text-danger\">{this.state.Errors.UnloadingPlace}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"control-label\">Trip Type</label><br />\r\n                                                        <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                            <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                                aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                                <span>{this.state.TripType}</span>\r\n                                                                <span className=\"caret\"></span>\r\n                                                            </button>\r\n                                                            <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                                <li><a onClick={() => { this.setState({ TripType: \"One Way\" }); }}>One Way</a></li>\r\n                                                                <li><a onClick={() => { this.setState({ TripType: \"Two Way\" }); }}>Two Way</a></li>\r\n                                                            </ul>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"control-label\">Price (USD)</label>\r\n                                                        <span className=\"text-danger\" style={Required}>*</span>\r\n                                                        <input type=\"number\" min=\"0.00\" step=\"0.01\" max=\"100.00\" name=\"Price\"\r\n                                                            className=\"form-control\" autoComplete=\"off\" value={this.state.Price} onChange={this.onChange} />\r\n                                                        <span className=\"text-danger\">{this.state.Errors.Price}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\"\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddJobRequestDialog;","import React, { Component } from \"react\";\r\n\r\nclass ProgressBar extends Component {\r\n    render() {\r\n        return <div className=\"progress-bar\">\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n        </div>;\r\n    }\r\n};\r\n\r\nexport default ProgressBar","import React, { Component } from \"react\";\r\nimport { getData } from \"../../../DriverFunctions\";\r\nimport JobRequestPackageItem from \"./JobRequestPackageItem\";\r\nimport AddJobRequestDialog from \"./AddJobRequestDialog\";\r\nimport ProgressBar from \"../../../../../controls/ProgressBar\";\r\n\r\nclass JobRequestsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllJobRequestPackages: [],\r\n            JobRequestPackages: [],\r\n            SearchString: \"\",\r\n            Searching: null\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobRequestPackages\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job request packages found.\") {\r\n                    this.setState({\r\n                        AllJobRequestPackages: response.JobRequestPackages,\r\n                        JobRequestPackages: response.JobRequestPackages,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllJobRequestPackages: [],\r\n                        JobRequestPackages: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.SearchString === \"\") {\r\n            this.setState({\r\n                JobRequestPackages: this.state.AllJobRequestPackages\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allJobRequestPackages = this.state.AllJobRequestPackages;\r\n        let filteredJobRequestPackages = [];\r\n        let count = 0;\r\n\r\n        for (let jobRequestPackage of allJobRequestPackages) {\r\n            let jobRequest = jobRequestPackage.JobRequest;\r\n\r\n            if (jobRequest.LoadingPlace.includes(this.state.SearchString) ||\r\n                jobRequest.UnloadingPlace.includes(this.state.SearchString)) {\r\n                filteredJobRequestPackages[count++] = jobRequestPackage;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            JobRequestPackages: filteredJobRequestPackages\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const jobRequestPackages = this.state.JobRequestPackages;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                alt=\"job_requests.png\" src=\"./images/job_requests.png\" data-source-index=\"2\" />\r\n                        </div>\r\n                        <div className=\"col-md-12 col-md-pull-12\">\r\n                            <div className=\"type-h3\">Job Requests</div>\r\n                            <div className=\"type-sh3\">Manage Your Job Requests</div>\r\n                            <p>Create new job requests for your current and/or near-by locations to get a chance to increase your revenue.</p>\r\n                            <div className=\"btn-group\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-primary\"\r\n                                    data-toggle=\"modal\"\r\n                                    data-target=\"#add-job-request-dialog\">New Job Request</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <AddJobRequestDialog\r\n                OnOK={() => {\r\n                    this.onComponentUpdated();\r\n                }} />\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Your Job Requests</div>\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search by Places\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={this.state.SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            {(jobRequestPackages.length === 0) ?\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            {this.state.Searching ? <div className=\"col-md-24 text-center\">\r\n                                <div>\r\n                                    <div className=\"type-h3\" style={{ color: \"#008575\" }}>Searching</div>\r\n                                    <ProgressBar />\r\n                                </div>\r\n                            </div> : <div className=\"col-md-24 text-center\">\r\n                                    <h3><span className=\"fas fa-exclamation-triangle\" style={{ color: \"#FFBF15\" }}></span> No job requests found.</h3>\r\n                                </div>}\r\n                        </div>\r\n                    </div>\r\n                </div> : <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {this.state.JobRequestPackages.map((jobRequestPackage, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <JobRequestPackageItem Index={index}\r\n                                JobRequestPackage={jobRequestPackage} \r\n                                OnJobRequestUpdated={this.onComponentUpdated} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobRequestsList;","import React, { Component } from \"react\";\r\nimport JobRequestsList from \"./JobRequestsList.js\";\r\n\r\nclass JobRequests extends Component {\r\n    render() {\r\n        return <section>\r\n            <JobRequestsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobRequests;","import React, { Component } from \"react\";\r\n\r\nclass DocumentsDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const identityCard = this.props.Documents.IdentityCard;\r\n        const commercialRegisterCertificate = this.props.Documents.CommercialRegisterCertificate;\r\n\r\n        const identityCardRow = identityCard ? <div className=\"row\">\r\n            <div className=\"col-md-8\">\r\n                <div className=\"form-group\" style={{ marginBottom: \"5px\", }}>\r\n                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                        src={identityCard.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                            overflow: \"hidden\",\r\n                            border: \"5px solid #3A3A3C\",\r\n                            margin: \"5px\"\r\n                        }} />\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-16\">\r\n                <div className=\"type-h5\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Identity Card</div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-24\">\r\n                        <div className=\"entity-list\">\r\n                            <div className=\"entity-list-item\">\r\n                                <div className=\"item-icon\">\r\n                                    <span className=\"fas fa-hashtag\"></span>\r\n                                </div>\r\n                                <div className=\"item-content-primary\">\r\n                                    <div className=\"content-text-primary\">ID Number</div>\r\n                                    <div className=\"content-text-secondary\">{identityCard.IDNumber}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> : null;\r\n\r\n        const commercialRegisterCertificateRow = commercialRegisterCertificate ? <div className=\"row\">\r\n            <div className=\"col-md-8\">\r\n                <div className=\"form-group\" style={{ marginBottom: \"5px\", }}>\r\n                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                        src={commercialRegisterCertificate.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                            overflow: \"hidden\",\r\n                            border: \"5px solid #3A3A3C\",\r\n                            margin: \"5px\"\r\n                        }} />\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-16\">\r\n                <div className=\"type-h5\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Commercial Register Certificate</div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-24\">\r\n                        <div className=\"entity-list\">\r\n                            <div className=\"entity-list-item\">\r\n                                <div className=\"item-icon\">\r\n                                    <span className=\"fas fa-hashtag\"></span>\r\n                                </div>\r\n                                <div className=\"item-content-primary\">\r\n                                    <div className=\"content-text-primary\">Certificate Number</div>\r\n                                    <div className=\"content-text-secondary\">{commercialRegisterCertificate.Number}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list\">\r\n                            <div className=\"entity-list-item\">\r\n                                <div className=\"item-icon\">\r\n                                    <span className=\"fas fa-cog\"></span>\r\n                                </div>\r\n                                <div className=\"item-content-primary\">\r\n                                    <div className=\"content-text-primary\">Certificate Type</div>\r\n                                    <div className=\"content-text-secondary\">{commercialRegisterCertificate.Type}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> : null;\r\n\r\n        return <section>\r\n            <div className=\"modal\" id={`documents-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\" style={{ padding: \"0px\", backgroundColor: \"#FFFFFF\" }}>\r\n                        <div className=\"jumbotron theme-default\">\r\n                            <div className=\"container\">\r\n                                <div className=\"modal-header\">\r\n                                    <div className=\"type-h4\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Documents</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    {identityCardRow}\r\n                                    {commercialRegisterCertificateRow}\r\n                                </div>\r\n\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DocumentsDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport DocumentsDialog from \"./DocumentsDialog\";\r\n\r\nclass TraderTab extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const trader = this.props.Trader;\r\n        const profilePhoto = this.props.ProfilePhoto ?\r\n            this.props.ProfilePhoto : \"./images/defaultProfilePhoto.png\";\r\n\r\n        const dialogID = UUID().substring(0, 7).toUpperCase();\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group\" style={{ marginBottom: \"5px\", }}>\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={profilePhoto} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-18\">\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                {trader.FirstName + \" \" + trader.LastName}\r\n                            </div>\r\n                            <div className=\"type-sh3\">\r\n                                <span className=\"fas fa-briefcase\" style={{ color: \"#606060\" }}></span>   {trader.Type}\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className={(trader.Gender === \"Male\") ? \"fas fa-male\" : \"fas fa-female\"}></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Gender</div>\r\n                                                <div className=\"content-text-secondary\">{trader.Gender}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-birthday-cake\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Birthday</div>\r\n                                                <div className=\"content-text-secondary\">{trader.DateOfBirth}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-flag\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Nationality</div>\r\n                                                <div className=\"content-text-secondary\">{trader.Nationality}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-envelope\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Email</div>\r\n                                                <div className=\"content-text-secondary\">{trader.Email}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-phone\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Phone Number</div>\r\n                                                <div className=\"content-text-secondary\">{trader.PhoneNumber}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <button type=\"button\" className=\"btn btn-default\"\r\n                                                style={{ minWidth: \"152px\" }} data-toggle=\"modal\"\r\n                                                disabled={!this.props.Documents}\r\n                                                data-target={`#documents-dialog-${dialogID}`}>Documents</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <DocumentsDialog Documents={this.props.Documents} DialogID={dialogID} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderTab;","import React, { Component } from \"react\";\r\n\r\nclass JobRequestTab extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const jobOffer = this.props.JobOffer;\r\n        const createdHoursAgo = Math.abs(new Date() - new Date(jobOffer.TimeCreated)) / 36e5;\r\n\r\n       return <section>\r\n           <div className=\"jumbotron theme-default\">\r\n               <div className=\"container\">\r\n                   <div className=\"col-md-24\">\r\n                       <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>{`${jobOffer.JobOfferType} Job Offer`}</div>\r\n                       <div className=\"type-sh3\">\r\n                           <span className=\"fas fa-tag\" style={{ color: \"#606060\" }}></span>   {`$${jobOffer.Price}`}\r\n                       </div>\r\n                   </div>\r\n                   <div className=\"row\">\r\n                       <div className=\"col-md-8\">\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-map-marker-alt\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Loading Place</div>\r\n                                       <div className=\"content-text-secondary\">{jobOffer.LoadingPlace}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-map-marker-alt\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Unloading Place</div>\r\n                                       <div className=\"content-text-secondary\">{jobOffer.UnloadingPlace}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-map-signs\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Trip Type</div>\r\n                                       <div className=\"content-text-secondary\">{jobOffer.TripType}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-clock\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Accpeted Delay</div>\r\n                                       <div className=\"content-text-secondary\">{`${jobOffer.AcceptedDelay} Hour(s)`}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                       <div className=\"col-md-8\">\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-box\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Cargo Type</div>\r\n                                       <div className=\"content-text-secondary\">{jobOffer.CargoType}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-weight\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Cargo Weight</div>\r\n                                       <div className=\"content-text-secondary\">{`${jobOffer.CargoWeight} lbs.`}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-calendar\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Loading Date</div>\r\n                                       <div className=\"content-text-secondary\">{new Date(jobOffer.LoadingDate).toDateString()}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-clock\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Loading Time</div>\r\n                                       <div className=\"content-text-secondary\">{jobOffer.LoadingTime}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                       <div className=\"col-md-8\">\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-id-badge\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Entry/Exit</div>\r\n                                       <div className=\"content-text-secondary\">{(jobOffer.EntryExit === 1) ?\r\n                                           <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                           <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-plug\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Availabe</div>\r\n                                       <div className=\"content-text-secondary\">{(createdHoursAgo < jobOffer.WaitingTime) ? \r\n                                           <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                           <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-calendar\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Posted on</div>\r\n                                       <div className=\"content-text-secondary\">{new Date(jobOffer.TimeCreated).toDateString()}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-clock\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Posted at</div>\r\n                                       <div className=\"content-text-secondary\">{new Date(jobOffer.TimeCreated).toTimeString()}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobRequestTab;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { addDriverRequest } from \"../../../DriverFunctions\";\r\n\r\nclass BidJobOfferDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Price: 0,\r\n\r\n            ValidPrice: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                Price: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidPrice = this.state.ValidPrice;\r\n\r\n        switch (field) {\r\n            case \"Price\":\r\n                ValidPrice = (value !== \"\");\r\n                Errors.Price = ValidPrice ? \"\" : \"Bidding price is required.\";\r\n\r\n                if (Errors.Price !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPrice = (value <= this.props.JobOffer.Price);\r\n                Errors.Price = ValidPrice ? \"\" : \"You cannot bid more than maximum accepted price.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidPrice\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (this.props.IsRequestSent()) {\r\n            return;\r\n        }\r\n\r\n        const newDriverRequest = {\r\n            Token: localStorage.Token,\r\n            JobOfferID: this.props.JobOffer.JobOfferID,\r\n            Price: this.state.Price\r\n        };\r\n\r\n        console.log(\"Going to add driver request...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addDriverRequest(newDriverRequest).then(response => {\r\n            if (response.Message === \"Driver request is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div className=\"modal\" id={`bid-job-offer-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"bid.png\" src=\"./images/bid.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Bid on Price</div>\r\n                                    <div className=\"type-sh3\">{`Maximum Accepted Price is $${this.props.JobOffer.Price}.`}</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Price (USD)</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" min=\"0.00\" step=\"0.01\" max=\"100.00\" name=\"Price\"\r\n                                                    className=\"form-control\" autoComplete=\"off\" value={this.state.Price} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Price}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\"\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Bid\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default BidJobOfferDialog;","import React, { Component } from \"react\";\r\nimport { addDriverRequest } from \"../../../DriverFunctions\";\r\nimport TraderTab from \"./TraderTab\";\r\nimport JobOfferTab from \"./JobOfferTab\";\r\nimport BidJobOfferDialog from \"./BidJobOfferDialog\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\n\r\nclass JobOfferPostsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Preloader: null\r\n        };\r\n\r\n        this.onSendRequest = this.onSendRequest.bind(this);\r\n    }\r\n\r\n    onSendRequest = async jobOffer => {\r\n        if (this.props.JobOfferPost.RequestSent) {\r\n            return;\r\n        }\r\n\r\n        const newDriverRequest = {\r\n            Token: localStorage.Token,\r\n            JobOfferID: jobOffer.JobOfferID,\r\n            Price: null\r\n        };\r\n\r\n        console.log(\"Going to add driver request...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addDriverRequest(newDriverRequest).then(response => {\r\n            if (response.Message === \"Driver request is added.\") {\r\n                this.props.OnRequestSent(jobOffer);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const jobOffer = this.props.JobOfferPost.JobOffer;\r\n        const trader = this.props.JobOfferPost.Trader;\r\n        const profilePhoto = this.props.JobOfferPost.ProfilePhoto;\r\n        const requestSent = this.props.JobOfferPost.RequestSent;\r\n\r\n        const documents = {\r\n            IdentityCard: this.props.JobOfferPost.IdentityCard,\r\n            CommercialRegisterCertificate: this.props.JobOfferPost.CommercialRegisterCertificate\r\n        };\r\n\r\n        return <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"2px solid #EAEAEA\" }}>\r\n                <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#job-offer-post-${index}`}>\r\n                    <div className=\"entity-list\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <img src={profilePhoto ? profilePhoto : \"./images/defaultProfilePhoto.png\"} alt=\"defaultProfilePhoto.png\" />\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"content-text-primary\">{jobOffer.LoadingPlace}\r\n                                </div>\r\n                                <div className=\"content-text-secondary\">{jobOffer.UnloadingPlace}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                {requestSent ?\r\n                                    <div className=\"content-text-primary\">{trader.FirstName} {trader.LastName}\r\n                                        <span className=\"fas fa-paper-plane\" style={{ color: \"#008575\", fontSize: \"x-small\" }}></span>\r\n                                        <span style={{ color: \"#008575\", fontSize: \"x-small\" }}>{(jobOffer.JobOfferType === \"Fixed-Price\") ?\r\n                                            \"REQUEST SENT\" : \"ALREADY BADE\"}</span>\r\n                                    </div> :\r\n                                    <div className=\"content-text-primary\">{trader.FirstName} {trader.LastName}</div>}\r\n                                <div className=\"content-text-secondary\">\r\n                                    <div>\r\n                                        <span className=\"fas fa-globe-asia\" style={{ color: \"#707070\" }}></span> . {new Date(jobOffer.TimeCreated).toDateString()}\r\n                                    </div>                                   \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"collapse\" id={`job-offer-post-${index}`}>\r\n                    <ul className=\"nav nav-tabs\" role=\"tablist\"\r\n                        style={{\r\n                            padding: \"10px\",\r\n                            backgroundColor: \"#EFEFEF\",\r\n                            width: \"100%\",\r\n                            margin: \"0px\"\r\n                        }}>\r\n                        <li role=\"presentation\" className=\"active\">\r\n                            <a href={`#job-offer-${index}`} aria-controls={`job-offer-${index}`} role=\"tab\" data-toggle=\"tab\">Job Offer</a>\r\n                        </li>\r\n                        <li role=\"presentation\">\r\n                            <a href={`#trader-${index}`} aria-controls={`trader-${index}`} role=\"tab\" data-toggle=\"tab\">{trader.Type}</a>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"tab-content\">\r\n                        <div role=\"tabpanel\" className=\"tab-pane active\" id={`job-offer-${index}`}>\r\n                            <JobOfferTab JobOffer={jobOffer} />\r\n                        </div>\r\n                        <div role=\"tabpanel\" className=\"tab-pane\" id={`trader-${index}`}>\r\n                            <TraderTab Trader={trader} ProfilePhoto={profilePhoto}\r\n                                Documents={documents} />\r\n                        </div>\r\n                        <div style={{ backgroundColor: \"#EFEFEF\", textAlign: \"right\", padding: \"10px\" }}>\r\n                            {(jobOffer.JobOfferType === \"Fixed-Price\") ?\r\n                                <button className=\"btn btn-primary\"\r\n                                    disabled={requestSent}\r\n                                    onClick={async () => { await this.onSendRequest(jobOffer); }}>\r\n                                    {requestSent ? \"Request Sent\" : \"Send Request\"}\r\n                                </button> :\r\n                                <button className=\"btn btn-primary\"\r\n                                    data-toggle=\"modal\"\r\n                                    disabled={requestSent}\r\n                                    data-target={`#bid-job-offer-dialog-${index}`}>\r\n                                    {requestSent ? \"Already Bade\" : \"Bid\"}\r\n                                </button>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <BidJobOfferDialog\r\n                    DialogID={index}\r\n                    JobOffer={jobOffer}\r\n                    IsRequestSent={() => { return requestSent ? true : false; }}\r\n                    OnOK={() => { this.props.OnRequestSent(jobOffer); }} />\r\n            </li>\r\n            {this.state.Preloader}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobOfferPostsList;","import React, { Component } from \"react\";\r\nimport ProgressBar from \"../../../../../controls/ProgressBar\";\r\nimport { getData } from \"../../../DriverFunctions\";\r\nimport TraderTab from \"./TraderTab\";\r\nimport JobOfferTab from \"./JobOfferTab\";\r\nimport JobOfferPostListItem from \"./JobOfferPostListItem\";\r\n\r\nclass JobOfferPostsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobOfferPosts: [],\r\n            Preloader: null,\r\n            Searching: false,\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobOfferPosts\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Job offer posts found.\") {\r\n                    this.setState({\r\n                        JobOfferPosts: response.JobOfferPosts,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobOfferPosts: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Searching) {\r\n            return <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"job_offers.png\" src=\"./images/job_offers.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div className=\"col-md-12 col-md-pull-12\">\r\n                                <div className=\"type-h3\">Job Offers</div>\r\n                                <p>Job opportunities from Traders and Brokers are displayed here.</p>\r\n                                <div class=\"type-sh3\" style={{ color: \"#008575\" }}>Searhcing</div>\r\n                                <ProgressBar />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n        else if (this.state.JobOfferPosts.length === 0) {\r\n            return <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"job_offers.png\" src=\"./images/job_offers.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div className=\"col-md-12 col-md-pull-12\">\r\n                                <div className=\"type-h3\">Job Offers</div>\r\n                                <div className=\"type-sh3\">No Job Offers Found...</div>\r\n                                <p>Job opportunities from Traders and Brokers are displayed here.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n        else {\r\n            return <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Job Offers</div>\r\n                <ol className=\"list-items\" style={{ marginTop: \"0px\" }}>\r\n                    {this.state.JobOfferPosts.map((jobOfferPost, index) => {\r\n                        return <JobOfferPostListItem\r\n                            key={index}\r\n                            Index={index}\r\n                            JobOfferPost={jobOfferPost}\r\n                            OnRequestSent={jobOffer => {\r\n                                let jobOfferPosts = this.state.JobOfferPosts;\r\n\r\n                                for (let jobOfferPost of jobOfferPosts) {\r\n                                    if (jobOfferPost.JobOffer.JobOfferID === jobOffer.JobOfferID) {\r\n                                        jobOfferPost.RequestSent = true;\r\n                                        break;\r\n                                    }\r\n                                }\r\n\r\n                                this.setState({\r\n                                    JobOfferPosts: jobOfferPosts\r\n                                });\r\n                            }} />;\r\n                    })}\r\n                </ol>\r\n            </section>;\r\n        }\r\n       \r\n    }\r\n};\r\n\r\nexport default JobOfferPostsList;","import React, { Component } from \"react\";\r\nimport JobOfferPostsList from \"./JobOfferPostsList\";\r\n\r\nclass JobOffers extends Component {\r\n   render() {\r\n       return <section>\r\n           <JobOfferPostsList />\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobOffers;","import React, { Component } from \"react\";\r\n\r\nclass OnGoingJobs extends Component {\r\n   render() {\r\n        return (\r\n            <section>\r\n                <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"on_going_jobs.png\" src=\"./images/on_going_jobs.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div class=\"col-md-12 col-md-pull-12\">\r\n                                <div class=\"type-h3\">On-Going Jobs</div>\r\n                                <div class=\"type-sh3\">Under Construction</div>\r\n                                <p>For now, it's lonely here!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default OnGoingJobs;","import React, { Component } from \"react\";\r\nimport JobRequests from \"./jobRequests/JobRequests.js\"; \r\nimport JobOffers from \"./jobOffers/JobOffers.js\";\r\nimport OnGoingJobs from \"./onGoingJobs/OnGoingJobs.js\";\r\n\r\nclass Jobs extends Component {\r\n    render() {\r\n        return <section>\r\n            <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                padding: \"10px\",\r\n                backgroundColor: \"#3A3A3C\",\r\n                width: \"100%\",\r\n                margin: \"0px\",\r\n            }}>\r\n                <li role=\"presentation\" className=\"active\"><a href=\"#job-requests\" aria-controls=\"job-requests\" role=\"tab\" data-toggle=\"tab\">Job Requests</a></li>\r\n                <li role=\"presentation\"><a href=\"#job-offers\" aria-controls=\"job-offers\" role=\"tab\" data-toggle=\"tab\">Job Offers</a></li>\r\n                <li role=\"presentation\"><a href=\"#on-going-jobs\" aria-controls=\"on-going-jobs\" role=\"tab\" data-toggle=\"tab\">On-Going Jobs</a></li>\r\n            </ul>\r\n\r\n            <div class=\"tab-content\">\r\n                <div role=\"tabpanel\" class=\"tab-pane active\" id=\"job-requests\">\r\n                    <JobRequests />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"job-offers\">\r\n                    <JobOffers />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"on-going-jobs\">\r\n                    <OnGoingJobs />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Jobs;","import React, { Component } from \"react\";\r\n\r\nclass Payments extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"jumbotron\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"tools.png\" src=\"./images/tools.png\" style={{ borderRadius: \"50%\" }} data-source-index=\"1\" />\r\n                            </div>\r\n                            <div class=\"col-md-12 col-md-pull-12\">\r\n                                <div class=\"type-h3\" style={{ color: \"#008575\", }}>\r\n                                    Payments\r\n                    </div>\r\n                                <div class=\"type-sh3\" style={{ color: \"#949496\", }}>\r\n                                    Under-Construction\r\n                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Payments;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { getData, generalSettings } from \"../../DriverFunctions\";\r\n\r\nclass GeneralSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\",\r\n\r\n            ValidFirstName: true,\r\n            ValidLastName: true,\r\n            ValidPhoneNumber: true,\r\n\r\n            ValidForm: false,\r\n            SettingsSaved: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                PhoneNumber: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Driver\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver found.\") {\r\n                    let driver = response.Driver;\r\n\r\n                    this.setState({\r\n                        FirstName: driver.FirstName,\r\n                        LastName: driver.LastName,\r\n                        Address: driver.Address,\r\n                        PhoneNumber: driver.PhoneNumber,\r\n                        Gender: driver.Gender,\r\n                        Nationality: driver.Nationality,\r\n                        DateOfBirth: driver.DateOfBirth\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        FirstName: \"\",\r\n                        LastName: \"\",\r\n                        Address: \"\",\r\n                        PhoneNumber: \"\",\r\n                        Gender: \"\",\r\n                        Nationality: \"\",\r\n                        DateOfBirth: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFirstName = this.state.ValidFirstName;\r\n        let ValidLastName = this.state.ValidLastName;\r\n        let ValidPhoneNumber = this.state.ValidPhoneNumber;\r\n\r\n        switch (field) {\r\n            case \"FirstName\":\r\n                ValidFirstName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.FirstName = ValidFirstName ? \"\" : \"First name is invalid.\";\r\n                break;\r\n            case \"LastName\":\r\n                ValidLastName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.LastName = ValidLastName ? \"\" : \"Last name is invalid.\";\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = value.match(/^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/);\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFirstName: ValidFirstName,\r\n            ValidLastName: ValidLastName,\r\n            ValidPhoneNumber: ValidPhoneNumber,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidFirstName &&\r\n                    this.state.ValidLastName &&\r\n                    this.state.ValidPhoneNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedDriver = {\r\n            Token: localStorage.Token,\r\n            FirstName: this.state.FirstName,\r\n            LastName: this.state.LastName,\r\n            Address: this.state.Address,\r\n            PhoneNumber: this.state.PhoneNumber,\r\n            Gender: this.state.Gender,\r\n            Nationality: this.state.Nationality,\r\n            DateOfBirth: this.state.DateOfBirth\r\n        };\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await generalSettings(updatedDriver).then(response => {\r\n            if (response.Message === \"Driver is updated.\") {\r\n                this.props.OnSettingsSaved();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>General Settings</div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n                <div className=\"entity-list entity-list-expandable\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-comment\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"FirstName\" autoComplete=\"off\"\r\n                                    value={this.state.FirstName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">First Name</div>\r\n                            <div className=\"text-danger\">{this.state.Errors.FirstName}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-comment\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"LastName\" autoComplete=\"off\"\r\n                                    value={this.state.LastName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Last Name</div>\r\n                            <div className=\"text-danger\">{this.state.Errors.LastName}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-birthday-cake\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"date\" className=\"form-control\" name=\"DateOfBirth\" autoComplete=\"off\"\r\n                                    value={this.state.DateOfBirth} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Date of Birth</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className={this.state.Gender === \"Male\" ? \"fas fa-male\" : \"fas fa-female\"}></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"dropdown\" style={{ width: \"193px\", maxWidth: \"296px\", }}>\r\n                                <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                    aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                    <span>{this.state.Gender}</span>\r\n                                    <span className=\"caret\"></span>\r\n                                </button>\r\n                                <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                    <li><a onClick={() => { this.setState({ Gender: \"Male\" }); }}>Male</a></li>\r\n                                    <li><a onClick={() => { this.setState({ Gender: \"Female\" }); }}>Female</a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Gender</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-flag\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"Nationality\" autoComplete=\"off\"\r\n                                    value={this.state.Nationality} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Nationality</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-phone\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autoComplete=\"off\"\r\n                                    placeholder=\"+XXXXXXXXXXXX\" value={this.state.PhoneNumber} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Phone Number</div>\r\n                            <div className=\"text-danger\">{this.state.Errors.PhoneNumber}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-location-arrow\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"Address\" autoComplete=\"off\"\r\n                                    value={this.state.Address} onChange={this.onChange} style={{ width: \"393px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Address</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item active\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-save\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Save Changes?</div>\r\n                            <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                        </div>\r\n                        <div className=\"item-content-expanded\">\r\n                            <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            {this.state.Preloader}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default GeneralSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { usernameAndEmailSettings } from \"../../DriverFunctions.js\";\r\n\r\nclass CodeConfirmationDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ConfirmCode: \"\",\r\n\r\n            ValidConfirmCode: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                ConfirmCode: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidConfirmCode = this.state.ValidConfirmCode;\r\n\r\n        ValidConfirmCode = value === this.props.Code;\r\n        Errors.ConfirmCode = ValidConfirmCode ? \"\" : \"Invalid code.\";\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidConfirmCode: ValidConfirmCode,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidConfirmCode\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedDriver = {\r\n            Token: localStorage.Token,\r\n            Username: this.props.Username,\r\n            Email: this.props.Email,\r\n        };\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await usernameAndEmailSettings(updatedDriver).then(response => {\r\n            if (response.Message === \"Driver is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div\r\n                className=\"modal in\" id=\"code-confirmation-dialog\" tabIndex=\"-1\"\r\n                role=\"dialog\" aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\"\r\n                style={{ display: \"block\" }}>\r\n                <div className=\"modal-dialog\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"passcode.png\" src=\"./images/passcode.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Email Confirmation</div>\r\n                                        <div className=\"type-sh3\">We delivered a confirmation code to your email.</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Confirmation Code</label>\r\n                                                    <input type=\"text\" name=\"ConfirmCode\" className=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.ConfirmCode} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ConfirmCode}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Confirm\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default CodeConfirmationDialog;","import React, { Component } from \"react\";\r\nimport CodeConfirmationDialog from \"./CodeConfirmationDialog.js\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport {\r\n    getData,\r\n    validateUsername,\r\n    validateEmail,\r\n    sendCode,\r\n    usernameAndEmailSettings\r\n} from \"../../DriverFunctions.js\";\r\n\r\nclass UsernameAndEmailSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            NewUsername: \"\",\r\n\r\n            Email: \"\",\r\n            NewEmail: \"\",\r\n\r\n            Code: \"\",\r\n\r\n            ValidNewUsername: true,\r\n            ValidNewEmail: true,\r\n\r\n            ValidForm: false,\r\n            CodeConfirmationDialog: null,\r\n\r\n            Errors: {\r\n                NewUsername: \"\",\r\n                NewEmail: \"\",\r\n            },\r\n\r\n            CodeConfirmation: \"\",\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Driver\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver found.\") {\r\n                    let driver = response.Driver;\r\n\r\n                    this.setState({\r\n                        Username: driver.Username,\r\n                        NewUsername: driver.Username,\r\n                        Email: driver.Email,\r\n                        NewEmail: driver.Email\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Username: \"\",\r\n                        NewUsername: \"\",\r\n                        Email: \"\",\r\n                        NewEmail: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewUsername = this.state.ValidNewUsername;\r\n        let ValidNewEmail = this.state.ValidNewEmail;\r\n\r\n        switch (field) {\r\n            case \"NewUsername\":\r\n                ValidNewUsername = (value !== \"\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is required.\";\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value.match(/^[a-z0-9]+$/i));\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is invalid.\";\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value !== \"Username is unavailable.\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is unavailable.\";\r\n                break;\r\n            case \"NewEmail\":\r\n                ValidNewEmail = (value !== \"\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is required.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i));\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is invalid.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value !== \"Email is already taken.\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is already taken.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewUsername: ValidNewUsername,\r\n            ValidNewEmail: ValidNewEmail,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidNewUsername &&\r\n                    this.state.ValidNewEmail\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername === this.state.Username &&\r\n            this.state.NewEmail === this.state.Email) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername !== this.state.Username) {\r\n            const response = await validateUsername(this.state.NewUsername);\r\n\r\n            if (response.Message === \"Username is unavailable.\") {\r\n                this.validateField(\"NewUsername\", response.Message);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail !== this.state.Email) {\r\n            const response = await validateEmail(this.state.NewEmail);\r\n            if (response.Message === \"Email is already taken.\") {\r\n                this.validateField(\"NewEmail\", response.Message);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail === this.state.Email) {\r\n            const updatedDriver = {\r\n                Token: localStorage.Token,\r\n                Username: this.state.NewUsername,\r\n                Email: this.state.NewEmail,\r\n            };\r\n\r\n            this.setState({\r\n                Preloader: <Preloader />\r\n            });\r\n\r\n            console.log(\"Going to update username...\");\r\n            await usernameAndEmailSettings(updatedDriver).then(response => {\r\n                if (response.Message === \"Driver is updated.\") {\r\n                    this.props.OnSettingsSaved();\r\n                }\r\n\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            console.log(\"Going to send code...\");\r\n            await sendCode(this.state.NewEmail).then(response => {\r\n                if (response.Message === \"Code sent.\") {\r\n                    this.setState({\r\n                        CodeConfirmationDialog: <CodeConfirmationDialog\r\n                            Code={response.Code}\r\n                            Username={this.state.NewUsername}\r\n                            Email={this.state.NewEmail}\r\n                            OnCancel={() => {\r\n                                this.setState({\r\n                                    CodeConfirmationDialog: null,\r\n                                });\r\n                            }}\r\n                            OnOK={cancelButton => {\r\n                                cancelButton.click();\r\n                                this.props.OnSettingsSaved();\r\n                            }} />\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Username and Emails</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div class=\"entity-list entity-list-expandable\">\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-at\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" name=\"NewUsername\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.NewUsername} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Username</div>\r\n                                <div class=\"content-text-secondary text-danger\">{this.state.Errors.NewUsername}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-envelope\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"email\" name=\"NewEmail\" class=\"form-control\" placeholder=\"someone@example.com\" autocomplete=\"off\"\r\n                                        value={this.state.NewEmail} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Email</div>\r\n                                <div class=\"content-text-secondary text-danger\">{this.state.Errors.NewEmail}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item active\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Save Changes?</div>\r\n                                <div class=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div class=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n                {this.state.CodeConfirmationDialog}\r\n            </div> \r\n        );\r\n    }\r\n};\r\n\r\nexport default UsernameAndEmailSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { validatePassword, passwordSettings } from \"../../DriverFunctions.js\";\r\n\r\nclass PasswordSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            CurrentPassword: \"\",\r\n            NewPassword: \"\",\r\n            ConfirmPassword: \"\",\r\n\r\n            ValidCurrentPassword: false,\r\n            ValidNewPassword: false,\r\n            ValidConfirmPassword: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                CurrentPassword: \"\",\r\n                NewPassword: \"\",\r\n                ConfirmPassword: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    async validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCurrentPassword = this.state.ValidCurrentPassword;\r\n        let ValidNewPassword = this.state.ValidNewPassword;\r\n        let ValidConfirmPassword = this.state.ValidConfirmPassword;\r\n\r\n        switch (field) {\r\n            case \"CurrentPassword\":\r\n                ValidCurrentPassword = (value !== \"\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is required.\";\r\n\r\n                if (Errors.CurrentPassword !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCurrentPassword = (value !== \"Invalid password.\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is invalid.\";\r\n                break;\r\n            case \"NewPassword\":\r\n                ValidNewPassword = value.length >= 6;\r\n                Errors.NewPassword = ValidNewPassword ? \"\" : \"Password is too short.\";\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                ValidConfirmPassword = value === this.state.NewPassword;\r\n                Errors.ConfirmPassword = ValidConfirmPassword ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCurrentPassword: ValidCurrentPassword,\r\n            ValidNewPassword: ValidNewPassword,\r\n            ValidConfirmPassword: ValidConfirmPassword,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidCurrentPassword &&\r\n                    this.state.ValidNewPassword &&\r\n                    this.state.ValidConfirmPassword\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        let passwordPackage = {\r\n            Token: localStorage.Token,\r\n            Password: this.state.CurrentPassword\r\n        };\r\n\r\n        await validatePassword(passwordPackage).then(async response => {\r\n            if (response.Message === \"Invalid password.\") {\r\n                this.validateField(\"CurrentPassword\", response.Message);\r\n            }\r\n            else {\r\n                const updatedDriver = {\r\n                    Token: localStorage.Token,\r\n                    Password: this.state.NewPassword\r\n                };\r\n\r\n                this.setState({\r\n                    Preloader: <Preloader />\r\n                });\r\n\r\n                await passwordSettings(updatedDriver).then(response => {\r\n                    if (response.Message === \"Driver is updated.\") {\r\n                        this.props.OnSettingsSaved();\r\n                    }\r\n\r\n                    this.setState({\r\n                        Preloader: null\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div class=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\" }}>Change Password</div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n                <div class=\"entity-list entity-list-expandable\">\r\n                    <div class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <div class=\"form-group\">\r\n                                <input type=\"password\" name=\"CurrentPassword\" class=\"form-control\" autoComplete=\"off\"\r\n                                    value={this.state.CurrentPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Current Password</div>\r\n                            <div class=\"text-danger\">{this.state.Errors[\"CurrentPassword\"]}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <div class=\"form-group\">\r\n                                <input type=\"password\" name=\"NewPassword\" class=\"form-control\" autoComplete=\"off\"\r\n                                    value={this.state.NewPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">New Password</div>\r\n                            <div class=\"text-danger\">{this.state.Errors[\"NewPassword\"]}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <div class=\"form-group\">\r\n                                <input type=\"password\" name=\"ConfirmPassword\" class=\"form-control\" autoComplete=\"off\"\r\n                                    value={this.state.ConfirmPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Confirm Password</div>\r\n                            <div class=\"text-danger\">{this.state.Errors[\"ConfirmPassword\"]}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"entity-list-item active\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-save\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Save Changes?</div>\r\n                            <div class=\"content-text-secondary\">This cannot be undone.</div>\r\n                        </div>\r\n                        <div class=\"item-content-expanded\">\r\n                            <input type=\"submit\" value=\"Save\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            {this.state.Preloader}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PasswordSettings;","import React, { Component } from \"react\";\r\nimport GeneralSettings from \"./GeneralSettings\";\r\nimport UsernameAndEmailSettings from \"./UsernameAndEmailSettings\";\r\nimport PasswordSettings from \"./PasswordSettings\";\r\n\r\nclass Settings extends Component {\r\n    render() {\r\n        return <section>\r\n            <GeneralSettings ref=\"GeneralSettings\" OnSettingsSaved={() => { this.refs.GeneralSettings.componentDidMount(); }} />\r\n            <UsernameAndEmailSettings ref=\"UsernameAndEmailSettings\" OnSettingsSaved={() => { this.refs.UsernameAndEmailSettings.componentDidMount(); }} />\r\n            <PasswordSettings ref=\"PasswordSettings\" OnSettingsSaved={() => { this.refs.PasswordSettings.forceUpdate(); }} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Settings;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Profile from \"./profile/Profile\";\r\nimport Truck from \"./trucks/Truck\";\r\nimport Permits from \"./permits/Permits\";\r\nimport FinancialAffairs from \"./financial_affairs/FinancialAffairs\";\r\nimport Jobs from \"./jobs/Jobs\";\r\nimport Payments from \"./payments/Payments\";\r\nimport Settings from \"./settings/Settings\";\r\n\r\nclass DriversDashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            SideNavWidth: 0\r\n        };\r\n\r\n        this.onCloseNavigation = this.onCloseNavigation.bind(this);\r\n    }\r\n\r\n    onCloseNavigation = () => {\r\n        this.setState({\r\n            SideNavWidth: 0\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.Token) {\r\n            return <Redirect to={\"/login\"} />;\r\n        }\r\n        else {\r\n            return <section>               \r\n                <div className=\"sidenav\" style={{ width: `${this.state.SideNavWidth}px` }}>\r\n                    <a href=\"javascript:void(0)\" className=\"closebtn\" onClick={this.onCloseNavigation}>&times;</a>\r\n                    <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{ marginLeft: \"0px\" }}>\r\n                        <li style={{ float: \"none\" }} onClick={this.onCloseNavigation} role=\"presentation\" className=\"active\">\r\n                            <a href=\"#profile\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">Profile</a>\r\n                        </li>\r\n                        <li style={{ float: \"none\" }} onClick={this.onCloseNavigation} role=\"presentation\">\r\n                            <a href=\"#trucks\" aria-controls=\"trucks\" role=\"tab\" data-toggle=\"tab\">Trucks</a>\r\n                        </li>\r\n                        <li style={{ float: \"none\" }} onClick={this.onCloseNavigation} role=\"presentation\">\r\n                            <a href=\"#permits\" aria-controls=\"permits\" role=\"tab\" data-toggle=\"tab\">Permits</a>\r\n                        </li>\r\n                        <li style={{ float: \"none\" }} onClick={this.onCloseNavigation} role=\"presentation\">\r\n                            <a href=\"#financialAffairs\" aria-controls=\"financialAffairs\" role=\"tab\" data-toggle=\"tab\">Financial Affairs</a>\r\n                        </li>\r\n                        <li style={{ float: \"none\" }} onClick={this.onCloseNavigation} role=\"presentation\">\r\n                            <a href=\"#jobs\" aria-controls=\"jobs\" role=\"tab\" data-toggle=\"tab\">Jobs</a>\r\n                        </li>\r\n                        <li style={{ float: \"none\" }} onClick={this.onCloseNavigation} role=\"presentation\">\r\n                            <a href=\"#payments\" aria-controls=\"payments\" role=\"tab\" data-toggle=\"tab\">Payments</a>\r\n                        </li>\r\n                        <li style={{ float: \"none\" }} onClick={this.onCloseNavigation} role=\"presentation\">\r\n                            <a href=\"#settings\" aria-controls=\"settings\" role=\"tab\" data-toggle=\"tab\">Settings</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"tab-content\">\r\n                    <div role=\"tabpanel\" className=\"tab-pane active\" id=\"profile\">\r\n                        <Profile />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"trucks\">\r\n                        <Truck />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"permits\">\r\n                        <Permits />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"financialAffairs\">\r\n                        <FinancialAffairs />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"jobs\">\r\n                        <Jobs />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"payments\">\r\n                        <Payments />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"settings\">\r\n                        <Settings />\r\n                    </div>\r\n                </div>\r\n                <div className=\"side-nav-btn\" onClick={() => {\r\n                    this.setState({\r\n                        SideNavWidth: 250\r\n                    });\r\n                }}><div className=\"fas fa-bars\" style={{ fontSize: \"x-large\" }}></div>\r\n                </div>\r\n            </section>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default DriversDashboard;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { getData, uploadTraderProfilePhoto } from \"../../TraderFunctions\";\r\nimport Strings from \"../../../../res/strings\";\r\n\r\nclass ProfilePhoto extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Image: null,\r\n            PhotoURL: \"./images/defaultProfilePhoto.png\",\r\n            UploadProgress: null,\r\n        };\r\n\r\n        this.onImageUpload = this.onImageUpload.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"ProfilePhoto\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Profile photo found.\") {\r\n                    let profilePhoto = response.ProfilePhoto;\r\n\r\n                    this.setState({\r\n                        PhotoURL: profilePhoto.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.state({\r\n                        PhotoURL: \"./images/defaultProfilePhoto.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onImageUpload = async event => {\r\n        this.state.Image = event.target.files[0];\r\n        const formData = new FormData();\r\n\r\n        try {\r\n            formData.append(\"Image\", this.state.Image, this.state.Image.name);\r\n\r\n            await axios.post(Strings.IMAGE_UPLOADER, formData, {\r\n                onUploadProgress: event => {\r\n                    this.setState({\r\n                        UploadProgress: <div className=\"progress-bar\">\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                        </div>\r\n                    });\r\n                }\r\n            }).then(async response => {\r\n                response = response.data;\r\n\r\n                if (response.message === \"Image uploaded successfully.\") {\r\n                    const traderProfilePhoto = {\r\n                        Token: localStorage.Token,\r\n                        PhotoURL: response.imageUrl,\r\n                        FileName: response.filename\r\n                    }\r\n\r\n                    let photoURL = response.imageUrl;\r\n\r\n                    await uploadTraderProfilePhoto(traderProfilePhoto).then(response => {\r\n                        if (response.Message === \"Profile photo is updated.\" ||\r\n                            response.Message === \"Profile photo is added.\") {\r\n\r\n                            this.setState({\r\n                                PhotoURL: photoURL,\r\n                                UploadProgress: null,\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }).catch(() => {\r\n                this.props.OnImageUploaded(\"Invalid Image.\");\r\n                this.setState({\r\n                    ImageURL: \"./images/defaultProfilePhoto.png\",\r\n                    UploadProgress: null,\r\n                });\r\n            });\r\n        }\r\n        catch (exception) {\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n\r\n            return;\r\n        }\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <input type=\"file\" onChange={this.onImageUpload} style={{ display: \"none\", }} ref={fileInput => this.fileInput = fileInput} />\r\n                <figure className=\"media\">\r\n                    <div className=\"media-img media-img-has-play ratio-movie\" style={{\r\n                        width: \"200px\",\r\n                        height: \"200px\",\r\n                        border: \"0px\",\r\n                        padding: \"0px\",\r\n                        border: \"5px solid #3A3A3C\"\r\n                    }}>\r\n                        <a href=\"#\" onClick={() => this.fileInput.click()}>\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                src={this.state.PhotoURL} alt=\"ProfilePhoto.png\" />\r\n                            <i className=\"glyph glyph-edit\"></i>\r\n                        </a>\r\n                    </div>\r\n                </figure>\r\n                {this.state.UploadProgress}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ProfilePhoto;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addIdentityCard } from \"../../../../TraderFunctions.js\";\r\n\r\nclass AddIdentityCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidIDNumber: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                IDNumber: \"\",\r\n                PhotoURL: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidIDNumber = this.state.ValidIDNumber;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"IDNumber\":\r\n                ValidIDNumber = (value !== \"\");\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidIDNumber = (value >= 1000000000 && value <= 9999999999);\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number must be 10-digits long.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidIDNumber: ValidIDNumber,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidIDNumber &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newIdentityCard = {\r\n            Token: localStorage.Token,\r\n            IDNumber: this.state.IDNumber,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to add Identity Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        addIdentityCard(newIdentityCard).then(response => {\r\n            if (response.Message === \"Identity card is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div className=\"modal\" id=\"add-identity-card-dialog\"\r\n                    tabindex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Add Identity Card</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => { \r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"IdentityCard\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">ID Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"IDNumber\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.IDNumber} onChange={this.onChange} min=\"1000000000\" max=\"9999999999\"/>\r\n                                                    <span className=\"text-danger\">{this.state.Errors.IDNumber}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddIdentityCardDialog;","import React, { Component } from \"react\";\r\nimport AddIdentityCardDialog from \"./AddIdentityCardDialog.js\";\r\n\r\nclass AddIdentityCardButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddIdentityCardDialog: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-identity-card-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddIdentityCardDialog: <AddIdentityCardDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddIdentityCardDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />,\r\n                        });\r\n                    }}>\r\n                    <span className=\"fas fa-plus\" aria-hidden=\"true\"></span> Identity Card\r\n                </button>\r\n                {this.state.AddIdentityCardDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddIdentityCardButton;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addCommercialRegisterCertificate } from \"../../../../TraderFunctions.js\";\r\n\r\nclass AddCommercialRegisterCertificateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Number: UUID().substring(0, 7).toUpperCase(),\r\n            Type: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidType: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                Type: \"\",\r\n                PhotoURL: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Certificate type is required.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidType: ValidType,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidType &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newCommercialRegisterCertificate = {\r\n            Token: localStorage.Token,\r\n            Number: this.state.Number,\r\n            Type: this.state.Type,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to add commercial register certificate.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        addCommercialRegisterCertificate(newCommercialRegisterCertificate).then(response => {\r\n            if (response.Message === \"Commercial register certificate is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div className=\"modal\" id=\"add-commercial-register-certificate-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Add Commercial Register Certificate</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => { \r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"CommercialRegisterCertificate\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Certificate Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Number\" className=\"form-control\" autoComplete=\"off\" readOnly\r\n                                                        value={this.state.Number} onChange={this.onChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Certificate Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddCommercialRegisterCertificateDialog;","import React, { Component } from \"react\";\r\nimport AddCommercialRegisterCertificateDialog from \"./AddCommercialRegisterCertificateDialog.js\";\r\n\r\nclass AddCommercialRegisterCertificateButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddCommercialRegisterCertificateDialog: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-commercial-register-certificate-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddCommercialRegisterCertificateDialog: <AddCommercialRegisterCertificateDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddCommercialRegisterCertificateDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />\r\n                        });\r\n                    }}>\r\n                    <span className=\"fas fa-plus\" aria-hidden=\"true\"></span> CR Certificate\r\n                </button>\r\n                {this.state.AddCommercialRegisterCertificateDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddCommercialRegisterCertificateButton;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateIdentityCard } from \"../../../../TraderFunctions.js\";\r\n\r\nclass EditIdentityCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidIDNumber: true,\r\n            ValidPhotoURL: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                IDNumber: \"\",\r\n                PhotoURL: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            this.setState({\r\n                Preloader: <Preloader />\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Identity card found.\") {\r\n                    let identityCard = response.IdentityCard;\r\n\r\n                    this.setState({\r\n                        IDNumber: identityCard.IDNumber,\r\n                        PhotoURL: identityCard.PhotoURL,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        IDNumber: \"\",\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                        Preloader: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidIDNumber = this.state.ValidIDNumber;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"IDNumber\":\r\n                ValidIDNumber = (value !== \"\");\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidIDNumber = (value >= 1000000000 && value <= 9999999999);\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number must be 10-digits long.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidIDNumber: ValidIDNumber,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidIDNumber &&\r\n                    this.state.ValidPhotoURL\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedIdentityCard = {\r\n            Token: localStorage.Token,\r\n            IDNumber: this.state.IDNumber,\r\n            PhotoURL: this.state.PhotoURL,\r\n        }\r\n\r\n        console.log(\"Going to update Identity Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        updateIdentityCard(updatedIdentityCard).then(response => {\r\n            if (response.Message === \"Identity card is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id=\"edit-identity-card-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Identity Card</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"IdentityCard\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">ID Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"IDNumber\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.IDNumber} onChange={this.onChange} min=\"1000000000\" max=\"99999999999\" />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.IDNumber}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default EditIdentityCardDialog;","import React, { Component } from \"react\";\r\nimport EditIdentityCardDialog from \"./EditIdentityCardDialog.js\";\r\nimport { getData, deleteIdentityCard } from \"../../../../TraderFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass IdentityCardListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Key: Math.floor(Math.random() * 100),\r\n            IdentityCardID: \"\",\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            EditIdentityCardDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onRefresh = this.onRefresh.bind(this);\r\n    }\r\n\r\n    onDelete = () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        let discardedIdentityCard = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete Identity Card.`);\r\n\r\n        deleteIdentityCard(discardedIdentityCard).then(response => {\r\n            console.log(response);\r\n            if (response.Message === \"Identity card is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onRefresh();\r\n    }\r\n\r\n    onRefresh = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Identity card found.\") {\r\n                    let identityCard = response.IdentityCard;\r\n\r\n                    this.setState({\r\n                        IdentityCardID: identityCard.IdentityCardID,\r\n                        IDNumber: identityCard.IDNumber,\r\n                        PhotoURL: identityCard.PhotoURL\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        IdentityCardID: \"\",\r\n                        IDNumber: \"\",\r\n                        PhotoURL: \"./images/default_image.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"list-items-row\">\r\n                <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#identity-card-${this.state.IdentityCardID}`}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                            <i className=\"glyph glyph-add\"></i>\r\n                            <i className=\"glyph glyph-remove\"></i>\r\n                            <strong>{this.props.Index}</strong>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <img className=\"img-responsive visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                src={this.state.PhotoURL} alt=\"identity_card.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>IDENTITY CARD</span>\r\n                            </div>\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>ID Number:</span> {this.state.IDNumber}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"collapse\" id={`identity-card-${this.state.IdentityCardID}`}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-18 col-md-offset-2\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block\"\r\n                                src={this.state.PhotoURL} alt=\"trailer.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"col-md-4 text-right\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#edit-identity-card-dialog\"\r\n                                onMouseDown={() => {\r\n                                    this.setState({\r\n                                        EditIdentityCardDialog: <EditIdentityCardDialog\r\n                                            OnCancel={() => {\r\n                                                this.setState({\r\n                                                    EditIdentityCardDialog: null\r\n                                                });\r\n                                            }}\r\n                                            OnOK={cancelButton => {\r\n                                                cancelButton.click();\r\n                                                this.onRefresh();\r\n                                            }} />\r\n                                    });\r\n                                }}>\r\n                                Edit\r\n                                </button>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </div>               \r\n                {this.state.Preloader}\r\n                {this.state.EditIdentityCardDialog}\r\n            </li>        \r\n        );\r\n    }\r\n};\r\n\r\nexport default IdentityCardListItem;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateCommercialRegisterCertificate } from \"../../../../TraderFunctions.js\";\r\n\r\nclass EditCommercialRegisterCertificateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Number: \"\",\r\n            Type: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidType: true,\r\n            ValidPhotoURL: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                Type: \"\",\r\n                PhotoURL: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onRefresh = this.onRefresh.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onRefresh();\r\n    }\r\n\r\n    onRefresh = () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"CommercialRegisterCertificate\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Commercial register certificate found.\") {\r\n                    let commercialRegisterCertificate = response.CommercialRegisterCertificate;\r\n\r\n                    this.setState({\r\n                        Number: commercialRegisterCertificate.Number,\r\n                        Type: commercialRegisterCertificate.Type,\r\n                        PhotoURL: commercialRegisterCertificate.PhotoURL,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Number: \"\",\r\n                        Type: \"\",\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                        Preloader: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Certificate type is required.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidType: ValidType,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidType &&\r\n                    this.state.ValidPhotoURL\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedCommercialRegisterCertificate = {\r\n            Token: localStorage.Token,\r\n            Number: this.state.Number,\r\n            Type: this.state.Type,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to update commercial register certificate.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        updateCommercialRegisterCertificate(updatedCommercialRegisterCertificate).then(response => {\r\n            if (response.Message === \"Commercial register certificate is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id=\"edit-commercial-register-certificate-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Commercial Register Certificate</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"IdentityCard\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Certificate Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Number\" className=\"form-control\" autoComplete=\"off\" readOnly\r\n                                                        value={this.state.Number} onChange={this.onChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Certificate Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default EditCommercialRegisterCertificateDialog;","import React, { Component } from \"react\";\r\nimport EditCommercialRegisterCertificateDialog from \"./EditCommercialRegisterCertificateDialog.js\";\r\nimport { getData, deleteCommercialRegisterCertificate } from \"../../../../TraderFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass CommercialRegisterCertificateListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ID: \"\",\r\n            Number: \"\",\r\n            Type: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            EditCommercialRegisterCertificateDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onRefresh = this.onRefresh.bind(this);\r\n    }\r\n\r\n    onDelete = () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        let discardedCommercialRegisterCertificate = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete commercial register certificate.`);\r\n\r\n        deleteCommercialRegisterCertificate(discardedCommercialRegisterCertificate).then(response => {\r\n            if (response.Message === \"Commercial register certificate is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onRefresh();\r\n    }\r\n\r\n    onRefresh = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"CommercialRegisterCertificate\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Commercial register certificate found.\") {\r\n                    let commercialRegisterCertificate = response.CommercialRegisterCertificate;\r\n\r\n                    this.setState({\r\n                        ID: commercialRegisterCertificate.ID,\r\n                        Number: commercialRegisterCertificate.Number,\r\n                        Type: commercialRegisterCertificate.Type,\r\n                        PhotoURL: commercialRegisterCertificate.PhotoURL\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        ID: \"\",\r\n                        Number: \"\",\r\n                        Type: \"\",\r\n                        PhotoURL: \"./images/default_image.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"list-items-row\">\r\n                <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#commercial-register-certificate-${this.state.ID}`}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                            <i className=\"glyph glyph-add\"></i>\r\n                            <i className=\"glyph glyph-remove\"></i>\r\n                            <strong>{this.props.Index}</strong>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <img className=\"img-responsive visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                src={this.state.PhotoURL} alt=\"identity_card.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>COMMERCIAL REGISTER CERTIFICATE</span>\r\n                            </div>\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Certificate Number:</span> {this.state.Number}\r\n                            </div>\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Certificate Type:</span> {this.state.Type}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"collapse\" id={`commercial-register-certificate-${this.state.ID}`}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-18 col-md-offset-2\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block\"\r\n                                src={this.state.PhotoURL} alt=\"trailer.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"col-md-4 text-right\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#edit-commercial-register-certificate-dialog\"\r\n                                onMouseDown={() => {\r\n                                    this.setState({\r\n                                        EditCommercialRegisterCertificateDialog: <EditCommercialRegisterCertificateDialog\r\n                                            OnCancel={() => {\r\n                                                this.setState({\r\n                                                    EditCommercialRegisterCertificateDialog: null\r\n                                                });\r\n                                            }}\r\n                                            OnOK={cancelButton => {\r\n                                                cancelButton.click();\r\n                                                this.onRefresh();\r\n                                            }} />\r\n                                    });\r\n                                }}>\r\n                                Edit\r\n                                </button>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </div>               \r\n                {this.state.Preloader}\r\n                {this.state.EditCommercialRegisterCertificateDialog}\r\n            </li>        \r\n        );\r\n    }\r\n};\r\n\r\nexport default CommercialRegisterCertificateListItem;","import React, { Component } from \"react\";\r\nimport AddIdentityCardButton from \"./identityCard/AddIdentityCardButton.js\";\r\nimport AddCommercialRegisterCertificateButton from \"./commercialRegisterCertificate/AddCommercialRegisterCertificateButton.js\";\r\nimport IdentityCardListItem from \"./identityCard/IdentityCardListItem.js\";\r\nimport CommercialRegisterCertificateListItem from \"./commercialRegisterCertificate/CommercialRegisterCertificateListItem.js\";\r\nimport { getData } from \"../../../TraderFunctions\";\r\n\r\nclass DocumentsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddIdentityCardButton: null, \r\n            AddCommercialRegisterCertificateButton: null,\r\n            IdentityCardListItem: null,\r\n            CommercialRegisterCertificateListItem: null\r\n        };\r\n\r\n        this.onDocumentsUpdated = this.onDocumentsUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"I'm Here.. Going to update documents...\");\r\n        this.onDocumentsUpdated();\r\n    }\r\n\r\n    onDocumentsUpdated = () => {\r\n        let index = 0;\r\n        let identityCard;\r\n        let commercialRegisterCertificate;\r\n\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response =>\r\n            {\r\n                console.log(response);\r\n                if (response.Message === \"Identity card found.\") {\r\n                    identityCard = response.IdentityCard;\r\n                }\r\n                else {\r\n                    identityCard = undefined;\r\n                }\r\n\r\n                request = {\r\n                    Token: localStorage.Token,\r\n                    Get: \"CommercialRegisterCertificate\"\r\n                };\r\n\r\n                getData(request).then(response => {\r\n                    if (response.Message === \"Commercial register certificate found.\") {\r\n                        commercialRegisterCertificate = response.CommercialRegisterCertificate;\r\n                    }\r\n                    else {\r\n                        commercialRegisterCertificate = undefined;\r\n                    }\r\n\r\n                    (identityCard) ? this.setState({\r\n                        AddIdentityCardButton: null,\r\n                        IdentityCardListItem: <IdentityCardListItem\r\n                            Index={++index}\r\n                            OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                    }) : this.setState({\r\n                        AddIdentityCardButton: <AddIdentityCardButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                        IdentityCardListItem: null\r\n                    });\r\n\r\n                    (commercialRegisterCertificate) ? this.setState({\r\n                        AddCommercialRegisterCertificateButton: null,\r\n                        CommercialRegisterCertificateListItem: <CommercialRegisterCertificateListItem\r\n                            Index={++index}\r\n                            OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                    }) : this.setState({\r\n                        AddCommercialRegisterCertificateButton: <AddCommercialRegisterCertificateButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                        CommercialRegisterCertificateListItem: null\r\n                    });\r\n                });\r\n            });         \r\n        }      \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Documents</div>\r\n                <div style={{ padding: \"10px\", backgroundColor: \"#E5E5E5\" }}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-18 col-md-offset-2\"></div>\r\n                        <div className=\"col-md-4 text-right\">\r\n                            {this.state.AddIdentityCardButton}\r\n                            {this.state.AddCommercialRegisterCertificateButton}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {this.state.IdentityCardListItem}\r\n                    {this.state.CommercialRegisterCertificateListItem}\r\n                </ol>\r\n            </section>         \r\n        );\r\n    }\r\n};\r\n\r\nexport default DocumentsList;","import React, { Component } from \"react\";\r\nimport { getData } from \"../../TraderFunctions\";\r\nimport ProfilePhoto from \"./ProfilePhoto\";\r\nimport DocumentsList from \"./documents/DocumentsList\";\r\n\r\nclass Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            Email: \"\",\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\"\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Trader\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader found.\") {\r\n                    let trader = response.Trader;\r\n\r\n                    this.setState({\r\n                        Username: trader.Username,\r\n                        Email: trader.Email,\r\n                        FirstName: trader.FirstName,\r\n                        LastName: trader.LastName,\r\n                        Address: trader.Address,\r\n                        PhoneNumber: trader.PhoneNumber,\r\n                        Gender: trader.Gender,\r\n                        Nationality: trader.Nationality,\r\n                        DateOfBirth: trader.DateOfBirth\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-sm\">\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group\" style={{ marginBottom: \"5px\", }}>\r\n                                    <ProfilePhoto />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                    {this.state.FirstName + \" \" + this.state.LastName}\r\n                                    </div>\r\n                                <div className=\"type-sh3\">\r\n                                    <span className=\"fas fa-briefcase\" style={{ color: \"#606060\" }}></span>   Trader\r\n                                    </div>\r\n                                <div>\r\n                                    <ol className=\"list-items theme-alt\">\r\n                                        <li className=\"list-items-row\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-2\">\r\n                                                    <strong><span className=\"fas fa-at\" style={{ color: \"#008575\" }}></span></strong>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <a style={{ textDecoration: \"none\", }}>Username:</a>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    {this.state.Username}\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li className=\"list-items-row\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-2\">\r\n                                                    <strong><span className=\"fas fa-envelope\" style={{ color: \"#008575\", }}></span></strong>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <a style={{ textDecoration: \"none\", }}>Email:</a>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    {this.state.Email}\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li className=\"list-items-row\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-2\">\r\n                                                    <strong><span className=\"fas fa-phone\" style={{ color: \"#008575\" }}></span></strong>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <a style={{ textDecoration: \"none\", }}>Phone Number:</a>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    {this.state.PhoneNumber}\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ol>\r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#00221E\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <div className=\"type-h3\" style={{ paddingTop: \"10px\", }}>\r\n                                    Details\r\n                                    </div>\r\n                                <ol className=\"list-items theme-alt\">\r\n                                    <li className=\"list-items-row\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-2\">\r\n                                                <strong><span className=\"fas fa-birthday-cake\" style={{ color: \"#008575\", }}></span></strong>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Date of Birth:</a>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                {this.state.DateOfBirth}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"list-items-row\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-2\">\r\n                                                <strong><span className={(this.state.Gender === \"Male\") ? \"fas fa-male\" : \"fas fa-female\"} style={{ color: \"#008575\", }}></span></strong>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Gender:</a>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                {this.state.Gender}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"list-items-row\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-2\">\r\n                                                <strong><span className=\"fas fa-flag\" style={{ color: \"#008575\" }}></span></strong>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Nationality:</a>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                {this.state.Nationality}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"list-items-row\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-2\">\r\n                                                <strong><span className=\"fas fa-map-marker\" style={{ color: \"#008575\" }}></span></strong>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Address:</a>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                {this.state.Address}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <DocumentsList />\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Profile;","import React, { Component } from \"react\";\r\n\r\nclass Alert extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        if (this.props.Message) {\r\n            return <div className=\"alert alert-info alert-dismissible fade in\" role=\"alert\" style={{ marginBottom: \"0px\" }}>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={this.props.OnClose}>\r\n                    <span aria-hidden=\"true\"><i className=\"fas fa-times\"></i></span>\r\n                </button>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-20\">\r\n                            <p>{this.props.Message}</p>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n        } else {\r\n            return null;\r\n        }\r\n        \r\n    }\r\n};\r\n\r\nexport default Alert;","import React, { Component } from \"react\";\r\n\r\nclass DocumentsDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const identityCard = this.props.Documents.IdentityCard;\r\n        const entryExitCard = this.props.Documents.EntryExitCard;\r\n        const drivingLicence = this.props.Documents.DrivingLicence;\r\n\r\n        const IdentityCard = identityCard ? <div className=\"row\">\r\n            <div className=\"col-md-8\">\r\n                <div className=\"form-group\" style={{ marginBottom: \"5px\", }}>\r\n                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                        src={identityCard.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                            overflow: \"hidden\",\r\n                            border: \"5px solid #3A3A3C\",\r\n                            margin: \"5px\"\r\n                        }} />\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-16\">\r\n                <div className=\"type-h5\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Identity Card</div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-24\">\r\n                        <div class=\"entity-list\">\r\n                            <div class=\"entity-list-item\">\r\n                                <div class=\"item-icon\">\r\n                                    <span class=\"fas fa-hashtag\"></span>\r\n                                </div>\r\n                                <div class=\"item-content-primary\">\r\n                                    <div class=\"content-text-primary\">ID Number</div>\r\n                                    <div class=\"content-text-secondary\">{identityCard.IDNumber}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> : null;\r\n\r\n        const DrivingLicence = drivingLicence ? <div className=\"row\">\r\n            <div className=\"col-md-8\">\r\n                <div className=\"form-group\" style={{ marginBottom: \"5px\", }}>\r\n                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                        src={drivingLicence.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                            overflow: \"hidden\",\r\n                            border: \"5px solid #3A3A3C\",\r\n                            margin: \"5px\"\r\n                        }} />\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-16\">\r\n                <div className=\"type-h5\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Driving Licence</div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-24\">\r\n                        <div class=\"entity-list\">\r\n                            <div class=\"entity-list-item\">\r\n                                <div class=\"item-icon\">\r\n                                    <span class=\"fas fa-hashtag\"></span>\r\n                                </div>\r\n                                <div class=\"item-content-primary\">\r\n                                    <div class=\"content-text-primary\">Licence Number</div>\r\n                                    <div class=\"content-text-secondary\">{drivingLicence.LicenceNumber}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list\">\r\n                            <div class=\"entity-list-item\">\r\n                                <div class=\"item-icon\">\r\n                                    <span class=\"fas fa-cog\"></span>\r\n                                </div>\r\n                                <div class=\"item-content-primary\">\r\n                                    <div class=\"content-text-primary\">Licence Type</div>\r\n                                    <div class=\"content-text-secondary\">{drivingLicence.Type}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list\">\r\n                            <div class=\"entity-list-item\">\r\n                                <div class=\"item-icon\">\r\n                                    <span class=\"fas fa-calendar\"></span>\r\n                                </div>\r\n                                <div class=\"item-content-primary\">\r\n                                    <div class=\"content-text-primary\">Release Date</div>\r\n                                    <div class=\"content-text-secondary\">{new Date(drivingLicence.ReleaseDate).toDateString()}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list\">\r\n                            <div class=\"entity-list-item\">\r\n                                <div class=\"item-icon\">\r\n                                    <span class=\"fas fa-calendar\"></span>\r\n                                </div>\r\n                                <div class=\"item-content-primary\">\r\n                                    <div class=\"content-text-primary\">Expiry Date</div>\r\n                                    <div class=\"content-text-secondary\">{new Date(drivingLicence.ExpiryDate).toDateString()}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> : null;\r\n\r\n        const EntryExitCard = entryExitCard ? <div className=\"row\">\r\n            <div className=\"col-md-8\">\r\n                <div className=\"form-group\" style={{ marginBottom: \"5px\", }}>\r\n                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                        src=\"./images/default_image.png\" alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                            overflow: \"hidden\",\r\n                            border: \"5px solid #3A3A3C\",\r\n                            margin: \"5px\"\r\n                        }} />\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-16\">\r\n                <div className=\"type-h5\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Entry/Exit Card</div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-24\">\r\n                        <div class=\"entity-list\">\r\n                            <div class=\"entity-list-item\">\r\n                                <div class=\"item-icon\">\r\n                                    <span class=\"fas fa-hashtag\"></span>\r\n                                </div>\r\n                                <div class=\"item-content-primary\">\r\n                                    <div class=\"content-text-primary\">Entry/Exit Number</div>\r\n                                    <div class=\"content-text-secondary\">{entryExitCard.EntryExitNumber}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list\">\r\n                            <div class=\"entity-list-item\">\r\n                                <div class=\"item-icon\">\r\n                                    <span class=\"fas fa-cog\"></span>\r\n                                </div>\r\n                                <div class=\"item-content-primary\">\r\n                                    <div class=\"content-text-primary\">Card Type</div>\r\n                                    <div class=\"content-text-secondary\">{entryExitCard.Type}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list\">\r\n                            <div class=\"entity-list-item\">\r\n                                <div class=\"item-icon\">\r\n                                    <span class=\"fas fa-calendar\"></span>\r\n                                </div>\r\n                                <div class=\"item-content-primary\">\r\n                                    <div class=\"content-text-primary\">Release Date</div>\r\n                                    <div class=\"content-text-secondary\">{new Date(entryExitCard.ReleaseDate).toDateString()}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list\">\r\n                            <div class=\"entity-list-item\">\r\n                                <div class=\"item-icon\">\r\n                                    <span class=\"fas fa-hashtag\"></span>\r\n                                </div>\r\n                                <div class=\"item-content-primary\">\r\n                                    <div class=\"content-text-primary\">Number of Months</div>\r\n                                    <div class=\"content-text-secondary\">{entryExitCard.NumberOfMonths}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> : null;\r\n\r\n        return <section>\r\n            <div className=\"modal\" id={`documents-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\" style={{ padding: \"0px\", backgroundColor: \"#FFFFFF\" }}>\r\n                        <div className=\"jumbotron theme-default\">\r\n                            <div className=\"container\">\r\n                                <div className=\"modal-header\">\r\n                                    <div className=\"type-h4\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Documents</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    {IdentityCard}\r\n                                    {DrivingLicence}\r\n                                    {EntryExitCard}\r\n                                </div>\r\n\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DocumentsDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport DocumentsDialog from \"./DocumentsDialog\";\r\n\r\nclass DriverTab extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const driver = this.props.Driver;\r\n        const driverProfilePhoto = this.props.DriverProfilePhoto ?\r\n            this.props.DriverProfilePhoto : \"./images/defaultProfilePhoto.png\";\r\n\r\n        const dialogID = UUID().substring(0, 7).toUpperCase();\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group\" style={{ marginBottom: \"5px\", }}>\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={driverProfilePhoto} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-18\">\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                {driver.FirstName + \" \" + driver.LastName}\r\n                            </div>\r\n                            <div className=\"type-sh3\">\r\n                                <span className=\"fas fa-car\" style={{ color: \"#606060\" }}></span>   Driver\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div class=\"entity-list\">\r\n                                        <div class=\"entity-list-item\">\r\n                                            <div class=\"item-icon\">\r\n                                                <span class={(driver.Gender === \"Male\") ? \"fas fa-male\" : \"fas fa-female\"}></span>\r\n                                            </div>\r\n                                            <div class=\"item-content-primary\">\r\n                                                <div class=\"content-text-primary\">Gender</div>\r\n                                                <div class=\"content-text-secondary\">{driver.Gender}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"entity-list\">\r\n                                        <div class=\"entity-list-item\">\r\n                                            <div class=\"item-icon\">\r\n                                                <span class=\"fas fa-birthday-cake\"></span>\r\n                                            </div>\r\n                                            <div class=\"item-content-primary\">\r\n                                                <div class=\"content-text-primary\">Birthday</div>\r\n                                                <div class=\"content-text-secondary\">{driver.DateOfBirth}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"entity-list\">\r\n                                        <div class=\"entity-list-item\">\r\n                                            <div class=\"item-icon\">\r\n                                                <span class=\"fas fa-flag\"></span>\r\n                                            </div>\r\n                                            <div class=\"item-content-primary\">\r\n                                                <div class=\"content-text-primary\">Nationality</div>\r\n                                                <div class=\"content-text-secondary\">{driver.Nationality}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    <div class=\"entity-list\">\r\n                                        <div class=\"entity-list-item\">\r\n                                            <div class=\"item-icon\">\r\n                                                <span class=\"fas fa-envelope\"></span>\r\n                                            </div>\r\n                                            <div class=\"item-content-primary\">\r\n                                                <div class=\"content-text-primary\">Email</div>\r\n                                                <div class=\"content-text-secondary\">{driver.Email}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"entity-list\">\r\n                                        <div class=\"entity-list-item\">\r\n                                            <div class=\"item-icon\">\r\n                                                <span class=\"fas fa-phone\"></span>\r\n                                            </div>\r\n                                            <div class=\"item-content-primary\">\r\n                                                <div class=\"content-text-primary\">Phone Number</div>\r\n                                                <div class=\"content-text-secondary\">{driver.PhoneNumber}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"entity-list\">\r\n                                        <div class=\"entity-list-item\">\r\n                                            <button type=\"button\" className=\"btn btn-default\"\r\n                                                style={{ minWidth: \"152px\" }} data-toggle=\"modal\"\r\n                                                disabled={!this.props.Documents}\r\n                                                data-target={`#documents-dialog-${dialogID}`}>Documents</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <DocumentsDialog Documents={this.props.Documents} DialogID={dialogID} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DriverTab;","import React, { Component } from \"react\";\r\n\r\nclass TrailersDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const trailers = this.props.Trailers;\r\n        let Trailers = (trailers.length > 0) ? <section>\r\n            {trailers.map((trailer, index) => {\r\n                return <div key={index} className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                        <div className=\"form-group\" style={{ marginBottom: \"5px\", }}>\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                src={trailer.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-16\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-24\">\r\n                                <div class=\"entity-list\">\r\n                                    <div class=\"entity-list-item\">\r\n                                        <div class=\"item-icon\">\r\n                                            <span class=\"fas fa-weight\"></span>\r\n                                        </div>\r\n                                        <div class=\"item-content-primary\">\r\n                                            <div class=\"content-text-primary\">Maximum Weight</div>\r\n                                            <div class=\"content-text-secondary\">{`${trailer.MaximumWeight} GVM`}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"entity-list\">\r\n                                    <div class=\"entity-list-item\">\r\n                                        <div class=\"item-icon\">\r\n                                            <span class=\"fas fa-cog\"></span>\r\n                                        </div>\r\n                                        <div class=\"item-content-primary\">\r\n                                            <div class=\"content-text-primary\">Trailer Type</div>\r\n                                            <div class=\"content-text-secondary\">{trailer.Type}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>;\r\n            })}\r\n        </section> : null;\r\n\r\n        return <section>\r\n            <div className=\"modal\" id={`trailers-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\" style={{ padding: \"0px\", backgroundColor: \"#FFFFFF\" }}>\r\n                        <div className=\"jumbotron theme-default\">\r\n                            <div className=\"container\">\r\n                                <div className=\"modal-header\">\r\n                                    <div className=\"type-h4\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Trailers</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    {Trailers}\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TrailersDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport TrailersDialog from \"./TrailersDialog\";\r\n\r\nclass TruckTab extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const truck = this.props.Truck;\r\n        const dialogID = UUID().substring(0, 7).toUpperCase();\r\n\r\n       return <section>\r\n           <div className=\"jumbotron theme-default\">\r\n               <div className=\"container\">\r\n                   <div className=\"row\">\r\n                       <div className=\"col-md-6\">\r\n                           <div className=\"form-group\" style={{ marginBottom: \"5px\", }}>\r\n                               <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                   src={truck.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                       overflow: \"hidden\",\r\n                                       border: \"5px solid #3A3A3C\",\r\n                                       margin: \"5px\"\r\n                                   }} />\r\n                           </div>\r\n                       </div>\r\n                       <div className=\"col-md-18\">\r\n                           <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                               {truck.Brand + \" \" + truck.Model}\r\n                           </div>\r\n                           <div className=\"type-sh3\">\r\n                               <span className=\"fas fa-truck\" style={{ color: \"#606060\" }}></span>   {truck.Type}\r\n                           </div>\r\n                           <div className=\"row\">\r\n                               <div className=\"col-md-12\">\r\n                                   <div class=\"entity-list\">\r\n                                       <div class=\"entity-list-item\">\r\n                                           <div class=\"item-icon\">\r\n                                               <span class=\"fas fa-list-ol\"></span>\r\n                                           </div>\r\n                                           <div class=\"item-content-primary\">\r\n                                               <div class=\"content-text-primary\">Plate Number</div>\r\n                                               <div class=\"content-text-secondary\">{truck.PlateNumber}</div>\r\n                                           </div>\r\n                                       </div>\r\n                                   </div>\r\n                                   <div class=\"entity-list\">\r\n                                       <div class=\"entity-list-item\">\r\n                                           <div class=\"item-icon\">\r\n                                               <span class=\"fas fa-user\"></span>\r\n                                           </div>\r\n                                           <div class=\"item-content-primary\">\r\n                                               <div class=\"content-text-primary\">Owner</div>\r\n                                               <div class=\"content-text-secondary\">{truck.Owner}</div>\r\n                                           </div>\r\n                                       </div>\r\n                                   </div>\r\n                               </div>\r\n                               <div className=\"col-md-12\">\r\n                                   <div class=\"entity-list\">\r\n                                       <div class=\"entity-list-item\">\r\n                                           <div class=\"item-icon\">\r\n                                               <span class=\"fas fa-calendar-day\"></span>\r\n                                           </div>\r\n                                           <div class=\"item-content-primary\">\r\n                                               <div class=\"content-text-primary\">Production Year</div>\r\n                                               <div class=\"content-text-secondary\">{truck.ProductionYear}</div>\r\n                                           </div>\r\n                                       </div>\r\n                                   </div>\r\n                                   <div class=\"entity-list\">\r\n                                       <div class=\"entity-list-item\">\r\n                                           <div class=\"item-icon\">\r\n                                               <span class=\"fas fa-weight\"></span>\r\n                                           </div>\r\n                                           <div class=\"item-content-primary\">\r\n                                               <div class=\"content-text-primary\">Maximum Weight</div>\r\n                                               <div class=\"content-text-secondary\">{`${truck.MaximumWeight} GVW`}</div>\r\n                                           </div>\r\n                                       </div>\r\n                                   </div>\r\n                                   <div class=\"entity-list\">\r\n                                       <div class=\"entity-list-item\">\r\n                                           <button type=\"button\" className=\"btn btn-default\"\r\n                                               style={{ minWidth: \"152px\" }} data-toggle=\"modal\"\r\n                                               disabled={!this.props.Trailers}\r\n                                               data-target={`#trailers-dialog-${dialogID}`}>Trailers</button>\r\n                                       </div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n           <TrailersDialog Trailers={this.props.Trailers} DialogID={dialogID} />\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default TruckTab;","import React, { Component } from \"react\";\r\n\r\nclass JobRequestTab extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const jobRequest = this.props.JobRequest;\r\n        const createdHoursAgo = Math.abs(new Date() - new Date(jobRequest.TimeCreated)) / 36e5;\r\n\r\n       return <section>\r\n           <div className=\"jumbotron theme-default\">\r\n               <div className=\"container\">\r\n                   <div className=\"col-md-24\">\r\n                       <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Job Request</div>\r\n                       <div className=\"type-sh3\">\r\n                           <span className=\"fas fa-tag\" style={{ color: \"#606060\" }}></span>   {`$${jobRequest.Price}`}\r\n                       </div>\r\n                   </div>\r\n                   <div className=\"row\">\r\n                       <div className=\"col-md-12\">\r\n                           <div class=\"entity-list\">\r\n                               <div class=\"entity-list-item\">\r\n                                   <div class=\"item-icon\">\r\n                                       <span class=\"fas fa-map-marker-alt\"></span>\r\n                                   </div>\r\n                                   <div class=\"item-content-primary\">\r\n                                       <div class=\"content-text-primary\">Loading Place</div>\r\n                                       <div class=\"content-text-secondary\">{jobRequest.LoadingPlace}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div class=\"entity-list\">\r\n                               <div class=\"entity-list-item\">\r\n                                   <div class=\"item-icon\">\r\n                                       <span class=\"fas fa-map-marker-alt\"></span>\r\n                                   </div>\r\n                                   <div class=\"item-content-primary\">\r\n                                       <div class=\"content-text-primary\">Unloading Place</div>\r\n                                       <div class=\"content-text-secondary\">{jobRequest.UnloadingPlace}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div class=\"entity-list\">\r\n                               <div class=\"entity-list-item\">\r\n                                   <div class=\"item-icon\">\r\n                                       <span class=\"fas fa-map-signs\"></span>\r\n                                   </div>\r\n                                   <div class=\"item-content-primary\">\r\n                                       <div class=\"content-text-primary\">Trip Type</div>\r\n                                       <div class=\"content-text-secondary\">{jobRequest.TripType}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                       <div className=\"col-md-12\">\r\n                           <div class=\"entity-list\">\r\n                               <div class=\"entity-list-item\">\r\n                                   <div class=\"item-icon\">\r\n                                       <span class=\"fas fa-plug\"></span>\r\n                                   </div>\r\n                                   <div class=\"item-content-primary\">\r\n                                       <div class=\"content-text-primary\">Available</div>\r\n                                       <div class=\"content-text-secondary\">{(createdHoursAgo < jobRequest.WaitingTime) ? \r\n                                           <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                           <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div class=\"entity-list\">\r\n                               <div class=\"entity-list-item\">\r\n                                   <div class=\"item-icon\">\r\n                                       <span class=\"fas fa-calendar\"></span>\r\n                                   </div>\r\n                                   <div class=\"item-content-primary\">\r\n                                       <div class=\"content-text-primary\">Posted on</div>\r\n                                       <div class=\"content-text-secondary\">{new Date(jobRequest.TimeCreated).toDateString()}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div class=\"entity-list\">\r\n                               <div class=\"entity-list-item\">\r\n                                   <div class=\"item-icon\">\r\n                                       <span class=\"fas fa-clock\"></span>\r\n                                   </div>\r\n                                   <div class=\"item-content-primary\">\r\n                                       <div class=\"content-text-primary\">Posted at</div>\r\n                                       <div class=\"content-text-secondary\">{new Date(jobRequest.TimeCreated).toTimeString()}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobRequestTab;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { addTraderRequest } from \"../../../TraderFunctions.js\";\r\n\r\nclass SendTraderRequestDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            CargoType: \"\",\r\n            CargoWeight: 0,          \r\n            LoadingDate: new Date(),\r\n            LoadingTime: new Date().getTime(),\r\n            AcceptedDelay: 0,\r\n            EntryExit: 0,\r\n\r\n            ValidCargoType: false,\r\n            ValidCargoWeight: false,\r\n            ValidLoadingDate: false,\r\n            ValidLoadingTime: false,\r\n            ValidAcceptedDelay: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                CargoType: \"\",\r\n                CargoWeight: \"\",\r\n                LoadingDate: \"\",\r\n                LoadingTime: \"\",\r\n                AcceptedDelay: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCargoType = this.state.ValidCargoType;\r\n        let ValidCargoWeight = this.state.ValidCargoWeight;\r\n        let ValidLoadingDate = this.state.ValidLoadingDate;\r\n        let ValidLoadingTime = this.state.ValidLoadingTime;\r\n        let ValidAcceptedDelay = this.state.ValidAcceptedDelay;\r\n\r\n        switch (field) {\r\n            case \"CargoType\":\r\n                ValidCargoType = (value !== \"\");\r\n                Errors.CargoType = ValidCargoType ? \"\" : \"Cargo type is required.\";\r\n                break;\r\n            case \"CargoWeight\":\r\n                ValidCargoWeight = (value !== \"\");\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight is required.\"; \r\n\r\n                if (Errors.CargoWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCargoWeight = (value >= 100);\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight must be greater than 100 lbs.\";\r\n                break;\r\n            case \"LoadingDate\":\r\n                ValidLoadingDate = (value !== \"\");\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date is required.\";\r\n\r\n                if (Errors.LoadingDate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidLoadingDate = (new Date(value) >= new Date());\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date must be later than yesterday.\";\r\n                break;\r\n            case \"LoadingTime\":\r\n                ValidLoadingTime = (value !== \"\");\r\n                Errors.LoadingTime = ValidLoadingTime ? \"\" : \"Loading time is required.\";\r\n                break;\r\n            case \"AcceptedDelay\":\r\n                ValidAcceptedDelay = (value !== \"\");\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay is required.\";\r\n\r\n                if (Errors.AcceptedDelay !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidAcceptedDelay = (value >= 0 && value <= 48);\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay can be in the range of 0 to 48 hours.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCargoType: ValidCargoType,\r\n            ValidCargoWeight: ValidCargoWeight,\r\n            ValidLoadingDate: ValidLoadingDate,\r\n            ValidLoadingTime: ValidLoadingTime,\r\n            ValidAcceptedDelay: ValidAcceptedDelay\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidCargoType &&\r\n                        this.state.ValidCargoWeight &&\r\n                        this.state.ValidLoadingDate &&\r\n                        this.state.ValidLoadingTime &&\r\n                        this.state.AcceptedDelay\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (this.props.IsRequestSent()) {\r\n            return;\r\n        }\r\n\r\n        const newTraderRequest = {\r\n            Token: localStorage.Token,\r\n            JobRequestID: this.props.JobRequest.JobRequestID,\r\n            CargoType: this.state.CargoType,\r\n            CargoWeight: this.state.CargoWeight,\r\n            LoadingDate: this.state.LoadingDate,\r\n            LoadingTime: this.state.LoadingTime,\r\n            EntryExit: this.state.EntryExit,\r\n            AcceptedDelay: this.state.AcceptedDelay\r\n        };\r\n\r\n        console.log(\"Going to add trader request...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addTraderRequest(newTraderRequest).then(response => {\r\n            if (response.Message === \"Trader request is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div className=\"modal\" id={`send-trader-reqeust-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"send.png\" src=\"./images/send.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Send Request</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Cargo Type</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"CargoType\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.CargoType} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.CargoType}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Cargo Weight (lbs)</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"CargoWeight\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.CargoWeight} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.CargoWeight}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Accepted Delay (Hours)</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"AcceptedDelay\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.AcceptedDelay} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.AcceptedDelay}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Loading Date</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"date\" name=\"LoadingDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.LoadingDate} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.LoadingDate}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Loading Time</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"time\" name=\"LoadingTime\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.LoadingTime} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.LoadingTime}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"checkbox\">\r\n                                                    <label className=\"control-label\">\r\n                                                        <input type=\"checkbox\" name=\"EntryExit\"\r\n                                                            value={this.state.EntryExit} onChange={() => {\r\n                                                                this.state.EntryExit = this.state.EntryExit ? 0 : 1;\r\n                                                            }}></input>\r\n                                                        <span>Entry/Exit</span>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\"\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Send\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default SendTraderRequestDialog;","import React, { Component } from \"react\";\r\nimport DriverTab from \"./DriverTab\";\r\nimport TruckTab from \"./TruckTab\";\r\nimport JobRequestTab from \"./JobRequestTab\";\r\nimport SendTraderRequestDialog from \"./SendTraderRequestDialog\";\r\n\r\nclass JobRequestPostListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const jobRequest = this.props.JobRequestPost.JobRequest;\r\n        const driver = this.props.JobRequestPost.Driver;\r\n        const driverProfilePhoto = this.props.JobRequestPost.DriverProfilePhoto;\r\n        const truck = this.props.JobRequestPost.Truck;\r\n        const trailers = this.props.JobRequestPost.Trailers;\r\n        const requestSent = this.props.JobRequestPost.RequestSent;\r\n\r\n        const documents = {\r\n            IdentityCard: this.props.JobRequestPost.IdentityCard,\r\n            DrivingLicence: this.props.JobRequestPost.DrivingLicence,\r\n            EntryExitCard: this.props.JobRequestPost.EntryExitCard\r\n        };\r\n\r\n        return <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"2px solid #EAEAEA\" }}>\r\n                <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#job-request-post-${index}`}>\r\n                    <div className=\"entity-list\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <img src={driverProfilePhoto ? driverProfilePhoto : \"./images/defaultProfilePhoto.png\"} alt=\"defaultProfilePhoto.png\" />\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"content-text-primary\">{jobRequest.LoadingPlace}\r\n                                </div>\r\n                                <div className=\"content-text-secondary\">{jobRequest.UnloadingPlace}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                {requestSent ? \r\n                                    <div className=\"content-text-primary\">{driver.FirstName} {driver.LastName}\r\n                                        <span className=\"fas fa-paper-plane\" style={{ color: \"#008575\", fontSize: \"x-small\" }}></span>\r\n                                        <span style={{ color: \"#008575\", fontSize: \"x-small\" }}>REQUEST SENT</span>\r\n                                    </div> :\r\n                                    <div className=\"content-text-primary\">{driver.FirstName} {driver.LastName}</div>}\r\n                                <div className=\"content-text-secondary\">\r\n                                    <div>\r\n                                        <span className=\"fas fa-globe-asia\" style={{ color: \"#707070\" }}></span> . {new Date(jobRequest.TimeCreated).toDateString()}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"collapse\" id={`job-request-post-${index}`}>\r\n                    <ul className=\"nav nav-tabs\" role=\"tablist\"\r\n                        style={{\r\n                            padding: \"10px\",\r\n                            backgroundColor: \"#EFEFEF\",\r\n                            width: \"100%\",\r\n                            margin: \"0px\"\r\n                        }}>\r\n                        <li role=\"presentation\" className=\"active\"><a href={`#job-request-${index}`} aria-controls={`job-request-${index}`} role=\"tab\" data-toggle=\"tab\">Job Request</a></li>\r\n                        <li role=\"presentation\"><a href={`#driver-${index}`} aria-controls={`driver-${index}`} role=\"tab\" data-toggle=\"tab\">Driver</a></li>\r\n                        <li role=\"presentation\"><a href={`#truck-${index}`} aria-controls={`truck-${index}`} role=\"tab\" data-toggle=\"tab\">Truck</a></li>\r\n                    </ul>\r\n                    <div className=\"tab-content\">\r\n                        <div role=\"tabpanel\" className=\"tab-pane active\" id={`job-request-${index}`}>\r\n                            <JobRequestTab JobRequest={jobRequest} />\r\n                        </div>\r\n                        <div role=\"tabpanel\" className=\"tab-pane\" id={`driver-${index}`}>\r\n                            <DriverTab Driver={driver} DriverProfilePhoto={driverProfilePhoto} Documents={documents} />\r\n                        </div>\r\n                        <div role=\"tabpanel\" className=\"tab-pane\" id={`truck-${index}`}>\r\n                            <TruckTab Truck={truck} Trailers={trailers} />\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ backgroundColor: \"#EFEFEF\", textAlign: \"right\", padding: \"10px\" }}>\r\n                        <button className=\"btn btn-primary\" disabled={requestSent}\r\n                            data-toggle=\"modal\"\r\n                            data-target={`#send-trader-reqeust-dialog-${index}`}>{requestSent ? \"Request Sent\" : \"Send Request\"}</button>\r\n                    </div>\r\n                </div>\r\n                <SendTraderRequestDialog\r\n                    DialogID={index}\r\n                    JobRequest={jobRequest}\r\n                    IsRequestSent={() => { return requestSent; }}\r\n                    OnOK={() => { this.props.OnRequestSent(jobRequest); }} />\r\n            </li>\r\n        </section>;     \r\n    }\r\n};\r\n\r\nexport default JobRequestPostListItem;","import React, { Component } from \"react\";\r\nimport Alert from \"../../../../../controls/Alert\";\r\nimport ProgressBar from \"../../../../../controls/ProgressBar\";\r\nimport { getData } from \"../../../TraderFunctions\";\r\nimport JobRequestPostListItem from \"./JobRequestPostListItem\";\r\n\r\nclass JobRequestPostsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobRequestPosts: [],\r\n            Searching: true,\r\n            Preloader: null,\r\n            Message: null,\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobRequestPosts\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job request posts found.\") {\r\n                    this.setState({\r\n                        JobRequestPosts: response.JobRequestPosts,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobRequestPosts: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Searching) {\r\n            return <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"job_requests.png\" src=\"./images/job_requests.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div className=\"col-md-12 col-md-pull-12\">\r\n                                <div className=\"type-h3\">Job Requests</div>\r\n                                <p>Job requests from Drivers are dispalyed here.</p>\r\n                                <div className=\"type-sh3\" style={{ color: \"#008575\" }}>Searhcing</div>\r\n                                <ProgressBar />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n        else if (this.state.JobRequestPosts.length === 0) {\r\n            return <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"job_requests.png\" src=\"./images/job_requests.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div className=\"col-md-12 col-md-pull-12\">\r\n                                <div className=\"type-h3\">Job Requests</div>\r\n                                <div className=\"type-sh3\">No Job Requests Found...</div>\r\n                                <p>Job requests from Drivers are dispalyed here.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n        else {\r\n            return <section>\r\n                <Alert Message={this.state.Message}\r\n                    onClose={() => {\r\n                    this.setState({\r\n                        Message: null\r\n                    });\r\n                }} />\r\n           <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n           <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Job Requests</div>\r\n                <ol className=\"list-items\" style={{ marginTop: \"0px\" }}>\r\n                    {this.state.JobRequestPosts.map((jobRequestPost, index) => {\r\n                        return <JobRequestPostListItem key={index} Index={index}\r\n                            JobRequestPost={jobRequestPost}\r\n                            OnRequestSent={jobRequest => {\r\n                                let jobRequestPosts = this.state.JobRequestPosts;\r\n\r\n                                for (let jobRequestPost of jobRequestPosts) {\r\n                                    if (jobRequestPost.JobRequest.JobRequestID === jobRequest.JobRequestID) {\r\n                                        jobRequestPost.RequestSent = true;\r\n                                        break;\r\n                                    }\r\n                                }\r\n\r\n                                this.setState({\r\n                                    JobRequestPosts: jobRequestPosts\r\n                                });\r\n\r\n                            }} />;\r\n                    })} \r\n                </ol>\r\n       </section>;\r\n        }      \r\n    }\r\n};\r\n\r\nexport default JobRequestPostsList;","import React, { Component } from \"react\";\r\nimport JobRequestPostsList from \"./JobRequestPostsList\";\r\n\r\nclass JobOffers extends Component {\r\n   render() {\r\n       return <section>\r\n           <JobRequestPostsList />\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobOffers;","import React, { Component } from \"react\";\r\n\r\nclass DocumentsDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const identityCard = this.props.Documents.IdentityCard;\r\n        const entryExitCard = this.props.Documents.EntryExitCard;\r\n        const drivingLicence = this.props.Documents.DrivingLicence;\r\n\r\n        const IdentityCard = identityCard ? <div className=\"row\">\r\n            <div className=\"col-md-8\">\r\n                <div className=\"form-group\" style={{ marginBottom: \"5px\", }}>\r\n                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                        src={identityCard.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                            overflow: \"hidden\",\r\n                            border: \"5px solid #3A3A3C\",\r\n                            margin: \"5px\"\r\n                        }} />\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-16\">\r\n                <div className=\"type-h5\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Identity Card</div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-24\">\r\n                        <div class=\"entity-list\">\r\n                            <div class=\"entity-list-item\">\r\n                                <div class=\"item-icon\">\r\n                                    <span class=\"fas fa-hashtag\"></span>\r\n                                </div>\r\n                                <div class=\"item-content-primary\">\r\n                                    <div class=\"content-text-primary\">ID Number</div>\r\n                                    <div class=\"content-text-secondary\">{identityCard.IDNumber}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> : null;\r\n\r\n        const DrivingLicence = drivingLicence ? <div className=\"row\">\r\n            <div className=\"col-md-8\">\r\n                <div className=\"form-group\" style={{ marginBottom: \"5px\", }}>\r\n                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                        src={drivingLicence.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                            overflow: \"hidden\",\r\n                            border: \"5px solid #3A3A3C\",\r\n                            margin: \"5px\"\r\n                        }} />\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-16\">\r\n                <div className=\"type-h5\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Driving Licence</div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-24\">\r\n                        <div class=\"entity-list\">\r\n                            <div class=\"entity-list-item\">\r\n                                <div class=\"item-icon\">\r\n                                    <span class=\"fas fa-hashtag\"></span>\r\n                                </div>\r\n                                <div class=\"item-content-primary\">\r\n                                    <div class=\"content-text-primary\">Licence Number</div>\r\n                                    <div class=\"content-text-secondary\">{drivingLicence.LicenceNumber}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list\">\r\n                            <div class=\"entity-list-item\">\r\n                                <div class=\"item-icon\">\r\n                                    <span class=\"fas fa-cog\"></span>\r\n                                </div>\r\n                                <div class=\"item-content-primary\">\r\n                                    <div class=\"content-text-primary\">Licence Type</div>\r\n                                    <div class=\"content-text-secondary\">{drivingLicence.Type}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list\">\r\n                            <div class=\"entity-list-item\">\r\n                                <div class=\"item-icon\">\r\n                                    <span class=\"fas fa-calendar\"></span>\r\n                                </div>\r\n                                <div class=\"item-content-primary\">\r\n                                    <div class=\"content-text-primary\">Release Date</div>\r\n                                    <div class=\"content-text-secondary\">{new Date(drivingLicence.ReleaseDate).toDateString()}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list\">\r\n                            <div class=\"entity-list-item\">\r\n                                <div class=\"item-icon\">\r\n                                    <span class=\"fas fa-calendar\"></span>\r\n                                </div>\r\n                                <div class=\"item-content-primary\">\r\n                                    <div class=\"content-text-primary\">Expiry Date</div>\r\n                                    <div class=\"content-text-secondary\">{new Date(drivingLicence.ExpiryDate).toDateString()}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> : null;\r\n\r\n        const EntryExitCard = entryExitCard ? <div className=\"row\">\r\n            <div className=\"col-md-8\">\r\n                <div className=\"form-group\" style={{ marginBottom: \"5px\", }}>\r\n                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                        src=\"./images/default_image.png\" alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                            overflow: \"hidden\",\r\n                            border: \"5px solid #3A3A3C\",\r\n                            margin: \"5px\"\r\n                        }} />\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-16\">\r\n                <div className=\"type-h5\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Entry/Exit Card</div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-24\">\r\n                        <div class=\"entity-list\">\r\n                            <div class=\"entity-list-item\">\r\n                                <div class=\"item-icon\">\r\n                                    <span class=\"fas fa-hashtag\"></span>\r\n                                </div>\r\n                                <div class=\"item-content-primary\">\r\n                                    <div class=\"content-text-primary\">Entry/Exit Number</div>\r\n                                    <div class=\"content-text-secondary\">{entryExitCard.EntryExitNumber}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list\">\r\n                            <div class=\"entity-list-item\">\r\n                                <div class=\"item-icon\">\r\n                                    <span class=\"fas fa-cog\"></span>\r\n                                </div>\r\n                                <div class=\"item-content-primary\">\r\n                                    <div class=\"content-text-primary\">Card Type</div>\r\n                                    <div class=\"content-text-secondary\">{entryExitCard.Type}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list\">\r\n                            <div class=\"entity-list-item\">\r\n                                <div class=\"item-icon\">\r\n                                    <span class=\"fas fa-calendar\"></span>\r\n                                </div>\r\n                                <div class=\"item-content-primary\">\r\n                                    <div class=\"content-text-primary\">Release Date</div>\r\n                                    <div class=\"content-text-secondary\">{new Date(entryExitCard.ReleaseDate).toDateString()}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list\">\r\n                            <div class=\"entity-list-item\">\r\n                                <div class=\"item-icon\">\r\n                                    <span class=\"fas fa-hashtag\"></span>\r\n                                </div>\r\n                                <div class=\"item-content-primary\">\r\n                                    <div class=\"content-text-primary\">Number of Months</div>\r\n                                    <div class=\"content-text-secondary\">{entryExitCard.NumberOfMonths}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> : null;\r\n\r\n        return <section>\r\n            <div className=\"modal\" id={`driver-request-documents-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\" style={{ padding: \"0px\", backgroundColor: \"#FFFFFF\" }}>\r\n                        <div className=\"jumbotron theme-default\">\r\n                            <div className=\"container\">\r\n                                <div className=\"modal-header\">\r\n                                    <div className=\"type-h4\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Documents</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    {IdentityCard}\r\n                                    {DrivingLicence}\r\n                                    {EntryExitCard}\r\n                                </div>\r\n\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DocumentsDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport DocumentsDialog from \"./DocumentsDialog\";\r\n\r\nclass DriverTab extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const driver = this.props.Driver;\r\n        const driverProfilePhoto = this.props.DriverProfilePhoto ?\r\n            this.props.DriverProfilePhoto : \"./images/defaultProfilePhoto.png\";\r\n        const driverRequest = this.props.DriverRequest;\r\n\r\n        const dialogID = UUID().substring(0, 7).toUpperCase();\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group\" style={{ marginBottom: \"5px\", }}>\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={driverProfilePhoto} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-18\">\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                {driver.FirstName + \" \" + driver.LastName}\r\n                            </div>\r\n                            <div className=\"type-sh3\" style={{ color: \"#008575\" }}>\r\n                                {(driverRequest.Price) ? `BADE AT $${driverRequest.Price}.` : \"WANTS TO TAKE YOUR OFFER.\"}\r\n                            </div>\r\n                            <div className=\"type-sh3\">\r\n                                <span className=\"fas fa-car\" style={{ color: \"#606060\" }}></span>   Driver\r\n                            </div>\r\n                            {(index === 0) ? <div className=\"type-sh3\" style={{ color: \"#FFBF15\" }}>\r\n                                <span className=\"fas fa-certificate\" style={{ color: \"#FFBF15\" }}></span>   LATEST\r\n                                </div> : null}\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div class=\"entity-list\">\r\n                                        <div class=\"entity-list-item\">\r\n                                            <div class=\"item-icon\">\r\n                                                <span class={(driver.Gender === \"Male\") ? \"fas fa-male\" : \"fas fa-female\"}></span>\r\n                                            </div>\r\n                                            <div class=\"item-content-primary\">\r\n                                                <div class=\"content-text-primary\">Gender</div>\r\n                                                <div class=\"content-text-secondary\">{driver.Gender}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"entity-list\">\r\n                                        <div class=\"entity-list-item\">\r\n                                            <div class=\"item-icon\">\r\n                                                <span class=\"fas fa-birthday-cake\"></span>\r\n                                            </div>\r\n                                            <div class=\"item-content-primary\">\r\n                                                <div class=\"content-text-primary\">Birthday</div>\r\n                                                <div class=\"content-text-secondary\">{driver.DateOfBirth}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"entity-list\">\r\n                                        <div class=\"entity-list-item\">\r\n                                            <div class=\"item-icon\">\r\n                                                <span class=\"fas fa-flag\"></span>\r\n                                            </div>\r\n                                            <div class=\"item-content-primary\">\r\n                                                <div class=\"content-text-primary\">Nationality</div>\r\n                                                <div class=\"content-text-secondary\">{driver.Nationality}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    <div class=\"entity-list\">\r\n                                        <div class=\"entity-list-item\">\r\n                                            <div class=\"item-icon\">\r\n                                                <span class=\"fas fa-envelope\"></span>\r\n                                            </div>\r\n                                            <div class=\"item-content-primary\">\r\n                                                <div class=\"content-text-primary\">Email</div>\r\n                                                <div class=\"content-text-secondary\">{driver.Email}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"entity-list\">\r\n                                        <div class=\"entity-list-item\">\r\n                                            <div class=\"item-icon\">\r\n                                                <span class=\"fas fa-phone\"></span>\r\n                                            </div>\r\n                                            <div class=\"item-content-primary\">\r\n                                                <div class=\"content-text-primary\">Phone Number</div>\r\n                                                <div class=\"content-text-secondary\">{driver.PhoneNumber}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"entity-list\">\r\n                                        <div class=\"entity-list-item\">\r\n                                            <button type=\"button\" className=\"btn btn-default\"\r\n                                                style={{ minWidth: \"152px\" }} data-toggle=\"modal\"\r\n                                                disabled\r\n                                                data-target={`#driver-request-documents-dialog-${dialogID}`}>Documents</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <DocumentsDialog Documents={this.props.Documents} DialogID={dialogID} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DriverTab;","import React, { Component } from \"react\";\r\n\r\nclass TrailersDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const trailers = this.props.Trailers;\r\n        let Trailers = (trailers.length > 0) ? <section>\r\n            {trailers.map((trailer, index) => {\r\n                return <div key={index} className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                        <div className=\"form-group\" style={{ marginBottom: \"5px\", }}>\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                src={trailer.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-16\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-24\">\r\n                                <div class=\"entity-list\">\r\n                                    <div class=\"entity-list-item\">\r\n                                        <div class=\"item-icon\">\r\n                                            <span class=\"fas fa-weight\"></span>\r\n                                        </div>\r\n                                        <div class=\"item-content-primary\">\r\n                                            <div class=\"content-text-primary\">Maximum Weight</div>\r\n                                            <div class=\"content-text-secondary\">{`${trailer.MaximumWeight} GVM`}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"entity-list\">\r\n                                    <div class=\"entity-list-item\">\r\n                                        <div class=\"item-icon\">\r\n                                            <span class=\"fas fa-cog\"></span>\r\n                                        </div>\r\n                                        <div class=\"item-content-primary\">\r\n                                            <div class=\"content-text-primary\">Trailer Type</div>\r\n                                            <div class=\"content-text-secondary\">{trailer.Type}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>;\r\n            })}\r\n        </section> : null;\r\n\r\n        return <section>\r\n            <div className=\"modal\" id={`driver-request-trailers-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\" style={{ padding: \"0px\", backgroundColor: \"#FFFFFF\" }}>\r\n                        <div className=\"jumbotron theme-default\">\r\n                            <div className=\"container\">\r\n                                <div className=\"modal-header\">\r\n                                    <div className=\"type-h4\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Trailers</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    {Trailers}\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TrailersDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport TrailersDialog from \"./TrailersDialog\";\r\n\r\nclass TruckTab extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const truck = this.props.Truck;\r\n        const dialogID = UUID().substring(0, 7).toUpperCase();\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group\" style={{ marginBottom: \"5px\", }}>\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={truck.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-18\">\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                {truck.Brand + \" \" + truck.Model}\r\n                            </div>\r\n                            <div className=\"type-sh3\">\r\n                                <span className=\"fas fa-truck\" style={{ color: \"#606060\" }}></span>   {truck.Type}\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div class=\"entity-list\">\r\n                                        <div class=\"entity-list-item\">\r\n                                            <div class=\"item-icon\">\r\n                                                <span class=\"fas fa-list-ol\"></span>\r\n                                            </div>\r\n                                            <div class=\"item-content-primary\">\r\n                                                <div class=\"content-text-primary\">Plate Number</div>\r\n                                                <div class=\"content-text-secondary\">{truck.PlateNumber}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"entity-list\">\r\n                                        <div class=\"entity-list-item\">\r\n                                            <div class=\"item-icon\">\r\n                                                <span class=\"fas fa-user\"></span>\r\n                                            </div>\r\n                                            <div class=\"item-content-primary\">\r\n                                                <div class=\"content-text-primary\">Owner</div>\r\n                                                <div class=\"content-text-secondary\">{truck.Owner}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    <div class=\"entity-list\">\r\n                                        <div class=\"entity-list-item\">\r\n                                            <div class=\"item-icon\">\r\n                                                <span class=\"fas fa-calendar-day\"></span>\r\n                                            </div>\r\n                                            <div class=\"item-content-primary\">\r\n                                                <div class=\"content-text-primary\">Production Year</div>\r\n                                                <div class=\"content-text-secondary\">{truck.ProductionYear}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"entity-list\">\r\n                                        <div class=\"entity-list-item\">\r\n                                            <div class=\"item-icon\">\r\n                                                <span class=\"fas fa-weight\"></span>\r\n                                            </div>\r\n                                            <div class=\"item-content-primary\">\r\n                                                <div class=\"content-text-primary\">Maximum Weight</div>\r\n                                                <div class=\"content-text-secondary\">{`${truck.MaximumWeight} GVW`}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"entity-list\">\r\n                                        <div class=\"entity-list-item\">\r\n                                            <button type=\"button\" className=\"btn btn-default\"\r\n                                                style={{ minWidth: \"152px\" }} data-toggle=\"modal\"\r\n                                                disabled\r\n                                                data-target={`#driver-request-trailers-dialog-${dialogID}`}>Trailers</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <TrailersDialog Trailers={this.props.Trailers} DialogID={dialogID} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TruckTab;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport DriverTab from \"./DriverTab\";\r\nimport TruckTab from \"./TruckTab\";\r\n\r\nclass JobRequestTab extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const driverRequestPackage = this.props.DriverRequestPackage;\r\n        const driver = driverRequestPackage.Driver;\r\n        const driverProfilePhoto = driverRequestPackage.ProfilePhoto; \r\n        const driverRequest = driverRequestPackage.DriverRequest;\r\n        const truck = driverRequestPackage.Truck;\r\n        const trailers = driverRequestPackage.Trailers;\r\n\r\n        const documents = {\r\n            DrivingLicence: driverRequestPackage.DrivingLicence,\r\n            IdentityCard: driverRequestPackage.IdentityCard,\r\n            EntryExitCard: driverRequestPackage.EntryExitCard\r\n        };\r\n\r\n        const driverTabID = UUID().substring(0, 7).toUpperCase();\r\n        const truckTabID = UUID().substring(0, 7).toUpperCase();\r\n\r\n        return <section>\r\n            <ul className=\"nav nav-tabs\" role=\"tablist\"\r\n                style={{\r\n                    padding: \"10px\",\r\n                    backgroundColor: \"#EFEFEF\",\r\n                    width: \"100%\",\r\n                    margin: \"0px\"\r\n                }}>\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href={`#driver-request-driver-${driverTabID}`} aria-controls={`driver-request-driver-${driverTabID}`} role=\"tab\" data-toggle=\"tab\">Driver</a>\r\n                </li>\r\n                {truck ? <li role=\"presentation\">\r\n                    <a href={`#driver-request-truck-${truckTabID}`} aria-controls={`driver-request-truck-${truckTabID}`} role=\"tab\" data-toggle=\"tab\">Truck</a>\r\n                </li> : null}\r\n            </ul>\r\n            <div className=\"tab-content\">\r\n                <div role=\"tabpanel\" className=\"tab-pane active\" id={`driver-request-driver-${driverTabID}`}>\r\n                    <DriverTab\r\n                        Driver={driver}\r\n                        DriverProfilePhoto={driverProfilePhoto}\r\n                        Documents={documents}\r\n                        DriverRequest={driverRequest}\r\n                        Index={index} />\r\n                </div>\r\n                {truck ? <div role=\"tabpanel\" className=\"tab-pane\" id={`driver-request-truck-${truckTabID}`}>\r\n                    <TruckTab Truck={truck} Trailers={trailers} Index={index} />\r\n                </div> : null}\r\n            </div>\r\n            <div style={{ backgroundColor: \"#EFEFEF\", textAlign: \"right\", padding: \"10px\" }}>\r\n                <button className=\"btn btn-primary\">Assign Job</button>\r\n            </div>\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobRequestTab;","import React, { Component } from \"react\";\r\nimport DriverRequest from \"./DriverRequest\";\r\n\r\nclass DriverRequestsCarousel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const driverRequestPackages = this.props.DriverRequestPackages;\r\n        return <section>\r\n            <div id=\"driver-requests-carousel\" className=\"carousel slide\" data-ride=\"false\" data-interval=\"20000\" >\r\n                <div style={{ backgroundColor: \"#008575\", textAlign: \"center\" }}>\r\n                    {(driverRequestPackages.length > 1) ? \r\n                        <ul className=\"pager theme-alt\" style={{ margin: \"0px\" }}>\r\n                            <li className=\"pager-next\">\r\n                                <a href=\"#driver-requests-carousel\" data-slide=\"prev\">\r\n                                    <i aria-hidden=\"true\" className=\"glyph glyph-chevron-left-2\"></i>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"pager-next\">\r\n                                <a href=\"#driver-requests-carousel\" data-slide=\"next\">\r\n                                    <i aria-hidden=\"true\" className=\"glyph glyph-chevron-right-2\"></i>\r\n                                </a>\r\n                            </li>\r\n                        </ul> : null}\r\n                </div>\r\n                <div className=\"carousel-inner\">\r\n                    {driverRequestPackages.map((driverRequestPackage, index) => {\r\n                        return <div key={index} className={(index === 0) ? \"item active\" : \"item\"}>\r\n                            <DriverRequest DriverRequestPackage={driverRequestPackage} Index={0} />\r\n                        </div>;\r\n                    })}\r\n                </div>               \r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DriverRequestsCarousel;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { updateJobOffer } from \"../../../TraderFunctions.js\";\r\n\r\nclass EditJobOfferDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobOfferID: this.props.JobOffer.JobOfferID,\r\n            LoadingPlace: this.props.JobOffer.LoadingPlace,\r\n            UnloadingPlace: this.props.JobOffer.UnloadingPlace,\r\n            TripType: this.props.JobOffer.TripType,\r\n            CargoType: this.props.JobOffer.CargoType,\r\n            CargoWeight: this.props.JobOffer.CargoWeight,\r\n            LoadingDate: this.props.JobOffer.LoadingDate,\r\n            LoadingTime: this.props.JobOffer.LoadingTime,\r\n            AcceptedDelay: this.props.JobOffer.AcceptedDelay,\r\n            Price: this.props.JobOffer.Price,\r\n            JobOfferType: this.props.JobOffer.JobOfferType,\r\n            EntryExit: this.props.JobOffer.EntryExit,\r\n\r\n            ValidCargoType: true,\r\n            ValidCargoWeight: true,\r\n            ValidLoadingPlace: true,\r\n            ValidUnloadingPlace: true,\r\n            ValidLoadingDate: true,\r\n            ValidLoadingTime: true,\r\n            ValidAcceptedDelay: true,\r\n            ValidPrice: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                CargoType: \"\",\r\n                CargoWeight: \"\",\r\n                LoadingPlace: \"\",\r\n                UnloadingPlace: \"\",\r\n                LoadingDate: \"\",\r\n                LoadingTime: \"\",\r\n                AcceptedDelay: \"\",\r\n                Price: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCargoType = this.state.ValidCargoType;\r\n        let ValidCargoWeight = this.state.ValidCargoWeight;\r\n        let ValidLoadingPlace = this.state.ValidLoadingPlace;\r\n        let ValidUnloadingPlace = this.state.ValidUnloadingPlace;\r\n        let ValidLoadingDate = this.state.ValidLoadingDate;\r\n        let ValidLoadingTime = this.state.ValidLoadingTime;\r\n        let ValidAcceptedDelay = this.state.ValidAcceptedDelay;\r\n        let ValidPrice = this.state.ValidPrice;\r\n\r\n        switch (field) {\r\n            case \"CargoType\":\r\n                ValidCargoType = (value !== \"\");\r\n                Errors.CargoType = ValidCargoType ? \"\" : \"Cargo type is required.\";\r\n                break;\r\n            case \"CargoWeight\":\r\n                ValidCargoWeight = (value !== \"\");\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight is required.\";\r\n\r\n                if (Errors.CargoWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCargoWeight = (value >= 100);\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight must be greater than 100 lbs.\";\r\n                break;\r\n            case \"LoadingPlace\":\r\n                ValidLoadingPlace = (value !== \"\");\r\n                Errors.LoadingPlace = ValidLoadingPlace ? \"\" : \"Loading place is required.\";\r\n                break;\r\n            case \"UnloadingPlace\":\r\n                ValidUnloadingPlace = (value !== \"\");\r\n                Errors.UnloadingPlace = ValidUnloadingPlace ? \"\" : \"Unloading place is required.\";\r\n                break;\r\n            case \"LoadingDate\":\r\n                ValidLoadingDate = (value !== \"\");\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date is required.\";\r\n\r\n                if (Errors.LoadingDate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidLoadingDate = (new Date(value) >= new Date());\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date must be later than yesterday.\";\r\n                break;\r\n            case \"LoadingTime\":\r\n                break;\r\n            case \"AcceptedDelay\":\r\n                ValidAcceptedDelay = (value !== \"\");\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay is required.\";\r\n\r\n                if (Errors.AcceptedDelay !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidAcceptedDelay = (value >= 0 && value <= 48);\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay can be in the range of 0 to 48 hours.\";\r\n                break;\r\n            case \"Price\":\r\n                ValidPrice = (value !== \"\");\r\n                Errors.Price = ValidPrice ? \"\" : \"Price is required.\";\r\n\r\n                if (Errors.Price !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPrice = (value > 0.00);\r\n                Errors.Price = ValidPrice ? \"\" : \"Price must be more than $0.00.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCargoType: ValidCargoType,\r\n            ValidCargoWeight: ValidCargoWeight,\r\n            ValidLoadingPlace: ValidLoadingPlace,\r\n            ValidUnloadingPlace: ValidUnloadingPlace,\r\n            ValidLoadingDate: ValidLoadingDate,\r\n            ValidLoadingTime: ValidLoadingTime,\r\n            ValidAcceptedDelay: ValidAcceptedDelay,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidCargoType &&\r\n                    this.state.ValidCargoWeight &&\r\n                    this.state.ValidLoadingPlace &&\r\n                    this.state.ValidUnloadingPlace &&\r\n                    this.state.ValidLoadingDate &&\r\n                    this.state.ValidLoadingTime &&\r\n                    this.state.AcceptedDelay &&\r\n                    this.state.ValidPrice\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedJobOffer = {\r\n            Token: localStorage.Token,\r\n            JobOfferID: this.state.JobOfferID,\r\n            TripType: this.state.TripType,\r\n            CargoType: this.state.CargoType,\r\n            CargoWeight: this.state.CargoWeight,\r\n            LoadingPlace: this.state.LoadingPlace,\r\n            UnloadingPlace: this.state.UnloadingPlace,\r\n            LoadingDate: this.state.LoadingDate,\r\n            LoadingTime: this.state.LoadingTime,\r\n            EntryExit: this.state.EntryExit,\r\n            Price: this.state.Price,\r\n            AcceptedDelay: this.state.AcceptedDelay,\r\n            JobOfferType: this.state.JobOfferType\r\n        };\r\n\r\n        console.log(\"Going to update Job offer.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateJobOffer(updatedJobOffer).then(response => {\r\n            if (response.Message === \"Job offer is updated.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div className=\"modal\" id={`edit-job-offer-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Edit Job Offer</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                                    alt=\"job_offfers.png\" src=\"./images/job_offers.png\" data-source-index=\"2\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Loading Place</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"LoadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.LoadingPlace} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.LoadingPlace}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Unloading Place</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"UnloadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.UnloadingPlace} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.UnloadingPlace}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Trip Type</label><br />\r\n                                                <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                    <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                        aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                        <span>{this.state.TripType}</span>\r\n                                                        <span className=\"caret\"></span>\r\n                                                    </button>\r\n                                                    <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                        <li><a onClick={() => { this.setState({ TripType: \"One Way\" }); }}>One Way</a></li>\r\n                                                        <li><a onClick={() => { this.setState({ TripType: \"Two Way\" }); }}>Two Way</a></li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Cargo Type</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"CargoType\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.CargoType} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.CargoType}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Cargo Weight (lbs)</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"CargoWeight\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.CargoWeight} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.CargoWeight}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Loading Date</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"date\" name=\"LoadingDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.LoadingDate} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.LoadingDate}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Loading Time</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"time\" name=\"LoadingTime\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.LoadingTime} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.LoadingTime}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Accepted Delay (Hours)</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"AcceptedDelay\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.AcceptedDelay} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.AcceptedDelay}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Price (USD)</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" min=\"0.00\" step=\"0.01\" max=\"100.00\" name=\"Price\"\r\n                                                    className=\"form-control\" autoComplete=\"off\" value={this.state.Price} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Price}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <button type=\"button\" data-toggle=\"button\" className={(this.state.JobOfferType === \"Auctionable\") ? \"btn btn-toggle-switch active\" : \"btn btn-toggle-switch\"}\r\n                                                    autocomplete=\"off\" aria-pressed={(this.state.JobOfferType === \"Auctionable\") ? \"true\" : \"false\"}\r\n                                                    onClick={() => {\r\n                                                        this.state.JobOfferType = (this.state.JobOfferType === \"Fixed-Price\") ?\r\n                                                            \"Auctionable\" : \"Fixed-Price\";\r\n                                                        this.validateField(\"\", \"\");\r\n                                                    }}>\r\n                                                    <span className=\"stateLabel stateLabel-on\">Auctionable Job Offer</span>\r\n                                                    <span className=\"stateLabel stateLabel-off\">Fixed-Price Job Offer</span>\r\n                                                </button>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"checkbox\">\r\n                                                    <label className=\"control-label\">\r\n                                                        <input type=\"checkbox\" name=\"EntryExit\" defaultChecked={(this.state.EntryExit === 1) ? \"checked\" : \"\"}\r\n                                                            value={this.state.EntryExit} onChange={() => {\r\n                                                                this.state.EntryExit = (this.state.EntryExit === 1) ? 0 : 1;\r\n                                                                this.validateField(\"\", \"\");\r\n                                                            }}></input>\r\n                                                        <span>Entry/Exit</span>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\"\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default EditJobOfferDialog;","import React, { Component } from \"react\";\r\nimport DriverRequestsCarousel from \"./DriverRequestsCarousel\";\r\nimport EditJobOfferDialog from \"./EditJobOfferDialog\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { deleteJobOffer } from \"../../../TraderFunctions\";\r\n\r\nclass JobOfferPackageItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async jobOfferID => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedJobOffer = {\r\n            Token: localStorage.Token,\r\n            JobOfferID: jobOfferID\r\n        };\r\n\r\n        console.log(`Going to delete Job offer...`);\r\n\r\n        await deleteJobOffer(discardedJobOffer).then(response => {\r\n            if (response.Message === \"Job offer is deleted.\") {\r\n                this.props.OnJobOfferUpdated();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const jobOffer = this.props.JobOfferPackage.JobOffer;\r\n        const driverRequestPackages = this.props.JobOfferPackage.DriverRequestPackages;\r\n        const index = this.props.Index;\r\n\r\n        const createdHoursAgo = Math.abs(new Date() - new Date(jobOffer.TimeCreated)) / 36e5;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"col-md-24\">\r\n                        <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>{`${index + 1}. ${jobOffer.JobOfferType} Job Offer`}</div>\r\n                        <div className=\"type-sh3\">\r\n                            <span className=\"fas fa-tag\" style={{ color: \"#606060\" }}></span>   {`$${jobOffer.Price}`}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-map-marker-alt\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Place</div>\r\n                                        <div className=\"content-text-secondary\">{jobOffer.LoadingPlace}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-map-marker-alt\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Unloading Place</div>\r\n                                        <div className=\"content-text-secondary\">{jobOffer.UnloadingPlace}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-map-signs\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Trip Type</div>\r\n                                        <div className=\"content-text-secondary\">{jobOffer.TripType}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Accpeted Delay</div>\r\n                                        <div className=\"content-text-secondary\">{`${jobOffer.AcceptedDelay} Hour(s)`}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-box\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Cargo Type</div>\r\n                                        <div className=\"content-text-secondary\">{jobOffer.CargoType}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-weight\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Cargo Weight</div>\r\n                                        <div className=\"content-text-secondary\">{`${jobOffer.CargoWeight} lbs.`}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Date</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(jobOffer.LoadingDate).toDateString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Time</div>\r\n                                        <div className=\"content-text-secondary\">{jobOffer.LoadingTime}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-id-badge\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Entry/Exit</div>\r\n                                        <div className=\"content-text-secondary\">{(jobOffer.EntryExit === 1) ?\r\n                                            <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                            <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-plug\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Availabe</div>\r\n                                        <div className=\"content-text-secondary\">{(createdHoursAgo < jobOffer.WaitingTime) ?\r\n                                            <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                            <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Posted on</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(jobOffer.TimeCreated).toDateString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Posted at</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(jobOffer.TimeCreated).toTimeString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                <button type=\"button\" className=\"btn btn-default\"\r\n                    data-toggle=\"modal\"\r\n                    disabled={(driverRequestPackages.length !== 0)}\r\n                    data-target={`#edit-job-offer-dialog-${index}`}>Edit</button>\r\n                <button className=\"btn btn-danger\" onClick={async () => { await this.onDelete(jobOffer.JobOfferID); }}>Delete</button>\r\n            </div>\r\n\r\n            <EditJobOfferDialog\r\n                DialogID={index}\r\n                JobOffer={jobOffer}\r\n                CanEdit={() => { return (driverRequestPackages.length === 0) ? true : false }}\r\n                OnOK={() => { this.props.OnJobOfferUpdated(); }} />\r\n\r\n            <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#job-offer-package-${index}`} style={{ backgroundColor: \"#DFDFDF\" }}>\r\n                <div className=\"type-h4\" style={{ color: \"#008575\", padding: \"10px\", textAlign: \"right\" }}>\r\n                    <span style={{\r\n                        backgroundColor: \"#D75A4A\",\r\n                        color: \"#FEFEFE\",\r\n                        textAlign: \"center\",\r\n                        fontWeight: \"bold\",\r\n                        fontSize: \"x-small\",\r\n                        padding: \"5px\",\r\n                        borderRadius: \"50%\",\r\n                        width: \"20px\",\r\n                        height: \"20px\",\r\n                        display: \"inline-block\"\r\n                    }}>{driverRequestPackages.length}</span> {(jobOffer.JobOfferType === \"Fixed-Price\") ? \"Driver Requests\" : \"Driver Bids\"} <i className=\"fas fa-ellipsis-v\"></i></div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`job-offer-package-${index}`}>\r\n                {(driverRequestPackages.length === 0) ? <div className=\"jumbotron theme-dark\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-24 text-center\">\r\n                                <h3><span className=\"fas fa-exclamation-triangle\" style={{ color: \"#FFBF15\" }}></span> {(jobOffer.JobOfferType === \"Fixed-Price\") ? \"No requests found.\" : \"No bids found.\"}</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> : <DriverRequestsCarousel DriverRequestPackages={driverRequestPackages} />}\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            </div>\r\n\r\n            {this.state.Preloader}\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobOfferPackageItem;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { addJobOffer } from \"../../../TraderFunctions.js\";\r\n\r\nclass AddJobOfferDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LoadingPlace: \"\",\r\n            UnloadingPlace: \"\",\r\n            TripType: \"One Way\",\r\n            CargoType: \"\",\r\n            CargoWeight: 0,          \r\n            LoadingDate: new Date(),\r\n            LoadingTime: new Date().getTime(),\r\n            AcceptedDelay: 0,\r\n            Price: 0.00,\r\n            JobOfferType: \"Fixed-Price\",\r\n            EntryExit: 0,\r\n\r\n            ValidCargoType: false,\r\n            ValidCargoWeight: false,\r\n            ValidLoadingPlace: false,\r\n            ValidUnloadingPlace: false,\r\n            ValidLoadingDate: false,\r\n            ValidLoadingTime: false,\r\n            ValidAcceptedDelay: false,\r\n            ValidPrice: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                CargoType: \"\",\r\n                CargoWeight: \"\",\r\n                LoadingPlace: \"\",\r\n                UnloadingPlace: \"\",\r\n                LoadingDate: \"\",\r\n                LoadingTime: \"\",\r\n                AcceptedDelay: \"\",\r\n                Price: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        if (name === \"EntryExit\" ||\r\n            name === \"JobOfferType\") {\r\n            console.log(`Value of ${name} is ${value}`);\r\n        }\r\n        \r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCargoType = this.state.ValidCargoType;\r\n        let ValidCargoWeight = this.state.ValidCargoWeight;\r\n        let ValidLoadingPlace = this.state.ValidLoadingPlace;\r\n        let ValidUnloadingPlace = this.state.ValidUnloadingPlace;\r\n        let ValidLoadingDate = this.state.ValidLoadingDate;\r\n        let ValidLoadingTime = this.state.ValidLoadingTime;\r\n        let ValidAcceptedDelay = this.state.ValidAcceptedDelay;\r\n        let ValidPrice = this.state.ValidPrice;\r\n\r\n        switch (field) {\r\n            case \"CargoType\":\r\n                ValidCargoType = (value !== \"\");\r\n                Errors.CargoType = ValidCargoType ? \"\" : \"Cargo type is required.\";\r\n                break;\r\n            case \"CargoWeight\":\r\n                ValidCargoWeight = (value !== \"\");\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight is required.\"; \r\n\r\n                if (Errors.CargoWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCargoWeight = (value >= 100);\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight must be greater than 100 lbs.\";\r\n                break;\r\n            case \"LoadingPlace\":\r\n                ValidLoadingPlace = (value !== \"\");\r\n                Errors.LoadingPlace = ValidLoadingPlace ? \"\" : \"Loading place is required.\";\r\n                break;\r\n            case \"UnloadingPlace\":\r\n                ValidUnloadingPlace = (value !== \"\");\r\n                Errors.UnloadingPlace = ValidUnloadingPlace ? \"\" : \"Unloading place is required.\";\r\n                break;\r\n            case \"LoadingDate\":\r\n                ValidLoadingDate = (value !== \"\");\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date is required.\";\r\n\r\n                if (Errors.LoadingDate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidLoadingDate = (new Date(value) >= new Date());\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date must be later than yesterday.\";\r\n                break;\r\n            case \"LoadingTime\":\r\n                ValidLoadingTime = (value !== \"\");\r\n                Errors.LoadingTime = ValidLoadingTime ? \"\" : \"Loading time is required.\";\r\n                break;\r\n            case \"AcceptedDelay\":\r\n                ValidAcceptedDelay = (value !== \"\");\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay is required.\";\r\n\r\n                if (Errors.AcceptedDelay !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidAcceptedDelay = (value >= 0 && value <= 48);\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay can be in the range of 0 to 48 hours.\";\r\n                break;\r\n            case \"Price\":\r\n                ValidPrice = (value !== \"\");\r\n                Errors.Price = ValidPrice ? \"\" : \"Price is required.\";\r\n\r\n                if (Errors.Price !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPrice = (value > 0.00);\r\n                Errors.Price = ValidPrice ? \"\" : \"Price must be more than $0.00.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCargoType: ValidCargoType,\r\n            ValidCargoWeight: ValidCargoWeight,\r\n            ValidLoadingPlace: ValidLoadingPlace,\r\n            ValidUnloadingPlace: ValidUnloadingPlace,\r\n            ValidLoadingDate: ValidLoadingDate,\r\n            ValidLoadingTime: ValidLoadingTime,\r\n            ValidAcceptedDelay: ValidAcceptedDelay,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidCargoType &&\r\n                        this.state.ValidCargoWeight &&\r\n                        this.state.ValidLoadingPlace &&\r\n                        this.state.ValidUnloadingPlace &&\r\n                        this.state.ValidLoadingDate &&\r\n                        this.state.ValidLoadingTime &&\r\n                        this.state.AcceptedDelay &&\r\n                        this.state.ValidPrice\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newJobOffer = {\r\n            Token: localStorage.Token,\r\n            TripType: this.state.TripType,\r\n            CargoType: this.state.CargoType,\r\n            CargoWeight: this.state.CargoWeight,\r\n            LoadingPlace: this.state.LoadingPlace,\r\n            UnloadingPlace: this.state.UnloadingPlace,\r\n            LoadingDate: this.state.LoadingDate,\r\n            LoadingTime: this.state.LoadingTime,\r\n            EntryExit: this.state.EntryExit,\r\n            Price: this.state.Price,\r\n            AcceptedDelay: this.state.AcceptedDelay,\r\n            JobOfferType: this.state.JobOfferType\r\n        };\r\n\r\n        console.log(\"Going to add Job offer.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addJobOffer(newJobOffer).then(response => {\r\n            if (response.Message === \"Job offer is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div className=\"modal\" id=\"add-job-offer-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Add Job Offer</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                                        alt=\"job_offfers.png\" src=\"./images/job_offers.png\" data-source-index=\"2\" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Place</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"LoadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LoadingPlace} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LoadingPlace}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Unloading Place</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"UnloadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.UnloadingPlace} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.UnloadingPlace}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Trip Type</label><br />\r\n                                                    <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                        <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                            <span>{this.state.TripType}</span>\r\n                                                            <span className=\"caret\"></span>\r\n                                                        </button>\r\n                                                        <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                            <li><a onClick={() => { this.setState({ TripType: \"One Way\" }); }}>One Way</a></li>\r\n                                                            <li><a onClick={() => { this.setState({ TripType: \"Two Way\" }); }}>Two Way</a></li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Cargo Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"CargoType\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.CargoType} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.CargoType}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Cargo Weight (lbs)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"CargoWeight\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.CargoWeight} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.CargoWeight}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Date</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"LoadingDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LoadingDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LoadingDate}</span>\r\n                                                </div>                                   \r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Time</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"time\" name=\"LoadingTime\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LoadingTime} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LoadingTime}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Accepted Delay (Hours)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"AcceptedDelay\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.AcceptedDelay} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.AcceptedDelay}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Price (USD)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" min=\"0.00\" step=\"0.01\" max=\"100.00\" name=\"Price\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={this.state.Price} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Price}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <button type=\"button\" data-toggle=\"button\" className=\"btn btn-toggle-switch\"\r\n                                                        autocomplete=\"off\" aria-pressed=\"false\"\r\n                                                        onClick={() => {\r\n                                                            this.state.JobOfferType = (this.state.JobOfferType === \"Fixed-Price\") ?\r\n                                                                \"Auctionable\" : \"Fixed-Price\";\r\n                                                        }}>\r\n                                                        <span className=\"stateLabel stateLabel-on\">Auctionable Job Offer</span>\r\n                                                        <span className=\"stateLabel stateLabel-off\">Fixed-Price Job Offer</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"checkbox\">\r\n                                                        <label className=\"control-label\">\r\n                                                            <input type=\"checkbox\" name=\"EntryExit\"\r\n                                                                value={this.state.EntryExit} onChange={() => {\r\n                                                                    this.state.EntryExit = this.state.EntryExit ? 0 : 1;\r\n                                                                }}></input>\r\n                                                            <span>Entry/Exit</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>   \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\"\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddJobOfferDialog;","import React, { Component } from \"react\";\r\nimport { getData } from \"../../../TraderFunctions\";\r\nimport JobOfferPackageItem from \"./JobOfferPackageItem\";\r\nimport AddJobOfferDialog from \"./AddJobOfferDialog\";\r\nimport ProgressBar from \"../../../../../controls/ProgressBar\";\r\n\r\nclass JobOffersList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllJobOfferPackages: [],\r\n            JobOfferPackages: [],\r\n            SearchString: \"\",\r\n            Searching: null,\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobOfferPackages\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Job offer packages found.\") {\r\n                    this.setState({\r\n                        AllJobOfferPackages: response.JobOfferPackages,\r\n                        JobOfferPackages: response.JobOfferPackages,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllJobOfferPackages: [],\r\n                        JobOfferPackages: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.SearchString === \"\") {\r\n            this.setState({\r\n                JobOfferPackages: this.state.AllJobOfferPackages\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allJobOfferPackages = this.state.AllJobOfferPackages;\r\n        let filteredJobOfferPackages = [];\r\n        let count = 0;\r\n\r\n        for (let jobOfferPackage of allJobOfferPackages) {\r\n            let jobOffer = jobOfferPackage.JobOffer;\r\n\r\n            if (jobOffer.LoadingPlace.includes(this.state.SearchString) ||\r\n                jobOffer.UnloadingPlace.includes(this.state.SearchString)) {\r\n                filteredJobOfferPackages[count++] = jobOfferPackage;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            JobOfferPackages: filteredJobOfferPackages\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const jobOfferPackages = this.state.JobOfferPackages;\r\n        return <section>\r\n            <div className=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                alt=\"job_offers.png\" src=\"./images/job_offers.png\" data-source-index=\"2\" />\r\n                        </div>\r\n                        <div className=\"col-md-12 col-md-pull-12\">\r\n                            <div className=\"type-h3\">Job Offers</div>\r\n                            <div className=\"type-sh3\">Manage Your Job Offers</div>\r\n                            <p>Hi There! Want to transport your freight somewhere? Why not create a new job offer now!!</p>\r\n                            <div className=\"btn-group\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-primary\"\r\n                                    data-toggle=\"modal\"\r\n                                    data-target=\"#add-job-offer-dialog\">New Job Offer</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <AddJobOfferDialog\r\n                OnOK={() => {\r\n                    this.onComponentUpdated();\r\n                }} />\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Your Job Offers</div>\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search by Places\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={this.state.SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            {(jobOfferPackages.length === 0) ?\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            {this.state.Searching ? <div className=\"col-md-24 text-center\">\r\n                                <div>\r\n                                    <div className=\"type-h3\" style={{ color: \"#008575\" }}>Searching</div>\r\n                                    <ProgressBar />\r\n                                </div>\r\n                            </div> : <div className=\"col-md-24 text-center\">\r\n                                    <h3><span className=\"fas fa-exclamation-triangle\" style={{ color: \"#FFBF15\" }}></span> No job offers found.</h3>\r\n                                </div>}\r\n                        </div>\r\n                    </div>\r\n                </div> : <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {jobOfferPackages.map((jobOfferPackage, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <JobOfferPackageItem Index={index}\r\n                                JobOfferPackage={jobOfferPackage}\r\n                                OnJobOfferUpdated={this.onComponentUpdated} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n            \r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobOffersList;","import React, { Component } from \"react\";\r\nimport JobOffersList from \"./JobOffersList.js\";\r\n\r\nclass JobOffers extends Component {\r\n    render() {\r\n        return <section>\r\n            <JobOffersList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobOffers;","import React, { Component } from \"react\";\r\n\r\nclass OnGoingJobs extends Component {\r\n   render() {\r\n        return (\r\n            <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"on_going_jobs.png\" src=\"./images/on_going_jobs.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div className=\"col-md-12 col-md-pull-12\">\r\n                                <div className=\"type-h3\">On-Going Jobs</div>\r\n                                <div className=\"type-sh3\">Under Construction</div>\r\n                                <p>For now, it's lonely here!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default OnGoingJobs;","import React, { Component } from \"react\";\r\nimport JobRequests from \"./jobRequests/JobRequests.js\"; \r\nimport JobOffers from \"./jobOffers/JobOffers.js\";\r\nimport OnGoingJobs from \"./onGoingJobs/OnGoingJobs.js\";\r\n\r\nclass Jobs extends Component {\r\n    render() {\r\n        return (\r\n            <section>                 \r\n                <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                    padding: \"10px\",\r\n                    backgroundColor: \"#3A3A3C\",\r\n                    width: \"100%\",\r\n                    margin: \"0px\",\r\n                }}>\r\n                    <li role=\"presentation\" className=\"active\"><a href=\"#job-requests\" aria-controls=\"job-requests\" role=\"tab\" data-toggle=\"tab\">Job Requests</a></li>\r\n                    <li role=\"presentation\"><a href=\"#job-offers\" aria-controls=\"job-offers\" role=\"tab\" data-toggle=\"tab\">Job Offers</a></li>\r\n                    <li role=\"presentation\"><a href=\"#on-going-jobs\" aria-controls=\"on-going-jobs\" role=\"tab\" data-toggle=\"tab\">On-Going Jobs</a></li>\r\n                </ul>\r\n                <div className=\"tab-content\">\r\n                    <div role=\"tabpanel\" className=\"tab-pane active\" id=\"job-requests\">\r\n                        <JobRequests />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"job-offers\">\r\n                        <JobOffers />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"on-going-jobs\">\r\n                        <OnGoingJobs />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Jobs;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { getData, generalSettings } from \"../../TraderFunctions\";\r\n\r\nclass GeneralSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\",\r\n\r\n            ValidFirstName: true,\r\n            ValidLastName: true,\r\n            ValidPhoneNumber: true,\r\n\r\n            ValidForm: false,\r\n            SettingsSaved: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                PhoneNumber: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Trader\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader found.\") {\r\n                    let trader = response.Trader;\r\n\r\n                    this.setState({\r\n                        FirstName: trader.FirstName,\r\n                        LastName: trader.LastName,\r\n                        Address: trader.Address,\r\n                        PhoneNumber: trader.PhoneNumber,\r\n                        Gender: trader.Gender,\r\n                        Nationality: trader.Nationality,\r\n                        DateOfBirth: trader.DateOfBirth\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        FirstName: \"\",\r\n                        LastName: \"\",\r\n                        Address: \"\",\r\n                        PhoneNumber: \"\",\r\n                        Gender: \"\",\r\n                        Nationality: \"\",\r\n                        DateOfBirth: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFirstName = this.state.ValidFirstName;\r\n        let ValidLastName = this.state.ValidLastName;\r\n        let ValidPhoneNumber = this.state.ValidPhoneNumber;\r\n\r\n        switch (field) {\r\n            case \"FirstName\":\r\n                ValidFirstName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.FirstName = ValidFirstName ? \"\" : \"First name is invalid.\";\r\n                break;\r\n            case \"LastName\":\r\n                ValidLastName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.LastName = ValidLastName ? \"\" : \"Last name is invalid.\";\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = value.match(/^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/);\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFirstName: ValidFirstName,\r\n            ValidLastName: ValidLastName,\r\n            ValidPhoneNumber: ValidPhoneNumber,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidFirstName &&\r\n                    this.state.ValidLastName &&\r\n                    this.state.ValidPhoneNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedTrader = {\r\n            Token: localStorage.Token,\r\n            FirstName: this.state.FirstName,\r\n            LastName: this.state.LastName,\r\n            Address: this.state.Address,\r\n            PhoneNumber: this.state.PhoneNumber,\r\n            Gender: this.state.Gender,\r\n            Nationality: this.state.Nationality,\r\n            DateOfBirth: this.state.DateOfBirth,\r\n        }\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await generalSettings(updatedTrader).then(response => {\r\n            if (response.Message === \"Trader is updated.\") {\r\n                this.forceUpdate();\r\n                this.props.OnSettingsSaved();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>General Settings</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-comment\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"FirstName\" autoComplete=\"off\"\r\n                                        value={this.state.FirstName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">First Name</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"FirstName\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-comment\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"LastName\" autoComplete=\"off\"\r\n                                        value={this.state.LastName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Last Name</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"LastName\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-birthday-cake\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\" className=\"form-control\" name=\"DateOfBirth\" autoComplete=\"off\"\r\n                                        value={this.state.DateOfBirth} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Date of Birth</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className={this.state.Gender === \"Male\" ? \"fas fa-male\" : \"fas fa-female\"}></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"dropdown\" style={{ width: \"193px\", maxWidth: \"296px\", }}>\r\n                                    <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                        aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                        <span>{this.state.Gender}</span>\r\n                                        <span className=\"caret\"></span>\r\n                                    </button>\r\n                                    <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                        <li><a onClick={() => { this.setState({ Gender: \"Male\" }); this.validateField(\"\", \"\"); }}>Male</a></li>\r\n                                        <li><a onClick={() => { this.setState({ Gender: \"Female\" }); this.validateField(\"\", \"\"); }}>Female</a></li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Gender</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-flag\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"Nationality\" autoComplete=\"off\"\r\n                                        value={this.state.Nationality} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Nationality</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-phone\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autoComplete=\"off\"\r\n                                        placeholder=\"+XXXXXXXXXXXX\" value={this.state.PhoneNumber} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Phone Number</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"PhoneNumber\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-location-arrow\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"Address\" autoComplete=\"off\"\r\n                                        value={this.state.Address} onChange={this.onChange} style={{ width: \"393px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Address</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default GeneralSettings;","import React, { Component } from \"react\";\r\n\r\nclass Payments extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"jumbotron\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"tools.png\" src=\"./images/tools.png\" style={{ borderRadius: \"50%\" }} data-source-index=\"1\" />\r\n                            </div>\r\n                            <div class=\"col-md-12 col-md-pull-12\">\r\n                                <div class=\"type-h3\" style={{ color: \"#008575\", }}>\r\n                                    Payments\r\n                    </div>\r\n                                <div class=\"type-sh3\" style={{ color: \"#949496\", }}>\r\n                                    Under-Construction\r\n                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Payments;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { usernameAndEmailSettings } from \"../../TraderFunctions.js\";\r\n\r\nclass CodeConfirmationDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ConfirmCode: \"\",\r\n\r\n            ValidConfirmCode: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                ConfirmCode: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidConfirmCode = this.state.ValidConfirmCode;\r\n\r\n        ValidConfirmCode = value === this.props.Code;\r\n        Errors.ConfirmCode = ValidConfirmCode ? \"\" : \"Invalid code.\";\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidConfirmCode: ValidConfirmCode,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidConfirmCode\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedTrader = {\r\n            Token: localStorage.Token,\r\n            Username: this.props.Username,\r\n            Email: this.props.Email,\r\n        };\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await usernameAndEmailSettings(updatedTrader).then(response => {\r\n            if (response.Message === \"Trader is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div\r\n                    className=\"modal in\" id=\"code-confirmation-dialog\" tabIndex=\"-1\"\r\n                    role=\"dialog\" aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\"\r\n                    style={{ display: \"block\" }}>\r\n                    <div className=\"modal-dialog\">\r\n                        {this.state.Preloader}\r\n                        <div className=\"modal-dialog\">\r\n                            <div className=\"modal-content\">\r\n                                <section>\r\n                                    <form noValidate onSubmit={this.onSubmit}>\r\n                                        <div className=\"modal-header\">\r\n                                            <img alt=\"passcode.png\" src=\"./images/passcode.png\" height=\"60\" />\r\n                                            <div className=\"type-h3\">Email Confirmation</div>\r\n                                            <div className=\"type-sh3\">We delivered a confirmation code to your email.</div>\r\n                                        </div>\r\n                                        <div className=\"modal-body\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-12\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"control-label\">Confirmation Code</label>\r\n                                                        <input type=\"text\" name=\"ConfirmCode\" className=\"form-control\" autocomplete=\"off\"\r\n                                                            value={this.state.ConfirmCode} onChange={this.onChange} />\r\n                                                        <span className=\"text-danger\">{this.state.Errors.ConfirmCode}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"modal-footer\">\r\n                                            <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                                ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                            <input type=\"submit\" value=\"Confirm\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </form>\r\n                                </section>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default CodeConfirmationDialog;","import React, { Component } from \"react\";\r\nimport CodeConfirmationDialog from \"./CodeConfirmationDialog.js\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport {\r\n    getData,\r\n    validateUsername,\r\n    validateEmail,\r\n    sendCode,\r\n    usernameAndEmailSettings\r\n} from \"../../TraderFunctions\";\r\n\r\nclass UsernameAndEmailSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            NewUsername: \"\",\r\n\r\n            Email: \"\",\r\n            NewEmail: \"\",\r\n\r\n            Code: \"\",\r\n\r\n            ValidNewUsername: true,\r\n            ValidNewEmail: true,\r\n\r\n            ValidForm: false,\r\n            CodeConfirmationDialog: null,\r\n\r\n            Errors: {\r\n                NewUsername: \"\",\r\n                NewEmail: \"\",\r\n            },\r\n\r\n            CodeConfirmation: \"\",\r\n            Preloader: null\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Trader\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader found.\") {\r\n                    let trader = response.Trader;\r\n\r\n                    this.setState({\r\n                        Username: trader.Username,\r\n                        NewUsername: trader.Username,\r\n                        Email: trader.Email,\r\n                        NewEmail: trader.Email\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Username: \"\",\r\n                        NewUsername: \"\",\r\n                        Email: \"\",\r\n                        NewEmail: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewUsername = this.state.ValidNewUsername;\r\n        let ValidNewEmail = this.state.ValidNewEmail;\r\n        \r\n        switch (field) {\r\n            case \"NewUsername\":\r\n                ValidNewUsername = (value !== \"\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is required.\";\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value.match(/^[a-z0-9]+$/i));\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is invalid.\";\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value !== \"Username is unavailable.\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is unavailable.\";\r\n                break;\r\n            case \"NewEmail\":\r\n                ValidNewEmail = (value !== \"\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is required.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i));\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is invalid.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value !== \"Email is already taken.\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is already taken.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewUsername: ValidNewUsername,\r\n            ValidNewEmail: ValidNewEmail,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidNewUsername &&\r\n                    this.state.ValidNewEmail\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername === this.state.Username &&\r\n            this.state.NewEmail === this.state.Email) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername !== this.state.Username) {\r\n            const response = await validateUsername(this.state.NewUsername);\r\n\r\n            if (response.Message === \"Username is unavailable.\") {\r\n                this.validateField(\"NewUsername\", response.Message);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail !== this.state.Email) {\r\n            const response = await validateEmail(this.state.NewEmail);\r\n            if (response.Message === \"Email is already taken.\") {\r\n                this.validateField(\"NewEmail\", response.Message);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail === this.state.Email) {\r\n            const updatedTrader = {\r\n                Token: localStorage.Token,\r\n                Username: this.state.NewUsername,\r\n                Email: this.state.NewEmail,\r\n            };\r\n\r\n            this.setState({\r\n                Preloader: <Preloader />\r\n            });\r\n\r\n            console.log(\"Going to update username.\");\r\n            await usernameAndEmailSettings(updatedTrader).then(response => {  \r\n                console.log(response);\r\n                if (response.Message === \"Trader is updated.\") {\r\n                    \r\n                    this.props.OnSettingsSaved();\r\n                }\r\n\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            console.log(\"Going to send code...\");\r\n            await sendCode(this.state.NewEmail).then(response => {\r\n                console.log(response);\r\n                if (response.Message === \"Code sent.\") {\r\n                    this.setState({\r\n                        CodeConfirmationDialog: <CodeConfirmationDialog\r\n                            Code={response.Code}\r\n                            Username={this.state.NewUsername}\r\n                            Email={this.state.NewEmail}\r\n                            OnCancel={() => {\r\n                                this.setState({\r\n                                    CodeConfirmationDialog: null,\r\n                                });\r\n                            }}\r\n                            OnOK={cancelButton => {\r\n                                cancelButton.click();\r\n                                this.props.OnSettingsSaved();\r\n                            }} />\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Username and Emails</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-at\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"NewUsername\" className=\"form-control\" autoComplete=\"off\"\r\n                                        value={this.state.NewUsername} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Username</div>\r\n                                <div className=\"content-text-secondary text-danger\">{this.state.Errors[\"NewUsername\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-envelope\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"email\" name=\"NewEmail\" className=\"form-control\" placeholder=\"someone@example.com\" autoComplete=\"off\"\r\n                                        value={this.state.NewEmail} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Email</div>\r\n                                <div className=\"content-text-secondary text-danger\">{this.state.Errors[\"NewEmail\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n                {this.state.CodeConfirmationDialog}\r\n            </div> \r\n        );\r\n    }\r\n};\r\n\r\nexport default UsernameAndEmailSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { validatePassword, passwordSettings } from \"../../TraderFunctions\";\r\n\r\nclass PasswordSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            CurrentPassword: \"\",\r\n            NewPassword: \"\",\r\n            ConfirmPassword: \"\",\r\n\r\n            ValidCurrentPassword: false,\r\n            ValidNewPassword: false,\r\n            ValidConfirmPassword: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                CurrentPassword: \"\",\r\n                NewPassword: \"\",\r\n                ConfirmPassword: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    async validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCurrentPassword = this.state.ValidCurrentPassword;\r\n        let ValidNewPassword = this.state.ValidNewPassword;\r\n        let ValidConfirmPassword = this.state.ValidConfirmPassword;\r\n\r\n        switch (field) {\r\n            case \"CurrentPassword\":\r\n                ValidCurrentPassword = (value !== \"\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is required.\";\r\n\r\n                if (Errors.CurrentPassword !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCurrentPassword = (value !== \"Invalid password.\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is invalid.\";\r\n                break;\r\n            case \"NewPassword\":\r\n                ValidNewPassword = value.length >= 6;\r\n                Errors.NewPassword = ValidNewPassword ? \"\" : \"Password is too short.\";\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                ValidConfirmPassword = value === this.state.NewPassword;\r\n                Errors.ConfirmPassword = ValidConfirmPassword ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCurrentPassword: ValidCurrentPassword,\r\n            ValidNewPassword: ValidNewPassword,\r\n            ValidConfirmPassword: ValidConfirmPassword,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidCurrentPassword &&\r\n                    this.state.ValidNewPassword &&\r\n                    this.state.ValidConfirmPassword\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        let passwordPackage = {\r\n            Token: localStorage.Token,\r\n            Password: this.state.CurrentPassword\r\n        };\r\n\r\n        await validatePassword(passwordPackage).then(async response => {\r\n            if (response.Message === \"Invalid password.\") {\r\n                this.validateField(\"CurrentPassword\", response.Message);\r\n            }\r\n            else {\r\n                const updatedTrader = {\r\n                    Token: localStorage.Token,\r\n                    Password: this.state.NewPassword\r\n                };\r\n\r\n                this.setState({\r\n                    Preloader: <Preloader />\r\n                });\r\n\r\n                await passwordSettings(updatedTrader).then(response => {\r\n                    if (response.Message === \"Trader is updated.\") {\r\n                        this.props.OnSettingsSaved();\r\n                    }\r\n\r\n                    this.setState({\r\n                        Preloader: null\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\" }}>Change Password</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-key\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" name=\"CurrentPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                        value={this.state.CurrentPassword} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Current Password</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"CurrentPassword\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-key\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" name=\"NewPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                        value={this.state.NewPassword} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">New Password</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"NewPassword\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-key\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" name=\"ConfirmPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                        value={this.state.ConfirmPassword} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Confirm Password</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"ConfirmPassword\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default PasswordSettings;","import React, { Component } from \"react\";\r\nimport GeneralSettings from \"./GeneralSettings\";\r\nimport UsernameAndEmailSettings from \"./UsernameAndEmailSettings\";\r\nimport PasswordSettings from \"./PasswordSettings\";\r\n\r\nclass Settings extends Component {\r\n    render() {\r\n        return <section>\r\n            <GeneralSettings ref=\"GeneralSettings\" OnSettingsSaved={() => { this.refs.GeneralSettings.componentDidMount(); }} />\r\n            <UsernameAndEmailSettings ref=\"UsernameAndEmailSettings\" OnSettingsSaved={() => { this.refs.UsernameAndEmailSettings.componentDidMount(); }} />\r\n            <PasswordSettings ref=\"PasswordSettings\" OnSettingsSaved={() => { this.refs.PasswordSettings.forceUpdate(); }} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Settings;","import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport Profile from \"./profile/Profile\";\r\nimport Jobs from \"./jobs/Jobs\";\r\nimport Payments from \"./payments/Payments\";\r\nimport Settings from \"./settings/Settings\";\r\n\r\nclass TradersDashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            SideNavWidth: 0\r\n        };\r\n\r\n        this.onCloseNavigation = this.onCloseNavigation.bind(this);\r\n    }\r\n\r\n    onCloseNavigation = () => {\r\n        this.setState({\r\n            SideNavWidth: 0\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.Token) {\r\n            return <Redirect to=\"/login\" />;\r\n        }\r\n        else {\r\n            return <section>\r\n                <div className=\"sidenav\" style={{ width: `${this.state.SideNavWidth}px` }}>\r\n                    <a href=\"javascript:void(0)\" className=\"closebtn\" onClick={this.onCloseNavigation}>&times;</a>\r\n                    <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{ marginLeft: \"0px\" }}>\r\n                        <li style={{ float: \"none\" }} onClick={this.onCloseNavigation} role=\"presentation\" className=\"active\">\r\n                            <a href=\"#profile\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">Profile</a>\r\n                        </li>\r\n                        <li style={{ float: \"none\" }} onClick={this.onCloseNavigation} role=\"presentation\">\r\n                            <a href=\"#jobs\" aria-controls=\"jobs\" role=\"tab\" data-toggle=\"tab\">Jobs</a>\r\n                        </li>\r\n                        <li style={{ float: \"none\" }} onClick={this.onCloseNavigation} role=\"presentation\">\r\n                            <a href=\"#payments\" aria-controls=\"payments\" role=\"tab\" data-toggle=\"tab\">Payments</a>\r\n                        </li>\r\n                        <li style={{ float: \"none\" }} onClick={this.onCloseNavigation} role=\"presentation\">\r\n                            <a href=\"#settings\" aria-controls=\"settings\" role=\"tab\" data-toggle=\"tab\">Settings</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"tab-content\">\r\n                    <div role=\"tabpanel\" className=\"tab-pane active\" id=\"profile\">\r\n                        <Profile ref=\"Profile\" />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"jobs\">\r\n                        <Jobs />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"payments\">\r\n                        Payments\r\n                        </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"settings\">\r\n                        <Settings />\r\n                    </div>\r\n                </div>\r\n                <div className=\"side-nav-btn\" onClick={() => {\r\n                    this.setState({\r\n                        SideNavWidth: 250\r\n                    });\r\n                }}><div className=\"fas fa-bars\" style={{ fontSize: \"x-large\" }}></div>\r\n                </div>\r\n            </section>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default TradersDashboard;","import React, { Component } from \"react\";\r\n\r\nclass BackToTop extends Component {\r\n    render() {\r\n        return (\r\n            <a id=\"up\" href=\"#top\" className=\"back-to-top\" style={{ position: \"fixed\", right: \"20px\", bottom: \"20px\", }}>\r\n                <i className=\"glyph glyph-up\" style={{ color: \"#008575\", }}></i>\r\n                <span className=\"sr-only\">Back to top</span>\r\n            </a>\r\n        );\r\n    }\r\n};\r\n\r\nexport default BackToTop;","import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <footer className=\"border-top footer theme-default color-bg-light-neutral-high text-light\">\r\n                <div className=\"container\">\r\n                    &copy; {new Date().getFullYear()} - Core Infinite - <a asp-area=\"\" asp-controller=\"Home\" asp-action=\"Privacy\">Privacy</a>\r\n                </div>\r\n            </footer>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Header from \"./components/shared/Header\";\r\nimport Landing from \"./components/landing/Landing\";\r\nimport Login from \"./components/login/Login\";\r\nimport Register from \"./components/register/Register\";\r\nimport EmailConfirmation from \"./components/register/EmailConfirmation\";\r\nimport AccountSetup from \"./components/register/AccountSetup\";\r\nimport Congratulations from \"./components/register/Congratulations\";\r\nimport DriversDashboard from \"./components/drivers/dashboard/DriversDashboard\"\r\nimport TradersDashboard from \"./components/traders/dashboard/TradersDashboard\"\r\nimport BackToTop from \"./controls/BackToTop\";\r\nimport Footer from \"./components/shared/Footer\";\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Router basename=\"/\">\r\n                <div className=\"App\">\r\n                    <Header />\r\n                    <Route exact path=\"/\" component={Landing} />\r\n                    <Route exact path=\"/register\" component={Register} />\r\n                    <Route exact path=\"/emailConfirmation\" component={EmailConfirmation} />\r\n                    <Route exact path=\"/setupAccount\" component={AccountSetup} />\r\n                    <Route exact path=\"/congratulations\" component={Congratulations} />\r\n                    <Route exact path=\"/login\" component={Login} />\r\n                    <Route exact path=\"/drivers\" component={DriversDashboard} />\r\n                    <Route exact path=\"/traders\" component={TradersDashboard} />\r\n                    <BackToTop />\r\n                    <Footer />\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = {\r\n    APP_NAME: \"Naqel\",\r\n    USER_TOKEN: \"userToken\",\r\n    USER_NOT_FOUND: \"Username not found.\",\r\n    INVALID_PASSWORD: \"Invalid password.\",\r\n    USERNAME_OR_EMAIL_TAKEN: \"Username or email is already taken.\",\r\n    NAQEL_SERVER: \"https://naqelserver.azurewebsites.net/\",\r\n    IMAGE_UPLOADER: \"https://us-central1-naqel-transport-jobs.cloudfunctions.net/uploadImage\"\r\n};"],"sourceRoot":""}
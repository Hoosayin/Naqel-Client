{"version":3,"sources":["res/strings.js","components/shared/Header.js","components/landing/Landing.js","components/users/DriverFunctions.js","components/users/TraderFunctions.js","styles/MiscellaneousStyles.js","controls/Preloader.js","styles/CardStyles.js","components/login/Login.js","components/register/Register.js","components/register/EmailConfirmation.js","components/register/AccountSetup.js","components/register/Congratulations.js","styles/TabStyles.js","components/users/dashboard/profile/ProfilePhoto.js","controls/WarningAlert.js","components/users/dashboard/profile/Profile.js","controls/ImageUploader.js","components/users/dashboard/trucks/TruckSettings.js","components/users/dashboard/trucks/trailers/AddTrailerDialog.js","components/users/dashboard/trucks/trailers/AddTrailer.js","components/users/dashboard/trucks/trailers/EditTrailerDialog.js","components/users/dashboard/trucks/trailers/TrailersList.js","components/users/dashboard/trucks/Truck.js","controls/MessageBox.js","components/users/dashboard/trucks/AddTruck.js","components/users/dashboard/trucks/NoTruck.js","components/users/dashboard/trucks/Trucks.js","components/users/dashboard/permits/Permits.js","components/users/dashboard/financial_affairs/FinancialAffairs.js","components/users/dashboard/jobs/Jobs.js","components/users/dashboard/payments/Payments.js","components/users/dashboard/settings/GeneralSettings.js","components/users/dashboard/settings/CodeConfirmation.js","components/users/dashboard/settings/UsernameAndEmailSettings.js","components/users/dashboard/settings/PasswordSettings.js","components/users/dashboard/settings/Settings.js","components/users/dashboard/Dashboard.js","components/users/dashboard/profile/TraderBrokerProfilePhoto.js","components/users/dashboard/profile/TraderBrokerProfile.js","components/users/dashboard/settings/TBGeneralSettings.js","components/users/dashboard/settings/TBUsernameAndEmailSettings.js","components/users/dashboard/settings/TBPasswordSettings.js","components/users/dashboard/settings/TBSettings.js","components/users/dashboard/TraderDashboard.js","controls/BackToTop.js","components/shared/Footer.js","App.js","index.js"],"names":["module","exports","APP_NAME","USER_TOKEN","USER_NOT_FOUND","INVALID_PASSWORD","USERNAME_OR_EMAIL_TAKEN","NAQEL_SERVER","IMAGE_UPLOADER","Header","logOut","e","preventDefault","localStorage","removeItem","props","history","push","userToken","decoded","jwt_decode","state","Username","bind","loginRegisterLinks","class","to","userLinks","this","onClick","type","data-toggle","data-target","Strings","toUpperCase","id","Component","withRouter","Landing","style","width","backgroundColor","alt","src","data-source-index","color","fontWeight","href","textDecoration","usernameAndEmailSettings","updatedDriver","a","async","axios","post","DriverID","Email","then","res","data","passwordSettings","Password","uploadDriverProfilePhoto","driverProfilePhoto","URL","FileName","addTruck","newTruck","Token","PlateNumber","Owner","ProductionYear","Brand","Model","Type","MaximumWeight","PhotoURL","updateTruckPhoto","updatedTruck","updateTruck","addTrailer","newTrailer","deleteTrailer","discardedTrailer","TrailerID","updateTrailer","updatedTrailer","TraderID","UserName","uploadTraderBrokerProfilePhoto","traderProfilePhoto","Required","paddingLeft","PreloaderScreen","background","position","zIndex","top","display","alignItems","justifyContent","height","Preloader","textAlign","LoginCardBack","backgroundImage","backgroundAttachment","backgroundRepeat","backgroundSize","RegisterCardBack","EmailConfirmationCardBack","AccountSetupCardBack","CongratulationsCardBack","Card","padding","alignContent","boxShadow","CardLarge","CardXLarge","margin","CardChild","CardTitle","paddingTop","Login","onChange","setState","target","name","value","onSubmit","EmailOrUsername","driver","SignInAs","localeCompare","setItem","catch","error","console","log","login","NullError","InvalidUsernameOrPassword","traderBrokerLogin","Errors","className","noValidate","htmlFor","placeholder","aria-haspopup","role","aria-expanded","aria-labelledby","Register","validateField","ConfirmPassword","newCredentials","RegisterAs","register","newCredentialsToken","UsernameOrEmailTaken","traderRegister","PasswordsMatched","ValidEmail","ValidPassword","ValidForm","Agreed","field","fieldValidationErrors","match","length","refs","agreementCheckBox","checked","validateForm","autocomplete","required","maxWidth","ref","AgreementError","disabled","tabindex","aria-hidden","String","data-dismiss","EmailConfirmation","code","Code","ConfirmationCode","InvalidCodeError","AccountSetup","FirstName","LastName","DateOfBirth","Nationality","Address","PhoneNumber","verifiedCredentialsToken","newDriver","Gender","accountSetup","TraderAccountSetup","atl","selected","rows","IsCreatedSuccessfully","TabMenu","ProfilePhoto","onImageUpload","event","Image","files","formData","FormData","append","ImageCategory","exception","UploadProgress","onUploadProgress","response","message","imageUrl","filename","ImageURL","OnImageUploaded","ProfilePhotoURL","fileInput","border","click","WarningAlert","marginBottom","aria-label","OnClose","Message","Profile","onImageUploaded","ImageUploader","startsWith","OnInvalidImageSelected","Width","Height","Source","TruckSettings","getItem","OnTruckSettingsUpdated","ValidPlateNumber","ValidOwner","ValidProductionYear","ValidBrand","ValidModel","ValidType","ValidMaximumWeight","truck","Truck","currentYear","Date","getFullYear","AddTrailerDialog","onInvalidImageSelected","OnTrailerAdded","cancelButton","ValidPhotoURL","trailers","Trailers","OnAddTrailerDialogRemove","AddTrailer","onAddTrailerDialogCreate","onAddTruckDialogRemove","onTrailerAdded","onAddTrailerDialogRemove","OnTruckUpdated","onMouseDown","EditTrailerDialog","Trailer","OnTrailerUpdated","dialogID","OnEditTrailerDialogRemove","TrailersList","onDelete","index","OnTrailersUpdated","EditTrailerDialogs","map","overflow","editTrailerDialogs","onTrailersUpdated","OnTrailerDeleted","onTrailerDeleted","MessageBox","Show","paddingRight","AddTruck","OnAddTruckDialogRemove","NoTruck","onAddTruckDialogCreate","Trucks","onTruckUpdated","Permits","borderRadius","FinancialAffairs","Jobs","Payments","GeneralSettings","generalSettings","decodedToken","token","jsonWebToken","sign","SettingsSaved","ValidFirstName","ValidLastName","ValidPhoneNumber","messageBox","autoComplete","CodeConfirmation","ConfirmCode","ValidConfirmCode","asp-validation-summary","UsernameAndEmailSettings","NewUsername","NewEmail","ValidNewUsername","ValidNewEmail","PasswordSettings","NewPassword","CurrentPassword","ValidCurrentPassword","ValidNewPassword","ValidConfirmPassword","Settings","Dashboard","aria-controls","TraderBrokerProfilePhoto","TraderBrokerProfile","EmailAdrs","FName","LName","BirthDate","MobileNum","TBGeneralSettings","TBUsernameAndEmailSettings","TBPasswordSettings","TBSettings","TraderDashboard","BackToTop","left","bottom","Footer","asp-area","asp-controller","asp-action","App","basename","exact","path","component","Congratulations","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ade10d0.chunk.js","sourcesContent":["module.exports = {\r\n    APP_NAME: \"Naqel\",\r\n    USER_TOKEN: \"userToken\",\r\n    USER_NOT_FOUND: \"Username not found.\",\r\n    INVALID_PASSWORD: \"Invalid password.\",\r\n    USERNAME_OR_EMAIL_TAKEN: \"Username or email is already taken.\",\r\n    NAQEL_SERVER: \"http://localhost:1337/\", //https://naqelserver.azurewebsites.net/\r\n    IMAGE_UPLOADER: \"https://us-central1-naqel-transport-jobs.cloudfunctions.net/uploadImage\"\r\n};","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport Strings from \"../../res/strings\"\r\n\r\nclass Header extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        if (localStorage.userToken) {\r\n            const decoded = jwt_decode(localStorage.userToken);\r\n\r\n            this.state = {\r\n                Username: decoded.Username,\r\n            };\r\n        }\r\n        else {\r\n            this.state = {\r\n                Username: \"User\",\r\n            };\r\n        }\r\n\r\n        this.logOut = this.logOut.bind(this);\r\n    }\r\n\r\n    logOut = e => {\r\n        e.preventDefault();\r\n        localStorage.removeItem(\"userToken\");\r\n        this.props.history.push(`/login`);\r\n    }\r\n\r\n    render() {\r\n        const loginRegisterLinks = (\r\n            <ul class=\"nav navbar-nav navbar-right\">\r\n                <li>\r\n                    <Link to=\"/register\">Register</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/login\">Login</Link>\r\n                </li>            \r\n            </ul>\r\n        );\r\n\r\n        const userLinks = (\r\n            <ul class=\"nav navbar-nav navbar-right\">\r\n                <li>\r\n                    <Link to=\"/dashboard\">{this.state.Username}</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"\" onClick={this.logOut.bind(this)}>Logout</Link>\r\n                </li>\r\n            </ul>\r\n        );\r\n\r\n        return (\r\n            <header>\r\n                <nav class=\"navbar navbar-default\">\r\n                    <div class=\"navbar-local color-accent theme-dark\">\r\n                        <div class=\"container\">\r\n                            <div class=\"navbar-header\">\r\n                                <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-2\">\r\n                                    <span class=\"sr-only\">Toggle navigation</span>\r\n                                    <i class=\"glyph glyph-hamburger\"></i>\r\n                                </button>\r\n                                <Link to=\"/\" class=\"navbar-brand\">{Strings.APP_NAME.toUpperCase()}</Link>\r\n                            </div>\r\n\r\n                            <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-2\">\r\n                                <ul class=\"nav navbar-nav\">\r\n                                    \r\n                                </ul>\r\n                                {localStorage.userToken ? userLinks : loginRegisterLinks}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n        );\r\n    }\r\n};\r\n\r\nexport default withRouter(Header);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"slider\">\r\n                    <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                    <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        alt=\"truck.png\" src=\"./images/truck.png\" data-source-index=\"2\" />\r\n                                </div>\r\n                                <div class=\"col-md-12 col-md-pull-12\">\r\n                                    <div class=\"type-h3\" style={{ color: \"#008575\", }}>Weclome to Naqel</div>\r\n                                    <div class=\"type-sh3\" style={{ color: \"#949496\", }}>Transport Services On-The-Go</div>\r\n                                    <p style={{ color: \"#D1D2D4\", }}>Welcome to Naqel! If you are a trader or a broker, and you want to publish job opportunities for drivers nearby, well, you are on the right place. Naqel is a mediator among traders, brokers and drivers, and provides intuitive and secure way to get transport services.</p>\r\n                                    <p style={{ color: \"#D1D2D4\", }}>Not a Trader or a Broker? No worries! Naqel provides services for drivers too. If you are a driver, and you are searching for job opportunities, you are just one step away. Create your account on our Web Service, and we will notify you job oppprtunities on your personal account.</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#16171F\" }}>\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                    <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        alt=\"oath.png\" src=\"./images/oath.png\" data-source-index=\"2\" />\r\n                                </div>\r\n                                <div class=\"col-md-12 col-md-pull-12\">\r\n                                    <div class=\"type-h3\" style={{ color: \"#008575\", }}>Privacy</div>\r\n                                    <div class=\"type-sh3\" style={{ color: \"#949496\", }}>Your Privacy is Important to Us</div>\r\n                                    <p style={{ color: \"#D1D2D4\", }}>Naqel's Privacy Statement describes the types of data we collect from you, how we use your data, and the legal bases we have to process your data. The Privacy Statement also describes how Naqel uses your content, which is information submitted by you to Naqel via the Services.</p>\r\n                                    <p style={{ color: \"#D1D2D4\", }}>Where processing is based on consent and to the extent permitted by law, by agreeing to these Terms, you consent to Naqel's collection, use and disclosure of your content and data as described in the privacy statement.</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#00201C\" }}>\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                    <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        alt=\"account.png\" src=\"./images/account.png\" data-source-index=\"2\" />\r\n                                </div>\r\n                                <div class=\"col-md-12 col-md-pull-12\">\r\n                                    <div class=\"type-h3\" style={{ color: \"#008575\", }}>User Accounts</div>\r\n                                    <div class=\"type-sh3\" style={{ color: \"#949496\", }}>Signup and/or Login</div>\r\n                                    <p style={{ color: \"#D1D2D4\", }}>Do you want to use our services right now? No Worries! Just signup by filling up precise forms and/or login to your profile. Drivers can view job opprotunities on their dashboards. Traders and/or Brokers can post job requests for freight from thier accounts.</p>\r\n                                    <div class=\"btn-group\">\r\n                                        <Link to=\"/register\" class=\"btn btn-secondary\">Signup</Link>\r\n                                        <Link to=\"/login\" class=\"btn btn-primary\">Login</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"jumbotron theme-dark\" style={{ backgroundColor: \"#202020\", }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-24 text-center\">\r\n                                <div class=\"row section-gallery\">\r\n                                    <div class=\"col-md-8\">\r\n                                        <h4 style={{ fontWeight: \"bold\", }}>LOCATION</h4>\r\n                                        <div class=\"type-p1 text-center\">\r\n                                            Wah\r\n                            <br />\r\n                                            Punjab, Pakistan\r\n                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-8\">\r\n                                        <h4 style={{ fontWeight: \"bold\", }}>AROUND THE GLOBE</h4>\r\n                                        <div class=\"type-p1 text-center text-light\" style={{ color: \"#25AAE1\", }}>\r\n                                            <a class=\"fa\" href=\"#\">\r\n                                                <i class=\"fab fa-fw fa-facebook-f\"></i>\r\n                                            </a>\r\n                                            <a class=\"fa\" href=\"#\">\r\n                                                <i class=\"fab fa-fw fa-instagram\"></i>\r\n                                            </a>\r\n                                            <a class=\"fa\" href=\"#\">\r\n                                                <i class=\"fab fa-fw fa-twitter\"></i>\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-8\">\r\n                                        <h4 style={{ fontWeight: \"bold\", }}>CONTACT US</h4>\r\n                                        <div class=\"type-p1 text-center\">Naqel is created by Core Infinite. For more information, visit <a style={{ textDecoration: \"none\", color: \"#008575\", }} href=\"#\" class=\"color-type-accent\">coreinfinte.com</a></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Landing;","import axios from \"axios\";\r\nimport Strings from \"../../res/strings\";\r\n\r\n// POST: Register\r\nexport const register = newCredentials => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}users/register`, {\r\n        Username: newCredentials.Username,\r\n        Email: newCredentials.Email,\r\n        Password: newCredentials.Password,\r\n        RegisterAs: newCredentials.RegisterAs,\r\n    }).then(res => {\r\n        if (res.data.localeCompare(Strings.USERNAME_OR_EMAIL_TAKEN) == 0) {\r\n            return res.data;\r\n        }\r\n        else {\r\n            localStorage.setItem(\"newCredentialsToken\", res.data);\r\n            return res.data;\r\n        }\r\n    });\r\n};\r\n\r\n// POST: AccountSetup\r\nexport const accountSetup = newDriver => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}users/accountSetup`, {\r\n        Username: newDriver.Username,\r\n        Email: newDriver.Email,\r\n        Password: newDriver.Password,\r\n        RegisterAs: newDriver.RegisterAs,\r\n        FirstName: newDriver.FirstName,\r\n        LastName: newDriver.LastName,\r\n        DateOfBirth: newDriver.DateOfBirth,\r\n        Gender: newDriver.Gender,\r\n        Address: newDriver.Address,\r\n        PhoneNumber: newDriver.PhoneNumber,\r\n        Nationality: newDriver.Nationality,\r\n    }).then(res => {\r\n        console.log(res.data);\r\n    });\r\n};\r\n\r\n// POST: Login\r\nexport const login = driver => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}users/login`, {\r\n        EmailOrUsername: driver.EmailOrUsername,\r\n        Password: driver.Password,\r\n        SignInAs: driver.SignInAs,\r\n    }).then(res => {\r\n        if (res.data.localeCompare(Strings.USER_NOT_FOUND) == 0 ||\r\n            res.data.localeCompare(Strings.INVALID_PASSWORD) == 0) {\r\n            return res.data;\r\n        }\r\n        else {\r\n            localStorage.setItem('userToken', res.data);\r\n            return res.data;\r\n        }\r\n    }).catch(error => {\r\n        console.log(error);\r\n    });\r\n};\r\n\r\n// POST: GeneralSettings\r\nexport const generalSettings = updatedDriver => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}users/dashboard/generalSettings`, {\r\n        DriverID: updatedDriver.DriverID,\r\n        FirstName: updatedDriver.FirstName,\r\n        LastName: updatedDriver.LastName,\r\n        Address: updatedDriver.Address,\r\n        PhoneNumber: updatedDriver.PhoneNumber,\r\n        Gender: updatedDriver.Gender,\r\n        Nationality: updatedDriver.Nationality,\r\n        DateOfBirth: updatedDriver.DateOfBirth,\r\n    }).then(res => {\r\n        console.log(res.data);\r\n    });\r\n};\r\n\r\n// POST: UsernameAndEmailSettings\r\nexport const usernameAndEmailSettings = async updatedDriver => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/dashboard/usernameAndEmailSettings`, {\r\n        DriverID: updatedDriver.DriverID,\r\n        Username: updatedDriver.Username,\r\n        Email: updatedDriver.Email,\r\n    }).then(res => {\r\n        return res.data;\r\n    });\r\n};\r\n\r\n// POST: PasswordSettings\r\nexport const passwordSettings = async updatedDriver => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/dashboard/passwordSettings`, {\r\n        DriverID: updatedDriver.DriverID,\r\n        Password: updatedDriver.Password,\r\n    }).then(res => {\r\n        return res.data;\r\n    });\r\n};\r\n\r\n// POST: UploadDriverProfilePhoto\r\nexport const uploadDriverProfilePhoto = async driverProfilePhoto => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/uploadDriverProfilePhoto`, {\r\n        DriverID: driverProfilePhoto.DriverID,\r\n        URL: driverProfilePhoto.URL,\r\n        FileName: driverProfilePhoto.FileName\r\n    }).then(res => {\r\n        return res.data;\r\n    });\r\n};\r\n\r\n// POST: AddTruck\r\nexport const addTruck = async newTruck => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/dashboard/addTruck`, {\r\n        Token: newTruck.Token,\r\n        PlateNumber: newTruck.PlateNumber,\r\n        Owner: newTruck.Owner,\r\n        ProductionYear: newTruck.ProductionYear,\r\n        Brand: newTruck.Brand,\r\n        Model: newTruck.Model,\r\n        Type: newTruck.Type,\r\n        MaximumWeight: newTruck.MaximumWeight,\r\n        PhotoURL: newTruck.PhotoURL\r\n    }).then(res => {\r\n        return res.data;\r\n    });\r\n};\r\n\r\n// POST: UpdateTruckPhoto\r\nexport const updateTruckPhoto = async updatedTruck => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/dashboard/updateTruckPhoto`, {\r\n        Token: updatedTruck.Token,\r\n        PhotoURL: updatedTruck.PhotoURL\r\n    }).then(res => {\r\n        return res.data;\r\n    });\r\n};\r\n\r\n// POST: UpdateTruck\r\nexport const updateTruck = async updatedTruck => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/dashboard/updateTruck`, {\r\n        Token: updatedTruck.Token,\r\n        PlateNumber: updatedTruck.PlateNumber,\r\n        Owner: updatedTruck.Owner,\r\n        ProductionYear: updatedTruck.ProductionYear,\r\n        Brand: updatedTruck.Brand,\r\n        Model: updatedTruck.Model,\r\n        Type: updatedTruck.Type,\r\n        MaximumWeight: updatedTruck.MaximumWeight\r\n    }).then(res => {\r\n        return res.data;\r\n    });\r\n};\r\n\r\n// POST: AddTrailer\r\nexport const addTrailer = async newTrailer => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/dashboard/addTrailer`, {\r\n        Token: newTrailer.Token,\r\n        MaximumWeight: newTrailer.MaximumWeight,\r\n        PhotoURL: newTrailer.PhotoURL,\r\n        Type: newTrailer.Type\r\n    }).then(res => {\r\n        return res.data;\r\n    });\r\n};\r\n\r\n// POST: deleteTrailer\r\nexport const deleteTrailer = async discardedTrailer => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/dashboard/deleteTrailer`, {\r\n        Token: discardedTrailer.Token,\r\n        TrailerID: discardedTrailer.TrailerID\r\n    }).then(res => {\r\n        return res.data;\r\n    });\r\n};\r\n\r\n// POST: updateTrailer\r\nexport const updateTrailer = async updatedTrailer => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/dashboard/updateTrailer`, {\r\n        Token: updatedTrailer.Token,\r\n        TrailerID: updatedTrailer.TrailerID,\r\n        MaximumWeight: updatedTrailer.MaximumWeight,\r\n        PhotoURL: updatedTrailer.PhotoURL,\r\n        Type: updatedTrailer.Type\r\n    }).then(res => {\r\n        return res.data;\r\n    });\r\n};","import axios from \"axios\";\r\nimport Strings from \"../../res/strings\";\r\n\r\n// POST: Register\r\nexport const traderRegister = newCredentials => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}users/traderRegister`, {\r\n        Username: newCredentials.Username,\r\n        Email: newCredentials.Email,\r\n        Password: newCredentials.Password,\r\n        RegisterAs: newCredentials.RegisterAs,\r\n    })\r\n        .then(res => {\r\n            if (res.data.localeCompare(Strings.USERNAME_OR_EMAIL_TAKEN) == 0) {\r\n                return res.data;\r\n            }\r\n            else {\r\n                localStorage.setItem(\"newCredentialsToken\", res.data);\r\n                return res.data;\r\n            }\r\n        });\r\n};\r\n\r\n// POST: AccountSetup\r\nexport const TraderAccountSetup = newDriver => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}users/accountSetup`, {\r\n        Username: newDriver.Username,\r\n        Email: newDriver.Email,\r\n        Password: newDriver.Password,\r\n        RegisterAs: newDriver.RegisterAs,\r\n        FirstName: newDriver.FirstName,\r\n        LastName: newDriver.LastName,\r\n        DateOfBirth: newDriver.DateOfBirth,\r\n        Gender: newDriver.Gender,\r\n        Address: newDriver.Address,\r\n        PhoneNumber: newDriver.PhoneNumber,\r\n        Nationality: newDriver.Nationality,\r\n    })\r\n        .then(res => {\r\n            console.log(res.data);\r\n        });\r\n};\r\n\r\n// POST: Login\r\nexport const traderBrokerLogin = driver => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}users/traderbrokerlogin`, {\r\n        EmailOrUsername: driver.EmailOrUsername,\r\n        Password: driver.Password,\r\n        SignInAs: driver.SignInAs,\r\n    })\r\n        .then(res => {\r\n            if (res.data.localeCompare(Strings.USER_NOT_FOUND) == 0 ||\r\n                res.data.localeCompare(Strings.INVALID_PASSWORD) == 0) {\r\n                return res.data;\r\n            }\r\n            else {\r\n                localStorage.setItem('userToken', res.data);\r\n                return res.data;\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n};\r\n\r\n\r\n// POST: GeneralSettings\r\nexport const generalSettings = updatedDriver => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}users/dashboard/tbgeneralSettings`, {\r\n        TraderID: updatedDriver.TraderID,\r\n        FName: updatedDriver.FName,\r\n        LName: updatedDriver.LName,\r\n        Address: updatedDriver.Address,\r\n        MobileNum: updatedDriver.MobileNum,\r\n        Gender: updatedDriver.Gender,\r\n        Nationality: updatedDriver.Nationality,\r\n        BirthDate: updatedDriver.BirthDate,\r\n    })\r\n        .then(res => {\r\n            console.log(res.data);\r\n        });\r\n};\r\n\r\n// POST: UsernameAndEmailSettings\r\nexport const usernameAndEmailSettings = async updatedDriver => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/dashboard/tbusernameAndEmailSettings`, {\r\n        TraderID: updatedDriver.TraderID,\r\n        UserName: updatedDriver.UserName,\r\n        Email: updatedDriver.Email,\r\n    })\r\n        .then(res => {\r\n            return res.data;\r\n        });\r\n};\r\n\r\n// POST: PasswordSettings\r\nexport const passwordSettings = async updatedDriver => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/dashboard/tbpasswordSettings`, {\r\n        TraderID: updatedDriver.TraderID,\r\n        Password: updatedDriver.Password,\r\n    })\r\n        .then(res => {\r\n            return res.data;\r\n        });\r\n};\r\n\r\n// POST: UploadDriverProfilePhoto\r\nexport const uploadTraderBrokerProfilePhoto = async traderProfilePhoto => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/uploadTraderBrokerProfilePhoto`, {\r\n        TraderID: traderProfilePhoto.TraderID,\r\n        URL: traderProfilePhoto.URL,\r\n        FileName: traderProfilePhoto.FileName\r\n    }).then(res => {\r\n        return res.data;\r\n    });\r\n};\r\n","export const Required = {\r\n    paddingLeft: \"5px\",\r\n    fontWeight: \"bold\",\r\n};\r\n\r\nexport const SelectOptionStyle = {\r\n    maxWidth: \"296px\",\r\n};\r\n\r\nexport const PreloaderScreen = {\r\n    background: \"rgba(0, 0, 0, 0.8)\",\r\n    position: \"fixed\",\r\n    zIndex: \"10\",\r\n    top: \"0px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n    height: \"100%\"\r\n};\r\n\r\nexport default {\r\n    Required,\r\n    SelectOptionStyle,\r\n    PreloaderScreen\r\n};","import React, { Component } from \"react\";\r\nimport { PreloaderScreen } from \"../styles/MiscellaneousStyles\";\r\n\r\nclass Preloader extends Component {\r\n    render() {\r\n        return (\r\n            <div style={PreloaderScreen}>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                    <img src=\"./images/preloader.gif\" alt=\"preloader.gif\" height=\"200\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Preloader;","export const LoginCardBack = {\r\n    backgroundImage: \"url(/images/login_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n};\r\n\r\nexport const RegisterCardBack = {\r\n    backgroundImage: \"url(/images/signup_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n};\r\n\r\nexport const EmailConfirmationCardBack = {\r\n    backgroundImage: \"url(/images/passcode_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n};\r\n\r\nexport const AccountSetupCardBack = {\r\n    backgroundImage: \"url(/images/create_account_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n};\r\n\r\nexport const CongratulationsCardBack = {\r\n    backgroundImage: \"url(/images/congrats_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n};\r\n\r\nexport const Card = {\r\n    backgroundColor: \"rgba(229, 229, 229, 0.8)\",\r\n    height: \"auto\",\r\n    width: \"350px\",\r\n    padding: \"30px\",\r\n    alignContent: \"center\",\r\n    boxShadow: \"0 6px 6px rgba(0, 0, 0, 0.6)\",\r\n};\r\n\r\nexport const CardLarge = {\r\n    backgroundColor: \"rgba(229, 229, 229, 0.8)\",\r\n    height: \"auto\",\r\n    padding: \"30px\",\r\n    alignContent: \"center\",\r\n    boxShadow: \"0 6px 6px rgba(0, 0, 0, 0.6)\",\r\n};\r\n\r\nexport const CardXLarge = {\r\n    backgroundColor: \"rgba(229, 229, 229, 0.8)\",\r\n    height: \"auto\",\r\n    width: \"60%\",\r\n    margin: \"50px\",\r\n    boxShadow: \"0 6px 6px rgba(0, 0, 0, 0.6)\",\r\n};\r\n\r\nexport const CardChild = {\r\n    width: \"100%\",\r\n};\r\n\r\nexport const CardTitle = {\r\n    paddingTop: \"10px\",\r\n};\r\n\r\nexport default {\r\n    LoginCardBack,\r\n    RegisterCardBack,\r\n    EmailConfirmationCardBack,\r\n    AccountSetupCardBack,\r\n    CongratulationsCardBack,\r\n    Card,\r\n    CardLarge,\r\n    CardXLarge,\r\n    CardChild,\r\n    CardTitle,\r\n};","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { login } from \"../users/DriverFunctions\";\r\nimport { traderBrokerLogin } from \"../users/TraderFunctions\"\r\nimport Preloader from \"../../controls/Preloader\";\r\n\r\nimport {\r\n    LoginCardBack,\r\n    Card,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            EmailOrUsername: \"\",\r\n            Password: \"\",\r\n            SignInAs: \"Driver\",\r\n            NullError: false,\r\n            InvalidUsernameOrPassword: false,\r\n            Preloader: null,\r\n            Errors: {}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);    \r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.EmailOrUsername == \"\" ||\r\n            this.state.Password == \"\") {\r\n\r\n            this.setState({\r\n                NullError: true,\r\n                InvalidUsernameOrPassword: false,\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const driver = {\r\n            EmailOrUsername: this.state.EmailOrUsername,\r\n            Password: this.state.Password,\r\n            SignInAs: this.state.SignInAs,\r\n        };\r\n\r\n\r\n\r\n        if (this.state.SignInAs == \"Driver\") {\r\n            login(driver)\r\n                .then(res => {\r\n                    if (res &&\r\n                        localStorage.userToken) {\r\n                        this.props.history.push(`/dashboard`);\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            NullError: false,\r\n                            InvalidUsernameOrPassword: true,\r\n                            Preloader: null\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n        else {\r\n            traderBrokerLogin(driver)\r\n                .then(res => {\r\n                    if (res &&\r\n                        localStorage.userToken) {\r\n                        this.props.history.push(`/traderdashboard`);\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            NullError: false,\r\n                            InvalidUsernameOrPassword: true,\r\n                            Preloader: null\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        if (localStorage.userToken) {\r\n            this.props.history.push(`/dashboard`);\r\n            return <a />\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <div className=\"middle\" style={LoginCardBack}>\r\n                        <div className=\"theme-default animated fadeIn\" style={Card} >\r\n                            <div style={CardChild}>\r\n                                <img src=\"./images/login.png\" alt=\"Login.png\" height=\"60\" />\r\n                                <div class=\"type-h3\" style={CardTitle}>\r\n                                    Sign In\r\n                            </div>\r\n                                <br />\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div class=\"form-group\">\r\n                                        <label htmlFor=\"EmailOrUsername\" class=\"control-label\">Email or Username</label>\r\n                                        <input type=\"email\" class=\"form-control\" name=\"EmailOrUsername\" placeholder=\"someone@provider.com\"\r\n                                            value={this.state.EmailOrUsername} onChange={this.onChange} />\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label htmlFor=\"Password\" class=\"control-label\">Password</label>\r\n                                        <input type=\"password\" className=\"form-control\" name=\"Password\" placeholder=\"Password\"\r\n                                            value={this.state.Password} onChange={this.onChange} />\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label class=\"control-label\">Sign In As</label>\r\n                                        <div class=\"dropdown\" style={{ width: \"100%\" }}>\r\n                                            <button id=\"example-dropdown\" class=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                <span>{this.state.SignInAs}</span>\r\n                                                <span class=\"caret\"></span>\r\n                                            </button>\r\n                                            <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                <li><Link onClick={e => { this.state.SignInAs = \"Driver\" }} onChange={this.onChange}>Driver</Link></li>\r\n                                                <li><Link onClick={e => { this.state.SignInAs = \"Trader\" }} onChange={this.onChange}>Trader</Link></li>\r\n                                                <li><Link onClick={e => { this.state.SignInAs = \"Broker\" }} onChange={this.onChange}>Broker</Link></li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        {this.state.NullError &&\r\n                                            <div>\r\n                                                <label class=\"control-label text-danger\">Email/Username and password is required.</label>\r\n                                                <br />\r\n                                            </div>\r\n                                        }\r\n                                        {this.state.InvalidUsernameOrPassword &&\r\n                                            <div>\r\n                                                <label class=\"control-label text-danger\">Invalid username or password.</label>\r\n                                                <br />\r\n                                            </div>\r\n                                        }\r\n                                        <label class=\"control-label\"><Link to=\"/\">Forgot password</Link></label>\r\n                                        <br />\r\n                                        <label class=\"control-label\">No account? <span><Link to=\"/register\">Register now</Link></span></label>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"submit\" value=\"Sign In\" class=\"btn btn-primary\" />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {this.state.Preloader}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport default Login;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { register } from \"../users/DriverFunctions\";\r\nimport { traderRegister } from \"../users/TraderFunctions\"\r\nimport Strings from \"../../res/strings\";\r\nimport { Required } from \"../../styles/MiscellaneousStyles\";\r\n\r\nimport {\r\n    RegisterCardBack,\r\n    Card,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            Email: \"\",\r\n            Password: \"\",\r\n            ConfirmPassword: \"\",\r\n            RegisterAs: \"Driver\",\r\n            NullError: false,\r\n            PasswordsMatched: false,\r\n            UsernameOrEmailTaken: false,\r\n            ValidEmail: false,\r\n            ValidPassword: false,\r\n            ValidForm: false,\r\n            Agreed: false,\r\n            Errors: {\r\n                Email: \"\",\r\n                Password: \"\",\r\n                ConfirmPassword: \"\",\r\n                Agreed: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let fieldValidationErrors = this.state.Errors;\r\n        let ValidEmail = this.state.ValidEmail;\r\n        let ValidPassword = this.state.ValidPassword;\r\n        let PasswordsMatched = this.state.PasswordsMatched;\r\n        let Agreed = this.state.Agreed;\r\n\r\n        switch (field) {\r\n            case \"Email\":\r\n                ValidEmail = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n                fieldValidationErrors.Email = ValidEmail ? \"\" : \"Email is invalid.\";\r\n                break;\r\n            case \"Password\":\r\n                ValidPassword = value.length >= 6;\r\n                fieldValidationErrors.Password = ValidPassword ? \"\" : \"Password is too short.\";\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                PasswordsMatched = this.state.Password === value;\r\n                fieldValidationErrors.ConfirmPassword = PasswordsMatched ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n            case \"IsAgree\":\r\n                Agreed = this.refs.agreementCheckBox.checked;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: fieldValidationErrors,\r\n            ValidEmail: ValidEmail,\r\n            ValidPassword: ValidPassword,\r\n            PasswordsMatched: PasswordsMatched,\r\n            Agreed: Agreed,\r\n        }, this.validateForm);\r\n    }\r\n\r\n    validateForm() {\r\n        this.setState({\r\n            ValidForm: this.state.ValidEmail &&\r\n                this.state.ValidPassword &&\r\n                this.state.PasswordsMatched &&\r\n                this.state.Agreed\r\n        });\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.Username === \"\" ||\r\n            this.state.Email === \"\" ||\r\n            this.state.Password === \"\" ||\r\n            this.state.ConfirmPassword === \"\") {\r\n\r\n            this.setState({\r\n                NullError: true,\r\n                UsernameOrEmailTaken: false,\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const newCredentials = {\r\n            Username: this.state.Username,\r\n            Password: this.state.Password,\r\n            Email: this.state.Email,\r\n            RegisterAs: this.state.RegisterAs,\r\n        }\r\n\r\n        if (newCredentials.RegisterAs == \"Driver\") {\r\n            register(newCredentials)\r\n                .then(res => {\r\n                    if (res &&\r\n                        localStorage.newCredentialsToken) {\r\n                        this.props.history.push(`/emailConfirmation`);\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            NullError: false,\r\n                            UsernameOrEmailTaken: true,\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n        else if (newCredentials.RegisterAs == \"Trader\" || newCredentials.RegisterAs == \"Broker\") {\r\n            traderRegister(newCredentials)\r\n                .then(res => {\r\n                    if (res &&\r\n                        localStorage.newCredentialsToken) {\r\n                        this.props.history.push(`/emailConfirmation`);\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            NullError: false,\r\n                            UsernameOrEmailTaken: true,\r\n                        });\r\n                    }\r\n                });\r\n        \r\n    }\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"middle\" style={RegisterCardBack}>\r\n                    <div class=\"theme-default animated fadeIn\" style={Card}>\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/signup.png\" alt=\"signup.png\" height=\"60\" />\r\n                            <div class=\"type-h3\" style={CardTitle}>\r\n                                Sign Up\r\n                            </div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"Username\" class=\"control-label\">Username</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"Username\" type=\"text\" name=\"Username\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Username} onChange={this.onChange} required />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"Email\" class=\"control-label\">Email</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"Email\" type=\"email\" name=\"Email\" class=\"form-control\" placeholder=\"someone@example.com\" autocomplete=\"off\"\r\n                                        value={this.state.Email} onChange={this.onChange} />\r\n                                    <span class=\"text-danger\">{this.state.Errors[\"Email\"]}</span>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"Password\" class=\"control-label\">Password</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"Password\" type=\"password\" name=\"Password\" class=\"form-control\"\r\n                                        value={this.state.Password} onChange={this.onChange} />\r\n                                    <span class=\"text-danger\">{this.state.Errors[\"Password\"]}</span>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"ConfirmPassword\" class=\"control-label\">Confirm Password</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"ConfirmPassword\" type=\"password\" name=\"ConfirmPassword\" class=\"form-control\"\r\n                                        value={this.state.ConfirmPassword} onChange={this.onChange} />\r\n                                    <span class=\"text-danger\">{this.state.Errors[\"ConfirmPassword\"]}</span>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"control-label\">Register As</label>\r\n                                    <div class=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                        <button id=\"example-dropdown\" class=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                            <span>{this.state.RegisterAs}</span>\r\n                                            <span class=\"caret\"></span>\r\n                                        </button>\r\n                                        <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                            <li><Link onClick={e => { this.state.RegisterAs = \"Driver\" }} onChange={this.onChange}>Driver</Link></li>\r\n                                            <li><Link onClick={e => { this.state.RegisterAs = \"Trader\" }} onChange={this.onChange}>Trader</Link></li>\r\n                                            <li><Link onClick={e => { this.state.RegisterAs = \"Broker\" }} onChange={this.onChange}>Broker</Link></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div class=\"checkbox\">\r\n                                        <label class=\"control-label\">\r\n                                            <input ref=\"agreementCheckBox\" type=\"checkbox\" name=\"IsAgree\" value=\"\" onChange={this.onChange}></input>\r\n                                            <span>Agree with our </span>\r\n                                            <span>\r\n                                                <Link data-toggle=\"modal\" data-target=\"#terms\">Terms and Conditions</Link>\r\n                                            </span>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    {this.state.NullError &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">All fields are required.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                    {this.state.UsernameOrEmailTaken &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">Username or email is already taken.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                    {this.state.AgreementError &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">You must agree to our terms and conditions.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                    \r\n                                    \r\n                                    <label class=\"control-label\">Have an account? <span><Link to=\"/login\">Sign In Now!</Link></span></label>\r\n                                </div>\r\n                                <input type=\"submit\" value=\"Next\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"modal\" id=\"terms\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content animated fadeIn\">\r\n                            <div class=\"modal-header\">\r\n                                <h4 class=\"modal-title\" id=\"modal-sample-label\">Terms of Use</h4>\r\n                            </div>\r\n                            <div class=\"modal-body text-justify\">\r\n                                Your privacy is important to us. <span>{Strings.APP_NAME}</span>'s Privacy Statement describes the types of data we collect from you, how we use your Data, and the legal bases we have to process your Data. The Privacy Statement also describes how {String.APP_NAME} uses your content, which is information submitted by you to {Strings.APP_NAME} via the Services. Where processing is based on consent and to the extent permitted by law, by agreeing to these Terms, you consent to {Strings.APP_NAME}� collection, use and disclosure of your content and data as described in the privacy statement. In some cases, we will provide separate notice and request your consent as referenced in the privacy statement.\r\n                </div>\r\n                            <div class=\"modal-footer\">\r\n                                <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Ok</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Register;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\"; \r\nimport { Required } from \"../../styles/MiscellaneousStyles\";\r\n\r\nimport {\r\n    EmailConfirmationCardBack,\r\n    Card,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass EmailConfirmation extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            ConfirmationCode: 0,\r\n            NullError: false,\r\n            InvalidCodeError: false,\r\n            Errors: {}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const code = jwt_decode(localStorage.newCredentialsToken).Code; \r\n\r\n        if (this.state.ConfirmationCode === \"\") {\r\n\r\n            this.setState({\r\n                NullError: true,\r\n                InvalidCodeError: false,\r\n            });\r\n\r\n            return;\r\n        }\r\n        else if (this.state.ConfirmationCode != code) {\r\n\r\n            this.setState({\r\n                NullError: false,\r\n                InvalidCodeError: true,\r\n            });\r\n\r\n            return;\r\n        }\r\n        else {\r\n            localStorage.setItem(\"verifiedCredentialsToken\", localStorage.newCredentialsToken);\r\n            localStorage.removeItem(\"newCredentialsToken\");\r\n            this.props.history.push(`/accountSetup`);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.newCredentialsToken) {\r\n            this.props.history.push(`/register`);\r\n            return <a />\r\n        }\r\n        else {\r\n            return (\r\n                <div class=\"middle\" style={EmailConfirmationCardBack}>\r\n                    <div class=\"theme-default animated fadeIn\" style={Card}>\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/passcode.png\" alt=\"passcode.png\" height=\"60\" />\r\n                            <div class=\"type-h3\" style={CardTitle}>\r\n                                Email Confirmation\r\n                </div>\r\n                            <div class=\"type-sh3\">\r\n                                We delivered a confirmation code to your email.\r\n                </div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"ConfirmationCode\" class=\"control-label\">Confirmation Code</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"ConfirmationCode\" type=\"text\" name=\"ConfirmationCode\" class=\"form-control\"\r\n                                        value={this.state.ConfirmationCode} onChange={this.onChange} />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    {this.state.NullError &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">Confirmation code is required.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                    {this.state.InvalidCodeError &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">Invalid code.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <input type=\"submit\" value=\"Next\" class=\"btn btn-primary\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport default EmailConfirmation;","import React, { Component } from \"react\";\r\nimport { accountSetup } from \"../users/DriverFunctions\";\r\nimport { TraderAccountSetup } from \"../users/TraderFunctions\"\r\nimport { Required } from \"../../styles/MiscellaneousStyles\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport {\r\n    AccountSetupCardBack,\r\n    CardLarge,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass AccountSetup extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            Email: \"\",\r\n            Password: \"\",\r\n            RegisterAs: \"\",\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            DateOfBirth: \"\",\r\n            Nationality: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            NullError: false,\r\n            Errors: {}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.FirstName === \"\" ||\r\n            this.state.LastName === \"\" ||\r\n            this.state.DateOfBirth === \"\" ||\r\n            this.state.Nationality === \"\" ||\r\n            this.state.Address === \"\" ||\r\n            this.state.PhoneNumber === \"\") {\r\n\r\n            this.setState({\r\n                NullError: true,\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        if (localStorage.verifiedCredentialsToken) {\r\n            const decoded = jwt_decode(localStorage.verifiedCredentialsToken);\r\n            this.state.Username = decoded.Username;\r\n            this.state.Email = decoded.Email;\r\n            this.state.Password = decoded.Password;\r\n            this.state.RegisterAs = decoded.RegisterAs;\r\n        }\r\n\r\n        const newDriver = {\r\n            Username: this.state.Username,\r\n            Email: this.state.Email,\r\n            Password: this.state.Password,\r\n            RegisterAs: this.state.RegisterAs,\r\n            FirstName: this.state.FirstName,\r\n            LastName: this.state.LastName,\r\n            DateOfBirth: this.state.DateOfBirth,\r\n            Gender: this.refs.Gender.value,\r\n            Address: this.state.Address,\r\n            PhoneNumber: this.state.PhoneNumber,\r\n            Nationality: this.state.Nationality,\r\n        }\r\n\r\n  \r\n        if (newDriver.RegisterAs == \"Driver\") {\r\n            accountSetup(newDriver)\r\n                .then(res => {\r\n                    localStorage.removeItem(\"verifiedCredentialsToken\");\r\n                    localStorage.setItem(\"IsCreatedSuccessfully\", true);\r\n                    this.props.history.push(`/congratulations`);\r\n                });\r\n        }\r\n        if (newDriver.RegisterAs == \"Trader\" || newDriver.RegisterAs == \"Broker\") {\r\n            TraderAccountSetup(newDriver)\r\n                .then(res => {\r\n                    localStorage.removeItem(\"verifiedCredentialsToken\");\r\n                    localStorage.setItem(\"IsCreatedSuccessfully\", true);\r\n                    this.props.history.push(`/congratulations`);\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.verifiedCredentialsToken) {\r\n            this.props.history.push(`/register`);\r\n            return <a />\r\n        }\r\n        else {\r\n            return (\r\n                <div class=\"middle\" style={AccountSetupCardBack}>\r\n                    <div class=\"theme-default animated fadeIn\" style={CardLarge}>\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/create_account.png\" atl=\"create_account.png\" height=\"60\" />\r\n                            <div class=\"type-h3\" style={CardTitle}>\r\n                                Create Account\r\n                                </div>\r\n                            <div class=\"type-sh3\">\r\n                                Just one more step, and you're done!\r\n                                </div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-8\">\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"FirstName\" class=\"control-label\">First Name</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"FirstName\" autocomplete=\"off\"\r\n                                                value={this.state.FirstName} onChange={this.onChange} />\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"LastName\" class=\"control-label\">Last Name</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"LastName\" autocomplete=\"off\"\r\n                                                value={this.state.LastName} onChange={this.onChange} />\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"DateOfBirth\" class=\"control-label\">Date of Birth</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"date\" class=\"form-control\" name=\"DateOfBirth\" autocomplete=\"off\"\r\n                                                value={this.state.DateOfBirth} onChange={this.onChange} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-8\">\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"Gender\" class=\"control-label\">Gender</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <select ref=\"Gender\" htmlFor=\"Gender\" class=\"form-control\">\r\n                                                <option value=\"Male\" selected>Male</option>\r\n                                                <option value=\"Female\">Female</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"Nationality\" class=\"control-label\">Nationality</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"Nationality\" autocomplete=\"off\"\r\n                                                value={this.state.Nationality} onChange={this.onChange} />\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"PhoneNumber\" class=\"control-label\">Phone Number</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\"\r\n                                                placeholder=\"+XXXXXXXXXXXX\" value={this.state.PhoneNumber} onChange={this.onChange} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-8\">\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"Address\" class=\"control-label\">Address</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <textarea class=\"form-control\" rows=\"5\" name=\"Address\" autocomplete=\"off\"\r\n                                                value={this.state.Address} onChange={this.onChange}></textarea>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    {this.state.NullError &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">All fields are required.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"submit\" value=\"Create\" class=\"btn btn-primary\" />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport default AccountSetup;","import React, { Component } from \"react\";\r\n\r\nimport {\r\n    CongratulationsCardBack,\r\n    CardXLarge,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass EmailConfirmation extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        localStorage.removeItem(\"IsCreatedSuccessfully\");\r\n        this.props.history.push(`/login`);\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.IsCreatedSuccessfully) {\r\n            this.props.history.push(`/register`);\r\n            return <a />\r\n        }\r\n        else {\r\n            return (\r\n                <div class=\"middle\" style={CongratulationsCardBack}>\r\n                    <div class=\"jumbotron theme-default animated fadeIn\" style={CardXLarge}>\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                    <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        alt=\"congrats.png\" src=\"./images/congrats.png\" data-source-index=\"2\" />\r\n                                </div>\r\n                                <div class=\"col-md-12 col-md-pull-12\">\r\n                                    <div class=\"type-h3\">\r\n                                        Congratulations\r\n                                        </div>\r\n                                    <div class=\"type-sh3\">\r\n                                        Your account has been created successfully.\r\n                                        </div>\r\n                                    <br />\r\n                                    <form noValidate onSubmit={this.onSubmit}>\r\n                                        <input type=\"submit\" value=\"Sign In\" class=\"btn btn-primary\" />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>);\r\n        }\r\n    }\r\n};\r\n\r\nexport default EmailConfirmation;","export const TabMenu = {\r\n    padding: \"10px\",\r\n    backgroundColor: \"#3A3A3C\",\r\n    width: \"100%\",\r\n    margin: \"0px\",\r\n};\r\n\r\nexport default {\r\n    TabMenu,\r\n};","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { uploadDriverProfilePhoto } from \"../../DriverFunctions\";\r\nimport Strings from \"../../../../res/strings\";\r\n\r\nclass ProfilePhoto extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Image: null,\r\n            ImageURL: \"./images/defaultProfilePhoto.png\",\r\n            DriverID: null,\r\n            ImageCategory: \"ProfilePicture\",\r\n            UploadProgress: null,\r\n        };\r\n        this.onImageUpload = this.onImageUpload.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const decoded = jwt_decode(localStorage.userToken);\r\n\r\n        this.setState({\r\n            ImageURL: decoded.ProfilePhotoURL,\r\n        });\r\n\r\n        this.setState({\r\n            DriverID: decoded.DriverID,\r\n        });\r\n    }\r\n\r\n    onImageUpload = event => {\r\n        this.state.Image = event.target.files[0];\r\n        console.log(this.state.Image);\r\n        const formData = new FormData();\r\n\r\n        try {            \r\n            formData.append(\"DriverID\", this.state.DriverID);\r\n            formData.append(\"ImageCategory\", this.state.ImageCategory);\r\n            formData.append(\"Image\", this.state.Image, this.state.Image.name);\r\n        }\r\n        catch (exception) {\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        axios.post(Strings.IMAGE_UPLOADER, formData, {\r\n            onUploadProgress: event => {\r\n                this.setState({\r\n                    UploadProgress: (\r\n                        <div class=\"progress-bar\">\r\n                            <div class=\"progress-circle\"></div>\r\n                            <div class=\"progress-circle\"></div>\r\n                            <div class=\"progress-circle\"></div>\r\n                            <div class=\"progress-circle\"></div>\r\n                            <div class=\"progress-circle\"></div>\r\n                        </div>\r\n                    ),\r\n                });\r\n            }\r\n        })\r\n            .then(async response => {\r\n                response = response.data;\r\n                console.log(response);\r\n\r\n                if (response.message === \"Image uploaded successfully.\") {\r\n                    const driverProfilePhoto = {\r\n                        DriverID: this.state.DriverID,\r\n                        URL: response.imageUrl,\r\n                        FileName: response.filename\r\n                    }\r\n\r\n                    await uploadDriverProfilePhoto(driverProfilePhoto)\r\n                        .then(res => {\r\n                            if (res === \"Driver's profile photo is updated.\" ||\r\n                                res === \"Driver's profile photo is added.\") {\r\n                                this.setState({\r\n                                    ImageURL: response.imageUrl,\r\n                                    UploadProgress: null,\r\n                                });\r\n                            }\r\n                        }); \r\n                }\r\n            })\r\n            .catch(() => {\r\n                this.props.OnImageUploaded(\"Invalid Image.\");\r\n                this.setState({\r\n                    ImageURL: \"./images/defaultProfilePhoto.png\",\r\n                    UploadProgress: null,\r\n                });\r\n            });\r\n    }\r\n\r\n    onSubmit = async e => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"file\" onChange={this.onImageUpload} style={{ display: \"none\", }} ref={fileInput => this.fileInput = fileInput} />\r\n                <figure class=\"media\">\r\n                    <div class=\"media-img media-img-has-play ratio-movie\" style={{\r\n                        width: \"200px\",\r\n                        height: \"200px\",\r\n                        border: \"0px\",\r\n                        padding: \"0px\",\r\n                        border: \"5px solid #3A3A3C\"\r\n                    }}>\r\n                        <a href=\"#\" onClick={() => this.fileInput.click()}>\r\n                            <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                src={this.state.ImageURL} alt=\"ProfilePhoto.png\" />\r\n                            <i class=\"glyph glyph-edit\"></i>\r\n                        </a>\r\n                    </div>\r\n                </figure>\r\n                {this.state.UploadProgress}\r\n            </div>\r\n                \r\n        );\r\n    }\r\n};\r\n\r\nexport default ProfilePhoto;","import React, { Component } from \"react\";\r\n\r\nclass WarningAlert extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"alert alert-warning alert-dismissible fade in\" role=\"alert\" style={{ marginBottom: \"0px\" }}>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={this.props.OnClose(null)}>\r\n                    <span aria-hidden=\"true\"><i class=\"glyph glyph-cancel\"></i></span>\r\n                </button>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-24\">\r\n                            <p>{this.props.Message}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default WarningAlert;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport ProfilePhoto from \"./ProfilePhoto\";\r\nimport WarningAlert from \"../../../../controls/WarningAlert\";\r\n\r\nclass Profile extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            Username: \"\",\r\n            Password: \"\",\r\n            Email: \"\",\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\",\r\n            WarningAlert: null,\r\n            Errors: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.userToken) {\r\n            const decoded = jwt_decode(localStorage.userToken);\r\n\r\n            this.setState({\r\n                Username: decoded.Username,\r\n                Password: decoded.Password,\r\n                Email: decoded.Email,\r\n                FirstName: decoded.FirstName,\r\n                LastName: decoded.LastName,\r\n                DateOfBirth: decoded.DateOfBirth,\r\n                Gender: decoded.Gender,\r\n                Address: decoded.Address,\r\n                PhoneNumber: decoded.PhoneNumber,\r\n                Nationality: decoded.Nationality,\r\n               \r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                Username: \"\",\r\n                Password: \"\",\r\n                Email: \"\",\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                Address: \"\",\r\n                PhoneNumber: \"\",\r\n                Gender: \"\",\r\n                Nationality: \"\",\r\n                DateOfBirth: \"\",\r\n            });\r\n        }\r\n    }\r\n\r\n    onImageUploaded = message => {\r\n        if (message) {\r\n            this.setState({\r\n                WarningAlert: (<WarningAlert Message={message} OnClose={this.onImageUploaded} />)\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                WarningAlert: null\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.WarningAlert}\r\n                <div class=\"jumbotron theme-default\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\" style={{ marginBottom: \"5px\", }}>\r\n                                    <ProfilePhoto OnImageUploaded={this.onImageUploaded} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-18\">\r\n                                <div class=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                    {this.state.FirstName + \" \" + this.state.LastName}\r\n                                    </div>\r\n                                <div class=\"type-sh3\">\r\n                                    <span class=\"fa fa-car\"></span>   Driver\r\n                                    </div>\r\n                                <div>\r\n                                    <ol class=\"list-items theme-alt\">\r\n                                        <li class=\"list-items-row\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-md-2\">\r\n                                                    <strong><span class=\"fa fa-at\" style={{ color: \"#008575\" }}></span></strong>\r\n                                                </div>\r\n                                                <div class=\"col-md-6\">\r\n                                                    <a style={{ textDecoration: \"none\", }}>Username:</a>\r\n                                                </div>\r\n                                                <div class=\"col-md-6\">\r\n                                                    {this.state.Username}\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li class=\"list-items-row\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-md-2\">\r\n                                                    <strong><span class=\"fa fa-envelope\" style={{ color: \"#008575\", }}></span></strong>\r\n                                                </div>\r\n                                                <div class=\"col-md-6\">\r\n                                                    <a style={{ textDecoration: \"none\", }}>Email:</a>\r\n                                                </div>\r\n                                                <div class=\"col-md-6\">\r\n                                                    {this.state.Email}\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li class=\"list-items-row\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-md-2\">\r\n                                                    <strong><span class=\"fa fa-phone\" style={{ color: \"#008575\" }}></span></strong>\r\n                                                </div>\r\n                                                <div class=\"col-md-6\">\r\n                                                    <a style={{ textDecoration: \"none\", }}>Phone Number:</a>\r\n                                                </div>\r\n                                                <div class=\"col-md-6\">\r\n                                                    {this.state.PhoneNumber}\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ol>\r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"btn-group\">\r\n                                <button class=\"btn btn-primary\" href=\"#\">Driving Licence</button>\r\n                                <button class=\"btn btn-primary\" href=\"#\">Exit/Entry</button>\r\n                                <button class=\"btn btn-primary\" href=\"#\">Identity Card</button>\r\n                                <button class=\"btn btn-primary\" href=\"#\">Permit Licence</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"jumbotron theme-dark\" style={{ backgroundColor: \"#161616\", }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col\">\r\n                                <div class=\"type-h3\" style={{ paddingTop: \"10px\", }}>\r\n                                    Details\r\n                                    </div>\r\n                                <ol class=\"list-items theme-alt\">\r\n                                    <li class=\"list-items-row\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-2\">\r\n                                                <strong><span class=\"fa fa-at\" style={{ color: \"#008575\" }}></span></strong>\r\n                                            </div>\r\n                                            <div class=\"col-md-4\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Username:</a>\r\n                                            </div>\r\n                                            <div class=\"col-md-4\">\r\n                                                {this.state.Username}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li class=\"list-items-row\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-2\">\r\n                                                <strong><span class=\"fa fa-envelope\" style={{ color: \"#008575\", }}></span></strong>\r\n                                            </div>\r\n                                            <div class=\"col-md-4\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Email:</a>\r\n                                            </div>\r\n                                            <div class=\"col-md-4\">\r\n                                                {this.state.Email}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li class=\"list-items-row\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-2\">\r\n                                                <strong><span class=\"fa fa-birthday-cake\" style={{ color: \"#008575\", }}></span></strong>\r\n                                            </div>\r\n                                            <div class=\"col-md-4\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Date of Birth:</a>\r\n                                            </div>\r\n                                            <div class=\"col-md-4\">\r\n                                                {this.state.DateOfBirth}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li class=\"list-items-row\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-2\">\r\n                                                {this.state.Gender === \"Male\" &&\r\n                                                    <strong><span class=\"fa fa-male\" style={{ color: \"#008575\", }}></span></strong>\r\n                                                }\r\n                                                {this.state.Gender === \"Female\" &&\r\n                                                    <strong><span class=\"fa fa-female\" style={{ color: \"#008575\", }}></span></strong>\r\n                                                }\r\n                                            </div>\r\n                                            <div class=\"col-md-4\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Gender:</a>\r\n                                            </div>\r\n                                            <div class=\"col-md-4\">\r\n                                                {this.state.Gender}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li class=\"list-items-row\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-2\">\r\n                                                <strong><span class=\"fa fa-flag\" style={{ color: \"#008575\" }}></span></strong>\r\n                                            </div>\r\n                                            <div class=\"col-md-4\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Nationality:</a>\r\n                                            </div>\r\n                                            <div class=\"col-md-4\">\r\n                                                {this.state.Nationality}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li class=\"list-items-row\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-2\">\r\n                                                <strong><span class=\"fa fa-phone\" style={{ color: \"#008575\" }}></span></strong>\r\n                                            </div>\r\n                                            <div class=\"col-md-4\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Phone Number:</a>\r\n                                            </div>\r\n                                            <div class=\"col-md-4\">\r\n                                                {this.state.PhoneNumber}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li class=\"list-items-row\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-2\">\r\n                                                <strong><span class=\"fa fa-map-marker\" style={{ color: \"#008575\" }}></span></strong>\r\n                                            </div>\r\n                                            <div class=\"col-md-4\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Address:</a>\r\n                                            </div>\r\n                                            <div class=\"col-md-4\">\r\n                                                {this.state.Address}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Profile;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport Strings from \"../res/strings\";\r\n\r\nclass ImageUploader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Image: null,\r\n            DriverID: null,\r\n            UploadProgress: null,\r\n        };\r\n\r\n        this.onImageUpload = this.onImageUpload.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.userToken) {\r\n            const decoded = jwt_decode(localStorage.userToken);\r\n            this.setState({\r\n                DriverID: decoded.DriverID,\r\n            });\r\n        }\r\n    }\r\n\r\n    onImageUpload = event => {\r\n        this.state.Image = event.target.files[0];\r\n\r\n        if (this.state.Image) {\r\n            let mimeType = this.state.Image.type;\r\n\r\n            if (!mimeType.startsWith(\"image\")) {\r\n                this.props.OnInvalidImageSelected();\r\n                return;\r\n            }\r\n        }\r\n\r\n        const formData = new FormData();\r\n\r\n        try {            \r\n            formData.append(\"DriverID\", this.state.DriverID);\r\n            formData.append(\"ImageCategory\", this.props.ImageCategory);\r\n            formData.append(\"Image\", this.state.Image, this.state.Image.name);\r\n        }\r\n        catch (exception) {\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        axios.post(Strings.IMAGE_UPLOADER, formData, {\r\n            onUploadProgress: event => {\r\n                this.setState({\r\n                    UploadProgress: (\r\n                        <div class=\"progress-bar\">\r\n                            <div class=\"progress-circle\"></div>\r\n                            <div class=\"progress-circle\"></div>\r\n                            <div class=\"progress-circle\"></div>\r\n                            <div class=\"progress-circle\"></div>\r\n                            <div class=\"progress-circle\"></div>\r\n                        </div>\r\n                    ),\r\n                });\r\n            }\r\n        }).then(async response => {\r\n            this.props.OnImageUploaded(response.data);\r\n\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n        }).catch((error) => {\r\n            this.props.OnImageUploaded(error);\r\n\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async e => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"file\" onChange={this.onImageUpload} style={{ display: \"none\", }} ref={fileInput => this.fileInput = fileInput} />\r\n                <figure class=\"media\">\r\n                    <div class=\"media-img media-img-has-play ratio-movie\" style={{\r\n                        width: this.props.Width,\r\n                        height: this.props.Height,\r\n                        border: \"0px\",\r\n                        padding: \"0px\",\r\n                        border: \"5px solid #3A3A3C\"\r\n                    }}>\r\n                        <a onClick={() => this.fileInput.click()}>\r\n                            <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                src={this.props.Source} alt=\"dafault-image.png\" />\r\n                            <i class=\"glyph glyph-edit\"></i>\r\n                        </a>\r\n                    </div>\r\n                </figure>\r\n                {this.state.UploadProgress}\r\n            </div>\r\n                \r\n        );\r\n    }\r\n};\r\n\r\nexport default ImageUploader;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { updateTruck } from \"../../DriverFunctions\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\n\r\nclass TruckSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            PlateNumber: \"\",\r\n            Owner: \"\",\r\n            ProductionYear: \"\",\r\n            Brand: \"\",\r\n            Model: \"\",\r\n            Type: \"\",\r\n            MaximumWeight: \"\",\r\n\r\n            ValidPlateNumber: true,\r\n            ValidOwner: true,\r\n            ValidProductionYear: true,\r\n            ValidBrand: true,\r\n            ValidModel: true,\r\n            ValidType: true,\r\n            ValidMaximumWeight: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                PlateNumber: \"\",\r\n                Owner: \"\",\r\n                ProductionYear: \"\",\r\n                Brand: \"\",\r\n                Model: \"\",\r\n                Type: \"\",\r\n                MaximumWeight: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.userToken) {\r\n            const truck = jwt_decode(localStorage.userToken).Truck;\r\n\r\n            this.setState({\r\n                PlateNumber: truck.PlateNumber,\r\n                Owner: truck.Owner,\r\n                ProductionYear: truck.ProductionYear,\r\n                Brand: truck.Brand,\r\n                Model: truck.Model,\r\n                Type: truck.Type,\r\n                MaximumWeight: truck.MaximumWeight\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                PlateNumber: \"\",\r\n                Owner: \"\",\r\n                ProductionYear: \"\",\r\n                Brand: \"\",\r\n                Model: \"\",\r\n                Type: \"\",\r\n                MaximumWeight: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidPlateNumber = this.state.ValidPlateNumber;\r\n        let ValidOwner = this.state.ValidOwner;\r\n        let ValidProductionYear = this.state.ValidProductionYear;\r\n        let ValidBrand = this.state.ValidBrand;\r\n        let ValidModel = this.state.ValidModel;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidMaximumWeight = this.state.MaximumWeight;\r\n\r\n        switch (field) {\r\n            case \"PlateNumber\":\r\n                ValidPlateNumber = ((value !== \"\") && (value >= 1 && value <= 999));\r\n                Errors.PlateNumber = ValidPlateNumber ? \"\" : \"Plate Number must be between 001 and 999.\";\r\n                break;\r\n            case \"Owner\":\r\n                ValidOwner = (value !== \"\");\r\n                Errors.Owner = ValidOwner ? \"\" : \"Owner is required.\";\r\n                break;\r\n            case \"ProductionYear\":\r\n                let currentYear = new Date().getFullYear();\r\n                ValidProductionYear = ((value !== \"\") && (value >= 2000 && value <= currentYear));\r\n                Errors.ProductionYear = ValidProductionYear ? \"\" : `Production Year must be between 2000 and ${currentYear}`;\r\n                break;\r\n            case \"Brand\":\r\n                ValidBrand = (value !== \"\");\r\n                Errors.Brand = ValidBrand ? \"\" : \"Brand is required.\";\r\n                break;\r\n            case \"Model\":\r\n                ValidModel = (value !== \"\");\r\n                Errors.Model = ValidModel ? \"\" : \"Model is required.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required\";\r\n                break;\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPlateNumber: ValidPlateNumber,\r\n            ValidOwner: ValidOwner,\r\n            ValidProductionYear: ValidProductionYear,\r\n            ValidBrand: ValidBrand,\r\n            ValidModel: ValidModel,\r\n            ValidType: ValidType,\r\n            ValidMaximumWeight: ValidMaximumWeight\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidPlateNumber &&\r\n                    this.state.ValidOwner &&\r\n                    this.state.ValidProductionYear &&\r\n                    this.state.ValidBrand &&\r\n                    this.state.ValidModel &&\r\n                    this.state.ValidType &&\r\n                    this.state.MaximumWeight\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedTruck = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            PlateNumber: this.state.PlateNumber,\r\n            Owner: this.state.Owner,\r\n            ProductionYear: this.state.ProductionYear,\r\n            Brand: this.state.Brand,\r\n            Model: this.state.Model,\r\n            Type: this.state.Type,\r\n            MaximumWeight: this.state.MaximumWeight\r\n        };\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateTruck(updatedTruck).then(response => {\r\n            if (response.Message === \"Truck is updated in database.\") {\r\n                localStorage.setItem(\"userToken\", response.Token);\r\n\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n\r\n                this.props.OnTruckSettingsUpdated();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div class=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Truck Settings</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div class=\"entity-list entity-list-expandable\">\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-list-ol\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"number\" name=\"PlateNumber\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.PlateNumber} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Plate Number</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"PlateNumber\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-user\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" name=\"Owner\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Owner} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Owner</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"Owner\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-calendar-day\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"number\" name=\"ProductionYear\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.ProductionYear} onChange={this.onChange} placeholder=\"XXXX\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Production Year</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"ProductionYear\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-copyright\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" name=\"Brand\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Brand} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Brand</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"Brand\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-list-ol\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" name=\"Model\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Model} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Truck Model</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"Model\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-cog\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" name=\"Type\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Type} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Truck Type</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"Type\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-weight\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"number\" name=\"MaximumWeight\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Maximum Weight (GVW)</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"MaximumWeight\"]}</div>\r\n                            </div>\r\n                        </div>                      \r\n                        <div class=\"entity-list-item active\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Save Changes?</div>\r\n                                <div class=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div class=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default TruckSettings;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles\";\r\nimport ImageUploader from \"../../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { addTrailer } from \"../../../DriverFunctions.js\";\r\n\r\nclass AddTrailerDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            MaximumWeight: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n            ImageCategory: \"Trailer-1\",\r\n            Type: \"\",\r\n\r\n            ValidMaximumWeight: false,\r\n            ValidPhotoURL: false,\r\n            ValidType: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                MaximumWeight: \"\",\r\n                PhotoURL: \"\",\r\n                Type: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onInvalidImageSelected = this.onInvalidImageSelected.bind(this);\r\n        this.onImageUploaded = this.onImageUploaded.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.userToken) {\r\n            const trailers = jwt_decode(localStorage.userToken).Truck.Trailers;\r\n\r\n            if (trailers) {\r\n                this.setState({\r\n                    ImageCategory: `Trailer-${trailers.length + 1}`\r\n                });\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ImageCategory: \"Trailer-1\"\r\n                });\r\n            }         \r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidMaximumWeight = this.state.ValidMaximumWeight;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n        let ValidType = this.state.ValidType;\r\n\r\n        switch (field) {\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidMaximumWeight: ValidMaximumWeight,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n            ValidType: ValidType\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidMaximumWeight &&\r\n                        this.state.ValidPhotoURL &&\r\n                        this.state.ValidType\r\n                });\r\n        });\r\n    }\r\n\r\n    onInvalidImageSelected = () => {\r\n        this.validateField(\"PhotoURL\", null);\r\n    }\r\n\r\n    onImageUploaded = response => {\r\n        if (response.message === \"Image uploaded successfully.\") {\r\n            this.setState({\r\n                PhotoURL: response.imageUrl\r\n            });\r\n\r\n            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n        }\r\n        else {\r\n            this.validateField(\"PhotoURL\", null);\r\n        }\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newTrailer = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            MaximumWeight: this.state.MaximumWeight,\r\n            PhotoURL: this.state.PhotoURL,\r\n            Type: this.state.Type\r\n        }\r\n\r\n        console.log(\"Going to add the trailer.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addTrailer(newTrailer).then(response => {\r\n            if (response.Message === \"Trailer is added.\") {\r\n                localStorage.setItem(\"userToken\", response.Token);\r\n                this.props.OnTrailerAdded(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div class=\"modal\" id=\"add-trailer-dialog\"\r\n                    tabindex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div class=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div class=\"type-h3\">New Trailer</div>\r\n                                    </div>\r\n                                    <div class=\"modal-body\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <ImageUploader Source={this.state.PhotoURL} Height=\"220px\"\r\n                                                        Width=\"220px\" OnImageUploaded={this.onImageUploaded}\r\n                                                        OnInvalidImageSelected={this.onInvalidImageSelected} ImageCategory={this.state.ImageCategory} />\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"text-danger\">{this.state.Errors[\"PhotoURL\"]}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Maximum Weight (GVW)</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"MaximumWeight\" class=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors[\"MaximumWeight\"]}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Trailer Type</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" class=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"modal-footer\">\r\n                                        <button class=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnAddTrailerDialogRemove}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddTrailerDialog;","import React, { Component } from \"react\";\r\nimport AddTrailerDialog from \"./AddTrailerDialog\";\r\n\r\nclass AddTrailer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddTrailerDialog: null\r\n        };\r\n\r\n        this.onAddTrailerDialogCreate = this.onAddTrailerDialogCreate.bind(this);\r\n        this.onAddTrailerDialogRemove = this.onAddTrailerDialogRemove.bind(this);\r\n        this.onTrailerAdded = this.onTrailerAdded.bind(this);\r\n    }\r\n\r\n    onAddTrailerDialogCreate = () => {\r\n        this.setState({\r\n            AddTrailerDialog: (<AddTrailerDialog OnAddTrailerDialogRemove={this.onAddTruckDialogRemove} OnTrailerAdded={this.onTrailerAdded} />),\r\n        });\r\n    }\r\n\r\n    onAddTrailerDialogRemove = () => {\r\n        this.setState({\r\n            AddTrailerDialog: null,\r\n        });\r\n    }\r\n\r\n    onTrailerAdded = cancelButton => {\r\n        cancelButton.click();\r\n        this.props.OnTruckUpdated();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"jumbotron theme-dark\">\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-24 text-center\">\r\n                            <img src=\"./images/trailer.png\" alt=\"trailer.png\" height=\"50\" />\r\n                            <h3 style={{paddingTop:\"5px\"}}>Trailers</h3>\r\n                            <div class=\"type-sh3\">Your Truck is All Set Up</div>\r\n                            <div class=\"col-md-12 col-md-offset-6\">\r\n                                <div class=\"type-p3\">\r\n                                    RECOMMENDED: Since your truck is all set up, you're good to go for adding up to TWO trailers to it.\r\n                                </div>\r\n                                <div class=\"btn-group\">\r\n                                    <button type=\"button\" class=\"btn btn-secondary\" data-toggle=\"modal\" data-target=\"#add-trailer-dialog\"\r\n                                        onMouseDown={this.onAddTrailerDialogCreate}>Add Trailer</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.AddTrailerDialog}\r\n            </div>           \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddTrailer;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles\";\r\nimport ImageUploader from \"../../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { updateTrailer } from \"../../../DriverFunctions.js\";\r\n\r\nclass EditTrailerDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            MaximumWeight: this.props.Trailer.MaximumWeight,\r\n            PhotoURL: this.props.Trailer.PhotoURL,\r\n            Type: this.props.Trailer.Type,\r\n            ImageCategory: `Trailer-${this.props.dialogID + 1}`,\r\n\r\n            ValidMaximumWeight: true,\r\n            ValidPhotoURL: true,\r\n            ValidType: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                MaximumWeight: \"\",\r\n                PhotoURL: \"\",\r\n                Type: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onInvalidImageSelected = this.onInvalidImageSelected.bind(this);\r\n        this.onImageUploaded = this.onImageUploaded.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidMaximumWeight = this.state.ValidMaximumWeight;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n        let ValidType = this.state.ValidType;\r\n\r\n        switch (field) {\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidMaximumWeight: ValidMaximumWeight,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n            ValidType: ValidType\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidMaximumWeight &&\r\n                        this.state.ValidPhotoURL &&\r\n                        this.state.ValidType\r\n                });\r\n        });\r\n    }\r\n\r\n    onInvalidImageSelected = () => {\r\n        this.validateField(\"PhotoURL\", null);\r\n    }\r\n\r\n    onImageUploaded = response => {\r\n        if (response.message === \"Image uploaded successfully.\") {\r\n            this.setState({\r\n                PhotoURL: response.imageUrl\r\n            });\r\n\r\n            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n        }\r\n        else {\r\n            this.validateField(\"PhotoURL\", null);\r\n        }\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedTrailer = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            TrailerID: this.props.Trailer.TrailerID,\r\n            MaximumWeight: this.state.MaximumWeight,\r\n            PhotoURL: this.state.PhotoURL,\r\n            Type: this.state.Type\r\n        }\r\n\r\n        console.log(updatedTrailer);\r\n\r\n        console.log(\"Updating trailer now.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateTrailer(updatedTrailer).then(response => {\r\n            if (response.Message === \"Trailer is updated.\") {\r\n                localStorage.setItem(\"userToken\", response.Token);\r\n                this.props.OnTrailerUpdated(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div class=\"modal\" id={`edit-trailer-dialog${this.props.dialogID}`}\r\n                    tabindex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div class=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div class=\"type-h3\">Edit Trailer</div>\r\n                                    </div>\r\n                                    <div class=\"modal-body\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <ImageUploader Source={this.state.PhotoURL} Height=\"220px\"\r\n                                                        Width=\"220px\" OnImageUploaded={this.onImageUploaded}\r\n                                                        OnInvalidImageSelected={this.onInvalidImageSelected} ImageCategory={this.state.ImageCategory} />\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"text-danger\">{this.state.Errors[\"PhotoURL\"]}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Maximum Weight (GVW)</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"MaximumWeight\" class=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors[\"MaximumWeight\"]}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Trailer Type</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" class=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"modal-footer\">\r\n                                        <button class=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnEditTrailerDialogRemove}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default EditTrailerDialog;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { deleteTrailer } from \"../../../DriverFunctions.js\";\r\nimport EditTrailerDialog from \"./EditTrailerDialog.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\n\r\nclass TrailersList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Trailers: [],\r\n            EditTrailerDialogs: [],\r\n            Preloader: null,\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async index => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedTrailer = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            TrailerID: this.state.Trailers[index].TrailerID \r\n        };\r\n\r\n        console.log(`Going to delete Trailers[${index}]`);\r\n\r\n        await deleteTrailer(discardedTrailer)\r\n            .then(response => {\r\n                if (response.Message === \"Trailer is deleted.\") {\r\n                    localStorage.setItem(\"userToken\", response.Token);\r\n                    this.props.OnTrailersUpdated();\r\n                }\r\n\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.userToken) {\r\n            const trailers = jwt_decode(localStorage.userToken).Truck.Trailers;\r\n            console.log(trailers);\r\n\r\n            this.setState({\r\n                Trailers: trailers\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                Trailers: []\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div class=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Trailers</div>\r\n                <ol class=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {this.state.Trailers.map((value, index) => {\r\n                        return <li class=\"list-items-row\">\r\n                            <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#${value.TrailerID}`}>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-2\">\r\n                                        <i class=\"glyph glyph-add\"></i>\r\n                                        <i class=\"glyph glyph-remove\"></i>\r\n                                        <strong>{index + 1}</strong>\r\n                                    </div>\r\n                                    <div class=\"col-md-4\">\r\n                                        <img class=\"img-responsive visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                            src={value.PhotoURL} alt=\"trailer.png\" data-source-index=\"2\" style={{\r\n                                                overflow: \"hidden\",\r\n                                                border: \"5px solid #3A3A3C\",\r\n                                                margin: \"5px\"\r\n                                            }} />\r\n                                    </div>\r\n                                    <div class=\"col-md-6\">\r\n                                        <div>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Maximum Weight (GVM):</span> {value.MaximumWeight}\r\n                                        </div>\r\n                                        <div>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Trailer Type:</span> {value.Type}\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                    <div class=\"col-md-6\">\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"collapse\" id={value.TrailerID}>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-18 col-md-offset-2\">\r\n                                        <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block\"\r\n                                            src={value.PhotoURL} alt=\"trailer.png\" data-source-index=\"2\" style={{\r\n                                                overflow: \"hidden\",\r\n                                                border: \"5px solid #3A3A3C\",\r\n                                                margin: \"5px\"\r\n                                            }} />\r\n                                    </div>\r\n                                    <div class=\"col-md-4 text-right\">\r\n                                        <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target={`#edit-trailer-dialog${index}`}\r\n                                            onMouseDown={() => {\r\n                                                let editTrailerDialogs = this.state.EditTrailerDialogs;\r\n\r\n                                                editTrailerDialogs[index] = (<EditTrailerDialog dialogID={index}\r\n                                                    Trailer={value} OnEditTrailerDialogRemove={() => {\r\n                                                        let editTrailerDialogs = this.state.EditTrailerDialogs\r\n                                                        editTrailerDialogs[index] = null;\r\n\r\n                                                        this.setState({\r\n                                                            EditTrailerDialogs: editTrailerDialogs,\r\n                                                        });\r\n\r\n                                                    }} OnTrailerUpdated={cancelButton => {\r\n                                                        cancelButton.click();\r\n                                                        this.props.OnTrailersUpdated();\r\n                                                    }} />);\r\n\r\n                                                this.setState({\r\n                                                    EditTrailerDialogs: editTrailerDialogs,\r\n                                                });\r\n                                            }}>\r\n                                            Edit\r\n                                            </button>\r\n                                        <button type=\"button\" class=\"btn btn-danger\" onClick={event => { this.onDelete(index); }}>Delete</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {this.state.EditTrailerDialogs[index]}\r\n                        </li>\r\n                    })}\r\n                </ol>\r\n                {this.state.Preloader}\r\n            </section>         \r\n        );\r\n    }\r\n};\r\n\r\nexport default TrailersList;","import React, { Component } from \"react\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader\";\r\nimport { updateTruckPhoto } from \"../../DriverFunctions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport TruckSettings from \"./TruckSettings\";\r\nimport AddTrailer from \"./trailers/AddTrailer\";\r\nimport TrailersList from \"./trailers/TrailersList\";\r\n\r\nclass Truck extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            PlateNumber: \"\",\r\n            Owner: \"\",\r\n            ProductionYear: \"\",\r\n            Brand: \"\",\r\n            Model: \"\",\r\n            Type: \"\",\r\n            MaximumWeight: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n            AddTrailer: null,\r\n            TrailersList: null,\r\n        };\r\n\r\n        this.onInvalidImageSelected = this.onInvalidImageSelected.bind(this);\r\n        this.onImageUploaded = this.onImageUploaded.bind(this);\r\n        this.onTrailersUpdated = this.onTrailersUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.userToken) {\r\n            const truck = jwt_decode(localStorage.userToken).Truck;\r\n\r\n            this.setState({\r\n                PlateNumber: truck.PlateNumber,\r\n                Owner: truck.Owner,\r\n                ProductionYear: truck.ProductionYear,\r\n                Brand: truck.Brand,\r\n                Model: truck.Model,\r\n                Type: truck.Type,\r\n                MaximumWeight: truck.MaximumWeight,\r\n                PhotoURL: truck.PhotoURL,\r\n            });\r\n\r\n            if (truck.Trailers.length < 2) {\r\n                this.setState({\r\n                    AddTrailer: <AddTrailer OnTruckUpdated={this.props.OnTruckUpdated} />\r\n                });\r\n            }\r\n\r\n            if (truck.Trailers.length > 0) {\r\n                this.setState({\r\n                    TrailersList: <TrailersList OnTrailersUpdated={this.onTrailersUpdated} />\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.setState({\r\n                PlateNumber: \"\",\r\n                Owner: \"\",\r\n                ProductionYear: \"\",\r\n                Brand: \"\",\r\n                Model: \"\",\r\n                Type: \"\",\r\n                MaximumWeight: \"\",\r\n                PhotoURL: \"./images/default_image.png\",\r\n                AddTrailer: null,\r\n                TrailersList: null,\r\n            });\r\n        }\r\n    }\r\n\r\n    onInvalidImageSelected = () => {\r\n        // Nothing to do here.\r\n    }\r\n\r\n    onImageUploaded = async response => {\r\n        if (response.message === \"Image uploaded successfully.\") {\r\n            const updatedTruck = {\r\n                Token: localStorage.getItem(\"userToken\"),\r\n                PhotoURL: response.imageUrl\r\n            }\r\n\r\n            await updateTruckPhoto(updatedTruck).then(response => {\r\n                if (response.Message === \"Truck photo updated.\") {\r\n                    localStorage.setItem(\"userToken\", response.Token);\r\n                    this.props.OnTruckUpdated();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onTrailersUpdated = () => {\r\n        const trailers = jwt_decode(localStorage.userToken).Truck.Trailers;\r\n\r\n        this.setState({\r\n            AddTrailer: null,\r\n            TrailersList: null,\r\n        });\r\n\r\n        if (trailers.length < 2) {\r\n            this.setState({\r\n                AddTrailer: <AddTrailer OnTruckUpdated={this.props.OnTruckUpdated} />\r\n            });\r\n        }\r\n\r\n        if (trailers.length > 0) {\r\n            this.setState({\r\n                TrailersList: <TrailersList OnTrailerDeleted={this.onTrailerDeleted} />\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"jumbotron theme-default\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <ImageUploader Source={this.state.PhotoURL} Height=\"200px\"\r\n                                    Width=\"200px\" OnImageUploaded={this.onImageUploaded} OnInvalidImageSelected={this.onInvalidImageSelected} ImageCategory=\"Truck\" />\r\n                            </div>\r\n                            <div class=\"col-md-18\">\r\n                                <div class=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                    {`${this.state.Brand} ${this.state.Model}`}\r\n                                </div>\r\n                                <div class=\"type-sh3\">\r\n                                    <span class=\"fas fa-truck\"></span>   {this.state.Type}\r\n                                    </div>\r\n                                <div>\r\n                                    <ol class=\"list-items theme-alt\">\r\n                                        <li class=\"list-items-row\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-md-2\">\r\n                                                    <strong><span class=\"fas fa-list-ol\" style={{ color: \"#008575\" }}></span></strong>\r\n                                                </div>\r\n                                                <div class=\"col-md-6\">\r\n                                                    <a style={{ textDecoration: \"none\", }}>Plate Number:</a>\r\n                                                </div>\r\n                                                <div class=\"col-md-6\">\r\n                                                    {this.state.PlateNumber}\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li class=\"list-items-row\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-md-2\">\r\n                                                    <strong><span class=\"fas fa-calendar-day\" style={{ color: \"#008575\", }}></span></strong>\r\n                                                </div>\r\n                                                <div class=\"col-md-6\">\r\n                                                    <a style={{ textDecoration: \"none\", }}>Production Year:</a>\r\n                                                </div>\r\n                                                <div class=\"col-md-6\">\r\n                                                    {this.state.ProductionYear}\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li class=\"list-items-row\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-md-2\">\r\n                                                    <strong><span class=\"fas fa-weight\" style={{ color: \"#008575\" }}></span></strong>\r\n                                                </div>\r\n                                                <div class=\"col-md-6\">\r\n                                                    <a style={{ textDecoration: \"none\", }}>Maximum Weight:</a>\r\n                                                </div>\r\n                                                <div class=\"col-md-6\">\r\n                                                    {`${this.state.MaximumWeight} GVW`}\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ol>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <TruckSettings OnTruckSettingsUpdated={this.props.OnTruckUpdated} />\r\n                {this.state.AddTrailer}\r\n                {this.state.TrailersList}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Truck;","import React, { Component } from \"react\";\r\n\r\nclass MessageBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Show: this.props.Show,\r\n            Message: this.props.Message,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"modal in\" style={this.state.Show ? { display: \"block\", paddingRight: \"17px\", } : { display: \"none\", paddingRight: \"17px\", }}>\r\n                <div class=\"modal-dialog\">\r\n                    <div class=\"modal-content animated fadeIn\">\r\n                        <div class=\"modal-body text-justify\">{this.state.Message}</div>\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" class=\"btn btn-info\" onClick={e => { this.setState({ Show: false }); }}>Ok</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default MessageBox;","import React, { Component } from \"react\";\r\nimport { addTruck } from \"../../DriverFunctions\";\r\nimport MessageBox from \"../../../../controls/MessageBox\";\r\nimport { Required } from \"../../../../styles/MiscellaneousStyles\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader\";\r\n\r\nclass AddTruck extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PlateNumber: \"\",\r\n            Owner: \"\",\r\n            ProductionYear: \"\",\r\n            Brand: \"\",\r\n            Model: \"\",\r\n            Type: \"\",\r\n            MaximumWeight: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidPlateNumber: false,\r\n            ValidOwner: false,\r\n            ValidProductionYear: false,\r\n            ValidBrand: false,\r\n            ValidModel: false,\r\n            ValidType: false,\r\n            ValidMaximumWeight: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            MessageBox: null,\r\n\r\n            Errors: {\r\n                PlateNumber: \"\",\r\n                Owner: \"\",\r\n                ProductionYear: \"\",\r\n                Brand: \"\",\r\n                Model: \"\",\r\n                Type: \"\",\r\n                MaximumWeight: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onInvalidImageSelected = this.onInvalidImageSelected.bind(this);\r\n        this.onImageUploaded = this.onImageUploaded.bind(this);\r\n    }\r\n\r\n    onChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidPlateNumber = this.state.ValidPlateNumber;\r\n        let ValidOwner = this.state.ValidOwner;\r\n        let ValidProductionYear = this.state.ValidProductionYear;\r\n        let ValidBrand = this.state.ValidBrand;\r\n        let ValidModel = this.state.ValidModel;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidMaximumWeight = this.state.ValidMaximumWeight;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"PlateNumber\":\r\n                ValidPlateNumber = ((value !== \"\") && (value >= 1 && value <= 999));\r\n                Errors.PlateNumber = ValidPlateNumber ? \"\" : \"Plate Number must be between 001 and 999.\";\r\n                break;\r\n            case \"Owner\":\r\n                ValidOwner = (value !== \"\");\r\n                Errors.Owner = ValidOwner ? \"\" : \"Owner is required.\";\r\n                break;\r\n            case \"ProductionYear\":\r\n                let currentYear = new Date().getFullYear();\r\n                ValidProductionYear = ((value !== \"\") && (value >= 2000 && value <= currentYear));\r\n                Errors.ProductionYear = ValidProductionYear ? \"\" : `Production Year must be between 2000 and ${currentYear}`;\r\n                break;\r\n            case \"Brand\":\r\n                ValidBrand = (value !== \"\");\r\n                Errors.Brand = ValidBrand ? \"\" : \"Brand is required.\";\r\n                break;\r\n            case \"Model\":\r\n                ValidModel = (value !== \"\");\r\n                Errors.Model = ValidModel ? \"\" : \"Model is required.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required\";\r\n                break;\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPlateNumber: ValidPlateNumber,\r\n            ValidOwner: ValidOwner,\r\n            ValidProductionYear: ValidProductionYear,\r\n            ValidBrand: ValidBrand,\r\n            ValidModel: ValidModel,\r\n            ValidType: ValidType,\r\n            ValidMaximumWeight: ValidMaximumWeight,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidPlateNumber &&\r\n                        this.state.ValidOwner &&\r\n                        this.state.ValidProductionYear &&\r\n                        this.state.ValidBrand &&\r\n                        this.state.ValidModel &&\r\n                        this.state.ValidType &&\r\n                        this.state.ValidMaximumWeight &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onInvalidImageSelected = () => {\r\n        this.validateField(\"PhotoURL\", null);\r\n    }\r\n\r\n    onImageUploaded = response => {\r\n        if (response.message === \"Image uploaded successfully.\") {\r\n            this.setState({\r\n                PhotoURL: response.imageUrl\r\n            });\r\n\r\n            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n        }\r\n        else {\r\n            this.validateField(\"PhotoURL\", null);\r\n        }\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newTruck = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            PlateNumber: this.state.PlateNumber,\r\n            Owner: this.state.Owner,\r\n            ProductionYear: this.state.ProductionYear,\r\n            Brand: this.state.Brand,\r\n            Model: this.state.Model,\r\n            Type: this.state.Type,\r\n            MaximumWeight: this.state.MaximumWeight,\r\n            PhotoURL: this.state.PhotoURL\r\n        }\r\n\r\n        await addTruck(newTruck)\r\n            .then(response => {\r\n                if (response.Message === \"Driver's truck is added.\") {\r\n                    localStorage.setItem(\"userToken\", response.Token);\r\n                    this.props.OnAddTruckDialogRemove();\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        MessageBox: (<MessageBox Message=\"Truck Not Added.\" Show={true} />),\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"modal\" id=\"add-truck-dialog\"\r\n                tabindex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div class=\"modal-dialog\">\r\n                    <div class=\"modal-content\">\r\n                        <p>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"modal-header\">\r\n                                    <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                    <div class=\"type-h3\">New Truck</div>\r\n                                    <div class=\"type-sh3\">These detials will be displayed on your profile.</div>\r\n                                </div>\r\n                                <div class=\"modal-body\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <ImageUploader Source={this.state.PhotoURL} Height=\"220px\"\r\n                                                    Width=\"220px\" OnImageUploaded={this.onImageUploaded} OnInvalidImageSelected={this.onInvalidImageSelected} ImageCategory=\"Truck\" />\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"text-danger\">{this.state.Errors[\"PhotoURL\"]}</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-12\">                                          \r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"control-label\">Plate Number</label>\r\n                                                <span class=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"PlateNumber\" class=\"form-control\" autocomplete=\"off\"\r\n                                                    value={this.state.PlateNumber} onChange={this.onChange} />\r\n                                                <span class=\"text-danger\">{this.state.Errors[\"PlateNumber\"]}</span>\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"control-label\">Owner</label>\r\n                                                <span class=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Owner\" class=\"form-control\" autocomplete=\"off\"\r\n                                                    value={this.state.Owner} onChange={this.onChange} />\r\n                                                <span class=\"text-danger\">{this.state.Errors[\"Owner\"]}</span>\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"control-label\">Production Year</label>\r\n                                                <span class=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"ProductionYear\" class=\"form-control\" autocomplete=\"off\"\r\n                                                    value={this.state.ProductionYear} onChange={this.onChange} placeholder=\"XXXX\"/>\r\n                                                <span class=\"text-danger\">{this.state.Errors[\"ProductionYear\"]}</span>\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"control-label\">Brand</label>\r\n                                                <span class=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Brand\" class=\"form-control\" autocomplete=\"off\"\r\n                                                    value={this.state.Brand} onChange={this.onChange} />\r\n                                                <span class=\"text-danger\">{this.state.Errors[\"Brand\"]}</span>\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"control-label\">Truck Model</label>\r\n                                                <span class=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Model\" class=\"form-control\" autocomplete=\"off\"\r\n                                                    value={this.state.Model} onChange={this.onChange} />\r\n                                                <span class=\"text-danger\">{this.state.Errors[\"Model\"]}</span>\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"control-label\">Truck Type</label>\r\n                                                <span class=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Type\" class=\"form-control\" autocomplete=\"off\"\r\n                                                    value={this.state.Type} onChange={this.onChange} />\r\n                                                <span class=\"text-danger\">{this.state.Errors[\"Type\"]}</span>\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"control-label\">Maximum Weight (GVW)</label>\r\n                                                <span class=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"MaximumWeight\" class=\"form-control\" autocomplete=\"off\"\r\n                                                    value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                                <span class=\"text-danger\">{this.state.Errors[\"MaximumWeight\"]}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"modal-footer\">\r\n                                    <button class=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnAddTruckDialogRemove}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Add\" class=\"btn btn-primary\"  disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                {this.state.MessageBox}\r\n            </div>             \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddTruck;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport AddTruck from \"./AddTruck\";\r\n\r\nclass NoTruck extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddTruck: null,\r\n        };\r\n\r\n        this.onAddTruckDialogCreate = this.onAddTruckDialogCreate.bind(this);\r\n        this.onAddTruckDialogRemove = this.onAddTruckDialogRemove.bind(this);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const driver = jwt_decode(localStorage.userToken);\r\n\r\n        if (driver.Truck) {\r\n            this.props.OnTruckUpdated();\r\n        }\r\n    }\r\n\r\n    onAddTruckDialogRemove = () => {\r\n        this.setState({\r\n            AddTruck: null,\r\n        });        \r\n    }\r\n\r\n    onAddTruckDialogCreate = () => {\r\n        this.setState({\r\n            AddTruck: (<AddTruck Show={true} OnAddTruckDialogRemove={this.onAddTruckDialogRemove} />),\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\" alt=\"add_truck.png\" src=\"./images/add_truck.png\"\r\n                                    data-source-index=\"2\" />\r\n                            </div>\r\n                            <div class=\"col-md-12 col-md-pull-12\">\r\n                                <div class=\"type-h3\">Truck Management</div>\r\n                                <div class=\"type-sh3\">You have not added any truck yet.</div>\r\n                                <p>Adding your truck will let the Traders or Brokers see details about your truck. Valid and complete details of your truck make more chances for you to receive job requests.</p>\r\n                                <div class=\"btn-group\">\r\n                                    <button type=\"button\" class=\"btn btn-primary btn-lg\" data-toggle=\"modal\" data-target=\"#add-truck-dialog\"\r\n                                        onMouseDown={this.onAddTruckDialogCreate}>Add Now</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.AddTruck}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default NoTruck;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport Truck from \"./Truck\";\r\nimport NoTruck from \"./NoTruck\";\r\n\r\nclass Trucks extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Truck: <NoTruck OnTruckUpdated={this.onTruckUpdated} />\r\n        };\r\n\r\n        this.onTruckUpdated = this.onTruckUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.userToken) {\r\n            const driver = jwt_decode(localStorage.userToken);\r\n\r\n            if (driver.Truck) {\r\n                this.setState({\r\n                    Truck: <Truck OnTruckUpdated={this.onTruckUpdated} />\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    onTruckUpdated = () => {\r\n        const driver = jwt_decode(localStorage.userToken);\r\n\r\n        if (driver.Truck) {\r\n            this.setState({\r\n                Truck: null\r\n            });\r\n            this.setState({\r\n                Truck: <Truck OnTruckUpdated={this.onTruckUpdated} />\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                Truck: null\r\n            });\r\n            this.setState({\r\n                Truck: <NoTruck OnTruckUpdated={this.onTruckUpdated} />\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.Truck}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Trucks;","import React, { Component } from \"react\";\r\n\r\nclass Permits extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"jumbotron\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"tools.png\" src=\"./images/tools.png\" style={{ borderRadius: \"50%\" }} data-source-index=\"1\" />\r\n                            </div>\r\n                            <div class=\"col-md-12 col-md-pull-12\">\r\n                                <div class=\"type-h3\" style={{ color: \"#008575\", }}>\r\n                                    Permits\r\n                    </div>\r\n                                <div class=\"type-sh3\" style={{ color: \"#949496\", }}>\r\n                                    Under-Construction\r\n                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Permits;","import React, { Component } from \"react\";\r\n\r\nclass FinancialAffairs extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"jumbotron\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"tools.png\" src=\"./images/tools.png\" style={{ borderRadius: \"50%\" }} data-source-index=\"1\" />\r\n                            </div>\r\n                            <div class=\"col-md-12 col-md-pull-12\">\r\n                                <div class=\"type-h3\" style={{ color: \"#008575\", }}>\r\n                                    Financial Affairs\r\n                    </div>\r\n                                <div class=\"type-sh3\" style={{ color: \"#949496\", }}>\r\n                                    Under-Construction\r\n                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default FinancialAffairs;","import React, { Component } from \"react\";\r\n\r\nclass Jobs extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"jumbotron\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"tools.png\" src=\"./images/tools.png\" style={{ borderRadius: \"50%\" }} data-source-index=\"1\" />\r\n                            </div>\r\n                            <div class=\"col-md-12 col-md-pull-12\">\r\n                                <div class=\"type-h3\" style={{ color: \"#008575\", }}>\r\n                                    Jobs\r\n                    </div>\r\n                                <div class=\"type-sh3\" style={{ color: \"#949496\", }}>\r\n                                    Under-Construction\r\n                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Jobs;","import React, { Component } from \"react\";\r\n\r\nclass Payments extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"jumbotron\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"tools.png\" src=\"./images/tools.png\" style={{ borderRadius: \"50%\" }} data-source-index=\"1\" />\r\n                            </div>\r\n                            <div class=\"col-md-12 col-md-pull-12\">\r\n                                <div class=\"type-h3\" style={{ color: \"#008575\", }}>\r\n                                    Payments\r\n                    </div>\r\n                                <div class=\"type-sh3\" style={{ color: \"#949496\", }}>\r\n                                    Under-Construction\r\n                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Payments;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport jsonWebToken from \"jsonwebtoken\";\r\nimport { generalSettings } from \"../../DriverFunctions\";\r\nimport MessageBox from \"../../../../controls/MessageBox\";\r\n\r\nclass GeneralSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\",\r\n\r\n            ValidFirstName: true,\r\n            ValidLastName: true,\r\n            ValidPhoneNumber: true,\r\n\r\n            ValidForm: true,\r\n            SettingsSaved: false,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                PhoneNumber: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.userToken) {\r\n            const decoded = jwt_decode(localStorage.userToken);\r\n\r\n            this.setState({\r\n                FirstName: decoded.FirstName,\r\n                LastName: decoded.LastName,\r\n                DateOfBirth: decoded.DateOfBirth,\r\n                Gender: decoded.Gender,\r\n                Address: decoded.Address,\r\n                PhoneNumber: decoded.PhoneNumber,\r\n                Nationality: decoded.Nationality,\r\n\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                Address: \"\",\r\n                PhoneNumber: \"\",\r\n                Gender: \"\",\r\n                Nationality: \"\",\r\n                DateOfBirth: \"\",\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFirstName = this.state.ValidFirstName;\r\n        let ValidLastName = this.state.ValidLastName;\r\n        let ValidPhoneNumber = this.state.ValidPhoneNumber;\r\n\r\n        switch (field) {\r\n            case \"FirstName\":\r\n                ValidFirstName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.FirstName = ValidFirstName ? \"\" : \"First name is invalid.\";\r\n                break;\r\n            case \"LastName\":\r\n                ValidLastName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.LastName = ValidLastName ? \"\" : \"Last name is invalid.\";\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = value.match(/^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/);\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFirstName: ValidFirstName,\r\n            ValidLastName: ValidLastName,\r\n            ValidPhoneNumber: ValidPhoneNumber,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidFirstName &&\r\n                    this.state.ValidLastName &&\r\n                    this.state.ValidPhoneNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const updatedDriver = {\r\n            DriverID: jwt_decode(localStorage.userToken).DriverID,\r\n            FirstName: this.state.FirstName,\r\n            LastName: this.state.LastName,\r\n            Address: this.state.Address,\r\n            PhoneNumber: this.state.PhoneNumber,\r\n            Gender: this.state.Gender,\r\n            Nationality: this.state.Nationality,\r\n            DateOfBirth: this.state.DateOfBirth,\r\n        }\r\n\r\n        generalSettings(updatedDriver)\r\n            .then(res => {\r\n                let decodedToken = jwt_decode(localStorage.userToken);\r\n\r\n                decodedToken[\"FirstName\"] = this.state.FirstName;\r\n                decodedToken[\"LastName\"] = this.state.LastName;\r\n                decodedToken[\"Address\"] = this.state.Address;\r\n                decodedToken[\"PhoneNumber\"] = this.state.PhoneNumber;\r\n                decodedToken[\"Gender\"] = this.state.Gender;\r\n                decodedToken[\"Nationality\"] = this.state.Nationality;\r\n                decodedToken[\"DateOfBirth\"] = this.state.DateOfBirth;\r\n\r\n                let token = jsonWebToken.sign(decodedToken, \"mysecret\");\r\n                localStorage.setItem(\"userToken\", token);\r\n\r\n                this.setState({\r\n                    SettingsSaved: true,\r\n                });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const messageBox = (<MessageBox Message=\"Settings saved successfully.\" Show={true} />);\r\n\r\n        return (\r\n            <div>\r\n                <div class=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>General Settings</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div class=\"entity-list entity-list-expandable\">\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fa fa-signature\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"FirstName\" autoComplete=\"off\"\r\n                                        value={this.state.FirstName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">First Name</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"FirstName\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fa fa-signature\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"LastName\" autoComplete=\"off\"\r\n                                        value={this.state.LastName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Last Name</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"LastName\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fa fa-birthday-cake\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"date\" class=\"form-control\" name=\"DateOfBirth\" autocomplete=\"off\"\r\n                                        value={this.state.DateOfBirth} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Date of Birth</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class={this.state.Gender === \"Male\" ? \"fa fa-male\" : \"fa fa-female\"}></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"dropdown\" style={{ width: \"193px\", maxWidth: \"296px\", }}>\r\n                                    <button id=\"example-dropdown\" class=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                        aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                        <span>{this.state.Gender}</span>\r\n                                        <span class=\"caret\"></span>\r\n                                    </button>\r\n                                    <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                        <li><a onClick={e => { this.state.Gender = \"Male\" }} onChange={this.onChange}>Male</a></li>\r\n                                        <li><a onClick={e => { this.state.Gender = \"Female\" }} onChange={this.onChange}>Female</a></li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Gender</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fa fa-flag\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"Nationality\" autocomplete=\"off\"\r\n                                        value={this.state.Nationality} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Nationality</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fa fa-phone\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autocomplete=\"off\"\r\n                                        placeholder=\"+XXXXXXXXXXXX\" value={this.state.PhoneNumber} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Phone Number</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"PhoneNumber\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fa fa-location-arrow\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"Address\" autocomplete=\"off\"\r\n                                        value={this.state.Address} onChange={this.onChange} style={{ width: \"393px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Address</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item active\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fa fa-save\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Save Changes?</div>\r\n                                <div class=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div class=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n\r\n                {this.state.SettingsSaved && messageBox}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default GeneralSettings;","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { usernameAndEmailSettings } from \"../../DriverFunctions\";\r\nimport MessageBox from \"../../../../controls/MessageBox\";\r\nimport jsonWebToken from \"jsonwebtoken\";\r\n\r\nclass CodeConfirmation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Show: this.props.Show,\r\n            Code: this.props.Code,\r\n            ConfirmCode: \"\",\r\n            Username: this.props.Username,\r\n            Email: this.props.Email,\r\n\r\n            ValidConfirmCode: false,\r\n            ValidForm: false,\r\n\r\n            MessageBox: \"\",\r\n\r\n            Errors: {\r\n                ConfirmCode: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(value) });\r\n    }\r\n\r\n    validateField(value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidConfirmCode = this.state.ValidConfirmCode;\r\n\r\n        ValidConfirmCode = value === this.state.Code;\r\n        Errors.ConfirmCode = ValidConfirmCode ? \"\" : \"Invalid code.\";\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidConfirmCode: ValidConfirmCode,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidConfirmCode\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async e => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.Show) {\r\n            const updatedDriver = {\r\n                DriverID: jwt_decode(localStorage.userToken).DriverID,\r\n                Username: this.state.Username,\r\n                Email: this.state.Email,\r\n            };\r\n\r\n            usernameAndEmailSettings(updatedDriver)\r\n                .then(res => {\r\n                    if (res === \"Driver is updated.\") {\r\n                        let decodedToken = jwt_decode(localStorage.userToken);\r\n\r\n                        decodedToken[\"Username\"] = this.state.Username;\r\n                        decodedToken[\"Email\"] = this.state.Email;\r\n\r\n                        let token = jsonWebToken.sign(decodedToken, \"mysecret\");\r\n                        localStorage.setItem(\"userToken\", token);\r\n\r\n                        this.setState({\r\n                            MessageBox: (<MessageBox Message=\"Settings saved successfully.\" Show={true} />),\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            MessageBox: (<MessageBox Message=\"Settings could not be saved. Please try later.\" Show={true} />),\r\n                        });\r\n                    }\r\n\r\n                    this.setState({\r\n                        Show: false,\r\n                    });\r\n                });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"modal in\" style={this.state.Show ? { display: \"block\", paddingRight: \"17px\", } : { display: \"none\", paddingRight: \"17px\", }}>\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content animated fadeIn\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div>\r\n                                    <img src=\"./images/passcode.png\" height=\"60\" />\r\n                                    <div class=\"type-h3\">Email Confirmation</div>\r\n                                    <div class=\"type-sh3\">We delivered a confirmation code to your email.</div>\r\n                                    <br />\r\n                                    <div asp-validation-summary=\"ModelOnly\" class=\"text-danger\"></div>\r\n                                    <div class=\"form-group\">\r\n                                        <label class=\"control-label\">Confirmation Code</label>\r\n                                        <input type=\"text\" name=\"ConfirmCode\" class=\"form-control\" autocomplete=\"off\"\r\n                                            value={this.state.ConfirmCode} onChange={this.onChange} />\r\n                                        <span class=\"text-danger\">{this.state.Errors[\"ConfirmCode\"]}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"modal-footer\">\r\n                                    <button class=\"btn btn-default\" onClick={e => { this.setState({ Show: false, }) }}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Confirm\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {this.state.MessageBox}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default CodeConfirmation;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport CodeConfirmation from \"./CodeConfirmation\";\r\nimport { usernameAndEmailSettings } from \"../../DriverFunctions\";\r\nimport MessageBox from \"../../../../controls/MessageBox\";\r\nimport jsonWebToken from \"jsonwebtoken\";\r\n\r\nclass UsernameAndEmailSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            NewUsername: \"\",\r\n\r\n            Email: \"\",\r\n            NewEmail: \"\",\r\n\r\n            Code: \"\",\r\n\r\n            ValidNewUsername: true,\r\n            ValidNewEmail: true,\r\n\r\n            ValidForm: true,\r\n            MessageBox: \"\",\r\n\r\n            Errors: {\r\n                NewUsername: \"\",\r\n                NewEmail: \"\",\r\n            },\r\n\r\n            CodeConfirmation: \"\",\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.userToken) {\r\n            const decoded = jwt_decode(localStorage.userToken);\r\n\r\n            this.setState({\r\n                Username: decoded.Username,\r\n                NewUsername: decoded.Username,\r\n                Email: decoded.Email,\r\n                NewEmail: decoded.Email,\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                Username: \"\",\r\n                NewUsername: \"\",\r\n                Email: \"\",\r\n                NewEmail: \"\",\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    async validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewUsername = this.state.ValidNewUsername;\r\n        let ValidNewEmail = this.state.ValidNewEmail;\r\n        \r\n        switch (field) {\r\n            case \"NewUsername\":\r\n                if (value === \"\") {\r\n                    ValidNewUsername = false;\r\n                    Errors.NewUsername = \"Username is required.\";\r\n                    break;\r\n                }\r\n\r\n                if (!value.match(/^[a-z0-9]+$/i)) {\r\n                    ValidNewUsername = false;\r\n                    Errors.NewUsername = \"Username is invalid.\";\r\n                    break;\r\n                }\r\n\r\n                if (value === this.state.Username) {\r\n                    ValidNewUsername = true;\r\n                    Errors.NewUsername = \"\";\r\n                    break;\r\n                }\r\n\r\n                await axios.post(\"https://naqelserver.azurewebsites.net/users/validateUsername\", {\r\n                    Username: value,\r\n                })\r\n                    .then(res => {\r\n                        if (res.data === \"Username is available.\") {\r\n                            ValidNewUsername = true;\r\n                            Errors.NewUsername = \"\";\r\n                        }\r\n                        else {\r\n                            ValidNewUsername = false;\r\n                            Errors.NewUsername = res.data;\r\n                        }\r\n                    });\r\n                break;\r\n            case \"NewEmail\":\r\n                if (value === \"\") {\r\n                    ValidNewEmail = false;\r\n                    Errors.NewEmail = \"Email is required.\";\r\n                    break;\r\n                }\r\n\r\n                if (!value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\r\n                    ValidNewEmail = false;\r\n                    Errors.NewEmail = \"Email is invalid.\";\r\n                    break;\r\n                }\r\n\r\n                if (value === this.state.Email) {\r\n                    ValidNewEmail = true;\r\n                    Errors.NewEmail = \"\";\r\n                    break;\r\n                }\r\n\r\n                await axios.post(\"https://naqelserver.azurewebsites.net/users/validateEmail\", {\r\n                    Email: value,\r\n                })\r\n                    .then(res => {\r\n                        if (res.data === \"Email is already taken.\") {\r\n                            ValidNewEmail = false;\r\n                            Errors.NewEmail = res.data;\r\n                        }\r\n                        else {\r\n                            ValidNewEmail = true;\r\n                            Errors.NewEmail = \"\";\r\n                        }\r\n                    });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewUsername: ValidNewUsername,\r\n            ValidNewEmail: ValidNewEmail,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidNewUsername &&\r\n                    this.state.ValidNewEmail\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async e => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.NewUsername === this.state.Username &&\r\n            this.state.NewEmail === this.state.Email) {\r\n            return;\r\n        }\r\n\r\n\r\n        if (this.state.NewEmail === this.state.Email) {\r\n            const updatedDriver = {\r\n                DriverID: jwt_decode(localStorage.userToken).DriverID,\r\n                Username: this.state.NewUsername,\r\n                Email: this.state.NewEmail,\r\n            };\r\n\r\n            usernameAndEmailSettings(updatedDriver)\r\n                .then(res => {\r\n                    if (res === \"Driver is updated.\") {\r\n                        let decodedToken = jwt_decode(localStorage.userToken);\r\n\r\n                        decodedToken[\"Username\"] = this.state.NewUsername;\r\n                        decodedToken[\"Email\"] = this.state.NewEmail;\r\n\r\n                        let token = jsonWebToken.sign(decodedToken, \"mysecret\");\r\n                        localStorage.setItem(\"userToken\", token);\r\n\r\n                        this.setState({\r\n                            MessageBox: (<MessageBox Message=\"Username is updated successfully.\" Show={true} />),\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            MessageBox: (<MessageBox Message=\"Settings could not be saved. Please try later.\" Show={true} />),\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n        else {\r\n            await axios.post(\"users/sendCode\", {\r\n                Email: this.state.NewEmail,\r\n            })\r\n                .then(res => {\r\n                    if (res) {\r\n                        this.setState({\r\n                            CodeConfirmation: (<CodeConfirmation Code={res.data} Show={true}\r\n                                Username={this.state.NewUsername} Email={this.state.NewEmail} />),\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Username and Emails</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div class=\"entity-list entity-list-expandable\">\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fa fa-at\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" name=\"NewUsername\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.NewUsername} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Username</div>\r\n                                <div class=\"content-text-secondary text-danger\">{this.state.Errors[\"NewUsername\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fa fa-envelope\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"email\" name=\"NewEmail\" class=\"form-control\" placeholder=\"someone@example.com\" autocomplete=\"off\"\r\n                                        value={this.state.NewEmail} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Email</div>\r\n                                <div class=\"content-text-secondary text-danger\">{this.state.Errors[\"NewEmail\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item active\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fa fa-save\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Save Changes?</div>\r\n                                <div class=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div class=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n\r\n                {this.state.CodeConfirmation}\r\n                {this.state.MessageBox}\r\n            </div> \r\n        );\r\n    }\r\n};\r\n\r\nexport default UsernameAndEmailSettings;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport jsonWebToken from \"jsonwebtoken\";\r\nimport { passwordSettings } from \"../../DriverFunctions\";\r\nimport MessageBox from \"../../../../controls/MessageBox\";\r\n\r\nclass PasswordSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Password: \"\",\r\n            CurrentPassword: \"\",\r\n            NewPassword: \"\",\r\n            ConfirmPassword: \"\",\r\n\r\n            ValidCurrentPassword: false,\r\n            ValidNewPassword: false,\r\n            ValidConfirmPassword: false,\r\n\r\n            ValidForm: true,\r\n            MessageBox: \"\",\r\n\r\n            Errors: {\r\n                CurrentPassword: \"\",\r\n                NewPassword: \"\",\r\n                ConfirmPassword: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.userToken) {\r\n            const decoded = jwt_decode(localStorage.userToken);\r\n\r\n            this.setState({\r\n                Password: decoded.Password,\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    async validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCurrentPassword = this.state.ValidCurrentPassword;\r\n        let ValidNewPassword = this.state.ValidNewPassword;\r\n        let ValidConfirmPassword = this.state.ValidConfirmPassword;\r\n\r\n        switch (field) {\r\n            case \"CurrentPassword\":\r\n                await axios.post(\"https://naqelserver.azurewebsites.net/users/validatePassword\", {\r\n                    DriverID: jwt_decode(localStorage.userToken).DriverID,\r\n                    Password: value,\r\n                })\r\n                    .then(res => {\r\n                        if (res.data === \"Valid password.\") {\r\n                            ValidCurrentPassword = true;\r\n                        }\r\n                        else {\r\n                            ValidCurrentPassword = false;\r\n                        }\r\n                    });\r\n\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is invalid.\";\r\n                break;\r\n            case \"NewPassword\":\r\n                ValidNewPassword = value.length >= 6;\r\n                Errors.NewPassword = ValidNewPassword ? \"\" : \"Password is too short.\";\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                ValidConfirmPassword = value === this.state.NewPassword;\r\n                Errors.ConfirmPassword = ValidConfirmPassword ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCurrentPassword: ValidCurrentPassword,\r\n            ValidNewPassword: ValidNewPassword,\r\n            ValidConfirmPassword: ValidConfirmPassword,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidCurrentPassword &&\r\n                        this.state.ValidNewPassword &&\r\n                        this.state.ValidConfirmPassword\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async e => {\r\n        e.preventDefault();\r\n\r\n        const updatedDriver = {\r\n            DriverID: jwt_decode(localStorage.userToken).DriverID,\r\n            Password: this.state.NewPassword,\r\n        }\r\n\r\n        await passwordSettings(updatedDriver)\r\n            .then(res => {\r\n                if (res === \"Driver is updated.\") {\r\n                    let decodedToken = jwt_decode(localStorage.userToken);\r\n                    decodedToken[\"Password\"] = this.state.Password;\r\n                    let token = jsonWebToken.sign(decodedToken, \"mysecret\");\r\n                    localStorage.setItem(\"userToken\", token);\r\n\r\n                    this.setState({\r\n                        MessageBox: (<MessageBox Message=\"Settings saved successfully.\" Show={true} />),\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\" }}>Change Password</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div class=\"entity-list entity-list-expandable\">\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fa fa-key\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"password\" name=\"CurrentPassword\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.CurrentPassword} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Current Password</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"CurrentPassword\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fa fa-key\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"password\" name=\"NewPassword\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.NewPassword} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">New Password</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"NewPassword\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fa fa-key\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"password\" name=\"ConfirmPassword\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.ConfirmPassword} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Confirm Password</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"ConfirmPassword\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item active\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fa fa-save\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Save Changes?</div>\r\n                                <div class=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div class=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n\r\n                {this.state.MessageBox}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default PasswordSettings;","import React, { Component } from \"react\";\r\nimport GeneralSettings from \"./GeneralSettings\";\r\nimport UsernameAndEmailSettings from \"./UsernameAndEmailSettings\";\r\nimport PasswordSettings from \"./PasswordSettings\";\r\n\r\nclass Settings extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <GeneralSettings />\r\n                <UsernameAndEmailSettings />\r\n                <PasswordSettings />\r\n            </div> \r\n        );\r\n    }\r\n};\r\n\r\nexport default Settings;","import React, { Component } from \"react\";\r\nimport { TabMenu } from \"../../../styles/TabStyles\";\r\n\r\nimport Profile from \"./profile/Profile\";\r\nimport Trucks from \"./trucks/Trucks\";\r\nimport Permits from \"./permits/Permits\";\r\nimport FinancialAffairs from \"./financial_affairs/FinancialAffairs\";\r\nimport Jobs from \"./jobs/Jobs\";\r\nimport Payments from \"./payments/Payments\";\r\nimport Settings from \"./settings/Settings\";\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        if (!localStorage.userToken) {\r\n            this.props.history.push(`/login`);\r\n            return <a />\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <ul class=\"nav nav-tabs theme-alt\" role=\"tablist\" style={TabMenu}>\r\n                        <li role=\"presentation\" class=\"active\"><a href=\"#profile\" aria-controls=\"prfile\" role=\"tab\" data-toggle=\"tab\">Profile</a></li>\r\n                        <li role=\"presentation\"><a href=\"#trucks\" aria-controls=\"trucks\" role=\"tab\" data-toggle=\"tab\">Trucks</a></li>\r\n                        <li role=\"presentation\"><a href=\"#permits\" aria-controls=\"permits\" role=\"tab\" data-toggle=\"tab\">Permits</a></li>\r\n                        <li role=\"presentation\"><a href=\"#financialAffairs\" aria-controls=\"financialAffairs\" role=\"tab\" data-toggle=\"tab\">Financial Affairs</a></li>\r\n                        <li role=\"presentation\"><a href=\"#jobs\" aria-controls=\"jobs\" role=\"tab\" data-toggle=\"tab\">Jobs</a></li>\r\n                        <li role=\"presentation\"><a href=\"#payments\" aria-controls=\"payments\" role=\"tab\" data-toggle=\"tab\">Payments</a></li>\r\n                        <li role=\"presentation\"><a href=\"#settings\" aria-controls=\"settings\" role=\"tab\" data-toggle=\"tab\">Settings</a></li>\r\n                    </ul>\r\n\r\n                    <div class=\"tab-content\">\r\n                        <div role=\"tabpanel\" class=\"tab-pane active\" id=\"profile\">\r\n                            <Profile />\r\n                        </div>\r\n                        <div role=\"tabpanel\" class=\"tab-pane\" id=\"trucks\">\r\n                            <Trucks />\r\n                        </div>\r\n                        <div role=\"tabpanel\" class=\"tab-pane\" id=\"permits\">\r\n                            <Permits />\r\n                        </div>\r\n                        <div role=\"tabpanel\" class=\"tab-pane\" id=\"financialAffairs\">\r\n                            <FinancialAffairs />\r\n                        </div>\r\n                        <div role=\"tabpanel\" class=\"tab-pane\" id=\"jobs\">\r\n                            <Jobs />\r\n                        </div>\r\n                        <div role=\"tabpanel\" class=\"tab-pane\" id=\"payments\">\r\n                            <Payments />\r\n                        </div>\r\n                        <div role=\"tabpanel\" class=\"tab-pane\" id=\"settings\">\r\n                            <Settings />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport { uploadTraderBrokerProfilePhoto } from \"../../TraderFunctions\";\r\nimport Strings from \"../../../../res/strings\";\r\n\r\nclass TraderBrokerProfilePhoto extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Image: null,\r\n            ImageURL: \"./images/defaultProfilePhoto.png\",\r\n            TraderID: null,\r\n            ImageCategory: \"ProfilePicture\",\r\n            UploadProgress: null,\r\n        };\r\n        this.onImageUpload = this.onImageUpload.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const decoded = jwt_decode(localStorage.userToken);\r\n\r\n        this.setState({\r\n            ImageURL: decoded.ProfilePhotoURL,\r\n        });\r\n\r\n        this.setState({\r\n            TraderID: decoded.TraderID,\r\n        });\r\n    }\r\n\r\n    onImageUpload = event => {\r\n        this.state.Image = event.target.files[0];\r\n        console.log(this.state.Image);\r\n        const formData = new FormData();\r\n\r\n        try {\r\n            formData.append(\"TraderID\", this.state.TraderID);\r\n            formData.append(\"ImageCategory\", this.state.ImageCategory);\r\n            formData.append(\"Image\", this.state.Image, this.state.Image.name);\r\n        }\r\n        catch (exception) {\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        axios.post(Strings.IMAGE_UPLOADER, formData, {\r\n            onUploadProgress: event => {\r\n                this.setState({\r\n                    UploadProgress: (\r\n                        <div class=\"progress-bar\">\r\n                            <div class=\"progress-circle\"></div>\r\n                            <div class=\"progress-circle\"></div>\r\n                            <div class=\"progress-circle\"></div>\r\n                            <div class=\"progress-circle\"></div>\r\n                            <div class=\"progress-circle\"></div>\r\n                        </div>\r\n                    ),\r\n                });\r\n            }\r\n        })\r\n            .then(async response => {\r\n                response = response.data;\r\n                console.log(response);\r\n\r\n                if (response.message === \"Image uploaded successfully.\") {\r\n                    const traderProfilePhoto = {\r\n                        TraderID: this.state.TraderID,\r\n                        URL: response.imageUrl,\r\n                        FileName: response.filename\r\n                    }\r\n\r\n                    await uploadTraderBrokerProfilePhoto(traderProfilePhoto)\r\n                        .then(res => {\r\n                            if (res === \"Trader/broker profile photo is updated.\" ||\r\n                                res === \"Trader/broker profile photo is added.\") {\r\n                                this.setState({\r\n                                    ImageURL: response.imageUrl,\r\n                                    UploadProgress: null,\r\n                                });\r\n                            }\r\n                        });\r\n                }\r\n            })\r\n            .catch(() => {\r\n                this.props.OnImageUploaded(\"Invalid Image.\");\r\n                this.setState({\r\n                    ImageURL: \"./images/defaultProfilePhoto.png\",\r\n                    UploadProgress: null,\r\n                });\r\n            });\r\n    }\r\n\r\n    onSubmit = async e => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"file\" onChange={this.onImageUpload} style={{ display: \"none\", }} ref={fileInput => this.fileInput = fileInput} />\r\n                <figure class=\"media\">\r\n                    <div class=\"media-img media-img-has-play ratio-movie\" style={{\r\n                        width: \"200px\",\r\n                        height: \"200px\",\r\n                        border: \"0px\",\r\n                        padding: \"0px\",\r\n                        border: \"5px solid #3A3A3C\"\r\n                    }}>\r\n                        <a href=\"#\" onClick={() => this.fileInput.click()}>\r\n                            <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                src={this.state.ImageURL} alt=\"ProfilePhoto.png\" />\r\n                            <i class=\"glyph glyph-edit\"></i>\r\n                        </a>\r\n                    </div>\r\n                </figure>\r\n                {this.state.UploadProgress}\r\n            </div>\r\n\r\n        );\r\n    }\r\n};\r\n\r\nexport default TraderBrokerProfilePhoto;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport ProfilePhoto from \"./TraderBrokerProfilePhoto\";\r\nimport WarningAlert from \"../../../../controls/WarningAlert\";\r\n\r\n\r\nclass TraderBrokerProfile extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            Username: \"\",\r\n            Password: \"\",\r\n            Email: \"\",\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\",\r\n            WarningAlert: null,\r\n            Errors: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.userToken) {\r\n            const decoded = jwt_decode(localStorage.userToken);\r\n\r\n            this.setState({\r\n                Username: decoded.UserName,\r\n                Password: decoded.Password,\r\n                Email: decoded.EmailAdrs,\r\n                FirstName: decoded.FName,\r\n                LastName: decoded.LName,\r\n                DateOfBirth: decoded.BirthDate,\r\n                Gender: decoded.Gender,\r\n                Address: decoded.Address,\r\n                PhoneNumber: decoded.MobileNum,\r\n                Nationality: decoded.Nationality,\r\n\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                Username: \"\",\r\n                Password: \"\",\r\n                Email: \"\",\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                Address: \"\",\r\n                PhoneNumber: \"\",\r\n                Gender: \"\",\r\n                Nationality: \"\",\r\n                DateOfBirth: \"\",\r\n            });\r\n        }\r\n    }\r\n\r\n    onImageUploaded = message => {\r\n        if (message) {\r\n            this.setState({\r\n                WarningAlert: (<WarningAlert Message={message} OnClose={this.onImageUploaded} />)\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                WarningAlert: null\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.WarningAlert}\r\n                <div class=\"jumbotron theme-default\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <ProfilePhoto OnImageUploaded={this.onImageUploaded} />\r\n                            </div>\r\n                            <div class=\"col-md-18\">\r\n                                <div class=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                    {this.state.FirstName + \" \" + this.state.LastName}\r\n                                </div>\r\n                                <div class=\"type-sh3\">\r\n                                    <span class=\"fa fa-car\"></span>   Trader\r\n                                    </div>\r\n                                <div>\r\n                                    <ol class=\"list-items theme-alt\">\r\n                                        <li class=\"list-items-row\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-md-2\">\r\n                                                    <strong><span class=\"fa fa-id-card\" style={{ color: \"#008575\" }}></span></strong>\r\n                                                </div>\r\n                                                <div class=\"col-md-6\">\r\n                                                    <a style={{ textDecoration: \"none\", }}>Username:</a>\r\n                                                </div>\r\n                                                <div class=\"col-md-6\">\r\n                                                    {this.state.Username}\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li class=\"list-items-row\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-md-2\">\r\n                                                    <strong><span class=\"fa fa-envelope\" style={{ color: \"#008575\", }}></span></strong>\r\n                                                </div>\r\n                                                <div class=\"col-md-6\">\r\n                                                    <a style={{ textDecoration: \"none\", }}>Email:</a>\r\n                                                </div>\r\n                                                <div class=\"col-md-6\">\r\n                                                    {this.state.Email}\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li class=\"list-items-row\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-md-2\">\r\n                                                    <strong><span class=\"fa fa-phone\" style={{ color: \"#008575\" }}></span></strong>\r\n                                                </div>\r\n                                                <div class=\"col-md-6\">\r\n                                                    <a style={{ textDecoration: \"none\", }}>Phone Number:</a>\r\n                                                </div>\r\n                                                <div class=\"col-md-6\">\r\n                                                    {this.state.PhoneNumber}\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ol>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"btn-group\">\r\n                              \r\n                         \r\n                                <button class=\"btn btn-primary\" href=\"#\">Identity Card</button>\r\n                                <button class=\"btn btn-primary\" href=\"#\">CR Certificate</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"jumbotron theme-dark\" style={{ backgroundColor: \"#161616\", }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col\">\r\n                                <div class=\"type-h3\" style={{ paddingTop: \"10px\", }}>\r\n                                    Details\r\n                                    </div>\r\n                                <ol class=\"list-items theme-alt\">\r\n                                    <li class=\"list-items-row\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-2\">\r\n                                                <strong><span class=\"fa fa-id-card\" style={{ color: \"#008575\" }}></span></strong>\r\n                                            </div>\r\n                                            <div class=\"col-md-4\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Username:</a>\r\n                                            </div>\r\n                                            <div class=\"col-md-4\">\r\n                                                {this.state.Username}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li class=\"list-items-row\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-2\">\r\n                                                <strong><span class=\"fa fa-envelope\" style={{ color: \"#008575\", }}></span></strong>\r\n                                            </div>\r\n                                            <div class=\"col-md-4\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Email:</a>\r\n                                            </div>\r\n                                            <div class=\"col-md-4\">\r\n                                                {this.state.Email}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li class=\"list-items-row\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-2\">\r\n                                                <strong><span class=\"fa fa-birthday-cake\" style={{ color: \"#008575\", }}></span></strong>\r\n                                            </div>\r\n                                            <div class=\"col-md-4\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Date of Birth:</a>\r\n                                            </div>\r\n                                            <div class=\"col-md-4\">\r\n                                                {this.state.DateOfBirth}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li class=\"list-items-row\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-2\">\r\n                                                {this.state.Gender === \"Male\" &&\r\n                                                    <strong><span class=\"fa fa-male\" style={{ color: \"#008575\", }}></span></strong>\r\n                                                }\r\n                                                {this.state.Gender === \"Female\" &&\r\n                                                    <strong><span class=\"fa fa-female\" style={{ color: \"#008575\", }}></span></strong>\r\n                                                }\r\n                                            </div>\r\n                                            <div class=\"col-md-4\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Gender:</a>\r\n                                            </div>\r\n                                            <div class=\"col-md-4\">\r\n                                                {this.state.Gender}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li class=\"list-items-row\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-2\">\r\n                                                <strong><span class=\"fa fa-flag\" style={{ color: \"#008575\" }}></span></strong>\r\n                                            </div>\r\n                                            <div class=\"col-md-4\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Nationality:</a>\r\n                                            </div>\r\n                                            <div class=\"col-md-4\">\r\n                                                {this.state.Nationality}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li class=\"list-items-row\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-2\">\r\n                                                <strong><span class=\"fa fa-phone\" style={{ color: \"#008575\" }}></span></strong>\r\n                                            </div>\r\n                                            <div class=\"col-md-4\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Phone Number:</a>\r\n                                            </div>\r\n                                            <div class=\"col-md-4\">\r\n                                                {this.state.PhoneNumber}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li class=\"list-items-row\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-2\">\r\n                                                <strong><span class=\"fa fa-map-marker\" style={{ color: \"#008575\" }}></span></strong>\r\n                                            </div>\r\n                                            <div class=\"col-md-4\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Address:</a>\r\n                                            </div>\r\n                                            <div class=\"col-md-4\">\r\n                                                {this.state.Address}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default TraderBrokerProfile;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport jsonWebToken from \"jsonwebtoken\";\r\n\r\nimport { generalSettings } from \"../../TraderFunctions\";\r\nimport MessageBox from \"../../../../controls/MessageBox\";\r\n\r\nclass TBGeneralSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\",\r\n\r\n            ValidFirstName: true,\r\n            ValidLastName: true,\r\n            ValidPhoneNumber: true,\r\n\r\n            ValidForm: true,\r\n            SettingsSaved: false,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                PhoneNumber: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.userToken) {\r\n            const decoded = jwt_decode(localStorage.userToken);\r\n\r\n            this.setState({\r\n                FirstName: decoded.FName,\r\n                LastName: decoded.LName,\r\n                DateOfBirth: decoded.BirthDate,\r\n                Gender: decoded.Gender,\r\n                Address: decoded.Address,\r\n                PhoneNumber: decoded.MobileNum,\r\n                Nationality: decoded.Nationality,\r\n\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                Address: \"\",\r\n                PhoneNumber: \"\",\r\n                Gender: \"\",\r\n                Nationality: \"\",\r\n                DateOfBirth: \"\",\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFirstName = this.state.ValidFirstName;\r\n        let ValidLastName = this.state.ValidLastName;\r\n        let ValidPhoneNumber = this.state.ValidPhoneNumber;\r\n\r\n        switch (field) {\r\n            case \"FirstName\":\r\n                ValidFirstName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.FirstName = ValidFirstName ? \"\" : \"First name is invalid.\";\r\n                break;\r\n            case \"LastName\":\r\n                ValidLastName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.LastName = ValidLastName ? \"\" : \"Last name is invalid.\";\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = value.match(/^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/);\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFirstName: ValidFirstName,\r\n            ValidLastName: ValidLastName,\r\n            ValidPhoneNumber: ValidPhoneNumber,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidFirstName &&\r\n                    this.state.ValidLastName &&\r\n                    this.state.ValidPhoneNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const updatedDriver = {\r\n            TraderID: jwt_decode(localStorage.userToken).TraderID,\r\n            FName: this.state.FirstName,\r\n            LName: this.state.LastName,\r\n            Address: this.state.Address,\r\n            MobileNum: this.state.PhoneNumber,\r\n            Gender: this.state.Gender,\r\n            Nationality: this.state.Nationality,\r\n            BirthDate: this.state.DateOfBirth,\r\n        }\r\n\r\n        generalSettings(updatedDriver)\r\n            .then(res => {\r\n                let decodedToken = jwt_decode(localStorage.userToken);\r\n\r\n                decodedToken[\"FName\"] = this.state.FirstName;\r\n                decodedToken[\"LName\"] = this.state.LastName;\r\n                decodedToken[\"Address\"] = this.state.Address;\r\n                decodedToken[\"MobileNum\"] = this.state.PhoneNumber;\r\n                decodedToken[\"Gender\"] = this.state.Gender;\r\n                decodedToken[\"Nationality\"] = this.state.Nationality;\r\n                decodedToken[\"BirthDate\"] = this.state.DateOfBirth;\r\n\r\n                let token = jsonWebToken.sign(decodedToken, \"mysecret\");\r\n                localStorage.setItem(\"userToken\", token);\r\n\r\n                this.setState({\r\n                    SettingsSaved: true,\r\n                });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const messageBox = (<MessageBox Message=\"Settings saved successfully.\" Show={true} />);\r\n\r\n        return (\r\n            <div>\r\n                <div class=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>General Settings</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div class=\"entity-list entity-list-expandable\">\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fa fa-signature\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"FirstName\" autocomplete=\"off\"\r\n                                        value={this.state.FirstName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">First Name</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"FirstName\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fa fa-signature\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"LastName\" autocomplete=\"off\"\r\n                                        value={this.state.LastName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Last Name</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"LastName\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fa fa-birthday-cake\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"date\" class=\"form-control\" name=\"DateOfBirth\" autocomplete=\"off\"\r\n                                        value={this.state.DateOfBirth} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Date of Birth</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class={this.state.Gender === \"Male\" ? \"fa fa-male\" : \"fa fa-female\"}></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"dropdown\" style={{ width: \"193px\", maxWidth: \"296px\", }}>\r\n                                    <button id=\"example-dropdown\" class=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                        aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                        <span>{this.state.Gender}</span>\r\n                                        <span class=\"caret\"></span>\r\n                                    </button>\r\n                                    <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                        <li><Link onClick={e => { this.state.Gender = \"Male\" }} onChange={this.onChange}>Male</Link></li>\r\n                                        <li><Link onClick={e => { this.state.Gender = \"Female\" }} onChange={this.onChange}>Female</Link></li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Gender</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fa fa-flag\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"Nationality\" autocomplete=\"off\"\r\n                                        value={this.state.Nationality} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Nationality</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fa fa-phone\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autocomplete=\"off\"\r\n                                        placeholder=\"+XXXXXXXXXXXX\" value={this.state.PhoneNumber} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Phone Number</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"PhoneNumber\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fa fa-location-arrow\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"Address\" autocomplete=\"off\"\r\n                                        value={this.state.Address} onChange={this.onChange} style={{ width: \"393px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Address</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item active\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fa fa-save\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Save Changes?</div>\r\n                                <div class=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div class=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n\r\n                {this.state.SettingsSaved && messageBox}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default TBGeneralSettings;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport CodeConfirmation from \"./CodeConfirmation\";\r\n\r\n\r\nimport { usernameAndEmailSettings } from \"../../TraderFunctions\";\r\nimport MessageBox from \"../../../../controls/MessageBox\";\r\n\r\nimport jsonWebToken from \"jsonwebtoken\";\r\n\r\nclass TBUsernameAndEmailSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            NewUsername: \"\",\r\n\r\n            Email: \"\",\r\n            NewEmail: \"\",\r\n\r\n            Code: \"\",\r\n\r\n            ValidNewUsername: true,\r\n            ValidNewEmail: true,\r\n\r\n            ValidForm: true,\r\n            MessageBox: \"\",\r\n\r\n            Errors: {\r\n                NewUsername: \"\",\r\n                NewEmail: \"\",\r\n            },\r\n\r\n            CodeConfirmation: \"\",\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.userToken) {\r\n            const decoded = jwt_decode(localStorage.userToken);\r\n\r\n            this.setState({\r\n                Username: decoded.UserName,\r\n                NewUsername: decoded.UserName,\r\n                Email: decoded.EmailAdrs,\r\n                NewEmail: decoded.EmailAdrs,\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                Username: \"\",\r\n                NewUsername: \"\",\r\n                Email: \"\",\r\n                NewEmail: \"\",\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    async validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewUsername = this.state.ValidNewUsername;\r\n        let ValidNewEmail = this.state.ValidNewEmail;\r\n\r\n        switch (field) {\r\n            case \"NewUsername\":\r\n                if (value === \"\") {\r\n                    ValidNewUsername = false;\r\n                    Errors.NewUsername = \"Username is required.\";\r\n                    break;\r\n                }\r\n\r\n                if (!value.match(/^[a-z0-9]+$/i)) {\r\n                    ValidNewUsername = false;\r\n                    Errors.NewUsername = \"Username is invalid.\";\r\n                    break;\r\n                }\r\n\r\n                if (value === this.state.Username) {\r\n                    ValidNewUsername = true;\r\n                    Errors.NewUsername = \"\";\r\n                    break;\r\n                }\r\n\r\n                await axios.post(\"https://naqelserver.azurewebsites.net/users/validateUsername\", {\r\n                    Username: value,\r\n                })\r\n                    .then(res => {\r\n                        if (res.data === \"Username is available.\") {\r\n                            ValidNewUsername = true;\r\n                            Errors.NewUsername = \"\";\r\n                        }\r\n                        else {\r\n                            ValidNewUsername = false;\r\n                            Errors.NewUsername = res.data;\r\n                        }\r\n                    });\r\n                break;\r\n            case \"NewEmail\":\r\n                if (value === \"\") {\r\n                    ValidNewEmail = false;\r\n                    Errors.NewEmail = \"Email is required.\";\r\n                    break;\r\n                }\r\n\r\n                if (!value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\r\n                    ValidNewEmail = false;\r\n                    Errors.NewEmail = \"Email is invalid.\";\r\n                    break;\r\n                }\r\n\r\n                if (value === this.state.Email) {\r\n                    ValidNewEmail = true;\r\n                    Errors.NewEmail = \"\";\r\n                    break;\r\n                }\r\n\r\n                await axios.post(\"https://naqelserver.azurewebsites.net/users/validateEmail\", {\r\n                    Email: value,\r\n                })\r\n                    .then(res => {\r\n                        if (res.data === \"Email is already taken.\") {\r\n                            ValidNewEmail = false;\r\n                            Errors.NewEmail = res.data;\r\n                        }\r\n                        else {\r\n                            ValidNewEmail = true;\r\n                            Errors.NewEmail = \"\";\r\n                        }\r\n                    });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewUsername: ValidNewUsername,\r\n            ValidNewEmail: ValidNewEmail,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidNewUsername &&\r\n                    this.state.ValidNewEmail\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async e => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.NewUsername === this.state.Username &&\r\n            this.state.NewEmail === this.state.Email) {\r\n            return;\r\n        }\r\n\r\n\r\n        if (this.state.NewEmail === this.state.Email) {\r\n            const updatedDriver = {\r\n                TraderID: jwt_decode(localStorage.userToken).TraderID,\r\n                UserName: this.state.NewUsername,\r\n                EmailAdrs: this.state.NewEmail,\r\n            };\r\n\r\n            usernameAndEmailSettings(updatedDriver)\r\n                .then(res => {\r\n                    if (res === \"Trader is updated.\") {\r\n                        let decodedToken = jwt_decode(localStorage.userToken);\r\n\r\n                        decodedToken[\"UserName\"] = this.state.NewUsername;\r\n                        decodedToken[\"EmailAdrs\"] = this.state.NewEmail;\r\n\r\n                        let token = jsonWebToken.sign(decodedToken, \"mysecret\");\r\n                        localStorage.setItem(\"userToken\", token);\r\n\r\n                        this.setState({\r\n                            MessageBox: (<MessageBox Message=\"Username is updated successfully.\" Show={true} />),\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            MessageBox: (<MessageBox Message=\"Settings could not be saved. Please try later.\" Show={true} />),\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n        else {\r\n            await axios.post(\"users/sendCode\", {\r\n                Email: this.state.NewEmail,\r\n            })\r\n                .then(res => {\r\n                    if (res) {\r\n                        this.setState({\r\n                            CodeConfirmation: (<CodeConfirmation Code={res.data} Show={true}\r\n                                Username={this.state.NewUsername} Email={this.state.NewEmail} />),\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Username and Emails</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div class=\"entity-list entity-list-expandable\">\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fa fa-at\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" name=\"NewUsername\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.NewUsername} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Username</div>\r\n                                <div class=\"content-text-secondary text-danger\">{this.state.Errors[\"NewUsername\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fa fa-envelope\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"email\" name=\"NewEmail\" class=\"form-control\" placeholder=\"someone@example.com\" autocomplete=\"off\"\r\n                                        value={this.state.NewEmail} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Email</div>\r\n                                <div class=\"content-text-secondary text-danger\">{this.state.Errors[\"NewEmail\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item active\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fa fa-save\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Save Changes?</div>\r\n                                <div class=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div class=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n\r\n                {this.state.CodeConfirmation}\r\n                {this.state.MessageBox}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default TBUsernameAndEmailSettings;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport jsonWebToken from \"jsonwebtoken\";\r\n\r\nimport { passwordSettings } from \"../../TraderFunctions\";\r\nimport MessageBox from \"../../../../controls/MessageBox\";\r\n\r\nclass TBPasswordSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Password: \"\",\r\n            CurrentPassword: \"\",\r\n            NewPassword: \"\",\r\n            ConfirmPassword: \"\",\r\n\r\n            ValidCurrentPassword: false,\r\n            ValidNewPassword: false,\r\n            ValidConfirmPassword: false,\r\n\r\n            ValidForm: true,\r\n            MessageBox: \"\",\r\n\r\n            Errors: {\r\n                CurrentPassword: \"\",\r\n                NewPassword: \"\",\r\n                ConfirmPassword: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.userToken) {\r\n            const decoded = jwt_decode(localStorage.userToken);\r\n\r\n            this.setState({\r\n                Password: decoded.Password,\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    async validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCurrentPassword = this.state.ValidCurrentPassword;\r\n        let ValidNewPassword = this.state.ValidNewPassword;\r\n        let ValidConfirmPassword = this.state.ValidConfirmPassword;\r\n\r\n        switch (field) {\r\n            case \"CurrentPassword\":\r\n                await axios.post(\"https://naqelserver.azurewebsites.net/users/validatePassword\", {\r\n                    TraderID: jwt_decode(localStorage.userToken).TraderID,\r\n                    Password: value,\r\n                })\r\n                    .then(res => {\r\n                        if (res.data === \"Valid password.\") {\r\n                            ValidCurrentPassword = true;\r\n                        }\r\n                        else {\r\n                            ValidCurrentPassword = false;\r\n                        }\r\n                    });\r\n\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is invalid.\";\r\n                break;\r\n            case \"NewPassword\":\r\n                ValidNewPassword = value.length >= 6;\r\n                Errors.NewPassword = ValidNewPassword ? \"\" : \"Password is too short.\";\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                ValidConfirmPassword = value === this.state.NewPassword;\r\n                Errors.ConfirmPassword = ValidConfirmPassword ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCurrentPassword: ValidCurrentPassword,\r\n            ValidNewPassword: ValidNewPassword,\r\n            ValidConfirmPassword: ValidConfirmPassword,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidCurrentPassword &&\r\n                    this.state.ValidNewPassword &&\r\n                    this.state.ValidConfirmPassword\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async e => {\r\n        e.preventDefault();\r\n\r\n        const updatedDriver = {\r\n            TraderID: jwt_decode(localStorage.userToken).TraderID,\r\n            Password: this.state.NewPassword,\r\n        }\r\n\r\n        await passwordSettings(updatedDriver)\r\n            .then(res => {\r\n                if (res === \"Trader/Broker is updated.\") {\r\n                    let decodedToken = jwt_decode(localStorage.userToken);\r\n                    decodedToken[\"Password\"] = this.state.Password;\r\n                    let token = jsonWebToken.sign(decodedToken, \"mysecret\");\r\n                    localStorage.setItem(\"userToken\", token);\r\n\r\n                    this.setState({\r\n                        MessageBox: (<MessageBox Message=\"Settings saved successfully.\" Show={true} />),\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\" }}>Change Password</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div class=\"entity-list entity-list-expandable\">\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fa fa-key\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"password\" name=\"CurrentPassword\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.CurrentPassword} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Current Password</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"CurrentPassword\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fa fa-key\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"password\" name=\"NewPassword\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.NewPassword} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">New Password</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"NewPassword\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fa fa-key\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"password\" name=\"ConfirmPassword\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.ConfirmPassword} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Confirm Password</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"ConfirmPassword\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item active\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fa fa-save\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Save Changes?</div>\r\n                                <div class=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div class=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n\r\n                {this.state.MessageBox}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default TBPasswordSettings;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport TBGeneralSettings from \"./TBGeneralSettings\";\r\nimport TBUsernameAndEmailSettings from \"./TBUsernameAndEmailSettings\";\r\nimport TBPasswordSettings from \"./TBPasswordSettings\";\r\n\r\nclass TBSettings extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TBGeneralSettings />\r\n                <TBUsernameAndEmailSettings />\r\n                <TBPasswordSettings />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default TBSettings;","import React, { Component } from \"react\";\r\nimport { TabMenu } from \"../../../styles/TabStyles\";\r\n\r\n\r\nimport Profile from \"./profile/TraderBrokerProfile\";\r\n\r\nimport Permits from \"./permits/Permits\";\r\n\r\nimport FinancialAffairs from \"./financial_affairs/FinancialAffairs\";\r\nimport Jobs from \"./jobs/Jobs\";\r\nimport Payments from \"./payments/Payments\";\r\nimport Settings from \"./settings/TBSettings\";\r\n\r\nclass TraderDashboard extends Component {\r\n    render() {\r\n        if (!localStorage.userToken) {\r\n            this.props.history.push(`/login`);\r\n            return <a />\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <ul class=\"nav nav-tabs theme-alt\" role=\"tablist\" style={TabMenu}>\r\n                        <li role=\"presentation\" class=\"active\"><a href=\"#profile\" aria-controls=\"prfile\" role=\"tab\" data-toggle=\"tab\">Profile</a></li>\r\n                        \r\n                        <li role=\"presentation\"><a href=\"#financialAffairs\" aria-controls=\"financialAffairs\" role=\"tab\" data-toggle=\"tab\">Financial Affairs</a></li>\r\n                        <li role=\"presentation\"><a href=\"#jobs\" aria-controls=\"jobs\" role=\"tab\" data-toggle=\"tab\">Jobs</a></li>\r\n                        <li role=\"presentation\"><a href=\"#payments\" aria-controls=\"payments\" role=\"tab\" data-toggle=\"tab\">Payments</a></li>\r\n                        <li role=\"presentation\"><a href=\"#settings\" aria-controls=\"settings\" role=\"tab\" data-toggle=\"tab\">Settings</a></li>\r\n                    </ul>\r\n\r\n                    <div class=\"tab-content\">\r\n                        <div role=\"tabpanel\" class=\"tab-pane active\" id=\"profile\">\r\n                            <Profile />\r\n                        </div>\r\n                      \r\n                        <div role=\"tabpanel\" class=\"tab-pane\" id=\"permits\">\r\n                            <Permits />\r\n                        </div>\r\n                        <div role=\"tabpanel\" class=\"tab-pane\" id=\"financialAffairs\">\r\n                            <FinancialAffairs />\r\n                        </div>\r\n                        <div role=\"tabpanel\" class=\"tab-pane\" id=\"jobs\">\r\n                            <Jobs />\r\n                        </div>\r\n                        <div role=\"tabpanel\" class=\"tab-pane\" id=\"payments\">\r\n                            <Payments />\r\n                        </div>\r\n                        <div role=\"tabpanel\" class=\"tab-pane\" id=\"settings\">\r\n                            <Settings />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default TraderDashboard;","import React, { Component } from \"react\";\r\nimport $ from \"jquery\";\r\n\r\nclass BackToTop extends Component {\r\n    render() {\r\n        return (\r\n            <a id=\"up\" href=\"#top\" class=\"back-to-top\" style={{ position: \"fixed\", left: \"20px\", bottom: \"20px\", }}>\r\n                <i class=\"glyph glyph-up\" style={{ color: \"#008575\", }}></i>\r\n                <span class=\"sr-only\">Back to top</span>\r\n            </a>\r\n        );\r\n    }\r\n};\r\n\r\nexport default BackToTop;","import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <footer class=\"border-top footer theme-default color-bg-light-neutral-high text-light\">\r\n                <div class=\"container\">\r\n                    &copy; {new Date().getFullYear()} - Core Infinite - <a asp-area=\"\" asp-controller=\"Home\" asp-action=\"Privacy\">Privacy</a>\r\n                </div>\r\n            </footer>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\r\nimport { HashRouter, BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport Header from \"./components/shared/Header\";\r\nimport Landing from \"./components/landing/Landing\";\r\nimport Login from \"./components/login/Login\";\r\nimport Register from \"./components/register/Register\";\r\nimport EmailConfirmation from \"./components/register/EmailConfirmation\";\r\nimport AccountSetup from \"./components/register/AccountSetup\";\r\nimport Congratulations from \"./components/register/Congratulations\";\r\nimport Dashboard from \"./components/users/dashboard/Dashboard\";\r\nimport TraderDashboard from \"./components/users/dashboard/TraderDashboard\"\r\nimport BackToTop from \"./controls/BackToTop\";\r\nimport Footer from \"./components/shared/Footer\";\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Router basename=\"/\">\r\n                <div className=\"App\">\r\n                    <Header />\r\n                    <Route exact path=\"/\" component={Landing} />\r\n                    <Route exact path=\"/register\" component={Register} />\r\n                    <Route exact path=\"/emailConfirmation\" component={EmailConfirmation} />\r\n                    <Route exact path=\"/accountSetup\" component={AccountSetup} />\r\n                    <Route exact path=\"/congratulations\" component={Congratulations} />\r\n                    <Route exact path=\"/login\" component={Login} />\r\n                    <Route exact path=\"/dashboard\" component={Dashboard} />\r\n                    <Route exact path=\"/traderdashboard\" component={TraderDashboard} />\r\n                    <BackToTop />\r\n                    <Footer />\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}
{"version":3,"sources":["components/shared/Header.js","components/landing/Landing.js","components/drivers/DriverFunctions.js","components/traders/TraderFunctions.js","styles/MiscellaneousStyles.js","controls/Preloader.js","styles/CardStyles.js","components/login/Login.js","components/register/Register.js","components/register/EmailConfirmation.js","components/register/AccountSetup.js","components/register/Congratulations.js","components/drivers/dashboard/profile/ProfilePhoto.js","controls/ImageUploader.js","components/drivers/dashboard/profile/documents/drivingLicence/AddDrivingLicenceDialog.js","components/drivers/dashboard/profile/documents/drivingLicence/AddDrivingLicenceButton.js","components/drivers/dashboard/profile/documents/entryExitCard/AddEntryExitCardDialog.js","components/drivers/dashboard/profile/documents/entryExitCard/AddEntryExitCardButton.js","components/drivers/dashboard/profile/documents/identityCard/AddIdentityCardDialog.js","components/drivers/dashboard/profile/documents/identityCard/AddIdentityCardButton.js","components/drivers/dashboard/profile/documents/drivingLicence/EditDrivingLicenceDialog.js","components/drivers/dashboard/profile/documents/drivingLicence/DrivingLicenceListItem.js","components/drivers/dashboard/profile/documents/entryExitCard/EditEntryExitCardDialog.js","components/drivers/dashboard/profile/documents/entryExitCard/EntryExitCardListItem.js","components/drivers/dashboard/profile/documents/identityCard/EditIdentityCardDialog.js","components/drivers/dashboard/profile/documents/identityCard/IdentityCardListItem.js","components/drivers/dashboard/profile/documents/DocumentsList.js","components/drivers/dashboard/profile/Profile.js","components/drivers/dashboard/trucks/TruckSettings.js","components/drivers/dashboard/trucks/AddTruckDialog.js","components/drivers/dashboard/trucks/trailers/AddTrailerDialog.js","components/drivers/dashboard/trucks/trailers/AddTrailer.js","components/drivers/dashboard/trucks/trailers/EditTrailerDialog.js","components/drivers/dashboard/trucks/trailers/TrailersList.js","components/drivers/dashboard/trucks/trailers/Trailers.js","components/drivers/dashboard/trucks/Truck.js","components/drivers/dashboard/permits/AddPermitLicenceDialog.js","components/drivers/dashboard/permits/EditPermitLicenceDialog.js","components/drivers/dashboard/permits/PermitLicencesList.js","components/drivers/dashboard/financial_affairs/FinancialAffairs.js","components/drivers/dashboard/permits/Permits.js","controls/Map.js","components/drivers/dashboard/jobs/jobRequests/AddJobRequestDialog.js","components/drivers/dashboard/jobs/jobRequests/EditJobRequestDialog.js","components/drivers/dashboard/jobs/jobRequests/JobRequestsList.js","components/drivers/dashboard/jobs/jobRequests/JobRequests.js","components/drivers/dashboard/jobs/jobOffers/JobOffers.js","components/drivers/dashboard/jobs/onGoingJobs/OnGoingJobs.js","components/drivers/dashboard/payments/Payments.js","components/drivers/dashboard/jobs/Jobs.js","components/drivers/dashboard/settings/GeneralSettings.js","components/drivers/dashboard/settings/CodeConfirmationDialog.js","components/drivers/dashboard/settings/UsernameAndEmailSettings.js","components/drivers/dashboard/settings/PasswordSettings.js","components/drivers/dashboard/settings/Settings.js","components/drivers/dashboard/DriversDashboard.js","styles/TabStyles.js","components/traders/dashboard/profile/ProfilePhoto.js","components/traders/dashboard/profile/documents/identityCard/AddIdentityCardDialog.js","components/traders/dashboard/profile/documents/identityCard/AddIdentityCardButton.js","components/traders/dashboard/profile/documents/commercialRegisterCertificate/AddCommercialRegisterCertificateDialog.js","components/traders/dashboard/profile/documents/commercialRegisterCertificate/AddCommercialRegisterCertificateButton.js","components/traders/dashboard/profile/documents/identityCard/EditIdentityCardDialog.js","components/traders/dashboard/profile/documents/identityCard/IdentityCardListItem.js","components/traders/dashboard/profile/documents/commercialRegisterCertificate/EditCommercialRegisterCertificateDialog.js","components/traders/dashboard/profile/documents/commercialRegisterCertificate/CommercialRegisterCertificateListItem.js","components/traders/dashboard/profile/documents/DocumentsList.js","components/traders/dashboard/profile/Profile.js","components/traders/dashboard/jobs/jobRequests/JobRequests.js","components/traders/dashboard/jobs/jobOffers/AddJobOfferDialog.js","components/traders/dashboard/jobs/jobOffers/EditJobOfferDialog.js","components/traders/dashboard/jobs/jobOffers/JobOffersList.js","components/traders/dashboard/jobs/jobOffers/JobOffers.js","components/traders/dashboard/jobs/onGoingJobs/OnGoingJobs.js","components/traders/dashboard/jobs/Jobs.js","components/traders/dashboard/settings/GeneralSettings.js","components/traders/dashboard/payments/Payments.js","components/traders/dashboard/settings/CodeConfirmationDialog.js","components/traders/dashboard/settings/UsernameAndEmailSettings.js","components/traders/dashboard/settings/PasswordSettings.js","components/traders/dashboard/settings/Settings.js","components/traders/dashboard/TradersDashboard.js","controls/BackToTop.js","components/shared/Footer.js","App.js","index.js","res/strings.js"],"names":["Header","props","logOut","event","preventDefault","localStorage","userToken","removeItem","Token","history","push","state","DriverLoggedIn","bind","jwt_decode","DriverID","this","setState","loginRegisterLinks","className","to","userLinks","onClick","type","data-toggle","data-target","Strings","APP_NAME","toUpperCase","id","Component","withRouter","Landing","class","style","width","backgroundColor","alt","src","data-source-index","color","fontWeight","href","textDecoration","registerDriver","newCredentials","a","async","axios","post","NAQEL_SERVER","Username","Email","Password","RegisterAs","then","response","data","localeCompare","USERNAME_OR_EMAIL_TAKEN","setItem","setupDriverAccount","newDriver","FirstName","LastName","DateOfBirth","Gender","Address","PhoneNumber","Nationality","console","log","loginDriver","driver","EmailOrUsername","SignInAs","getData","request","Get","get","headers","Authorization","uploadDriverProfilePhoto","driverProfilePhoto","PhotoURL","FileName","generalSettings","updatedDriver","validateUsername","username","validateEmail","email","sendCode","usernameAndEmailSettings","validatePassword","passwordPackage","passwordSettings","addTruck","newTruck","PlateNumber","Owner","ProductionYear","Brand","Model","Type","MaximumWeight","updateTruckPhoto","updatedTruck","updateTruck","addTrailer","newTrailer","deleteTrailer","discardedTrailer","delete","TrailerID","addDrivingLicence","newDrivingLicence","LicenceNumber","ReleaseDate","ExpiryDate","updateDrivingLicence","updatedDrivingLicence","deleteDrivingLicence","discardedDrivingLicence","addEntryExitCard","newEntryExitCard","EntryExitNumber","NumberOfMonths","updateEntryExitCard","updatedEntryExitCard","deleteEntryExitCard","discardedEntryExitCard","addIdentityCard","newIdentityCard","IDNumber","updateIdentityCard","updatedIdentityCard","deleteIdentityCard","discardedIdentityCard","addPermitLicence","newPermitLicence","PermitNumber","Code","Place","deletePermitLicence","discardedPermitLicence","PermitLicenceID","updatePermitLicence","updatedPermitLicence","addJobRequest","newJobRequest","LoadingPlace","UnloadingPlace","TripType","Price","updateJobRequest","updatedJobRequest","JobRequestID","deleteJobRequest","discardedJobRequest","registerTrader","res","setupTraderAccount","newTrader","loginTrader","trader","catch","error","uploadTraderProfilePhoto","traderProfilePhoto","updatedTrader","addJobOffer","newJobOffer","CargoType","CargoWeight","LoadingDate","LoadingTime","EntryExit","AcceptedDelay","JobOfferType","updateJobOffer","updatedJobOffer","JobOfferID","Required","paddingLeft","PreloaderScreen","background","position","zIndex","top","display","alignItems","justifyContent","height","Preloader","textAlign","LoginCardBack","backgroundImage","backgroundAttachment","backgroundRepeat","backgroundSize","RegisterCardBack","EmailConfirmationCardBack","AccountSetupCardBack","CongratulationsCardBack","Card","padding","alignContent","boxShadow","CardLarge","CardXLarge","margin","CardChild","CardTitle","paddingTop","Login","onChange","name","target","value","validateField","onSubmit","ValidForm","user","Message","LoggedInAsDriver","LoginError","LoggedInAsTrader","ValidEmailOrUsername","ValidPassword","Errors","field","noValidate","htmlFor","placeholder","aria-haspopup","role","aria-expanded","aria-labelledby","e","disabled","Register","ConfirmPassword","NullError","UsernameOrEmailTaken","newCredentialsToken","PasswordsMatched","ValidEmail","Agreed","fieldValidationErrors","match","length","refs","agreementCheckBox","checked","validateForm","autocomplete","required","maxWidth","ref","AgreementError","tabindex","aria-hidden","String","data-dismiss","EmailConfirmation","code","ConfirmationCode","InvalidCodeError","AccountSetup","verifiedCredentialsToken","decoded","newUser","ValidFirstName","ValidLastName","ValidDateOfBirth","ValidNationality","ValidAddress","ValidPhoneNumber","Date","atl","rows","IsCreatedSuccessfully","ProfilePhoto","onImageUpload","Image","files","formData","FormData","append","IMAGE_UPLOADER","onUploadProgress","UploadProgress","message","imageUrl","filename","photoURL","ImageURL","profilePhoto","fileInput","border","click","ImageUploader","startsWith","OnInvalidImageSelected","exception","OnImageUploaded","Width","Height","Source","AddDrivingLicenceDialog","OnOK","cancelButton","ValidLicenceNumber","ValidType","ValidReleaseDate","ValidExpiryDate","ValidPhotoURL","getTime","tabIndex","ImageCategory","autoComplete","OnCancel","AddDrivingLicenceButton","minWidth","onMouseDown","OnDocumentsUpdated","AddEntryExitCardDialog","ValidEntryExitNumber","ValidNumberOfMonths","releaseDate","expiryDate","setMonth","getMonth","toLocaleString","AddEntryExitCardButton","AddIdentityCardDialog","ValidIDNumber","min","max","AddIdentityCardButton","EditDrivingLicenceDialog","drivingLicence","DrivingLicence","DrivingLicenceID","DrivingLicenceListItem","onDelete","onComponentUpdated","Index","overflow","EditEntryExitCardDialog","entryExitCard","EntryExitCard","EntryExitCardListItem","EntryExitCardID","EditIdentityCardDialog","identityCard","IdentityCard","IdentityCardListItem","IdentityCardID","DocumentsList","onDocumentsUpdated","index","undefined","Profile","WarningAlert","Driver","marginBottom","TruckSettings","OnTruckSettingsUpdated","ValidPlateNumber","ValidOwner","ValidProductionYear","ValidBrand","ValidModel","ValidMaximumWeight","truck","Truck","currentYear","getFullYear","AddTruckDialog","AddTrailerDialog","AddTrailer","OnTrailerAdded","EditTrailerDialog","updatedTrailer","Trailer","updateTrailer","dialogID","TrailersList","Trailers","OnTrailersUpdated","EditTrailerDialogs","map","key","editTrailerDialogs","TruckFound","AddPermitLicenceDialog","getItem","ValidPermitNumber","ValidCode","ValidPlace","EditPermitLicenceDialog","PermitLicence","DialogID","PermitLicencesList","PermitLicences","OnPermitLicencesUpdated","getPermitLicences","permitLicences","onSearch","SearchString","filteredPermitLicences","i","EditPermitLicenceDialogs","paddingRight","editPermitLicenceDialogs","FinancialAffairs","borderRadius","Geocode","setApiKey","enableDebug","Map","NoState","AsyncMap","withScriptjs","withGoogleMap","googleMapURL","defaultZoom","defaultCenter","lat","lng","loadingElement","containerElement","mapElement","AddJobRequestDialog","ValidLoadingPlace","ValidUnloadingPlace","ValidPrice","step","EditJobRequestDialog","JobRequest","JobRequestsList","JobRequests","OnJobRequestsUpdated","getJobRequests","jobRequests","filteredJobRequests","includes","EditJobRequestDialogs","Math","abs","TimeCreated","WaitingTime","floor","editJobRequestDialogs","onJobRequestsUpdated","JobOffers","OnGoingJobs","Payments","GeneralSettings","OnSettingsSaved","SettingsSaved","CodeConfirmationDialog","ConfirmCode","ValidConfirmCode","UsernameAndEmailSettings","NewUsername","NewEmail","ValidNewUsername","ValidNewEmail","CodeConfirmation","PasswordSettings","CurrentPassword","NewPassword","ValidCurrentPassword","ValidNewPassword","ValidConfirmPassword","Settings","componentDidMount","forceUpdate","DriversDashboard","aria-controls","TabMenu","AddCommercialRegisterCertificateDialog","newCommercialRegisterCertificate","Number","addCommercialRegisterCertificate","UUID","substring","readOnly","AddCommercialRegisterCertificateButton","onRefresh","Key","random","EditCommercialRegisterCertificateDialog","commercialRegisterCertificate","CommercialRegisterCertificate","updatedCommercialRegisterCertificate","updateCommercialRegisterCertificate","CommercialRegisterCertificateListItem","discardedCommercialRegisterCertificate","deleteCommercialRegisterCertificate","ID","Trader","AddJobOfferDialog","ValidCargoType","ValidCargoWeight","ValidLoadingDate","ValidLoadingTime","ValidAcceptedDelay","aria-pressed","EditJobOfferDialog","JobOffer","defaultChecked","JobOffersList","discardedJobOffer","deleteJobOffer","AllJobOffers","allJobOffers","filteredJobOffers","EditJobOfferDialogs","jobOffer","hoursSinceCreated","editJobOfferDialogs","onJobOffersUpdated","jobOffersList","Jobs","TradersDashboard","BackToTop","right","bottom","Footer","asp-area","asp-controller","asp-action","App","basename","exact","path","component","Congratulations","ReactDOM","render","document","getElementById","module","exports","USER_TOKEN","USER_NOT_FOUND","INVALID_PASSWORD"],"mappings":"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","file":"static/js/main.23c2493c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Strings from \"../../res/strings\"\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DriverLoggedIn: false\r\n        };\r\n\r\n        this.logOut = this.logOut.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            if (jwt_decode(localStorage.Token).DriverID) {\r\n                this.setState({\r\n                    DriverLoggedIn: true\r\n                });\r\n            }\r\n            else {\r\n                this.setState({\r\n                    DriverLoggedIn: false\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.setState({\r\n                DriverLoggedIn: false\r\n            });\r\n        }\r\n    }\r\n\r\n    logOut = event => {\r\n        event.preventDefault();\r\n\r\n        if (localStorage.userToken) {\r\n            localStorage.removeItem(\"userToken\");\r\n        }\r\n        else if (localStorage.Token) {\r\n            localStorage.removeItem(\"Token\");\r\n        }\r\n\r\n        this.props.history.push(`/login`);\r\n    }\r\n\r\n    render() {\r\n        const loginRegisterLinks = <ul className=\"nav navbar-nav navbar-right\">\r\n            <li>\r\n                <Link to=\"/register\">Register</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/login\">Login</Link>\r\n            </li>\r\n        </ul>;\r\n\r\n        const userLinks = <ul className=\"nav navbar-nav navbar-right\">\r\n            <li>\r\n                <Link to={this.state.DriverLoggedIn ? \"/drivers\" : \"/traders\"}>Dashboard</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"\" onClick={this.logOut.bind(this)}>Logout</Link>\r\n            </li>\r\n        </ul>;\r\n\r\n        return (\r\n            <header>\r\n                <nav className=\"navbar navbar-default\">\r\n                    <div className=\"navbar-local color-accent theme-dark\">\r\n                        <div className=\"container\">\r\n                            <div className=\"navbar-header\">\r\n                                <button type=\"button\" className=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-2\">\r\n                                    <span className=\"sr-only\">Toggle navigation</span>\r\n                                    <i className=\"glyph glyph-hamburger\"></i>\r\n                                </button>\r\n                                <Link to=\"/\" className=\"navbar-brand\">{Strings.APP_NAME.toUpperCase()}</Link>\r\n                            </div>\r\n                            <div className=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-2\">\r\n                                <ul className=\"nav navbar-nav\"></ul>\r\n                                {localStorage.Token ? userLinks : loginRegisterLinks}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n        );\r\n    }\r\n};\r\n\r\nexport default withRouter(Header);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"slider\">\r\n                    <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                    <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        alt=\"truck.png\" src=\"./images/truck.png\" data-source-index=\"2\" />\r\n                                </div>\r\n                                <div class=\"col-md-12 col-md-pull-12\">\r\n                                    <div class=\"type-h3\" style={{ color: \"#008575\", }}>Weclome to Naqel</div>\r\n                                    <div class=\"type-sh3\" style={{ color: \"#949496\", }}>Transport Services On-The-Go</div>\r\n                                    <p style={{ color: \"#D1D2D4\", }}>Welcome to Naqel! If you are a trader or a broker, and you want to publish job opportunities for drivers nearby, well, you are on the right place. Naqel is a mediator among traders, brokers and drivers, and provides intuitive and secure way to get transport services.</p>\r\n                                    <p style={{ color: \"#D1D2D4\", }}>Not a Trader or a Broker? No worries! Naqel provides services for drivers too. If you are a driver, and you are searching for job opportunities, you are just one step away. Create your account on our Web Service, and we will notify you job oppprtunities on your personal account.</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#16171F\" }}>\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                    <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        alt=\"oath.png\" src=\"./images/oath.png\" data-source-index=\"2\" />\r\n                                </div>\r\n                                <div class=\"col-md-12 col-md-pull-12\">\r\n                                    <div class=\"type-h3\" style={{ color: \"#008575\", }}>Privacy</div>\r\n                                    <div class=\"type-sh3\" style={{ color: \"#949496\", }}>Your Privacy is Important to Us</div>\r\n                                    <p style={{ color: \"#D1D2D4\", }}>Naqel's Privacy Statement describes the types of data we collect from you, how we use your data, and the legal bases we have to process your data. The Privacy Statement also describes how Naqel uses your content, which is information submitted by you to Naqel via the Services.</p>\r\n                                    <p style={{ color: \"#D1D2D4\", }}>Where processing is based on consent and to the extent permitted by law, by agreeing to these Terms, you consent to Naqel's collection, use and disclosure of your content and data as described in the privacy statement.</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#00201C\" }}>\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                    <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        alt=\"account.png\" src=\"./images/account.png\" data-source-index=\"2\" />\r\n                                </div>\r\n                                <div class=\"col-md-12 col-md-pull-12\">\r\n                                    <div class=\"type-h3\" style={{ color: \"#008575\", }}>User Accounts</div>\r\n                                    <div class=\"type-sh3\" style={{ color: \"#949496\", }}>Signup and/or Login</div>\r\n                                    <p style={{ color: \"#D1D2D4\", }}>Do you want to use our services right now? No Worries! Just signup by filling up precise forms and/or login to your profile. Drivers can view job opprotunities on their dashboards. Traders and/or Brokers can post job requests for freight from thier accounts.</p>\r\n                                    <div class=\"btn-group\">\r\n                                        <Link to=\"/register\" class=\"btn btn-secondary\">Signup</Link>\r\n                                        <Link to=\"/login\" class=\"btn btn-primary\">Login</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"jumbotron theme-dark\" style={{ backgroundColor: \"#202020\", }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-24 text-center\">\r\n                                <div class=\"row section-gallery\">\r\n                                    <div class=\"col-md-8\">\r\n                                        <h4 style={{ fontWeight: \"bold\", }}>LOCATION</h4>\r\n                                        <div class=\"type-p1 text-center\">\r\n                                            Wah\r\n                            <br />\r\n                                            Punjab, Pakistan\r\n                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-8\">\r\n                                        <h4 style={{ fontWeight: \"bold\", }}>AROUND THE GLOBE</h4>\r\n                                        <div class=\"type-p1 text-center text-light\" style={{ color: \"#25AAE1\", }}>\r\n                                            <a class=\"fa\" href=\"#\">\r\n                                                <i class=\"fab fa-fw fa-facebook-f\"></i>\r\n                                            </a>\r\n                                            <a class=\"fa\" href=\"#\">\r\n                                                <i class=\"fab fa-fw fa-instagram\"></i>\r\n                                            </a>\r\n                                            <a class=\"fa\" href=\"#\">\r\n                                                <i class=\"fab fa-fw fa-twitter\"></i>\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-8\">\r\n                                        <h4 style={{ fontWeight: \"bold\", }}>CONTACT US</h4>\r\n                                        <div class=\"type-p1 text-center\">Naqel is created by Core Infinite. For more information, visit <a style={{ textDecoration: \"none\", color: \"#008575\", }} href=\"#\" class=\"color-type-accent\">coreinfinte.com</a></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Landing;","import axios from \"axios\";\r\nimport Strings from \"../../res/strings\";\r\n\r\n// POST: Register\r\nexport const registerDriver = async newCredentials => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/register`, {\r\n        Username: newCredentials.Username,\r\n        Email: newCredentials.Email,\r\n        Password: newCredentials.Password,\r\n        RegisterAs: newCredentials.RegisterAs,\r\n    }).then(response => {\r\n        if (response.data.localeCompare(Strings.USERNAME_OR_EMAIL_TAKEN) === 0) {\r\n            return response.data;\r\n        }\r\n        else {\r\n            localStorage.setItem(\"newCredentialsToken\", response.data);\r\n            return response.data;\r\n        }\r\n    });\r\n};\r\n\r\n// POST: AccountSetup\r\nexport const setupDriverAccount = async newDriver => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/accountSetup`, {\r\n        Username: newDriver.Username,\r\n        Email: newDriver.Email,\r\n        Password: newDriver.Password,\r\n        RegisterAs: newDriver.RegisterAs,\r\n        FirstName: newDriver.FirstName,\r\n        LastName: newDriver.LastName,\r\n        DateOfBirth: newDriver.DateOfBirth,\r\n        Gender: newDriver.Gender,\r\n        Address: newDriver.Address,\r\n        PhoneNumber: newDriver.PhoneNumber,\r\n        Nationality: newDriver.Nationality,\r\n    }).then(response => {\r\n        console.log(response.data);\r\n    });\r\n};\r\n\r\n// POST: Login\r\nexport const loginDriver = async driver => {\r\n    console.log(`Sending HTTP POST request on ${Strings.NAQEL_SERVER}drivers/login`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/login`, {\r\n        EmailOrUsername: driver.EmailOrUsername,\r\n        Password: driver.Password,\r\n        SignInAs: driver.SignInAs,\r\n    }).then(response => {\r\n        return response.data;\r\n    })\r\n};\r\n\r\n// GET: GetData\r\nexport const getData = request => {\r\n    console.log(`Sending GET request to ${Strings.NAQEL_SERVER}drivers/get${request.Get}...`);\r\n    return axios.get(`${Strings.NAQEL_SERVER}drivers/get${request.Get}`, {\r\n        headers: { Authorization: `JWT ${request.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UploadDriverProfilePhoto\r\nexport const uploadDriverProfilePhoto = async driverProfilePhoto => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/uploadDriverProfilePhoto`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/uploadDriverProfilePhoto`, {\r\n        PhotoURL: driverProfilePhoto.PhotoURL,\r\n        FileName: driverProfilePhoto.FileName\r\n    }, {\r\n        headers: { Authorization: `JWT ${driverProfilePhoto.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: GeneralSettings\r\nexport const generalSettings = async updatedDriver => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/generalSettings`, {\r\n        FirstName: updatedDriver.FirstName,\r\n        LastName: updatedDriver.LastName,\r\n        Address: updatedDriver.Address,\r\n        PhoneNumber: updatedDriver.PhoneNumber,\r\n        Gender: updatedDriver.Gender,\r\n        Nationality: updatedDriver.Nationality,\r\n        DateOfBirth: updatedDriver.DateOfBirth,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedDriver.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateUsername\r\nexport const validateUsername = async username => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/validateUsername`, {\r\n        Username: username\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateEmail\r\nexport const validateEmail = async email => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/validateEmail`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POSTL SendCode\r\nexport const sendCode = async email => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}users/sendCode...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/sendCode`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UsernameAndEmailSettings\r\nexport const usernameAndEmailSettings = async updatedDriver => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/usernameAndEmailSettings...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/usernameAndEmailSettings`, {\r\n        Username: updatedDriver.Username,\r\n        Email: updatedDriver.Email\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedDriver.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidatePassword\r\nexport const validatePassword = async passwordPackage => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/validatePassword`, {\r\n        Password: passwordPackage.Password\r\n    }, {\r\n        headers: { Authorization: `JWT ${passwordPackage.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: PasswordSettings\r\nexport const passwordSettings = async updatedDriver => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/passwordSettings`, {\r\n        Password: updatedDriver.Password,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedDriver.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddTruck\r\nexport const addTruck = async newTruck => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addTruck...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addTruck`, {\r\n        PlateNumber: newTruck.PlateNumber,\r\n        Owner: newTruck.Owner,\r\n        ProductionYear: newTruck.ProductionYear,\r\n        Brand: newTruck.Brand,\r\n        Model: newTruck.Model,\r\n        Type: newTruck.Type,\r\n        MaximumWeight: newTruck.MaximumWeight,\r\n        PhotoURL: newTruck.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTruck.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UpdateTruckPhoto\r\nexport const updateTruckPhoto = async updatedTruck => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateTruckPhoto...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateTruckPhoto`, {\r\n        PhotoURL: updatedTruck.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTruck.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UpdateTruck\r\nexport const updateTruck = async updatedTruck => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateTruck...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateTruck`, {\r\n        PlateNumber: updatedTruck.PlateNumber,\r\n        Owner: updatedTruck.Owner,\r\n        ProductionYear: updatedTruck.ProductionYear,\r\n        Brand: updatedTruck.Brand,\r\n        Model: updatedTruck.Model,\r\n        Type: updatedTruck.Type,\r\n        MaximumWeight: updatedTruck.MaximumWeight\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTruck.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddTrailer\r\nexport const addTrailer = async newTrailer => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addTrailer...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addTrailer`, {\r\n        MaximumWeight: newTrailer.MaximumWeight,\r\n        PhotoURL: newTrailer.PhotoURL,\r\n        Type: newTrailer.Type\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTrailer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteTrailer\r\nexport const deleteTrailer = async discardedTrailer => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteTrailer...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteTrailer`, {\r\n        headers: { Authorization: `JWT ${discardedTrailer.Token}` },\r\n        data: { TrailerID: discardedTrailer.TrailerID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateTrailer\r\nexport const updateTrailer = updatedTrailer => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateTrailer...`);\r\n    return axios.post(`${Strings.NAQEL_SERVER}drivers/updateTrailer`, {\r\n        TrailerID: updatedTrailer.TrailerID,\r\n        MaximumWeight: updatedTrailer.MaximumWeight,\r\n        PhotoURL: updatedTrailer.PhotoURL,\r\n        Type: updatedTrailer.Type\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTrailer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addDrivingLicence\r\nexport const addDrivingLicence = async newDrivingLicence => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addDrivingLicence...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addDrivingLicence`, {\r\n        LicenceNumber: newDrivingLicence.LicenceNumber,\r\n        Type: newDrivingLicence.Type,\r\n        ReleaseDate: newDrivingLicence.ReleaseDate,\r\n        ExpiryDate: newDrivingLicence.ExpiryDate,\r\n        PhotoURL: newDrivingLicence.PhotoURL,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newDrivingLicence.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateDrivingLicence\r\nexport const updateDrivingLicence = async updatedDrivingLicence => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateDrivingLicence...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateDrivingLicence`, {\r\n        LicenceNumber: updatedDrivingLicence.LicenceNumber,\r\n        Type: updatedDrivingLicence.Type,\r\n        ReleaseDate: updatedDrivingLicence.ReleaseDate,\r\n        ExpiryDate: updatedDrivingLicence.ExpiryDate,\r\n        PhotoURL: updatedDrivingLicence.PhotoURL,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedDrivingLicence.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteDrivingLicence\r\nexport const deleteDrivingLicence = async discardedDrivingLicence => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteDrivingLicence...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteDrivingLicence`, {\r\n            headers: { Authorization: `JWT ${discardedDrivingLicence.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addEntryExitCard\r\nexport const addEntryExitCard = async newEntryExitCard => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addEntryExitCard...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addEntryExitCard`, {\r\n        EntryExitNumber: newEntryExitCard.EntryExitNumber,\r\n        Type: newEntryExitCard.Type,\r\n        ReleaseDate: newEntryExitCard.ReleaseDate,\r\n        NumberOfMonths: newEntryExitCard.NumberOfMonths,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newEntryExitCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateEntryExiCard\r\nexport const updateEntryExitCard = async updatedEntryExitCard => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateEntryExitCard...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateEntryExitCard`, {\r\n        EntryExitNumber: updatedEntryExitCard.EntryExitNumber,\r\n        Type: updatedEntryExitCard.Type,\r\n        ReleaseDate: updatedEntryExitCard.ReleaseDate,\r\n        NumberOfMonths: updatedEntryExitCard.NumberOfMonths,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedEntryExitCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteEntryExitCard\r\nexport const deleteEntryExitCard = async discardedEntryExitCard => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteEntryExitCard...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteEntryExitCard`, {\r\n        headers: { Authorization: `JWT ${discardedEntryExitCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addIdentityCard\r\nexport const addIdentityCard = async newIdentityCard => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addIdentityCard...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addIdentityCard`, {\r\n        Token: newIdentityCard.Token,\r\n        IDNumber: newIdentityCard.IDNumber,\r\n        PhotoURL: newIdentityCard.PhotoURL,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateIdentityCard\r\nexport const updateIdentityCard = async updatedIdentityCard => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateIdentityCard...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateIdentityCard`, {\r\n        Token: updatedIdentityCard.Token,\r\n        IDNumber: updatedIdentityCard.IDNumber,\r\n        PhotoURL: updatedIdentityCard.PhotoURL,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteIdentityCard\r\nexport const deleteIdentityCard = async discardedIdentityCard => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteIdentityCard...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteIdentityCard`, {\r\n        headers: { Authorization: `JWT ${discardedIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addPermitLicence\r\nexport const addPermitLicence = async newPermitLicence => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addPermitLicence`, {\r\n        Token: newPermitLicence.Token,\r\n        PermitNumber: newPermitLicence.PermitNumber,\r\n        ExpiryDate: newPermitLicence.ExpiryDate,\r\n        PhotoURL: newPermitLicence.PhotoURL,\r\n        Code: newPermitLicence.Code,\r\n        Place: newPermitLicence.Place\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deletePermitLicence\r\nexport const deletePermitLicence = async discardedPermitLicence => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/deletePermitLicence`, {\r\n        Token: discardedPermitLicence.Token,\r\n        PermitLicenceID: discardedPermitLicence.PermitLicenceID\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updatePermitLicence\r\nexport const updatePermitLicence = async updatedPermitLicence => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updatePermitLicence`, {\r\n        Token: updatedPermitLicence.Token,\r\n        PermitLicenceID: updatedPermitLicence.PermitLicenceID,\r\n        PermitNumber: updatedPermitLicence.PermitNumber,\r\n        ExpiryDate: updatedPermitLicence.ExpiryDate,\r\n        PhotoURL: updatedPermitLicence.PhotoURL,\r\n        Code: updatedPermitLicence.Code,\r\n        Place: updatedPermitLicence.Place\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addJobRequest\r\nexport const addJobRequest = async newJobRequest => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addJobRequest`, {\r\n        Token: newJobRequest.Token,\r\n        LoadingPlace: newJobRequest.LoadingPlace,\r\n        UnloadingPlace: newJobRequest.UnloadingPlace,\r\n        TripType: newJobRequest.TripType,\r\n        Price: newJobRequest.Price,\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateJobRequest\r\nexport const updateJobRequest = async updatedJobRequest => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateJobRequest`, {\r\n        Token: updatedJobRequest.Token,\r\n        JobRequestID: updatedJobRequest.JobRequestID,\r\n        LoadingPlace: updatedJobRequest.LoadingPlace,\r\n        UnloadingPlace: updatedJobRequest.UnloadingPlace,\r\n        TripType: updatedJobRequest.TripType,\r\n        Price: updatedJobRequest.Price,\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteJobRequest\r\nexport const deleteJobRequest = async discardedJobRequest => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/deleteJobRequest`, {\r\n        Token: discardedJobRequest.Token,\r\n        JobRequestID: discardedJobRequest.JobRequestID\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};","import axios from \"axios\";\r\nimport Strings from \"../../res/strings\";\r\n\r\n// POST: Register\r\nexport const registerTrader = async newCredentials => {\r\n    console.log(\"I'm in registerTrader axios...\");\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/register`, {\r\n        Username: newCredentials.Username,\r\n        Email: newCredentials.Email,\r\n        Password: newCredentials.Password,\r\n        RegisterAs: newCredentials.RegisterAs,\r\n    }).then(res => {\r\n        if (res.data.localeCompare(Strings.USERNAME_OR_EMAIL_TAKEN) === 0) {\r\n            return res.data;\r\n        }\r\n        else {\r\n            localStorage.setItem(\"newCredentialsToken\", res.data);\r\n            return res.data;\r\n        }\r\n    });\r\n};\r\n\r\n// POST: AccountSetup\r\nexport const setupTraderAccount = async newTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/accountSetup`, {\r\n        Username: newTrader.Username,\r\n        Email: newTrader.Email,\r\n        Password: newTrader.Password,\r\n        RegisterAs: newTrader.RegisterAs,\r\n        FirstName: newTrader.FirstName,\r\n        LastName: newTrader.LastName,\r\n        DateOfBirth: newTrader.DateOfBirth,\r\n        Gender: newTrader.Gender,\r\n        Address: newTrader.Address,\r\n        PhoneNumber: newTrader.PhoneNumber,\r\n        Nationality: newTrader.Nationality,\r\n    }).then(res => {\r\n        console.log(res.data);\r\n    });\r\n};\r\n\r\n// POST: Login\r\nexport const loginTrader = async trader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/login`, {\r\n        EmailOrUsername: trader.EmailOrUsername,\r\n        Password: trader.Password\r\n    }).then(response => {\r\n        return response.data;\r\n    }).catch(error => {\r\n        console.log(error);\r\n    });\r\n};\r\n\r\n// GET: GetData\r\nexport const getData = async request => {\r\n    console.log(`Sending GET request to ${Strings.NAQEL_SERVER}traders/get${request.Get}...`);\r\n    return await axios.get(`${Strings.NAQEL_SERVER}traders/get${request.Get}`, {\r\n        headers: { Authorization: `JWT ${request.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UploadDriverProfilePhoto\r\nexport const uploadTraderProfilePhoto = async traderProfilePhoto => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/uploadTraderProfilePhoto`, {\r\n        PhotoURL: traderProfilePhoto.PhotoURL,\r\n        FileName: traderProfilePhoto.FileName\r\n    }, {\r\n        headers: { Authorization: `JWT ${traderProfilePhoto.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: GeneralSettings\r\nexport const generalSettings = async updatedTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/generalSettings`, {\r\n        FirstName: updatedTrader.FirstName,\r\n        LastName: updatedTrader.LastName,\r\n        Address: updatedTrader.Address,\r\n        PhoneNumber: updatedTrader.PhoneNumber,\r\n        Gender: updatedTrader.Gender,\r\n        Nationality: updatedTrader.Nationality,\r\n        DateOfBirth: updatedTrader.DateOfBirth,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTrader.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateUsername\r\nexport const validateUsername = async username => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/validateUsername`, {\r\n        Username: username\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateEmail\r\nexport const validateEmail = async email => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/validateEmail`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POSTL SendCode\r\nexport const sendCode = async email => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/sendCode`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UsernameAndEmailSettings\r\nexport const usernameAndEmailSettings = async updatedTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/usernameAndEmailSettings`, {\r\n        Username: updatedTrader.Username,\r\n        Email: updatedTrader.Email\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTrader.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidatePassword\r\nexport const validatePassword = async passwordPackage => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/validatePassword`, {\r\n        Password: passwordPackage.Password\r\n    }, {\r\n        headers: { Authorization: `JWT ${passwordPackage.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: PasswordSettings\r\nexport const passwordSettings = async updatedTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/passwordSettings`, {\r\n        Password: updatedTrader.Password,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTrader.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addIdentityCard\r\nexport const addIdentityCard = newIdentityCard => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/addIdentityCard`, {\r\n        IDNumber: newIdentityCard.IDNumber,\r\n        PhotoURL: newIdentityCard.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${newIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateIdentityCard\r\nexport const updateIdentityCard = updatedIdentityCard => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/updateIdentityCard`, {\r\n        IDNumber: updatedIdentityCard.IDNumber,\r\n        PhotoURL: updatedIdentityCard.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteIdentityCard\r\nexport const deleteIdentityCard = discardedIdentityCard => {\r\n    return axios.delete(`${Strings.NAQEL_SERVER}traders/deleteIdentityCard`, {\r\n        headers: { Authorization: `JWT ${discardedIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addCommercialRegisterCertificate\r\nexport const addCommercialRegisterCertificate = newCommercialRegisterCertificate => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/addCommercialRegisterCertificate`, {\r\n        Number: newCommercialRegisterCertificate.Number,\r\n        Type: newCommercialRegisterCertificate.Type,\r\n        PhotoURL: newCommercialRegisterCertificate.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${newCommercialRegisterCertificate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateCommercialRegisterCertificate\r\nexport const updateCommercialRegisterCertificate = updatedCommercialRegisterCertificate => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/updateCommercialRegisterCertificate`, {\r\n        Number: updatedCommercialRegisterCertificate.Number,\r\n        Type: updatedCommercialRegisterCertificate.Type,\r\n        PhotoURL: updatedCommercialRegisterCertificate.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedCommercialRegisterCertificate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteCommercialRegisterCertificate\r\nexport const deleteCommercialRegisterCertificate = discardedCommercialRegisterCertificate => {\r\n    return axios.delete(`${Strings.NAQEL_SERVER}traders/deleteCommercialRegisterCertificate`, {\r\n        headers: { Authorization: `JWT ${discardedCommercialRegisterCertificate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addJobOffer\r\nexport const addJobOffer = async newJobOffer => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addJobOffer`, {\r\n        TripType: newJobOffer.TripType,\r\n        CargoType: newJobOffer.CargoType,\r\n        CargoWeight: newJobOffer.CargoWeight,\r\n        LoadingPlace: newJobOffer.LoadingPlace,\r\n        UnloadingPlace: newJobOffer.UnloadingPlace,\r\n        LoadingDate: newJobOffer.LoadingDate,\r\n        LoadingTime: newJobOffer.LoadingTime,\r\n        EntryExit: newJobOffer.EntryExit,\r\n        Price: newJobOffer.Price,\r\n        AcceptedDelay: newJobOffer.AcceptedDelay,\r\n        JobOfferType: newJobOffer.JobOfferType\r\n    }, {\r\n        headers: { Authorization: `JWT ${newJobOffer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateJobOffer\r\nexport const updateJobOffer = async updatedJobOffer => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/updateJobOffer`, {\r\n        JobOfferID: updatedJobOffer.JobOfferID,\r\n        TripType: updatedJobOffer.TripType,\r\n        CargoType: updatedJobOffer.CargoType,\r\n        CargoWeight: updatedJobOffer.CargoWeight,\r\n        LoadingPlace: updatedJobOffer.LoadingPlace,\r\n        UnloadingPlace: updatedJobOffer.UnloadingPlace,\r\n        LoadingDate: updatedJobOffer.LoadingDate,\r\n        LoadingTime: updatedJobOffer.LoadingTime,\r\n        EntryExit: updatedJobOffer.EntryExit,\r\n        Price: updatedJobOffer.Price,\r\n        AcceptedDelay: updatedJobOffer.AcceptedDelay,\r\n        JobOfferType: updatedJobOffer.JobOfferType\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedJobOffer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deleteJobOffer\r\nexport const deleteJobOffer = async discardedJobOffer => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}traders/deleteJobOffer...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}traders/deleteJobOffer`, {\r\n        JobOfferID: discardedJobOffer.JobOfferID\r\n    }, {\r\n        headers: { Authorization: `JWT ${discardedJobOffer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};","export const Required = {\r\n    paddingLeft: \"5px\",\r\n    fontWeight: \"bold\",\r\n};\r\n\r\nexport const SelectOptionStyle = {\r\n    maxWidth: \"296px\",\r\n};\r\n\r\nexport const PreloaderScreen = {\r\n    background: \"rgba(0, 0, 0, 0.8)\",\r\n    position: \"fixed\",\r\n    zIndex: \"10\",\r\n    top: \"0px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n    height: \"100%\"\r\n};\r\n\r\nexport default {\r\n    Required,\r\n    SelectOptionStyle,\r\n    PreloaderScreen\r\n};","import React, { Component } from \"react\";\r\nimport { PreloaderScreen } from \"../styles/MiscellaneousStyles\";\r\n\r\nclass Preloader extends Component {\r\n    render() {\r\n        return (\r\n            <div style={PreloaderScreen}>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                    <img src=\"./images/preloader.gif\" alt=\"preloader.gif\" height=\"200\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Preloader;","export const LoginCardBack = {\r\n    backgroundImage: \"url(/images/login_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n};\r\n\r\nexport const RegisterCardBack = {\r\n    backgroundImage: \"url(/images/signup_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n};\r\n\r\nexport const EmailConfirmationCardBack = {\r\n    backgroundImage: \"url(/images/passcode_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n};\r\n\r\nexport const AccountSetupCardBack = {\r\n    backgroundImage: \"url(/images/create_account_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n};\r\n\r\nexport const CongratulationsCardBack = {\r\n    backgroundImage: \"url(/images/congrats_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n};\r\n\r\nexport const Card = {\r\n    backgroundColor: \"rgba(229, 229, 229, 0.8)\",\r\n    height: \"auto\",\r\n    width: \"350px\",\r\n    padding: \"30px\",\r\n    alignContent: \"center\",\r\n    boxShadow: \"0 6px 6px rgba(0, 0, 0, 0.6)\",\r\n};\r\n\r\nexport const CardLarge = {\r\n    backgroundColor: \"rgba(229, 229, 229, 0.8)\",\r\n    height: \"auto\",\r\n    padding: \"30px\",\r\n    alignContent: \"center\",\r\n    boxShadow: \"0 6px 6px rgba(0, 0, 0, 0.6)\",\r\n};\r\n\r\nexport const CardXLarge = {\r\n    backgroundColor: \"rgba(229, 229, 229, 0.8)\",\r\n    height: \"auto\",\r\n    width: \"60%\",\r\n    margin: \"50px\",\r\n    boxShadow: \"0 6px 6px rgba(0, 0, 0, 0.6)\",\r\n};\r\n\r\nexport const CardChild = {\r\n    width: \"100%\",\r\n};\r\n\r\nexport const CardTitle = {\r\n    paddingTop: \"10px\",\r\n};\r\n\r\nexport default {\r\n    LoginCardBack,\r\n    RegisterCardBack,\r\n    EmailConfirmationCardBack,\r\n    AccountSetupCardBack,\r\n    CongratulationsCardBack,\r\n    Card,\r\n    CardLarge,\r\n    CardXLarge,\r\n    CardChild,\r\n    CardTitle,\r\n};","import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { loginDriver } from \"../drivers/DriverFunctions\";\r\nimport { loginTrader } from \"../traders/TraderFunctions\";\r\nimport Preloader from \"../../controls/Preloader\";\r\n\r\nimport {\r\n    LoginCardBack,\r\n    Card,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            EmailOrUsername: \"\",\r\n            Password: \"\",\r\n            SignInAs: \"Driver\",\r\n\r\n            ValidEmailOrUsername: false,\r\n            ValidPassword: false,\r\n\r\n            ValidForm: false,\r\n            LoggedInAsDriver: false,\r\n            LoggedInAsTrader: false,\r\n            LoginError: null,\r\n\r\n            Errors: {\r\n                EmailOrUsername: \"\",\r\n                Password: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value }, () => {\r\n            this.validateField(name, value)\r\n        });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidEmailOrUsername = this.state.ValidEmailOrUsername;\r\n        let ValidPassword = this.state.ValidPassword;\r\n\r\n        switch (field) {\r\n            case \"EmailOrUsername\":\r\n                ValidEmailOrUsername = (value !== \"\");\r\n                Errors.EmailOrUsername = ValidEmailOrUsername ? \"\" : \"Email or username is required.\";\r\n                break;\r\n            case \"Password\":\r\n                ValidPassword = (value != \"\");\r\n                Errors.Password = ValidPassword ? \"\" : \"Password is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidEmailOrUsername: ValidEmailOrUsername,\r\n            ValidPassword: ValidPassword\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidEmailOrUsername &&\r\n                    this.state.ValidPassword\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        await event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const user = {\r\n            EmailOrUsername: this.state.EmailOrUsername,\r\n            Password: this.state.Password,\r\n            SignInAs: this.state.SignInAs,\r\n        };\r\n\r\n        if (this.state.SignInAs === \"Driver\") {\r\n            console.log(\"logging in as Driver...\");\r\n\r\n            await loginDriver(user).then(response => {\r\n                console.log(response);\r\n                if (response.Message === \"Login successful.\") {\r\n                    localStorage.setItem(\"Token\", response.Token);\r\n\r\n                    this.setState({\r\n                        LoggedInAsDriver: true,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        LoginError: <div>\r\n                            <label className=\"control-label text-danger\">{response.Message}</label>\r\n                            <br />\r\n                        </div>,\r\n                        Preloader: null,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            console.log(\"Logging in as Trader or Broker...\");\r\n\r\n            await loginTrader(user).then(response => {\r\n                if (response.Message === \"Login successful.\") {\r\n                    localStorage.setItem(\"Token\", response.Token);\r\n\r\n                    this.setState({\r\n                        LoggedInAsTrader: true,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        LoginError: <div>\r\n                            <label className=\"control-label text-danger\">{response.Message}</label>\r\n                            <br />\r\n                        </div>,\r\n                        Preloader: null,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.LoggedInAsDriver) {\r\n            return <Redirect to={\"/drivers\"} />;\r\n        }\r\n        else if (this.state.LoggedInAsTrader) {\r\n            return <Redirect to={\"/traders\"} />;\r\n        }\r\n        else {\r\n            return <div>\r\n                <div className=\"middle\" style={LoginCardBack}>\r\n                    <div className=\"theme-default animated fadeIn\" style={Card} >\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/login.png\" alt=\"Login.png\" height=\"60\" />\r\n                            <div className=\"type-h3\" style={CardTitle}>Sign In</div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"EmailOrUsername\" className=\"control-label\">Email or Username</label>\r\n                                    <input type=\"email\" className=\"form-control\" name=\"EmailOrUsername\" placeholder=\"someone@provider.com\"\r\n                                        value={this.state.EmailOrUsername} onChange={this.onChange} />\r\n                                    <span className=\"text-danger\">{this.state.Errors.EmailOrUsername}</span>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"Password\" className=\"control-label\">Password</label>\r\n                                    <input type=\"password\" className=\"form-control\" name=\"Password\" placeholder=\"Password\"\r\n                                        value={this.state.Password} onChange={this.onChange} />\r\n                                    <span className=\"text-danger\">{this.state.Errors.Password}</span>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"control-label\">Sign In As</label>\r\n                                    <div className=\"dropdown\" style={{ width: \"100%\" }}>\r\n                                        <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                            <span>{this.state.SignInAs}</span>\r\n                                            <span className=\"caret\"></span>\r\n                                        </button>\r\n                                        <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                            <li><Link onClick={e => { this.state.SignInAs = \"Driver\" }} onChange={this.onChange}>Driver</Link></li>\r\n                                            <li><Link onClick={e => { this.state.SignInAs = \"Trader\" }} onChange={this.onChange}>Trader</Link></li>\r\n                                            <li><Link onClick={e => { this.state.SignInAs = \"Broker\" }} onChange={this.onChange}>Broker</Link></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    {this.state.LoginError}\r\n                                    <label className=\"control-label\"><Link to=\"/\">Forgot password</Link></label>\r\n                                    <br />\r\n                                    <label className=\"control-label\">No account? <span><Link to=\"/register\">Register now</Link></span></label>\r\n                                </div>\r\n                                <div>\r\n                                    <input type=\"submit\" value=\"Sign In\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.Preloader}\r\n            </div>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default Login;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { registerDriver } from \"../drivers/DriverFunctions\";\r\nimport { registerTrader } from \"../traders/TraderFunctions\"\r\nimport Strings from \"../../res/strings\";\r\nimport { Required } from \"../../styles/MiscellaneousStyles\";\r\n\r\nimport {\r\n    RegisterCardBack,\r\n    Card,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            Email: \"\",\r\n            Password: \"\",\r\n            ConfirmPassword: \"\",\r\n            RegisterAs: \"Driver\",\r\n            NullError: false,\r\n\r\n            PasswordsMatched: false,\r\n            UsernameOrEmailTaken: false,\r\n            ValidEmail: false,\r\n            ValidPassword: false,\r\n            ValidForm: false,\r\n            Agreed: false,\r\n\r\n            Errors: {\r\n                Email: \"\",\r\n                Password: \"\",\r\n                ConfirmPassword: \"\",\r\n                Agreed: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let fieldValidationErrors = this.state.Errors;\r\n        let ValidEmail = this.state.ValidEmail;\r\n        let ValidPassword = this.state.ValidPassword;\r\n        let PasswordsMatched = this.state.PasswordsMatched;\r\n        let Agreed = this.state.Agreed;\r\n\r\n        switch (field) {\r\n            case \"Email\":\r\n                ValidEmail = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n                fieldValidationErrors.Email = ValidEmail ? \"\" : \"Email is invalid.\";\r\n                break;\r\n            case \"Password\":\r\n                ValidPassword = value.length >= 6;\r\n                fieldValidationErrors.Password = ValidPassword ? \"\" : \"Password is too short.\";\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                PasswordsMatched = this.state.Password === value;\r\n                fieldValidationErrors.ConfirmPassword = PasswordsMatched ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n            case \"IsAgree\":\r\n                Agreed = this.refs.agreementCheckBox.checked;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: fieldValidationErrors,\r\n            ValidEmail: ValidEmail,\r\n            ValidPassword: ValidPassword,\r\n            PasswordsMatched: PasswordsMatched,\r\n            Agreed: Agreed,\r\n        }, this.validateForm);\r\n    }\r\n\r\n    validateForm() {\r\n        this.setState({\r\n            ValidForm: this.state.ValidEmail &&\r\n                this.state.ValidPassword &&\r\n                this.state.PasswordsMatched &&\r\n                this.state.Agreed\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.Username === \"\" ||\r\n            this.state.Email === \"\" ||\r\n            this.state.Password === \"\" ||\r\n            this.state.ConfirmPassword === \"\") {\r\n\r\n            this.setState({\r\n                NullError: true,\r\n                UsernameOrEmailTaken: false,\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const newCredentials = {\r\n            Username: this.state.Username,\r\n            Password: this.state.Password,\r\n            Email: this.state.Email,\r\n            RegisterAs: this.state.RegisterAs,\r\n        }\r\n\r\n        if (newCredentials.RegisterAs == \"Driver\") {\r\n            await registerDriver(newCredentials).then(response => {\r\n                if (response && localStorage.newCredentialsToken) {\r\n                    this.props.history.push(\"/emailConfirmation\");\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        NullError: false,\r\n                        UsernameOrEmailTaken: true,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else if (newCredentials.RegisterAs == \"Trader\" || newCredentials.RegisterAs == \"Broker\") {\r\n            console.log(\"Seting up resources for new trader or broker...\");\r\n            await registerTrader(newCredentials).then(response => {\r\n                if (response && localStorage.newCredentialsToken) {\r\n                    this.props.history.push(\"/emailConfirmation\");\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        NullError: false,\r\n                        UsernameOrEmailTaken: true,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"middle\" style={RegisterCardBack}>\r\n                    <div class=\"theme-default animated fadeIn\" style={Card}>\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/signup.png\" alt=\"signup.png\" height=\"60\" />\r\n                            <div class=\"type-h3\" style={CardTitle}>Sign Up</div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"Username\" class=\"control-label\">Username</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"Username\" type=\"text\" name=\"Username\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Username} onChange={this.onChange} required />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"Email\" class=\"control-label\">Email</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"Email\" type=\"email\" name=\"Email\" class=\"form-control\" placeholder=\"someone@example.com\" autocomplete=\"off\"\r\n                                        value={this.state.Email} onChange={this.onChange} />\r\n                                    <span class=\"text-danger\">{this.state.Errors[\"Email\"]}</span>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"Password\" class=\"control-label\">Password</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"Password\" type=\"password\" name=\"Password\" class=\"form-control\"\r\n                                        value={this.state.Password} onChange={this.onChange} />\r\n                                    <span class=\"text-danger\">{this.state.Errors[\"Password\"]}</span>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"ConfirmPassword\" class=\"control-label\">Confirm Password</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"ConfirmPassword\" type=\"password\" name=\"ConfirmPassword\" class=\"form-control\"\r\n                                        value={this.state.ConfirmPassword} onChange={this.onChange} />\r\n                                    <span class=\"text-danger\">{this.state.Errors[\"ConfirmPassword\"]}</span>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"control-label\">Register As</label>\r\n                                    <div class=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                        <button id=\"example-dropdown\" class=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                            <span>{this.state.RegisterAs}</span>\r\n                                            <span class=\"caret\"></span>\r\n                                        </button>\r\n                                        <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                            <li><Link onClick={e => { this.state.RegisterAs = \"Driver\" }} onChange={this.onChange}>Driver</Link></li>\r\n                                            <li><Link onClick={e => { this.state.RegisterAs = \"Trader\" }} onChange={this.onChange}>Trader</Link></li>\r\n                                            <li><Link onClick={e => { this.state.RegisterAs = \"Broker\" }} onChange={this.onChange}>Broker</Link></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div class=\"checkbox\">\r\n                                        <label class=\"control-label\">\r\n                                            <input ref=\"agreementCheckBox\" type=\"checkbox\" name=\"IsAgree\" value=\"\" onChange={this.onChange}></input>\r\n                                            <span>Agree with our </span>\r\n                                            <span>\r\n                                                <Link data-toggle=\"modal\" data-target=\"#terms\">Terms and Conditions</Link>\r\n                                            </span>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    {this.state.NullError &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">All fields are required.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                    {this.state.UsernameOrEmailTaken &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">Username or email is already taken.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                    {this.state.AgreementError &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">You must agree to our terms and conditions.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n\r\n                                    <label class=\"control-label\">Have an account? <span><Link to=\"/login\">Sign In Now!</Link></span></label>\r\n                                </div>\r\n                                <input type=\"submit\" value=\"Next\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"modal\" id=\"terms\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content animated fadeIn\">\r\n                            <div class=\"modal-header\">\r\n                                <h4 class=\"modal-title\" id=\"modal-sample-label\">Terms of Use</h4>\r\n                            </div>\r\n                            <div class=\"modal-body text-justify\">\r\n                                Your privacy is important to us. <span>{Strings.APP_NAME}</span>'s Privacy Statement describes the types of data we collect from you, how we use your Data, and the legal bases we have to process your Data. The Privacy Statement also describes how {String.APP_NAME} uses your content, which is information submitted by you to {Strings.APP_NAME} via the Services. Where processing is based on consent and to the extent permitted by law, by agreeing to these Terms, you consent to {Strings.APP_NAME}� collection, use and disclosure of your content and data as described in the privacy statement. In some cases, we will provide separate notice and request your consent as referenced in the privacy statement.\r\n                                </div>\r\n                            <div class=\"modal-footer\">\r\n                                <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Ok</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Register;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\"; \r\nimport { Required } from \"../../styles/MiscellaneousStyles\";\r\n\r\nimport {\r\n    EmailConfirmationCardBack,\r\n    Card,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass EmailConfirmation extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            ConfirmationCode: 0,\r\n            NullError: false,\r\n            InvalidCodeError: false,\r\n            Errors: {}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        const code = jwt_decode(localStorage.newCredentialsToken).Code; \r\n\r\n        if (this.state.ConfirmationCode === \"\") {\r\n\r\n            this.setState({\r\n                NullError: true,\r\n                InvalidCodeError: false,\r\n            });\r\n\r\n            return;\r\n        }\r\n        else if (this.state.ConfirmationCode != code) {\r\n\r\n            this.setState({\r\n                NullError: false,\r\n                InvalidCodeError: true,\r\n            });\r\n\r\n            return;\r\n        }\r\n        else {\r\n            localStorage.setItem(\"verifiedCredentialsToken\", localStorage.newCredentialsToken);\r\n            localStorage.removeItem(\"newCredentialsToken\");\r\n            this.props.history.push(\"/setupAccount\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.newCredentialsToken) {\r\n            this.props.history.push(\"/register\");\r\n            return <a />\r\n        }\r\n        else {\r\n            return (\r\n                <div class=\"middle\" style={EmailConfirmationCardBack}>\r\n                    <div class=\"theme-default animated fadeIn\" style={Card}>\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/passcode.png\" alt=\"passcode.png\" height=\"60\" />\r\n                            <div class=\"type-h3\" style={CardTitle}>Email Confirmation</div>\r\n                            <div class=\"type-sh3\">We delivered a confirmation code to your email.</div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"ConfirmationCode\" class=\"control-label\">Confirmation Code</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"ConfirmationCode\" type=\"text\" name=\"ConfirmationCode\" class=\"form-control\"\r\n                                        value={this.state.ConfirmationCode} onChange={this.onChange} />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    {this.state.NullError &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">Confirmation code is required.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                    {this.state.InvalidCodeError &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">Invalid code.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <input type=\"submit\" value=\"Next\" class=\"btn btn-primary\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport default EmailConfirmation;","import React, { Component } from \"react\";\r\nimport { setupDriverAccount } from \"../drivers/DriverFunctions\";\r\nimport { setupTraderAccount } from \"../traders/TraderFunctions\";\r\nimport { Required } from \"../../styles/MiscellaneousStyles\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport {\r\n    AccountSetupCardBack,\r\n    CardLarge,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass AccountSetup extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            Email: \"\",\r\n            Password: \"\",\r\n            RegisterAs: \"\",\r\n\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            DateOfBirth: \"\",\r\n            Gender: \"Male\",\r\n            Nationality: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n\r\n            ValidFirstName: false,\r\n            ValidLastName: false,\r\n            ValidDateOfBirth: false,\r\n            ValidNationality: false,\r\n            ValidAddress: false,\r\n            ValidPhoneNumber: false,\r\n\r\n            ValidForm: false,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                DateOfBirth: \"\",\r\n                Nationality: \"\",\r\n                Address: \"\",\r\n                PhoneNumber: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFirstName = this.state.ValidFirstName;\r\n        let ValidLastName = this.state.ValidLastName;\r\n        let ValidDateOfBirth = this.state.ValidDateOfBirth;\r\n        let ValidNationality = this.state.ValidNationality;\r\n        let ValidAddress = this.state.ValidAddress;\r\n        let ValidPhoneNumber = this.state.ValidPhoneNumber;\r\n\r\n        switch (field) {\r\n            case \"FirstName\":\r\n                ValidFirstName = ((value !== \"\") &&\r\n                    (value.match(/^[a-zA-Z ]+$/)));\r\n                Errors.FirstName = ValidFirstName ? \"\" : \"First name is invalid.\";\r\n                break;\r\n            case \"LastName\":\r\n                ValidLastName = ((value !== \"\") &&\r\n                    (value.match(/^[a-zA-Z ]+$/)));\r\n                Errors.LastName = ValidLastName ? \"\" : \"Last name is invalid.\";\r\n                break;\r\n            case \"DateOfBirth\":\r\n                ValidDateOfBirth = (new Date(value) < new Date());\r\n                Errors.DateOfBirth = ValidDateOfBirth ? \"\" : \"Your Birthday must be earlier than today.\";\r\n                break;\r\n            case \"Nationality\":\r\n                ValidNationality = ((value !== \"\") &&\r\n                    (value.match(/^[a-zA-Z ]+$/)));\r\n                Errors.Nationality = ValidNationality ? \"\" : \"Nationality is invalid.\";\r\n                break;\r\n            case \"Address\":\r\n                ValidAddress = (value !== \"\");\r\n                Errors.Address = ValidAddress ? \"\" : \"Address is required.\";\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = value.match(/^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/);\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFirstName: ValidFirstName,\r\n            ValidLastName: ValidLastName,\r\n            ValidDateOfBirth: ValidDateOfBirth,\r\n            ValidNationality: ValidNationality,\r\n            ValidAddress: ValidAddress,\r\n            ValidPhoneNumber: ValidPhoneNumber\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidFirstName &&\r\n                    this.state.ValidLastName &&\r\n                    this.state.ValidDateOfBirth &&\r\n                    this.state.ValidNationality &&\r\n                    this.state.ValidAddress &&\r\n                    this.state.ValidPhoneNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (localStorage.verifiedCredentialsToken) {\r\n            const decoded = jwt_decode(localStorage.verifiedCredentialsToken);\r\n            this.state.Username = decoded.Username;\r\n            this.state.Email = decoded.Email;\r\n            this.state.Password = decoded.Password;\r\n            this.state.RegisterAs = decoded.RegisterAs;\r\n        }\r\n\r\n        const newUser = {\r\n            Username: this.state.Username,\r\n            Email: this.state.Email,\r\n            Password: this.state.Password,\r\n            RegisterAs: this.state.RegisterAs,\r\n            FirstName: this.state.FirstName,\r\n            LastName: this.state.LastName,\r\n            DateOfBirth: this.state.DateOfBirth,\r\n            Gender: this.state.Gender,\r\n            Address: this.state.Address,\r\n            PhoneNumber: this.state.PhoneNumber,\r\n            Nationality: this.state.Nationality,\r\n        }\r\n\r\n        if (newUser.RegisterAs == \"Driver\") {\r\n            await setupDriverAccount(newUser).then(response => {\r\n                localStorage.removeItem(\"verifiedCredentialsToken\");\r\n                localStorage.setItem(\"IsCreatedSuccessfully\", true);\r\n                this.props.history.push(\"/congratulations\");\r\n            });\r\n        }\r\n        if (newUser.RegisterAs == \"Trader\" || newUser.RegisterAs == \"Broker\") {\r\n            await setupTraderAccount(newUser).then(response => {\r\n                localStorage.removeItem(\"verifiedCredentialsToken\");\r\n                localStorage.setItem(\"IsCreatedSuccessfully\", true);\r\n                this.props.history.push(\"/congratulations\");\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.verifiedCredentialsToken) {\r\n            this.props.history.push(\"/register\");\r\n            return <a />\r\n        }\r\n        else {\r\n            return (\r\n                <div class=\"middle\" style={AccountSetupCardBack}>\r\n                    <div class=\"theme-default animated fadeIn\" style={CardLarge}>\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/create_account.png\" atl=\"create_account.png\" height=\"60\" />\r\n                            <div class=\"type-h3\" style={CardTitle}>\r\n                                Create Account\r\n                                </div>\r\n                            <div class=\"type-sh3\">\r\n                                Just one more step, and you're done!\r\n                                </div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-8\">\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"FirstName\" class=\"control-label\">First Name</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"FirstName\" autocomplete=\"off\"\r\n                                                value={this.state.FirstName} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.FirstName}</span>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"LastName\" class=\"control-label\">Last Name</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"LastName\" autocomplete=\"off\"\r\n                                                value={this.state.LastName} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.LastName}</span>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"DateOfBirth\" class=\"control-label\">Date of Birth</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"date\" class=\"form-control\" name=\"DateOfBirth\" autocomplete=\"off\"\r\n                                                value={this.state.DateOfBirth} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.DateOfBirth}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-8\">\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"Gender\" class=\"control-label\">Gender</label>\r\n                                            <div class=\"dropdown\" style={{ width: \"193px\", maxWidth: \"296px\", }}>\r\n                                                <button id=\"example-dropdown\" class=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                    aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                    <span>{this.state.Gender}</span>\r\n                                                    <span class=\"caret\"></span>\r\n                                                </button>\r\n                                                <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                    <li><a onClick={() => { this.setState({ Gender: \"Male\" }); }}>Male</a></li>\r\n                                                    <li><a onClick={() => { this.setState({ Gender: \"Female\" }); }}>Female</a></li>\r\n                                                </ul>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"Nationality\" class=\"control-label\">Nationality</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"Nationality\" autocomplete=\"off\"\r\n                                                value={this.state.Nationality} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.Nationality}</span>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"PhoneNumber\" class=\"control-label\">Phone Number</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autocomplete=\"off\"\r\n                                                placeholder=\"+XXXXXXXXXXXX\" value={this.state.PhoneNumber} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.PhoneNumber}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-8\">\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"Address\" class=\"control-label\">Address</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <textarea class=\"form-control\" rows=\"5\" name=\"Address\" autocomplete=\"off\"\r\n                                                value={this.state.Address} onChange={this.onChange}></textarea>\r\n                                            <span class=\"text-danger\">{this.state.Errors.Address}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"submit\" value=\"Create\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport default AccountSetup;","import React, { Component } from \"react\";\r\nimport { CongratulationsCardBack, CardXLarge } from \"../../styles/CardStyles\";\r\n\r\nclass EmailConfirmation extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n        localStorage.removeItem(\"IsCreatedSuccessfully\");\r\n        this.props.history.push(\"/login\");\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.IsCreatedSuccessfully) {\r\n            this.props.history.push(\"/register\");\r\n            return <a />\r\n        }\r\n        else {\r\n            return (\r\n                <div class=\"middle\" style={CongratulationsCardBack}>\r\n                    <div class=\"jumbotron theme-default animated fadeIn\" style={CardXLarge}>\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                    <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        alt=\"congrats.png\" src=\"./images/congrats.png\" data-source-index=\"2\" />\r\n                                </div>\r\n                                <div class=\"col-md-12 col-md-pull-12\">\r\n                                    <div class=\"type-h3\">Congratulations</div>\r\n                                    <div class=\"type-sh3\">Your account has been created successfully.</div>\r\n                                    <br />\r\n                                    <form noValidate onSubmit={this.onSubmit}>\r\n                                        <input type=\"submit\" value=\"Sign In\" class=\"btn btn-primary\" />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>);\r\n        }\r\n    }\r\n};\r\n\r\nexport default EmailConfirmation;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { getData, uploadDriverProfilePhoto } from \"../../DriverFunctions\";\r\nimport Strings from \"../../../../res/strings\";\r\n\r\nclass ProfilePhoto extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Image: null,\r\n            PhotoURL: \"./images/defaultProfilePhoto.png\",\r\n            UploadProgress: null\r\n        };\r\n\r\n        this.onImageUpload = this.onImageUpload.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"ProfilePhoto\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Profile photo found.\") {\r\n                    let profilePhoto = response.ProfilePhoto;\r\n\r\n                    this.setState({\r\n                        PhotoURL: profilePhoto.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.state({\r\n                        PhotoURL: \"./images/defaultProfilePhoto.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onImageUpload = async event => {\r\n        this.state.Image = event.target.files[0];\r\n        const formData = new FormData();\r\n\r\n        try {\r\n            formData.append(\"Image\", this.state.Image, this.state.Image.name);\r\n\r\n            await axios.post(Strings.IMAGE_UPLOADER, formData, {\r\n                onUploadProgress: event => {\r\n                    this.setState({\r\n                        UploadProgress: <div className=\"progress-bar\">\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                        </div>\r\n                    });\r\n                }\r\n            }).then(async response => {\r\n                response = response.data;\r\n\r\n                if (response.message === \"Image uploaded successfully.\") {\r\n                    const driverProfilePhoto = {\r\n                        Token: localStorage.Token,\r\n                        PhotoURL: response.imageUrl,\r\n                        FileName: response.filename\r\n                    };\r\n\r\n                    let photoURL = response.imageUrl;\r\n\r\n                    await uploadDriverProfilePhoto(driverProfilePhoto).then(response => {\r\n                        if (response.Message === \"Profile photo is updated.\" ||\r\n                            response.Message === \"Profile photo is added.\") {\r\n\r\n                            this.setState({\r\n                                PhotoURL: photoURL,\r\n                                UploadProgress: null\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }).catch(() => {\r\n                this.setState({\r\n                    ImageURL: \"./images/defaultProfilePhoto.png\",\r\n                    UploadProgress: null\r\n                });\r\n            });\r\n        }\r\n        catch (exception) {\r\n            this.setState({\r\n                UploadProgress: null\r\n            });\r\n\r\n            return;\r\n        }\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <input type=\"file\" onChange={this.onImageUpload} style={{ display: \"none\", }} ref={fileInput => this.fileInput = fileInput} />\r\n            <figure className=\"media\">\r\n                <div className=\"media-img media-img-has-play ratio-movie\" style={{\r\n                    width: \"200px\",\r\n                    height: \"200px\",\r\n                    border: \"0px\",\r\n                    padding: \"0px\",\r\n                    border: \"5px solid #3A3A3C\"\r\n                }}>\r\n                    <a href=\"#\" onClick={() => this.fileInput.click()}>\r\n                        <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                            src={this.state.PhotoURL} alt=\"profile_photo.png\" />\r\n                        <i className=\"glyph glyph-edit\"></i>\r\n                    </a>\r\n                </div>\r\n            </figure>\r\n            {this.state.UploadProgress}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ProfilePhoto;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Strings from \"../res/strings\";\r\n\r\nclass ImageUploader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Image: null,\r\n            UploadProgress: null,\r\n        };\r\n\r\n        this.onImageUpload = this.onImageUpload.bind(this);\r\n    }\r\n\r\n    onImageUpload = event => {\r\n        this.state.Image = event.target.files[0];\r\n\r\n        if (this.state.Image) {\r\n            let mimeType = this.state.Image.type;\r\n\r\n            if (!mimeType.startsWith(\"image\")) {\r\n                this.props.OnInvalidImageSelected();\r\n                return;\r\n            }\r\n        }\r\n\r\n        const formData = new FormData();\r\n\r\n        try {\r\n            formData.append(\"Image\", this.state.Image, this.state.Image.name);\r\n        }\r\n        catch (exception) {\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        axios.post(Strings.IMAGE_UPLOADER, formData, {\r\n            onUploadProgress: event => {\r\n                this.setState({\r\n                    UploadProgress: (\r\n                        <div className=\"progress-bar\">\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                        </div>\r\n                    ),\r\n                });\r\n            }\r\n        }).then(async response => {\r\n            this.props.OnImageUploaded(response.data);\r\n\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n        }).catch((error) => {\r\n            this.props.OnImageUploaded(error);\r\n\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async e => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"file\" onChange={this.onImageUpload} style={{ display: \"none\", }} ref={fileInput => this.fileInput = fileInput} />\r\n                <figure className=\"media\">\r\n                    <div className=\"media-img media-img-has-play ratio-movie\" style={{\r\n                        width: this.props.Width,\r\n                        height: this.props.Height,\r\n                        border: \"0px\",\r\n                        padding: \"0px\",\r\n                        border: \"5px solid #3A3A3C\"\r\n                    }}>\r\n                        <a onClick={() => this.fileInput.click()}>\r\n                            <img src={this.props.Source} alt=\"dafault-image.png\" />\r\n                            <i className=\"glyph glyph-edit\"></i>\r\n                        </a>\r\n                    </div>\r\n                </figure>\r\n                {this.state.UploadProgress}\r\n            </div>\r\n                \r\n        );\r\n    }\r\n};\r\n\r\nexport default ImageUploader;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addDrivingLicence } from \"../../../../DriverFunctions.js\";\r\n\r\nclass AddDrivingLicenceDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LicenceNumber: \"\",\r\n            Type: \"\",\r\n            ReleaseDate: new Date(),\r\n            ExpiryDate: new Date(),\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidLicenceNumber: false,\r\n            ValidType: false,\r\n            ValidReleaseDate: false,\r\n            ValidExpiryDate: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                LicenceNumber: \"\",\r\n                Type: \"\",\r\n                ReleaseDate: \"\",\r\n                ExpiryDate: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidLicenceNumber = this.state.ValidLicenceNumber;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidReleaseDate = this.state.ValidReleaseDate;\r\n        let ValidExpiryDate = this.state.ValidExpiryDate;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"LicenceNumber\":\r\n                ValidLicenceNumber = (value !== \"\");\r\n                Errors.LicenceNumber = ValidLicenceNumber ? \"\" : \"Licence number is required.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Licence type is required\";\r\n                break;\r\n            case \"ReleaseDate\":\r\n                ValidReleaseDate = (new Date(value).getTime() < new Date(this.state.ExpiryDate).getTime());\r\n                Errors.ReleaseDate = ValidReleaseDate ? \"\" : \"Release date must be earlier than Expiry date.\";\r\n                break;\r\n            case \"ExpiryDate\":\r\n                ValidExpiryDate = (new Date(value).getTime() > new Date().getTime());\r\n                Errors.ExpiryDate = ValidExpiryDate ? \"\" : \"Expiry Date must be later than today.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidLicenceNumber: ValidLicenceNumber,\r\n            ValidType: ValidType,\r\n            ValidReleaseDate: ValidReleaseDate,\r\n            ValidExpiryDate: ValidExpiryDate,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidLicenceNumber &&\r\n                        this.state.ValidType &&\r\n                        this.state.ValidReleaseDate &&\r\n                        this.state.ValidExpiryDate &&\r\n                        this.state.ValidPhotoURL,\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newDrivingLicence = {\r\n            Token: localStorage.Token,\r\n            LicenceNumber: this.state.LicenceNumber,\r\n            Type: this.state.Type,\r\n            ReleaseDate: this.state.ReleaseDate,\r\n            ExpiryDate: this.state.ExpiryDate,\r\n            PhotoURL: this.state.PhotoURL,\r\n        }\r\n\r\n        console.log(\"Going to add the Driving Licence.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addDrivingLicence(newDrivingLicence).then(response => {\r\n            if (response.Message === \"Driving Licence is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div className=\"modal\" id=\"add-driving-licence-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Add Driving Licence</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"DrivingLicence\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Licence Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"LicenceNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LicenceNumber} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LicenceNumber}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Licence Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Release Date</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"ReleaseDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ReleaseDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ReleaseDate}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Expiry Date</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"ExpiryDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ExpiryDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ExpiryDate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddDrivingLicenceDialog;","import React, { Component } from \"react\";\r\nimport AddDrivingLicenceDialog from \"./AddDrivingLicenceDialog.js\";\r\n\r\nclass AddDrivingLicenceButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddDrivingLicenceDialog: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-driving-licence-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddDrivingLicenceDialog: (<AddDrivingLicenceDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddDrivingLicenceDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />),\r\n                        });\r\n                    }}>\r\n                    <span className=\"fas fa-plus\" aria-hidden=\"true\"></span> Driving Licence\r\n                </button>\r\n                {this.state.AddDrivingLicenceDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddDrivingLicenceButton;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addEntryExitCard } from \"../../../../DriverFunctions.js\";\r\n\r\nclass AddEntryExitCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            EntryExitNumber: \"\",\r\n            Type: \"Simple\",\r\n            ReleaseDate: new Date(),\r\n            NumberOfMonths: \"\",\r\n\r\n            ValidEntryExitNumber: false,\r\n            ValidReleaseDate: false,\r\n            ValidNumberOfMonths: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                EntryExitNumber: \"\",\r\n                ReleaseDate: \"\",\r\n                NumberOfMonths: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidEntryExitNumber = this.state.ValidEntryExitNumber;\r\n        let ValidReleaseDate = this.state.ValidReleaseDate;\r\n        let ValidNumberOfMonths = this.state.ValidNumberOfMonths;\r\n\r\n        switch (field) {\r\n            case \"EntryExitNumber\":\r\n                ValidEntryExitNumber = (value !== \"\");\r\n                Errors.EntryExitNumber = ValidEntryExitNumber ? \"\" : \"Entry/exit number is required.\";\r\n                break;\r\n            case \"ReleaseDate\":\r\n                ValidReleaseDate = (new Date(value).getTime() <= new Date());\r\n                Errors.ReleaseDate = ValidReleaseDate ? \"\" : \"Release date must not be later than today.\";\r\n                break;\r\n            case \"NumberOfMonths\":\r\n                ValidNumberOfMonths = (value !== \"\");\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : \"Number of months is required.\";\r\n\r\n                if (Errors.NumberOfMonths !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNumberOfMonths = (value > 0)\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : \"Number of months must be greater than 0.\";\r\n\r\n                if (Errors.NumberOfMonths !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                let releaseDate = new Date(this.state.ReleaseDate);\r\n                let expiryDate = new Date(releaseDate.setMonth(releaseDate.getMonth() + value));\r\n\r\n                ValidNumberOfMonths = (expiryDate > new Date());\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : `Your card is expired if it is for ${value} months. Your card might be expired on ${expiryDate.toLocaleString()}`;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidEntryExitNumber: ValidEntryExitNumber,\r\n            ValidReleaseDate: ValidReleaseDate,\r\n            ValidNumberOfMonths: ValidNumberOfMonths,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidEntryExitNumber &&\r\n                        this.state.ValidReleaseDate &&\r\n                        this.state.ValidNumberOfMonths\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newEntryExitCard = {\r\n            Token: localStorage.Token,\r\n            EntryExitNumber: this.state.EntryExitNumber,\r\n            Type: this.state.Type,\r\n            ReleaseDate: this.state.ReleaseDate,\r\n            NumberOfMonths: this.state.NumberOfMonths\r\n        };\r\n\r\n        console.log(\"Going to add Entry/Exit Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addEntryExitCard(newEntryExitCard).then(response => {\r\n            if (response.Message === \"Entry/Exit card is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div className=\"modal\" id=\"add-entry-exit-card-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Add Entry/Exit Card</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Entry/Exit Number</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"EntryExitNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.EntryExitNumber} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.EntryExitNumber}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Card Type</label><br />\r\n                                                <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                    <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                        aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                        <span>{this.state.Type}</span>\r\n                                                        <span className=\"caret\"></span>\r\n                                                    </button>\r\n                                                    <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                        <li><a onClick={() => { this.setState({ Type: \"Simple\" }); }}>Simple</a></li>\r\n                                                        <li><a onClick={() => { this.setState({ Type: \"Multiple\" }); }}>Multiple</a></li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Release Date</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"date\" name=\"ReleaseDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.ReleaseDate} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.ReleaseDate}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Number of Months</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"NumberOfMonths\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.NumberOfMonths} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.NumberOfMonths}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddEntryExitCardDialog;","import React, { Component } from \"react\";\r\nimport AddEntryExitCardDialog from \"./AddEntryExitCardDialog.js\";\r\n\r\nclass AddEntryExitCardButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddEntryExitCardDialog: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-entry-exit-card-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddEntryExitCardDialog: <AddEntryExitCardDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddEntryExitCardDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />\r\n                        });\r\n                    }}>\r\n                    <span className=\"fas fa-plus\" aria-hidden=\"true\"></span> Entry/Exit Card</button>\r\n                {this.state.AddEntryExitCardDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddEntryExitCardButton;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addIdentityCard } from \"../../../../DriverFunctions.js\";\r\n\r\nclass AddIdentityCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidIDNumber: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                IDNumber: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidIDNumber = this.state.ValidIDNumber;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"IDNumber\":\r\n                ValidIDNumber = (value !== \"\");\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidIDNumber = (value >= 1000000000 && value <= 9999999999);\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number must be 10-digits long.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidIDNumber: ValidIDNumber,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidIDNumber &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newIdentityCard = {\r\n            Token: localStorage.Token,\r\n            IDNumber: this.state.IDNumber,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to add Identity Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addIdentityCard(newIdentityCard).then(response => {\r\n            if (response.Message === \"Identity card is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div className=\"modal\" id=\"add-identity-card-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Add Identity Card</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    Height=\"220px\"\r\n                                                    Width=\"220px\"\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }}\r\n                                                    ImageCategory=\"IdentityCard\" />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">ID Number</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"IDNumber\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                    value={this.state.IDNumber} onChange={this.onChange} min=\"1000000000\" max=\"9999999999\" />\r\n                                                <span className=\"text-danger\">{this.state.Errors.IDNumber}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddIdentityCardDialog;","import React, { Component } from \"react\";\r\nimport AddIdentityCardDialog from \"./AddIdentityCardDialog.js\";\r\n\r\nclass AddIdentityCardButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddIdentityCardDialog: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-identity-card-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddIdentityCardDialog: <AddIdentityCardDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddIdentityCardDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />,\r\n                        });\r\n                    }}>\r\n                    <span className=\"fas fa-plus\" aria-hidden=\"true\"></span> Identity Card</button>\r\n                {this.state.AddIdentityCardDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddIdentityCardButton;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateDrivingLicence } from \"../../../../DriverFunctions.js\";\r\n\r\nclass EditDrivingLicenceDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LicenceNumber: \"\",\r\n            Type: \"\",\r\n            ReleaseDate: new Date(),\r\n            ExpiryDate: new Date(),\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidLicenceNumber: true,\r\n            ValidType: true,\r\n            ValidReleaseDate: true,\r\n            ValidExpiryDate: true,\r\n            ValidPhotoURL: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                LicenceNumber: \"\",\r\n                Type: \"\",\r\n                ReleaseDate: \"\",\r\n                ExpiryDate: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DrivingLicence\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Driving licence found.\") {\r\n                    let drivingLicence = response.DrivingLicence;\r\n\r\n                    this.setState({\r\n                        DrivingLicenceID: drivingLicence.DrivingLicenceID,\r\n                        LicenceNumber: drivingLicence.LicenceNumber,\r\n                        Type: drivingLicence.Type,\r\n                        ReleaseDate: drivingLicence.ReleaseDate,\r\n                        ExpiryDate: drivingLicence.ExpiryDate,\r\n                        PhotoURL: drivingLicence.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DrivingLicenceID: \"\",\r\n                        LicenceNumber: \"\",\r\n                        Type: \"\",\r\n                        ReleaseDate: new Date(),\r\n                        ExpiryDate: new Date(),\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidLicenceNumber = this.state.ValidLicenceNumber;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidReleaseDate = this.state.ValidReleaseDate;\r\n        let ValidExpiryDate = this.state.ValidExpiryDate;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"LicenceNumber\":\r\n                ValidLicenceNumber = (value !== \"\");\r\n                Errors.LicenceNumber = ValidLicenceNumber ? \"\" : \"Licence number is required.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Licence type is required\";\r\n                break;\r\n            case \"ReleaseDate\":\r\n                ValidReleaseDate = (new Date(value).getTime() < new Date(this.state.ExpiryDate).getTime());\r\n                Errors.ReleaseDate = ValidReleaseDate ? \"\" : \"Release date must be earlier than Expiry date.\";\r\n                break;\r\n            case \"ExpiryDate\":\r\n                ValidExpiryDate = (new Date(value).getTime() > new Date().getTime());\r\n                Errors.ExpiryDate = ValidExpiryDate ? \"\" : \"Expiry Date must be later than today.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidLicenceNumber: ValidLicenceNumber,\r\n            ValidType: ValidType,\r\n            ValidReleaseDate: ValidReleaseDate,\r\n            ValidExpiryDate: ValidExpiryDate,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidLicenceNumber &&\r\n                        this.state.ValidType &&\r\n                        this.state.ValidReleaseDate &&\r\n                        this.state.ValidExpiryDate &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedDrivingLicence = {\r\n            Token: localStorage.Token,\r\n            LicenceNumber: this.state.LicenceNumber,\r\n            Type: this.state.Type,\r\n            ReleaseDate: this.state.ReleaseDate,\r\n            ExpiryDate: this.state.ExpiryDate,\r\n            PhotoURL: this.state.PhotoURL,\r\n        }\r\n\r\n        console.log(\"Going to update the Driving Licence.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateDrivingLicence(updatedDrivingLicence).then(response => {\r\n            if (response.Message === \"Driving Licence is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id=\"edit-driving-licence-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Driving Licence</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"DrivingLicence\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Licence Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"LicenceNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LicenceNumber} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LicenceNumber}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Licence Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Release Date</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"ReleaseDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ReleaseDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ReleaseDate}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Expiry Date</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"ExpiryDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ExpiryDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ExpiryDate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default EditDrivingLicenceDialog;","import React, { Component } from \"react\";\r\nimport EditDriverLicenceDialog from \"./EditDrivingLicenceDialog.js\";\r\nimport { getData, deleteDrivingLicence } from \"../../../../DriverFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass DrivingLicenceListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DrivingLicenceID: \"\",\r\n            LicenceNumber: \"\",\r\n            Type: \"\",\r\n            ReleaseDate: \"\",\r\n            ExpiryDate: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n            EditDrivingLicenceDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedDrivingLicence = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete Driving Licence...`);\r\n\r\n        await deleteDrivingLicence(discardedDrivingLicence).then(response => {\r\n            if (response.Message === \"Driving Licence is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DrivingLicence\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Driving licence found.\") {\r\n                    let drivingLicence = response.DrivingLicence;\r\n\r\n                    this.setState({\r\n                        DrivingLicenceID: drivingLicence.DrivingLicenceID,\r\n                        LicenceNumber: drivingLicence.LicenceNumber,\r\n                        Type: drivingLicence.Type,\r\n                        ReleaseDate: drivingLicence.ReleaseDate,\r\n                        ExpiryDate: drivingLicence.ExpiryDate,\r\n                        PhotoURL: drivingLicence.PhotoURL\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DrivingLicenceID: \"\",\r\n                        LicenceNumber: \"\",\r\n                        Type: \"\",\r\n                        ReleaseDate: \"\",\r\n                        ExpiryDate: \"\",\r\n                        PhotoURL: \"./images/default_image.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"list-items-row\">\r\n                <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#driving-licence-${this.state.DrivingLicenceID}`}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                            <i className=\"glyph glyph-add\"></i>\r\n                            <i className=\"glyph glyph-remove\"></i>\r\n                            <strong>{this.props.Index}</strong>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <img className=\"img-responsive visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                src={this.state.PhotoURL} alt=\"trailer.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>DRIVING LICENCE</span>\r\n                            </div>\r\n                            <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                <span className=\"fas fa-hashtag\" style={{ color: \"#606060\" }}></span>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Licence Number:</span> {this.state.LicenceNumber}\r\n                            </div>\r\n                            <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                <span className=\"fas fa-star-of-life\" style={{ color: \"#606060\" }}></span>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Licence Type:</span> {this.state.Type}\r\n                            </div>\r\n                            <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                <span className=\"fas fa-calendar\" style={{ color: \"#606060\" }}></span>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Release Date:</span> {this.state.ReleaseDate}\r\n                            </div>\r\n                            <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                <span className=\"fas fa-calendar\" style={{ color: \"#606060\" }}></span>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Expiry Date:</span> {this.state.ExpiryDate}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"collapse\" id={`driving-licence-${this.state.DrivingLicenceID}`}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-18 col-md-offset-2\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block\"\r\n                                src={this.state.PhotoURL} alt=\"trailer.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"col-md-4 text-right\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#edit-driving-licence-dialog\"\r\n                                onMouseDown={() => {\r\n                                    this.setState({\r\n                                        EditDrivingLicenceDialog: <EditDriverLicenceDialog\r\n                                            OnCancel={() => {\r\n                                                this.setState({\r\n                                                    EditDrivingLicenceDialog: null\r\n                                                });\r\n                                            }}\r\n                                            OnOK={cancelButton => {\r\n                                                cancelButton.click();\r\n                                                this.onComponentUpdated();\r\n                                            }} />\r\n                                    });\r\n                                }}>\r\n                                Edit\r\n                                </button>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </div>               \r\n                {this.state.Preloader}\r\n                {this.state.EditDrivingLicenceDialog}\r\n            </li>        \r\n        );\r\n    }\r\n};\r\n\r\nexport default DrivingLicenceListItem;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateEntryExitCard } from \"../../../../DriverFunctions.js\";\r\n\r\nclass EditEntryExitCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            EntryExitNumber: \"\",\r\n            Type: \"Simple\",\r\n            ReleaseDate: new Date(),\r\n            NumberOfMonths: \"\",\r\n\r\n            ValidEntryExitNumber: true,\r\n            ValidReleaseDate: true,\r\n            ValidNumberOfMonths: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                EntryExitNumber: \"\",\r\n                ReleaseDate: \"\",\r\n                NumberOfMonths: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"EntryExitCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Entry/exit card found.\") {\r\n                    let entryExitCard = response.EntryExitCard;\r\n\r\n                    this.setState({\r\n                        EntryExitNumber: entryExitCard.EntryExitNumber,\r\n                        Type: entryExitCard.Type,\r\n                        ReleaseDate: entryExitCard.ReleaseDate,\r\n                        NumberOfMonths: entryExitCard.NumberOfMonths\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        EntryExitNumber: \"\",\r\n                        Type: \"Simple\",\r\n                        ReleaseDate: new Date(),\r\n                        NumberOfMonths: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidEntryExitNumber = this.state.ValidEntryExitNumber;\r\n        let ValidReleaseDate = this.state.ValidReleaseDate;\r\n        let ValidNumberOfMonths = this.state.ValidNumberOfMonths;\r\n\r\n        switch (field) {\r\n            case \"EntryExitNumber\":\r\n                ValidEntryExitNumber = (value !== \"\");\r\n                Errors.EntryExitNumber = ValidEntryExitNumber ? \"\" : \"Entry/exit number is required.\";\r\n                break;\r\n            case \"ReleaseDate\":\r\n                ValidReleaseDate = (new Date(value).getTime() <= new Date());\r\n                Errors.ReleaseDate = ValidReleaseDate ? \"\" : \"Release date must not be later than today.\";\r\n                break;\r\n            case \"NumberOfMonths\":\r\n                ValidNumberOfMonths = (value !== \"\");\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : \"Number of months is required.\";\r\n\r\n                if (Errors.NumberOfMonths !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNumberOfMonths = (value > 0)\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : \"Number of months must be greater than 0.\";\r\n\r\n                if (Errors.NumberOfMonths !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                let releaseDate = new Date(this.state.ReleaseDate);\r\n                let expiryDate = new Date(releaseDate.setMonth(releaseDate.getMonth() + value));\r\n\r\n                ValidNumberOfMonths = (expiryDate > new Date());\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : `Your card is expired if it is for ${value} months. Your card might be expired on ${expiryDate.toLocaleString()}`;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidEntryExitNumber: ValidEntryExitNumber,\r\n            ValidReleaseDate: ValidReleaseDate,\r\n            ValidNumberOfMonths: ValidNumberOfMonths,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidEntryExitNumber &&\r\n                    this.state.ValidReleaseDate &&\r\n                    this.state.ValidNumberOfMonths\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedEntryExitCard = {\r\n            Token: localStorage.Token,\r\n            EntryExitNumber: this.state.EntryExitNumber,\r\n            Type: this.state.Type,\r\n            ReleaseDate: this.state.ReleaseDate,\r\n            NumberOfMonths: this.state.NumberOfMonths\r\n        };\r\n\r\n        console.log(\"Going to update Entry/Exit Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateEntryExitCard(updatedEntryExitCard).then(response => {\r\n            if (response.Message === \"Entry/Exit card is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal\" id=\"edit-entry-exit-card-dialog\"\r\n                tabindex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Edit Entry/Exit Card</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Entry/Exit Number</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"EntryExitNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.EntryExitNumber} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.EntryExitNumber}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Card Type</label><br />\r\n                                                <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                    <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                        aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                        <span>{this.state.Type}</span>\r\n                                                        <span className=\"caret\"></span>\r\n                                                    </button>\r\n                                                    <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                        <li><a onClick={() => {\r\n                                                            this.setState({ Type: \"Simple\" });\r\n                                                            this.validateField(\"\", \"\");\r\n                                                        }}>Simple</a></li>\r\n                                                        <li><a onClick={() => {\r\n                                                            this.setState({ Type: \"Multiple\" });\r\n                                                            this.validateField(\"\", \"\");\r\n                                                        }}>Multiple</a></li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Release Date</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"date\" name=\"ReleaseDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.ReleaseDate} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.ReleaseDate}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Number of Months</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"NumberOfMonths\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.NumberOfMonths} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.NumberOfMonths}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default EditEntryExitCardDialog;","import React, { Component } from \"react\";\r\nimport EditEntryExitCardDialog from \"./EditEntryExitCardDialog.js\";\r\nimport { getData, deleteEntryExitCard } from \"../../../../DriverFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass EntryExitCardListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            EntryExitCardID: \"\",\r\n            EntryExitNumber: \"\",\r\n            Type: \"Simple\",\r\n            ReleaseDate: \"\",\r\n            NumberOfMonths: \"\",\r\n\r\n            EditEntryExitCardDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedEntryExitCard = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete Exit/Entry card.`);\r\n\r\n        await deleteEntryExitCard(discardedEntryExitCard).then(response => {\r\n            if (response.Message === \"Entry/Exit card is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"EntryExitCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Entry/exit card found.\") {\r\n                    let entryExitCard = response.EntryExitCard;\r\n\r\n                    this.setState({\r\n                        EntryExitCardID: entryExitCard.EntryExitCardID,\r\n                        EntryExitNumber: entryExitCard.EntryExitNumber,\r\n                        Type: entryExitCard.Type,\r\n                        ReleaseDate: entryExitCard.ReleaseDate,\r\n                        NumberOfMonths: entryExitCard.NumberOfMonths,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        EntryExitCardID: \"\",\r\n                        EntryExitNumber: \"\",\r\n                        Type: \"Simple\",\r\n                        ReleaseDate: \"\",\r\n                        NumberOfMonths: \"\",\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"list-items-row\">\r\n                <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#entry-exit-card-${this.state.EntryExitCardID}`}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                            <i className=\"glyph glyph-add\"></i>\r\n                            <i className=\"glyph glyph-remove\"></i>\r\n                            <strong>{this.props.Index}</strong>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <img className=\"img-responsive visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                src=\"./images/default_image.png\" alt=\"trailer.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>ENTRY/EXIT CARD</span>\r\n                            </div>\r\n                            <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                <span className=\"fas fa-hashtag\" style={{ color: \"#606060\" }}></span>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Entry/Exit Number:</span> {this.state.EntryExitNumber}\r\n                            </div>\r\n                            <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                <span className=\"fas fa-star-of-life\" style={{ color: \"#606060\" }}></span>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Licence Type:</span> {this.state.Type}\r\n                            </div>\r\n                            <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                <span className=\"fas fa-calendar\" style={{ color: \"#606060\" }}></span>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Release Date:</span> {this.state.ReleaseDate}\r\n                            </div>\r\n                            <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                <span className=\"fas fa-calendar\" style={{ color: \"#606060\" }}></span>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Number of Months:</span> {this.state.NumberOfMonths}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"collapse\" id={`entry-exit-card-${this.state.EntryExitCardID}`}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-18 col-md-offset-2\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block\"\r\n                                src=\"./images/default_image.png\" alt=\"trailer.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"col-md-4 text-right\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#edit-entry-exit-card-dialog\"\r\n                                onMouseDown={() => {\r\n                                    this.setState({\r\n                                        EditEntryExitCardDialog: <EditEntryExitCardDialog\r\n                                            OnCancel={() => {\r\n                                                this.setState({\r\n                                                    EditEntryExitCardDialog: null\r\n                                                });\r\n                                            }}\r\n                                            OnOK={cancelButton => {\r\n                                                cancelButton.click();\r\n                                                this.onComponentUpdated();\r\n                                            }} />\r\n                                    });\r\n                                }}>\r\n                                Edit\r\n                                </button>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </div>               \r\n                {this.state.Preloader}\r\n                {this.state.EditEntryExitCardDialog}\r\n            </li>        \r\n        );\r\n    }\r\n};\r\n\r\nexport default EntryExitCardListItem;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateIdentityCard } from \"../../../../DriverFunctions.js\";\r\n\r\nclass EditIdentityCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidIDNumber: true,\r\n            ValidPhotoURL: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                IDNumber: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Identity card found.\") {\r\n                    let identityCard = response.IdentityCard;\r\n\r\n                    this.setState({\r\n                        IDNumber: identityCard.IDNumber,\r\n                        PhotoURL: identityCard.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        IDNumber: \"\",\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidIDNumber = this.state.ValidIDNumber;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"IDNumber\":\r\n                ValidIDNumber = (value !== \"\");\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidIDNumber = (value >= 1000000000 && value <= 9999999999);\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number must be 10-digits long.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidIDNumber: ValidIDNumber,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidIDNumber &&\r\n                    this.state.ValidPhotoURL\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedIdentityCard = {\r\n            Token: localStorage.Token,\r\n            IDNumber: this.state.IDNumber,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to update Identity Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateIdentityCard(updatedIdentityCard).then(response => {\r\n            if (response.Message === \"Identity card is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id=\"edit-identity-card-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Identity Card</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"IdentityCard\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">ID Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"IDNumber\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.IDNumber} onChange={this.onChange} min=\"1000000000\" max=\"99999999999\" />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.IDNumber}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default EditIdentityCardDialog;","import React, { Component } from \"react\";\r\nimport EditIdentityCardDialog from \"./EditIdentityCardDialog.js\";\r\nimport { getData, deleteIdentityCard } from \"../../../../DriverFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass IdentityCardListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IdentityCardID: \"\",\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            EditIdentityCardDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedIdentityCard = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete Identity Card.`);\r\n\r\n        await deleteIdentityCard(discardedIdentityCard).then(response => {\r\n            if (response.Message === \"Identity card is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Identity card found.\") {\r\n                    let identityCard = response.IdentityCard;\r\n\r\n                    this.setState({\r\n                        IdentityCardID: identityCard.IdentityCardID,\r\n                        IDNumber: identityCard.IDNumber,\r\n                        PhotoURL: identityCard.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        IdentityCardID: \"\",\r\n                        IDNumber: \"\",\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return <li className=\"list-items-row\">\r\n            <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#identity-card-${this.state.IdentityCardID}`}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-2\">\r\n                        <i className=\"glyph glyph-add\"></i>\r\n                        <i className=\"glyph glyph-remove\"></i>\r\n                        <strong>{this.props.Index}</strong>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <img className=\"img-responsive visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                            src={this.state.PhotoURL} alt=\"identity_card.png\" data-source-index=\"2\" style={{\r\n                                overflow: \"hidden\",\r\n                                border: \"5px solid #3A3A3C\",\r\n                                margin: \"5px\"\r\n                            }} />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                            <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>IDENTITY CARD</span>\r\n                        </div>\r\n                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                            <span className=\"fas fa-hashtag\" style={{ color: \"#606060\" }}></span>\r\n                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>ID Number:</span> {this.state.IDNumber}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`identity-card-${this.state.IdentityCardID}`}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-18 col-md-offset-2\">\r\n                        <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block\"\r\n                            src={this.state.PhotoURL} alt=\"trailer.png\" data-source-index=\"2\" style={{\r\n                                overflow: \"hidden\",\r\n                                border: \"5px solid #3A3A3C\",\r\n                                margin: \"5px\"\r\n                            }} />\r\n                    </div>\r\n                    <div className=\"col-md-4 text-right\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary\"\r\n                            data-toggle=\"modal\"\r\n                            data-target=\"#edit-identity-card-dialog\"\r\n                            onMouseDown={() => {\r\n                                this.setState({\r\n                                    EditIdentityCardDialog: (<EditIdentityCardDialog\r\n                                        OnCancel={() => {\r\n                                            this.setState({\r\n                                                EditIdentityCardDialog: null\r\n                                            });\r\n                                        }}\r\n                                        OnOK={cancelButton => {\r\n                                            cancelButton.click();\r\n                                            this.onComponentUpdated();\r\n                                        }} />)\r\n                                });\r\n                            }}>\r\n                            Edit\r\n                                </button>\r\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {this.state.Preloader}\r\n            {this.state.EditIdentityCardDialog}\r\n        </li>;\r\n    }\r\n};\r\n\r\nexport default IdentityCardListItem;","import React, { Component } from \"react\";\r\nimport AddDrivingLicenceButton from \"./drivingLicence/AddDrivingLicenceButton.js\";\r\nimport AddEntryExitCardButton from \"./entryExitCard/AddEntryExitCardButton.js\";\r\nimport AddIdentityCardButton from \"./identityCard/AddIdentityCardButton.js\";\r\nimport DrivingLicenceListItem from \"./drivingLicence/DrivingLicenceListItem.js\"; \r\nimport EntryExitCardListItem from \"./entryExitCard/EntryExitCardListItem.js\";\r\nimport IdentityCardListItem from \"./identityCard/IdentityCardListItem.js\";\r\nimport { getData } from \"../../../DriverFunctions\";\r\n\r\nclass DocumentsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddDrivingLicenceButton: null,\r\n            AddEntryExitCardButton: null,\r\n            AddIdentityCardButton: null, \r\n            DrivingLicenceListItem: null,\r\n            EntryExitCardListItem: null,\r\n            IdentityCardListItem: null,\r\n        };\r\n\r\n        this.onDocumentsUpdated = this.onDocumentsUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onDocumentsUpdated();\r\n    }\r\n\r\n    onDocumentsUpdated = () => {\r\n        let index = 0;\r\n        let drivingLicence;\r\n        let entryExitCard;\r\n        let identityCard;\r\n\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DrivingLicence\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Driving licence found.\") {\r\n                    drivingLicence = response.DrivingLicence;\r\n                }\r\n                else {\r\n                    drivingLicence = undefined;\r\n                }\r\n\r\n                request = {\r\n                    Token: localStorage.Token,\r\n                    Get: \"EntryExitCard\"\r\n                };\r\n\r\n                getData(request).then(response => {\r\n                    if (response.Message === \"Entry/exit card found.\") {\r\n                        entryExitCard = response.EntryExitCard;\r\n                    }\r\n                    else {\r\n                        entryExitCard = undefined;\r\n                    }\r\n\r\n                    request = {\r\n                        Token: localStorage.Token,\r\n                        Get: \"IdentityCard\"\r\n                    };\r\n\r\n                    getData(request).then(response => {\r\n                        if (response.Message === \"Identity card found.\") {\r\n                            identityCard = response.IdentityCard;\r\n                        }\r\n                        else {\r\n                            identityCard = undefined;\r\n                        }\r\n\r\n                        (drivingLicence) ? this.setState({\r\n                            AddDrivingLicenceButton: null,\r\n                            DrivingLicenceListItem: <DrivingLicenceListItem\r\n                                Index={++index}\r\n                                OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                        }) : this.setState({\r\n                            AddDrivingLicenceButton: <AddDrivingLicenceButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                            DrivingLicenceListItem: null\r\n                        });\r\n\r\n                        (entryExitCard) ? this.setState({\r\n                            AddEntryExitCardButton: null,\r\n                            EntryExitCardListItem: <EntryExitCardListItem\r\n                                Index={++index}\r\n                                OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                        }) : this.setState({\r\n                            AddEntryExitCardButton: <AddEntryExitCardButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                            EntryExitCardListItem: null\r\n                        });\r\n\r\n                        (identityCard) ? this.setState({\r\n                            AddIdentityCardButton: null,\r\n                            IdentityCardListItem: <IdentityCardListItem\r\n                                Index={++index}\r\n                                OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                        }) : this.setState({\r\n                            AddIdentityCardButton: <AddIdentityCardButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                            IdentityCardListItem: null\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Documents</div>\r\n                <div style={{ padding: \"10px\", backgroundColor: \"#E5E5E5\" }}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-18 col-md-offset-2\"></div>\r\n                        <div className=\"col-md-4 text-right\">\r\n                            {this.state.AddDrivingLicenceButton}\r\n                            {this.state.AddEntryExitCardButton}\r\n                            {this.state.AddIdentityCardButton}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {this.state.DrivingLicenceListItem}\r\n                    {this.state.EntryExitCardListItem}\r\n                    {this.state.IdentityCardListItem}\r\n                </ol>\r\n            </section>         \r\n        );\r\n    }\r\n};\r\n\r\nexport default DocumentsList;","import React, { Component } from \"react\";\r\nimport ProfilePhoto from \"./ProfilePhoto\";\r\nimport DocumentsList from \"./documents/DocumentsList.js\";\r\nimport { getData } from \"../../DriverFunctions.js\";\r\n\r\nclass Profile extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            Username: \"\",\r\n            Password: \"\",\r\n            Email: \"\",\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\",\r\n\r\n            WarningAlert: null,\r\n            Errors: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Driver\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Driver found.\") {\r\n                    let driver = response.Driver;\r\n\r\n                    this.setState({\r\n                        Username: driver.Username,\r\n                        Password: driver.Password,\r\n                        Email: driver.Email,\r\n                        FirstName: driver.FirstName,\r\n                        LastName: driver.LastName,\r\n                        DateOfBirth: driver.DateOfBirth,\r\n                        Gender: driver.Gender,\r\n                        Address: driver.Address,\r\n                        PhoneNumber: driver.PhoneNumber,\r\n                        Nationality: driver.Nationality,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Username: \"\",\r\n                        Password: \"\",\r\n                        Email: \"\",\r\n                        FirstName: \"\",\r\n                        LastName: \"\",\r\n                        Address: \"\",\r\n                        PhoneNumber: \"\",\r\n                        Gender: \"\",\r\n                        Nationality: \"\",\r\n                        DateOfBirth: \"\",\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group\" style={{ marginBottom: \"5px\", }}>\r\n                                <ProfilePhoto />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-18\">\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                {this.state.FirstName + \" \" + this.state.LastName}\r\n                            </div>\r\n                            <div className=\"type-sh3\">\r\n                                <span className=\"fas fa-car\" style={{ color: \"#606060\" }}></span>   Driver\r\n                                    </div>\r\n                            <div>\r\n                                <ol className=\"list-items theme-alt\">\r\n                                    <li className=\"list-items-row\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-2\">\r\n                                                <strong><span className=\"fas fa-at\" style={{ color: \"#008575\" }}></span></strong>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Username:</a>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                {this.state.Username}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"list-items-row\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-2\">\r\n                                                <strong><span className=\"fas fa-envelope\" style={{ color: \"#008575\", }}></span></strong>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Email:</a>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                {this.state.Email}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"list-items-row\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-2\">\r\n                                                <strong><span className=\"fas fa-phone\" style={{ color: \"#008575\" }}></span></strong>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Phone Number:</a>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                {this.state.PhoneNumber}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#00221E\" }}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"type-h3\" style={{ paddingTop: \"10px\", }}>\r\n                                Details\r\n                                    </div>\r\n                            <ol className=\"list-items theme-alt\">\r\n                                <li className=\"list-items-row\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-2\">\r\n                                            <strong><span className=\"fas fa-birthday-cake\" style={{ color: \"#008575\", }}></span></strong>\r\n                                        </div>\r\n                                        <div className=\"col-md-4\">\r\n                                            <a style={{ textDecoration: \"none\", }}>Date of Birth:</a>\r\n                                        </div>\r\n                                        <div className=\"col-md-4\">\r\n                                            {this.state.DateOfBirth}\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                                <li className=\"list-items-row\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-2\">\r\n                                            {this.state.Gender === \"Male\" &&\r\n                                                <strong><span className=\"fas fa-male\" style={{ color: \"#008575\", }}></span></strong>\r\n                                            }\r\n                                            {this.state.Gender === \"Female\" &&\r\n                                                <strong><span className=\"fas fa-female\" style={{ color: \"#008575\", }}></span></strong>\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"col-md-4\">\r\n                                            <a style={{ textDecoration: \"none\", }}>Gender:</a>\r\n                                        </div>\r\n                                        <div className=\"col-md-4\">\r\n                                            {this.state.Gender}\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                                <li className=\"list-items-row\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-2\">\r\n                                            <strong><span className=\"fas fa-flag\" style={{ color: \"#008575\" }}></span></strong>\r\n                                        </div>\r\n                                        <div className=\"col-md-4\">\r\n                                            <a style={{ textDecoration: \"none\", }}>Nationality:</a>\r\n                                        </div>\r\n                                        <div className=\"col-md-4\">\r\n                                            {this.state.Nationality}\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                                <li className=\"list-items-row\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-2\">\r\n                                            <strong><span className=\"fas fa-map-marker\" style={{ color: \"#008575\" }}></span></strong>\r\n                                        </div>\r\n                                        <div className=\"col-md-4\">\r\n                                            <a style={{ textDecoration: \"none\", }}>Address:</a>\r\n                                        </div>\r\n                                        <div className=\"col-md-4\">\r\n                                            {this.state.Address}\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            </ol>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <DocumentsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Profile;","import React, { Component } from \"react\";\r\nimport { getData, updateTruck } from \"../../DriverFunctions\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\n\r\nclass TruckSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            PlateNumber: \"\",\r\n            Owner: \"\",\r\n            ProductionYear: \"\",\r\n            Brand: \"\",\r\n            Model: \"\",\r\n            Type: \"\",\r\n            MaximumWeight: \"\",\r\n\r\n            ValidPlateNumber: true,\r\n            ValidOwner: true,\r\n            ValidProductionYear: true,\r\n            ValidBrand: true,\r\n            ValidModel: true,\r\n            ValidType: true,\r\n            ValidMaximumWeight: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                PlateNumber: \"\",\r\n                Owner: \"\",\r\n                ProductionYear: \"\",\r\n                Brand: \"\",\r\n                Model: \"\",\r\n                Type: \"\",\r\n                MaximumWeight: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Truck\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Truck found.\") {\r\n                    let truck = response.Truck;\r\n\r\n                    this.setState({\r\n                        PlateNumber: truck.PlateNumber,\r\n                        Owner: truck.Owner,\r\n                        ProductionYear: truck.ProductionYear,\r\n                        Brand: truck.Brand,\r\n                        Model: truck.Model,\r\n                        Type: truck.Type,\r\n                        MaximumWeight: truck.MaximumWeight\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        PlateNumber: \"\",\r\n                        Owner: \"\",\r\n                        ProductionYear: \"\",\r\n                        Brand: \"\",\r\n                        Model: \"\",\r\n                        Type: \"\",\r\n                        MaximumWeight: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidPlateNumber = this.state.ValidPlateNumber;\r\n        let ValidOwner = this.state.ValidOwner;\r\n        let ValidProductionYear = this.state.ValidProductionYear;\r\n        let ValidBrand = this.state.ValidBrand;\r\n        let ValidModel = this.state.ValidModel;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidMaximumWeight = this.state.MaximumWeight;\r\n\r\n        switch (field) {\r\n            case \"PlateNumber\":\r\n                ValidPlateNumber = ((value !== \"\") && (value >= 1 && value <= 999));\r\n                Errors.PlateNumber = ValidPlateNumber ? \"\" : \"Plate Number must be between 001 and 999.\";\r\n                break;\r\n            case \"Owner\":\r\n                ValidOwner = (value !== \"\");\r\n                Errors.Owner = ValidOwner ? \"\" : \"Owner is required.\";\r\n                break;\r\n            case \"ProductionYear\":\r\n                let currentYear = new Date().getFullYear();\r\n                ValidProductionYear = ((value !== \"\") && (value >= 2000 && value <= currentYear));\r\n                Errors.ProductionYear = ValidProductionYear ? \"\" : `Production Year must be between 2000 and ${currentYear}`;\r\n                break;\r\n            case \"Brand\":\r\n                ValidBrand = (value !== \"\");\r\n                Errors.Brand = ValidBrand ? \"\" : \"Brand is required.\";\r\n                break;\r\n            case \"Model\":\r\n                ValidModel = (value !== \"\");\r\n                Errors.Model = ValidModel ? \"\" : \"Model is required.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required\";\r\n                break;\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n\r\n                if (Errors.MaximumWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidMaximumWeight = (value >= 700);\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum weight must be greater than 699.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPlateNumber: ValidPlateNumber,\r\n            ValidOwner: ValidOwner,\r\n            ValidProductionYear: ValidProductionYear,\r\n            ValidBrand: ValidBrand,\r\n            ValidModel: ValidModel,\r\n            ValidType: ValidType,\r\n            ValidMaximumWeight: ValidMaximumWeight\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidPlateNumber &&\r\n                    this.state.ValidOwner &&\r\n                    this.state.ValidProductionYear &&\r\n                    this.state.ValidBrand &&\r\n                    this.state.ValidModel &&\r\n                    this.state.ValidType &&\r\n                    this.state.MaximumWeight\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedTruck = {\r\n            Token: localStorage.Token,\r\n            PlateNumber: this.state.PlateNumber,\r\n            Owner: this.state.Owner,\r\n            ProductionYear: this.state.ProductionYear,\r\n            Brand: this.state.Brand,\r\n            Model: this.state.Model,\r\n            Type: this.state.Type,\r\n            MaximumWeight: this.state.MaximumWeight\r\n        };\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateTruck(updatedTruck).then(response => {\r\n            if (response.Message === \"Truck is updated.\") {\r\n                this.setState({\r\n                    Preloader: null,\r\n                    ValidForm: false\r\n                });\r\n\r\n                this.props.OnTruckSettingsUpdated();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Truck Settings</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-list-ol\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"number\" name=\"PlateNumber\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.PlateNumber} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Plate Number</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.PlateNumber}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-user\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"Owner\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Owner} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Owner</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.Owner}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-calendar-day\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"number\" name=\"ProductionYear\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.ProductionYear} onChange={this.onChange} placeholder=\"XXXX\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Production Year</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"ProductionYear\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-copyright\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"Brand\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Brand} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Brand</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.Brand}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-list-ol\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"Model\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Model} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Truck Model</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.Model}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-cog\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Type} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Truck Type</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.Type}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-weight\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"number\" name=\"MaximumWeight\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Maximum Weight (GVW)</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.MaximumWeight}</div>\r\n                            </div>\r\n                        </div>                      \r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default TruckSettings;","import React, { Component } from \"react\";\r\nimport { addTruck } from \"../../DriverFunctions\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { Required } from \"../../../../styles/MiscellaneousStyles\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader\";\r\n\r\nclass AddTruckDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PlateNumber: \"\",\r\n            Owner: \"\",\r\n            ProductionYear: \"\",\r\n            Brand: \"\",\r\n            Model: \"\",\r\n            Type: \"\",\r\n            MaximumWeight: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidPlateNumber: false,\r\n            ValidOwner: false,\r\n            ValidProductionYear: false,\r\n            ValidBrand: false,\r\n            ValidModel: false,\r\n            ValidType: false,\r\n            ValidMaximumWeight: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                PlateNumber: \"\",\r\n                Owner: \"\",\r\n                ProductionYear: \"\",\r\n                Brand: \"\",\r\n                Model: \"\",\r\n                Type: \"\",\r\n                MaximumWeight: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidPlateNumber = this.state.ValidPlateNumber;\r\n        let ValidOwner = this.state.ValidOwner;\r\n        let ValidProductionYear = this.state.ValidProductionYear;\r\n        let ValidBrand = this.state.ValidBrand;\r\n        let ValidModel = this.state.ValidModel;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidMaximumWeight = this.state.ValidMaximumWeight;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"PlateNumber\":\r\n                ValidPlateNumber = (value !== \"\");\r\n                Errors.PlateNumber = ValidPlateNumber ? \"\" : \"Plate number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPlateNumber = (value >= 100 && value <= 999);\r\n                Errors.PlateNumber = ValidPlateNumber ? \"\" : \"Plate number must be 3-digits long.\";\r\n                break;\r\n            case \"Owner\":\r\n                ValidOwner = (value !== \"\");\r\n                Errors.Owner = ValidOwner ? \"\" : \"Owner is required.\";\r\n                break;\r\n            case \"ProductionYear\":\r\n                let currentYear = new Date().getFullYear();\r\n                ValidProductionYear = ((value !== \"\") && (value >= 2000 && value <= currentYear));\r\n                Errors.ProductionYear = ValidProductionYear ? \"\" : `Production Year must be between 2000 and ${currentYear}`;\r\n                break;\r\n            case \"Brand\":\r\n                ValidBrand = (value !== \"\");\r\n                Errors.Brand = ValidBrand ? \"\" : \"Brand is required.\";\r\n                break;\r\n            case \"Model\":\r\n                ValidModel = (value !== \"\");\r\n                Errors.Model = ValidModel ? \"\" : \"Model is required.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required\";\r\n                break;\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n\r\n                if (Errors.MaximumWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidMaximumWeight = (value >= 700);\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum weight must be greater than 699.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPlateNumber: ValidPlateNumber,\r\n            ValidOwner: ValidOwner,\r\n            ValidProductionYear: ValidProductionYear,\r\n            ValidBrand: ValidBrand,\r\n            ValidModel: ValidModel,\r\n            ValidType: ValidType,\r\n            ValidMaximumWeight: ValidMaximumWeight,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidPlateNumber &&\r\n                        this.state.ValidOwner &&\r\n                        this.state.ValidProductionYear &&\r\n                        this.state.ValidBrand &&\r\n                        this.state.ValidModel &&\r\n                        this.state.ValidType &&\r\n                        this.state.ValidMaximumWeight &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newTruck = {\r\n            Token: localStorage.Token,\r\n            PlateNumber: this.state.PlateNumber,\r\n            Owner: this.state.Owner,\r\n            ProductionYear: this.state.ProductionYear,\r\n            Brand: this.state.Brand,\r\n            Model: this.state.Model,\r\n            Type: this.state.Type,\r\n            MaximumWeight: this.state.MaximumWeight,\r\n            PhotoURL: this.state.PhotoURL\r\n        }\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addTruck(newTruck).then(response => {\r\n            if (response.Message === \"Truck is added.\") {\r\n                this.props.OnOK();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal\" id=\"add-truck-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <p>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">New Truck</div>\r\n                                    <div className=\"type-sh3\">These detials will be displayed on your profile.</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <ImageUploader Source={this.state.PhotoURL}\r\n                                                    Height=\"220px\" Width=\"220px\"\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }}\r\n                                                    ImageCategory=\"Truck\" />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">                                          \r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Plate Number</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"PlateNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.PlateNumber} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.PlateNumber}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Owner</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Owner\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Owner} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Owner}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Production Year</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"ProductionYear\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.ProductionYear} onChange={this.onChange} placeholder=\"XXXX\" />\r\n                                                <span className=\"text-danger\">{this.state.Errors.ProductionYear}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Brand</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Brand\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Brand} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Brand}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Truck Model</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Model\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Model} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Model}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Truck Type</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Type} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Maximum Weight (GVW)</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"MaximumWeight\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.MaximumWeight}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\"  disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>             \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddTruckDialog;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles\";\r\nimport ImageUploader from \"../../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { addTrailer } from \"../../../DriverFunctions.js\";\r\n\r\nclass AddTrailerDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            MaximumWeight: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n            Type: \"\",\r\n\r\n            ValidMaximumWeight: false,\r\n            ValidPhotoURL: false,\r\n            ValidType: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                MaximumWeight: \"\",\r\n                PhotoURL: \"\",\r\n                Type: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidMaximumWeight = this.state.ValidMaximumWeight;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n        let ValidType = this.state.ValidType;\r\n\r\n        switch (field) {\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n\r\n                if (Errors.MaximumWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidMaximumWeight = (value >= 700);\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum weight must be greater than 699.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidMaximumWeight: ValidMaximumWeight,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n            ValidType: ValidType\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidMaximumWeight &&\r\n                        this.state.ValidPhotoURL &&\r\n                        this.state.ValidType\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newTrailer = {\r\n            Token: localStorage.Token,\r\n            MaximumWeight: this.state.MaximumWeight,\r\n            PhotoURL: this.state.PhotoURL,\r\n            Type: this.state.Type\r\n        }\r\n\r\n        console.log(\"Going to add the trailer...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addTrailer(newTrailer).then(response => {\r\n            if (response.Message === \"Trailer is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id=\"add-trailer-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">New Trailer</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\" Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Maximum Weight (GVW)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"MaximumWeight\" className=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.MaximumWeight}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Trailer Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddTrailerDialog;","import React, { Component } from \"react\";\r\nimport AddTrailerDialog from \"./AddTrailerDialog\";\r\n\r\nclass AddTrailer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddTrailerDialog: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron theme-dark\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-24 text-center\">\r\n                            <img src=\"./images/trailer.png\" alt=\"trailer.png\" height=\"50\" />\r\n                            <h3 style={{paddingTop:\"5px\"}}>Trailers</h3>\r\n                            <div className=\"type-sh3\">Your Truck is All Set Up</div>\r\n                            <div className=\"col-md-12 col-md-offset-6\">\r\n                                <div className=\"type-p3\">\r\n                                    RECOMMENDED: Since your truck is all set up, you're good to go for adding up to TWO trailers to it.\r\n                                </div>\r\n                                <div className=\"btn-group\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-primary\"\r\n                                        style={{ minWidth: \"152px\" }}\r\n                                        data-toggle=\"modal\"\r\n                                        data-target=\"#add-trailer-dialog\"\r\n                                        onMouseDown={() => {\r\n                                            this.setState({\r\n                                                AddTrailerDialog: <AddTrailerDialog\r\n                                                    OnCancel={() => {\r\n                                                        this.setState({\r\n                                                            AddTrailerDialog: null\r\n                                                        });\r\n                                                    }}\r\n                                                    OnOK={cancelButton => {\r\n                                                        cancelButton.click();\r\n                                                        this.props.OnTrailerAdded();\r\n                                                    }} />\r\n                                            });\r\n                                        }}>\r\n                                        <span className=\"fas fa-plus\" aria-hidden=\"true\"></span>Add Trailer</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.AddTrailerDialog}\r\n            </div>           \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddTrailer;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles\";\r\nimport ImageUploader from \"../../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { updateTrailer } from \"../../../DriverFunctions.js\";\r\n\r\nclass EditTrailerDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            MaximumWeight: this.props.Trailer.MaximumWeight,\r\n            PhotoURL: this.props.Trailer.PhotoURL,\r\n            Type: this.props.Trailer.Type,\r\n\r\n            ValidMaximumWeight: true,\r\n            ValidPhotoURL: true,\r\n            ValidType: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                MaximumWeight: \"\",\r\n                PhotoURL: \"\",\r\n                Type: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidMaximumWeight = this.state.ValidMaximumWeight;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n        let ValidType = this.state.ValidType;\r\n\r\n        switch (field) {\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n\r\n                if (Errors.MaximumWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidMaximumWeight = (value >= 700);\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum weight must be greater than 699.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidMaximumWeight: ValidMaximumWeight,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n            ValidType: ValidType\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidMaximumWeight &&\r\n                        this.state.ValidPhotoURL &&\r\n                        this.state.ValidType\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedTrailer = {\r\n            Token: localStorage.Token,\r\n            TrailerID: this.props.Trailer.TrailerID,\r\n            MaximumWeight: this.state.MaximumWeight,\r\n            PhotoURL: this.state.PhotoURL,\r\n            Type: this.state.Type\r\n        }\r\n\r\n        console.log(\"Going to update trailer...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        updateTrailer(updatedTrailer).then(response => {\r\n            if (response.Message === \"Trailer is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id={`edit-trailer-dialog${this.props.dialogID}`}\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Trailer</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\" Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory={this.state.ImageCategory} />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Maximum Weight (GVW)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"MaximumWeight\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.MaximumWeight}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Trailer Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default EditTrailerDialog;","import React, { Component } from \"react\";\r\nimport { deleteTrailer } from \"../../../DriverFunctions.js\";\r\nimport EditTrailerDialog from \"./EditTrailerDialog.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\n\r\nclass TrailersList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Trailers: this.props.Trailers,\r\n            EditTrailerDialogs: [],\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async index => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedTrailer = {\r\n            Token: localStorage.Token,\r\n            TrailerID: this.state.Trailers[index].TrailerID \r\n        };\r\n\r\n        console.log(`Going to delete Trailers[${index}]...`);\r\n\r\n        await deleteTrailer(discardedTrailer).then(response => {\r\n            if (response.Message === \"Trailer is deleted.\") {\r\n                this.props.OnTrailersUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Trailers</div>\r\n            <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                {this.state.Trailers.map((value, index) => {\r\n                    return <li key={index} className=\"list-items-row\">\r\n                        <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#${value.TrailerID}`}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-2\">\r\n                                    <i className=\"glyph glyph-add\"></i>\r\n                                    <i className=\"glyph glyph-remove\"></i>\r\n                                    <strong>{index + 1}</strong>\r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                    <img className=\"img-responsive visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        src={value.PhotoURL} alt=\"trailer.png\" data-source-index=\"2\" style={{\r\n                                            overflow: \"hidden\",\r\n                                            border: \"5px solid #3A3A3C\",\r\n                                            margin: \"5px\"\r\n                                        }} />\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                        <span className=\"fas fa-weight\" style={{ color: \"#606060\" }}></span>\r\n                                        <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Maximum Weight (GVM):</span> {value.MaximumWeight}\r\n                                    </div>\r\n                                    <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                        <span className=\"fas fa-star-of-life\" style={{ color: \"#606060\" }}></span>\r\n                                        <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Trailer Type:</span> {value.Type}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"collapse\" id={value.TrailerID}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-18 col-md-offset-2\">\r\n                                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block\"\r\n                                        src={value.PhotoURL} alt=\"trailer.png\" data-source-index=\"2\" style={{\r\n                                            overflow: \"hidden\",\r\n                                            border: \"5px solid #3A3A3C\",\r\n                                            margin: \"5px\"\r\n                                        }} />\r\n                                </div>\r\n                                <div className=\"col-md-4 text-right\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-primary\"\r\n                                        data-toggle=\"modal\"\r\n                                        data-target={`#edit-trailer-dialog${index}`}\r\n                                        onMouseDown={() => {\r\n                                            let editTrailerDialogs = this.state.EditTrailerDialogs;\r\n\r\n                                            editTrailerDialogs[index] = <EditTrailerDialog\r\n                                                dialogID={index}\r\n                                                Trailer={value}\r\n                                                OnCancel={() => {\r\n                                                    let editTrailerDialogs = this.state.EditTrailerDialogs\r\n                                                    editTrailerDialogs[index] = null;\r\n\r\n                                                    this.setState({\r\n                                                        EditTrailerDialogs: editTrailerDialogs,\r\n                                                    });\r\n\r\n                                                }}\r\n                                                OnOK={cancelButton => {\r\n                                                    cancelButton.click();\r\n                                                    this.props.OnTrailersUpdated();\r\n                                                }} />;\r\n\r\n                                            this.setState({\r\n                                                EditTrailerDialogs: editTrailerDialogs,\r\n                                            });\r\n                                        }}>\r\n                                        Edit</button>\r\n                                    <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(index); }}>Delete</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {this.state.EditTrailerDialogs[index]}\r\n                    </li>\r\n                })}\r\n            </ol>\r\n            {this.state.Preloader}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TrailersList;","import React, { Component } from \"react\";\r\nimport AddTrailer from \"./AddTrailer\";\r\nimport TrailersList from \"./TrailersList\"\r\nimport { getData } from \"../../../DriverFunctions\";\r\n\r\nclass Trailers extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddTrailer: null,\r\n            TrailersList: null\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Trailers\"\r\n            };\r\n\r\n            this.setState({\r\n                AddTrailer: null,\r\n                TrailersList: null\r\n            });\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Trailers found.\") {\r\n\r\n                    if (response.Trailers.length < 2) {\r\n                        this.setState({\r\n                            AddTrailer: <AddTrailer OnTrailerAdded={this.onComponentUpdated} />,\r\n                            TrailersList: <TrailersList Trailers={response.Trailers}\r\n                                OnTrailersUpdated={this.onComponentUpdated} />\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            AddTrailer: null,\r\n                            TrailersList: <TrailersList Trailers={response.Trailers}\r\n                                OnTrailersUpdated={this.onComponentUpdated} />\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AddTrailer: <AddTrailer OnTrailerAdded={this.onComponentUpdated} />,\r\n                        TrailersList: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            {this.state.AddTrailer}\r\n            {this.state.TrailersList}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Trailers;","import React, { Component } from \"react\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader\";\r\nimport { getData, updateTruckPhoto } from \"../../DriverFunctions\";\r\nimport TruckSettings from \"./TruckSettings\";\r\nimport AddTruckDialog from \"./AddTruckDialog\";\r\nimport Trailers from \"./trailers/Trailers\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\n\r\nclass Truck extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            PlateNumber: \"\",\r\n            Owner: \"\",\r\n            ProductionYear: \"\",\r\n            Brand: \"\",\r\n            Model: \"\",\r\n            Type: \"\",\r\n            MaximumWeight: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n            TruckFound: false,\r\n            AddTruckDialog: null,\r\n            AddTrailer: null,\r\n            TrailersList: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Truck\"\r\n            };\r\n\r\n            this.setState({\r\n                Preloader: <Preloader />\r\n            });\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Truck found.\") {\r\n                    let truck = response.Truck;\r\n\r\n                    this.setState({\r\n                        PlateNumber: truck.PlateNumber,\r\n                        Owner: truck.Owner,\r\n                        ProductionYear: truck.ProductionYear,\r\n                        Brand: truck.Brand,\r\n                        Model: truck.Model,\r\n                        Type: truck.Type,\r\n                        MaximumWeight: truck.MaximumWeight,\r\n                        PhotoURL: truck.PhotoURL,\r\n                        TruckFound: true,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        PlateNumber: \"\",\r\n                        Owner: \"\",\r\n                        ProductionYear: \"\",\r\n                        Brand: \"\",\r\n                        Model: \"\",\r\n                        Type: \"\",\r\n                        MaximumWeight: \"\",\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                        TruckFound: false,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.TruckFound) {\r\n            return <section>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <ImageUploader Source={this.state.PhotoURL}\r\n                                    Height=\"200px\" Width=\"200px\"\r\n                                    OnImageUploaded={async response => {\r\n                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                            const updatedTruck = {\r\n                                                Token: localStorage.Token,\r\n                                                PhotoURL: response.imageUrl\r\n                                            };\r\n\r\n                                            await updateTruckPhoto(updatedTruck).then(response => {\r\n                                                if (response.Message === \"Truck photo updated.\") {\r\n                                                    this.setState({\r\n                                                        PhotoURL: updatedTruck.PhotoURL\r\n                                                    });\r\n                                                }\r\n                                            });\r\n                                        }\r\n                                    }}\r\n                                    OnInvalidImageSelected={() => {\r\n                                        return;\r\n                                    }}\r\n                                    ImageCategory=\"Truck\" />\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                    {`${this.state.Brand} ${this.state.Model}`}\r\n                                </div>\r\n                                <div className=\"type-sh3\">\r\n                                    <span className=\"fas fa-truck\" style={{ color: \"#606060\" }}></span>   {this.state.Type}\r\n                                </div>\r\n                                <div>\r\n                                    <ol className=\"list-items theme-alt\">\r\n                                        <li className=\"list-items-row\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-2\">\r\n                                                    <strong><span className=\"fas fa-list-ol\" style={{ color: \"#008575\" }}></span></strong>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <a href=\"\" style={{ textDecoration: \"none\", }}>Plate Number:</a>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    {this.state.PlateNumber}\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li className=\"list-items-row\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-2\">\r\n                                                    <strong><span className=\"fas fa-calendar-day\" style={{ color: \"#008575\", }}></span></strong>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <a style={{ textDecoration: \"none\", }}>Production Year:</a>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    {this.state.ProductionYear}\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li className=\"list-items-row\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-2\">\r\n                                                    <strong><span className=\"fas fa-weight\" style={{ color: \"#008575\" }}></span></strong>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <a style={{ textDecoration: \"none\", }}>Maximum Weight:</a>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    {`${this.state.MaximumWeight} GVW`}\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ol>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <TruckSettings OnTruckSettingsUpdated={this.onComponentUpdated} />\r\n                <Trailers />\r\n                {this.state.Preloader}\r\n            </section>;\r\n        }\r\n        else {\r\n            return <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"add_truck.png\" src=\"./images/add_truck.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div className=\"col-md-12 col-md-pull-12\">\r\n                                <div className=\"type-h3\">Truck</div>\r\n                                <div className=\"type-sh3\">You have not added any truck yet.</div>\r\n                                <p>Adding your truck will let the Traders or Brokers see details about your it. Valid and complete details of your truck make more chances for you to receive job requests.</p>\r\n                                <div className=\"btn-group\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-primary\"\r\n                                        style={{ minWidth: \"152px\" }}\r\n                                        data-toggle=\"modal\"\r\n                                        data-target=\"#add-truck-dialog\"\r\n                                        onMouseDown={() => {\r\n                                            this.setState({\r\n                                                AddTruckDialog: <AddTruckDialog\r\n                                                    OnCancel={() => {\r\n                                                        this.setState({\r\n                                                            AddTruckDialog: null,\r\n                                                        });\r\n                                                    }}\r\n                                                    OnOK={cancelButton => {\r\n                                                        cancelButton.click();\r\n                                                        this.onComponentUpdated();\r\n                                                    }} />\r\n                                            });\r\n                                        }}>\r\n                                        <span className=\"fas fa-plus\" aria-hidden=\"true\"></span>Add Now</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.AddTruckDialog}\r\n                {this.state.Preloader}\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default Truck;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { addPermitLicence } from \"../../DriverFunctions.js\";\r\n\r\nclass AddPermitLicenceDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PermitNumber: \"\",\r\n            ExpiryDate: new Date(),\r\n            PhotoURL: \"./images/default_image.png\",\r\n            Code: \"\",\r\n            Place: \"\",\r\n\r\n            ValidPermitNumber: false,\r\n            ValidExpiryDate: false,\r\n            ValidPhotoURL: false,\r\n            ValidCode: false,\r\n            ValidPlace: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                PermitNumber: \"\",\r\n                ExpiryDate: \"\",\r\n                PhotoURL: \"\",\r\n                Code: \"\",\r\n                Place: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidPermitNumber = this.state.ValidPermitNumber;\r\n        let ValidExpiryDate = this.state.ValidExpiryDate;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n        let ValidCode = this.state.ValidCode;\r\n        let ValidPlace = this.state.ValidPlace;\r\n\r\n        switch (field) {\r\n            case \"PermitNumber\":\r\n                ValidPermitNumber = (value !== \"\");\r\n                Errors.PermitNumber = ValidPermitNumber ? \"\" : \"Permit number is required.\";\r\n\r\n                if (Errors.PermitNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPermitNumber = (value !== \"\");\r\n                Errors.PermitNumber = ValidPermitNumber ? \"\" : \"Permit number is required.\";\r\n\r\n                break;\r\n            case \"ExpiryDate\":\r\n                ValidExpiryDate = (new Date(value).getTime() >= new Date().getTime());\r\n                Errors.ExpiryDate = ValidExpiryDate ? \"\" : \"Expiry Date must be later than yesterday.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            case \"Code\":\r\n                ValidCode = (value !== \"\");\r\n                Errors.Code = ValidCode ? \"\" : \"Permit code is required.\";\r\n                break;\r\n            case \"Place\":\r\n                ValidPlace = (value !== \"\");\r\n                Errors.Place = ValidPlace ? \"\" : \"Permit place is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPermitNumber: ValidPermitNumber,\r\n            ValidExpiryDate: ValidExpiryDate,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n            ValidCode: ValidCode,\r\n            ValidPlace: ValidPlace,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidPermitNumber &&\r\n                        this.state.ValidExpiryDate &&\r\n                        this.state.ValidPhotoURL &&\r\n                        this.state.ValidCode &&\r\n                        this.state.ValidPlace,\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newPermitLicence = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            PermitNumber: this.state.PermitNumber,\r\n            ExpiryDate: this.state.ExpiryDate,\r\n            PhotoURL: this.state.PhotoURL,\r\n            Code: this.state.Code,\r\n            Place: this.state.Place\r\n        }\r\n\r\n        console.log(\"Going to add Permit Licence.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addPermitLicence(newPermitLicence).then(response => {\r\n            if (response.Message === \"Permit Licence is added.\") {\r\n                localStorage.setItem(\"userToken\", response.Token);\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section class=\"text-left\">\r\n                <div class=\"modal\" id=\"add-permit-licence-dialog\"\r\n                    tabindex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div class=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div class=\"type-h3\">Add Permit Licence</div>\r\n                                    </div>\r\n                                    <div class=\"modal-body\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }} />\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Permit Number</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"PermitNumber\" class=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.PermitNumber} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.PermitNumber}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Expiry Date</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"ExpiryDate\" class=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ExpiryDate} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.ExpiryDate}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Permit Code</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Code\" class=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Code} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.Code}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Permit Place</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Place\" class=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Place} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.Place}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"modal-footer\">\r\n                                        <button class=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddPermitLicenceDialog;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../styles/MiscellaneousStyles\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { updatePermitLicence } from \"../../DriverFunctions.js\";\r\n\r\nclass EditPermitLicenceDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PermitNumber: this.props.PermitLicence.PermitNumber,\r\n            ExpiryDate: this.props.PermitLicence.ExpiryDate,\r\n            PhotoURL: this.props.PermitLicence.PhotoURL,\r\n            Code: this.props.PermitLicence.Code,\r\n            Place: this.props.PermitLicence.Place,\r\n\r\n            ValidPermitNumber: true,\r\n            ValidExpiryDate: true,\r\n            ValidPhotoURL: true,\r\n            ValidCode: true,\r\n            ValidPlace: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                PermitNumber: \"\",\r\n                ExpiryDate: \"\",\r\n                PhotoURL: \"\",\r\n                Code: \"\",\r\n                Place: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidPermitNumber = this.state.ValidPermitNumber;\r\n        let ValidExpiryDate = this.state.ValidExpiryDate;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n        let ValidCode = this.state.ValidCode;\r\n        let ValidPlace = this.state.ValidPlace;\r\n\r\n        switch (field) {\r\n            case \"PermitNumber\":\r\n                ValidPermitNumber = (value !== \"\");\r\n                Errors.PermitNumber = ValidPermitNumber ? \"\" : \"Permit number is required.\";\r\n                break;\r\n            case \"ExpiryDate\":\r\n                ValidExpiryDate = (new Date(value).getTime() >= new Date().getTime());\r\n                Errors.ExpiryDate = ValidExpiryDate ? \"\" : \"Expiry Date must be later than yesterday.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            case \"Code\":\r\n                ValidCode = (value !== \"\");\r\n                Errors.Code = ValidCode ? \"\" : \"Permit code is required.\";\r\n                break;\r\n            case \"Place\":\r\n                ValidPlace = (value !== \"\");\r\n                Errors.Place = ValidPlace ? \"\" : \"Permit place is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPermitNumber: ValidPermitNumber,\r\n            ValidExpiryDate: ValidExpiryDate,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n            ValidCode: ValidCode,\r\n            ValidPlace: ValidPlace,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidPermitNumber &&\r\n                    this.state.ValidExpiryDate &&\r\n                    this.state.ValidPhotoURL &&\r\n                    this.state.ValidCode &&\r\n                    this.state.ValidPlace,\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedPermitLicence = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            PermitLicenceID: this.props.PermitLicence.PermitLicenceID,\r\n            PermitNumber: this.state.PermitNumber,\r\n            ExpiryDate: this.state.ExpiryDate,\r\n            PhotoURL: this.state.PhotoURL,\r\n            Code: this.state.Code,\r\n            Place: this.state.Place\r\n        }\r\n\r\n        console.log(\"Going to update Permit Licence.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updatePermitLicence(updatedPermitLicence).then(response => {\r\n            if (response.Message === \"Permit Licence is updated.\") {\r\n                localStorage.setItem(\"userToken\", response.Token);\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section class=\"text-left\">\r\n                <div class=\"modal\" id={`edit-permit-dialog${this.props.DialogID}`}\r\n                    tabindex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div class=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div class=\"type-h3\">Add Permit Licence</div>\r\n                                    </div>\r\n                                    <div class=\"modal-body\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }} />\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Permit Number</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"PermitNumber\" class=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.PermitNumber} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.PermitNumber}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Expiry Date</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"ExpiryDate\" class=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ExpiryDate} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.ExpiryDate}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Permit Code</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Code\" class=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Code} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.Code}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Permit Place</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Place\" class=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Place} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.Place}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"modal-footer\">\r\n                                        <button class=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default EditPermitLicenceDialog;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { deletePermitLicence } from \"../../DriverFunctions.js\";\r\nimport EditPermitLicenceDialog from \"./EditPermitLicenceDialog.js\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\n\r\nclass PermitLicencesList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PermitLicences: [],\r\n            EditPermitLicenceDialogs: [],\r\n            SearchString: \"\",\r\n            Preloader: null,\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.getPermitLicences = this.getPermitLicences.bind(this);\r\n    }\r\n\r\n    onDelete = async index => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedPermitLicence = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            PermitLicenceID: this.state.PermitLicences[index].PermitLicenceID \r\n        };\r\n\r\n        console.log(`Going to delete PermitLicences[${index}]`);\r\n\r\n        await deletePermitLicence(discardedPermitLicence)\r\n            .then(response => {\r\n                if (response.Message === \"Permit Licence is deleted.\") {\r\n                    localStorage.setItem(\"userToken\", response.Token);\r\n                    this.props.OnPermitLicencesUpdated();\r\n                }\r\n\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPermitLicences();\r\n    }\r\n\r\n    getPermitLicences = () => {\r\n        if (localStorage.userToken) {\r\n            const permitLicences = jwt_decode(localStorage.userToken).PermitLicences;\r\n\r\n            this.setState({\r\n                PermitLicences: permitLicences\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                PermitLicences: []\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.SearchString === \"\") {\r\n            this.getPermitLicences();\r\n            return;\r\n        }\r\n\r\n        const filteredPermitLicences = [];\r\n\r\n        for (var i = 0; i < this.state.PermitLicences.length; i++) {\r\n            if (this.state.PermitLicences[i].Place === this.state.SearchString) {\r\n                filteredPermitLicences[i] = this.state.PermitLicences[i];\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            PermitLicences: filteredPermitLicences\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div class=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Permit Licences</div>\r\n                <nav class=\"navbar navbar-default\">\r\n                    <div class=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                        <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                            <form noValidate onSubmit={this.onSearch} class=\"navbar-form navbar-right\" role=\"search\">\r\n                                <div class=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                    <div class=\"form-group\">\r\n                                        <input type=\"search\" name=\"SearchString\" class=\"form-control\" placeholder=\"Search by Permit Place\"\r\n                                            style={{ maxWidth: \"500px\", width: \"100%\" }} autoComplete=\"off\"\r\n                                            value={this.state.SearchString} onChange={this.onChange} />\r\n                                    </div>\r\n                                    <button type=\"submit\" class=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                <ol class=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {this.state.PermitLicences.map((value, index) => {\r\n                        return <li class=\"list-items-row\">\r\n                            <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#${value.PermitLicenceID}`}>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-2\">\r\n                                        <i class=\"glyph glyph-add\"></i>\r\n                                        <i class=\"glyph glyph-remove\"></i>\r\n                                        <strong>{index + 1}</strong>\r\n                                    </div>\r\n                                    <div class=\"col-md-4\">\r\n                                        <img class=\"img-responsive visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                            src={value.PhotoURL} alt=\"permit.png\" data-source-index=\"2\" style={{\r\n                                                overflow: \"hidden\",\r\n                                                border: \"5px solid #3A3A3C\",\r\n                                                margin: \"5px\"\r\n                                            }} />\r\n                                    </div>\r\n                                    <div class=\"col-md-6\">\r\n                                        <div>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Permit Number:</span> {value.PermitNumber}\r\n                                        </div>\r\n                                        <div>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Expiry Date:</span> {value.ExpiryDate}\r\n                                        </div>\r\n                                        <div>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Permit Code:</span> {value.Code}\r\n                                        </div>\r\n                                        <div>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Permit Place:</span> {value.Place}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-6\">\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"collapse\" id={value.PermitLicenceID}>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-18 col-md-offset-2\">\r\n                                        <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block\"\r\n                                            src={value.PhotoURL} alt=\"permit.png\" data-source-index=\"2\" style={{\r\n                                                overflow: \"hidden\",\r\n                                                border: \"5px solid #3A3A3C\",\r\n                                                margin: \"5px\"\r\n                                            }} />\r\n                                    </div>\r\n                                    <div class=\"col-md-4 text-right\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            class=\"btn btn-primary\"\r\n                                            data-toggle=\"modal\"\r\n                                            data-target={`#edit-permit-dialog${index}`}\r\n                                            onMouseDown={() => {\r\n                                                let editPermitLicenceDialogs = this.state.EditPermitLicenceDialogs;\r\n\r\n                                                editPermitLicenceDialogs[index] = <EditPermitLicenceDialog\r\n                                                    DialogID={index}\r\n                                                    PermitLicence={value}\r\n                                                    OnCancel={() => {\r\n                                                        let editPermitLicenceDialogs = this.state.EditPermitLicenceDialogs;\r\n                                                        editPermitLicenceDialogs[index] = null;\r\n\r\n                                                        this.setState({\r\n                                                            EditPermitLicenceDialogs: editPermitLicenceDialogs,\r\n                                                        });\r\n\r\n                                                    }}\r\n                                                    OnOK={cancelButton => {\r\n                                                        cancelButton.click();\r\n                                                        this.props.OnPermitLicencesUpdated();\r\n                                                    }} />;\r\n\r\n                                                this.setState({\r\n                                                    EditPermitLicenceDialogs: editPermitLicenceDialogs,\r\n                                                });\r\n                                            }}>\r\n                                            Edit\r\n                                            </button>\r\n                                        <button type=\"button\" class=\"btn btn-danger\" onClick={() => { this.onDelete(index); }}>Delete</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {this.state.EditPermitLicenceDialogs[index]}\r\n                        </li>\r\n                    })}\r\n                </ol>\r\n                {this.state.Preloader}\r\n            </section>         \r\n        );\r\n    }\r\n};\r\n\r\nexport default PermitLicencesList;","import React, { Component } from \"react\";\r\n\r\nclass FinancialAffairs extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"jumbotron\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"tools.png\" src=\"./images/tools.png\" style={{ borderRadius: \"50%\" }} data-source-index=\"1\" />\r\n                            </div>\r\n                            <div class=\"col-md-12 col-md-pull-12\">\r\n                                <div class=\"type-h3\" style={{ color: \"#008575\", }}>\r\n                                    Financial Affairs\r\n                    </div>\r\n                                <div class=\"type-sh3\" style={{ color: \"#949496\", }}>\r\n                                    Under-Construction\r\n                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default FinancialAffairs;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport AddPermitLicenceDialog from \"./AddPermitLicenceDialog.js\";\r\nimport PermitLicencesList from \"./PermitLicencesList.js\"\r\n\r\nclass Permits extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddPermitLicenceDialog: null,\r\n            PermitLicencesList: null,\r\n        };\r\n\r\n        this.onPermitLicencesUpdated = this.onPermitLicencesUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onPermitLicencesUpdated();\r\n    }\r\n\r\n    onPermitLicencesUpdated = () => {\r\n        const permitLicences = jwt_decode(localStorage.userToken).PermitLicences;\r\n\r\n        if (permitLicences) {\r\n            this.setState({\r\n                PermitLicencesList: null\r\n            });\r\n            this.setState({\r\n                PermitLicencesList: <PermitLicencesList OnPermitLicencesUpdated={this.onPermitLicencesUpdated} />\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                PermitLicencesList: null\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"permit.png\" src=\"./images/permit.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div class=\"col-md-12 col-md-pull-12\">\r\n                                <div class=\"type-h3\">Permit Licences</div>\r\n                                <div class=\"type-sh3\">Manage your Permits</div>\r\n                                <p>If you are a non-Saudi driver, then you must have at least one permit licence.</p>\r\n                                <div class=\"btn-group\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        class=\"btn btn-primary\"\r\n                                        data-toggle=\"modal\"\r\n                                        data-target=\"#add-permit-licence-dialog\"\r\n                                        onMouseDown={() => {\r\n                                            this.setState({\r\n                                                AddPermitLicenceDialog: (<AddPermitLicenceDialog\r\n                                                    OnCancel={() => {\r\n                                                        this.setState({\r\n                                                            AddPermitLicenceDialog: null,\r\n                                                        });\r\n                                                    }}\r\n                                                    OnOK={cancelButton => {\r\n                                                        cancelButton.click();\r\n                                                        this.onPermitLicencesUpdated();\r\n                                                    }} />),\r\n                                            });\r\n                                        }}>\r\n                                        New Permit Licence\r\n                                        </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.AddPermitLicenceDialog}\r\n                {this.state.PermitLicencesList}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Permits;","import React, { Component } from \"react\";\r\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\r\nimport Geocode from \"react-geocode\";\r\nimport Autocomplete from 'react-google-autocomplete';\r\nGeocode.setApiKey(\"AIzaSyC3YT8gMjGGdzQpHBNcayZYF4rvbGTL8IM\");\r\nGeocode.enableDebug();\r\n\r\nclass Map extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            NoState: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const AsyncMap = withScriptjs(\r\n            withGoogleMap(\r\n                props => (\r\n                    <GoogleMap\r\n                        googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyC3YT8gMjGGdzQpHBNcayZYF4rvbGTL8IM&libraries=places\"\r\n                        defaultZoom={10}\r\n                        defaultCenter={{ lat: 33.784310, lng: 72.738780 }}>                   \r\n                    </GoogleMap>\r\n                )\r\n            )\r\n        );\r\n        return (\r\n            <div>\r\n                <AsyncMap\r\n                    googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyC3YT8gMjGGdzQpHBNcayZYF4rvbGTL8IM&libraries=places\"\r\n                    loadingElement={ <div style={{ height: `100%` }} /> }\r\n                    containerElement={ <div style={{ height: \"400px\" }} /> }\r\n                    mapElement={ <div style={{ height: `100%` }} /> } />\r\n            </div>              \r\n        );\r\n    }\r\n};\r\n\r\nexport default Map;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { addJobRequest } from \"../../../DriverFunctions.js\";\r\nimport Map from \"../../../../../controls/Map.js\";\r\n\r\nclass AddJobRequestDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LoadingPlace: \"\",\r\n            UnloadingPlace: \"\",\r\n            TripType: \"One Way\",\r\n            Price: 0.00,\r\n\r\n            ValidLoadingPlace: false,\r\n            ValidUnloadingPlace: false,\r\n            ValidPrice: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                LoadingPlace: \"\",\r\n                UnloadingPlace: \"\",\r\n                Price: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidLoadingPlace = this.state.ValidLoadingPlace;\r\n        let ValidUnloadingPlace = this.state.ValidUnloadingPlace;\r\n        let ValidPrice = this.state.ValidPrice;\r\n\r\n        switch (field) {\r\n            case \"LoadingPlace\":\r\n                ValidLoadingPlace = (value !== \"\");\r\n                Errors.LoadingPlace = ValidLoadingPlace ? \"\" : \"Loading place is required.\";\r\n                break;\r\n            case \"UnloadingPlace\":\r\n                ValidUnloadingPlace = (value !== \"\");\r\n                Errors.UnloadingPlace = ValidUnloadingPlace ? \"\" : \"Unloading place is required.\";\r\n                break;\r\n            case \"Price\":\r\n                ValidPrice = (value > 0.00);\r\n                Errors.Price = ValidPrice ? \"\" : \"Price must be more than $0.00.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidLoadingPlace: ValidLoadingPlace,\r\n            ValidUnloadingPlace: ValidUnloadingPlace,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.LoadingPlace &&\r\n                        this.state.ValidUnloadingPlace &&\r\n                        this.state.ValidPrice\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newJobRequest = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            LoadingPlace: this.state.LoadingPlace,\r\n            UnloadingPlace: this.state.UnloadingPlace,\r\n            TripType: this.state.TripType,\r\n            Price: this.state.Price,\r\n        }\r\n\r\n        console.log(\"Going to add Job Request.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addJobRequest(newJobRequest).then(response => {\r\n            if (response.Message === \"Job request is added.\") {\r\n                localStorage.setItem(\"userToken\", response.Token);\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section class=\"text-left\">\r\n                <div class=\"modal\" id=\"add-job-request-dialog\"\r\n                    tabindex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div class=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div class=\"type-h3\">Add Job Request</div>\r\n                                    </div>\r\n                                    <div class=\"modal-body\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <label class=\"control-label\">Loading Place</label>\r\n                                                        <span class=\"text-danger\" style={Required}>*</span>\r\n                                                        <input type=\"text\" name=\"LoadingPlace\" class=\"form-control\" autoComplete=\"off\"\r\n                                                            value={this.state.LoadingPlace} onChange={this.onChange} />\r\n                                                        <span class=\"text-danger\">{this.state.Errors.LoadingPlace}</span>\r\n                                                    </div>\r\n                                                    <div class=\"form-group\">\r\n                                                        <label class=\"control-label\">Unloading Place</label>\r\n                                                        <span class=\"text-danger\" style={Required}>*</span>\r\n                                                        <input type=\"text\" name=\"UnloadingPlace\" class=\"form-control\" autoComplete=\"off\"\r\n                                                            value={this.state.UnloadingPlace} onChange={this.onChange} />\r\n                                                        <span class=\"text-danger\">{this.state.Errors.UnloadingPlace}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <label class=\"control-label\">Trip Type</label><br />\r\n                                                        <div class=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                            <button id=\"example-dropdown\" class=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                                aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                                <span>{this.state.TripType}</span>\r\n                                                                <span class=\"caret\"></span>\r\n                                                            </button>\r\n                                                            <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                                <li><a onClick={() => { this.setState({ TripType: \"One Way\" }); }}>One Way</a></li>\r\n                                                                <li><a onClick={() => { this.setState({ TripType: \"Two Way\" }); }}>Two Way</a></li>\r\n                                                            </ul>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"form-group\">\r\n                                                        <label class=\"control-label\">Price (USD)</label>\r\n                                                        <span class=\"text-danger\" style={Required}>*</span>\r\n                                                        <input type=\"number\" min=\"0.00\" step=\"0.01\" max=\"100.00\" name=\"Price\"\r\n                                                            class=\"form-control\" autoComplete=\"off\" value={this.state.Price} onChange={this.onChange} />\r\n                                                        <span class=\"text-danger\">{this.state.Errors.Price}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-24\">\r\n                                                <Map />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"modal-footer\">\r\n                                        <button class=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddJobRequestDialog;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport Map from \"../../../../../controls/Map.js\";\r\nimport { updateJobRequest } from \"../../../DriverFunctions.js\";\r\n\r\nclass EditJobRequestDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LoadingPlace: this.props.JobRequest.LoadingPlace,\r\n            UnloadingPlace: this.props.JobRequest.UnloadingPlace,\r\n            TripType: this.props.JobRequest.TripType,\r\n            Price: this.props.JobRequest.Price,\r\n\r\n            ValidLoadingPlace: true,\r\n            ValidUnloadingPlace: true,\r\n            ValidPrice: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                LoadingPlace: \"\",\r\n                UnloadingPlace: \"\",\r\n                Price: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidLoadingPlace = this.state.ValidLoadingPlace;\r\n        let ValidUnloadingPlace = this.state.ValidUnloadingPlace;\r\n        let ValidPrice = this.state.ValidPrice;\r\n\r\n        switch (field) {\r\n            case \"LoadingPlace\":\r\n                ValidLoadingPlace = (value !== \"\");\r\n                Errors.LoadingPlace = ValidLoadingPlace ? \"\" : \"Loading place is required.\";\r\n                break;\r\n            case \"UnloadingPlace\":\r\n                ValidUnloadingPlace = (value !== \"\");\r\n                Errors.UnloadingPlace = ValidUnloadingPlace ? \"\" : \"Unloading place is required.\";\r\n                break;\r\n            case \"Price\":\r\n                ValidPrice = (value > 0.00);\r\n                Errors.Price = ValidPrice ? \"\" : \"Price must be more than $0.00.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidLoadingPlace: ValidLoadingPlace,\r\n            ValidUnloadingPlace: ValidUnloadingPlace,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.LoadingPlace &&\r\n                    this.state.ValidUnloadingPlace &&\r\n                    this.state.ValidPrice\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedJobRequest = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            JobRequestID: this.props.JobRequest.JobRequestID,\r\n            LoadingPlace: this.state.LoadingPlace,\r\n            UnloadingPlace: this.state.UnloadingPlace,\r\n            TripType: this.state.TripType,\r\n            Price: this.state.Price,\r\n        }\r\n\r\n        console.log(\"Going to update Job Request.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateJobRequest(updatedJobRequest).then(response => {\r\n            if (response.Message === \"Job request is updated.\") {\r\n                localStorage.setItem(\"userToken\", response.Token);\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <section class=\"text-left\">\r\n                <div class=\"modal\" id={`edit-job-request-dialog-${this.props.DialogID}`}\r\n                    tabindex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div class=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div class=\"type-h3\">Edit Job Request</div>\r\n                                    </div>\r\n                                    <div class=\"modal-body\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <label class=\"control-label\">Loading Place</label>\r\n                                                        <span class=\"text-danger\" style={Required}>*</span>\r\n                                                        <input type=\"text\" name=\"LoadingPlace\" class=\"form-control\" autoComplete=\"off\"\r\n                                                            value={this.state.LoadingPlace} onChange={this.onChange} />\r\n                                                        <span class=\"text-danger\">{this.state.Errors.LoadingPlace}</span>\r\n                                                    </div>\r\n                                                    <div class=\"form-group\">\r\n                                                        <label class=\"control-label\">Unloading Place</label>\r\n                                                        <span class=\"text-danger\" style={Required}>*</span>\r\n                                                        <input type=\"text\" name=\"UnloadingPlace\" class=\"form-control\" autoComplete=\"off\"\r\n                                                            value={this.state.UnloadingPlace} onChange={this.onChange} />\r\n                                                        <span class=\"text-danger\">{this.state.Errors.UnloadingPlace}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <label class=\"control-label\">Trip Type</label><br />\r\n                                                        <div class=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                            <button id=\"example-dropdown\" class=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                                aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                                <span>{this.state.TripType}</span>\r\n                                                                <span class=\"caret\"></span>\r\n                                                            </button>\r\n                                                            <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                                <li><a onClick={() => { this.setState({ TripType: \"One Way\" }); }}>One Way</a></li>\r\n                                                                <li><a onClick={() => { this.setState({ TripType: \"Two Way\" }); }}>Two Way</a></li>\r\n                                                            </ul>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"form-group\">\r\n                                                        <label class=\"control-label\">Price (USD)</label>\r\n                                                        <span class=\"text-danger\" style={Required}>*</span>\r\n                                                        <input type=\"number\" min=\"0.00\" step=\"0.01\" max=\"100.00\" name=\"Price\"\r\n                                                            class=\"form-control\" autoComplete=\"off\" value={this.state.Price} onChange={this.onChange} />\r\n                                                        <span class=\"text-danger\">{this.state.Errors.Price}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-24\">\r\n                                                <Map />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"modal-footer\">\r\n                                        <button class=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default EditJobRequestDialog;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { deleteJobRequest } from \"../../../DriverFunctions.js\";\r\nimport EditJobRequestDialog from \"./EditJobRequestDialog.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\n\r\nclass JobRequestsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobRequests: [],\r\n            EditJobRequestDialogs: [],\r\n            SearchString: \"\",\r\n            Preloader: null,\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.getJobRequests = this.getJobRequests.bind(this);\r\n    }\r\n\r\n    onDelete = async index => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedJobRequest = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            JobRequestID: this.state.JobRequests[index].JobRequestID \r\n        };\r\n\r\n        console.log(`Going to delete JobRequests[${index}]`);\r\n\r\n        await deleteJobRequest(discardedJobRequest)\r\n            .then(response => {\r\n                if (response.Message === \"Job request is deleted.\") {\r\n                    localStorage.setItem(\"userToken\", response.Token);\r\n                    this.props.OnJobRequestsUpdated();\r\n                }\r\n\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getJobRequests();\r\n    }\r\n\r\n    getJobRequests = () => {\r\n        if (localStorage.userToken) {\r\n            const jobRequests = jwt_decode(localStorage.userToken).JobRequests;\r\n\r\n            this.setState({\r\n                JobRequests: jobRequests\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                JobRequests: []\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n        this.getJobRequests();\r\n\r\n        if (this.state.SearchString === \"\") {         \r\n            return;\r\n        }\r\n\r\n        const filteredJobRequests = [];\r\n\r\n        for (var i = 0; i < this.state.JobRequests.length; i++) {\r\n            if (this.state.JobRequests[i].LoadingPlace.includes(this.state.SearchString) ||\r\n                this.state.JobRequests[i].UnloadingPlace.includes(this.state.SearchString)) {\r\n                filteredJobRequests[i] = this.state.JobRequests[i];\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            JobRequests: filteredJobRequests\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div class=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Your Job Requests</div>\r\n                <nav class=\"navbar navbar-default\">\r\n                    <div class=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                        <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                            <form noValidate onSubmit={this.onSearch} class=\"navbar-form navbar-right\" role=\"search\">\r\n                                <div class=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                    <div class=\"form-group\">\r\n                                        <input type=\"search\" name=\"SearchString\" class=\"form-control\" placeholder=\"Search by Places\"\r\n                                            style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                            value={this.state.SearchString} onChange={this.onChange} />\r\n                                    </div>\r\n                                    <button type=\"submit\" class=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                <ol class=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {this.state.JobRequests.map((value, index) => {\r\n                        return <li class=\"list-items-row\">\r\n                            <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#${value.JobRequestID}`}>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-2\">\r\n                                        <i class=\"glyph glyph-add\"></i>\r\n                                        <i class=\"glyph glyph-remove\"></i>\r\n                                        <strong>{index + 1}</strong>\r\n                                    </div>\r\n                                    <div class=\"col-md-2\">\r\n                                        <img src=\"./images/job_requests.png\" alt=\"job_requests.png\" height=\"50\" />\r\n                                    </div>\r\n                                    <div class=\"col-md-6\">\r\n                                        <div>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Loading Place:</span> {value.LoadingPlace}\r\n                                        </div>\r\n                                        <div>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Unloading Place:</span> {value.UnloadingPlace}\r\n                                        </div>\r\n                                        <div>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Trip Type:</span> {value.TripType}\r\n                                        </div>\r\n                                        </div>\r\n                                    <div class=\"col-md-6\">\r\n                                        <div>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Price:</span> {`$${value.Price}`}\r\n                                        </div>\r\n                                        <div>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Available:</span> {((Math.abs(new Date() - new Date(value.TimeCreated)) / 36e5) < value.WaitingTime) ?\r\n                                                <span class=\"fa fa-check-circle\" style={{ fontWeight: \"bold\", color: \"#25AE88\" }}></span> :\r\n                                                <span class=\"fa fa-times-circle\" style={{ fontWeight: \"bold\", color: \"#D75A4A\" }}></span>}\r\n                                        </div>\r\n                                        <div>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Created:</span> {`${(Math.floor((new Date().getTime() - new Date(value.TimeCreated)) / 36e5))} Hour(s) Ago`}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"collapse\" id={value.JobRequestID}>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-18 col-md-offset-2\">\r\n                                    </div>\r\n                                    <div class=\"col-md-4 text-right\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            class=\"btn btn-primary\"\r\n                                            data-toggle=\"modal\"\r\n                                            data-target={`#edit-job-request-dialog-${index}`}\r\n                                            onMouseDown={() => {\r\n                                                let editJobRequestDialogs = this.state.EditJobRequestDialogs;\r\n\r\n                                                editJobRequestDialogs[index] = <EditJobRequestDialog\r\n                                                    DialogID={index}\r\n                                                    JobRequest={value}\r\n                                                    OnCancel={() => {\r\n                                                        let editJobRequestDialogs = this.state.EditJobRequestDialogs;\r\n                                                        editJobRequestDialogs[index] = null;\r\n\r\n                                                        this.setState({\r\n                                                            EditJobRequestDialogs: editJobRequestDialogs,\r\n                                                        });\r\n\r\n                                                    }}\r\n                                                    OnOK={cancelButton => {\r\n                                                        cancelButton.click();\r\n                                                        this.props.OnJobRequestsUpdated();\r\n                                                    }} />;\r\n\r\n                                                this.setState({\r\n                                                    EditJobRequestDialogs: editJobRequestDialogs,\r\n                                                });\r\n                                            }}>\r\n                                            Edit\r\n                                            </button>\r\n                                        <button type=\"button\" class=\"btn btn-danger\" onClick={() => { this.onDelete(index); }}>Delete</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {this.state.EditJobRequestDialogs[index]}\r\n                        </li>\r\n                    })}\r\n                </ol>\r\n                {this.state.Preloader}\r\n            </section>         \r\n        );\r\n    }\r\n};\r\n\r\nexport default JobRequestsList;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport AddJobRequestDialog from \"./AddJobRequestDialog.js\";\r\nimport JobRequestsList from \"./JobRequestsList.js\";\r\n\r\nclass JobRequests extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddJobRequestDialog: null,\r\n            JobRequestsList: null\r\n        };\r\n\r\n        this.onJobRequestsUpdated = this.onJobRequestsUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onJobRequestsUpdated();\r\n    }\r\n\r\n    onJobRequestsUpdated = () => {\r\n        const jobRequests = jwt_decode(localStorage.userToken).JobRequests;\r\n\r\n        if (jobRequests) {\r\n            this.setState({\r\n                JobRequestsList: null\r\n            });\r\n            this.setState({\r\n                JobRequestsList: <JobRequestsList OnJobRequestsUpdated={this.onJobRequestsUpdated} />\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                JobRequestsList: null\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"job_requests.png\" src=\"./images/job_requests.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div class=\"col-md-12 col-md-pull-12\">\r\n                                <div class=\"type-h3\">Job Requests</div>\r\n                                <div class=\"type-sh3\">Manage Your Job Requests</div>\r\n                                <p>Create new job requests for your current and/or near-by locations to get a chance to increase your revenue.</p>\r\n                                <div class=\"btn-group\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        class=\"btn btn-primary\"\r\n                                        data-toggle=\"modal\"\r\n                                        data-target=\"#add-job-request-dialog\"\r\n                                        onMouseDown={() => {\r\n                                            this.setState({\r\n                                                AddJobRequestDialog: (<AddJobRequestDialog\r\n                                                    OnCancel={() => {\r\n                                                        this.setState({\r\n                                                            AddJobRequestDialog: null,\r\n                                                        });\r\n                                                    }}\r\n                                                    OnOK={cancelButton => {\r\n                                                        cancelButton.click();\r\n                                                        this.onJobRequestsUpdated();\r\n                                                    }} />),\r\n                                            });\r\n                                        }}>\r\n                                        New Job Request\r\n                                        </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.AddJobRequestDialog}\r\n                {this.state.JobRequestsList}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default JobRequests;","import React, { Component } from \"react\";\r\n\r\nclass JobOffers extends Component {\r\n   render() {\r\n        return (\r\n            <section>\r\n                <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"job_offers.png\" src=\"./images/job_offers.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div class=\"col-md-12 col-md-pull-12\">\r\n                                <div class=\"type-h3\">Job Offers</div>\r\n                                <div class=\"type-sh3\">Under Construction</div>\r\n                                <p>For now, it's lonely here!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default JobOffers;","import React, { Component } from \"react\";\r\n\r\nclass OnGoingJobs extends Component {\r\n   render() {\r\n        return (\r\n            <section>\r\n                <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"on_going_jobs.png\" src=\"./images/on_going_jobs.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div class=\"col-md-12 col-md-pull-12\">\r\n                                <div class=\"type-h3\">On-Going Jobs</div>\r\n                                <div class=\"type-sh3\">Under Construction</div>\r\n                                <p>For now, it's lonely here!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default OnGoingJobs;","import React, { Component } from \"react\";\r\n\r\nclass Payments extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"jumbotron\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"tools.png\" src=\"./images/tools.png\" style={{ borderRadius: \"50%\" }} data-source-index=\"1\" />\r\n                            </div>\r\n                            <div class=\"col-md-12 col-md-pull-12\">\r\n                                <div class=\"type-h3\" style={{ color: \"#008575\", }}>\r\n                                    Payments\r\n                    </div>\r\n                                <div class=\"type-sh3\" style={{ color: \"#949496\", }}>\r\n                                    Under-Construction\r\n                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Payments;","import React, { Component } from \"react\";\r\nimport JobRequests from \"./jobRequests/JobRequests.js\"; \r\nimport JobOffers from \"./jobOffers/JobOffers.js\";\r\nimport OnGoingJobs from \"./onGoingJobs/OnGoingJobs.js\";\r\n\r\nclass Jobs extends Component {\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div class=\"entity-list theme-alt\" style={{ backgroundColor: \"#161616\" }}>\r\n                    <div class=\"entity-list-item\" href=\"#job-requests\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">\r\n                        <div class=\"item-icon\" style={{ backgroundColor: \"rgba(0, 0, 0, 0)\" }}>\r\n                            <img src=\"./images/job_requests.png\" alt=\"job_requests.png\" />\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Job Requests</div>\r\n                            <div class=\"content-text-secondary\">Create job requests for places of your own choice.</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"entity-list-item\" href=\"#job-offers\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">\r\n                        <div class=\"item-icon\" style={{ backgroundColor: \"rgba(0, 0, 0, 0)\" }}>\r\n                            <img src=\"./images/job_offers.png\" alt=\"job_offers.png\" />\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Job Offers</div>\r\n                            <div class=\"content-text-secondary\">See job opportunities from Traders and Brokers.</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"entity-list-item\" href=\"#on-going-jobs\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">\r\n                        <div class=\"item-icon\" style={{ backgroundColor: \"rgba(0, 0, 0, 0)\" }}>\r\n                            <img src=\"./images/on_going_jobs.png\" alt=\"on_going_jobs.png\" />\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">On-Going Jobs</div>\r\n                            <div class=\"content-text-secondary\">Manage your jobs that are in progress.</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"tab-content\">\r\n                    <div role=\"tabpanel\" class=\"tab-pane active\" id=\"job-requests\">\r\n                        <JobRequests />\r\n                    </div>\r\n                    <div role=\"tabpanel\" class=\"tab-pane\" id=\"job-offers\">\r\n                        <JobOffers />\r\n                    </div>\r\n                    <div role=\"tabpanel\" class=\"tab-pane\" id=\"on-going-jobs\">\r\n                        <OnGoingJobs />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Jobs;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { getData, generalSettings } from \"../../DriverFunctions\";\r\n\r\nclass GeneralSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\",\r\n\r\n            ValidFirstName: true,\r\n            ValidLastName: true,\r\n            ValidPhoneNumber: true,\r\n\r\n            ValidForm: false,\r\n            SettingsSaved: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                PhoneNumber: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Driver\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver found.\") {\r\n                    let driver = response.Driver;\r\n\r\n                    this.setState({\r\n                        FirstName: driver.FirstName,\r\n                        LastName: driver.LastName,\r\n                        Address: driver.Address,\r\n                        PhoneNumber: driver.PhoneNumber,\r\n                        Gender: driver.Gender,\r\n                        Nationality: driver.Nationality,\r\n                        DateOfBirth: driver.DateOfBirth\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        FirstName: \"\",\r\n                        LastName: \"\",\r\n                        Address: \"\",\r\n                        PhoneNumber: \"\",\r\n                        Gender: \"\",\r\n                        Nationality: \"\",\r\n                        DateOfBirth: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFirstName = this.state.ValidFirstName;\r\n        let ValidLastName = this.state.ValidLastName;\r\n        let ValidPhoneNumber = this.state.ValidPhoneNumber;\r\n\r\n        switch (field) {\r\n            case \"FirstName\":\r\n                ValidFirstName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.FirstName = ValidFirstName ? \"\" : \"First name is invalid.\";\r\n                break;\r\n            case \"LastName\":\r\n                ValidLastName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.LastName = ValidLastName ? \"\" : \"Last name is invalid.\";\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = value.match(/^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/);\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFirstName: ValidFirstName,\r\n            ValidLastName: ValidLastName,\r\n            ValidPhoneNumber: ValidPhoneNumber,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidFirstName &&\r\n                    this.state.ValidLastName &&\r\n                    this.state.ValidPhoneNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedDriver = {\r\n            Token: localStorage.Token,\r\n            FirstName: this.state.FirstName,\r\n            LastName: this.state.LastName,\r\n            Address: this.state.Address,\r\n            PhoneNumber: this.state.PhoneNumber,\r\n            Gender: this.state.Gender,\r\n            Nationality: this.state.Nationality,\r\n            DateOfBirth: this.state.DateOfBirth\r\n        };\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await generalSettings(updatedDriver).then(response => {\r\n            if (response.Message === \"Driver is updated.\") {\r\n                this.props.OnSettingsSaved();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>General Settings</div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n                <div className=\"entity-list entity-list-expandable\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-comment\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"FirstName\" autoComplete=\"off\"\r\n                                    value={this.state.FirstName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">First Name</div>\r\n                            <div className=\"text-danger\">{this.state.Errors.FirstName}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-comment\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"LastName\" autoComplete=\"off\"\r\n                                    value={this.state.LastName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Last Name</div>\r\n                            <div className=\"text-danger\">{this.state.Errors.LastName}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-birthday-cake\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"date\" className=\"form-control\" name=\"DateOfBirth\" autoComplete=\"off\"\r\n                                    value={this.state.DateOfBirth} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Date of Birth</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className={this.state.Gender === \"Male\" ? \"fas fa-male\" : \"fas fa-female\"}></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"dropdown\" style={{ width: \"193px\", maxWidth: \"296px\", }}>\r\n                                <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                    aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                    <span>{this.state.Gender}</span>\r\n                                    <span className=\"caret\"></span>\r\n                                </button>\r\n                                <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                    <li><a onClick={() => { this.setState({ Gender: \"Male\" }); }}>Male</a></li>\r\n                                    <li><a onClick={() => { this.setState({ Gender: \"Female\" }); }}>Female</a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Gender</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-flag\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"Nationality\" autoComplete=\"off\"\r\n                                    value={this.state.Nationality} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Nationality</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-phone\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autoComplete=\"off\"\r\n                                    placeholder=\"+XXXXXXXXXXXX\" value={this.state.PhoneNumber} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Phone Number</div>\r\n                            <div className=\"text-danger\">{this.state.Errors.PhoneNumber}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-location-arrow\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"Address\" autoComplete=\"off\"\r\n                                    value={this.state.Address} onChange={this.onChange} style={{ width: \"393px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Address</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item active\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-save\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Save Changes?</div>\r\n                            <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                        </div>\r\n                        <div className=\"item-content-expanded\">\r\n                            <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            {this.state.Preloader}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default GeneralSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { usernameAndEmailSettings } from \"../../DriverFunctions.js\";\r\n\r\nclass CodeConfirmationDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ConfirmCode: \"\",\r\n\r\n            ValidConfirmCode: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                ConfirmCode: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidConfirmCode = this.state.ValidConfirmCode;\r\n\r\n        ValidConfirmCode = value === this.props.Code;\r\n        Errors.ConfirmCode = ValidConfirmCode ? \"\" : \"Invalid code.\";\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidConfirmCode: ValidConfirmCode,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidConfirmCode\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedDriver = {\r\n            Token: localStorage.Token,\r\n            Username: this.props.Username,\r\n            Email: this.props.Email,\r\n        };\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await usernameAndEmailSettings(updatedDriver).then(response => {\r\n            if (response.Message === \"Driver is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div\r\n                className=\"modal in\" id=\"code-confirmation-dialog\" tabIndex=\"-1\"\r\n                role=\"dialog\" aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\"\r\n                style={{ display: \"block\" }}>\r\n                <div className=\"modal-dialog\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"passcode.png\" src=\"./images/passcode.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Email Confirmation</div>\r\n                                        <div className=\"type-sh3\">We delivered a confirmation code to your email.</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Confirmation Code</label>\r\n                                                    <input type=\"text\" name=\"ConfirmCode\" className=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.ConfirmCode} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ConfirmCode}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Confirm\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default CodeConfirmationDialog;","import React, { Component } from \"react\";\r\nimport CodeConfirmationDialog from \"./CodeConfirmationDialog.js\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport {\r\n    getData,\r\n    validateUsername,\r\n    validateEmail,\r\n    sendCode,\r\n    usernameAndEmailSettings\r\n} from \"../../DriverFunctions.js\";\r\n\r\nclass UsernameAndEmailSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            NewUsername: \"\",\r\n\r\n            Email: \"\",\r\n            NewEmail: \"\",\r\n\r\n            Code: \"\",\r\n\r\n            ValidNewUsername: true,\r\n            ValidNewEmail: true,\r\n\r\n            ValidForm: false,\r\n            CodeConfirmationDialog: null,\r\n\r\n            Errors: {\r\n                NewUsername: \"\",\r\n                NewEmail: \"\",\r\n            },\r\n\r\n            CodeConfirmation: \"\",\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Driver\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver found.\") {\r\n                    let driver = response.Driver;\r\n\r\n                    this.setState({\r\n                        Username: driver.Username,\r\n                        NewUsername: driver.Username,\r\n                        Email: driver.Email,\r\n                        NewEmail: driver.Email\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Username: \"\",\r\n                        NewUsername: \"\",\r\n                        Email: \"\",\r\n                        NewEmail: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewUsername = this.state.ValidNewUsername;\r\n        let ValidNewEmail = this.state.ValidNewEmail;\r\n\r\n        switch (field) {\r\n            case \"NewUsername\":\r\n                ValidNewUsername = (value !== \"\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is required.\";\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value.match(/^[a-z0-9]+$/i));\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is invalid.\";\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value !== \"Username is unavailable.\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is unavailable.\";\r\n                break;\r\n            case \"NewEmail\":\r\n                ValidNewEmail = (value !== \"\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is required.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i));\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is invalid.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value !== \"Email is already taken.\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is already taken.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewUsername: ValidNewUsername,\r\n            ValidNewEmail: ValidNewEmail,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidNewUsername &&\r\n                    this.state.ValidNewEmail\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername === this.state.Username &&\r\n            this.state.NewEmail === this.state.Email) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername !== this.state.Username) {\r\n            const response = await validateUsername(this.state.NewUsername);\r\n\r\n            if (response.Message === \"Username is unavailable.\") {\r\n                this.validateField(\"NewUsername\", response.Message);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail !== this.state.Email) {\r\n            const response = await validateEmail(this.state.NewEmail);\r\n            if (response.Message === \"Email is already taken.\") {\r\n                this.validateField(\"NewEmail\", response.Message);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail === this.state.Email) {\r\n            const updatedDriver = {\r\n                Token: localStorage.Token,\r\n                Username: this.state.NewUsername,\r\n                Email: this.state.NewEmail,\r\n            };\r\n\r\n            this.setState({\r\n                Preloader: <Preloader />\r\n            });\r\n\r\n            console.log(\"Going to update username...\");\r\n            await usernameAndEmailSettings(updatedDriver).then(response => {\r\n                if (response.Message === \"Driver is updated.\") {\r\n                    this.props.OnSettingsSaved();\r\n                }\r\n\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            console.log(\"Going to send code...\");\r\n            await sendCode(this.state.NewEmail).then(response => {\r\n                if (response.Message === \"Code sent.\") {\r\n                    this.setState({\r\n                        CodeConfirmationDialog: <CodeConfirmationDialog\r\n                            Code={response.Code}\r\n                            Username={this.state.NewUsername}\r\n                            Email={this.state.NewEmail}\r\n                            OnCancel={() => {\r\n                                this.setState({\r\n                                    CodeConfirmationDialog: null,\r\n                                });\r\n                            }}\r\n                            OnOK={cancelButton => {\r\n                                cancelButton.click();\r\n                                this.props.OnSettingsSaved();\r\n                            }} />\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Username and Emails</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div class=\"entity-list entity-list-expandable\">\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-at\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" name=\"NewUsername\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.NewUsername} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Username</div>\r\n                                <div class=\"content-text-secondary text-danger\">{this.state.Errors.NewUsername}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-envelope\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"email\" name=\"NewEmail\" class=\"form-control\" placeholder=\"someone@example.com\" autocomplete=\"off\"\r\n                                        value={this.state.NewEmail} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Email</div>\r\n                                <div class=\"content-text-secondary text-danger\">{this.state.Errors.NewEmail}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item active\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Save Changes?</div>\r\n                                <div class=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div class=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n                {this.state.CodeConfirmationDialog}\r\n            </div> \r\n        );\r\n    }\r\n};\r\n\r\nexport default UsernameAndEmailSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { validatePassword, passwordSettings } from \"../../DriverFunctions.js\";\r\n\r\nclass PasswordSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            CurrentPassword: \"\",\r\n            NewPassword: \"\",\r\n            ConfirmPassword: \"\",\r\n\r\n            ValidCurrentPassword: false,\r\n            ValidNewPassword: false,\r\n            ValidConfirmPassword: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                CurrentPassword: \"\",\r\n                NewPassword: \"\",\r\n                ConfirmPassword: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    async validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCurrentPassword = this.state.ValidCurrentPassword;\r\n        let ValidNewPassword = this.state.ValidNewPassword;\r\n        let ValidConfirmPassword = this.state.ValidConfirmPassword;\r\n\r\n        switch (field) {\r\n            case \"CurrentPassword\":\r\n                ValidCurrentPassword = (value !== \"\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is required.\";\r\n\r\n                if (Errors.CurrentPassword !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCurrentPassword = (value !== \"Invalid password.\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is invalid.\";\r\n                break;\r\n            case \"NewPassword\":\r\n                ValidNewPassword = value.length >= 6;\r\n                Errors.NewPassword = ValidNewPassword ? \"\" : \"Password is too short.\";\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                ValidConfirmPassword = value === this.state.NewPassword;\r\n                Errors.ConfirmPassword = ValidConfirmPassword ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCurrentPassword: ValidCurrentPassword,\r\n            ValidNewPassword: ValidNewPassword,\r\n            ValidConfirmPassword: ValidConfirmPassword,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidCurrentPassword &&\r\n                    this.state.ValidNewPassword &&\r\n                    this.state.ValidConfirmPassword\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        let passwordPackage = {\r\n            Token: localStorage.Token,\r\n            Password: this.state.CurrentPassword\r\n        };\r\n\r\n        await validatePassword(passwordPackage).then(async response => {\r\n            if (response.Message === \"Invalid password.\") {\r\n                this.validateField(\"CurrentPassword\", response.Message);\r\n            }\r\n            else {\r\n                const updatedDriver = {\r\n                    Token: localStorage.Token,\r\n                    Password: this.state.NewPassword\r\n                };\r\n\r\n                this.setState({\r\n                    Preloader: <Preloader />\r\n                });\r\n\r\n                await passwordSettings(updatedDriver).then(response => {\r\n                    if (response.Message === \"Driver is updated.\") {\r\n                        this.props.OnSettingsSaved();\r\n                    }\r\n\r\n                    this.setState({\r\n                        Preloader: null\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div class=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\" }}>Change Password</div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n                <div class=\"entity-list entity-list-expandable\">\r\n                    <div class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <div class=\"form-group\">\r\n                                <input type=\"password\" name=\"CurrentPassword\" class=\"form-control\" autoComplete=\"off\"\r\n                                    value={this.state.CurrentPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Current Password</div>\r\n                            <div class=\"text-danger\">{this.state.Errors[\"CurrentPassword\"]}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <div class=\"form-group\">\r\n                                <input type=\"password\" name=\"NewPassword\" class=\"form-control\" autoComplete=\"off\"\r\n                                    value={this.state.NewPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">New Password</div>\r\n                            <div class=\"text-danger\">{this.state.Errors[\"NewPassword\"]}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <div class=\"form-group\">\r\n                                <input type=\"password\" name=\"ConfirmPassword\" class=\"form-control\" autoComplete=\"off\"\r\n                                    value={this.state.ConfirmPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Confirm Password</div>\r\n                            <div class=\"text-danger\">{this.state.Errors[\"ConfirmPassword\"]}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"entity-list-item active\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-save\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Save Changes?</div>\r\n                            <div class=\"content-text-secondary\">This cannot be undone.</div>\r\n                        </div>\r\n                        <div class=\"item-content-expanded\">\r\n                            <input type=\"submit\" value=\"Save\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            {this.state.Preloader}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PasswordSettings;","import React, { Component } from \"react\";\r\nimport GeneralSettings from \"./GeneralSettings\";\r\nimport UsernameAndEmailSettings from \"./UsernameAndEmailSettings\";\r\nimport PasswordSettings from \"./PasswordSettings\";\r\n\r\nclass Settings extends Component {\r\n    render() {\r\n        return <section>\r\n            <GeneralSettings ref=\"GeneralSettings\" OnSettingsSaved={() => { this.refs.GeneralSettings.componentDidMount(); }} />\r\n            <UsernameAndEmailSettings ref=\"UsernameAndEmailSettings\" OnSettingsSaved={() => { this.refs.UsernameAndEmailSettings.componentDidMount(); }} />\r\n            <PasswordSettings ref=\"PasswordSettings\" OnSettingsSaved={() => { this.refs.PasswordSettings.forceUpdate(); }} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Settings;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Profile from \"./profile/Profile\";\r\nimport Truck from \"./trucks/Truck\";\r\nimport Permits from \"./permits/Permits\";\r\nimport FinancialAffairs from \"./financial_affairs/FinancialAffairs\";\r\nimport Jobs from \"./jobs/Jobs\";\r\nimport Payments from \"./payments/Payments\";\r\nimport Settings from \"./settings/Settings\";\r\n\r\nclass DriversDashboard extends Component {\r\n    render() {\r\n        if (!localStorage.Token) {\r\n            return <Redirect to={\"/login\"} />;\r\n        }\r\n        else {\r\n            return <div>\r\n                <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                    padding: \"10px\",\r\n                    backgroundColor: \"#3A3A3C\",\r\n                    width: \"100%\",\r\n                    margin: \"0px\",\r\n                }}>\r\n                    <li role=\"presentation\" className=\"active\"><a href=\"#profile\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">Profile</a></li>\r\n                    <li role=\"presentation\"><a href=\"#trucks\" aria-controls=\"trucks\" role=\"tab\" data-toggle=\"tab\">Trucks</a></li>\r\n                    <li role=\"presentation\"><a href=\"#permits\" aria-controls=\"permits\" role=\"tab\" data-toggle=\"tab\">Permits</a></li>\r\n                    <li role=\"presentation\"><a href=\"#financialAffairs\" aria-controls=\"financialAffairs\" role=\"tab\" data-toggle=\"tab\">Financial Affairs</a></li>\r\n                    <li role=\"presentation\"><a href=\"#jobs\" aria-controls=\"jobs\" role=\"tab\" data-toggle=\"tab\">Jobs</a></li>\r\n                    <li role=\"presentation\"><a href=\"#payments\" aria-controls=\"payments\" role=\"tab\" data-toggle=\"tab\">Payments</a></li>\r\n                    <li role=\"presentation\"><a href=\"#settings\" aria-controls=\"settings\" role=\"tab\" data-toggle=\"tab\">Settings</a></li>\r\n                </ul>\r\n\r\n                <div className=\"tab-content\">\r\n                    <div role=\"tabpanel\" className=\"tab-pane active\" id=\"profile\">\r\n                        <Profile />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"trucks\">\r\n                        <Truck />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"permits\">\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"financialAffairs\">\r\n                        <FinancialAffairs />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"jobs\">\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"payments\">\r\n                        <Payments />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"settings\">\r\n                        <Settings />\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default DriversDashboard;","export const TabMenu = {\r\n    padding: \"10px\",\r\n    backgroundColor: \"#3A3A3C\",\r\n    width: \"100%\",\r\n    margin: \"0px\",\r\n};\r\n\r\nexport default {\r\n    TabMenu,\r\n};","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { getData, uploadTraderProfilePhoto } from \"../../TraderFunctions\";\r\nimport Strings from \"../../../../res/strings\";\r\n\r\nclass ProfilePhoto extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Image: null,\r\n            PhotoURL: \"./images/defaultProfilePhoto.png\",\r\n            UploadProgress: null,\r\n        };\r\n\r\n        this.onImageUpload = this.onImageUpload.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"ProfilePhoto\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Profile photo found.\") {\r\n                    let profilePhoto = response.ProfilePhoto;\r\n\r\n                    this.setState({\r\n                        PhotoURL: profilePhoto.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.state({\r\n                        PhotoURL: \"./images/defaultProfilePhoto.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onImageUpload = async event => {\r\n        this.state.Image = event.target.files[0];\r\n        const formData = new FormData();\r\n\r\n        try {\r\n            formData.append(\"Image\", this.state.Image, this.state.Image.name);\r\n\r\n            await axios.post(Strings.IMAGE_UPLOADER, formData, {\r\n                onUploadProgress: event => {\r\n                    this.setState({\r\n                        UploadProgress: <div className=\"progress-bar\">\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                        </div>\r\n                    });\r\n                }\r\n            }).then(async response => {\r\n                response = response.data;\r\n\r\n                if (response.message === \"Image uploaded successfully.\") {\r\n                    const traderProfilePhoto = {\r\n                        Token: localStorage.Token,\r\n                        PhotoURL: response.imageUrl,\r\n                        FileName: response.filename\r\n                    }\r\n\r\n                    let photoURL = response.imageUrl;\r\n\r\n                    await uploadTraderProfilePhoto(traderProfilePhoto).then(response => {\r\n                        if (response.Message === \"Profile photo is updated.\" ||\r\n                            response.Message === \"Profile photo is added.\") {\r\n\r\n                            this.setState({\r\n                                PhotoURL: photoURL,\r\n                                UploadProgress: null,\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }).catch(() => {\r\n                this.props.OnImageUploaded(\"Invalid Image.\");\r\n                this.setState({\r\n                    ImageURL: \"./images/defaultProfilePhoto.png\",\r\n                    UploadProgress: null,\r\n                });\r\n            });\r\n        }\r\n        catch (exception) {\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n\r\n            return;\r\n        }\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <input type=\"file\" onChange={this.onImageUpload} style={{ display: \"none\", }} ref={fileInput => this.fileInput = fileInput} />\r\n                <figure className=\"media\">\r\n                    <div className=\"media-img media-img-has-play ratio-movie\" style={{\r\n                        width: \"200px\",\r\n                        height: \"200px\",\r\n                        border: \"0px\",\r\n                        padding: \"0px\",\r\n                        border: \"5px solid #3A3A3C\"\r\n                    }}>\r\n                        <a href=\"#\" onClick={() => this.fileInput.click()}>\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                src={this.state.PhotoURL} alt=\"ProfilePhoto.png\" />\r\n                            <i className=\"glyph glyph-edit\"></i>\r\n                        </a>\r\n                    </div>\r\n                </figure>\r\n                {this.state.UploadProgress}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ProfilePhoto;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addIdentityCard } from \"../../../../TraderFunctions.js\";\r\n\r\nclass AddIdentityCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidIDNumber: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                IDNumber: \"\",\r\n                PhotoURL: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidIDNumber = this.state.ValidIDNumber;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"IDNumber\":\r\n                ValidIDNumber = (value !== \"\");\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidIDNumber = (value >= 1000000000 && value <= 9999999999);\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number must be 10-digits long.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidIDNumber: ValidIDNumber,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidIDNumber &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newIdentityCard = {\r\n            Token: localStorage.Token,\r\n            IDNumber: this.state.IDNumber,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to add Identity Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        addIdentityCard(newIdentityCard).then(response => {\r\n            if (response.Message === \"Identity card is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div className=\"modal\" id=\"add-identity-card-dialog\"\r\n                    tabindex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Add Identity Card</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => { \r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"IdentityCard\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">ID Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"IDNumber\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.IDNumber} onChange={this.onChange} min=\"1000000000\" max=\"9999999999\"/>\r\n                                                    <span className=\"text-danger\">{this.state.Errors.IDNumber}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddIdentityCardDialog;","import React, { Component } from \"react\";\r\nimport AddIdentityCardDialog from \"./AddIdentityCardDialog.js\";\r\n\r\nclass AddIdentityCardButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddIdentityCardDialog: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-identity-card-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddIdentityCardDialog: <AddIdentityCardDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddIdentityCardDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />,\r\n                        });\r\n                    }}>\r\n                    <span className=\"fas fa-plus\" aria-hidden=\"true\"></span> Identity Card\r\n                </button>\r\n                {this.state.AddIdentityCardDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddIdentityCardButton;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addCommercialRegisterCertificate } from \"../../../../TraderFunctions.js\";\r\n\r\nclass AddCommercialRegisterCertificateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Number: UUID().substring(0, 7).toUpperCase(),\r\n            Type: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidType: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                Type: \"\",\r\n                PhotoURL: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Certificate type is required.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidType: ValidType,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidType &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newCommercialRegisterCertificate = {\r\n            Token: localStorage.Token,\r\n            Number: this.state.Number,\r\n            Type: this.state.Type,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to add commercial register certificate.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        addCommercialRegisterCertificate(newCommercialRegisterCertificate).then(response => {\r\n            if (response.Message === \"Commercial register certificate is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div className=\"modal\" id=\"add-commercial-register-certificate-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Add Commercial Register Certificate</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => { \r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"CommercialRegisterCertificate\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Certificate Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Number\" className=\"form-control\" autoComplete=\"off\" readOnly\r\n                                                        value={this.state.Number} onChange={this.onChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Certificate Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddCommercialRegisterCertificateDialog;","import React, { Component } from \"react\";\r\nimport AddCommercialRegisterCertificateDialog from \"./AddCommercialRegisterCertificateDialog.js\";\r\n\r\nclass AddCommercialRegisterCertificateButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddCommercialRegisterCertificateDialog: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-commercial-register-certificate-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddCommercialRegisterCertificateDialog: <AddCommercialRegisterCertificateDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddCommercialRegisterCertificateDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />\r\n                        });\r\n                    }}>\r\n                    <span className=\"fas fa-plus\" aria-hidden=\"true\"></span> CR Certificate\r\n                </button>\r\n                {this.state.AddCommercialRegisterCertificateDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddCommercialRegisterCertificateButton;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateIdentityCard } from \"../../../../TraderFunctions.js\";\r\n\r\nclass EditIdentityCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidIDNumber: true,\r\n            ValidPhotoURL: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                IDNumber: \"\",\r\n                PhotoURL: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            this.setState({\r\n                Preloader: <Preloader />\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Identity card found.\") {\r\n                    let identityCard = response.IdentityCard;\r\n\r\n                    this.setState({\r\n                        IDNumber: identityCard.IDNumber,\r\n                        PhotoURL: identityCard.PhotoURL,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        IDNumber: \"\",\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                        Preloader: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidIDNumber = this.state.ValidIDNumber;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"IDNumber\":\r\n                ValidIDNumber = (value !== \"\");\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidIDNumber = (value >= 1000000000 && value <= 9999999999);\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number must be 10-digits long.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidIDNumber: ValidIDNumber,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidIDNumber &&\r\n                    this.state.ValidPhotoURL\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedIdentityCard = {\r\n            Token: localStorage.Token,\r\n            IDNumber: this.state.IDNumber,\r\n            PhotoURL: this.state.PhotoURL,\r\n        }\r\n\r\n        console.log(\"Going to update Identity Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        updateIdentityCard(updatedIdentityCard).then(response => {\r\n            if (response.Message === \"Identity card is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id=\"edit-identity-card-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Identity Card</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"IdentityCard\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">ID Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"IDNumber\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.IDNumber} onChange={this.onChange} min=\"1000000000\" max=\"99999999999\" />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.IDNumber}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default EditIdentityCardDialog;","import React, { Component } from \"react\";\r\nimport EditIdentityCardDialog from \"./EditIdentityCardDialog.js\";\r\nimport { getData, deleteIdentityCard } from \"../../../../TraderFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass IdentityCardListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Key: Math.floor(Math.random() * 100),\r\n            IdentityCardID: \"\",\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            EditIdentityCardDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onRefresh = this.onRefresh.bind(this);\r\n    }\r\n\r\n    onDelete = () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        let discardedIdentityCard = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete Identity Card.`);\r\n\r\n        deleteIdentityCard(discardedIdentityCard).then(response => {\r\n            console.log(response);\r\n            if (response.Message === \"Identity card is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onRefresh();\r\n    }\r\n\r\n    onRefresh = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Identity card found.\") {\r\n                    let identityCard = response.IdentityCard;\r\n\r\n                    this.setState({\r\n                        IdentityCardID: identityCard.IdentityCardID,\r\n                        IDNumber: identityCard.IDNumber,\r\n                        PhotoURL: identityCard.PhotoURL\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        IdentityCardID: \"\",\r\n                        IDNumber: \"\",\r\n                        PhotoURL: \"./images/default_image.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"list-items-row\">\r\n                <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#identity-card-${this.state.IdentityCardID}`}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                            <i className=\"glyph glyph-add\"></i>\r\n                            <i className=\"glyph glyph-remove\"></i>\r\n                            <strong>{this.props.Index}</strong>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <img className=\"img-responsive visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                src={this.state.PhotoURL} alt=\"identity_card.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>IDENTITY CARD</span>\r\n                            </div>\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>ID Number:</span> {this.state.IDNumber}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"collapse\" id={`identity-card-${this.state.IdentityCardID}`}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-18 col-md-offset-2\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block\"\r\n                                src={this.state.PhotoURL} alt=\"trailer.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"col-md-4 text-right\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#edit-identity-card-dialog\"\r\n                                onMouseDown={() => {\r\n                                    this.setState({\r\n                                        EditIdentityCardDialog: <EditIdentityCardDialog\r\n                                            OnCancel={() => {\r\n                                                this.setState({\r\n                                                    EditIdentityCardDialog: null\r\n                                                });\r\n                                            }}\r\n                                            OnOK={cancelButton => {\r\n                                                cancelButton.click();\r\n                                                this.onRefresh();\r\n                                            }} />\r\n                                    });\r\n                                }}>\r\n                                Edit\r\n                                </button>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </div>               \r\n                {this.state.Preloader}\r\n                {this.state.EditIdentityCardDialog}\r\n            </li>        \r\n        );\r\n    }\r\n};\r\n\r\nexport default IdentityCardListItem;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateCommercialRegisterCertificate } from \"../../../../TraderFunctions.js\";\r\n\r\nclass EditCommercialRegisterCertificateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Number: \"\",\r\n            Type: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidType: true,\r\n            ValidPhotoURL: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                Type: \"\",\r\n                PhotoURL: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onRefresh = this.onRefresh.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onRefresh();\r\n    }\r\n\r\n    onRefresh = () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"CommercialRegisterCertificate\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Commercial register certificate found.\") {\r\n                    let commercialRegisterCertificate = response.CommercialRegisterCertificate;\r\n\r\n                    this.setState({\r\n                        Number: commercialRegisterCertificate.Number,\r\n                        Type: commercialRegisterCertificate.Type,\r\n                        PhotoURL: commercialRegisterCertificate.PhotoURL,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Number: \"\",\r\n                        Type: \"\",\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                        Preloader: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Certificate type is required.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidType: ValidType,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidType &&\r\n                    this.state.ValidPhotoURL\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedCommercialRegisterCertificate = {\r\n            Token: localStorage.Token,\r\n            Number: this.state.Number,\r\n            Type: this.state.Type,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to update commercial register certificate.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        updateCommercialRegisterCertificate(updatedCommercialRegisterCertificate).then(response => {\r\n            if (response.Message === \"Commercial register certificate is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id=\"edit-commercial-register-certificate-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Commercial Register Certificate</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"IdentityCard\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Certificate Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Number\" className=\"form-control\" autoComplete=\"off\" readOnly\r\n                                                        value={this.state.Number} onChange={this.onChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Certificate Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default EditCommercialRegisterCertificateDialog;","import React, { Component } from \"react\";\r\nimport EditCommercialRegisterCertificateDialog from \"./EditCommercialRegisterCertificateDialog.js\";\r\nimport { getData, deleteCommercialRegisterCertificate } from \"../../../../TraderFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass CommercialRegisterCertificateListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ID: \"\",\r\n            Number: \"\",\r\n            Type: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            EditCommercialRegisterCertificateDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onRefresh = this.onRefresh.bind(this);\r\n    }\r\n\r\n    onDelete = () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        let discardedCommercialRegisterCertificate = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete commercial register certificate.`);\r\n\r\n        deleteCommercialRegisterCertificate(discardedCommercialRegisterCertificate).then(response => {\r\n            if (response.Message === \"Commercial register certificate is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onRefresh();\r\n    }\r\n\r\n    onRefresh = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"CommercialRegisterCertificate\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Commercial register certificate found.\") {\r\n                    let commercialRegisterCertificate = response.CommercialRegisterCertificate;\r\n\r\n                    this.setState({\r\n                        ID: commercialRegisterCertificate.ID,\r\n                        Number: commercialRegisterCertificate.Number,\r\n                        Type: commercialRegisterCertificate.Type,\r\n                        PhotoURL: commercialRegisterCertificate.PhotoURL\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        ID: \"\",\r\n                        Number: \"\",\r\n                        Type: \"\",\r\n                        PhotoURL: \"./images/default_image.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"list-items-row\">\r\n                <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#commercial-register-certificate-${this.state.ID}`}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                            <i className=\"glyph glyph-add\"></i>\r\n                            <i className=\"glyph glyph-remove\"></i>\r\n                            <strong>{this.props.Index}</strong>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <img className=\"img-responsive visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                src={this.state.PhotoURL} alt=\"identity_card.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>COMMERCIAL REGISTER CERTIFICATE</span>\r\n                            </div>\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Certificate Number:</span> {this.state.Number}\r\n                            </div>\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Certificate Type:</span> {this.state.Type}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"collapse\" id={`commercial-register-certificate-${this.state.ID}`}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-18 col-md-offset-2\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block\"\r\n                                src={this.state.PhotoURL} alt=\"trailer.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"col-md-4 text-right\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#edit-commercial-register-certificate-dialog\"\r\n                                onMouseDown={() => {\r\n                                    this.setState({\r\n                                        EditCommercialRegisterCertificateDialog: <EditCommercialRegisterCertificateDialog\r\n                                            OnCancel={() => {\r\n                                                this.setState({\r\n                                                    EditCommercialRegisterCertificateDialog: null\r\n                                                });\r\n                                            }}\r\n                                            OnOK={cancelButton => {\r\n                                                cancelButton.click();\r\n                                                this.onRefresh();\r\n                                            }} />\r\n                                    });\r\n                                }}>\r\n                                Edit\r\n                                </button>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </div>               \r\n                {this.state.Preloader}\r\n                {this.state.EditCommercialRegisterCertificateDialog}\r\n            </li>        \r\n        );\r\n    }\r\n};\r\n\r\nexport default CommercialRegisterCertificateListItem;","import React, { Component } from \"react\";\r\nimport AddIdentityCardButton from \"./identityCard/AddIdentityCardButton.js\";\r\nimport AddCommercialRegisterCertificateButton from \"./commercialRegisterCertificate/AddCommercialRegisterCertificateButton.js\";\r\nimport IdentityCardListItem from \"./identityCard/IdentityCardListItem.js\";\r\nimport CommercialRegisterCertificateListItem from \"./commercialRegisterCertificate/CommercialRegisterCertificateListItem.js\";\r\nimport { getData } from \"../../../TraderFunctions\";\r\n\r\nclass DocumentsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddIdentityCardButton: null, \r\n            AddCommercialRegisterCertificateButton: null,\r\n            IdentityCardListItem: null,\r\n            CommercialRegisterCertificateListItem: null\r\n        };\r\n\r\n        this.onDocumentsUpdated = this.onDocumentsUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"I'm Here.. Going to update documents...\");\r\n        this.onDocumentsUpdated();\r\n    }\r\n\r\n    onDocumentsUpdated = () => {\r\n        let index = 0;\r\n        let identityCard;\r\n        let commercialRegisterCertificate;\r\n\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response =>\r\n            {\r\n                console.log(response);\r\n                if (response.Message === \"Identity card found.\") {\r\n                    identityCard = response.IdentityCard;\r\n                }\r\n                else {\r\n                    identityCard = undefined;\r\n                }\r\n\r\n                request = {\r\n                    Token: localStorage.Token,\r\n                    Get: \"CommercialRegisterCertificate\"\r\n                };\r\n\r\n                getData(request).then(response => {\r\n                    if (response.Message === \"Commercial register certificate found.\") {\r\n                        commercialRegisterCertificate = response.CommercialRegisterCertificate;\r\n                    }\r\n                    else {\r\n                        commercialRegisterCertificate = undefined;\r\n                    }\r\n\r\n                    (identityCard) ? this.setState({\r\n                        AddIdentityCardButton: null,\r\n                        IdentityCardListItem: <IdentityCardListItem\r\n                            Index={++index}\r\n                            OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                    }) : this.setState({\r\n                        AddIdentityCardButton: <AddIdentityCardButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                        IdentityCardListItem: null\r\n                    });\r\n\r\n                    (commercialRegisterCertificate) ? this.setState({\r\n                        AddCommercialRegisterCertificateButton: null,\r\n                        CommercialRegisterCertificateListItem: <CommercialRegisterCertificateListItem\r\n                            Index={++index}\r\n                            OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                    }) : this.setState({\r\n                        AddCommercialRegisterCertificateButton: <AddCommercialRegisterCertificateButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                        CommercialRegisterCertificateListItem: null\r\n                    });\r\n                });\r\n            });         \r\n        }      \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Documents</div>\r\n                <div style={{ padding: \"10px\", backgroundColor: \"#E5E5E5\" }}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-18 col-md-offset-2\"></div>\r\n                        <div className=\"col-md-4 text-right\">\r\n                            {this.state.AddIdentityCardButton}\r\n                            {this.state.AddCommercialRegisterCertificateButton}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {this.state.IdentityCardListItem}\r\n                    {this.state.CommercialRegisterCertificateListItem}\r\n                </ol>\r\n            </section>         \r\n        );\r\n    }\r\n};\r\n\r\nexport default DocumentsList;","import React, { Component } from \"react\";\r\nimport { getData } from \"../../TraderFunctions\";\r\nimport ProfilePhoto from \"./ProfilePhoto\";\r\nimport DocumentsList from \"./documents/DocumentsList\";\r\n\r\nclass Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            Email: \"\",\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\"\r\n        };\r\n\r\n        this.onRefresh = this.onRefresh.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onRefresh();\r\n    }\r\n\r\n    onRefresh = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Trader\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Trader found.\") {\r\n                    let trader = response.Trader;\r\n\r\n                    this.setState({\r\n                        Username: trader.Username,\r\n                        Email: trader.Email,\r\n                        FirstName: trader.FirstName,\r\n                        LastName: trader.LastName,\r\n                        Address: trader.Address,\r\n                        PhoneNumber: trader.PhoneNumber,\r\n                        Gender: trader.Gender,\r\n                        Nationality: trader.Nationality,\r\n                        DateOfBirth: trader.DateOfBirth\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group\" style={{ marginBottom: \"5px\", }}>\r\n                                    <ProfilePhoto />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                    {this.state.FirstName + \" \" + this.state.LastName}\r\n                                    </div>\r\n                                <div className=\"type-sh3\">\r\n                                    <span className=\"fas fa-briefcase\" style={{ color: \"#606060\" }}></span>   Trader\r\n                                    </div>\r\n                                <div>\r\n                                    <ol className=\"list-items theme-alt\">\r\n                                        <li className=\"list-items-row\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-2\">\r\n                                                    <strong><span className=\"fas fa-at\" style={{ color: \"#008575\" }}></span></strong>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <a style={{ textDecoration: \"none\", }}>Username:</a>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    {this.state.Username}\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li className=\"list-items-row\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-2\">\r\n                                                    <strong><span className=\"fas fa-envelope\" style={{ color: \"#008575\", }}></span></strong>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <a style={{ textDecoration: \"none\", }}>Email:</a>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    {this.state.Email}\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li className=\"list-items-row\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-2\">\r\n                                                    <strong><span className=\"fas fa-phone\" style={{ color: \"#008575\" }}></span></strong>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <a style={{ textDecoration: \"none\", }}>Phone Number:</a>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    {this.state.PhoneNumber}\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ol>\r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#00221E\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <div className=\"type-h3\" style={{ paddingTop: \"10px\", }}>\r\n                                    Details\r\n                                    </div>\r\n                                <ol className=\"list-items theme-alt\">\r\n                                    <li className=\"list-items-row\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-2\">\r\n                                                <strong><span className=\"fas fa-birthday-cake\" style={{ color: \"#008575\", }}></span></strong>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Date of Birth:</a>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                {this.state.DateOfBirth}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"list-items-row\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-2\">\r\n                                                <strong><span className={(this.state.Gender === \"Male\") ? \"fas fa-male\" : \"fas fa-female\"} style={{ color: \"#008575\", }}></span></strong>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Gender:</a>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                {this.state.Gender}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"list-items-row\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-2\">\r\n                                                <strong><span className=\"fas fa-flag\" style={{ color: \"#008575\" }}></span></strong>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Nationality:</a>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                {this.state.Nationality}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"list-items-row\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-2\">\r\n                                                <strong><span className=\"fas fa-map-marker\" style={{ color: \"#008575\" }}></span></strong>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Address:</a>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                {this.state.Address}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <DocumentsList />\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Profile;","import React, { Component } from \"react\";\r\n\r\nclass JobOffers extends Component {\r\n   render() {\r\n        return (\r\n            <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"job_requests.png\" src=\"./images/job_requests.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div className=\"col-md-12 col-md-pull-12\">\r\n                                <div className=\"type-h3\">Job Requests</div>\r\n                                <div className=\"type-sh3\">Under Construction</div>\r\n                                <p>For now, it's lonely here! Drivers' Job Requests are displayed here.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default JobOffers;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { addJobOffer } from \"../../../TraderFunctions.js\";\r\n\r\nclass AddJobOfferDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LoadingPlace: \"\",\r\n            UnloadingPlace: \"\",\r\n            TripType: \"One Way\",\r\n            CargoType: \"\",\r\n            CargoWeight: 0,          \r\n            LoadingDate: new Date(),\r\n            LoadingTime: new Date().getTime(),\r\n            AcceptedDelay: 0,\r\n            Price: 0.00,\r\n            JobOfferType: \"Fixed-Price\",\r\n            EntryExit: 0,\r\n\r\n            ValidCargoType: false,\r\n            ValidCargoWeight: false,\r\n            ValidLoadingPlace: false,\r\n            ValidUnloadingPlace: false,\r\n            ValidLoadingDate: false,\r\n            ValidLoadingTime: false,\r\n            ValidAcceptedDelay: false,\r\n            ValidPrice: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                CargoType: \"\",\r\n                CargoWeight: \"\",\r\n                LoadingPlace: \"\",\r\n                UnloadingPlace: \"\",\r\n                LoadingDate: \"\",\r\n                LoadingTime: \"\",\r\n                AcceptedDelay: \"\",\r\n                Price: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        if (name === \"EntryExit\" ||\r\n            name === \"JobOfferType\") {\r\n            console.log(`Value of ${name} is ${value}`);\r\n        }\r\n        \r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCargoType = this.state.ValidCargoType;\r\n        let ValidCargoWeight = this.state.ValidCargoWeight;\r\n        let ValidLoadingPlace = this.state.ValidLoadingPlace;\r\n        let ValidUnloadingPlace = this.state.ValidUnloadingPlace;\r\n        let ValidLoadingDate = this.state.ValidLoadingDate;\r\n        let ValidLoadingTime = this.state.ValidLoadingTime;\r\n        let ValidAcceptedDelay = this.state.AcceptedDelay;\r\n        let ValidPrice = this.state.ValidPrice;\r\n\r\n        switch (field) {\r\n            case \"CargoType\":\r\n                ValidCargoType = (value !== \"\");\r\n                Errors.CargoType = ValidCargoType ? \"\" : \"Cargo type is required.\";\r\n                break;\r\n            case \"CargoWeight\":\r\n                ValidCargoWeight = (value !== \"\");\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight is required.\"; \r\n\r\n                if (Errors.CargoWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCargoWeight = (value >= 100);\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight must be greater than 100 lbs.\";\r\n                break;\r\n            case \"LoadingPlace\":\r\n                ValidLoadingPlace = (value !== \"\");\r\n                Errors.LoadingPlace = ValidLoadingPlace ? \"\" : \"Loading place is required.\";\r\n                break;\r\n            case \"UnloadingPlace\":\r\n                ValidUnloadingPlace = (value !== \"\");\r\n                Errors.UnloadingPlace = ValidUnloadingPlace ? \"\" : \"Unloading place is required.\";\r\n                break;\r\n            case \"LoadingDate\":\r\n                ValidLoadingDate = (value !== \"\");\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date is required.\";\r\n\r\n                if (Errors.LoadingDate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidLoadingDate = (new Date(value) >= new Date());\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date must be later than yesterday.\";\r\n                break;\r\n            case \"LoadingTime\":\r\n                ValidLoadingTime = (value !== \"\");\r\n                Errors.LoadingTime = ValidLoadingTime ? \"\" : \"Loading time is required.\";\r\n                break;\r\n            case \"AcceptedDelay\":\r\n                ValidAcceptedDelay = (value !== \"\");\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay is required.\";\r\n\r\n                if (Errors.AcceptedDelay !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidAcceptedDelay = (value >= 0 && value <= 48);\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay can be in the range of 0 to 48 hours.\";\r\n                break;\r\n            case \"Price\":\r\n                ValidPrice = (value !== \"\");\r\n                Errors.Price = ValidPrice ? \"\" : \"Price is required.\";\r\n\r\n                if (Errors.Price !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPrice = (value > 0.00);\r\n                Errors.Price = ValidPrice ? \"\" : \"Price must be more than $0.00.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCargoType: ValidCargoType,\r\n            ValidCargoWeight: ValidCargoWeight,\r\n            ValidLoadingPlace: ValidLoadingPlace,\r\n            ValidUnloadingPlace: ValidUnloadingPlace,\r\n            ValidLoadingDate: ValidLoadingDate,\r\n            ValidLoadingTime: ValidLoadingTime,\r\n            ValidAcceptedDelay: ValidAcceptedDelay,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidCargoType &&\r\n                        this.state.ValidCargoWeight &&\r\n                        this.state.ValidLoadingPlace &&\r\n                        this.state.ValidUnloadingPlace &&\r\n                        this.state.ValidLoadingDate &&\r\n                        this.state.ValidLoadingTime &&\r\n                        this.state.AcceptedDelay &&\r\n                        this.state.ValidPrice\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newJobOffer = {\r\n            Token: localStorage.Token,\r\n            TripType: this.state.TripType,\r\n            CargoType: this.state.CargoType,\r\n            CargoWeight: this.state.CargoWeight,\r\n            LoadingPlace: this.state.LoadingPlace,\r\n            UnloadingPlace: this.state.UnloadingPlace,\r\n            LoadingDate: this.state.LoadingDate,\r\n            LoadingTime: this.state.LoadingTime,\r\n            EntryExit: this.state.EntryExit,\r\n            Price: this.state.Price,\r\n            AcceptedDelay: this.state.AcceptedDelay,\r\n            JobOfferType: this.state.JobOfferType\r\n        };\r\n\r\n        console.log(\"Going to add Job offer.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addJobOffer(newJobOffer).then(response => {\r\n            if (response.Message === \"Job offer is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div className=\"modal\" id=\"add-job-offer-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Add Job Offer</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                                        alt=\"job_offfers.png\" src=\"./images/job_offers.png\" data-source-index=\"2\" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Place</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"LoadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LoadingPlace} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LoadingPlace}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Unloading Place</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"UnloadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.UnloadingPlace} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.UnloadingPlace}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Trip Type</label><br />\r\n                                                    <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                        <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                            <span>{this.state.TripType}</span>\r\n                                                            <span className=\"caret\"></span>\r\n                                                        </button>\r\n                                                        <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                            <li><a onClick={() => { this.setState({ TripType: \"One Way\" }); }}>One Way</a></li>\r\n                                                            <li><a onClick={() => { this.setState({ TripType: \"Two Way\" }); }}>Two Way</a></li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Cargo Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"CargoType\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.CargoType} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.CargoType}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Cargo Weight (lbs)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"CargoWeight\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.CargoWeight} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.CargoWeight}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Date</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"LoadingDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LoadingDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LoadingDate}</span>\r\n                                                </div>                                   \r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Time</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"time\" name=\"LoadingTime\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LoadingTime} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LoadingTime}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Accepted Delay (Hours)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"AcceptedDelay\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.AcceptedDelay} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.AcceptedDelay}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Price (USD)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" min=\"0.00\" step=\"0.01\" max=\"100.00\" name=\"Price\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={this.state.Price} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Price}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <button type=\"button\" data-toggle=\"button\" className=\"btn btn-toggle-switch\"\r\n                                                        autocomplete=\"off\" aria-pressed=\"false\"\r\n                                                        onClick={() => {\r\n                                                            this.state.JobOfferType = (this.state.JobOfferType === \"Fixed-Price\") ?\r\n                                                                \"Auctionable\" : \"Fixed-Price\";\r\n                                                        }}>\r\n                                                        <span className=\"stateLabel stateLabel-on\">Auctionable Job Offer</span>\r\n                                                        <span className=\"stateLabel stateLabel-off\">Fixed-Price Job Offer</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"checkbox\">\r\n                                                        <label className=\"control-label\">\r\n                                                            <input type=\"checkbox\" name=\"EntryExit\"\r\n                                                                value={this.state.EntryExit} onChange={() => {\r\n                                                                    this.state.EntryExit = this.state.EntryExit ? 0 : 1;\r\n                                                                }}></input>\r\n                                                            <span>Entry/Exit</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>   \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddJobOfferDialog;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { updateJobOffer } from \"../../../TraderFunctions.js\";\r\n\r\nclass EditJobOfferDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobOfferID: this.props.JobOffer.JobOfferID,\r\n            LoadingPlace: this.props.JobOffer.LoadingPlace,\r\n            UnloadingPlace: this.props.JobOffer.UnloadingPlace,\r\n            TripType: this.props.JobOffer.TripType,\r\n            CargoType: this.props.JobOffer.CargoType,\r\n            CargoWeight: this.props.JobOffer.CargoWeight,\r\n            LoadingDate: this.props.JobOffer.LoadingDate,\r\n            LoadingTime: this.props.JobOffer.LoadingTime,\r\n            AcceptedDelay: this.props.JobOffer.AcceptedDelay,\r\n            Price: this.props.JobOffer.Price,\r\n            JobOfferType: this.props.JobOffer.JobOfferType,\r\n            EntryExit: this.props.JobOffer.EntryExit,\r\n\r\n            ValidCargoType: true,\r\n            ValidCargoWeight: true,\r\n            ValidLoadingPlace: true,\r\n            ValidUnloadingPlace: true,\r\n            ValidLoadingDate: true,\r\n            ValidLoadingTime: true,\r\n            ValidAcceptedDelay: true,\r\n            ValidPrice: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                CargoType: \"\",\r\n                CargoWeight: \"\",\r\n                LoadingPlace: \"\",\r\n                UnloadingPlace: \"\",\r\n                LoadingDate: \"\",\r\n                LoadingTime: \"\",\r\n                AcceptedDelay: \"\",\r\n                Price: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCargoType = this.state.ValidCargoType;\r\n        let ValidCargoWeight = this.state.ValidCargoWeight;\r\n        let ValidLoadingPlace = this.state.ValidLoadingPlace;\r\n        let ValidUnloadingPlace = this.state.ValidUnloadingPlace;\r\n        let ValidLoadingDate = this.state.ValidLoadingDate;\r\n        let ValidLoadingTime = this.state.ValidLoadingTime;\r\n        let ValidAcceptedDelay = this.state.AcceptedDelay;\r\n        let ValidPrice = this.state.ValidPrice;\r\n\r\n        switch (field) {\r\n            case \"CargoType\":\r\n                ValidCargoType = (value !== \"\");\r\n                Errors.CargoType = ValidCargoType ? \"\" : \"Cargo type is required.\";\r\n                break;\r\n            case \"CargoWeight\":\r\n                ValidCargoWeight = (value !== \"\");\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight is required.\";\r\n\r\n                if (Errors.CargoWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCargoWeight = (value >= 100);\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight must be greater than 100 lbs.\";\r\n                break;\r\n            case \"LoadingPlace\":\r\n                ValidLoadingPlace = (value !== \"\");\r\n                Errors.LoadingPlace = ValidLoadingPlace ? \"\" : \"Loading place is required.\";\r\n                break;\r\n            case \"UnloadingPlace\":\r\n                ValidUnloadingPlace = (value !== \"\");\r\n                Errors.UnloadingPlace = ValidUnloadingPlace ? \"\" : \"Unloading place is required.\";\r\n                break;\r\n            case \"LoadingDate\":\r\n                ValidLoadingDate = (value !== \"\");\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date is required.\";\r\n\r\n                if (Errors.LoadingDate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidLoadingDate = (new Date(value) >= new Date());\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date must be later than yesterday.\";\r\n                break;\r\n            case \"LoadingTime\":\r\n                break;\r\n            case \"AcceptedDelay\":\r\n                ValidAcceptedDelay = (value !== \"\");\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay is required.\";\r\n\r\n                if (Errors.AcceptedDelay !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidAcceptedDelay = (value >= 0 && value <= 48);\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay can be in the range of 0 to 48 hours.\";\r\n                break;\r\n            case \"Price\":\r\n                ValidPrice = (value !== \"\");\r\n                Errors.Price = ValidPrice ? \"\" : \"Price is required.\";\r\n\r\n                if (Errors.Price !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPrice = (value > 0.00);\r\n                Errors.Price = ValidPrice ? \"\" : \"Price must be more than $0.00.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCargoType: ValidCargoType,\r\n            ValidCargoWeight: ValidCargoWeight,\r\n            ValidLoadingPlace: ValidLoadingPlace,\r\n            ValidUnloadingPlace: ValidUnloadingPlace,\r\n            ValidLoadingDate: ValidLoadingDate,\r\n            ValidLoadingTime: ValidLoadingTime,\r\n            ValidAcceptedDelay: ValidAcceptedDelay,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidCargoType &&\r\n                    this.state.ValidCargoWeight &&\r\n                    this.state.ValidLoadingPlace &&\r\n                    this.state.ValidUnloadingPlace &&\r\n                    this.state.ValidLoadingDate &&\r\n                    this.state.ValidLoadingTime &&\r\n                    this.state.AcceptedDelay &&\r\n                    this.state.ValidPrice\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedJobOffer = {\r\n            Token: localStorage.Token,\r\n            JobOfferID: this.state.JobOfferID,\r\n            TripType: this.state.TripType,\r\n            CargoType: this.state.CargoType,\r\n            CargoWeight: this.state.CargoWeight,\r\n            LoadingPlace: this.state.LoadingPlace,\r\n            UnloadingPlace: this.state.UnloadingPlace,\r\n            LoadingDate: this.state.LoadingDate,\r\n            LoadingTime: this.state.LoadingTime,\r\n            EntryExit: this.state.EntryExit,\r\n            Price: this.state.Price,\r\n            AcceptedDelay: this.state.AcceptedDelay,\r\n            JobOfferType: this.state.JobOfferType\r\n        };\r\n\r\n        console.log(\"Going to update Job offer.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateJobOffer(updatedJobOffer).then(response => {\r\n            if (response.Message === \"Job offer is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div className=\"modal\" id={`edit-job-offer-dialog-${this.props.DialogID}`}\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Job Offer</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                                        alt=\"job_offfers.png\" src=\"./images/job_offers.png\" data-source-index=\"2\" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Place</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"LoadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LoadingPlace} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LoadingPlace}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Unloading Place</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"UnloadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.UnloadingPlace} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.UnloadingPlace}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Trip Type</label><br />\r\n                                                    <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                        <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                            <span>{this.state.TripType}</span>\r\n                                                            <span className=\"caret\"></span>\r\n                                                        </button>\r\n                                                        <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                            <li><a onClick={() => { this.setState({ TripType: \"One Way\" }); }}>One Way</a></li>\r\n                                                            <li><a onClick={() => { this.setState({ TripType: \"Two Way\" }); }}>Two Way</a></li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Cargo Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"CargoType\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.CargoType} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.CargoType}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Cargo Weight (lbs)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"CargoWeight\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.CargoWeight} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.CargoWeight}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Date</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"LoadingDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LoadingDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LoadingDate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Time</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"time\" name=\"LoadingTime\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LoadingTime} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LoadingTime}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Accepted Delay (Hours)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"AcceptedDelay\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.AcceptedDelay} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.AcceptedDelay}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Price (USD)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" min=\"0.00\" step=\"0.01\" max=\"100.00\" name=\"Price\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={this.state.Price} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Price}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <button type=\"button\" data-toggle=\"button\" className={(this.state.JobOfferType === \"Auctionable\") ? \"btn btn-toggle-switch active\" : \"btn btn-toggle-switch\"}\r\n                                                        autocomplete=\"off\" aria-pressed={(this.state.JobOfferType === \"Auctionable\") ? \"true\" : \"false\"}\r\n                                                        onClick={() => {\r\n                                                            this.state.JobOfferType = (this.state.JobOfferType === \"Fixed-Price\") ?\r\n                                                                \"Auctionable\" : \"Fixed-Price\";\r\n                                                            this.validateField(\"\", \"\");\r\n                                                        }}>\r\n                                                        <span className=\"stateLabel stateLabel-on\">Auctionable Job Offer</span>\r\n                                                        <span className=\"stateLabel stateLabel-off\">Fixed-Price Job Offer</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"checkbox\">\r\n                                                        <label className=\"control-label\">\r\n                                                            <input type=\"checkbox\" name=\"EntryExit\" defaultChecked={(this.state.EntryExit === 1) ? \"checked\" : \"\"}\r\n                                                                value={this.state.EntryExit} onChange={() => {\r\n                                                                    this.state.EntryExit = (this.state.EntryExit === 1) ? 0 : 1;\r\n                                                                    this.validateField(\"\", \"\");\r\n                                                                }}></input>\r\n                                                            <span>Entry/Exit</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default EditJobOfferDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { getData, deleteJobOffer } from \"../../../TraderFunctions.js\";\r\nimport EditJobOfferDialog from \"./EditJobOfferDialog.js\";\r\n\r\nclass JobOffersList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllJobOffers: [],\r\n            JobOffers: [],\r\n            EditJobOfferDialogs: [],\r\n            SearchString: \"\",\r\n            Preloader: null,\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    onDelete = index => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedJobOffer = {\r\n            Token: localStorage.Token,\r\n            JobOfferID: this.state.JobOffers[index].JobOfferID \r\n        };\r\n\r\n        console.log(`Going to delete JobOffers[${index}]...`);\r\n\r\n        deleteJobOffer(discardedJobOffer).then(response => {\r\n            console.log(response);\r\n            if (response.Message === \"Job offer is deleted.\") {\r\n                this.onComponentUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobOffers\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job offers found.\") {\r\n                    console.log(response);\r\n                    this.setState({\r\n                        AllJobOffers: response.JobOffers,\r\n                        JobOffers: response.JobOffers\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllJobOffers: [],\r\n                        JobOffers: []\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.SearchString === \"\") {         \r\n            this.setState({\r\n                JobOffers: this.state.AllJobOffers\r\n            });\r\n            console.log(\"AFTER SETTING STATE...\");\r\n        }\r\n      \r\n        const allJobOffers = this.state.AllJobOffers;\r\n        let filteredJobOffers = [];\r\n\r\n        for (var i = 0; i < allJobOffers.length; i++) {\r\n            if (allJobOffers[i].LoadingPlace.includes(this.state.SearchString) ||\r\n                allJobOffers[i].UnloadingPlace.includes(this.state.SearchString)) {\r\n                filteredJobOffers[i] = allJobOffers[i];\r\n            }\r\n        }\r\n\r\n        console.log(filteredJobOffers);\r\n\r\n        this.setState({\r\n            JobOffers: filteredJobOffers\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Your Job Offers</div>\r\n                <nav className=\"navbar navbar-default\">\r\n                    <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5\" }}>\r\n                        <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                            <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                                <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search by Places\"\r\n                                            autoComplete=\"off\"\r\n                                            style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                            value={this.state.SearchString} onChange={this.onChange} />\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {this.state.JobOffers.map((jobOffer, index) => {\r\n                        const hoursSinceCreated = Math.abs(new Date() - new Date(jobOffer.TimeCreated)) / 36e5;\r\n\r\n                        return <li className=\"list-items-row\" key={index}>\r\n                            <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#${jobOffer.JobOfferID}`}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-2\">\r\n                                        <i className=\"glyph glyph-add\"></i>\r\n                                        <i className=\"glyph glyph-remove\"></i>\r\n                                        <strong>{index + 1}</strong>\r\n                                    </div>\r\n                                    <div className=\"col-md-2\">\r\n                                        <img src=\"./images/job_offers.png\" alt=\"job_offers.png\" height=\"50\" />\r\n                                    </div>\r\n                                    <div className=\"col-md-6\">\r\n                                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                            <span className=\"fas fa-map-marker-alt\" style={{ color: \"#606060\" }}></span>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Loading Place:</span> {jobOffer.LoadingPlace}\r\n                                        </div>\r\n                                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                            <span className=\"fas fa-map-marker-alt\" style={{ color: \"#606060\" }}></span>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Unloading Place:</span> {jobOffer.UnloadingPlace}\r\n                                        </div>\r\n                                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                            <span className=\"fas fa-map-signs\" style={{ color: \"#606060\" }}></span>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Trip Type:</span> {jobOffer.TripType}\r\n                                        </div>\r\n                                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                            <span className=\"fas fa-tag\" style={{ color: \"#606060\" }}></span>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Price:</span> {`$${jobOffer.Price}`}\r\n                                        </div>\r\n                                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                            <span className=\"fas fa-clock\" style={{ color: \"#606060\" }}></span>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Accepted Delay:</span> {`${jobOffer.AcceptedDelay} Hour(s)`}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6\">\r\n                                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                            <span className=\"fas fa-box\" style={{ color: \"#606060\" }}></span>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Cargo Type:</span> {jobOffer.CargoType}\r\n                                        </div>\r\n                                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                            <span className=\"fas fa-weight\" style={{ color: \"#606060\" }}></span>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Cargo Weight:</span> {`${jobOffer.CargoWeight} lbs.`}\r\n                                        </div>\r\n                                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                            <span className=\"fas fa-calendar\" style={{ color: \"#606060\" }}></span>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Loading Date:</span> {jobOffer.LoadingDate}\r\n                                        </div>\r\n                                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                            <span className=\"fas fa-clock\" style={{ color: \"#606060\" }}></span>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Loading Time:</span> {jobOffer.LoadingTime}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6\">\r\n                                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                            <span className=\"fas fa-hand-holding-usd\" style={{ color: \"#606060\" }}></span>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Offer Type:</span> {jobOffer.JobOfferType}\r\n                                        </div>\r\n                                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                            <span className=\"fas fa-id-badge\" style={{ color: \"#606060\" }}></span>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Entry/Exit:</span> {(jobOffer.EntryExit === 1) ?\r\n                                                <span className=\"fa fa-check-circle\" style={{ fontWeight: \"bold\", color: \"#25AE88\" }}></span> :\r\n                                                <span className=\"fa fa-times-circle\" style={{ fontWeight: \"bold\", color: \"#D75A4A\" }}></span>}\r\n                                        </div>\r\n                                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                            <span className=\"fas fa-plug\" style={{ color: \"#606060\" }}></span>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Available:</span> {(hoursSinceCreated < jobOffer.WaitingTime) ?\r\n                                                <span className=\"fa fa-check-circle\" style={{ fontWeight: \"bold\", color: \"#25AE88\" }}></span> :\r\n                                                <span className=\"fa fa-times-circle\" style={{ fontWeight: \"bold\", color: \"#D75A4A\" }}></span>}\r\n                                        </div>\r\n                                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                            <span className=\"fas fa-calendar\" style={{ color: \"#606060\" }}></span>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Created:</span> {`${(Math.floor(hoursSinceCreated))} Hour(s) Ago`}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"collapse\" id={jobOffer.JobOfferID}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-18 col-md-offset-2\">\r\n                                    </div>\r\n                                    <div className=\"col-md-4 text-right\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-primary\"\r\n                                            data-toggle=\"modal\"\r\n                                            data-target={`#edit-job-offer-dialog-${index}`}\r\n                                            onMouseDown={() => {\r\n                                                let editJobOfferDialogs = this.state.EditJobOfferDialogs;\r\n\r\n                                                editJobOfferDialogs[index] = <EditJobOfferDialog\r\n                                                    DialogID={index}\r\n                                                    JobOffer={jobOffer}\r\n                                                    OnCancel={() => {\r\n                                                        let editJobOfferDialogs = this.state.EditJobOfferDialogs;\r\n                                                        editJobOfferDialogs[index] = null;\r\n\r\n                                                        this.setState({\r\n                                                            EditJobOfferDialogs: editJobOfferDialogs\r\n                                                        });\r\n                                                    }}\r\n                                                    OnOK={cancelButton => {\r\n                                                        cancelButton.click();\r\n                                                        this.onComponentUpdated();\r\n                                                    }} />;\r\n\r\n                                                this.setState({\r\n                                                    EditJobOfferDialogs: editJobOfferDialogs\r\n                                                });\r\n                                            }}>\r\n                                            Edit\r\n                                            </button>\r\n                                        <button type=\"button\" className=\"btn btn-danger\" onClick={async () => { await this.onDelete(index); }}>Delete</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {this.state.EditJobOfferDialogs[index]}\r\n                        </li>\r\n                    })}\r\n                </ol>\r\n                {this.state.Preloader}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default JobOffersList;","import React, { Component } from \"react\";\r\nimport AddJobOfferDialog from \"./AddJobOfferDialog.js\";\r\nimport JobOffersList from \"./JobOffersList.js\";\r\n\r\nclass JobOffers extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddJobOfferDialog: null,\r\n            JobOffersList: null\r\n        };\r\n\r\n        this.onJobOffersUpdated = this.onJobOffersUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onJobOffersUpdated();\r\n    }\r\n\r\n    onJobOffersUpdated = () => {\r\n        this.JobOffersList.onComponentUpdated();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"job_offers.png\" src=\"./images/job_offers.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div className=\"col-md-12 col-md-pull-12\">\r\n                                <div className=\"type-h3\">Job Offers</div>\r\n                                <div className=\"type-sh3\">Manage Your Job Offers</div>\r\n                                <p>Hi There! Want to transport your freight somewhere? Why not create a new job offer now!!</p>\r\n                                <div className=\"btn-group\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-primary\"\r\n                                        data-toggle=\"modal\"\r\n                                        data-target=\"#add-job-offer-dialog\"\r\n                                        onMouseDown={() => {\r\n                                            this.setState({\r\n                                                AddJobOfferDialog: (<AddJobOfferDialog\r\n                                                    OnCancel={() => {\r\n                                                        this.setState({\r\n                                                            AddJobOfferDialog: null,\r\n                                                        });\r\n                                                    }}\r\n                                                    OnOK={cancelButton => {\r\n                                                        cancelButton.click();\r\n                                                        this.onJobOffersUpdated();\r\n                                                    }} />),\r\n                                            });\r\n                                        }}>\r\n                                        New Job Offer\r\n                                        </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <JobOffersList ref={jobOffersList => this.JobOffersList = jobOffersList} />\r\n                {this.state.AddJobOfferDialog}             \r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default JobOffers;","import React, { Component } from \"react\";\r\n\r\nclass OnGoingJobs extends Component {\r\n   render() {\r\n        return (\r\n            <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"on_going_jobs.png\" src=\"./images/on_going_jobs.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div className=\"col-md-12 col-md-pull-12\">\r\n                                <div className=\"type-h3\">On-Going Jobs</div>\r\n                                <div className=\"type-sh3\">Under Construction</div>\r\n                                <p>For now, it's lonely here!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default OnGoingJobs;","import React, { Component } from \"react\";\r\nimport JobRequests from \"./jobRequests/JobRequests.js\"; \r\nimport JobOffers from \"./jobOffers/JobOffers.js\";\r\nimport OnGoingJobs from \"./onGoingJobs/OnGoingJobs.js\";\r\n\r\nclass Jobs extends Component {\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"entity-list theme-alt\" style={{ backgroundColor: \"#161616\" }}>\r\n                    <div className=\"entity-list-item\" href=\"#job-requests\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">\r\n                        <div className=\"item-icon\" style={{ backgroundColor: \"rgba(0, 0, 0, 0)\" }}>\r\n                            <img src=\"./images/job_requests.png\" alt=\"job_requests.png\" />\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Job Requests</div>\r\n                            <div className=\"content-text-secondary\">Explore job requests from Drivers.</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\" href=\"#job-offers\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">\r\n                        <div className=\"item-icon\" style={{ backgroundColor: \"rgba(0, 0, 0, 0)\" }}>\r\n                            <img src=\"./images/job_offers.png\" alt=\"job_offers.png\" />\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Job Offers</div>\r\n                            <div className=\"content-text-secondary\">Create job opportunities for places of your own choice.</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\" href=\"#on-going-jobs\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">\r\n                        <div className=\"item-icon\" style={{ backgroundColor: \"rgba(0, 0, 0, 0)\" }}>\r\n                            <img src=\"./images/on_going_jobs.png\" alt=\"on_going_jobs.png\" />\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">On-Going Jobs</div>\r\n                            <div className=\"content-text-secondary\">Manage your jobs that are in progress.</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"tab-content\">\r\n                    <div role=\"tabpanel\" className=\"tab-pane active\" id=\"job-requests\">\r\n                        <JobRequests />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"job-offers\">\r\n                        <JobOffers />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"on-going-jobs\">\r\n                        <OnGoingJobs />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Jobs;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { getData, generalSettings } from \"../../TraderFunctions\";\r\n\r\nclass GeneralSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\",\r\n\r\n            ValidFirstName: true,\r\n            ValidLastName: true,\r\n            ValidPhoneNumber: true,\r\n\r\n            ValidForm: false,\r\n            SettingsSaved: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                PhoneNumber: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Trader\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader found.\") {\r\n                    let trader = response.Trader;\r\n\r\n                    this.setState({\r\n                        FirstName: trader.FirstName,\r\n                        LastName: trader.LastName,\r\n                        Address: trader.Address,\r\n                        PhoneNumber: trader.PhoneNumber,\r\n                        Gender: trader.Gender,\r\n                        Nationality: trader.Nationality,\r\n                        DateOfBirth: trader.DateOfBirth\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        FirstName: \"\",\r\n                        LastName: \"\",\r\n                        Address: \"\",\r\n                        PhoneNumber: \"\",\r\n                        Gender: \"\",\r\n                        Nationality: \"\",\r\n                        DateOfBirth: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFirstName = this.state.ValidFirstName;\r\n        let ValidLastName = this.state.ValidLastName;\r\n        let ValidPhoneNumber = this.state.ValidPhoneNumber;\r\n\r\n        switch (field) {\r\n            case \"FirstName\":\r\n                ValidFirstName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.FirstName = ValidFirstName ? \"\" : \"First name is invalid.\";\r\n                break;\r\n            case \"LastName\":\r\n                ValidLastName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.LastName = ValidLastName ? \"\" : \"Last name is invalid.\";\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = value.match(/^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/);\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFirstName: ValidFirstName,\r\n            ValidLastName: ValidLastName,\r\n            ValidPhoneNumber: ValidPhoneNumber,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidFirstName &&\r\n                    this.state.ValidLastName &&\r\n                    this.state.ValidPhoneNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedTrader = {\r\n            Token: localStorage.Token,\r\n            FirstName: this.state.FirstName,\r\n            LastName: this.state.LastName,\r\n            Address: this.state.Address,\r\n            PhoneNumber: this.state.PhoneNumber,\r\n            Gender: this.state.Gender,\r\n            Nationality: this.state.Nationality,\r\n            DateOfBirth: this.state.DateOfBirth,\r\n        }\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await generalSettings(updatedTrader).then(response => {\r\n            if (response.Message === \"Trader is updated.\") {\r\n                this.forceUpdate();\r\n                this.props.OnSettingsSaved();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>General Settings</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-comment\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"FirstName\" autoComplete=\"off\"\r\n                                        value={this.state.FirstName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">First Name</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"FirstName\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-comment\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"LastName\" autoComplete=\"off\"\r\n                                        value={this.state.LastName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Last Name</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"LastName\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-birthday-cake\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\" className=\"form-control\" name=\"DateOfBirth\" autoComplete=\"off\"\r\n                                        value={this.state.DateOfBirth} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Date of Birth</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className={this.state.Gender === \"Male\" ? \"fas fa-male\" : \"fas fa-female\"}></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"dropdown\" style={{ width: \"193px\", maxWidth: \"296px\", }}>\r\n                                    <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                        aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                        <span>{this.state.Gender}</span>\r\n                                        <span className=\"caret\"></span>\r\n                                    </button>\r\n                                    <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                        <li><a onClick={() => { this.setState({ Gender: \"Male\" }); this.validateField(\"\", \"\"); }}>Male</a></li>\r\n                                        <li><a onClick={() => { this.setState({ Gender: \"Female\" }); this.validateField(\"\", \"\"); }}>Female</a></li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Gender</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-flag\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"Nationality\" autoComplete=\"off\"\r\n                                        value={this.state.Nationality} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Nationality</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-phone\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autoComplete=\"off\"\r\n                                        placeholder=\"+XXXXXXXXXXXX\" value={this.state.PhoneNumber} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Phone Number</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"PhoneNumber\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-location-arrow\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"Address\" autoComplete=\"off\"\r\n                                        value={this.state.Address} onChange={this.onChange} style={{ width: \"393px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Address</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default GeneralSettings;","import React, { Component } from \"react\";\r\n\r\nclass Payments extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"jumbotron\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"tools.png\" src=\"./images/tools.png\" style={{ borderRadius: \"50%\" }} data-source-index=\"1\" />\r\n                            </div>\r\n                            <div class=\"col-md-12 col-md-pull-12\">\r\n                                <div class=\"type-h3\" style={{ color: \"#008575\", }}>\r\n                                    Payments\r\n                    </div>\r\n                                <div class=\"type-sh3\" style={{ color: \"#949496\", }}>\r\n                                    Under-Construction\r\n                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Payments;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { usernameAndEmailSettings } from \"../../TraderFunctions.js\";\r\n\r\nclass CodeConfirmationDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ConfirmCode: \"\",\r\n\r\n            ValidConfirmCode: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                ConfirmCode: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidConfirmCode = this.state.ValidConfirmCode;\r\n\r\n        ValidConfirmCode = value === this.props.Code;\r\n        Errors.ConfirmCode = ValidConfirmCode ? \"\" : \"Invalid code.\";\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidConfirmCode: ValidConfirmCode,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidConfirmCode\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedTrader = {\r\n            Token: localStorage.Token,\r\n            Username: this.props.Username,\r\n            Email: this.props.Email,\r\n        };\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await usernameAndEmailSettings(updatedTrader).then(response => {\r\n            if (response.Message === \"Trader is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div\r\n                    className=\"modal in\" id=\"code-confirmation-dialog\" tabIndex=\"-1\"\r\n                    role=\"dialog\" aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\"\r\n                    style={{ display: \"block\" }}>\r\n                    <div className=\"modal-dialog\">\r\n                        {this.state.Preloader}\r\n                        <div className=\"modal-dialog\">\r\n                            <div className=\"modal-content\">\r\n                                <section>\r\n                                    <form noValidate onSubmit={this.onSubmit}>\r\n                                        <div className=\"modal-header\">\r\n                                            <img alt=\"passcode.png\" src=\"./images/passcode.png\" height=\"60\" />\r\n                                            <div className=\"type-h3\">Email Confirmation</div>\r\n                                            <div className=\"type-sh3\">We delivered a confirmation code to your email.</div>\r\n                                        </div>\r\n                                        <div className=\"modal-body\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-12\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"control-label\">Confirmation Code</label>\r\n                                                        <input type=\"text\" name=\"ConfirmCode\" className=\"form-control\" autocomplete=\"off\"\r\n                                                            value={this.state.ConfirmCode} onChange={this.onChange} />\r\n                                                        <span className=\"text-danger\">{this.state.Errors.ConfirmCode}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"modal-footer\">\r\n                                            <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                                ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                            <input type=\"submit\" value=\"Confirm\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </form>\r\n                                </section>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default CodeConfirmationDialog;","import React, { Component } from \"react\";\r\nimport CodeConfirmationDialog from \"./CodeConfirmationDialog.js\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport {\r\n    getData,\r\n    validateUsername,\r\n    validateEmail,\r\n    sendCode,\r\n    usernameAndEmailSettings\r\n} from \"../../TraderFunctions\";\r\n\r\nclass UsernameAndEmailSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            NewUsername: \"\",\r\n\r\n            Email: \"\",\r\n            NewEmail: \"\",\r\n\r\n            Code: \"\",\r\n\r\n            ValidNewUsername: true,\r\n            ValidNewEmail: true,\r\n\r\n            ValidForm: false,\r\n            CodeConfirmationDialog: null,\r\n\r\n            Errors: {\r\n                NewUsername: \"\",\r\n                NewEmail: \"\",\r\n            },\r\n\r\n            CodeConfirmation: \"\",\r\n            Preloader: null\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Trader\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader found.\") {\r\n                    let trader = response.Trader;\r\n\r\n                    this.setState({\r\n                        Username: trader.Username,\r\n                        NewUsername: trader.Username,\r\n                        Email: trader.Email,\r\n                        NewEmail: trader.Email\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Username: \"\",\r\n                        NewUsername: \"\",\r\n                        Email: \"\",\r\n                        NewEmail: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewUsername = this.state.ValidNewUsername;\r\n        let ValidNewEmail = this.state.ValidNewEmail;\r\n        \r\n        switch (field) {\r\n            case \"NewUsername\":\r\n                ValidNewUsername = (value !== \"\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is required.\";\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value.match(/^[a-z0-9]+$/i));\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is invalid.\";\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value !== \"Username is unavailable.\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is unavailable.\";\r\n                break;\r\n            case \"NewEmail\":\r\n                ValidNewEmail = (value !== \"\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is required.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i));\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is invalid.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value !== \"Email is already taken.\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is already taken.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewUsername: ValidNewUsername,\r\n            ValidNewEmail: ValidNewEmail,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidNewUsername &&\r\n                    this.state.ValidNewEmail\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername === this.state.Username &&\r\n            this.state.NewEmail === this.state.Email) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername !== this.state.Username) {\r\n            const response = await validateUsername(this.state.NewUsername);\r\n\r\n            if (response.Message === \"Username is unavailable.\") {\r\n                this.validateField(\"NewUsername\", response.Message);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail !== this.state.Email) {\r\n            const response = await validateEmail(this.state.NewEmail);\r\n            if (response.Message === \"Email is already taken.\") {\r\n                this.validateField(\"NewEmail\", response.Message);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail === this.state.Email) {\r\n            const updatedTrader = {\r\n                Token: localStorage.Token,\r\n                Username: this.state.NewUsername,\r\n                Email: this.state.NewEmail,\r\n            };\r\n\r\n            this.setState({\r\n                Preloader: <Preloader />\r\n            });\r\n\r\n            console.log(\"Going to update username.\");\r\n            await usernameAndEmailSettings(updatedTrader).then(response => {  \r\n                console.log(response);\r\n                if (response.Message === \"Trader is updated.\") {\r\n                    \r\n                    this.props.OnSettingsSaved();\r\n                }\r\n\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            console.log(\"Going to send code...\");\r\n            await sendCode(this.state.NewEmail).then(response => {\r\n                console.log(response);\r\n                if (response.Message === \"Code sent.\") {\r\n                    this.setState({\r\n                        CodeConfirmationDialog: <CodeConfirmationDialog\r\n                            Code={response.Code}\r\n                            Username={this.state.NewUsername}\r\n                            Email={this.state.NewEmail}\r\n                            OnCancel={() => {\r\n                                this.setState({\r\n                                    CodeConfirmationDialog: null,\r\n                                });\r\n                            }}\r\n                            OnOK={cancelButton => {\r\n                                cancelButton.click();\r\n                                this.props.OnSettingsSaved();\r\n                            }} />\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Username and Emails</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-at\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"NewUsername\" className=\"form-control\" autoComplete=\"off\"\r\n                                        value={this.state.NewUsername} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Username</div>\r\n                                <div className=\"content-text-secondary text-danger\">{this.state.Errors[\"NewUsername\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-envelope\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"email\" name=\"NewEmail\" className=\"form-control\" placeholder=\"someone@example.com\" autoComplete=\"off\"\r\n                                        value={this.state.NewEmail} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Email</div>\r\n                                <div className=\"content-text-secondary text-danger\">{this.state.Errors[\"NewEmail\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n                {this.state.CodeConfirmationDialog}\r\n            </div> \r\n        );\r\n    }\r\n};\r\n\r\nexport default UsernameAndEmailSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { validatePassword, passwordSettings } from \"../../TraderFunctions\";\r\n\r\nclass PasswordSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            CurrentPassword: \"\",\r\n            NewPassword: \"\",\r\n            ConfirmPassword: \"\",\r\n\r\n            ValidCurrentPassword: false,\r\n            ValidNewPassword: false,\r\n            ValidConfirmPassword: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                CurrentPassword: \"\",\r\n                NewPassword: \"\",\r\n                ConfirmPassword: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    async validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCurrentPassword = this.state.ValidCurrentPassword;\r\n        let ValidNewPassword = this.state.ValidNewPassword;\r\n        let ValidConfirmPassword = this.state.ValidConfirmPassword;\r\n\r\n        switch (field) {\r\n            case \"CurrentPassword\":\r\n                ValidCurrentPassword = (value !== \"\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is required.\";\r\n\r\n                if (Errors.CurrentPassword !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCurrentPassword = (value !== \"Invalid password.\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is invalid.\";\r\n                break;\r\n            case \"NewPassword\":\r\n                ValidNewPassword = value.length >= 6;\r\n                Errors.NewPassword = ValidNewPassword ? \"\" : \"Password is too short.\";\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                ValidConfirmPassword = value === this.state.NewPassword;\r\n                Errors.ConfirmPassword = ValidConfirmPassword ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCurrentPassword: ValidCurrentPassword,\r\n            ValidNewPassword: ValidNewPassword,\r\n            ValidConfirmPassword: ValidConfirmPassword,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidCurrentPassword &&\r\n                    this.state.ValidNewPassword &&\r\n                    this.state.ValidConfirmPassword\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        let passwordPackage = {\r\n            Token: localStorage.Token,\r\n            Password: this.state.CurrentPassword\r\n        };\r\n\r\n        await validatePassword(passwordPackage).then(async response => {\r\n            if (response.Message === \"Invalid password.\") {\r\n                this.validateField(\"CurrentPassword\", response.Message);\r\n            }\r\n            else {\r\n                const updatedTrader = {\r\n                    Token: localStorage.Token,\r\n                    Password: this.state.NewPassword\r\n                };\r\n\r\n                this.setState({\r\n                    Preloader: <Preloader />\r\n                });\r\n\r\n                await passwordSettings(updatedTrader).then(response => {\r\n                    if (response.Message === \"Trader is updated.\") {\r\n                        this.props.OnSettingsSaved();\r\n                    }\r\n\r\n                    this.setState({\r\n                        Preloader: null\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\" }}>Change Password</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-key\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" name=\"CurrentPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                        value={this.state.CurrentPassword} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Current Password</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"CurrentPassword\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-key\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" name=\"NewPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                        value={this.state.NewPassword} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">New Password</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"NewPassword\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-key\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" name=\"ConfirmPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                        value={this.state.ConfirmPassword} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Confirm Password</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"ConfirmPassword\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default PasswordSettings;","import React, { Component } from \"react\";\r\nimport GeneralSettings from \"./GeneralSettings\";\r\nimport UsernameAndEmailSettings from \"./UsernameAndEmailSettings\";\r\nimport PasswordSettings from \"./PasswordSettings\";\r\n\r\nclass Settings extends Component {\r\n    render() {\r\n        return <section>\r\n            <GeneralSettings ref=\"GeneralSettings\" OnSettingsSaved={() => { this.refs.GeneralSettings.componentDidMount(); }} />\r\n            <UsernameAndEmailSettings ref=\"UsernameAndEmailSettings\" OnSettingsSaved={() => { this.refs.UsernameAndEmailSettings.componentDidMount(); }} />\r\n            <PasswordSettings ref=\"PasswordSettings\" OnSettingsSaved={() => { this.refs.PasswordSettings.forceUpdate(); }} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Settings;","import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { TabMenu } from \"../../../styles/TabStyles\";\r\nimport Profile from \"./profile/Profile\";\r\nimport Jobs from \"./jobs/Jobs\";\r\nimport Payments from \"./payments/Payments\";\r\nimport Settings from \"./settings/Settings\";\r\n\r\nclass TradersDashboard extends Component {\r\n    render() {\r\n        if (!localStorage.Token) {\r\n            return <Redirect to=\"/login\" />;\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={TabMenu}>\r\n                        <li role=\"presentation\" className=\"active\">\r\n                            <a href=\"#profile\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\" onClick={() => { this.refs.Profile.componentDidMount(); }}>Profile</a>\r\n                        </li>                        \r\n                        <li role=\"presentation\"><a href=\"#jobs\" aria-controls=\"jobs\" role=\"tab\" data-toggle=\"tab\">Jobs</a></li>\r\n                        <li role=\"presentation\"><a href=\"#payments\" aria-controls=\"payments\" role=\"tab\" data-toggle=\"tab\">Payments</a></li>\r\n                        <li role=\"presentation\"><a href=\"#settings\" aria-controls=\"settings\" role=\"tab\" data-toggle=\"tab\">Settings</a></li>\r\n                    </ul>\r\n\r\n                    <div className=\"tab-content\">\r\n                        <div role=\"tabpanel\" className=\"tab-pane active\" id=\"profile\">\r\n                            <Profile ref=\"Profile\" />\r\n                        </div>\r\n                        <div role=\"tabpanel\" className=\"tab-pane\" id=\"jobs\">\r\n                            <Jobs />\r\n                        </div>\r\n                        <div role=\"tabpanel\" className=\"tab-pane\" id=\"payments\">\r\n                            Payments\r\n                        </div>\r\n                        <div role=\"tabpanel\" className=\"tab-pane\" id=\"settings\">\r\n                            <Settings />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default TradersDashboard;","import React, { Component } from \"react\";\r\n\r\nclass BackToTop extends Component {\r\n    render() {\r\n        return (\r\n            <a id=\"up\" href=\"#top\" className=\"back-to-top\" style={{ position: \"fixed\", right: \"20px\", bottom: \"20px\", }}>\r\n                <i className=\"glyph glyph-up\" style={{ color: \"#008575\", }}></i>\r\n                <span className=\"sr-only\">Back to top</span>\r\n            </a>\r\n        );\r\n    }\r\n};\r\n\r\nexport default BackToTop;","import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <footer className=\"border-top footer theme-default color-bg-light-neutral-high text-light\">\r\n                <div className=\"container\">\r\n                    &copy; {new Date().getFullYear()} - Core Infinite - <a asp-area=\"\" asp-controller=\"Home\" asp-action=\"Privacy\">Privacy</a>\r\n                </div>\r\n            </footer>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Header from \"./components/shared/Header\";\r\nimport Landing from \"./components/landing/Landing\";\r\nimport Login from \"./components/login/Login\";\r\nimport Register from \"./components/register/Register\";\r\nimport EmailConfirmation from \"./components/register/EmailConfirmation\";\r\nimport AccountSetup from \"./components/register/AccountSetup\";\r\nimport Congratulations from \"./components/register/Congratulations\";\r\nimport DriversDashboard from \"./components/drivers/dashboard/DriversDashboard.js\"\r\nimport TradersDashboard from \"./components/traders/dashboard/TradersDashboard.js\"\r\nimport BackToTop from \"./controls/BackToTop\";\r\nimport Footer from \"./components/shared/Footer\";\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Router basename=\"/\">\r\n                <div className=\"App\">\r\n                    <Header />\r\n                    <Route exact path=\"/\" component={Landing} />\r\n                    <Route exact path=\"/register\" component={Register} />\r\n                    <Route exact path=\"/emailConfirmation\" component={EmailConfirmation} />\r\n                    <Route exact path=\"/setupAccount\" component={AccountSetup} />\r\n                    <Route exact path=\"/congratulations\" component={Congratulations} />\r\n                    <Route exact path=\"/login\" component={Login} />\r\n                    <Route exact path=\"/drivers\" component={DriversDashboard} />\r\n                    <Route exact path=\"/traders\" component={TradersDashboard} />\r\n                    <BackToTop />\r\n                    <Footer />\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = {\r\n    APP_NAME: \"Naqel\",\r\n    USER_TOKEN: \"userToken\",\r\n    USER_NOT_FOUND: \"Username not found.\",\r\n    INVALID_PASSWORD: \"Invalid password.\",\r\n    USERNAME_OR_EMAIL_TAKEN: \"Username or email is already taken.\",\r\n    NAQEL_SERVER: \"https://naqelserver.azurewebsites.net/\",\r\n    IMAGE_UPLOADER: \"https://us-central1-naqel-transport-jobs.cloudfunctions.net/uploadImage\"\r\n};"],"sourceRoot":""}
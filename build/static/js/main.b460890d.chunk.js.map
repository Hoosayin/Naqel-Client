{"version":3,"sources":["components/shared/Header.js","components/landing/Landing.js","components/drivers/DriverFunctions.js","components/traders/TraderFunctions.js","styles/MiscellaneousStyles.js","controls/Preloader.js","styles/CardStyles.js","components/login/Login.js","components/register/Register.js","components/register/EmailConfirmation.js","components/register/AccountSetup.js","components/register/Congratulations.js","styles/TabStyles.js","components/drivers/dashboard/profile/ProfilePhoto.js","controls/WarningAlert.js","controls/ImageUploader.js","components/drivers/dashboard/profile/documents/drivingLicence/AddDrivingLicenceDialog.js","components/drivers/dashboard/profile/documents/drivingLicence/AddDrivingLicenceButton.js","components/drivers/dashboard/profile/documents/entryExitCard/AddEntryExitCardDialog.js","components/drivers/dashboard/profile/documents/entryExitCard/AddEntryExitCardButton.js","components/drivers/dashboard/profile/documents/identityCard/AddIdentityCardDialog.js","components/drivers/dashboard/profile/documents/identityCard/AddIdentityCardButton.js","components/drivers/dashboard/profile/documents/drivingLicence/EditDrivingLicenceDialog.js","components/drivers/dashboard/profile/documents/drivingLicence/DrivingLicenceListItem.js","components/drivers/dashboard/profile/documents/entryExitCard/EditEntryExitCardDialog.js","components/drivers/dashboard/profile/documents/entryExitCard/EntryExitCardListItem.js","components/drivers/dashboard/profile/documents/identityCard/EditIdentityCardDialog.js","components/drivers/dashboard/profile/documents/identityCard/IdentityCardListItem.js","components/drivers/dashboard/profile/documents/DocumentsList.js","components/drivers/dashboard/profile/Profile.js","components/drivers/dashboard/trucks/TruckSettings.js","components/drivers/dashboard/trucks/trailers/AddTrailerDialog.js","components/drivers/dashboard/trucks/trailers/AddTrailer.js","components/drivers/dashboard/trucks/trailers/EditTrailerDialog.js","components/drivers/dashboard/trucks/trailers/TrailersList.js","components/drivers/dashboard/trucks/Truck.js","controls/MessageBox.js","components/drivers/dashboard/trucks/AddTruck.js","components/drivers/dashboard/trucks/NoTruck.js","components/drivers/dashboard/trucks/Trucks.js","components/drivers/dashboard/permits/AddPermitLicenceDialog.js","components/drivers/dashboard/permits/EditPermitLicenceDialog.js","components/drivers/dashboard/permits/PermitLicencesList.js","components/drivers/dashboard/permits/Permits.js","components/drivers/dashboard/financial_affairs/FinancialAffairs.js","controls/Map.js","components/drivers/dashboard/jobs/jobRequests/AddJobRequestDialog.js","components/drivers/dashboard/jobs/jobRequests/EditJobRequestDialog.js","components/drivers/dashboard/jobs/jobRequests/JobRequestsList.js","components/drivers/dashboard/jobs/jobRequests/JobRequests.js","components/drivers/dashboard/jobs/jobOffers/JobOffers.js","components/drivers/dashboard/jobs/onGoingJobs/OnGoingJobs.js","components/drivers/dashboard/jobs/Jobs.js","components/drivers/dashboard/payments/Payments.js","components/drivers/dashboard/settings/GeneralSettings.js","components/drivers/dashboard/settings/CodeConfirmationDialog.js","components/drivers/dashboard/settings/UsernameAndEmailSettings.js","components/drivers/dashboard/settings/PasswordSettings.js","components/drivers/dashboard/settings/Settings.js","components/drivers/dashboard/DriversDashboard.js","components/traders/dashboard/profile/ProfilePhoto.js","components/traders/dashboard/profile/documents/identityCard/AddIdentityCardDialog.js","components/traders/dashboard/profile/documents/identityCard/AddIdentityCardButton.js","components/traders/dashboard/profile/documents/commercialRegisterCertificate/AddCommercialRegisterCertificateDialog.js","components/traders/dashboard/profile/documents/commercialRegisterCertificate/AddCommercialRegisterCertificateButton.js","components/traders/dashboard/profile/documents/identityCard/EditIdentityCardDialog.js","components/traders/dashboard/profile/documents/identityCard/IdentityCardListItem.js","components/traders/dashboard/profile/documents/commercialRegisterCertificate/EditCommercialRegisterCertificateDialog.js","components/traders/dashboard/profile/documents/commercialRegisterCertificate/CommercialRegisterCertificateListItem.js","components/traders/dashboard/profile/documents/DocumentsList.js","components/traders/dashboard/profile/Profile.js","components/traders/dashboard/jobs/jobRequests/JobRequests.js","components/traders/dashboard/jobs/jobOffers/AddJobOfferDialog.js","components/traders/dashboard/jobs/jobOffers/EditJobOfferDialog.js","components/traders/dashboard/jobs/jobOffers/JobOffersList.js","components/traders/dashboard/jobs/jobOffers/JobOffers.js","components/traders/dashboard/jobs/onGoingJobs/OnGoingJobs.js","components/traders/dashboard/jobs/Jobs.js","components/traders/dashboard/settings/GeneralSettings.js","components/traders/dashboard/payments/Payments.js","components/traders/dashboard/settings/CodeConfirmationDialog.js","components/traders/dashboard/settings/UsernameAndEmailSettings.js","components/traders/dashboard/settings/PasswordSettings.js","components/traders/dashboard/settings/Settings.js","components/traders/dashboard/TradersDashboard.js","controls/BackToTop.js","components/shared/Footer.js","App.js","index.js","res/strings.js"],"names":["Header","props","logOut","event","preventDefault","localStorage","userToken","removeItem","Token","history","push","state","Username","bind","decoded","jwt_decode","this","setState","loginRegisterLinks","className","to","userLinks","onClick","type","data-toggle","data-target","Strings","APP_NAME","toUpperCase","id","Component","withRouter","Landing","class","style","width","backgroundColor","alt","src","data-source-index","color","fontWeight","href","textDecoration","registerDriver","newCredentials","a","async","axios","post","NAQEL_SERVER","Email","Password","RegisterAs","then","response","data","localeCompare","USERNAME_OR_EMAIL_TAKEN","setItem","setupDriverAccount","newDriver","FirstName","LastName","DateOfBirth","Gender","Address","PhoneNumber","Nationality","console","log","loginDriver","driver","EmailOrUsername","SignInAs","USER_NOT_FOUND","INVALID_PASSWORD","catch","error","generalSettings","updatedDriver","usernameAndEmailSettings","passwordSettings","uploadDriverProfilePhoto","driverProfilePhoto","URL","FileName","addTruck","newTruck","PlateNumber","Owner","ProductionYear","Brand","Model","Type","MaximumWeight","PhotoURL","updateTruckPhoto","updatedTruck","updateTruck","addTrailer","newTrailer","deleteTrailer","discardedTrailer","TrailerID","updateTrailer","updatedTrailer","addDrivingLicence","newDrivingLicence","LicenceNumber","ReleaseDate","ExpiryDate","updateDrivingLicence","updatedDrivingLicence","deleteDrivingLicence","discardedDrivingLicence","addEntryExitCard","newEntryExitCard","EntryExitNumber","NumberOfMonths","updateEntryExitCard","updatedEntryExitCard","deleteEntryExitCard","discardedEntryExitCard","addIdentityCard","newIdentityCard","IDNumber","updateIdentityCard","updatedIdentityCard","deleteIdentityCard","discardedIdentityCard","addPermitLicence","newPermitLicence","PermitNumber","Code","Place","deletePermitLicence","discardedPermitLicence","PermitLicenceID","updatePermitLicence","updatedPermitLicence","addJobRequest","newJobRequest","LoadingPlace","UnloadingPlace","TripType","Price","updateJobRequest","updatedJobRequest","JobRequestID","deleteJobRequest","discardedJobRequest","registerTrader","res","setupTraderAccount","newTrader","loginTrader","trader","getData","request","Get","get","headers","Authorization","uploadTraderProfilePhoto","traderProfilePhoto","updatedTrader","validateUsername","username","validateEmail","email","sendCode","validatePassword","passwordPackage","addJobOffer","newJobOffer","CargoType","CargoWeight","LoadingDate","LoadingTime","EntryExit","AcceptedDelay","JobOfferType","updateJobOffer","updatedJobOffer","JobOfferID","Required","paddingLeft","PreloaderScreen","background","position","zIndex","top","display","alignItems","justifyContent","height","Preloader","textAlign","LoginCardBack","backgroundImage","backgroundAttachment","backgroundRepeat","backgroundSize","RegisterCardBack","EmailConfirmationCardBack","AccountSetupCardBack","CongratulationsCardBack","Card","padding","alignContent","boxShadow","CardLarge","CardXLarge","margin","CardChild","CardTitle","paddingTop","Login","onChange","e","target","name","value","onSubmit","NullError","InvalidUsernameOrPassword","user","Message","LoggedInAsTrader","LoggedInAsDriver","Errors","noValidate","htmlFor","placeholder","aria-haspopup","role","aria-expanded","aria-labelledby","Register","validateField","ConfirmPassword","UsernameOrEmailTaken","newCredentialsToken","PasswordsMatched","ValidEmail","ValidPassword","ValidForm","Agreed","field","fieldValidationErrors","match","length","refs","agreementCheckBox","checked","validateForm","autocomplete","required","maxWidth","ref","AgreementError","disabled","tabindex","aria-hidden","String","data-dismiss","EmailConfirmation","code","ConfirmationCode","InvalidCodeError","AccountSetup","verifiedCredentialsToken","newUser","ValidFirstName","ValidLastName","ValidDateOfBirth","ValidNationality","ValidAddress","ValidPhoneNumber","Date","atl","rows","IsCreatedSuccessfully","TabMenu","ProfilePhoto","onImageUpload","Image","files","formData","FormData","append","DriverID","ImageCategory","exception","UploadProgress","IMAGE_UPLOADER","onUploadProgress","message","getItem","imageUrl","filename","ImageURL","ProfilePhotoURL","fileInput","border","click","WarningAlert","marginBottom","aria-label","OnClose","ImageUploader","startsWith","OnInvalidImageSelected","OnImageUploaded","Width","Height","Source","AddDrivingLicenceDialog","OnDrivingLicenceAdded","cancelButton","ValidLicenceNumber","ValidType","ValidReleaseDate","ValidExpiryDate","ValidPhotoURL","getTime","OnAddDrivingLicenceDialogRemove","AddDrivingLicenceButton","minWidth","onMouseDown","OnDocumentsUpdated","AddEntryExitCardDialog","OnOK","ValidEntryExitNumber","ValidNumberOfMonths","releaseDate","expiryDate","setMonth","getMonth","toLocaleString","OnCancel","AddEntryExitCardButton","AddIdentityCardDialog","ValidIDNumber","autoComplete","min","max","AddIdentityCardButton","EditDrivingLicenceDialog","OnDrivingLicenceUpdated","drivingLicence","DrivingLicence","DrivingLicenceID","OnDismissDialog","DrivingLicenceListItem","onDelete","Index","overflow","EditEntryExitCardDialog","entryExitCard","EntryExitCard","EntryExitCardListItem","EntryExitCardID","EditIdentityCardDialog","identityCard","IdentityCard","IdentityCardListItem","IdentityCardID","DocumentsList","onDocumentsUpdated","index","Profile","onImageUploaded","TruckSettings","OnTruckSettingsUpdated","ValidPlateNumber","ValidOwner","ValidProductionYear","ValidBrand","ValidModel","ValidMaximumWeight","truck","Truck","currentYear","getFullYear","AddTrailerDialog","onInvalidImageSelected","OnTrailerAdded","trailers","Trailers","OnAddTrailerDialogRemove","AddTrailer","onAddTrailerDialogCreate","onAddTruckDialogRemove","onTrailerAdded","onAddTrailerDialogRemove","OnTruckUpdated","EditTrailerDialog","Trailer","OnTrailerUpdated","dialogID","OnEditTrailerDialogRemove","TrailersList","OnTrailersUpdated","EditTrailerDialogs","map","editTrailerDialogs","onTrailersUpdated","OnTrailerDeleted","onTrailerDeleted","MessageBox","Show","paddingRight","AddTruck","OnAddTruckDialogRemove","NoTruck","onAddTruckDialogCreate","Trucks","onTruckUpdated","AddPermitLicenceDialog","ValidPermitNumber","ValidCode","ValidPlace","EditPermitLicenceDialog","PermitLicence","DialogID","PermitLicencesList","PermitLicences","OnPermitLicencesUpdated","getPermitLicences","permitLicences","onSearch","SearchString","filteredPermitLicences","i","EditPermitLicenceDialogs","editPermitLicenceDialogs","Permits","onPermitLicencesUpdated","FinancialAffairs","borderRadius","Geocode","setApiKey","enableDebug","Map","NoState","AsyncMap","withScriptjs","withGoogleMap","googleMapURL","defaultZoom","defaultCenter","lat","lng","loadingElement","containerElement","mapElement","AddJobRequestDialog","ValidLoadingPlace","ValidUnloadingPlace","ValidPrice","step","EditJobRequestDialog","JobRequest","JobRequestsList","JobRequests","OnJobRequestsUpdated","getJobRequests","jobRequests","filteredJobRequests","includes","EditJobRequestDialogs","Math","abs","TimeCreated","WaitingTime","floor","editJobRequestDialogs","onJobRequestsUpdated","JobOffers","OnGoingJobs","Jobs","aria-controls","Payments","GeneralSettings","OnSettingsSaved","SettingsSaved","CodeConfirmationDialog","ConfirmCode","ValidConfirmCode","UsernameAndEmailSettings","NewUsername","NewEmail","ValidNewUsername","ValidNewEmail","CodeConfirmation","PasswordSettings","NewPassword","CurrentPassword","ValidCurrentPassword","ValidNewPassword","ValidConfirmPassword","Settings","onGeneralSettingsSaved","onSettingsSaved","onUsernameAndEmailSettingsSaved","onPasswordSettingsSaved","DriversDashboard","photoURL","profilePhoto","AddCommercialRegisterCertificateDialog","newCommercialRegisterCertificate","Number","addCommercialRegisterCertificate","UUID","substring","tabIndex","readOnly","AddCommercialRegisterCertificateButton","delete","onRefresh","Key","random","EditCommercialRegisterCertificateDialog","commercialRegisterCertificate","CommercialRegisterCertificate","updatedCommercialRegisterCertificate","updateCommercialRegisterCertificate","CommercialRegisterCertificateListItem","discardedCommercialRegisterCertificate","deleteCommercialRegisterCertificate","ID","undefined","Trader","AddJobOfferDialog","ValidCargoType","ValidCargoWeight","ValidLoadingDate","ValidLoadingTime","ValidAcceptedDelay","aria-pressed","EditJobOfferDialog","JobOffer","defaultChecked","JobOffersList","discardedJobOffer","deleteJobOffer","onComponentUpdated","AllJobOffers","allJobOffers","filteredJobOffers","EditJobOfferDialogs","jobOffer","hoursSinceCreated","key","editJobOfferDialogs","onJobOffersUpdated","jobOffersList","forceUpdate","componentDidMount","TradersDashboard","BackToTop","right","bottom","Footer","asp-area","asp-controller","asp-action","App","basename","exact","path","component","Congratulations","ReactDOM","render","document","getElementById","module","exports","USER_TOKEN"],"mappings":"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","file":"static/js/main.b460890d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport Strings from \"../../res/strings\"\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Username: \"User\"\r\n        };\r\n\r\n        this.logOut = this.logOut.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.userToken) {\r\n            const decoded = jwt_decode(localStorage.userToken);\r\n\r\n            this.setState({\r\n                Username: decoded.Username\r\n            });\r\n        }\r\n        else if (localStorage.Token) {\r\n            this.setState({\r\n                Username: \"Trader\"\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                Username: \"User\"\r\n            });\r\n        }\r\n    }\r\n\r\n    logOut = event => {\r\n        event.preventDefault();\r\n\r\n        if (localStorage.userToken) {\r\n            localStorage.removeItem(\"userToken\");\r\n        }\r\n        else if (localStorage.Token) {\r\n            localStorage.removeItem(\"Token\");\r\n        }\r\n\r\n        this.props.history.push(`/login`);\r\n    }\r\n\r\n    render() {\r\n        const loginRegisterLinks = (\r\n            <ul className=\"nav navbar-nav navbar-right\">\r\n                <li>\r\n                    <Link to=\"/register\">Register</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/login\">Login</Link>\r\n                </li>            \r\n            </ul>\r\n        );\r\n\r\n        const userLinks = (\r\n            <ul className=\"nav navbar-nav navbar-right\">\r\n                <li>\r\n                    <Link to=\"/dashboard\">{this.state.Username}</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"\" onClick={this.logOut.bind(this)}>Logout</Link>\r\n                </li>\r\n            </ul>\r\n        );\r\n\r\n        return (\r\n            <header>\r\n                <nav className=\"navbar navbar-default\">\r\n                    <div className=\"navbar-local color-accent theme-dark\">\r\n                        <div className=\"container\">\r\n                            <div className=\"navbar-header\">\r\n                                <button type=\"button\" className=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-2\">\r\n                                    <span className=\"sr-only\">Toggle navigation</span>\r\n                                    <i className=\"glyph glyph-hamburger\"></i>\r\n                                </button>\r\n                                <Link to=\"/\" className=\"navbar-brand\">{Strings.APP_NAME.toUpperCase()}</Link>\r\n                            </div>\r\n\r\n                            <div className=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-2\">\r\n                                <ul className=\"nav navbar-nav\">\r\n                                    \r\n                                </ul>\r\n                                {(localStorage.userToken || localStorage.Token) ? userLinks : loginRegisterLinks}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n        );\r\n    }\r\n};\r\n\r\nexport default withRouter(Header);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"slider\">\r\n                    <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                    <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        alt=\"truck.png\" src=\"./images/truck.png\" data-source-index=\"2\" />\r\n                                </div>\r\n                                <div class=\"col-md-12 col-md-pull-12\">\r\n                                    <div class=\"type-h3\" style={{ color: \"#008575\", }}>Weclome to Naqel</div>\r\n                                    <div class=\"type-sh3\" style={{ color: \"#949496\", }}>Transport Services On-The-Go</div>\r\n                                    <p style={{ color: \"#D1D2D4\", }}>Welcome to Naqel! If you are a trader or a broker, and you want to publish job opportunities for drivers nearby, well, you are on the right place. Naqel is a mediator among traders, brokers and drivers, and provides intuitive and secure way to get transport services.</p>\r\n                                    <p style={{ color: \"#D1D2D4\", }}>Not a Trader or a Broker? No worries! Naqel provides services for drivers too. If you are a driver, and you are searching for job opportunities, you are just one step away. Create your account on our Web Service, and we will notify you job oppprtunities on your personal account.</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#16171F\" }}>\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                    <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        alt=\"oath.png\" src=\"./images/oath.png\" data-source-index=\"2\" />\r\n                                </div>\r\n                                <div class=\"col-md-12 col-md-pull-12\">\r\n                                    <div class=\"type-h3\" style={{ color: \"#008575\", }}>Privacy</div>\r\n                                    <div class=\"type-sh3\" style={{ color: \"#949496\", }}>Your Privacy is Important to Us</div>\r\n                                    <p style={{ color: \"#D1D2D4\", }}>Naqel's Privacy Statement describes the types of data we collect from you, how we use your data, and the legal bases we have to process your data. The Privacy Statement also describes how Naqel uses your content, which is information submitted by you to Naqel via the Services.</p>\r\n                                    <p style={{ color: \"#D1D2D4\", }}>Where processing is based on consent and to the extent permitted by law, by agreeing to these Terms, you consent to Naqel's collection, use and disclosure of your content and data as described in the privacy statement.</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#00201C\" }}>\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                    <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        alt=\"account.png\" src=\"./images/account.png\" data-source-index=\"2\" />\r\n                                </div>\r\n                                <div class=\"col-md-12 col-md-pull-12\">\r\n                                    <div class=\"type-h3\" style={{ color: \"#008575\", }}>User Accounts</div>\r\n                                    <div class=\"type-sh3\" style={{ color: \"#949496\", }}>Signup and/or Login</div>\r\n                                    <p style={{ color: \"#D1D2D4\", }}>Do you want to use our services right now? No Worries! Just signup by filling up precise forms and/or login to your profile. Drivers can view job opprotunities on their dashboards. Traders and/or Brokers can post job requests for freight from thier accounts.</p>\r\n                                    <div class=\"btn-group\">\r\n                                        <Link to=\"/register\" class=\"btn btn-secondary\">Signup</Link>\r\n                                        <Link to=\"/login\" class=\"btn btn-primary\">Login</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"jumbotron theme-dark\" style={{ backgroundColor: \"#202020\", }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-24 text-center\">\r\n                                <div class=\"row section-gallery\">\r\n                                    <div class=\"col-md-8\">\r\n                                        <h4 style={{ fontWeight: \"bold\", }}>LOCATION</h4>\r\n                                        <div class=\"type-p1 text-center\">\r\n                                            Wah\r\n                            <br />\r\n                                            Punjab, Pakistan\r\n                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-8\">\r\n                                        <h4 style={{ fontWeight: \"bold\", }}>AROUND THE GLOBE</h4>\r\n                                        <div class=\"type-p1 text-center text-light\" style={{ color: \"#25AAE1\", }}>\r\n                                            <a class=\"fa\" href=\"#\">\r\n                                                <i class=\"fab fa-fw fa-facebook-f\"></i>\r\n                                            </a>\r\n                                            <a class=\"fa\" href=\"#\">\r\n                                                <i class=\"fab fa-fw fa-instagram\"></i>\r\n                                            </a>\r\n                                            <a class=\"fa\" href=\"#\">\r\n                                                <i class=\"fab fa-fw fa-twitter\"></i>\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-8\">\r\n                                        <h4 style={{ fontWeight: \"bold\", }}>CONTACT US</h4>\r\n                                        <div class=\"type-p1 text-center\">Naqel is created by Core Infinite. For more information, visit <a style={{ textDecoration: \"none\", color: \"#008575\", }} href=\"#\" class=\"color-type-accent\">coreinfinte.com</a></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Landing;","import axios from \"axios\";\r\nimport Strings from \"../../res/strings\";\r\n\r\n// POST: Register\r\nexport const registerDriver = async newCredentials => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/register`, {\r\n        Username: newCredentials.Username,\r\n        Email: newCredentials.Email,\r\n        Password: newCredentials.Password,\r\n        RegisterAs: newCredentials.RegisterAs,\r\n    }).then(response => {\r\n        if (response.data.localeCompare(Strings.USERNAME_OR_EMAIL_TAKEN) === 0) {\r\n            return response.data;\r\n        }\r\n        else {\r\n            localStorage.setItem(\"newCredentialsToken\", response.data);\r\n            return response.data;\r\n        }\r\n    });\r\n};\r\n\r\n// POST: AccountSetup\r\nexport const setupDriverAccount = async newDriver => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/accountSetup`, {\r\n        Username: newDriver.Username,\r\n        Email: newDriver.Email,\r\n        Password: newDriver.Password,\r\n        RegisterAs: newDriver.RegisterAs,\r\n        FirstName: newDriver.FirstName,\r\n        LastName: newDriver.LastName,\r\n        DateOfBirth: newDriver.DateOfBirth,\r\n        Gender: newDriver.Gender,\r\n        Address: newDriver.Address,\r\n        PhoneNumber: newDriver.PhoneNumber,\r\n        Nationality: newDriver.Nationality,\r\n    }).then(response => {\r\n        console.log(response.data);\r\n    });\r\n};\r\n\r\n// POST: Login\r\nexport const loginDriver = async driver => {\r\n    console.log(\"POST to /login\");\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/login`, {\r\n        EmailOrUsername: driver.EmailOrUsername,\r\n        Password: driver.Password,\r\n        SignInAs: driver.SignInAs,\r\n    }).then(response => {\r\n        if (response.data.localeCompare(Strings.USER_NOT_FOUND) === 0 ||\r\n            response.data.localeCompare(Strings.INVALID_PASSWORD) === 0) {\r\n            return response.data;\r\n        }\r\n        else {\r\n            localStorage.setItem('userToken', response.data);\r\n            return response.data;\r\n        }\r\n    }).catch(error => {\r\n        console.log(error);\r\n    });\r\n};\r\n\r\n// POST: GeneralSettings\r\nexport const generalSettings = async updatedDriver => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/generalSettings`, {\r\n        Token: updatedDriver.Token,\r\n        FirstName: updatedDriver.FirstName,\r\n        LastName: updatedDriver.LastName,\r\n        Address: updatedDriver.Address,\r\n        PhoneNumber: updatedDriver.PhoneNumber,\r\n        Gender: updatedDriver.Gender,\r\n        Nationality: updatedDriver.Nationality,\r\n        DateOfBirth: updatedDriver.DateOfBirth,\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UsernameAndEmailSettings\r\nexport const usernameAndEmailSettings = async updatedDriver => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/usernameAndEmailSettings`, {\r\n        Token: updatedDriver.Token,\r\n        Username: updatedDriver.Username,\r\n        Email: updatedDriver.Email,\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: PasswordSettings\r\nexport const passwordSettings = async updatedDriver => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/passwordSettings`, {\r\n        Token: updatedDriver.Token,\r\n        Password: updatedDriver.Password,\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UploadDriverProfilePhoto\r\nexport const uploadDriverProfilePhoto = async driverProfilePhoto => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/uploadDriverProfilePhoto`, {\r\n        Token: driverProfilePhoto.Token,\r\n        URL: driverProfilePhoto.URL,\r\n        FileName: driverProfilePhoto.FileName\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddTruck\r\nexport const addTruck = async newTruck => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addTruck`, {\r\n        Token: newTruck.Token,\r\n        PlateNumber: newTruck.PlateNumber,\r\n        Owner: newTruck.Owner,\r\n        ProductionYear: newTruck.ProductionYear,\r\n        Brand: newTruck.Brand,\r\n        Model: newTruck.Model,\r\n        Type: newTruck.Type,\r\n        MaximumWeight: newTruck.MaximumWeight,\r\n        PhotoURL: newTruck.PhotoURL\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UpdateTruckPhoto\r\nexport const updateTruckPhoto = async updatedTruck => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateTruckPhoto`, {\r\n        Token: updatedTruck.Token,\r\n        PhotoURL: updatedTruck.PhotoURL\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UpdateTruck\r\nexport const updateTruck = async updatedTruck => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateTruck`, {\r\n        Token: updatedTruck.Token,\r\n        PlateNumber: updatedTruck.PlateNumber,\r\n        Owner: updatedTruck.Owner,\r\n        ProductionYear: updatedTruck.ProductionYear,\r\n        Brand: updatedTruck.Brand,\r\n        Model: updatedTruck.Model,\r\n        Type: updatedTruck.Type,\r\n        MaximumWeight: updatedTruck.MaximumWeight\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddTrailer\r\nexport const addTrailer = async newTrailer => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addTrailer`, {\r\n        Token: newTrailer.Token,\r\n        MaximumWeight: newTrailer.MaximumWeight,\r\n        PhotoURL: newTrailer.PhotoURL,\r\n        Type: newTrailer.Type\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteTrailer\r\nexport const deleteTrailer = async discardedTrailer => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/deleteTrailer`, {\r\n        Token: discardedTrailer.Token,\r\n        TrailerID: discardedTrailer.TrailerID\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateTrailer\r\nexport const updateTrailer = async updatedTrailer => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateTrailer`, {\r\n        Token: updatedTrailer.Token,\r\n        TrailerID: updatedTrailer.TrailerID,\r\n        MaximumWeight: updatedTrailer.MaximumWeight,\r\n        PhotoURL: updatedTrailer.PhotoURL,\r\n        Type: updatedTrailer.Type\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addDrivingLicence\r\nexport const addDrivingLicence = async newDrivingLicence => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addDrivingLicence`, {\r\n        Token: newDrivingLicence.Token,\r\n        LicenceNumber: newDrivingLicence.LicenceNumber,\r\n        Type: newDrivingLicence.Type,\r\n        ReleaseDate: newDrivingLicence.ReleaseDate,\r\n        ExpiryDate: newDrivingLicence.ExpiryDate,\r\n        PhotoURL: newDrivingLicence.PhotoURL,\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateDrivingLicence\r\nexport const updateDrivingLicence = async updatedDrivingLicence => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateDrivingLicence`, {\r\n        Token: updatedDrivingLicence.Token,\r\n        LicenceNumber: updatedDrivingLicence.LicenceNumber,\r\n        Type: updatedDrivingLicence.Type,\r\n        ReleaseDate: updatedDrivingLicence.ReleaseDate,\r\n        ExpiryDate: updatedDrivingLicence.ExpiryDate,\r\n        PhotoURL: updatedDrivingLicence.PhotoURL,\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteDrivingLicence\r\nexport const deleteDrivingLicence = async discardedDrivingLicence => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/deleteDrivingLicence`, {\r\n        Token: discardedDrivingLicence.Token,\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addEntryExitCard\r\nexport const addEntryExitCard = async newEntryExitCard => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addEntryExitCard`, {\r\n        Token: newEntryExitCard.Token,\r\n        EntryExitNumber: newEntryExitCard.EntryExitNumber,\r\n        Type: newEntryExitCard.Type,\r\n        ReleaseDate: newEntryExitCard.ReleaseDate,\r\n        NumberOfMonths: newEntryExitCard.NumberOfMonths,\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateEntryExiCard\r\nexport const updateEntryExitCard = async updatedEntryExitCard => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateEntryExitCard`, {\r\n        Token: updatedEntryExitCard.Token,\r\n        EntryExitNumber: updatedEntryExitCard.EntryExitNumber,\r\n        Type: updatedEntryExitCard.Type,\r\n        ReleaseDate: updatedEntryExitCard.ReleaseDate,\r\n        NumberOfMonths: updatedEntryExitCard.NumberOfMonths,\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteEntryExitCard\r\nexport const deleteEntryExitCard = async discardedEntryExitCard => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/deleteEntryExitCard`, {\r\n        Token: discardedEntryExitCard.Token,\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addIdentityCard\r\nexport const addIdentityCard = async newIdentityCard => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addIdentityCard`, {\r\n        Token: newIdentityCard.Token,\r\n        IDNumber: newIdentityCard.IDNumber,\r\n        PhotoURL: newIdentityCard.PhotoURL,\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateIdentityCard\r\nexport const updateIdentityCard = async updatedIdentityCard => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateIdentityCard`, {\r\n        Token: updatedIdentityCard.Token,\r\n        IDNumber: updatedIdentityCard.IDNumber,\r\n        PhotoURL: updatedIdentityCard.PhotoURL,\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteIdentityCard\r\nexport const deleteIdentityCard = async discardedIdentityCard => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/deleteIdentityCard`, {\r\n        Token: discardedIdentityCard.Token,\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addPermitLicence\r\nexport const addPermitLicence = async newPermitLicence => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addPermitLicence`, {\r\n        Token: newPermitLicence.Token,\r\n        PermitNumber: newPermitLicence.PermitNumber,\r\n        ExpiryDate: newPermitLicence.ExpiryDate,\r\n        PhotoURL: newPermitLicence.PhotoURL,\r\n        Code: newPermitLicence.Code,\r\n        Place: newPermitLicence.Place\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deletePermitLicence\r\nexport const deletePermitLicence = async discardedPermitLicence => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/deletePermitLicence`, {\r\n        Token: discardedPermitLicence.Token,\r\n        PermitLicenceID: discardedPermitLicence.PermitLicenceID\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updatePermitLicence\r\nexport const updatePermitLicence = async updatedPermitLicence => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updatePermitLicence`, {\r\n        Token: updatedPermitLicence.Token,\r\n        PermitLicenceID: updatedPermitLicence.PermitLicenceID,\r\n        PermitNumber: updatedPermitLicence.PermitNumber,\r\n        ExpiryDate: updatedPermitLicence.ExpiryDate,\r\n        PhotoURL: updatedPermitLicence.PhotoURL,\r\n        Code: updatedPermitLicence.Code,\r\n        Place: updatedPermitLicence.Place\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addJobRequest\r\nexport const addJobRequest = async newJobRequest => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addJobRequest`, {\r\n        Token: newJobRequest.Token,\r\n        LoadingPlace: newJobRequest.LoadingPlace,\r\n        UnloadingPlace: newJobRequest.UnloadingPlace,\r\n        TripType: newJobRequest.TripType,\r\n        Price: newJobRequest.Price,\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateJobRequest\r\nexport const updateJobRequest = async updatedJobRequest => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateJobRequest`, {\r\n        Token: updatedJobRequest.Token,\r\n        JobRequestID: updatedJobRequest.JobRequestID,\r\n        LoadingPlace: updatedJobRequest.LoadingPlace,\r\n        UnloadingPlace: updatedJobRequest.UnloadingPlace,\r\n        TripType: updatedJobRequest.TripType,\r\n        Price: updatedJobRequest.Price,\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteJobRequest\r\nexport const deleteJobRequest = async discardedJobRequest => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/deleteJobRequest`, {\r\n        Token: discardedJobRequest.Token,\r\n        JobRequestID: discardedJobRequest.JobRequestID\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};","import axios from \"axios\";\r\nimport Strings from \"../../res/strings\";\r\n\r\n// POST: Register\r\nexport const registerTrader = async newCredentials => {\r\n    console.log(\"I'm in registerTrader axios...\");\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/register`, {\r\n        Username: newCredentials.Username,\r\n        Email: newCredentials.Email,\r\n        Password: newCredentials.Password,\r\n        RegisterAs: newCredentials.RegisterAs,\r\n    }).then(res => {\r\n        if (res.data.localeCompare(Strings.USERNAME_OR_EMAIL_TAKEN) === 0) {\r\n            return res.data;\r\n        }\r\n        else {\r\n            localStorage.setItem(\"newCredentialsToken\", res.data);\r\n            return res.data;\r\n        }\r\n    });\r\n};\r\n\r\n// POST: AccountSetup\r\nexport const setupTraderAccount = async newTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/accountSetup`, {\r\n        Username: newTrader.Username,\r\n        Email: newTrader.Email,\r\n        Password: newTrader.Password,\r\n        RegisterAs: newTrader.RegisterAs,\r\n        FirstName: newTrader.FirstName,\r\n        LastName: newTrader.LastName,\r\n        DateOfBirth: newTrader.DateOfBirth,\r\n        Gender: newTrader.Gender,\r\n        Address: newTrader.Address,\r\n        PhoneNumber: newTrader.PhoneNumber,\r\n        Nationality: newTrader.Nationality,\r\n    }).then(res => {\r\n        console.log(res.data);\r\n    });\r\n};\r\n\r\n// POST: Login\r\nexport const loginTrader = async trader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/login`, {\r\n        EmailOrUsername: trader.EmailOrUsername,\r\n        Password: trader.Password\r\n    }).then(response => {\r\n        return response.data;\r\n    }).catch(error => {\r\n        console.log(error);\r\n    });\r\n};\r\n\r\n// GET: GetData\r\nexport const getData = async request => {\r\n    console.log(`Sending GET request to ${Strings.NAQEL_SERVER}traders/get${request.Get}...`);\r\n    return await axios.get(`${Strings.NAQEL_SERVER}traders/get${request.Get}`, {\r\n        headers: { Authorization: `JWT ${request.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UploadDriverProfilePhoto\r\nexport const uploadTraderProfilePhoto = async traderProfilePhoto => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/uploadTraderProfilePhoto`, {\r\n        PhotoURL: traderProfilePhoto.PhotoURL,\r\n        FileName: traderProfilePhoto.FileName\r\n    }, {\r\n        headers: { Authorization: `JWT ${traderProfilePhoto.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: GeneralSettings\r\nexport const generalSettings = async updatedTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/generalSettings`, {\r\n        FirstName: updatedTrader.FirstName,\r\n        LastName: updatedTrader.LastName,\r\n        Address: updatedTrader.Address,\r\n        PhoneNumber: updatedTrader.PhoneNumber,\r\n        Gender: updatedTrader.Gender,\r\n        Nationality: updatedTrader.Nationality,\r\n        DateOfBirth: updatedTrader.DateOfBirth,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTrader.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateUsername\r\nexport const validateUsername = async username => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/validateUsername`, {\r\n        Username: username\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateEmail\r\nexport const validateEmail = async email => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/validateEmail`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POSTL SendCode\r\nexport const sendCode = async email => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/sendCode`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UsernameAndEmailSettings\r\nexport const usernameAndEmailSettings = async updatedTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/usernameAndEmailSettings`, {\r\n        Username: updatedTrader.Username,\r\n        Email: updatedTrader.Email\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTrader.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidatePassword\r\nexport const validatePassword = async passwordPackage => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/validatePassword`, {\r\n        Password: passwordPackage.Password\r\n    }, {\r\n        headers: { Authorization: `JWT ${passwordPackage.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: PasswordSettings\r\nexport const passwordSettings = async updatedTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/passwordSettings`, {\r\n        Password: updatedTrader.Password,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTrader.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addIdentityCard\r\nexport const addIdentityCard = newIdentityCard => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/addIdentityCard`, {\r\n        IDNumber: newIdentityCard.IDNumber,\r\n        PhotoURL: newIdentityCard.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${newIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateIdentityCard\r\nexport const updateIdentityCard = updatedIdentityCard => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/updateIdentityCard`, {\r\n        IDNumber: updatedIdentityCard.IDNumber,\r\n        PhotoURL: updatedIdentityCard.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteIdentityCard\r\nexport const deleteIdentityCard = discardedIdentityCard => {\r\n    return axios.delete(`${Strings.NAQEL_SERVER}traders/deleteIdentityCard`, {\r\n        headers: { Authorization: `JWT ${discardedIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addCommercialRegisterCertificate\r\nexport const addCommercialRegisterCertificate = newCommercialRegisterCertificate => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/addCommercialRegisterCertificate`, {\r\n        Number: newCommercialRegisterCertificate.Number,\r\n        Type: newCommercialRegisterCertificate.Type,\r\n        PhotoURL: newCommercialRegisterCertificate.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${newCommercialRegisterCertificate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateCommercialRegisterCertificate\r\nexport const updateCommercialRegisterCertificate = updatedCommercialRegisterCertificate => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/updateCommercialRegisterCertificate`, {\r\n        Number: updatedCommercialRegisterCertificate.Number,\r\n        Type: updatedCommercialRegisterCertificate.Type,\r\n        PhotoURL: updatedCommercialRegisterCertificate.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedCommercialRegisterCertificate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteCommercialRegisterCertificate\r\nexport const deleteCommercialRegisterCertificate = discardedCommercialRegisterCertificate => {\r\n    return axios.delete(`${Strings.NAQEL_SERVER}traders/deleteCommercialRegisterCertificate`, {\r\n        headers: { Authorization: `JWT ${discardedCommercialRegisterCertificate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addJobOffer\r\nexport const addJobOffer = async newJobOffer => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addJobOffer`, {\r\n        TripType: newJobOffer.TripType,\r\n        CargoType: newJobOffer.CargoType,\r\n        CargoWeight: newJobOffer.CargoWeight,\r\n        LoadingPlace: newJobOffer.LoadingPlace,\r\n        UnloadingPlace: newJobOffer.UnloadingPlace,\r\n        LoadingDate: newJobOffer.LoadingDate,\r\n        LoadingTime: newJobOffer.LoadingTime,\r\n        EntryExit: newJobOffer.EntryExit,\r\n        Price: newJobOffer.Price,\r\n        AcceptedDelay: newJobOffer.AcceptedDelay,\r\n        JobOfferType: newJobOffer.JobOfferType\r\n    }, {\r\n        headers: { Authorization: `JWT ${newJobOffer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateJobOffer\r\nexport const updateJobOffer = async updatedJobOffer => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/updateJobOffer`, {\r\n        JobOfferID: updatedJobOffer.JobOfferID,\r\n        TripType: updatedJobOffer.TripType,\r\n        CargoType: updatedJobOffer.CargoType,\r\n        CargoWeight: updatedJobOffer.CargoWeight,\r\n        LoadingPlace: updatedJobOffer.LoadingPlace,\r\n        UnloadingPlace: updatedJobOffer.UnloadingPlace,\r\n        LoadingDate: updatedJobOffer.LoadingDate,\r\n        LoadingTime: updatedJobOffer.LoadingTime,\r\n        EntryExit: updatedJobOffer.EntryExit,\r\n        Price: updatedJobOffer.Price,\r\n        AcceptedDelay: updatedJobOffer.AcceptedDelay,\r\n        JobOfferType: updatedJobOffer.JobOfferType\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedJobOffer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deleteJobOffer\r\nexport const deleteJobOffer = async discardedJobOffer => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}traders/deleteJobOffer...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}traders/deleteJobOffer`, {\r\n        JobOfferID: discardedJobOffer.JobOfferID\r\n    }, {\r\n        headers: { Authorization: `JWT ${discardedJobOffer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};","export const Required = {\r\n    paddingLeft: \"5px\",\r\n    fontWeight: \"bold\",\r\n};\r\n\r\nexport const SelectOptionStyle = {\r\n    maxWidth: \"296px\",\r\n};\r\n\r\nexport const PreloaderScreen = {\r\n    background: \"rgba(0, 0, 0, 0.8)\",\r\n    position: \"fixed\",\r\n    zIndex: \"10\",\r\n    top: \"0px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n    height: \"100%\"\r\n};\r\n\r\nexport default {\r\n    Required,\r\n    SelectOptionStyle,\r\n    PreloaderScreen\r\n};","import React, { Component } from \"react\";\r\nimport { PreloaderScreen } from \"../styles/MiscellaneousStyles\";\r\n\r\nclass Preloader extends Component {\r\n    render() {\r\n        return (\r\n            <div style={PreloaderScreen}>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                    <img src=\"./images/preloader.gif\" alt=\"preloader.gif\" height=\"200\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Preloader;","export const LoginCardBack = {\r\n    backgroundImage: \"url(/images/login_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n};\r\n\r\nexport const RegisterCardBack = {\r\n    backgroundImage: \"url(/images/signup_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n};\r\n\r\nexport const EmailConfirmationCardBack = {\r\n    backgroundImage: \"url(/images/passcode_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n};\r\n\r\nexport const AccountSetupCardBack = {\r\n    backgroundImage: \"url(/images/create_account_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n};\r\n\r\nexport const CongratulationsCardBack = {\r\n    backgroundImage: \"url(/images/congrats_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n};\r\n\r\nexport const Card = {\r\n    backgroundColor: \"rgba(229, 229, 229, 0.8)\",\r\n    height: \"auto\",\r\n    width: \"350px\",\r\n    padding: \"30px\",\r\n    alignContent: \"center\",\r\n    boxShadow: \"0 6px 6px rgba(0, 0, 0, 0.6)\",\r\n};\r\n\r\nexport const CardLarge = {\r\n    backgroundColor: \"rgba(229, 229, 229, 0.8)\",\r\n    height: \"auto\",\r\n    padding: \"30px\",\r\n    alignContent: \"center\",\r\n    boxShadow: \"0 6px 6px rgba(0, 0, 0, 0.6)\",\r\n};\r\n\r\nexport const CardXLarge = {\r\n    backgroundColor: \"rgba(229, 229, 229, 0.8)\",\r\n    height: \"auto\",\r\n    width: \"60%\",\r\n    margin: \"50px\",\r\n    boxShadow: \"0 6px 6px rgba(0, 0, 0, 0.6)\",\r\n};\r\n\r\nexport const CardChild = {\r\n    width: \"100%\",\r\n};\r\n\r\nexport const CardTitle = {\r\n    paddingTop: \"10px\",\r\n};\r\n\r\nexport default {\r\n    LoginCardBack,\r\n    RegisterCardBack,\r\n    EmailConfirmationCardBack,\r\n    AccountSetupCardBack,\r\n    CongratulationsCardBack,\r\n    Card,\r\n    CardLarge,\r\n    CardXLarge,\r\n    CardChild,\r\n    CardTitle,\r\n};","import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { loginDriver } from \"../drivers/DriverFunctions\";\r\nimport { loginTrader } from \"../traders/TraderFunctions\";\r\nimport Preloader from \"../../controls/Preloader\";\r\n\r\nimport {\r\n    LoginCardBack,\r\n    Card,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            EmailOrUsername: \"\",\r\n            Password: \"\",\r\n            SignInAs: \"Driver\",\r\n\r\n            LoggedInAsDriver: false,\r\n            LoggedInAsTrader: false,\r\n\r\n            NullError: false,\r\n            InvalidUsernameOrPassword: false,\r\n            Preloader: null,\r\n            Errors: {}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        await event.preventDefault();\r\n\r\n        if (this.state.EmailOrUsername == \"\" ||\r\n            this.state.Password == \"\") {\r\n\r\n            this.setState({\r\n                NullError: true,\r\n                InvalidUsernameOrPassword: false,\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const user = {\r\n            EmailOrUsername: this.state.EmailOrUsername,\r\n            Password: this.state.Password,\r\n            SignInAs: this.state.SignInAs,\r\n        };\r\n\r\n        if (this.state.SignInAs === \"Driver\") {\r\n            console.log(\"logging in as Driver...\");\r\n\r\n            await loginDriver(user).then(response => {\r\n                if (response && localStorage.userToken) {\r\n                    this.props.history.push(\"/drivers\");\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        NullError: false,\r\n                        InvalidUsernameOrPassword: true,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            console.log(\"Logging in as Trader or Broker...\");\r\n\r\n            await loginTrader(user).then(response => {\r\n                if (response.Message === \"Login successful.\") {\r\n                    localStorage.setItem(\"Token\", response.Token);\r\n\r\n                    this.setState({\r\n                        LoggedInAsTrader: true\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        NullError: false,\r\n                        InvalidUsernameOrPassword: true,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.LoggedInAsTrader) {\r\n            return <Redirect to={\"/traders\"} />;\r\n        }\r\n        else {\r\n            return <div>\r\n                <div className=\"middle\" style={LoginCardBack}>\r\n                    <div className=\"theme-default animated fadeIn\" style={Card} >\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/login.png\" alt=\"Login.png\" height=\"60\" />\r\n                            <div class=\"type-h3\" style={CardTitle}>Sign In</div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"EmailOrUsername\" class=\"control-label\">Email or Username</label>\r\n                                    <input type=\"email\" class=\"form-control\" name=\"EmailOrUsername\" placeholder=\"someone@provider.com\"\r\n                                        value={this.state.EmailOrUsername} onChange={this.onChange} />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"Password\" class=\"control-label\">Password</label>\r\n                                    <input type=\"password\" className=\"form-control\" name=\"Password\" placeholder=\"Password\"\r\n                                        value={this.state.Password} onChange={this.onChange} />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"control-label\">Sign In As</label>\r\n                                    <div class=\"dropdown\" style={{ width: \"100%\" }}>\r\n                                        <button id=\"example-dropdown\" class=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                            <span>{this.state.SignInAs}</span>\r\n                                            <span class=\"caret\"></span>\r\n                                        </button>\r\n                                        <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                            <li><Link onClick={e => { this.state.SignInAs = \"Driver\" }} onChange={this.onChange}>Driver</Link></li>\r\n                                            <li><Link onClick={e => { this.state.SignInAs = \"Trader\" }} onChange={this.onChange}>Trader</Link></li>\r\n                                            <li><Link onClick={e => { this.state.SignInAs = \"Broker\" }} onChange={this.onChange}>Broker</Link></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    {this.state.NullError &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">Email/Username and password is required.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                    {this.state.InvalidUsernameOrPassword &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">Invalid username or password.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                    <label class=\"control-label\"><Link to=\"/\">Forgot password</Link></label>\r\n                                    <br />\r\n                                    <label class=\"control-label\">No account? <span><Link to=\"/register\">Register now</Link></span></label>\r\n                                </div>\r\n                                <div>\r\n                                    <input type=\"submit\" value=\"Sign In\" class=\"btn btn-primary\" />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.Preloader}\r\n            </div>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default Login;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { registerDriver } from \"../drivers/DriverFunctions\";\r\nimport { registerTrader } from \"../traders/TraderFunctions\"\r\nimport Strings from \"../../res/strings\";\r\nimport { Required } from \"../../styles/MiscellaneousStyles\";\r\n\r\nimport {\r\n    RegisterCardBack,\r\n    Card,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            Email: \"\",\r\n            Password: \"\",\r\n            ConfirmPassword: \"\",\r\n            RegisterAs: \"Driver\",\r\n            NullError: false,\r\n\r\n            PasswordsMatched: false,\r\n            UsernameOrEmailTaken: false,\r\n            ValidEmail: false,\r\n            ValidPassword: false,\r\n            ValidForm: false,\r\n            Agreed: false,\r\n\r\n            Errors: {\r\n                Email: \"\",\r\n                Password: \"\",\r\n                ConfirmPassword: \"\",\r\n                Agreed: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let fieldValidationErrors = this.state.Errors;\r\n        let ValidEmail = this.state.ValidEmail;\r\n        let ValidPassword = this.state.ValidPassword;\r\n        let PasswordsMatched = this.state.PasswordsMatched;\r\n        let Agreed = this.state.Agreed;\r\n\r\n        switch (field) {\r\n            case \"Email\":\r\n                ValidEmail = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n                fieldValidationErrors.Email = ValidEmail ? \"\" : \"Email is invalid.\";\r\n                break;\r\n            case \"Password\":\r\n                ValidPassword = value.length >= 6;\r\n                fieldValidationErrors.Password = ValidPassword ? \"\" : \"Password is too short.\";\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                PasswordsMatched = this.state.Password === value;\r\n                fieldValidationErrors.ConfirmPassword = PasswordsMatched ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n            case \"IsAgree\":\r\n                Agreed = this.refs.agreementCheckBox.checked;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: fieldValidationErrors,\r\n            ValidEmail: ValidEmail,\r\n            ValidPassword: ValidPassword,\r\n            PasswordsMatched: PasswordsMatched,\r\n            Agreed: Agreed,\r\n        }, this.validateForm);\r\n    }\r\n\r\n    validateForm() {\r\n        this.setState({\r\n            ValidForm: this.state.ValidEmail &&\r\n                this.state.ValidPassword &&\r\n                this.state.PasswordsMatched &&\r\n                this.state.Agreed\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.Username === \"\" ||\r\n            this.state.Email === \"\" ||\r\n            this.state.Password === \"\" ||\r\n            this.state.ConfirmPassword === \"\") {\r\n\r\n            this.setState({\r\n                NullError: true,\r\n                UsernameOrEmailTaken: false,\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const newCredentials = {\r\n            Username: this.state.Username,\r\n            Password: this.state.Password,\r\n            Email: this.state.Email,\r\n            RegisterAs: this.state.RegisterAs,\r\n        }\r\n\r\n        if (newCredentials.RegisterAs == \"Driver\") {\r\n            await registerDriver(newCredentials).then(response => {\r\n                if (response && localStorage.newCredentialsToken) {\r\n                    this.props.history.push(\"/emailConfirmation\");\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        NullError: false,\r\n                        UsernameOrEmailTaken: true,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else if (newCredentials.RegisterAs == \"Trader\" || newCredentials.RegisterAs == \"Broker\") {\r\n            console.log(\"Seting up resources for new trader or broker...\");\r\n            await registerTrader(newCredentials).then(response => {\r\n                if (response && localStorage.newCredentialsToken) {\r\n                    this.props.history.push(\"/emailConfirmation\");\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        NullError: false,\r\n                        UsernameOrEmailTaken: true,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"middle\" style={RegisterCardBack}>\r\n                    <div class=\"theme-default animated fadeIn\" style={Card}>\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/signup.png\" alt=\"signup.png\" height=\"60\" />\r\n                            <div class=\"type-h3\" style={CardTitle}>Sign Up</div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"Username\" class=\"control-label\">Username</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"Username\" type=\"text\" name=\"Username\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Username} onChange={this.onChange} required />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"Email\" class=\"control-label\">Email</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"Email\" type=\"email\" name=\"Email\" class=\"form-control\" placeholder=\"someone@example.com\" autocomplete=\"off\"\r\n                                        value={this.state.Email} onChange={this.onChange} />\r\n                                    <span class=\"text-danger\">{this.state.Errors[\"Email\"]}</span>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"Password\" class=\"control-label\">Password</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"Password\" type=\"password\" name=\"Password\" class=\"form-control\"\r\n                                        value={this.state.Password} onChange={this.onChange} />\r\n                                    <span class=\"text-danger\">{this.state.Errors[\"Password\"]}</span>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"ConfirmPassword\" class=\"control-label\">Confirm Password</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"ConfirmPassword\" type=\"password\" name=\"ConfirmPassword\" class=\"form-control\"\r\n                                        value={this.state.ConfirmPassword} onChange={this.onChange} />\r\n                                    <span class=\"text-danger\">{this.state.Errors[\"ConfirmPassword\"]}</span>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"control-label\">Register As</label>\r\n                                    <div class=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                        <button id=\"example-dropdown\" class=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                            <span>{this.state.RegisterAs}</span>\r\n                                            <span class=\"caret\"></span>\r\n                                        </button>\r\n                                        <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                            <li><Link onClick={e => { this.state.RegisterAs = \"Driver\" }} onChange={this.onChange}>Driver</Link></li>\r\n                                            <li><Link onClick={e => { this.state.RegisterAs = \"Trader\" }} onChange={this.onChange}>Trader</Link></li>\r\n                                            <li><Link onClick={e => { this.state.RegisterAs = \"Broker\" }} onChange={this.onChange}>Broker</Link></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div class=\"checkbox\">\r\n                                        <label class=\"control-label\">\r\n                                            <input ref=\"agreementCheckBox\" type=\"checkbox\" name=\"IsAgree\" value=\"\" onChange={this.onChange}></input>\r\n                                            <span>Agree with our </span>\r\n                                            <span>\r\n                                                <Link data-toggle=\"modal\" data-target=\"#terms\">Terms and Conditions</Link>\r\n                                            </span>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    {this.state.NullError &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">All fields are required.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                    {this.state.UsernameOrEmailTaken &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">Username or email is already taken.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                    {this.state.AgreementError &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">You must agree to our terms and conditions.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n\r\n                                    <label class=\"control-label\">Have an account? <span><Link to=\"/login\">Sign In Now!</Link></span></label>\r\n                                </div>\r\n                                <input type=\"submit\" value=\"Next\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"modal\" id=\"terms\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content animated fadeIn\">\r\n                            <div class=\"modal-header\">\r\n                                <h4 class=\"modal-title\" id=\"modal-sample-label\">Terms of Use</h4>\r\n                            </div>\r\n                            <div class=\"modal-body text-justify\">\r\n                                Your privacy is important to us. <span>{Strings.APP_NAME}</span>'s Privacy Statement describes the types of data we collect from you, how we use your Data, and the legal bases we have to process your Data. The Privacy Statement also describes how {String.APP_NAME} uses your content, which is information submitted by you to {Strings.APP_NAME} via the Services. Where processing is based on consent and to the extent permitted by law, by agreeing to these Terms, you consent to {Strings.APP_NAME}� collection, use and disclosure of your content and data as described in the privacy statement. In some cases, we will provide separate notice and request your consent as referenced in the privacy statement.\r\n                                </div>\r\n                            <div class=\"modal-footer\">\r\n                                <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Ok</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Register;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\"; \r\nimport { Required } from \"../../styles/MiscellaneousStyles\";\r\n\r\nimport {\r\n    EmailConfirmationCardBack,\r\n    Card,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass EmailConfirmation extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            ConfirmationCode: 0,\r\n            NullError: false,\r\n            InvalidCodeError: false,\r\n            Errors: {}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        const code = jwt_decode(localStorage.newCredentialsToken).Code; \r\n\r\n        if (this.state.ConfirmationCode === \"\") {\r\n\r\n            this.setState({\r\n                NullError: true,\r\n                InvalidCodeError: false,\r\n            });\r\n\r\n            return;\r\n        }\r\n        else if (this.state.ConfirmationCode != code) {\r\n\r\n            this.setState({\r\n                NullError: false,\r\n                InvalidCodeError: true,\r\n            });\r\n\r\n            return;\r\n        }\r\n        else {\r\n            localStorage.setItem(\"verifiedCredentialsToken\", localStorage.newCredentialsToken);\r\n            localStorage.removeItem(\"newCredentialsToken\");\r\n            this.props.history.push(\"/setupAccount\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.newCredentialsToken) {\r\n            this.props.history.push(\"/register\");\r\n            return <a />\r\n        }\r\n        else {\r\n            return (\r\n                <div class=\"middle\" style={EmailConfirmationCardBack}>\r\n                    <div class=\"theme-default animated fadeIn\" style={Card}>\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/passcode.png\" alt=\"passcode.png\" height=\"60\" />\r\n                            <div class=\"type-h3\" style={CardTitle}>Email Confirmation</div>\r\n                            <div class=\"type-sh3\">We delivered a confirmation code to your email.</div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"ConfirmationCode\" class=\"control-label\">Confirmation Code</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"ConfirmationCode\" type=\"text\" name=\"ConfirmationCode\" class=\"form-control\"\r\n                                        value={this.state.ConfirmationCode} onChange={this.onChange} />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    {this.state.NullError &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">Confirmation code is required.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                    {this.state.InvalidCodeError &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">Invalid code.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <input type=\"submit\" value=\"Next\" class=\"btn btn-primary\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport default EmailConfirmation;","import React, { Component } from \"react\";\r\nimport { setupDriverAccount } from \"../drivers/DriverFunctions\";\r\nimport { setupTraderAccount } from \"../traders/TraderFunctions\";\r\nimport { Required } from \"../../styles/MiscellaneousStyles\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport {\r\n    AccountSetupCardBack,\r\n    CardLarge,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass AccountSetup extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            Email: \"\",\r\n            Password: \"\",\r\n            RegisterAs: \"\",\r\n\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            DateOfBirth: \"\",\r\n            Gender: \"Male\",\r\n            Nationality: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n\r\n            ValidFirstName: false,\r\n            ValidLastName: false,\r\n            ValidDateOfBirth: false,\r\n            ValidNationality: false,\r\n            ValidAddress: false,\r\n            ValidPhoneNumber: false,\r\n\r\n            ValidForm: false,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                DateOfBirth: \"\",\r\n                Nationality: \"\",\r\n                Address: \"\",\r\n                PhoneNumber: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFirstName = this.state.ValidFirstName;\r\n        let ValidLastName = this.state.ValidLastName;\r\n        let ValidDateOfBirth = this.state.ValidDateOfBirth;\r\n        let ValidNationality = this.state.ValidNationality;\r\n        let ValidAddress = this.state.ValidAddress;\r\n        let ValidPhoneNumber = this.state.ValidPhoneNumber;\r\n\r\n        switch (field) {\r\n            case \"FirstName\":\r\n                ValidFirstName = ((value !== \"\") &&\r\n                    (value.match(/^[a-zA-Z ]+$/)));\r\n                Errors.FirstName = ValidFirstName ? \"\" : \"First name is invalid.\";\r\n                break;\r\n            case \"LastName\":\r\n                ValidLastName = ((value !== \"\") &&\r\n                    (value.match(/^[a-zA-Z ]+$/)));\r\n                Errors.LastName = ValidLastName ? \"\" : \"Last name is invalid.\";\r\n                break;\r\n            case \"DateOfBirth\":\r\n                ValidDateOfBirth = (new Date(value) < new Date());\r\n                Errors.DateOfBirth = ValidDateOfBirth ? \"\" : \"Your Birthday must be earlier than today.\";\r\n                break;\r\n            case \"Nationality\":\r\n                ValidNationality = ((value !== \"\") &&\r\n                    (value.match(/^[a-zA-Z ]+$/)));\r\n                Errors.Nationality = ValidNationality ? \"\" : \"Nationality is invalid.\";\r\n                break;\r\n            case \"Address\":\r\n                ValidAddress = (value !== \"\");\r\n                Errors.Address = ValidAddress ? \"\" : \"Address is required.\";\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = value.match(/^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/);\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFirstName: ValidFirstName,\r\n            ValidLastName: ValidLastName,\r\n            ValidDateOfBirth: ValidDateOfBirth,\r\n            ValidNationality: ValidNationality,\r\n            ValidAddress: ValidAddress,\r\n            ValidPhoneNumber: ValidPhoneNumber\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidFirstName &&\r\n                    this.state.ValidLastName &&\r\n                    this.state.ValidDateOfBirth &&\r\n                    this.state.ValidNationality &&\r\n                    this.state.ValidAddress &&\r\n                    this.state.ValidPhoneNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (localStorage.verifiedCredentialsToken) {\r\n            const decoded = jwt_decode(localStorage.verifiedCredentialsToken);\r\n            this.state.Username = decoded.Username;\r\n            this.state.Email = decoded.Email;\r\n            this.state.Password = decoded.Password;\r\n            this.state.RegisterAs = decoded.RegisterAs;\r\n        }\r\n\r\n        const newUser = {\r\n            Username: this.state.Username,\r\n            Email: this.state.Email,\r\n            Password: this.state.Password,\r\n            RegisterAs: this.state.RegisterAs,\r\n            FirstName: this.state.FirstName,\r\n            LastName: this.state.LastName,\r\n            DateOfBirth: this.state.DateOfBirth,\r\n            Gender: this.state.Gender,\r\n            Address: this.state.Address,\r\n            PhoneNumber: this.state.PhoneNumber,\r\n            Nationality: this.state.Nationality,\r\n        }\r\n\r\n        if (newUser.RegisterAs == \"Driver\") {\r\n            await setupDriverAccount(newUser).then(response => {\r\n                localStorage.removeItem(\"verifiedCredentialsToken\");\r\n                localStorage.setItem(\"IsCreatedSuccessfully\", true);\r\n                this.props.history.push(\"/congratulations\");\r\n            });\r\n        }\r\n        if (newUser.RegisterAs == \"Trader\" || newUser.RegisterAs == \"Broker\") {\r\n            await setupTraderAccount(newUser).then(response => {\r\n                localStorage.removeItem(\"verifiedCredentialsToken\");\r\n                localStorage.setItem(\"IsCreatedSuccessfully\", true);\r\n                this.props.history.push(\"/congratulations\");\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.verifiedCredentialsToken) {\r\n            this.props.history.push(\"/register\");\r\n            return <a />\r\n        }\r\n        else {\r\n            return (\r\n                <div class=\"middle\" style={AccountSetupCardBack}>\r\n                    <div class=\"theme-default animated fadeIn\" style={CardLarge}>\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/create_account.png\" atl=\"create_account.png\" height=\"60\" />\r\n                            <div class=\"type-h3\" style={CardTitle}>\r\n                                Create Account\r\n                                </div>\r\n                            <div class=\"type-sh3\">\r\n                                Just one more step, and you're done!\r\n                                </div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-8\">\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"FirstName\" class=\"control-label\">First Name</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"FirstName\" autocomplete=\"off\"\r\n                                                value={this.state.FirstName} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.FirstName}</span>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"LastName\" class=\"control-label\">Last Name</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"LastName\" autocomplete=\"off\"\r\n                                                value={this.state.LastName} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.LastName}</span>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"DateOfBirth\" class=\"control-label\">Date of Birth</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"date\" class=\"form-control\" name=\"DateOfBirth\" autocomplete=\"off\"\r\n                                                value={this.state.DateOfBirth} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.DateOfBirth}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-8\">\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"Gender\" class=\"control-label\">Gender</label>\r\n                                            <div class=\"dropdown\" style={{ width: \"193px\", maxWidth: \"296px\", }}>\r\n                                                <button id=\"example-dropdown\" class=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                    aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                    <span>{this.state.Gender}</span>\r\n                                                    <span class=\"caret\"></span>\r\n                                                </button>\r\n                                                <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                    <li><a onClick={() => { this.setState({ Gender: \"Male\" }); }}>Male</a></li>\r\n                                                    <li><a onClick={() => { this.setState({ Gender: \"Female\" }); }}>Female</a></li>\r\n                                                </ul>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"Nationality\" class=\"control-label\">Nationality</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"Nationality\" autocomplete=\"off\"\r\n                                                value={this.state.Nationality} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.Nationality}</span>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"PhoneNumber\" class=\"control-label\">Phone Number</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autocomplete=\"off\"\r\n                                                placeholder=\"+XXXXXXXXXXXX\" value={this.state.PhoneNumber} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.PhoneNumber}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-8\">\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"Address\" class=\"control-label\">Address</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <textarea class=\"form-control\" rows=\"5\" name=\"Address\" autocomplete=\"off\"\r\n                                                value={this.state.Address} onChange={this.onChange}></textarea>\r\n                                            <span class=\"text-danger\">{this.state.Errors.Address}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"submit\" value=\"Create\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport default AccountSetup;","import React, { Component } from \"react\";\r\nimport { CongratulationsCardBack, CardXLarge } from \"../../styles/CardStyles\";\r\n\r\nclass EmailConfirmation extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n        localStorage.removeItem(\"IsCreatedSuccessfully\");\r\n        this.props.history.push(\"/login\");\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.IsCreatedSuccessfully) {\r\n            this.props.history.push(\"/register\");\r\n            return <a />\r\n        }\r\n        else {\r\n            return (\r\n                <div class=\"middle\" style={CongratulationsCardBack}>\r\n                    <div class=\"jumbotron theme-default animated fadeIn\" style={CardXLarge}>\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                    <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        alt=\"congrats.png\" src=\"./images/congrats.png\" data-source-index=\"2\" />\r\n                                </div>\r\n                                <div class=\"col-md-12 col-md-pull-12\">\r\n                                    <div class=\"type-h3\">Congratulations</div>\r\n                                    <div class=\"type-sh3\">Your account has been created successfully.</div>\r\n                                    <br />\r\n                                    <form noValidate onSubmit={this.onSubmit}>\r\n                                        <input type=\"submit\" value=\"Sign In\" class=\"btn btn-primary\" />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>);\r\n        }\r\n    }\r\n};\r\n\r\nexport default EmailConfirmation;","export const TabMenu = {\r\n    padding: \"10px\",\r\n    backgroundColor: \"#3A3A3C\",\r\n    width: \"100%\",\r\n    margin: \"0px\",\r\n};\r\n\r\nexport default {\r\n    TabMenu,\r\n};","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { uploadDriverProfilePhoto } from \"../../DriverFunctions\";\r\nimport Strings from \"../../../../res/strings\";\r\n\r\nclass ProfilePhoto extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Image: null,\r\n            ImageURL: \"./images/defaultProfilePhoto.png\",\r\n            DriverID: null,\r\n            ImageCategory: \"ProfilePicture\",\r\n            UploadProgress: null,\r\n        };\r\n        this.onImageUpload = this.onImageUpload.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const decoded = jwt_decode(localStorage.userToken);\r\n\r\n        this.setState({\r\n            ImageURL: decoded.ProfilePhotoURL,\r\n        });\r\n\r\n        this.setState({\r\n            DriverID: decoded.DriverID,\r\n        });\r\n    }\r\n\r\n    onImageUpload = event => {\r\n        this.state.Image = event.target.files[0];\r\n        console.log(this.state.Image);\r\n        const formData = new FormData();\r\n\r\n        try {\r\n            formData.append(\"ImageID\", this.state.DriverID);\r\n            formData.append(\"ImageCategory\", this.state.ImageCategory);\r\n            formData.append(\"Image\", this.state.Image, this.state.Image.name);\r\n        }\r\n        catch (exception) {\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        axios.post(Strings.IMAGE_UPLOADER, formData, {\r\n            onUploadProgress: event => {\r\n                this.setState({\r\n                    UploadProgress: (\r\n                        <div class=\"progress-bar\">\r\n                            <div class=\"progress-circle\"></div>\r\n                            <div class=\"progress-circle\"></div>\r\n                            <div class=\"progress-circle\"></div>\r\n                            <div class=\"progress-circle\"></div>\r\n                            <div class=\"progress-circle\"></div>\r\n                        </div>\r\n                    ),\r\n                });\r\n            }\r\n        }).then(async response => {\r\n            response = response.data;\r\n            console.log(response);\r\n\r\n            if (response.message === \"Image uploaded successfully.\") {\r\n                const driverProfilePhoto = {\r\n                    Token: localStorage.getItem(\"userToken\"),\r\n                    URL: response.imageUrl,\r\n                    FileName: response.filename\r\n                }\r\n\r\n                await uploadDriverProfilePhoto(driverProfilePhoto).then(response => {\r\n                    if (response.Message === \"Driver's profile photo is updated.\" ||\r\n                        response.Message === \"Driver's profile photo is added.\") {\r\n                        localStorage.setItem(\"userToken\", response.Token);\r\n\r\n                        this.setState({\r\n                            ImageURL: response.imageUrl,\r\n                            UploadProgress: null,\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        }).catch(() => {\r\n            this.setState({\r\n                ImageURL: \"./images/defaultProfilePhoto.png\",\r\n                UploadProgress: null,\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async e => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"file\" onChange={this.onImageUpload} style={{ display: \"none\", }} ref={fileInput => this.fileInput = fileInput} />\r\n                <figure class=\"media\">\r\n                    <div class=\"media-img media-img-has-play ratio-movie\" style={{\r\n                        width: \"200px\",\r\n                        height: \"200px\",\r\n                        border: \"0px\",\r\n                        padding: \"0px\",\r\n                        border: \"5px solid #3A3A3C\"\r\n                    }}>\r\n                        <a href=\"#\" onClick={() => this.fileInput.click()}>\r\n                            <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                src={this.state.ImageURL} alt=\"ProfilePhoto.png\" />\r\n                            <i class=\"glyph glyph-edit\"></i>\r\n                        </a>\r\n                    </div>\r\n                </figure>\r\n                {this.state.UploadProgress}\r\n            </div>\r\n                \r\n        );\r\n    }\r\n};\r\n\r\nexport default ProfilePhoto;","import React, { Component } from \"react\";\r\n\r\nclass WarningAlert extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"alert alert-warning alert-dismissible fade in\" role=\"alert\" style={{ marginBottom: \"0px\" }}>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={this.props.OnClose(null)}>\r\n                    <span aria-hidden=\"true\"><i class=\"glyph glyph-cancel\"></i></span>\r\n                </button>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-24\">\r\n                            <p>{this.props.Message}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default WarningAlert;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Strings from \"../res/strings\";\r\n\r\nclass ImageUploader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Image: null,\r\n            UploadProgress: null,\r\n        };\r\n\r\n        this.onImageUpload = this.onImageUpload.bind(this);\r\n    }\r\n\r\n    onImageUpload = event => {\r\n        this.state.Image = event.target.files[0];\r\n\r\n        if (this.state.Image) {\r\n            let mimeType = this.state.Image.type;\r\n\r\n            if (!mimeType.startsWith(\"image\")) {\r\n                this.props.OnInvalidImageSelected();\r\n                return;\r\n            }\r\n        }\r\n\r\n        const formData = new FormData();\r\n\r\n        try {\r\n            formData.append(\"Image\", this.state.Image, this.state.Image.name);\r\n        }\r\n        catch (exception) {\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        axios.post(Strings.IMAGE_UPLOADER, formData, {\r\n            onUploadProgress: event => {\r\n                this.setState({\r\n                    UploadProgress: (\r\n                        <div className=\"progress-bar\">\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                        </div>\r\n                    ),\r\n                });\r\n            }\r\n        }).then(async response => {\r\n            this.props.OnImageUploaded(response.data);\r\n\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n        }).catch((error) => {\r\n            this.props.OnImageUploaded(error);\r\n\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async e => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"file\" onChange={this.onImageUpload} style={{ display: \"none\", }} ref={fileInput => this.fileInput = fileInput} />\r\n                <figure className=\"media\">\r\n                    <div className=\"media-img media-img-has-play ratio-movie\" style={{\r\n                        width: this.props.Width,\r\n                        height: this.props.Height,\r\n                        border: \"0px\",\r\n                        padding: \"0px\",\r\n                        border: \"5px solid #3A3A3C\"\r\n                    }}>\r\n                        <a onClick={() => this.fileInput.click()}>\r\n                            <img src={this.props.Source} alt=\"dafault-image.png\" />\r\n                            <i className=\"glyph glyph-edit\"></i>\r\n                        </a>\r\n                    </div>\r\n                </figure>\r\n                {this.state.UploadProgress}\r\n            </div>\r\n                \r\n        );\r\n    }\r\n};\r\n\r\nexport default ImageUploader;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addDrivingLicence } from \"../../../../DriverFunctions.js\";\r\n\r\nclass AddDrivingLicenceDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LicenceNumber: \"\",\r\n            Type: \"\",\r\n            ReleaseDate: new Date(),\r\n            ExpiryDate: new Date(),\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidLicenceNumber: false,\r\n            ValidType: false,\r\n            ValidReleaseDate: false,\r\n            ValidExpiryDate: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                LicenceNumber: \"\",\r\n                Type: \"\",\r\n                ReleaseDate: \"\",\r\n                ExpiryDate: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidLicenceNumber = this.state.ValidLicenceNumber;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidReleaseDate = this.state.ValidReleaseDate;\r\n        let ValidExpiryDate = this.state.ValidExpiryDate;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"LicenceNumber\":\r\n                ValidLicenceNumber = (value !== \"\");\r\n                Errors.LicenceNumber = ValidLicenceNumber ? \"\" : \"Licence number is required.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Licence type is required\";\r\n                break;\r\n            case \"ReleaseDate\":\r\n                ValidReleaseDate = (new Date(value).getTime() < new Date(this.state.ExpiryDate).getTime());\r\n                Errors.ReleaseDate = ValidReleaseDate ? \"\" : \"Release date must be earlier than Expiry date.\";\r\n                break;\r\n            case \"ExpiryDate\":\r\n                ValidExpiryDate = (new Date(value).getTime() > new Date().getTime());\r\n                Errors.ExpiryDate = ValidExpiryDate ? \"\" : \"Expiry Date must be later than today.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidLicenceNumber: ValidLicenceNumber,\r\n            ValidType: ValidType,\r\n            ValidReleaseDate: ValidReleaseDate,\r\n            ValidExpiryDate: ValidExpiryDate,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidLicenceNumber &&\r\n                        this.state.ValidType &&\r\n                        this.state.ValidReleaseDate &&\r\n                        this.state.ValidExpiryDate &&\r\n                        this.state.ValidPhotoURL,\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newDrivingLicence = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            LicenceNumber: this.state.LicenceNumber,\r\n            Type: this.state.Type,\r\n            ReleaseDate: this.state.ReleaseDate,\r\n            ExpiryDate: this.state.ExpiryDate,\r\n            PhotoURL: this.state.PhotoURL,\r\n        }\r\n\r\n        console.log(\"Going to add the Driving Licence.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addDrivingLicence(newDrivingLicence).then(response => {\r\n            if (response.Message === \"Driving Licence is added.\") {\r\n                localStorage.setItem(\"userToken\", response.Token);\r\n                this.props.OnDrivingLicenceAdded(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section class=\"text-left\">\r\n                <div class=\"modal\" id=\"add-driving-licence-dialog\"\r\n                    tabindex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div class=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div class=\"type-h3\">Add Driving Licence</div>\r\n                                    </div>\r\n                                    <div class=\"modal-body\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"DrivingLicence\" />\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Licence Number</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"LicenceNumber\" class=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.LicenceNumber} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.LicenceNumber}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Licence Type</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" class=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Release Date</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"ReleaseDate\" class=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.ReleaseDate} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.ReleaseDate}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Expiry Date</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"ExpiryDate\" class=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.ExpiryDate} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.ExpiryDate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"modal-footer\">\r\n                                        <button class=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnAddDrivingLicenceDialogRemove}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddDrivingLicenceDialog;","import React, { Component } from \"react\";\r\nimport AddDrivingLicenceDialog from \"./AddDrivingLicenceDialog.js\";\r\n\r\nclass AddDrivingLicenceButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddDrivingLicenceDialog: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-driving-licence-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddDrivingLicenceDialog: (<AddDrivingLicenceDialog\r\n                                OnAddDrivingLicenceDialogRemove={() => {\r\n                                    this.setState({\r\n                                        AddDrivingLicenceDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnDrivingLicenceAdded={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />),\r\n                        });\r\n                    }}>\r\n                    <span class=\"fas fa-plus\" aria-hidden=\"true\"></span> Driving Licence\r\n                </button>\r\n                {this.state.AddDrivingLicenceDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddDrivingLicenceButton;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addEntryExitCard } from \"../../../../DriverFunctions.js\";\r\n\r\nclass AddEntryExitCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            EntryExitNumber: \"\",\r\n            Type: \"Simple\",\r\n            ReleaseDate: new Date(),\r\n            NumberOfMonths: \"\",\r\n\r\n            ValidEntryExitNumber: false,\r\n            ValidReleaseDate: false,\r\n            ValidNumberOfMonths: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                EntryExitNumber: \"\",\r\n                ReleaseDate: \"\",\r\n                NumberOfMonths: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidEntryExitNumber = this.state.ValidEntryExitNumber;\r\n        let ValidReleaseDate = this.state.ValidReleaseDate;\r\n        let ValidNumberOfMonths = this.state.ValidNumberOfMonths;\r\n\r\n        switch (field) {\r\n            case \"EntryExitNumber\":\r\n                ValidEntryExitNumber = (value !== \"\");\r\n                Errors.EntryExitNumber = ValidEntryExitNumber ? \"\" : \"Entry/exit number is required.\";\r\n                break;\r\n            case \"ReleaseDate\":\r\n                ValidReleaseDate = (new Date(value).getTime() <= new Date());\r\n                Errors.ReleaseDate = ValidReleaseDate ? \"\" : \"Release date must not be later than today.\";\r\n                break;\r\n            case \"NumberOfMonths\":\r\n                ValidNumberOfMonths = (value !== \"\");\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : \"Number of months is required.\";\r\n\r\n                if (Errors.NumberOfMonths !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNumberOfMonths = (value > 0)\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : \"Number of months must be greater than 0.\";\r\n\r\n                if (Errors.NumberOfMonths !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                let releaseDate = new Date(this.state.ReleaseDate);\r\n                let expiryDate = new Date(releaseDate.setMonth(releaseDate.getMonth() + value));\r\n\r\n                ValidNumberOfMonths = (expiryDate > new Date());\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : `Your card is expired if it is for ${value} months. Your card might be expired on ${expiryDate.toLocaleString()}`;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidEntryExitNumber: ValidEntryExitNumber,\r\n            ValidReleaseDate: ValidReleaseDate,\r\n            ValidNumberOfMonths: ValidNumberOfMonths,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidEntryExitNumber &&\r\n                        this.state.ValidReleaseDate &&\r\n                        this.state.ValidNumberOfMonths\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newEntryExitCard = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            EntryExitNumber: this.state.EntryExitNumber,\r\n            Type: this.state.Type,\r\n            ReleaseDate: this.state.ReleaseDate,\r\n            NumberOfMonths: this.state.NumberOfMonths,\r\n        }\r\n\r\n        console.log(\"Going to add Entry/Exit Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addEntryExitCard(newEntryExitCard).then(response => {\r\n            if (response.Message === \"Entry/Exit card is added.\") {\r\n                localStorage.setItem(\"userToken\", response.Token);\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section class=\"text-left\">\r\n                <div class=\"modal\" id=\"add-entry-exit-card-dialog\"\r\n                    tabindex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div class=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div class=\"type-h3\">Add Entry/Exit Card</div>\r\n                                    </div>\r\n                                    <div class=\"modal-body\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Entry/Exit Number</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"EntryExitNumber\" class=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.EntryExitNumber} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.EntryExitNumber}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Card Type</label><br />\r\n                                                    <div class=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                        <button id=\"example-dropdown\" class=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                            <span>{this.state.Type}</span>\r\n                                                            <span class=\"caret\"></span>\r\n                                                        </button>\r\n                                                        <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                            <li><a onClick={() => { this.setState({ Type: \"Simple\" }); }}>Simple</a></li>\r\n                                                            <li><a onClick={() => { this.setState({ Type: \"Multiple\" }); }}>Multiple</a></li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Release Date</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"ReleaseDate\" class=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.ReleaseDate} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.ReleaseDate}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Number of Months</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"NumberOfMonths\" class=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.NumberOfMonths} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.NumberOfMonths}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"modal-footer\">\r\n                                        <button class=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddEntryExitCardDialog;","import React, { Component } from \"react\";\r\nimport AddEntryExitCardDialog from \"./AddEntryExitCardDialog.js\";\r\n\r\nclass AddEntryExitCardButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddEntryExitCardDialog: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-entry-exit-card-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddEntryExitCardDialog: (<AddEntryExitCardDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddEntryExitCardDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />),\r\n                        });\r\n                    }}>\r\n                    <span class=\"fas fa-plus\" aria-hidden=\"true\"></span> Entry/Exit Card\r\n                </button>\r\n                {this.state.AddEntryExitCardDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddEntryExitCardButton;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addIdentityCard } from \"../../../../DriverFunctions.js\";\r\n\r\nclass AddIdentityCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidIDNumber: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                IDNumber: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidIDNumber = this.state.ValidIDNumber;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"IDNumber\":\r\n                ValidIDNumber = (value !== \"\");\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidIDNumber = (value >= 1000000000 && value <= 9999999999);\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number must be 10-digits long.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidIDNumber: ValidIDNumber,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidIDNumber &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newIdentityCard = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            IDNumber: this.state.IDNumber,\r\n            PhotoURL: this.state.PhotoURL,\r\n        }\r\n\r\n        console.log(\"Going to add Identity Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addIdentityCard(newIdentityCard).then(response => {\r\n            if (response.Message === \"Identity card is added.\") {\r\n                localStorage.setItem(\"userToken\", response.Token);\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section class=\"text-left\">\r\n                <div class=\"modal\" id=\"add-identity-card-dialog\"\r\n                    tabindex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div class=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div class=\"type-h3\">Add Identity Card</div>\r\n                                    </div>\r\n                                    <div class=\"modal-body\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => { \r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"IdentityCard\" />\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">ID Number</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"IDNumber\" class=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.IDNumber} onChange={this.onChange} min=\"1000000000\" max=\"9999999999\"/>\r\n                                                    <span class=\"text-danger\">{this.state.Errors.IDNumber}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"modal-footer\">\r\n                                        <button class=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddIdentityCardDialog;","import React, { Component } from \"react\";\r\nimport AddIdentityCardDialog from \"./AddIdentityCardDialog.js\";\r\n\r\nclass AddIdentityCardButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddIdentityCardDialog: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-identity-card-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddIdentityCardDialog: <AddIdentityCardDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddIdentityCardDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />,\r\n                        });\r\n                    }}>\r\n                    <span class=\"fas fa-plus\" aria-hidden=\"true\"></span> Identity Card\r\n                </button>\r\n                {this.state.AddIdentityCardDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddIdentityCardButton;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { updateDrivingLicence } from \"../../../../DriverFunctions.js\";\r\n\r\nclass EditDrivingLicenceDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LicenceNumber: \"\",\r\n            Type: \"\",\r\n            ReleaseDate: new Date(),\r\n            ExpiryDate: new Date(),\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidLicenceNumber: true,\r\n            ValidType: true,\r\n            ValidReleaseDate: true,\r\n            ValidExpiryDate: true,\r\n            ValidPhotoURL: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                LicenceNumber: \"\",\r\n                Type: \"\",\r\n                ReleaseDate: \"\",\r\n                ExpiryDate: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.userToken) {\r\n            const drivingLicence = jwt_decode(localStorage.userToken).DrivingLicence;\r\n\r\n            if (drivingLicence) {\r\n                this.setState({\r\n                    DrivingLicenceID: drivingLicence.DrivingLicenceID,\r\n                    LicenceNumber: drivingLicence.LicenceNumber,\r\n                    Type: drivingLicence.Type,\r\n                    ReleaseDate: drivingLicence.ReleaseDate,\r\n                    ExpiryDate: drivingLicence.ExpiryDate,\r\n                    PhotoURL: drivingLicence.PhotoURL,\r\n                });\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            DrivingLicenceID: \"\",\r\n            LicenceNumber: \"\",\r\n            Type: \"\",\r\n            ReleaseDate: new Date(),\r\n            ExpiryDate: new Date(),\r\n            PhotoURL: \"./images/default_image.png\",\r\n        });\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidLicenceNumber = this.state.ValidLicenceNumber;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidReleaseDate = this.state.ValidReleaseDate;\r\n        let ValidExpiryDate = this.state.ValidExpiryDate;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"LicenceNumber\":\r\n                ValidLicenceNumber = (value !== \"\");\r\n                Errors.LicenceNumber = ValidLicenceNumber ? \"\" : \"Licence number is required.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Licence type is required\";\r\n                break;\r\n            case \"ReleaseDate\":\r\n                ValidReleaseDate = (new Date(value).getTime() < new Date(this.state.ExpiryDate).getTime());\r\n                Errors.ReleaseDate = ValidReleaseDate ? \"\" : \"Release date must be earlier than Expiry date.\";\r\n                break;\r\n            case \"ExpiryDate\":\r\n                ValidExpiryDate = (new Date(value).getTime() > new Date().getTime());\r\n                Errors.ExpiryDate = ValidExpiryDate ? \"\" : \"Expiry Date must be later than today.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidLicenceNumber: ValidLicenceNumber,\r\n            ValidType: ValidType,\r\n            ValidReleaseDate: ValidReleaseDate,\r\n            ValidExpiryDate: ValidExpiryDate,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidLicenceNumber &&\r\n                        this.state.ValidType &&\r\n                        this.state.ValidReleaseDate &&\r\n                        this.state.ValidExpiryDate &&\r\n                        this.state.ValidPhotoURL,\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedDrivingLicence = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            LicenceNumber: this.state.LicenceNumber,\r\n            Type: this.state.Type,\r\n            ReleaseDate: this.state.ReleaseDate,\r\n            ExpiryDate: this.state.ExpiryDate,\r\n            PhotoURL: this.state.PhotoURL,\r\n        }\r\n\r\n        console.log(\"Going to update the Driving Licence.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateDrivingLicence(updatedDrivingLicence).then(response => {\r\n            if (response.Message === \"Driving Licence is updated.\") {\r\n                localStorage.setItem(\"userToken\", response.Token);\r\n                this.props.OnDrivingLicenceUpdated(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div class=\"modal\" id=\"edit-driving-licence-dialog\"\r\n                    tabindex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div class=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div class=\"type-h3\">Edit Driving Licence</div>\r\n                                    </div>\r\n                                    <div class=\"modal-body\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"DrivingLicence\" />\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Licence Number</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"LicenceNumber\" class=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.LicenceNumber} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.LicenceNumber}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Licence Type</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" class=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Release Date</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"ReleaseDate\" class=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.ReleaseDate} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.ReleaseDate}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Expiry Date</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"ExpiryDate\" class=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.ExpiryDate} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.ExpiryDate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"modal-footer\">\r\n                                        <button class=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnDismissDialog}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default EditDrivingLicenceDialog;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport EditDriverLicenceDialog from \"./EditDrivingLicenceDialog.js\";\r\nimport { deleteDrivingLicence } from \"../../../../DriverFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass DrivingLicenceListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DrivingLicenceID: \"\",\r\n            LicenceNumber: \"\",\r\n            Type: \"\",\r\n            ReleaseDate: \"\",\r\n            ExpiryDate: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n            EditDrivingLicenceDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedDrivingLicence = {\r\n            Token: localStorage.getItem(\"userToken\")\r\n        };\r\n\r\n        console.log(`Going to delete Driving Licence.`);\r\n\r\n        await deleteDrivingLicence(discardedDrivingLicence)\r\n            .then(response => {\r\n                if (response.Message === \"Driving Licence is deleted.\") {\r\n                    localStorage.setItem(\"userToken\", response.Token);\r\n                    this.props.OnDocumentsUpdated();\r\n                }\r\n\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.userToken) {\r\n            const drivingLicence = jwt_decode(localStorage.userToken).DrivingLicence;\r\n\r\n            if (drivingLicence) {\r\n                this.setState({\r\n                    DrivingLicenceID: drivingLicence.DrivingLicenceID,\r\n                    LicenceNumber: drivingLicence.LicenceNumber,\r\n                    Type: drivingLicence.Type,\r\n                    ReleaseDate: drivingLicence.ReleaseDate,\r\n                    ExpiryDate: drivingLicence.ExpiryDate,\r\n                    PhotoURL: drivingLicence.PhotoURL,\r\n                });\r\n\r\n                console.log(this.state.ExpiryDate);\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            DrivingLicenceID: \"\",\r\n            LicenceNumber: \"\",\r\n            Type: \"\",\r\n            ReleaseDate: \"\",\r\n            ExpiryDate: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <li class=\"list-items-row\">\r\n                <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#driving-licence-${this.state.DrivingLicenceID}`}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-2\">\r\n                            <i class=\"glyph glyph-add\"></i>\r\n                            <i class=\"glyph glyph-remove\"></i>\r\n                            <strong>{this.props.Index}</strong>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                            <img class=\"img-responsive visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                src={this.state.PhotoURL} alt=\"trailer.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>DRIVING LICENCE</span>\r\n                            </div>\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Licence Number:</span> {this.state.LicenceNumber}\r\n                            </div>\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Licence Type:</span> {this.state.Type}\r\n                            </div>\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Release Date:</span> {this.state.ReleaseDate}\r\n                            </div>\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Expiry Date:</span> {this.state.ExpiryDate}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"collapse\" id={`driving-licence-${this.state.DrivingLicenceID}`}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-18 col-md-offset-2\">\r\n                            <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block\"\r\n                                src={this.state.PhotoURL} alt=\"trailer.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div class=\"col-md-4 text-right\">\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#edit-driving-licence-dialog\"\r\n                                onMouseDown={() => {\r\n                                    this.setState({\r\n                                        EditDrivingLicenceDialog: (<EditDriverLicenceDialog\r\n                                            OnDismissDialog={() => {\r\n                                                this.setState({\r\n                                                    EditDrivingLicenceDialog: null\r\n                                                });\r\n                                            }}\r\n                                            OnDrivingLicenceUpdated={cancelButton => {\r\n                                                cancelButton.click();\r\n                                                this.props.OnDocumentsUpdated();\r\n                                            }} />)\r\n                                    });\r\n                                }}>\r\n                                Edit\r\n                                </button>\r\n                            <button type=\"button\" class=\"btn btn-danger\" onClick={event => { this.onDelete(); }}>Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </div>               \r\n                {this.state.Preloader}\r\n                {this.state.EditDrivingLicenceDialog}\r\n            </li>        \r\n        );\r\n    }\r\n};\r\n\r\nexport default DrivingLicenceListItem;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { updateEntryExitCard } from \"../../../../DriverFunctions.js\";\r\n\r\nclass EditEntryExitCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            EntryExitNumber: \"\",\r\n            Type: \"Simple\",\r\n            ReleaseDate: new Date(),\r\n            NumberOfMonths: \"\",\r\n\r\n            ValidEntryExitNumber: true,\r\n            ValidReleaseDate: true,\r\n            ValidNumberOfMonths: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                EntryExitNumber: \"\",\r\n                ReleaseDate: \"\",\r\n                NumberOfMonths: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.userToken) {\r\n            const entryExitCard = jwt_decode(localStorage.userToken).EntryExitCard;\r\n\r\n            if (entryExitCard) {\r\n                this.setState({\r\n                    EntryExitNumber: entryExitCard.EntryExitNumber,\r\n                    Type: entryExitCard.Type,\r\n                    ReleaseDate: entryExitCard.ReleaseDate,\r\n                    NumberOfMonths: entryExitCard.NumberOfMonths,\r\n                });\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            EntryExitNumber: \"\",\r\n            Type: \"Simple\",\r\n            ReleaseDate: new Date(),\r\n            NumberOfMonths: \"\",\r\n        });\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidEntryExitNumber = this.state.ValidEntryExitNumber;\r\n        let ValidReleaseDate = this.state.ValidReleaseDate;\r\n        let ValidNumberOfMonths = this.state.ValidNumberOfMonths;\r\n\r\n        switch (field) {\r\n            case \"EntryExitNumber\":\r\n                ValidEntryExitNumber = (value !== \"\");\r\n                Errors.EntryExitNumber = ValidEntryExitNumber ? \"\" : \"Entry/exit number is required.\";\r\n                break;\r\n            case \"ReleaseDate\":\r\n                ValidReleaseDate = (new Date(value).getTime() <= new Date());\r\n                Errors.ReleaseDate = ValidReleaseDate ? \"\" : \"Release date must not be later than today.\";\r\n                break;\r\n            case \"NumberOfMonths\":\r\n                ValidNumberOfMonths = (value !== \"\");\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : \"Number of months is required.\";\r\n\r\n                if (Errors.NumberOfMonths !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNumberOfMonths = (value > 0)\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : \"Number of months must be greater than 0.\";\r\n\r\n                if (Errors.NumberOfMonths !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                let releaseDate = new Date(this.state.ReleaseDate);\r\n                let expiryDate = new Date(releaseDate.setMonth(releaseDate.getMonth() + value));\r\n\r\n                ValidNumberOfMonths = (expiryDate > new Date());\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : `Your card is expired if it is for ${value} months. Your card might be expired on ${expiryDate.toLocaleString()}`;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidEntryExitNumber: ValidEntryExitNumber,\r\n            ValidReleaseDate: ValidReleaseDate,\r\n            ValidNumberOfMonths: ValidNumberOfMonths,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidEntryExitNumber &&\r\n                    this.state.ValidReleaseDate &&\r\n                    this.state.ValidNumberOfMonths\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedEntryExitCard = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            EntryExitNumber: this.state.EntryExitNumber,\r\n            Type: this.state.Type,\r\n            ReleaseDate: this.state.ReleaseDate,\r\n            NumberOfMonths: this.state.NumberOfMonths,\r\n        }\r\n\r\n        console.log(\"Going to update Entry/Exit Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateEntryExitCard(updatedEntryExitCard).then(response => {\r\n            if (response.Message === \"Entry/Exit card is updated.\") {\r\n                localStorage.setItem(\"userToken\", response.Token);\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div class=\"modal\" id=\"edit-entry-exit-card-dialog\"\r\n                    tabindex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div class=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div class=\"type-h3\">Edit Entry/Exit Card</div>\r\n                                    </div>\r\n                                    <div class=\"modal-body\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Entry/Exit Number</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"EntryExitNumber\" class=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.EntryExitNumber} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.EntryExitNumber}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Card Type</label><br />\r\n                                                    <div class=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                        <button id=\"example-dropdown\" class=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                            <span>{this.state.Type}</span>\r\n                                                            <span class=\"caret\"></span>\r\n                                                        </button>\r\n                                                        <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                            <li><a onClick={() => {\r\n                                                                this.setState({ Type: \"Simple\" });\r\n                                                                this.validateField(\"\", \"\");\r\n                                                            }}>Simple</a></li>\r\n                                                            <li><a onClick={() => {\r\n                                                                this.setState({ Type: \"Multiple\" });\r\n                                                                this.validateField(\"\", \"\");\r\n                                                            }}>Multiple</a></li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Release Date</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"ReleaseDate\" class=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.ReleaseDate} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.ReleaseDate}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Number of Months</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"NumberOfMonths\" class=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.NumberOfMonths} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.NumberOfMonths}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"modal-footer\">\r\n                                        <button class=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default EditEntryExitCardDialog;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport EditEntryExitCardDialog from \"./EditEntryExitCardDialog.js\";\r\nimport { deleteEntryExitCard } from \"../../../../DriverFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass EntryExitCardListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            EntryExitCardID: \"\",\r\n            EntryExitNumber: \"\",\r\n            Type: \"Simple\",\r\n            ReleaseDate: \"\",\r\n            NumberOfMonths: \"\",\r\n\r\n            EditEntryExitCardDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedEntryExitCard = {\r\n            Token: localStorage.getItem(\"userToken\")\r\n        };\r\n\r\n        console.log(`Going to delete Exit/Entry card.`);\r\n\r\n        await deleteEntryExitCard(discardedEntryExitCard)\r\n            .then(response => {\r\n                if (response.Message === \"Entry/Exit card is deleted.\") {\r\n                    localStorage.setItem(\"userToken\", response.Token);\r\n                    this.props.OnDocumentsUpdated();\r\n                }\r\n\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.userToken) {\r\n            const entryExitCard = jwt_decode(localStorage.userToken).EntryExitCard;\r\n\r\n            if (entryExitCard) {\r\n                this.setState({\r\n                    EntryExitCardID: entryExitCard.EntryExitCardID,\r\n                    EntryExitNumber: entryExitCard.EntryExitNumber,\r\n                    Type: entryExitCard.Type,\r\n                    ReleaseDate: entryExitCard.ReleaseDate,\r\n                    NumberOfMonths: entryExitCard.NumberOfMonths,\r\n                });\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            EntryExitCardID: \"\",\r\n            EntryExitNumber: \"\",\r\n            Type: \"Simple\",\r\n            ReleaseDate: \"\",\r\n            NumberOfMonths: \"\",\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <li class=\"list-items-row\">\r\n                <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#entry-exit-card-${this.state.EntryExitCardID}`}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-2\">\r\n                            <i class=\"glyph glyph-add\"></i>\r\n                            <i class=\"glyph glyph-remove\"></i>\r\n                            <strong>{this.props.Index}</strong>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                            <img class=\"img-responsive visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                src=\"./images/default_image.png\" alt=\"trailer.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>ENTRY/EXIT CARD</span>\r\n                            </div>\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Entry/Exit Number:</span> {this.state.EntryExitNumber}\r\n                            </div>\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Licence Type:</span> {this.state.Type}\r\n                            </div>\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Release Date:</span> {this.state.ReleaseDate}\r\n                            </div>\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Number of Months:</span> {this.state.NumberOfMonths}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"collapse\" id={`entry-exit-card-${this.state.EntryExitCardID}`}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-18 col-md-offset-2\">\r\n                            <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block\"\r\n                                src=\"./images/default_image.png\" alt=\"trailer.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div class=\"col-md-4 text-right\">\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#edit-entry-exit-card-dialog\"\r\n                                onMouseDown={() => {\r\n                                    this.setState({\r\n                                        EditEntryExitCardDialog: <EditEntryExitCardDialog\r\n                                            OnCancel={() => {\r\n                                                this.setState({\r\n                                                    EditEntryExitCardDialog: null\r\n                                                });\r\n                                            }}\r\n                                            OnOK={cancelButton => {\r\n                                                cancelButton.click();\r\n                                                this.props.OnDocumentsUpdated();\r\n                                            }} />\r\n                                    });\r\n                                }}>\r\n                                Edit\r\n                                </button>\r\n                            <button type=\"button\" class=\"btn btn-danger\" onClick={event => { this.onDelete(); }}>Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </div>               \r\n                {this.state.Preloader}\r\n                {this.state.EditEntryExitCardDialog}\r\n            </li>        \r\n        );\r\n    }\r\n};\r\n\r\nexport default EntryExitCardListItem;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { updateIdentityCard } from \"../../../../DriverFunctions.js\";\r\n\r\nclass EditIdentityCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidIDNumber: true,\r\n            ValidPhotoURL: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                IDNumber: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.userToken) {\r\n            const identityCard = jwt_decode(localStorage.userToken).IdentityCard;\r\n\r\n            if (identityCard) {\r\n                this.setState({\r\n                    IDNumber: identityCard.IDNumber,\r\n                    PhotoURL: identityCard.PhotoURL,\r\n                });\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n        });\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidIDNumber = this.state.ValidIDNumber;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"IDNumber\":\r\n                ValidIDNumber = (value !== \"\");\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidIDNumber = (value >= 1000000000 && value <= 9999999999);\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number must be 10-digits long.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidIDNumber: ValidIDNumber,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidIDNumber &&\r\n                    this.state.ValidPhotoURL\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedIdentityCard = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            IDNumber: this.state.IDNumber,\r\n            PhotoURL: this.state.PhotoURL,\r\n        }\r\n\r\n        console.log(\"Going to update Identity Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateIdentityCard(updatedIdentityCard).then(response => {\r\n            if (response.Message === \"Identity card is updated.\") {\r\n                localStorage.setItem(\"userToken\", response.Token);\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div class=\"modal\" id=\"edit-identity-card-dialog\"\r\n                    tabindex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div class=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div class=\"type-h3\">Edit Identity Card</div>\r\n                                    </div>\r\n                                    <div class=\"modal-body\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"IdentityCard\" />\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">ID Number</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"IDNumber\" class=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.IDNumber} onChange={this.onChange} min=\"1000000000\" max=\"99999999999\" />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.IDNumber}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"modal-footer\">\r\n                                        <button class=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default EditIdentityCardDialog;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport EditIdentityCardDialog from \"./EditIdentityCardDialog.js\";\r\nimport { deleteIdentityCard } from \"../../../../DriverFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass IdentityCardListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IdentityCardID: \"\",\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            EditIdentityCardDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedIdentityCard = {\r\n            Token: localStorage.getItem(\"userToken\")\r\n        };\r\n\r\n        console.log(`Going to delete Identity Card.`);\r\n\r\n        await deleteIdentityCard(discardedIdentityCard)\r\n            .then(response => {\r\n                if (response.Message === \"Identity card is deleted.\") {\r\n                    localStorage.setItem(\"userToken\", response.Token);\r\n                    this.props.OnDocumentsUpdated();\r\n                }\r\n\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.userToken) {\r\n            const identityCard = jwt_decode(localStorage.userToken).IdentityCard;\r\n\r\n            if (identityCard) {\r\n                this.setState({\r\n                    IdentityCardID: identityCard.IdentityCardID,\r\n                    IDNumber: identityCard.IDNumber,\r\n                    PhotoURL: identityCard.PhotoURL,\r\n                });\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            IdentityCardID: \"\",\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <li class=\"list-items-row\">\r\n                <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#identity-card-${this.state.IdentityCardID}`}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-2\">\r\n                            <i class=\"glyph glyph-add\"></i>\r\n                            <i class=\"glyph glyph-remove\"></i>\r\n                            <strong>{this.props.Index}</strong>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                            <img class=\"img-responsive visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                src={this.state.PhotoURL} alt=\"identity_card.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>IDENTITY CARD</span>\r\n                            </div>\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>ID Number:</span> {this.state.IDNumber}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"collapse\" id={`identity-card-${this.state.IdentityCardID}`}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-18 col-md-offset-2\">\r\n                            <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block\"\r\n                                src={this.state.PhotoURL} alt=\"trailer.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div class=\"col-md-4 text-right\">\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#edit-identity-card-dialog\"\r\n                                onMouseDown={() => {\r\n                                    this.setState({\r\n                                        EditIdentityCardDialog: (<EditIdentityCardDialog\r\n                                            OnCancel={() => {\r\n                                                this.setState({\r\n                                                    EditIdentityCardDialog: null\r\n                                                });\r\n                                            }}\r\n                                            OnOK={cancelButton => {\r\n                                                cancelButton.click();\r\n                                                this.props.OnDocumentsUpdated();\r\n                                            }} />)\r\n                                    });\r\n                                }}>\r\n                                Edit\r\n                                </button>\r\n                            <button type=\"button\" class=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </div>               \r\n                {this.state.Preloader}\r\n                {this.state.EditIdentityCardDialog}\r\n            </li>        \r\n        );\r\n    }\r\n};\r\n\r\nexport default IdentityCardListItem;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport AddDrivingLicenceButton from \"./drivingLicence/AddDrivingLicenceButton.js\";\r\nimport AddEntryExitCardButton from \"./entryExitCard/AddEntryExitCardButton.js\";\r\nimport AddIdentityCardButton from \"./identityCard/AddIdentityCardButton.js\";\r\nimport DrivingLicenceListItem from \"./drivingLicence/DrivingLicenceListItem.js\"; \r\nimport EntryExitCardListItem from \"./entryExitCard/EntryExitCardListItem.js\";\r\nimport IdentityCardListItem from \"./identityCard/IdentityCardListItem.js\";\r\n\r\nclass DocumentsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddDrivingLicenceButton: null,\r\n            AddEntryExitCardButton: null,\r\n            AddIdentityCardButton: null, \r\n            DrivingLicenceListItem: null,\r\n            EntryExitCardListItem: null,\r\n            IdentityCardListItem: null,\r\n        };\r\n\r\n        this.onDocumentsUpdated = this.onDocumentsUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onDocumentsUpdated();\r\n    }\r\n\r\n    onDocumentsUpdated = () => {\r\n        const driver = jwt_decode(localStorage.userToken);\r\n        let index = 0;\r\n\r\n        (driver.DrivingLicence) ? this.setState({\r\n            AddDrivingLicenceButton: null,\r\n            DrivingLicenceListItem: <DrivingLicenceListItem\r\n                Index={++index}\r\n                OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n        }) : this.setState({\r\n            AddDrivingLicenceButton: <AddDrivingLicenceButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n            DrivingLicenceListItem: null\r\n        });\r\n\r\n        (driver.EntryExitCard) ? this.setState({\r\n            AddEntryExitCardButton: null,\r\n            EntryExitCardListItem: <EntryExitCardListItem\r\n                Index={++index}\r\n                OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n        }) : this.setState({\r\n            AddEntryExitCardButton: <AddEntryExitCardButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n            EntryExitCardListItem: null\r\n        });\r\n\r\n        (driver.IdentityCard) ? this.setState({\r\n            AddIdentityCardButton: null,\r\n            IdentityCardListItem: <IdentityCardListItem\r\n                Index={++index}\r\n                OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n        }) : this.setState({\r\n            AddIdentityCardButton: <AddIdentityCardButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n            IdentityCardListItem: null\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div class=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Documents</div>\r\n                <div style={{ padding: \"10px\", backgroundColor: \"#E5E5E5\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-18 col-md-offset-2\"></div>\r\n                        <div class=\"col-md-4 text-right\">\r\n                            {this.state.AddDrivingLicenceButton}\r\n                            {this.state.AddEntryExitCardButton}\r\n                            {this.state.AddIdentityCardButton}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ol class=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {this.state.DrivingLicenceListItem}\r\n                    {this.state.EntryExitCardListItem}\r\n                    {this.state.IdentityCardListItem}\r\n                </ol>\r\n            </section>         \r\n        );\r\n    }\r\n};\r\n\r\nexport default DocumentsList;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport ProfilePhoto from \"./ProfilePhoto\";\r\nimport WarningAlert from \"../../../../controls/WarningAlert\";\r\nimport DocumentsList from \"./documents/DocumentsList.js\";\r\n\r\nclass Profile extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            Username: \"\",\r\n            Password: \"\",\r\n            Email: \"\",\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\",\r\n\r\n            WarningAlert: null,\r\n            Errors: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.userToken) {\r\n            const decoded = jwt_decode(localStorage.userToken);\r\n\r\n            this.setState({\r\n                Username: decoded.Username,\r\n                Password: decoded.Password,\r\n                Email: decoded.Email,\r\n                FirstName: decoded.FirstName,\r\n                LastName: decoded.LastName,\r\n                DateOfBirth: decoded.DateOfBirth,\r\n                Gender: decoded.Gender,\r\n                Address: decoded.Address,\r\n                PhoneNumber: decoded.PhoneNumber,\r\n                Nationality: decoded.Nationality,\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                Username: \"\",\r\n                Password: \"\",\r\n                Email: \"\",\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                Address: \"\",\r\n                PhoneNumber: \"\",\r\n                Gender: \"\",\r\n                Nationality: \"\",\r\n                DateOfBirth: \"\",\r\n            });\r\n        }\r\n    }\r\n\r\n    onImageUploaded = message => {\r\n        if (message) {\r\n            this.setState({\r\n                WarningAlert: (<WarningAlert Message={message} OnClose={this.onImageUploaded} />)\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                WarningAlert: null\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.WarningAlert}\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group\" style={{ marginBottom: \"5px\", }}>\r\n                                    <ProfilePhoto OnImageUploaded={this.onImageUploaded} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                    {this.state.FirstName + \" \" + this.state.LastName}\r\n                                    </div>\r\n                                <div className=\"type-sh3\">\r\n                                    <span className=\"fas fa-car\"></span>   Driver\r\n                                    </div>\r\n                                <div>\r\n                                    <ol className=\"list-items theme-alt\">\r\n                                        <li className=\"list-items-row\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-2\">\r\n                                                    <strong><span className=\"fas fa-at\" style={{ color: \"#008575\" }}></span></strong>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <a style={{ textDecoration: \"none\", }}>Username:</a>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    {this.state.Username}\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li className=\"list-items-row\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-2\">\r\n                                                    <strong><span className=\"fas fa-envelope\" style={{ color: \"#008575\", }}></span></strong>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <a style={{ textDecoration: \"none\", }}>Email:</a>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    {this.state.Email}\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li className=\"list-items-row\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-2\">\r\n                                                    <strong><span className=\"fas fa-phone\" style={{ color: \"#008575\" }}></span></strong>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <a style={{ textDecoration: \"none\", }}>Phone Number:</a>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    {this.state.PhoneNumber}\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ol>\r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#00221E\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <div className=\"type-h3\" style={{ paddingTop: \"10px\", }}>\r\n                                    Details\r\n                                    </div>\r\n                                <ol className=\"list-items theme-alt\">\r\n                                    <li className=\"list-items-row\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-2\">\r\n                                                <strong><span className=\"fas fa-birthday-cake\" style={{ color: \"#008575\", }}></span></strong>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Date of Birth:</a>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                {this.state.DateOfBirth}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"list-items-row\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-2\">\r\n                                                {this.state.Gender === \"Male\" &&\r\n                                                    <strong><span className=\"fas fa-male\" style={{ color: \"#008575\", }}></span></strong>\r\n                                                }\r\n                                                {this.state.Gender === \"Female\" &&\r\n                                                    <strong><span className=\"fas fa-female\" style={{ color: \"#008575\", }}></span></strong>\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Gender:</a>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                {this.state.Gender}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"list-items-row\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-2\">\r\n                                                <strong><span className=\"fas fa-flag\" style={{ color: \"#008575\" }}></span></strong>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Nationality:</a>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                {this.state.Nationality}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"list-items-row\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-2\">\r\n                                                <strong><span className=\"fas fa-map-marker\" style={{ color: \"#008575\" }}></span></strong>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Address:</a>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                {this.state.Address}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <DocumentsList />\r\n                {this.state.AddDrivingLicenceDialog}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Profile;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { updateTruck } from \"../../DriverFunctions\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\n\r\nclass TruckSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            PlateNumber: \"\",\r\n            Owner: \"\",\r\n            ProductionYear: \"\",\r\n            Brand: \"\",\r\n            Model: \"\",\r\n            Type: \"\",\r\n            MaximumWeight: \"\",\r\n\r\n            ValidPlateNumber: true,\r\n            ValidOwner: true,\r\n            ValidProductionYear: true,\r\n            ValidBrand: true,\r\n            ValidModel: true,\r\n            ValidType: true,\r\n            ValidMaximumWeight: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                PlateNumber: \"\",\r\n                Owner: \"\",\r\n                ProductionYear: \"\",\r\n                Brand: \"\",\r\n                Model: \"\",\r\n                Type: \"\",\r\n                MaximumWeight: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.userToken) {\r\n            const truck = jwt_decode(localStorage.userToken).Truck;\r\n\r\n            this.setState({\r\n                PlateNumber: truck.PlateNumber,\r\n                Owner: truck.Owner,\r\n                ProductionYear: truck.ProductionYear,\r\n                Brand: truck.Brand,\r\n                Model: truck.Model,\r\n                Type: truck.Type,\r\n                MaximumWeight: truck.MaximumWeight\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                PlateNumber: \"\",\r\n                Owner: \"\",\r\n                ProductionYear: \"\",\r\n                Brand: \"\",\r\n                Model: \"\",\r\n                Type: \"\",\r\n                MaximumWeight: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidPlateNumber = this.state.ValidPlateNumber;\r\n        let ValidOwner = this.state.ValidOwner;\r\n        let ValidProductionYear = this.state.ValidProductionYear;\r\n        let ValidBrand = this.state.ValidBrand;\r\n        let ValidModel = this.state.ValidModel;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidMaximumWeight = this.state.MaximumWeight;\r\n\r\n        switch (field) {\r\n            case \"PlateNumber\":\r\n                ValidPlateNumber = ((value !== \"\") && (value >= 1 && value <= 999));\r\n                Errors.PlateNumber = ValidPlateNumber ? \"\" : \"Plate Number must be between 001 and 999.\";\r\n                break;\r\n            case \"Owner\":\r\n                ValidOwner = (value !== \"\");\r\n                Errors.Owner = ValidOwner ? \"\" : \"Owner is required.\";\r\n                break;\r\n            case \"ProductionYear\":\r\n                let currentYear = new Date().getFullYear();\r\n                ValidProductionYear = ((value !== \"\") && (value >= 2000 && value <= currentYear));\r\n                Errors.ProductionYear = ValidProductionYear ? \"\" : `Production Year must be between 2000 and ${currentYear}`;\r\n                break;\r\n            case \"Brand\":\r\n                ValidBrand = (value !== \"\");\r\n                Errors.Brand = ValidBrand ? \"\" : \"Brand is required.\";\r\n                break;\r\n            case \"Model\":\r\n                ValidModel = (value !== \"\");\r\n                Errors.Model = ValidModel ? \"\" : \"Model is required.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required\";\r\n                break;\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n\r\n                if (Errors.MaximumWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidMaximumWeight = (value >= 700);\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum weight must be greater than 699.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPlateNumber: ValidPlateNumber,\r\n            ValidOwner: ValidOwner,\r\n            ValidProductionYear: ValidProductionYear,\r\n            ValidBrand: ValidBrand,\r\n            ValidModel: ValidModel,\r\n            ValidType: ValidType,\r\n            ValidMaximumWeight: ValidMaximumWeight\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidPlateNumber &&\r\n                    this.state.ValidOwner &&\r\n                    this.state.ValidProductionYear &&\r\n                    this.state.ValidBrand &&\r\n                    this.state.ValidModel &&\r\n                    this.state.ValidType &&\r\n                    this.state.MaximumWeight\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedTruck = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            PlateNumber: this.state.PlateNumber,\r\n            Owner: this.state.Owner,\r\n            ProductionYear: this.state.ProductionYear,\r\n            Brand: this.state.Brand,\r\n            Model: this.state.Model,\r\n            Type: this.state.Type,\r\n            MaximumWeight: this.state.MaximumWeight\r\n        };\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateTruck(updatedTruck).then(response => {\r\n            if (response.Message === \"Truck is updated in database.\") {\r\n                localStorage.setItem(\"userToken\", response.Token);\r\n\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n\r\n                this.props.OnTruckSettingsUpdated();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div class=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Truck Settings</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div class=\"entity-list entity-list-expandable\">\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-list-ol\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"number\" name=\"PlateNumber\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.PlateNumber} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Plate Number</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"PlateNumber\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-user\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" name=\"Owner\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Owner} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Owner</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"Owner\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-calendar-day\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"number\" name=\"ProductionYear\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.ProductionYear} onChange={this.onChange} placeholder=\"XXXX\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Production Year</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"ProductionYear\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-copyright\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" name=\"Brand\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Brand} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Brand</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"Brand\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-list-ol\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" name=\"Model\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Model} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Truck Model</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"Model\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-cog\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" name=\"Type\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Type} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Truck Type</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"Type\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-weight\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"number\" name=\"MaximumWeight\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Maximum Weight (GVW)</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"MaximumWeight\"]}</div>\r\n                            </div>\r\n                        </div>                      \r\n                        <div class=\"entity-list-item active\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Save Changes?</div>\r\n                                <div class=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div class=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default TruckSettings;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles\";\r\nimport ImageUploader from \"../../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { addTrailer } from \"../../../DriverFunctions.js\";\r\n\r\nclass AddTrailerDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            MaximumWeight: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n            ImageCategory: \"Trailer-1\",\r\n            Type: \"\",\r\n\r\n            ValidMaximumWeight: false,\r\n            ValidPhotoURL: false,\r\n            ValidType: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                MaximumWeight: \"\",\r\n                PhotoURL: \"\",\r\n                Type: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onInvalidImageSelected = this.onInvalidImageSelected.bind(this);\r\n        this.onImageUploaded = this.onImageUploaded.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.userToken) {\r\n            const trailers = jwt_decode(localStorage.userToken).Truck.Trailers;\r\n\r\n            if (trailers) {\r\n                this.setState({\r\n                    ImageCategory: `Trailer-${trailers.length + 1}`\r\n                });\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ImageCategory: \"Trailer-1\"\r\n                });\r\n            }         \r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidMaximumWeight = this.state.ValidMaximumWeight;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n        let ValidType = this.state.ValidType;\r\n\r\n        switch (field) {\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n\r\n                if (Errors.MaximumWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidMaximumWeight = (value >= 700);\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum weight must be greater than 699.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidMaximumWeight: ValidMaximumWeight,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n            ValidType: ValidType\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidMaximumWeight &&\r\n                        this.state.ValidPhotoURL &&\r\n                        this.state.ValidType\r\n                });\r\n        });\r\n    }\r\n\r\n    onInvalidImageSelected = () => {\r\n        this.validateField(\"PhotoURL\", null);\r\n    }\r\n\r\n    onImageUploaded = response => {\r\n        if (response.message === \"Image uploaded successfully.\") {\r\n            this.setState({\r\n                PhotoURL: response.imageUrl\r\n            });\r\n\r\n            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n        }\r\n        else {\r\n            this.validateField(\"PhotoURL\", null);\r\n        }\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newTrailer = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            MaximumWeight: this.state.MaximumWeight,\r\n            PhotoURL: this.state.PhotoURL,\r\n            Type: this.state.Type\r\n        }\r\n\r\n        console.log(\"Going to add the trailer.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addTrailer(newTrailer).then(response => {\r\n            if (response.Message === \"Trailer is added.\") {\r\n                localStorage.setItem(\"userToken\", response.Token);\r\n                this.props.OnTrailerAdded(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div class=\"modal\" id=\"add-trailer-dialog\"\r\n                    tabindex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div class=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div class=\"type-h3\">New Trailer</div>\r\n                                    </div>\r\n                                    <div class=\"modal-body\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <ImageUploader Source={this.state.PhotoURL} Height=\"220px\"\r\n                                                        Width=\"220px\" OnImageUploaded={this.onImageUploaded}\r\n                                                        OnInvalidImageSelected={this.onInvalidImageSelected} ImageCategory={this.state.ImageCategory} />\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"text-danger\">{this.state.Errors[\"PhotoURL\"]}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Maximum Weight (GVW)</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"MaximumWeight\" class=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors[\"MaximumWeight\"]}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Trailer Type</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" class=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"modal-footer\">\r\n                                        <button class=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnAddTrailerDialogRemove}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddTrailerDialog;","import React, { Component } from \"react\";\r\nimport AddTrailerDialog from \"./AddTrailerDialog\";\r\n\r\nclass AddTrailer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddTrailerDialog: null\r\n        };\r\n\r\n        this.onAddTrailerDialogCreate = this.onAddTrailerDialogCreate.bind(this);\r\n        this.onAddTrailerDialogRemove = this.onAddTrailerDialogRemove.bind(this);\r\n        this.onTrailerAdded = this.onTrailerAdded.bind(this);\r\n    }\r\n\r\n    onAddTrailerDialogCreate = () => {\r\n        this.setState({\r\n            AddTrailerDialog: (<AddTrailerDialog OnAddTrailerDialogRemove={this.onAddTruckDialogRemove} OnTrailerAdded={this.onTrailerAdded} />),\r\n        });\r\n    }\r\n\r\n    onAddTrailerDialogRemove = () => {\r\n        this.setState({\r\n            AddTrailerDialog: null,\r\n        });\r\n    }\r\n\r\n    onTrailerAdded = cancelButton => {\r\n        cancelButton.click();\r\n        this.props.OnTruckUpdated();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"jumbotron theme-dark\">\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-24 text-center\">\r\n                            <img src=\"./images/trailer.png\" alt=\"trailer.png\" height=\"50\" />\r\n                            <h3 style={{paddingTop:\"5px\"}}>Trailers</h3>\r\n                            <div class=\"type-sh3\">Your Truck is All Set Up</div>\r\n                            <div class=\"col-md-12 col-md-offset-6\">\r\n                                <div class=\"type-p3\">\r\n                                    RECOMMENDED: Since your truck is all set up, you're good to go for adding up to TWO trailers to it.\r\n                                </div>\r\n                                <div class=\"btn-group\">\r\n                                    <button type=\"button\" class=\"btn btn-secondary\" data-toggle=\"modal\" data-target=\"#add-trailer-dialog\"\r\n                                        onMouseDown={this.onAddTrailerDialogCreate}>Add Trailer</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.AddTrailerDialog}\r\n            </div>           \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddTrailer;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles\";\r\nimport ImageUploader from \"../../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { updateTrailer } from \"../../../DriverFunctions.js\";\r\n\r\nclass EditTrailerDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            MaximumWeight: this.props.Trailer.MaximumWeight,\r\n            PhotoURL: this.props.Trailer.PhotoURL,\r\n            Type: this.props.Trailer.Type,\r\n            ImageCategory: `Trailer-${this.props.dialogID + 1}`,\r\n\r\n            ValidMaximumWeight: true,\r\n            ValidPhotoURL: true,\r\n            ValidType: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                MaximumWeight: \"\",\r\n                PhotoURL: \"\",\r\n                Type: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onInvalidImageSelected = this.onInvalidImageSelected.bind(this);\r\n        this.onImageUploaded = this.onImageUploaded.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidMaximumWeight = this.state.ValidMaximumWeight;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n        let ValidType = this.state.ValidType;\r\n\r\n        switch (field) {\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n\r\n                if (Errors.MaximumWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidMaximumWeight = (value >= 700);\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum weight must be greater than 699.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidMaximumWeight: ValidMaximumWeight,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n            ValidType: ValidType\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidMaximumWeight &&\r\n                        this.state.ValidPhotoURL &&\r\n                        this.state.ValidType\r\n                });\r\n        });\r\n    }\r\n\r\n    onInvalidImageSelected = () => {\r\n        this.validateField(\"PhotoURL\", null);\r\n    }\r\n\r\n    onImageUploaded = response => {\r\n        if (response.message === \"Image uploaded successfully.\") {\r\n            this.setState({\r\n                PhotoURL: response.imageUrl\r\n            });\r\n\r\n            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n        }\r\n        else {\r\n            this.validateField(\"PhotoURL\", null);\r\n        }\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedTrailer = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            TrailerID: this.props.Trailer.TrailerID,\r\n            MaximumWeight: this.state.MaximumWeight,\r\n            PhotoURL: this.state.PhotoURL,\r\n            Type: this.state.Type\r\n        }\r\n\r\n        console.log(updatedTrailer);\r\n\r\n        console.log(\"Updating trailer now.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateTrailer(updatedTrailer).then(response => {\r\n            if (response.Message === \"Trailer is updated.\") {\r\n                localStorage.setItem(\"userToken\", response.Token);\r\n                this.props.OnTrailerUpdated(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div class=\"modal\" id={`edit-trailer-dialog${this.props.dialogID}`}\r\n                    tabindex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div class=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div class=\"type-h3\">Edit Trailer</div>\r\n                                    </div>\r\n                                    <div class=\"modal-body\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <ImageUploader Source={this.state.PhotoURL} Height=\"220px\"\r\n                                                        Width=\"220px\" OnImageUploaded={this.onImageUploaded}\r\n                                                        OnInvalidImageSelected={this.onInvalidImageSelected} ImageCategory={this.state.ImageCategory} />\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"text-danger\">{this.state.Errors[\"PhotoURL\"]}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Maximum Weight (GVW)</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"MaximumWeight\" class=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors[\"MaximumWeight\"]}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Trailer Type</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" class=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"modal-footer\">\r\n                                        <button class=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnEditTrailerDialogRemove}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default EditTrailerDialog;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { deleteTrailer } from \"../../../DriverFunctions.js\";\r\nimport EditTrailerDialog from \"./EditTrailerDialog.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\n\r\nclass TrailersList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Trailers: [],\r\n            EditTrailerDialogs: [],\r\n            Preloader: null,\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async index => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedTrailer = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            TrailerID: this.state.Trailers[index].TrailerID \r\n        };\r\n\r\n        console.log(`Going to delete Trailers[${index}]`);\r\n\r\n        await deleteTrailer(discardedTrailer)\r\n            .then(response => {\r\n                if (response.Message === \"Trailer is deleted.\") {\r\n                    localStorage.setItem(\"userToken\", response.Token);\r\n                    this.props.OnTrailersUpdated();\r\n                }\r\n\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.userToken) {\r\n            const trailers = jwt_decode(localStorage.userToken).Truck.Trailers;\r\n            console.log(trailers);\r\n\r\n            this.setState({\r\n                Trailers: trailers\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                Trailers: []\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div class=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Trailers</div>\r\n                <ol class=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {this.state.Trailers.map((value, index) => {\r\n                        return <li class=\"list-items-row\">\r\n                            <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#${value.TrailerID}`}>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-2\">\r\n                                        <i class=\"glyph glyph-add\"></i>\r\n                                        <i class=\"glyph glyph-remove\"></i>\r\n                                        <strong>{index + 1}</strong>\r\n                                    </div>\r\n                                    <div class=\"col-md-4\">\r\n                                        <img class=\"img-responsive visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                            src={value.PhotoURL} alt=\"trailer.png\" data-source-index=\"2\" style={{\r\n                                                overflow: \"hidden\",\r\n                                                border: \"5px solid #3A3A3C\",\r\n                                                margin: \"5px\"\r\n                                            }} />\r\n                                    </div>\r\n                                    <div class=\"col-md-6\">\r\n                                        <div>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Maximum Weight (GVM):</span> {value.MaximumWeight}\r\n                                        </div>\r\n                                        <div>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Trailer Type:</span> {value.Type}\r\n                                        </div>                                      \r\n                                    </div>\r\n                                    <div class=\"col-md-6\">\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"collapse\" id={value.TrailerID}>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-18 col-md-offset-2\">\r\n                                        <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block\"\r\n                                            src={value.PhotoURL} alt=\"trailer.png\" data-source-index=\"2\" style={{\r\n                                                overflow: \"hidden\",\r\n                                                border: \"5px solid #3A3A3C\",\r\n                                                margin: \"5px\"\r\n                                            }} />\r\n                                    </div>\r\n                                    <div class=\"col-md-4 text-right\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            class=\"btn btn-primary\"\r\n                                            data-toggle=\"modal\"\r\n                                            data-target={`#edit-trailer-dialog${index}`}\r\n                                            onMouseDown={() => {\r\n                                                let editTrailerDialogs = this.state.EditTrailerDialogs;\r\n\r\n                                                editTrailerDialogs[index] = (<EditTrailerDialog dialogID={index}\r\n                                                    Trailer={value} OnEditTrailerDialogRemove={() => {\r\n                                                        let editTrailerDialogs = this.state.EditTrailerDialogs\r\n                                                        editTrailerDialogs[index] = null;\r\n\r\n                                                        this.setState({\r\n                                                            EditTrailerDialogs: editTrailerDialogs,\r\n                                                        });\r\n\r\n                                                    }} OnTrailerUpdated={cancelButton => {\r\n                                                        cancelButton.click();\r\n                                                        this.props.OnTrailersUpdated();\r\n                                                    }} />);\r\n\r\n                                                this.setState({\r\n                                                    EditTrailerDialogs: editTrailerDialogs,\r\n                                                });\r\n                                            }}>\r\n                                            Edit\r\n                                            </button>\r\n                                        <button type=\"button\" class=\"btn btn-danger\" onClick={event => { this.onDelete(index); }}>Delete</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {this.state.EditTrailerDialogs[index]}\r\n                        </li>\r\n                    })}\r\n                </ol>\r\n                {this.state.Preloader}\r\n            </section>         \r\n        );\r\n    }\r\n};\r\n\r\nexport default TrailersList;","import React, { Component } from \"react\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader\";\r\nimport { updateTruckPhoto } from \"../../DriverFunctions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport TruckSettings from \"./TruckSettings\";\r\nimport AddTrailer from \"./trailers/AddTrailer\";\r\nimport TrailersList from \"./trailers/TrailersList\";\r\n\r\nclass Truck extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            PlateNumber: \"\",\r\n            Owner: \"\",\r\n            ProductionYear: \"\",\r\n            Brand: \"\",\r\n            Model: \"\",\r\n            Type: \"\",\r\n            MaximumWeight: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n            AddTrailer: null,\r\n            TrailersList: null,\r\n        };\r\n\r\n        this.onInvalidImageSelected = this.onInvalidImageSelected.bind(this);\r\n        this.onImageUploaded = this.onImageUploaded.bind(this);\r\n        this.onTrailersUpdated = this.onTrailersUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.userToken) {\r\n            const truck = jwt_decode(localStorage.userToken).Truck;\r\n\r\n            this.setState({\r\n                PlateNumber: truck.PlateNumber,\r\n                Owner: truck.Owner,\r\n                ProductionYear: truck.ProductionYear,\r\n                Brand: truck.Brand,\r\n                Model: truck.Model,\r\n                Type: truck.Type,\r\n                MaximumWeight: truck.MaximumWeight,\r\n                PhotoURL: truck.PhotoURL,\r\n            });\r\n\r\n            if (truck.Trailers.length < 2) {\r\n                this.setState({\r\n                    AddTrailer: <AddTrailer OnTruckUpdated={this.props.OnTruckUpdated} />\r\n                });\r\n            }\r\n\r\n            if (truck.Trailers.length > 0) {\r\n                this.setState({\r\n                    TrailersList: <TrailersList OnTrailersUpdated={this.onTrailersUpdated} />\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.setState({\r\n                PlateNumber: \"\",\r\n                Owner: \"\",\r\n                ProductionYear: \"\",\r\n                Brand: \"\",\r\n                Model: \"\",\r\n                Type: \"\",\r\n                MaximumWeight: \"\",\r\n                PhotoURL: \"./images/default_image.png\",\r\n                AddTrailer: null,\r\n                TrailersList: null,\r\n            });\r\n        }\r\n    }\r\n\r\n    onInvalidImageSelected = () => {\r\n        // Nothing to do here.\r\n    }\r\n\r\n    onImageUploaded = async response => {\r\n        if (response.message === \"Image uploaded successfully.\") {\r\n            const updatedTruck = {\r\n                Token: localStorage.getItem(\"userToken\"),\r\n                PhotoURL: response.imageUrl\r\n            }\r\n\r\n            await updateTruckPhoto(updatedTruck).then(response => {\r\n                if (response.Message === \"Truck photo updated.\") {\r\n                    localStorage.setItem(\"userToken\", response.Token);\r\n                    this.props.OnTruckUpdated();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onTrailersUpdated = () => {\r\n        const trailers = jwt_decode(localStorage.userToken).Truck.Trailers;\r\n\r\n        this.setState({\r\n            AddTrailer: null,\r\n            TrailersList: null,\r\n        });\r\n\r\n        if (trailers.length < 2) {\r\n            this.setState({\r\n                AddTrailer: <AddTrailer OnTruckUpdated={this.props.OnTruckUpdated} />\r\n            });\r\n        }\r\n\r\n        if (trailers.length > 0) {\r\n            this.setState({\r\n                TrailersList: <TrailersList OnTrailerDeleted={this.onTrailerDeleted} />\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"jumbotron theme-default\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <ImageUploader Source={this.state.PhotoURL} Height=\"200px\"\r\n                                    Width=\"200px\" OnImageUploaded={this.onImageUploaded} OnInvalidImageSelected={this.onInvalidImageSelected} ImageCategory=\"Truck\" />\r\n                            </div>\r\n                            <div class=\"col-md-18\">\r\n                                <div class=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                    {`${this.state.Brand} ${this.state.Model}`}\r\n                                </div>\r\n                                <div class=\"type-sh3\">\r\n                                    <span class=\"fas fa-truck\"></span>   {this.state.Type}\r\n                                    </div>\r\n                                <div>\r\n                                    <ol class=\"list-items theme-alt\">\r\n                                        <li class=\"list-items-row\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-md-2\">\r\n                                                    <strong><span class=\"fas fa-list-ol\" style={{ color: \"#008575\" }}></span></strong>\r\n                                                </div>\r\n                                                <div class=\"col-md-6\">\r\n                                                    <a href=\"\" style={{ textDecoration: \"none\", }}>Plate Number:</a>\r\n                                                </div>\r\n                                                <div class=\"col-md-6\">\r\n                                                    {this.state.PlateNumber}\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li class=\"list-items-row\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-md-2\">\r\n                                                    <strong><span class=\"fas fa-calendar-day\" style={{ color: \"#008575\", }}></span></strong>\r\n                                                </div>\r\n                                                <div class=\"col-md-6\">\r\n                                                    <a style={{ textDecoration: \"none\", }}>Production Year:</a>\r\n                                                </div>\r\n                                                <div class=\"col-md-6\">\r\n                                                    {this.state.ProductionYear}\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li class=\"list-items-row\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-md-2\">\r\n                                                    <strong><span class=\"fas fa-weight\" style={{ color: \"#008575\" }}></span></strong>\r\n                                                </div>\r\n                                                <div class=\"col-md-6\">\r\n                                                    <a style={{ textDecoration: \"none\", }}>Maximum Weight:</a>\r\n                                                </div>\r\n                                                <div class=\"col-md-6\">\r\n                                                    {`${this.state.MaximumWeight} GVW`}\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ol>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <TruckSettings OnTruckSettingsUpdated={this.props.OnTruckUpdated} />\r\n                {this.state.AddTrailer}\r\n                {this.state.TrailersList}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Truck;","import React, { Component } from \"react\";\r\n\r\nclass MessageBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Show: this.props.Show,\r\n            Message: this.props.Message,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"modal in\" style={this.state.Show ? { display: \"block\", paddingRight: \"17px\", } : { display: \"none\", paddingRight: \"17px\", }}>\r\n                <div class=\"modal-dialog\">\r\n                    <div class=\"modal-content animated fadeIn\">\r\n                        <div class=\"modal-body text-justify\">{this.state.Message}</div>\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" class=\"btn btn-info\" onClick={e => { this.setState({ Show: false }); }}>Ok</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default MessageBox;","import React, { Component } from \"react\";\r\nimport { addTruck } from \"../../DriverFunctions\";\r\nimport MessageBox from \"../../../../controls/MessageBox\";\r\nimport { Required } from \"../../../../styles/MiscellaneousStyles\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader\";\r\n\r\nclass AddTruck extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PlateNumber: \"\",\r\n            Owner: \"\",\r\n            ProductionYear: \"\",\r\n            Brand: \"\",\r\n            Model: \"\",\r\n            Type: \"\",\r\n            MaximumWeight: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidPlateNumber: false,\r\n            ValidOwner: false,\r\n            ValidProductionYear: false,\r\n            ValidBrand: false,\r\n            ValidModel: false,\r\n            ValidType: false,\r\n            ValidMaximumWeight: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            MessageBox: null,\r\n\r\n            Errors: {\r\n                PlateNumber: \"\",\r\n                Owner: \"\",\r\n                ProductionYear: \"\",\r\n                Brand: \"\",\r\n                Model: \"\",\r\n                Type: \"\",\r\n                MaximumWeight: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onInvalidImageSelected = this.onInvalidImageSelected.bind(this);\r\n        this.onImageUploaded = this.onImageUploaded.bind(this);\r\n    }\r\n\r\n    onChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidPlateNumber = this.state.ValidPlateNumber;\r\n        let ValidOwner = this.state.ValidOwner;\r\n        let ValidProductionYear = this.state.ValidProductionYear;\r\n        let ValidBrand = this.state.ValidBrand;\r\n        let ValidModel = this.state.ValidModel;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidMaximumWeight = this.state.ValidMaximumWeight;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"PlateNumber\":\r\n                ValidPlateNumber = (value !== \"\");\r\n                Errors.PlateNumber = ValidPlateNumber ? \"\" : \"Plate number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPlateNumber = (value >= 100 && value <= 999);\r\n                Errors.PlateNumber = ValidPlateNumber ? \"\" : \"Plate number must be 3-digits long.\";\r\n                break;\r\n            case \"Owner\":\r\n                ValidOwner = (value !== \"\");\r\n                Errors.Owner = ValidOwner ? \"\" : \"Owner is required.\";\r\n                break;\r\n            case \"ProductionYear\":\r\n                let currentYear = new Date().getFullYear();\r\n                ValidProductionYear = ((value !== \"\") && (value >= 2000 && value <= currentYear));\r\n                Errors.ProductionYear = ValidProductionYear ? \"\" : `Production Year must be between 2000 and ${currentYear}`;\r\n                break;\r\n            case \"Brand\":\r\n                ValidBrand = (value !== \"\");\r\n                Errors.Brand = ValidBrand ? \"\" : \"Brand is required.\";\r\n                break;\r\n            case \"Model\":\r\n                ValidModel = (value !== \"\");\r\n                Errors.Model = ValidModel ? \"\" : \"Model is required.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required\";\r\n                break;\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n\r\n                if (Errors.MaximumWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidMaximumWeight = (value >= 700);\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum weight must be greater than 699.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPlateNumber: ValidPlateNumber,\r\n            ValidOwner: ValidOwner,\r\n            ValidProductionYear: ValidProductionYear,\r\n            ValidBrand: ValidBrand,\r\n            ValidModel: ValidModel,\r\n            ValidType: ValidType,\r\n            ValidMaximumWeight: ValidMaximumWeight,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidPlateNumber &&\r\n                        this.state.ValidOwner &&\r\n                        this.state.ValidProductionYear &&\r\n                        this.state.ValidBrand &&\r\n                        this.state.ValidModel &&\r\n                        this.state.ValidType &&\r\n                        this.state.ValidMaximumWeight &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onInvalidImageSelected = () => {\r\n        this.validateField(\"PhotoURL\", null);\r\n    }\r\n\r\n    onImageUploaded = response => {\r\n        if (response.message === \"Image uploaded successfully.\") {\r\n            this.setState({\r\n                PhotoURL: response.imageUrl\r\n            });\r\n\r\n            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n        }\r\n        else {\r\n            this.validateField(\"PhotoURL\", null);\r\n        }\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newTruck = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            PlateNumber: this.state.PlateNumber,\r\n            Owner: this.state.Owner,\r\n            ProductionYear: this.state.ProductionYear,\r\n            Brand: this.state.Brand,\r\n            Model: this.state.Model,\r\n            Type: this.state.Type,\r\n            MaximumWeight: this.state.MaximumWeight,\r\n            PhotoURL: this.state.PhotoURL\r\n        }\r\n\r\n        await addTruck(newTruck)\r\n            .then(response => {\r\n                if (response.Message === \"Driver's truck is added.\") {\r\n                    localStorage.setItem(\"userToken\", response.Token);\r\n                    this.props.OnAddTruckDialogRemove();\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        MessageBox: (<MessageBox Message=\"Truck Not Added.\" Show={true} />),\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"modal\" id=\"add-truck-dialog\"\r\n                tabindex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div class=\"modal-dialog\">\r\n                    <div class=\"modal-content\">\r\n                        <p>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"modal-header\">\r\n                                    <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                    <div class=\"type-h3\">New Truck</div>\r\n                                    <div class=\"type-sh3\">These detials will be displayed on your profile.</div>\r\n                                </div>\r\n                                <div class=\"modal-body\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <ImageUploader Source={this.state.PhotoURL} Height=\"220px\"\r\n                                                    Width=\"220px\" OnImageUploaded={this.onImageUploaded} OnInvalidImageSelected={this.onInvalidImageSelected} ImageCategory=\"Truck\" />\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"text-danger\">{this.state.Errors[\"PhotoURL\"]}</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-12\">                                          \r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"control-label\">Plate Number</label>\r\n                                                <span class=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"PlateNumber\" class=\"form-control\" autocomplete=\"off\"\r\n                                                    value={this.state.PlateNumber} onChange={this.onChange} />\r\n                                                <span class=\"text-danger\">{this.state.Errors[\"PlateNumber\"]}</span>\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"control-label\">Owner</label>\r\n                                                <span class=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Owner\" class=\"form-control\" autocomplete=\"off\"\r\n                                                    value={this.state.Owner} onChange={this.onChange} />\r\n                                                <span class=\"text-danger\">{this.state.Errors[\"Owner\"]}</span>\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"control-label\">Production Year</label>\r\n                                                <span class=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"ProductionYear\" class=\"form-control\" autocomplete=\"off\"\r\n                                                    value={this.state.ProductionYear} onChange={this.onChange} placeholder=\"XXXX\"/>\r\n                                                <span class=\"text-danger\">{this.state.Errors[\"ProductionYear\"]}</span>\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"control-label\">Brand</label>\r\n                                                <span class=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Brand\" class=\"form-control\" autocomplete=\"off\"\r\n                                                    value={this.state.Brand} onChange={this.onChange} />\r\n                                                <span class=\"text-danger\">{this.state.Errors[\"Brand\"]}</span>\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"control-label\">Truck Model</label>\r\n                                                <span class=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Model\" class=\"form-control\" autocomplete=\"off\"\r\n                                                    value={this.state.Model} onChange={this.onChange} />\r\n                                                <span class=\"text-danger\">{this.state.Errors[\"Model\"]}</span>\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"control-label\">Truck Type</label>\r\n                                                <span class=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Type\" class=\"form-control\" autocomplete=\"off\"\r\n                                                    value={this.state.Type} onChange={this.onChange} />\r\n                                                <span class=\"text-danger\">{this.state.Errors[\"Type\"]}</span>\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"control-label\">Maximum Weight (GVW)</label>\r\n                                                <span class=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"MaximumWeight\" class=\"form-control\" autocomplete=\"off\"\r\n                                                    value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                                <span class=\"text-danger\">{this.state.Errors[\"MaximumWeight\"]}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"modal-footer\">\r\n                                    <button class=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnAddTruckDialogRemove}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Add\" class=\"btn btn-primary\"  disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                {this.state.MessageBox}\r\n            </div>             \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddTruck;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport AddTruck from \"./AddTruck\";\r\n\r\nclass NoTruck extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddTruck: null,\r\n        };\r\n\r\n        this.onAddTruckDialogCreate = this.onAddTruckDialogCreate.bind(this);\r\n        this.onAddTruckDialogRemove = this.onAddTruckDialogRemove.bind(this);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const driver = jwt_decode(localStorage.userToken);\r\n\r\n        if (driver.Truck) {\r\n            this.props.OnTruckUpdated();\r\n        }\r\n    }\r\n\r\n    onAddTruckDialogRemove = () => {\r\n        this.setState({\r\n            AddTruck: null,\r\n        });        \r\n    }\r\n\r\n    onAddTruckDialogCreate = () => {\r\n        this.setState({\r\n            AddTruck: (<AddTruck Show={true} OnAddTruckDialogRemove={this.onAddTruckDialogRemove} />),\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\" alt=\"add_truck.png\" src=\"./images/add_truck.png\"\r\n                                    data-source-index=\"2\" />\r\n                            </div>\r\n                            <div class=\"col-md-12 col-md-pull-12\">\r\n                                <div class=\"type-h3\">Truck Management</div>\r\n                                <div class=\"type-sh3\">You have not added any truck yet.</div>\r\n                                <p>Adding your truck will let the Traders or Brokers see details about your truck. Valid and complete details of your truck make more chances for you to receive job requests.</p>\r\n                                <div class=\"btn-group\">\r\n                                    <button type=\"button\" class=\"btn btn-primary btn-lg\" data-toggle=\"modal\" data-target=\"#add-truck-dialog\"\r\n                                        onMouseDown={this.onAddTruckDialogCreate}>Add Now</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.AddTruck}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default NoTruck;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport Truck from \"./Truck\";\r\nimport NoTruck from \"./NoTruck\";\r\n\r\nclass Trucks extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Truck: <NoTruck OnTruckUpdated={this.onTruckUpdated} />\r\n        };\r\n\r\n        this.onTruckUpdated = this.onTruckUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.userToken) {\r\n            const driver = jwt_decode(localStorage.userToken);\r\n\r\n            if (driver.Truck) {\r\n                this.setState({\r\n                    Truck: <Truck OnTruckUpdated={this.onTruckUpdated} />\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    onTruckUpdated = () => {\r\n        const driver = jwt_decode(localStorage.userToken);\r\n\r\n        if (driver.Truck) {\r\n            this.setState({\r\n                Truck: null\r\n            });\r\n            this.setState({\r\n                Truck: <Truck OnTruckUpdated={this.onTruckUpdated} />\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                Truck: null\r\n            });\r\n            this.setState({\r\n                Truck: <NoTruck OnTruckUpdated={this.onTruckUpdated} />\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.Truck}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Trucks;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { addPermitLicence } from \"../../DriverFunctions.js\";\r\n\r\nclass AddPermitLicenceDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PermitNumber: \"\",\r\n            ExpiryDate: new Date(),\r\n            PhotoURL: \"./images/default_image.png\",\r\n            Code: \"\",\r\n            Place: \"\",\r\n\r\n            ValidPermitNumber: false,\r\n            ValidExpiryDate: false,\r\n            ValidPhotoURL: false,\r\n            ValidCode: false,\r\n            ValidPlace: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                PermitNumber: \"\",\r\n                ExpiryDate: \"\",\r\n                PhotoURL: \"\",\r\n                Code: \"\",\r\n                Place: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidPermitNumber = this.state.ValidPermitNumber;\r\n        let ValidExpiryDate = this.state.ValidExpiryDate;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n        let ValidCode = this.state.ValidCode;\r\n        let ValidPlace = this.state.ValidPlace;\r\n\r\n        switch (field) {\r\n            case \"PermitNumber\":\r\n                ValidPermitNumber = (value !== \"\");\r\n                Errors.PermitNumber = ValidPermitNumber ? \"\" : \"Permit number is required.\";\r\n\r\n                if (Errors.PermitNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPermitNumber = (value !== \"\");\r\n                Errors.PermitNumber = ValidPermitNumber ? \"\" : \"Permit number is required.\";\r\n\r\n                break;\r\n            case \"ExpiryDate\":\r\n                ValidExpiryDate = (new Date(value).getTime() >= new Date().getTime());\r\n                Errors.ExpiryDate = ValidExpiryDate ? \"\" : \"Expiry Date must be later than yesterday.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            case \"Code\":\r\n                ValidCode = (value !== \"\");\r\n                Errors.Code = ValidCode ? \"\" : \"Permit code is required.\";\r\n                break;\r\n            case \"Place\":\r\n                ValidPlace = (value !== \"\");\r\n                Errors.Place = ValidPlace ? \"\" : \"Permit place is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPermitNumber: ValidPermitNumber,\r\n            ValidExpiryDate: ValidExpiryDate,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n            ValidCode: ValidCode,\r\n            ValidPlace: ValidPlace,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidPermitNumber &&\r\n                        this.state.ValidExpiryDate &&\r\n                        this.state.ValidPhotoURL &&\r\n                        this.state.ValidCode &&\r\n                        this.state.ValidPlace,\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newPermitLicence = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            PermitNumber: this.state.PermitNumber,\r\n            ExpiryDate: this.state.ExpiryDate,\r\n            PhotoURL: this.state.PhotoURL,\r\n            Code: this.state.Code,\r\n            Place: this.state.Place\r\n        }\r\n\r\n        console.log(\"Going to add Permit Licence.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addPermitLicence(newPermitLicence).then(response => {\r\n            if (response.Message === \"Permit Licence is added.\") {\r\n                localStorage.setItem(\"userToken\", response.Token);\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section class=\"text-left\">\r\n                <div class=\"modal\" id=\"add-permit-licence-dialog\"\r\n                    tabindex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div class=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div class=\"type-h3\">Add Permit Licence</div>\r\n                                    </div>\r\n                                    <div class=\"modal-body\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }} />\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Permit Number</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"PermitNumber\" class=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.PermitNumber} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.PermitNumber}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Expiry Date</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"ExpiryDate\" class=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ExpiryDate} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.ExpiryDate}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Permit Code</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Code\" class=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Code} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.Code}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Permit Place</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Place\" class=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Place} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.Place}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"modal-footer\">\r\n                                        <button class=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddPermitLicenceDialog;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../styles/MiscellaneousStyles\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { updatePermitLicence } from \"../../DriverFunctions.js\";\r\n\r\nclass EditPermitLicenceDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PermitNumber: this.props.PermitLicence.PermitNumber,\r\n            ExpiryDate: this.props.PermitLicence.ExpiryDate,\r\n            PhotoURL: this.props.PermitLicence.PhotoURL,\r\n            Code: this.props.PermitLicence.Code,\r\n            Place: this.props.PermitLicence.Place,\r\n\r\n            ValidPermitNumber: true,\r\n            ValidExpiryDate: true,\r\n            ValidPhotoURL: true,\r\n            ValidCode: true,\r\n            ValidPlace: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                PermitNumber: \"\",\r\n                ExpiryDate: \"\",\r\n                PhotoURL: \"\",\r\n                Code: \"\",\r\n                Place: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidPermitNumber = this.state.ValidPermitNumber;\r\n        let ValidExpiryDate = this.state.ValidExpiryDate;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n        let ValidCode = this.state.ValidCode;\r\n        let ValidPlace = this.state.ValidPlace;\r\n\r\n        switch (field) {\r\n            case \"PermitNumber\":\r\n                ValidPermitNumber = (value !== \"\");\r\n                Errors.PermitNumber = ValidPermitNumber ? \"\" : \"Permit number is required.\";\r\n                break;\r\n            case \"ExpiryDate\":\r\n                ValidExpiryDate = (new Date(value).getTime() >= new Date().getTime());\r\n                Errors.ExpiryDate = ValidExpiryDate ? \"\" : \"Expiry Date must be later than yesterday.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            case \"Code\":\r\n                ValidCode = (value !== \"\");\r\n                Errors.Code = ValidCode ? \"\" : \"Permit code is required.\";\r\n                break;\r\n            case \"Place\":\r\n                ValidPlace = (value !== \"\");\r\n                Errors.Place = ValidPlace ? \"\" : \"Permit place is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPermitNumber: ValidPermitNumber,\r\n            ValidExpiryDate: ValidExpiryDate,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n            ValidCode: ValidCode,\r\n            ValidPlace: ValidPlace,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidPermitNumber &&\r\n                    this.state.ValidExpiryDate &&\r\n                    this.state.ValidPhotoURL &&\r\n                    this.state.ValidCode &&\r\n                    this.state.ValidPlace,\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedPermitLicence = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            PermitLicenceID: this.props.PermitLicence.PermitLicenceID,\r\n            PermitNumber: this.state.PermitNumber,\r\n            ExpiryDate: this.state.ExpiryDate,\r\n            PhotoURL: this.state.PhotoURL,\r\n            Code: this.state.Code,\r\n            Place: this.state.Place\r\n        }\r\n\r\n        console.log(\"Going to update Permit Licence.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updatePermitLicence(updatedPermitLicence).then(response => {\r\n            if (response.Message === \"Permit Licence is updated.\") {\r\n                localStorage.setItem(\"userToken\", response.Token);\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section class=\"text-left\">\r\n                <div class=\"modal\" id={`edit-permit-dialog${this.props.DialogID}`}\r\n                    tabindex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div class=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div class=\"type-h3\">Add Permit Licence</div>\r\n                                    </div>\r\n                                    <div class=\"modal-body\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }} />\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Permit Number</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"PermitNumber\" class=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.PermitNumber} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.PermitNumber}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Expiry Date</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"ExpiryDate\" class=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ExpiryDate} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.ExpiryDate}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Permit Code</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Code\" class=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Code} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.Code}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Permit Place</label>\r\n                                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Place\" class=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Place} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.Place}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"modal-footer\">\r\n                                        <button class=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default EditPermitLicenceDialog;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { deletePermitLicence } from \"../../DriverFunctions.js\";\r\nimport EditPermitLicenceDialog from \"./EditPermitLicenceDialog.js\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\n\r\nclass PermitLicencesList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PermitLicences: [],\r\n            EditPermitLicenceDialogs: [],\r\n            SearchString: \"\",\r\n            Preloader: null,\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.getPermitLicences = this.getPermitLicences.bind(this);\r\n    }\r\n\r\n    onDelete = async index => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedPermitLicence = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            PermitLicenceID: this.state.PermitLicences[index].PermitLicenceID \r\n        };\r\n\r\n        console.log(`Going to delete PermitLicences[${index}]`);\r\n\r\n        await deletePermitLicence(discardedPermitLicence)\r\n            .then(response => {\r\n                if (response.Message === \"Permit Licence is deleted.\") {\r\n                    localStorage.setItem(\"userToken\", response.Token);\r\n                    this.props.OnPermitLicencesUpdated();\r\n                }\r\n\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPermitLicences();\r\n    }\r\n\r\n    getPermitLicences = () => {\r\n        if (localStorage.userToken) {\r\n            const permitLicences = jwt_decode(localStorage.userToken).PermitLicences;\r\n\r\n            this.setState({\r\n                PermitLicences: permitLicences\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                PermitLicences: []\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.SearchString === \"\") {\r\n            this.getPermitLicences();\r\n            return;\r\n        }\r\n\r\n        const filteredPermitLicences = [];\r\n\r\n        for (var i = 0; i < this.state.PermitLicences.length; i++) {\r\n            if (this.state.PermitLicences[i].Place === this.state.SearchString) {\r\n                filteredPermitLicences[i] = this.state.PermitLicences[i];\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            PermitLicences: filteredPermitLicences\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div class=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Permit Licences</div>\r\n                <nav class=\"navbar navbar-default\">\r\n                    <div class=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                        <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                            <form noValidate onSubmit={this.onSearch} class=\"navbar-form navbar-right\" role=\"search\">\r\n                                <div class=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                    <div class=\"form-group\">\r\n                                        <input type=\"search\" name=\"SearchString\" class=\"form-control\" placeholder=\"Search by Permit Place\"\r\n                                            style={{ maxWidth: \"500px\", width: \"100%\" }} autoComplete=\"off\"\r\n                                            value={this.state.SearchString} onChange={this.onChange} />\r\n                                    </div>\r\n                                    <button type=\"submit\" class=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                <ol class=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {this.state.PermitLicences.map((value, index) => {\r\n                        return <li class=\"list-items-row\">\r\n                            <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#${value.PermitLicenceID}`}>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-2\">\r\n                                        <i class=\"glyph glyph-add\"></i>\r\n                                        <i class=\"glyph glyph-remove\"></i>\r\n                                        <strong>{index + 1}</strong>\r\n                                    </div>\r\n                                    <div class=\"col-md-4\">\r\n                                        <img class=\"img-responsive visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                            src={value.PhotoURL} alt=\"permit.png\" data-source-index=\"2\" style={{\r\n                                                overflow: \"hidden\",\r\n                                                border: \"5px solid #3A3A3C\",\r\n                                                margin: \"5px\"\r\n                                            }} />\r\n                                    </div>\r\n                                    <div class=\"col-md-6\">\r\n                                        <div>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Permit Number:</span> {value.PermitNumber}\r\n                                        </div>\r\n                                        <div>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Expiry Date:</span> {value.ExpiryDate}\r\n                                        </div>\r\n                                        <div>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Permit Code:</span> {value.Code}\r\n                                        </div>\r\n                                        <div>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Permit Place:</span> {value.Place}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-6\">\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"collapse\" id={value.PermitLicenceID}>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-18 col-md-offset-2\">\r\n                                        <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block\"\r\n                                            src={value.PhotoURL} alt=\"permit.png\" data-source-index=\"2\" style={{\r\n                                                overflow: \"hidden\",\r\n                                                border: \"5px solid #3A3A3C\",\r\n                                                margin: \"5px\"\r\n                                            }} />\r\n                                    </div>\r\n                                    <div class=\"col-md-4 text-right\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            class=\"btn btn-primary\"\r\n                                            data-toggle=\"modal\"\r\n                                            data-target={`#edit-permit-dialog${index}`}\r\n                                            onMouseDown={() => {\r\n                                                let editPermitLicenceDialogs = this.state.EditPermitLicenceDialogs;\r\n\r\n                                                editPermitLicenceDialogs[index] = <EditPermitLicenceDialog\r\n                                                    DialogID={index}\r\n                                                    PermitLicence={value}\r\n                                                    OnCancel={() => {\r\n                                                        let editPermitLicenceDialogs = this.state.EditPermitLicenceDialogs;\r\n                                                        editPermitLicenceDialogs[index] = null;\r\n\r\n                                                        this.setState({\r\n                                                            EditPermitLicenceDialogs: editPermitLicenceDialogs,\r\n                                                        });\r\n\r\n                                                    }}\r\n                                                    OnOK={cancelButton => {\r\n                                                        cancelButton.click();\r\n                                                        this.props.OnPermitLicencesUpdated();\r\n                                                    }} />;\r\n\r\n                                                this.setState({\r\n                                                    EditPermitLicenceDialogs: editPermitLicenceDialogs,\r\n                                                });\r\n                                            }}>\r\n                                            Edit\r\n                                            </button>\r\n                                        <button type=\"button\" class=\"btn btn-danger\" onClick={() => { this.onDelete(index); }}>Delete</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {this.state.EditPermitLicenceDialogs[index]}\r\n                        </li>\r\n                    })}\r\n                </ol>\r\n                {this.state.Preloader}\r\n            </section>         \r\n        );\r\n    }\r\n};\r\n\r\nexport default PermitLicencesList;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport AddPermitLicenceDialog from \"./AddPermitLicenceDialog.js\";\r\nimport PermitLicencesList from \"./PermitLicencesList.js\"\r\n\r\nclass Permits extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddPermitLicenceDialog: null,\r\n            PermitLicencesList: null,\r\n        };\r\n\r\n        this.onPermitLicencesUpdated = this.onPermitLicencesUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onPermitLicencesUpdated();\r\n    }\r\n\r\n    onPermitLicencesUpdated = () => {\r\n        const permitLicences = jwt_decode(localStorage.userToken).PermitLicences;\r\n\r\n        if (permitLicences) {\r\n            this.setState({\r\n                PermitLicencesList: null\r\n            });\r\n            this.setState({\r\n                PermitLicencesList: <PermitLicencesList OnPermitLicencesUpdated={this.onPermitLicencesUpdated} />\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                PermitLicencesList: null\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"permit.png\" src=\"./images/permit.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div class=\"col-md-12 col-md-pull-12\">\r\n                                <div class=\"type-h3\">Permit Licences</div>\r\n                                <div class=\"type-sh3\">Manage your Permits</div>\r\n                                <p>If you are a non-Saudi driver, then you must have at least one permit licence.</p>\r\n                                <div class=\"btn-group\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        class=\"btn btn-primary\"\r\n                                        data-toggle=\"modal\"\r\n                                        data-target=\"#add-permit-licence-dialog\"\r\n                                        onMouseDown={() => {\r\n                                            this.setState({\r\n                                                AddPermitLicenceDialog: (<AddPermitLicenceDialog\r\n                                                    OnCancel={() => {\r\n                                                        this.setState({\r\n                                                            AddPermitLicenceDialog: null,\r\n                                                        });\r\n                                                    }}\r\n                                                    OnOK={cancelButton => {\r\n                                                        cancelButton.click();\r\n                                                        this.onPermitLicencesUpdated();\r\n                                                    }} />),\r\n                                            });\r\n                                        }}>\r\n                                        New Permit Licence\r\n                                        </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.AddPermitLicenceDialog}\r\n                {this.state.PermitLicencesList}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Permits;","import React, { Component } from \"react\";\r\n\r\nclass FinancialAffairs extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"jumbotron\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"tools.png\" src=\"./images/tools.png\" style={{ borderRadius: \"50%\" }} data-source-index=\"1\" />\r\n                            </div>\r\n                            <div class=\"col-md-12 col-md-pull-12\">\r\n                                <div class=\"type-h3\" style={{ color: \"#008575\", }}>\r\n                                    Financial Affairs\r\n                    </div>\r\n                                <div class=\"type-sh3\" style={{ color: \"#949496\", }}>\r\n                                    Under-Construction\r\n                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default FinancialAffairs;","import React, { Component } from \"react\";\r\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\r\nimport Geocode from \"react-geocode\";\r\nimport Autocomplete from 'react-google-autocomplete';\r\nGeocode.setApiKey(\"AIzaSyC3YT8gMjGGdzQpHBNcayZYF4rvbGTL8IM\");\r\nGeocode.enableDebug();\r\n\r\nclass Map extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            NoState: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const AsyncMap = withScriptjs(\r\n            withGoogleMap(\r\n                props => (\r\n                    <GoogleMap\r\n                        googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyC3YT8gMjGGdzQpHBNcayZYF4rvbGTL8IM&libraries=places\"\r\n                        defaultZoom={10}\r\n                        defaultCenter={{ lat: 33.784310, lng: 72.738780 }}>                   \r\n                    </GoogleMap>\r\n                )\r\n            )\r\n        );\r\n        return (\r\n            <div>\r\n                <AsyncMap\r\n                    googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyC3YT8gMjGGdzQpHBNcayZYF4rvbGTL8IM&libraries=places\"\r\n                    loadingElement={ <div style={{ height: `100%` }} /> }\r\n                    containerElement={ <div style={{ height: \"400px\" }} /> }\r\n                    mapElement={ <div style={{ height: `100%` }} /> } />\r\n            </div>              \r\n        );\r\n    }\r\n};\r\n\r\nexport default Map;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { addJobRequest } from \"../../../DriverFunctions.js\";\r\nimport Map from \"../../../../../controls/Map.js\";\r\n\r\nclass AddJobRequestDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LoadingPlace: \"\",\r\n            UnloadingPlace: \"\",\r\n            TripType: \"One Way\",\r\n            Price: 0.00,\r\n\r\n            ValidLoadingPlace: false,\r\n            ValidUnloadingPlace: false,\r\n            ValidPrice: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                LoadingPlace: \"\",\r\n                UnloadingPlace: \"\",\r\n                Price: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidLoadingPlace = this.state.ValidLoadingPlace;\r\n        let ValidUnloadingPlace = this.state.ValidUnloadingPlace;\r\n        let ValidPrice = this.state.ValidPrice;\r\n\r\n        switch (field) {\r\n            case \"LoadingPlace\":\r\n                ValidLoadingPlace = (value !== \"\");\r\n                Errors.LoadingPlace = ValidLoadingPlace ? \"\" : \"Loading place is required.\";\r\n                break;\r\n            case \"UnloadingPlace\":\r\n                ValidUnloadingPlace = (value !== \"\");\r\n                Errors.UnloadingPlace = ValidUnloadingPlace ? \"\" : \"Unloading place is required.\";\r\n                break;\r\n            case \"Price\":\r\n                ValidPrice = (value > 0.00);\r\n                Errors.Price = ValidPrice ? \"\" : \"Price must be more than $0.00.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidLoadingPlace: ValidLoadingPlace,\r\n            ValidUnloadingPlace: ValidUnloadingPlace,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.LoadingPlace &&\r\n                        this.state.ValidUnloadingPlace &&\r\n                        this.state.ValidPrice\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newJobRequest = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            LoadingPlace: this.state.LoadingPlace,\r\n            UnloadingPlace: this.state.UnloadingPlace,\r\n            TripType: this.state.TripType,\r\n            Price: this.state.Price,\r\n        }\r\n\r\n        console.log(\"Going to add Job Request.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addJobRequest(newJobRequest).then(response => {\r\n            if (response.Message === \"Job request is added.\") {\r\n                localStorage.setItem(\"userToken\", response.Token);\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section class=\"text-left\">\r\n                <div class=\"modal\" id=\"add-job-request-dialog\"\r\n                    tabindex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div class=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div class=\"type-h3\">Add Job Request</div>\r\n                                    </div>\r\n                                    <div class=\"modal-body\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <label class=\"control-label\">Loading Place</label>\r\n                                                        <span class=\"text-danger\" style={Required}>*</span>\r\n                                                        <input type=\"text\" name=\"LoadingPlace\" class=\"form-control\" autoComplete=\"off\"\r\n                                                            value={this.state.LoadingPlace} onChange={this.onChange} />\r\n                                                        <span class=\"text-danger\">{this.state.Errors.LoadingPlace}</span>\r\n                                                    </div>\r\n                                                    <div class=\"form-group\">\r\n                                                        <label class=\"control-label\">Unloading Place</label>\r\n                                                        <span class=\"text-danger\" style={Required}>*</span>\r\n                                                        <input type=\"text\" name=\"UnloadingPlace\" class=\"form-control\" autoComplete=\"off\"\r\n                                                            value={this.state.UnloadingPlace} onChange={this.onChange} />\r\n                                                        <span class=\"text-danger\">{this.state.Errors.UnloadingPlace}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <label class=\"control-label\">Trip Type</label><br />\r\n                                                        <div class=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                            <button id=\"example-dropdown\" class=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                                aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                                <span>{this.state.TripType}</span>\r\n                                                                <span class=\"caret\"></span>\r\n                                                            </button>\r\n                                                            <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                                <li><a onClick={() => { this.setState({ TripType: \"One Way\" }); }}>One Way</a></li>\r\n                                                                <li><a onClick={() => { this.setState({ TripType: \"Two Way\" }); }}>Two Way</a></li>\r\n                                                            </ul>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"form-group\">\r\n                                                        <label class=\"control-label\">Price (USD)</label>\r\n                                                        <span class=\"text-danger\" style={Required}>*</span>\r\n                                                        <input type=\"number\" min=\"0.00\" step=\"0.01\" max=\"100.00\" name=\"Price\"\r\n                                                            class=\"form-control\" autoComplete=\"off\" value={this.state.Price} onChange={this.onChange} />\r\n                                                        <span class=\"text-danger\">{this.state.Errors.Price}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-24\">\r\n                                                <Map />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"modal-footer\">\r\n                                        <button class=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddJobRequestDialog;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport Map from \"../../../../../controls/Map.js\";\r\nimport { updateJobRequest } from \"../../../DriverFunctions.js\";\r\n\r\nclass EditJobRequestDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LoadingPlace: this.props.JobRequest.LoadingPlace,\r\n            UnloadingPlace: this.props.JobRequest.UnloadingPlace,\r\n            TripType: this.props.JobRequest.TripType,\r\n            Price: this.props.JobRequest.Price,\r\n\r\n            ValidLoadingPlace: true,\r\n            ValidUnloadingPlace: true,\r\n            ValidPrice: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                LoadingPlace: \"\",\r\n                UnloadingPlace: \"\",\r\n                Price: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidLoadingPlace = this.state.ValidLoadingPlace;\r\n        let ValidUnloadingPlace = this.state.ValidUnloadingPlace;\r\n        let ValidPrice = this.state.ValidPrice;\r\n\r\n        switch (field) {\r\n            case \"LoadingPlace\":\r\n                ValidLoadingPlace = (value !== \"\");\r\n                Errors.LoadingPlace = ValidLoadingPlace ? \"\" : \"Loading place is required.\";\r\n                break;\r\n            case \"UnloadingPlace\":\r\n                ValidUnloadingPlace = (value !== \"\");\r\n                Errors.UnloadingPlace = ValidUnloadingPlace ? \"\" : \"Unloading place is required.\";\r\n                break;\r\n            case \"Price\":\r\n                ValidPrice = (value > 0.00);\r\n                Errors.Price = ValidPrice ? \"\" : \"Price must be more than $0.00.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidLoadingPlace: ValidLoadingPlace,\r\n            ValidUnloadingPlace: ValidUnloadingPlace,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.LoadingPlace &&\r\n                    this.state.ValidUnloadingPlace &&\r\n                    this.state.ValidPrice\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedJobRequest = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            JobRequestID: this.props.JobRequest.JobRequestID,\r\n            LoadingPlace: this.state.LoadingPlace,\r\n            UnloadingPlace: this.state.UnloadingPlace,\r\n            TripType: this.state.TripType,\r\n            Price: this.state.Price,\r\n        }\r\n\r\n        console.log(\"Going to update Job Request.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateJobRequest(updatedJobRequest).then(response => {\r\n            if (response.Message === \"Job request is updated.\") {\r\n                localStorage.setItem(\"userToken\", response.Token);\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <section class=\"text-left\">\r\n                <div class=\"modal\" id={`edit-job-request-dialog-${this.props.DialogID}`}\r\n                    tabindex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div class=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div class=\"type-h3\">Edit Job Request</div>\r\n                                    </div>\r\n                                    <div class=\"modal-body\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <label class=\"control-label\">Loading Place</label>\r\n                                                        <span class=\"text-danger\" style={Required}>*</span>\r\n                                                        <input type=\"text\" name=\"LoadingPlace\" class=\"form-control\" autoComplete=\"off\"\r\n                                                            value={this.state.LoadingPlace} onChange={this.onChange} />\r\n                                                        <span class=\"text-danger\">{this.state.Errors.LoadingPlace}</span>\r\n                                                    </div>\r\n                                                    <div class=\"form-group\">\r\n                                                        <label class=\"control-label\">Unloading Place</label>\r\n                                                        <span class=\"text-danger\" style={Required}>*</span>\r\n                                                        <input type=\"text\" name=\"UnloadingPlace\" class=\"form-control\" autoComplete=\"off\"\r\n                                                            value={this.state.UnloadingPlace} onChange={this.onChange} />\r\n                                                        <span class=\"text-danger\">{this.state.Errors.UnloadingPlace}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <label class=\"control-label\">Trip Type</label><br />\r\n                                                        <div class=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                            <button id=\"example-dropdown\" class=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                                aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                                <span>{this.state.TripType}</span>\r\n                                                                <span class=\"caret\"></span>\r\n                                                            </button>\r\n                                                            <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                                <li><a onClick={() => { this.setState({ TripType: \"One Way\" }); }}>One Way</a></li>\r\n                                                                <li><a onClick={() => { this.setState({ TripType: \"Two Way\" }); }}>Two Way</a></li>\r\n                                                            </ul>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"form-group\">\r\n                                                        <label class=\"control-label\">Price (USD)</label>\r\n                                                        <span class=\"text-danger\" style={Required}>*</span>\r\n                                                        <input type=\"number\" min=\"0.00\" step=\"0.01\" max=\"100.00\" name=\"Price\"\r\n                                                            class=\"form-control\" autoComplete=\"off\" value={this.state.Price} onChange={this.onChange} />\r\n                                                        <span class=\"text-danger\">{this.state.Errors.Price}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-24\">\r\n                                                <Map />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"modal-footer\">\r\n                                        <button class=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default EditJobRequestDialog;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { deleteJobRequest } from \"../../../DriverFunctions.js\";\r\nimport EditJobRequestDialog from \"./EditJobRequestDialog.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\n\r\nclass JobRequestsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobRequests: [],\r\n            EditJobRequestDialogs: [],\r\n            SearchString: \"\",\r\n            Preloader: null,\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.getJobRequests = this.getJobRequests.bind(this);\r\n    }\r\n\r\n    onDelete = async index => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedJobRequest = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            JobRequestID: this.state.JobRequests[index].JobRequestID \r\n        };\r\n\r\n        console.log(`Going to delete JobRequests[${index}]`);\r\n\r\n        await deleteJobRequest(discardedJobRequest)\r\n            .then(response => {\r\n                if (response.Message === \"Job request is deleted.\") {\r\n                    localStorage.setItem(\"userToken\", response.Token);\r\n                    this.props.OnJobRequestsUpdated();\r\n                }\r\n\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getJobRequests();\r\n    }\r\n\r\n    getJobRequests = () => {\r\n        if (localStorage.userToken) {\r\n            const jobRequests = jwt_decode(localStorage.userToken).JobRequests;\r\n\r\n            this.setState({\r\n                JobRequests: jobRequests\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                JobRequests: []\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n        this.getJobRequests();\r\n\r\n        if (this.state.SearchString === \"\") {         \r\n            return;\r\n        }\r\n\r\n        const filteredJobRequests = [];\r\n\r\n        for (var i = 0; i < this.state.JobRequests.length; i++) {\r\n            if (this.state.JobRequests[i].LoadingPlace.includes(this.state.SearchString) ||\r\n                this.state.JobRequests[i].UnloadingPlace.includes(this.state.SearchString)) {\r\n                filteredJobRequests[i] = this.state.JobRequests[i];\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            JobRequests: filteredJobRequests\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div class=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Your Job Requests</div>\r\n                <nav class=\"navbar navbar-default\">\r\n                    <div class=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                        <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                            <form noValidate onSubmit={this.onSearch} class=\"navbar-form navbar-right\" role=\"search\">\r\n                                <div class=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                    <div class=\"form-group\">\r\n                                        <input type=\"search\" name=\"SearchString\" class=\"form-control\" placeholder=\"Search by Places\"\r\n                                            style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                            value={this.state.SearchString} onChange={this.onChange} />\r\n                                    </div>\r\n                                    <button type=\"submit\" class=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                <ol class=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {this.state.JobRequests.map((value, index) => {\r\n                        return <li class=\"list-items-row\">\r\n                            <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#${value.JobRequestID}`}>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-2\">\r\n                                        <i class=\"glyph glyph-add\"></i>\r\n                                        <i class=\"glyph glyph-remove\"></i>\r\n                                        <strong>{index + 1}</strong>\r\n                                    </div>\r\n                                    <div class=\"col-md-2\">\r\n                                        <img src=\"./images/job_requests.png\" alt=\"job_requests.png\" height=\"50\" />\r\n                                    </div>\r\n                                    <div class=\"col-md-6\">\r\n                                        <div>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Loading Place:</span> {value.LoadingPlace}\r\n                                        </div>\r\n                                        <div>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Unloading Place:</span> {value.UnloadingPlace}\r\n                                        </div>\r\n                                        <div>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Trip Type:</span> {value.TripType}\r\n                                        </div>\r\n                                        </div>\r\n                                    <div class=\"col-md-6\">\r\n                                        <div>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Price:</span> {`$${value.Price}`}\r\n                                        </div>\r\n                                        <div>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Available:</span> {((Math.abs(new Date() - new Date(value.TimeCreated)) / 36e5) < value.WaitingTime) ?\r\n                                                <span class=\"fa fa-check-circle\" style={{ fontWeight: \"bold\", color: \"#25AE88\" }}></span> :\r\n                                                <span class=\"fa fa-times-circle\" style={{ fontWeight: \"bold\", color: \"#D75A4A\" }}></span>}\r\n                                        </div>\r\n                                        <div>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Created:</span> {`${(Math.floor((new Date().getTime() - new Date(value.TimeCreated)) / 36e5))} Hour(s) Ago`}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"collapse\" id={value.JobRequestID}>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-18 col-md-offset-2\">\r\n                                    </div>\r\n                                    <div class=\"col-md-4 text-right\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            class=\"btn btn-primary\"\r\n                                            data-toggle=\"modal\"\r\n                                            data-target={`#edit-job-request-dialog-${index}`}\r\n                                            onMouseDown={() => {\r\n                                                let editJobRequestDialogs = this.state.EditJobRequestDialogs;\r\n\r\n                                                editJobRequestDialogs[index] = <EditJobRequestDialog\r\n                                                    DialogID={index}\r\n                                                    JobRequest={value}\r\n                                                    OnCancel={() => {\r\n                                                        let editJobRequestDialogs = this.state.EditJobRequestDialogs;\r\n                                                        editJobRequestDialogs[index] = null;\r\n\r\n                                                        this.setState({\r\n                                                            EditJobRequestDialogs: editJobRequestDialogs,\r\n                                                        });\r\n\r\n                                                    }}\r\n                                                    OnOK={cancelButton => {\r\n                                                        cancelButton.click();\r\n                                                        this.props.OnJobRequestsUpdated();\r\n                                                    }} />;\r\n\r\n                                                this.setState({\r\n                                                    EditJobRequestDialogs: editJobRequestDialogs,\r\n                                                });\r\n                                            }}>\r\n                                            Edit\r\n                                            </button>\r\n                                        <button type=\"button\" class=\"btn btn-danger\" onClick={() => { this.onDelete(index); }}>Delete</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {this.state.EditJobRequestDialogs[index]}\r\n                        </li>\r\n                    })}\r\n                </ol>\r\n                {this.state.Preloader}\r\n            </section>         \r\n        );\r\n    }\r\n};\r\n\r\nexport default JobRequestsList;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport AddJobRequestDialog from \"./AddJobRequestDialog.js\";\r\nimport JobRequestsList from \"./JobRequestsList.js\";\r\n\r\nclass JobRequests extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddJobRequestDialog: null,\r\n            JobRequestsList: null\r\n        };\r\n\r\n        this.onJobRequestsUpdated = this.onJobRequestsUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onJobRequestsUpdated();\r\n    }\r\n\r\n    onJobRequestsUpdated = () => {\r\n        const jobRequests = jwt_decode(localStorage.userToken).JobRequests;\r\n\r\n        if (jobRequests) {\r\n            this.setState({\r\n                JobRequestsList: null\r\n            });\r\n            this.setState({\r\n                JobRequestsList: <JobRequestsList OnJobRequestsUpdated={this.onJobRequestsUpdated} />\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                JobRequestsList: null\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"job_requests.png\" src=\"./images/job_requests.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div class=\"col-md-12 col-md-pull-12\">\r\n                                <div class=\"type-h3\">Job Requests</div>\r\n                                <div class=\"type-sh3\">Manage Your Job Requests</div>\r\n                                <p>Create new job requests for your current and/or near-by locations to get a chance to increase your revenue.</p>\r\n                                <div class=\"btn-group\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        class=\"btn btn-primary\"\r\n                                        data-toggle=\"modal\"\r\n                                        data-target=\"#add-job-request-dialog\"\r\n                                        onMouseDown={() => {\r\n                                            this.setState({\r\n                                                AddJobRequestDialog: (<AddJobRequestDialog\r\n                                                    OnCancel={() => {\r\n                                                        this.setState({\r\n                                                            AddJobRequestDialog: null,\r\n                                                        });\r\n                                                    }}\r\n                                                    OnOK={cancelButton => {\r\n                                                        cancelButton.click();\r\n                                                        this.onJobRequestsUpdated();\r\n                                                    }} />),\r\n                                            });\r\n                                        }}>\r\n                                        New Job Request\r\n                                        </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.AddJobRequestDialog}\r\n                {this.state.JobRequestsList}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default JobRequests;","import React, { Component } from \"react\";\r\n\r\nclass JobOffers extends Component {\r\n   render() {\r\n        return (\r\n            <section>\r\n                <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"job_offers.png\" src=\"./images/job_offers.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div class=\"col-md-12 col-md-pull-12\">\r\n                                <div class=\"type-h3\">Job Offers</div>\r\n                                <div class=\"type-sh3\">Under Construction</div>\r\n                                <p>For now, it's lonely here!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default JobOffers;","import React, { Component } from \"react\";\r\n\r\nclass OnGoingJobs extends Component {\r\n   render() {\r\n        return (\r\n            <section>\r\n                <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"on_going_jobs.png\" src=\"./images/on_going_jobs.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div class=\"col-md-12 col-md-pull-12\">\r\n                                <div class=\"type-h3\">On-Going Jobs</div>\r\n                                <div class=\"type-sh3\">Under Construction</div>\r\n                                <p>For now, it's lonely here!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default OnGoingJobs;","import React, { Component } from \"react\";\r\nimport JobRequests from \"./jobRequests/JobRequests.js\"; \r\nimport JobOffers from \"./jobOffers/JobOffers.js\";\r\nimport OnGoingJobs from \"./onGoingJobs/OnGoingJobs.js\";\r\n\r\nclass Jobs extends Component {\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div class=\"entity-list theme-alt\" style={{ backgroundColor: \"#161616\" }}>\r\n                    <div class=\"entity-list-item\" href=\"#job-requests\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">\r\n                        <div class=\"item-icon\" style={{ backgroundColor: \"rgba(0, 0, 0, 0)\" }}>\r\n                            <img src=\"./images/job_requests.png\" alt=\"job_requests.png\" />\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Job Requests</div>\r\n                            <div class=\"content-text-secondary\">Create job requests for places of your own choice.</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"entity-list-item\" href=\"#job-offers\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">\r\n                        <div class=\"item-icon\" style={{ backgroundColor: \"rgba(0, 0, 0, 0)\" }}>\r\n                            <img src=\"./images/job_offers.png\" alt=\"job_offers.png\" />\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Job Offers</div>\r\n                            <div class=\"content-text-secondary\">See job opportunities from Traders and Brokers.</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"entity-list-item\" href=\"#on-going-jobs\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">\r\n                        <div class=\"item-icon\" style={{ backgroundColor: \"rgba(0, 0, 0, 0)\" }}>\r\n                            <img src=\"./images/on_going_jobs.png\" alt=\"on_going_jobs.png\" />\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">On-Going Jobs</div>\r\n                            <div class=\"content-text-secondary\">Manage your jobs that are in progress.</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"tab-content\">\r\n                    <div role=\"tabpanel\" class=\"tab-pane active\" id=\"job-requests\">\r\n                        <JobRequests />\r\n                    </div>\r\n                    <div role=\"tabpanel\" class=\"tab-pane\" id=\"job-offers\">\r\n                        <JobOffers />\r\n                    </div>\r\n                    <div role=\"tabpanel\" class=\"tab-pane\" id=\"on-going-jobs\">\r\n                        <OnGoingJobs />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Jobs;","import React, { Component } from \"react\";\r\n\r\nclass Payments extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"jumbotron\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"tools.png\" src=\"./images/tools.png\" style={{ borderRadius: \"50%\" }} data-source-index=\"1\" />\r\n                            </div>\r\n                            <div class=\"col-md-12 col-md-pull-12\">\r\n                                <div class=\"type-h3\" style={{ color: \"#008575\", }}>\r\n                                    Payments\r\n                    </div>\r\n                                <div class=\"type-sh3\" style={{ color: \"#949496\", }}>\r\n                                    Under-Construction\r\n                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Payments;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { generalSettings } from \"../../DriverFunctions\";\r\n\r\nclass GeneralSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\",\r\n\r\n            ValidFirstName: true,\r\n            ValidLastName: true,\r\n            ValidPhoneNumber: true,\r\n\r\n            ValidForm: false,\r\n            SettingsSaved: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                PhoneNumber: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.userToken) {\r\n            const decoded = jwt_decode(localStorage.userToken);\r\n\r\n            this.setState({\r\n                FirstName: decoded.FirstName,\r\n                LastName: decoded.LastName,\r\n                DateOfBirth: decoded.DateOfBirth,\r\n                Gender: decoded.Gender,\r\n                Address: decoded.Address,\r\n                PhoneNumber: decoded.PhoneNumber,\r\n                Nationality: decoded.Nationality,\r\n\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                Address: \"\",\r\n                PhoneNumber: \"\",\r\n                Gender: \"\",\r\n                Nationality: \"\",\r\n                DateOfBirth: \"\",\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFirstName = this.state.ValidFirstName;\r\n        let ValidLastName = this.state.ValidLastName;\r\n        let ValidPhoneNumber = this.state.ValidPhoneNumber;\r\n\r\n        switch (field) {\r\n            case \"FirstName\":\r\n                ValidFirstName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.FirstName = ValidFirstName ? \"\" : \"First name is invalid.\";\r\n                break;\r\n            case \"LastName\":\r\n                ValidLastName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.LastName = ValidLastName ? \"\" : \"Last name is invalid.\";\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = value.match(/^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/);\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFirstName: ValidFirstName,\r\n            ValidLastName: ValidLastName,\r\n            ValidPhoneNumber: ValidPhoneNumber,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidFirstName &&\r\n                    this.state.ValidLastName &&\r\n                    this.state.ValidPhoneNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedDriver = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            FirstName: this.state.FirstName,\r\n            LastName: this.state.LastName,\r\n            Address: this.state.Address,\r\n            PhoneNumber: this.state.PhoneNumber,\r\n            Gender: this.state.Gender,\r\n            Nationality: this.state.Nationality,\r\n            DateOfBirth: this.state.DateOfBirth,\r\n        }\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await generalSettings(updatedDriver).then(response => {\r\n            console.log(response);\r\n            if (response.Message === \"driver is updated.\") {\r\n                localStorage.setItem(\"userToken\", response.Token);\r\n                this.props.OnSettingsSaved();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>General Settings</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div class=\"entity-list entity-list-expandable\">\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-comment\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"FirstName\" autoComplete=\"off\"\r\n                                        value={this.state.FirstName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">First Name</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"FirstName\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-comment\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"LastName\" autoComplete=\"off\"\r\n                                        value={this.state.LastName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Last Name</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"LastName\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-birthday-cake\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"date\" class=\"form-control\" name=\"DateOfBirth\" autocomplete=\"off\"\r\n                                        value={this.state.DateOfBirth} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Date of Birth</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class={this.state.Gender === \"Male\" ? \"fas fa-male\" : \"fas fa-female\"}></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"dropdown\" style={{ width: \"193px\", maxWidth: \"296px\", }}>\r\n                                    <button id=\"example-dropdown\" class=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                        aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                        <span>{this.state.Gender}</span>\r\n                                        <span class=\"caret\"></span>\r\n                                    </button>\r\n                                    <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                        <li><a onClick={() => { this.setState({ Gender: \"Male\" }); }}>Male</a></li>\r\n                                        <li><a onClick={() => { this.setState({ Gender: \"Female\" }); }}>Female</a></li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Gender</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-flag\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"Nationality\" autocomplete=\"off\"\r\n                                        value={this.state.Nationality} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Nationality</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-phone\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autocomplete=\"off\"\r\n                                        placeholder=\"+XXXXXXXXXXXX\" value={this.state.PhoneNumber} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Phone Number</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"PhoneNumber\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-location-arrow\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"Address\" autocomplete=\"off\"\r\n                                        value={this.state.Address} onChange={this.onChange} style={{ width: \"393px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Address</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item active\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Save Changes?</div>\r\n                                <div class=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div class=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default GeneralSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { usernameAndEmailSettings } from \"../../DriverFunctions.js\";\r\n\r\nclass CodeConfirmationDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ConfirmCode: \"\",\r\n\r\n            ValidConfirmCode: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                ConfirmCode: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidConfirmCode = this.state.ValidConfirmCode;\r\n\r\n        ValidConfirmCode = value === this.props.Code;\r\n        Errors.ConfirmCode = ValidConfirmCode ? \"\" : \"Invalid code.\";\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidConfirmCode: ValidConfirmCode,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidConfirmCode\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedDriver = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            Username: this.props.Username,\r\n            Email: this.props.Email,\r\n        };\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await usernameAndEmailSettings(updatedDriver)\r\n            .then(response => {\r\n                if (response.Message === \"driver is updated.\") {\r\n                    localStorage.setItem(\"userToken\", response.Token); \r\n                    this.props.OnSettingsSaved();\r\n                }\r\n\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section class=\"text-left\">\r\n                <div\r\n                    class=\"modal in\" id=\"code-confirmation-dialog\" tabindex=\"-1\"\r\n                    role=\"dialog\" aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\"\r\n                    style={{ display: \"block\" }}>\r\n                    <div class=\"modal-dialog\">\r\n                    {this.state.Preloader}\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div class=\"modal-header\">\r\n                                        <img alt=\"passcode.png\" src=\"./images/passcode.png\" height=\"60\" />\r\n                                        <div class=\"type-h3\">Email Confirmation</div>\r\n                                        <div class=\"type-sh3\">We delivered a confirmation code to your email.</div>\r\n                                    </div>\r\n                                    <div class=\"modal-body\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"form-group\">\r\n                                                    <label class=\"control-label\">Confirmation Code</label>\r\n                                                    <input type=\"text\" name=\"ConfirmCode\" class=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.ConfirmCode} onChange={this.onChange} />\r\n                                                    <span class=\"text-danger\">{this.state.Errors.ConfirmCode}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"modal-footer\">\r\n                                        <button class=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Confirm\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default CodeConfirmationDialog;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport Strings from \"../../../../res/strings.js\";\r\nimport CodeConfirmationDialog from \"./CodeConfirmationDialog.js\";\r\nimport { usernameAndEmailSettings } from \"../../DriverFunctions\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\n\r\nclass UsernameAndEmailSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            NewUsername: \"\",\r\n\r\n            Email: \"\",\r\n            NewEmail: \"\",\r\n\r\n            Code: \"\",\r\n\r\n            ValidNewUsername: true,\r\n            ValidNewEmail: true,\r\n\r\n            ValidForm: false,\r\n            CodeConfirmationDialog: null,\r\n\r\n            Errors: {\r\n                NewUsername: \"\",\r\n                NewEmail: \"\",\r\n            },\r\n\r\n            CodeConfirmation: \"\",\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.userToken) {\r\n            const decoded = jwt_decode(localStorage.userToken);\r\n\r\n            this.setState({\r\n                Username: decoded.Username,\r\n                NewUsername: decoded.Username,\r\n                Email: decoded.Email,\r\n                NewEmail: decoded.Email,\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                Username: \"\",\r\n                NewUsername: \"\",\r\n                Email: \"\",\r\n                NewEmail: \"\",\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    async validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewUsername = this.state.ValidNewUsername;\r\n        let ValidNewEmail = this.state.ValidNewEmail;\r\n        \r\n        switch (field) {\r\n            case \"NewUsername\":\r\n                if (value === \"\") {\r\n                    ValidNewUsername = false;\r\n                    Errors.NewUsername = \"Username is required.\";\r\n                    break;\r\n                }\r\n\r\n                if (!value.match(/^[a-z0-9]+$/i)) {\r\n                    ValidNewUsername = false;\r\n                    Errors.NewUsername = \"Username is invalid.\";\r\n                    break;\r\n                }\r\n\r\n                if (value === this.state.Username) {\r\n                    ValidNewUsername = true;\r\n                    Errors.NewUsername = \"\";\r\n                    break;\r\n                }\r\n\r\n                await axios.post(\"https://naqelserver.azurewebsites.net/users/validateUsername\", {\r\n                    Username: value,\r\n                })\r\n                    .then(res => {\r\n                        if (res.data === \"Username is available.\") {\r\n                            ValidNewUsername = true;\r\n                            Errors.NewUsername = \"\";\r\n                        }\r\n                        else {\r\n                            ValidNewUsername = false;\r\n                            Errors.NewUsername = res.data;\r\n                        }\r\n                    });\r\n                break;\r\n            case \"NewEmail\":\r\n                if (value === \"\") {\r\n                    ValidNewEmail = false;\r\n                    Errors.NewEmail = \"Email is required.\";\r\n                    break;\r\n                }\r\n\r\n                if (!value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\r\n                    ValidNewEmail = false;\r\n                    Errors.NewEmail = \"Email is invalid.\";\r\n                    break;\r\n                }\r\n\r\n                if (value === this.state.Email) {\r\n                    ValidNewEmail = true;\r\n                    Errors.NewEmail = \"\";\r\n                    break;\r\n                }\r\n\r\n                await axios.post(\"https://naqelserver.azurewebsites.net/users/validateEmail\", {\r\n                    Email: value,\r\n                })\r\n                    .then(res => {\r\n                        if (res.data === \"Email is already taken.\") {\r\n                            ValidNewEmail = false;\r\n                            Errors.NewEmail = res.data;\r\n                        }\r\n                        else {\r\n                            ValidNewEmail = true;\r\n                            Errors.NewEmail = \"\";\r\n                        }\r\n                    });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewUsername: ValidNewUsername,\r\n            ValidNewEmail: ValidNewEmail,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidNewUsername &&\r\n                    this.state.ValidNewEmail\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async e => {\r\n        e.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername === this.state.Username &&\r\n            this.state.NewEmail === this.state.Email) {\r\n            return;\r\n        }\r\n\r\n\r\n        if (this.state.NewEmail === this.state.Email) {\r\n            const updatedDriver = {\r\n                Token: localStorage.getItem(\"userToken\"),\r\n                Username: this.state.NewUsername,\r\n                Email: this.state.NewEmail,\r\n            };\r\n\r\n            this.setState({\r\n                Preloader: <Preloader />\r\n            });\r\n\r\n            await usernameAndEmailSettings(updatedDriver)\r\n                .then(response => {\r\n                    if (response.Message === \"driver is updated.\") {\r\n                        localStorage.setItem(\"userToken\", response.Token);\r\n                        this.props.OnSettingsSaved();\r\n                    }\r\n\r\n                    this.setState({\r\n                        Preloader: null\r\n                    });\r\n                });\r\n        }\r\n        else {\r\n            await axios.post(`${Strings.NAQEL_SERVER}users/sendCode`, {\r\n                Email: this.state.NewEmail,\r\n            }).then(response => {\r\n                if (response) {\r\n                    console.log(response);\r\n                    console.log(\"Going to open Dialog.\");\r\n                    this.setState({\r\n                        CodeConfirmationDialog: <CodeConfirmationDialog\r\n                            Code={response.Code}\r\n                            Username={this.state.NewUsername}\r\n                            Email={this.state.NewEmail}\r\n                            OnCancel={() => {\r\n                                this.setState({\r\n                                    CodeConfirmationDialog: null,\r\n                                });\r\n                            }}\r\n                            OnOK={cancelButton => {\r\n                                cancelButton.click();\r\n                                this.props.OnDocumentsUpdated();\r\n                            }} />\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Username and Emails</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div class=\"entity-list entity-list-expandable\">\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-at\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" name=\"NewUsername\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.NewUsername} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Username</div>\r\n                                <div class=\"content-text-secondary text-danger\">{this.state.Errors[\"NewUsername\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-envelope\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"email\" name=\"NewEmail\" class=\"form-control\" placeholder=\"someone@example.com\" autocomplete=\"off\"\r\n                                        value={this.state.NewEmail} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Email</div>\r\n                                <div class=\"content-text-secondary text-danger\">{this.state.Errors[\"NewEmail\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item active\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Save Changes?</div>\r\n                                <div class=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div class=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n                {this.state.CodeConfirmationDialog}\r\n            </div> \r\n        );\r\n    }\r\n};\r\n\r\nexport default UsernameAndEmailSettings;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { passwordSettings } from \"../../DriverFunctions\";\r\n\r\nclass PasswordSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Password: \"\",\r\n            CurrentPassword: \"\",\r\n            NewPassword: \"\",\r\n            ConfirmPassword: \"\",\r\n\r\n            ValidCurrentPassword: false,\r\n            ValidNewPassword: false,\r\n            ValidConfirmPassword: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                CurrentPassword: \"\",\r\n                NewPassword: \"\",\r\n                ConfirmPassword: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.userToken) {\r\n            const decoded = jwt_decode(localStorage.userToken);\r\n\r\n            this.setState({\r\n                Password: decoded.Password,\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    async validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCurrentPassword = this.state.ValidCurrentPassword;\r\n        let ValidNewPassword = this.state.ValidNewPassword;\r\n        let ValidConfirmPassword = this.state.ValidConfirmPassword;\r\n\r\n        switch (field) {\r\n            case \"CurrentPassword\":\r\n                await axios.post(\"https://naqelserver.azurewebsites.net/users/validatePassword\", {\r\n                    DriverID: jwt_decode(localStorage.userToken).DriverID,\r\n                    Password: value,\r\n                })\r\n                    .then(res => {\r\n                        if (res.data === \"Valid password.\") {\r\n                            ValidCurrentPassword = true;\r\n                        }\r\n                        else {\r\n                            ValidCurrentPassword = false;\r\n                        }\r\n                    });\r\n\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is invalid.\";\r\n                break;\r\n            case \"NewPassword\":\r\n                ValidNewPassword = value.length >= 6;\r\n                Errors.NewPassword = ValidNewPassword ? \"\" : \"Password is too short.\";\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                ValidConfirmPassword = value === this.state.NewPassword;\r\n                Errors.ConfirmPassword = ValidConfirmPassword ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCurrentPassword: ValidCurrentPassword,\r\n            ValidNewPassword: ValidNewPassword,\r\n            ValidConfirmPassword: ValidConfirmPassword,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidCurrentPassword &&\r\n                        this.state.ValidNewPassword &&\r\n                        this.state.ValidConfirmPassword\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async e => {\r\n        e.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedDriver = {\r\n            Token: localStorage.getItem(\"userToken\"),\r\n            Password: this.state.NewPassword,\r\n        }\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        console.log(\"Going to update password.\");\r\n\r\n        await passwordSettings(updatedDriver).then(response => {\r\n            if (response.Message === \"driver is updated.\") {\r\n                localStorage.setItem(\"userToken\", response.Token);\r\n                this.props.OnSettingsSaved();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\" }}>Change Password</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div class=\"entity-list entity-list-expandable\">\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-key\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"password\" name=\"CurrentPassword\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.CurrentPassword} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Current Password</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"CurrentPassword\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-key\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"password\" name=\"NewPassword\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.NewPassword} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">New Password</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"NewPassword\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-key\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"password\" name=\"ConfirmPassword\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.ConfirmPassword} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Confirm Password</div>\r\n                                <div class=\"text-danger\">{this.state.Errors[\"ConfirmPassword\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item active\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Save Changes?</div>\r\n                                <div class=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div class=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default PasswordSettings;","import React, { Component } from \"react\";\r\nimport GeneralSettings from \"./GeneralSettings\";\r\nimport UsernameAndEmailSettings from \"./UsernameAndEmailSettings\";\r\nimport PasswordSettings from \"./PasswordSettings\";\r\n\r\nclass Settings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            GeneralSettings: <GeneralSettings OnSettingsSaved={this.onGeneralSettingsSaved} />,\r\n            UsernameAndEmailSettings: <UsernameAndEmailSettings OnSettingsSaved={this.onUsernameAndEmailSettingsSaved} />,\r\n            PasswordSettings: <PasswordSettings OnSettingsSaved={this.onPasswordSettingsSaved} />\r\n        };\r\n    }\r\n\r\n    onGeneralSettingsSaved = () => {\r\n        this.setState({\r\n            GeneralSettings: null, \r\n        });\r\n        this.setState({\r\n            GeneralSettings: <GeneralSettings onSettingsSaved={this.onGeneralSettingsSaved} />\r\n        });\r\n    }\r\n\r\n    onUsernameAndEmailSettingsSaved = () => {\r\n        this.setState({\r\n            UsernameAndEmailSettings: null\r\n        });\r\n        this.setState({\r\n            UsernameAndEmailSettings: <UsernameAndEmailSettings OnSettingsSaved={this.onUsernameAndEmailSettingsSaved} />\r\n        });\r\n    }\r\n\r\n    onPasswordSettingsSaved = () => {\r\n        this.setState({\r\n            PasswordSettings: null\r\n        });\r\n        this.setState({\r\n            PasswordSettings: <PasswordSettings OnSettingsSaved={this.onPasswordSettingsSaved} />\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.GeneralSettings}\r\n                {this.state.UsernameAndEmailSettings}\r\n                {this.state.PasswordSettings}\r\n            </div> \r\n        );\r\n    }\r\n};\r\n\r\nexport default Settings;","import React, { Component } from \"react\";\r\nimport { TabMenu } from \"../../../styles/TabStyles\";\r\nimport Profile from \"./profile/Profile\";\r\nimport Trucks from \"./trucks/Trucks\";\r\nimport Permits from \"./permits/Permits\";\r\nimport FinancialAffairs from \"./financial_affairs/FinancialAffairs\";\r\nimport Jobs from \"./jobs/Jobs\";\r\nimport Payments from \"./payments/Payments\";\r\nimport Settings from \"./settings/Settings\";\r\n\r\nclass DriversDashboard extends Component {\r\n    render() {\r\n        if (!localStorage.userToken) {\r\n            this.props.history.push(`/login`);\r\n            return <a />\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <ul class=\"nav nav-tabs theme-alt\" role=\"tablist\" style={TabMenu}>\r\n                        <li role=\"presentation\" class=\"active\"><a href=\"#profile\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">Profile</a></li>\r\n                        <li role=\"presentation\"><a href=\"#trucks\" aria-controls=\"trucks\" role=\"tab\" data-toggle=\"tab\">Trucks</a></li>\r\n                        <li role=\"presentation\"><a href=\"#permits\" aria-controls=\"permits\" role=\"tab\" data-toggle=\"tab\">Permits</a></li>\r\n                        <li role=\"presentation\"><a href=\"#financialAffairs\" aria-controls=\"financialAffairs\" role=\"tab\" data-toggle=\"tab\">Financial Affairs</a></li>\r\n                        <li role=\"presentation\"><a href=\"#jobs\" aria-controls=\"jobs\" role=\"tab\" data-toggle=\"tab\">Jobs</a></li>\r\n                        <li role=\"presentation\"><a href=\"#payments\" aria-controls=\"payments\" role=\"tab\" data-toggle=\"tab\">Payments</a></li>\r\n                        <li role=\"presentation\"><a href=\"#settings\" aria-controls=\"settings\" role=\"tab\" data-toggle=\"tab\">Settings</a></li>\r\n                    </ul>\r\n\r\n                    <div class=\"tab-content\">\r\n                        <div role=\"tabpanel\" class=\"tab-pane active\" id=\"profile\">\r\n                            <Profile />\r\n                        </div>\r\n                        <div role=\"tabpanel\" class=\"tab-pane\" id=\"trucks\">\r\n                            <Trucks />\r\n                        </div>\r\n                        <div role=\"tabpanel\" class=\"tab-pane\" id=\"permits\">\r\n                            <Permits />\r\n                        </div>\r\n                        <div role=\"tabpanel\" class=\"tab-pane\" id=\"financialAffairs\">\r\n                            <FinancialAffairs />\r\n                        </div>\r\n                        <div role=\"tabpanel\" class=\"tab-pane\" id=\"jobs\">\r\n                            <Jobs />\r\n                        </div>\r\n                        <div role=\"tabpanel\" class=\"tab-pane\" id=\"payments\">\r\n                            <Payments />\r\n                        </div>\r\n                        <div role=\"tabpanel\" class=\"tab-pane\" id=\"settings\">\r\n                            <Settings />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default DriversDashboard;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { getData, uploadTraderProfilePhoto } from \"../../TraderFunctions\";\r\nimport Strings from \"../../../../res/strings\";\r\n\r\nclass ProfilePhoto extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Image: null,\r\n            PhotoURL: \"./images/defaultProfilePhoto.png\",\r\n            UploadProgress: null,\r\n        };\r\n\r\n        this.onImageUpload = this.onImageUpload.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"ProfilePhoto\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Profile photo found.\") {\r\n                    let profilePhoto = response.ProfilePhoto;\r\n\r\n                    this.setState({\r\n                        PhotoURL: profilePhoto.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.state({\r\n                        PhotoURL: \"./images/defaultProfilePhoto.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onImageUpload = async event => {\r\n        this.state.Image = event.target.files[0];\r\n        console.log(this.state.Image);\r\n        const formData = new FormData();\r\n\r\n        try {\r\n            formData.append(\"Image\", this.state.Image, this.state.Image.name);\r\n\r\n            await axios.post(Strings.IMAGE_UPLOADER, formData, {\r\n                onUploadProgress: event => {\r\n                    this.setState({\r\n                        UploadProgress: <div className=\"progress-bar\">\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                        </div>\r\n                    });\r\n                }\r\n            }).then(async response => {\r\n                response = response.data;\r\n\r\n                if (response.message === \"Image uploaded successfully.\") {\r\n                    const traderProfilePhoto = {\r\n                        Token: localStorage.Token,\r\n                        PhotoURL: response.imageUrl,\r\n                        FileName: response.filename\r\n                    }\r\n\r\n                    let photoURL = response.imageUrl;\r\n\r\n                    await uploadTraderProfilePhoto(traderProfilePhoto).then(response => {\r\n                        if (response.Message === \"Profile photo is updated.\" ||\r\n                            response.Message === \"Profile photo is added.\") {\r\n\r\n                            this.setState({\r\n                                PhotoURL: photoURL,\r\n                                UploadProgress: null,\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }).catch(() => {\r\n                this.props.OnImageUploaded(\"Invalid Image.\");\r\n                this.setState({\r\n                    ImageURL: \"./images/defaultProfilePhoto.png\",\r\n                    UploadProgress: null,\r\n                });\r\n            });\r\n        }\r\n        catch (exception) {\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n\r\n            return;\r\n        }\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <input type=\"file\" onChange={this.onImageUpload} style={{ display: \"none\", }} ref={fileInput => this.fileInput = fileInput} />\r\n                <figure className=\"media\">\r\n                    <div className=\"media-img media-img-has-play ratio-movie\" style={{\r\n                        width: \"200px\",\r\n                        height: \"200px\",\r\n                        border: \"0px\",\r\n                        padding: \"0px\",\r\n                        border: \"5px solid #3A3A3C\"\r\n                    }}>\r\n                        <a href=\"#\" onClick={() => this.fileInput.click()}>\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                src={this.state.PhotoURL} alt=\"ProfilePhoto.png\" />\r\n                            <i className=\"glyph glyph-edit\"></i>\r\n                        </a>\r\n                    </div>\r\n                </figure>\r\n                {this.state.UploadProgress}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ProfilePhoto;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addIdentityCard } from \"../../../../TraderFunctions.js\";\r\n\r\nclass AddIdentityCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidIDNumber: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                IDNumber: \"\",\r\n                PhotoURL: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidIDNumber = this.state.ValidIDNumber;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"IDNumber\":\r\n                ValidIDNumber = (value !== \"\");\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidIDNumber = (value >= 1000000000 && value <= 9999999999);\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number must be 10-digits long.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidIDNumber: ValidIDNumber,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidIDNumber &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newIdentityCard = {\r\n            Token: localStorage.Token,\r\n            IDNumber: this.state.IDNumber,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to add Identity Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        addIdentityCard(newIdentityCard).then(response => {\r\n            if (response.Message === \"Identity card is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div className=\"modal\" id=\"add-identity-card-dialog\"\r\n                    tabindex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Add Identity Card</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => { \r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"IdentityCard\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">ID Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"IDNumber\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.IDNumber} onChange={this.onChange} min=\"1000000000\" max=\"9999999999\"/>\r\n                                                    <span className=\"text-danger\">{this.state.Errors.IDNumber}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddIdentityCardDialog;","import React, { Component } from \"react\";\r\nimport AddIdentityCardDialog from \"./AddIdentityCardDialog.js\";\r\n\r\nclass AddIdentityCardButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddIdentityCardDialog: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-identity-card-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddIdentityCardDialog: <AddIdentityCardDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddIdentityCardDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />,\r\n                        });\r\n                    }}>\r\n                    <span className=\"fas fa-plus\" aria-hidden=\"true\"></span> Identity Card\r\n                </button>\r\n                {this.state.AddIdentityCardDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddIdentityCardButton;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addCommercialRegisterCertificate } from \"../../../../TraderFunctions.js\";\r\n\r\nclass AddCommercialRegisterCertificateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Number: UUID().substring(0, 7).toUpperCase(),\r\n            Type: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidType: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                Type: \"\",\r\n                PhotoURL: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Certificate type is required.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidType: ValidType,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidType &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newCommercialRegisterCertificate = {\r\n            Token: localStorage.Token,\r\n            Number: this.state.Number,\r\n            Type: this.state.Type,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to add commercial register certificate.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        addCommercialRegisterCertificate(newCommercialRegisterCertificate).then(response => {\r\n            if (response.Message === \"Commercial register certificate is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div className=\"modal\" id=\"add-commercial-register-certificate-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Add Commercial Register Certificate</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => { \r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"CommercialRegisterCertificate\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Certificate Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Number\" className=\"form-control\" autoComplete=\"off\" readOnly\r\n                                                        value={this.state.Number} onChange={this.onChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Certificate Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddCommercialRegisterCertificateDialog;","import React, { Component } from \"react\";\r\nimport AddCommercialRegisterCertificateDialog from \"./AddCommercialRegisterCertificateDialog.js\";\r\n\r\nclass AddCommercialRegisterCertificateButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddCommercialRegisterCertificateDialog: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-commercial-register-certificate-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddCommercialRegisterCertificateDialog: <AddCommercialRegisterCertificateDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddCommercialRegisterCertificateDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />\r\n                        });\r\n                    }}>\r\n                    <span className=\"fas fa-plus\" aria-hidden=\"true\"></span> CR Certificate\r\n                </button>\r\n                {this.state.AddCommercialRegisterCertificateDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddCommercialRegisterCertificateButton;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateIdentityCard } from \"../../../../TraderFunctions.js\";\r\n\r\nclass EditIdentityCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidIDNumber: true,\r\n            ValidPhotoURL: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                IDNumber: \"\",\r\n                PhotoURL: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            this.setState({\r\n                Preloader: <Preloader />\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Identity card found.\") {\r\n                    let identityCard = response.IdentityCard;\r\n\r\n                    this.setState({\r\n                        IDNumber: identityCard.IDNumber,\r\n                        PhotoURL: identityCard.PhotoURL,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        IDNumber: \"\",\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                        Preloader: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidIDNumber = this.state.ValidIDNumber;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"IDNumber\":\r\n                ValidIDNumber = (value !== \"\");\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidIDNumber = (value >= 1000000000 && value <= 9999999999);\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number must be 10-digits long.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidIDNumber: ValidIDNumber,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidIDNumber &&\r\n                    this.state.ValidPhotoURL\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedIdentityCard = {\r\n            Token: localStorage.Token,\r\n            IDNumber: this.state.IDNumber,\r\n            PhotoURL: this.state.PhotoURL,\r\n        }\r\n\r\n        console.log(\"Going to update Identity Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        updateIdentityCard(updatedIdentityCard).then(response => {\r\n            if (response.Message === \"Identity card is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id=\"edit-identity-card-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Identity Card</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"IdentityCard\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">ID Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"IDNumber\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.IDNumber} onChange={this.onChange} min=\"1000000000\" max=\"99999999999\" />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.IDNumber}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default EditIdentityCardDialog;","import React, { Component } from \"react\";\r\nimport EditIdentityCardDialog from \"./EditIdentityCardDialog.js\";\r\nimport { getData, deleteIdentityCard } from \"../../../../TraderFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass IdentityCardListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Key: Math.floor(Math.random() * 100),\r\n            IdentityCardID: \"\",\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            EditIdentityCardDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onRefresh = this.onRefresh.bind(this);\r\n    }\r\n\r\n    onDelete = () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        let discardedIdentityCard = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete Identity Card.`);\r\n\r\n        deleteIdentityCard(discardedIdentityCard).then(response => {\r\n            console.log(response);\r\n            if (response.Message === \"Identity card is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onRefresh();\r\n    }\r\n\r\n    onRefresh = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Identity card found.\") {\r\n                    let identityCard = response.IdentityCard;\r\n\r\n                    this.setState({\r\n                        IdentityCardID: identityCard.IdentityCardID,\r\n                        IDNumber: identityCard.IDNumber,\r\n                        PhotoURL: identityCard.PhotoURL\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        IdentityCardID: \"\",\r\n                        IDNumber: \"\",\r\n                        PhotoURL: \"./images/default_image.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"list-items-row\">\r\n                <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#identity-card-${this.state.IdentityCardID}`}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                            <i className=\"glyph glyph-add\"></i>\r\n                            <i className=\"glyph glyph-remove\"></i>\r\n                            <strong>{this.props.Index}</strong>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <img className=\"img-responsive visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                src={this.state.PhotoURL} alt=\"identity_card.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>IDENTITY CARD</span>\r\n                            </div>\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>ID Number:</span> {this.state.IDNumber}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"collapse\" id={`identity-card-${this.state.IdentityCardID}`}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-18 col-md-offset-2\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block\"\r\n                                src={this.state.PhotoURL} alt=\"trailer.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"col-md-4 text-right\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#edit-identity-card-dialog\"\r\n                                onMouseDown={() => {\r\n                                    this.setState({\r\n                                        EditIdentityCardDialog: <EditIdentityCardDialog\r\n                                            OnCancel={() => {\r\n                                                this.setState({\r\n                                                    EditIdentityCardDialog: null\r\n                                                });\r\n                                            }}\r\n                                            OnOK={cancelButton => {\r\n                                                cancelButton.click();\r\n                                                this.onRefresh();\r\n                                            }} />\r\n                                    });\r\n                                }}>\r\n                                Edit\r\n                                </button>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </div>               \r\n                {this.state.Preloader}\r\n                {this.state.EditIdentityCardDialog}\r\n            </li>        \r\n        );\r\n    }\r\n};\r\n\r\nexport default IdentityCardListItem;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateCommercialRegisterCertificate } from \"../../../../TraderFunctions.js\";\r\n\r\nclass EditCommercialRegisterCertificateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Number: \"\",\r\n            Type: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidType: true,\r\n            ValidPhotoURL: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                Type: \"\",\r\n                PhotoURL: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onRefresh = this.onRefresh.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onRefresh();\r\n    }\r\n\r\n    onRefresh = () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"CommercialRegisterCertificate\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Commercial register certificate found.\") {\r\n                    let commercialRegisterCertificate = response.CommercialRegisterCertificate;\r\n\r\n                    this.setState({\r\n                        Number: commercialRegisterCertificate.Number,\r\n                        Type: commercialRegisterCertificate.Type,\r\n                        PhotoURL: commercialRegisterCertificate.PhotoURL,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Number: \"\",\r\n                        Type: \"\",\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                        Preloader: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Certificate type is required.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidType: ValidType,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidType &&\r\n                    this.state.ValidPhotoURL\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedCommercialRegisterCertificate = {\r\n            Token: localStorage.Token,\r\n            Number: this.state.Number,\r\n            Type: this.state.Type,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to update commercial register certificate.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        updateCommercialRegisterCertificate(updatedCommercialRegisterCertificate).then(response => {\r\n            if (response.Message === \"Commercial register certificate is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id=\"edit-commercial-register-certificate-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Commercial Register Certificate</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"IdentityCard\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Certificate Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Number\" className=\"form-control\" autoComplete=\"off\" readOnly\r\n                                                        value={this.state.Number} onChange={this.onChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Certificate Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default EditCommercialRegisterCertificateDialog;","import React, { Component } from \"react\";\r\nimport EditCommercialRegisterCertificateDialog from \"./EditCommercialRegisterCertificateDialog.js\";\r\nimport { getData, deleteCommercialRegisterCertificate } from \"../../../../TraderFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass CommercialRegisterCertificateListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ID: \"\",\r\n            Number: \"\",\r\n            Type: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            EditCommercialRegisterCertificateDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onRefresh = this.onRefresh.bind(this);\r\n    }\r\n\r\n    onDelete = () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        let discardedCommercialRegisterCertificate = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete commercial register certificate.`);\r\n\r\n        deleteCommercialRegisterCertificate(discardedCommercialRegisterCertificate).then(response => {\r\n            if (response.Message === \"Commercial register certificate is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onRefresh();\r\n    }\r\n\r\n    onRefresh = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"CommercialRegisterCertificate\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Commercial register certificate found.\") {\r\n                    let commercialRegisterCertificate = response.CommercialRegisterCertificate;\r\n\r\n                    this.setState({\r\n                        ID: commercialRegisterCertificate.ID,\r\n                        Number: commercialRegisterCertificate.Number,\r\n                        Type: commercialRegisterCertificate.Type,\r\n                        PhotoURL: commercialRegisterCertificate.PhotoURL\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        ID: \"\",\r\n                        Number: \"\",\r\n                        Type: \"\",\r\n                        PhotoURL: \"./images/default_image.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"list-items-row\">\r\n                <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#commercial-register-certificate-${this.state.ID}`}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                            <i className=\"glyph glyph-add\"></i>\r\n                            <i className=\"glyph glyph-remove\"></i>\r\n                            <strong>{this.props.Index}</strong>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <img className=\"img-responsive visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                src={this.state.PhotoURL} alt=\"identity_card.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>COMMERCIAL REGISTER CERTIFICATE</span>\r\n                            </div>\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Certificate Number:</span> {this.state.Number}\r\n                            </div>\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\", color: \"#404040\" }}>Certificate Type:</span> {this.state.Type}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"collapse\" id={`commercial-register-certificate-${this.state.ID}`}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-18 col-md-offset-2\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block\"\r\n                                src={this.state.PhotoURL} alt=\"trailer.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"col-md-4 text-right\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#edit-commercial-register-certificate-dialog\"\r\n                                onMouseDown={() => {\r\n                                    this.setState({\r\n                                        EditCommercialRegisterCertificateDialog: <EditCommercialRegisterCertificateDialog\r\n                                            OnCancel={() => {\r\n                                                this.setState({\r\n                                                    EditCommercialRegisterCertificateDialog: null\r\n                                                });\r\n                                            }}\r\n                                            OnOK={cancelButton => {\r\n                                                cancelButton.click();\r\n                                                this.onRefresh();\r\n                                            }} />\r\n                                    });\r\n                                }}>\r\n                                Edit\r\n                                </button>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </div>               \r\n                {this.state.Preloader}\r\n                {this.state.EditCommercialRegisterCertificateDialog}\r\n            </li>        \r\n        );\r\n    }\r\n};\r\n\r\nexport default CommercialRegisterCertificateListItem;","import React, { Component } from \"react\";\r\nimport AddIdentityCardButton from \"./identityCard/AddIdentityCardButton.js\";\r\nimport AddCommercialRegisterCertificateButton from \"./commercialRegisterCertificate/AddCommercialRegisterCertificateButton.js\";\r\nimport IdentityCardListItem from \"./identityCard/IdentityCardListItem.js\";\r\nimport CommercialRegisterCertificateListItem from \"./commercialRegisterCertificate/CommercialRegisterCertificateListItem.js\";\r\nimport { getData } from \"../../../TraderFunctions\";\r\n\r\nclass DocumentsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddIdentityCardButton: null, \r\n            AddCommercialRegisterCertificateButton: null,\r\n            IdentityCardListItem: null,\r\n            CommercialRegisterCertificateListItem: null\r\n        };\r\n\r\n        this.onDocumentsUpdated = this.onDocumentsUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"I'm Here.. Going to update documents...\");\r\n        this.onDocumentsUpdated();\r\n    }\r\n\r\n    onDocumentsUpdated = () => {\r\n        let index = 0;\r\n        let identityCard;\r\n        let commercialRegisterCertificate;\r\n\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response =>\r\n            {\r\n                console.log(response);\r\n                if (response.Message === \"Identity card found.\") {\r\n                    identityCard = response.IdentityCard;\r\n                }\r\n                else {\r\n                    identityCard = undefined;\r\n                }\r\n\r\n                request = {\r\n                    Token: localStorage.Token,\r\n                    Get: \"CommercialRegisterCertificate\"\r\n                };\r\n\r\n                getData(request).then(response => {\r\n                    if (response.Message === \"Commercial register certificate found.\") {\r\n                        commercialRegisterCertificate = response.CommercialRegisterCertificate;\r\n                    }\r\n                    else {\r\n                        commercialRegisterCertificate = undefined;\r\n                    }\r\n\r\n                    (identityCard) ? this.setState({\r\n                        AddIdentityCardButton: null,\r\n                        IdentityCardListItem: <IdentityCardListItem\r\n                            Index={++index}\r\n                            OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                    }) : this.setState({\r\n                        AddIdentityCardButton: <AddIdentityCardButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                        IdentityCardListItem: null\r\n                    });\r\n\r\n                    (commercialRegisterCertificate) ? this.setState({\r\n                        AddCommercialRegisterCertificateButton: null,\r\n                        CommercialRegisterCertificateListItem: <CommercialRegisterCertificateListItem\r\n                            Index={++index}\r\n                            OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                    }) : this.setState({\r\n                        AddCommercialRegisterCertificateButton: <AddCommercialRegisterCertificateButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                        CommercialRegisterCertificateListItem: null\r\n                    });\r\n                });\r\n            });         \r\n        }      \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Documents</div>\r\n                <div style={{ padding: \"10px\", backgroundColor: \"#E5E5E5\" }}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-18 col-md-offset-2\"></div>\r\n                        <div className=\"col-md-4 text-right\">\r\n                            {this.state.AddIdentityCardButton}\r\n                            {this.state.AddCommercialRegisterCertificateButton}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {this.state.IdentityCardListItem}\r\n                    {this.state.CommercialRegisterCertificateListItem}\r\n                </ol>\r\n            </section>         \r\n        );\r\n    }\r\n};\r\n\r\nexport default DocumentsList;","import React, { Component } from \"react\";\r\nimport { getData } from \"../../TraderFunctions\";\r\nimport ProfilePhoto from \"./ProfilePhoto\";\r\nimport DocumentsList from \"./documents/DocumentsList\";\r\n\r\nclass Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            Email: \"\",\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\"\r\n        };\r\n\r\n        this.onRefresh = this.onRefresh.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onRefresh();\r\n    }\r\n\r\n    onRefresh = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Trader\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Trader found.\") {\r\n                    let trader = response.Trader;\r\n\r\n                    this.setState({\r\n                        Username: trader.Username,\r\n                        Email: trader.Email,\r\n                        FirstName: trader.FirstName,\r\n                        LastName: trader.LastName,\r\n                        Address: trader.Address,\r\n                        PhoneNumber: trader.PhoneNumber,\r\n                        Gender: trader.Gender,\r\n                        Nationality: trader.Nationality,\r\n                        DateOfBirth: trader.DateOfBirth\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group\" style={{ marginBottom: \"5px\", }}>\r\n                                    <ProfilePhoto />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                    {this.state.FirstName + \" \" + this.state.LastName}\r\n                                    </div>\r\n                                <div className=\"type-sh3\">\r\n                                    <span className=\"fas fa-briefcase\"></span>   Trader\r\n                                    </div>\r\n                                <div>\r\n                                    <ol className=\"list-items theme-alt\">\r\n                                        <li className=\"list-items-row\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-2\">\r\n                                                    <strong><span className=\"fas fa-at\" style={{ color: \"#008575\" }}></span></strong>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <a style={{ textDecoration: \"none\", }}>Username:</a>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    {this.state.Username}\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li className=\"list-items-row\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-2\">\r\n                                                    <strong><span className=\"fas fa-envelope\" style={{ color: \"#008575\", }}></span></strong>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <a style={{ textDecoration: \"none\", }}>Email:</a>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    {this.state.Email}\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li className=\"list-items-row\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-2\">\r\n                                                    <strong><span className=\"fas fa-phone\" style={{ color: \"#008575\" }}></span></strong>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <a style={{ textDecoration: \"none\", }}>Phone Number:</a>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    {this.state.PhoneNumber}\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ol>\r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#00221E\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <div className=\"type-h3\" style={{ paddingTop: \"10px\", }}>\r\n                                    Details\r\n                                    </div>\r\n                                <ol className=\"list-items theme-alt\">\r\n                                    <li className=\"list-items-row\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-2\">\r\n                                                <strong><span className=\"fas fa-birthday-cake\" style={{ color: \"#008575\", }}></span></strong>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Date of Birth:</a>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                {this.state.DateOfBirth}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"list-items-row\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-2\">\r\n                                                <strong><span className={(this.state.Gender === \"Male\") ? \"fas fa-male\" : \"fas fa-female\"} style={{ color: \"#008575\", }}></span></strong>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Gender:</a>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                {this.state.Gender}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"list-items-row\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-2\">\r\n                                                <strong><span className=\"fas fa-flag\" style={{ color: \"#008575\" }}></span></strong>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Nationality:</a>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                {this.state.Nationality}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"list-items-row\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-2\">\r\n                                                <strong><span className=\"fas fa-map-marker\" style={{ color: \"#008575\" }}></span></strong>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                <a style={{ textDecoration: \"none\", }}>Address:</a>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                {this.state.Address}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <DocumentsList />\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Profile;","import React, { Component } from \"react\";\r\n\r\nclass JobOffers extends Component {\r\n   render() {\r\n        return (\r\n            <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"job_requests.png\" src=\"./images/job_requests.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div className=\"col-md-12 col-md-pull-12\">\r\n                                <div className=\"type-h3\">Job Requests</div>\r\n                                <div className=\"type-sh3\">Under Construction</div>\r\n                                <p>For now, it's lonely here! Drivers' Job Requests are displayed here.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default JobOffers;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { addJobOffer } from \"../../../TraderFunctions.js\";\r\n\r\nclass AddJobOfferDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LoadingPlace: \"\",\r\n            UnloadingPlace: \"\",\r\n            TripType: \"One Way\",\r\n            CargoType: \"\",\r\n            CargoWeight: 0,          \r\n            LoadingDate: new Date(),\r\n            LoadingTime: new Date().getTime(),\r\n            AcceptedDelay: 0,\r\n            Price: 0.00,\r\n            JobOfferType: \"Fixed-Price\",\r\n            EntryExit: 0,\r\n\r\n            ValidCargoType: false,\r\n            ValidCargoWeight: false,\r\n            ValidLoadingPlace: false,\r\n            ValidUnloadingPlace: false,\r\n            ValidLoadingDate: false,\r\n            ValidLoadingTime: false,\r\n            ValidAcceptedDelay: false,\r\n            ValidPrice: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                CargoType: \"\",\r\n                CargoWeight: \"\",\r\n                LoadingPlace: \"\",\r\n                UnloadingPlace: \"\",\r\n                LoadingDate: \"\",\r\n                LoadingTime: \"\",\r\n                AcceptedDelay: \"\",\r\n                Price: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        if (name === \"EntryExit\" ||\r\n            name === \"JobOfferType\") {\r\n            console.log(`Value of ${name} is ${value}`);\r\n        }\r\n        \r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCargoType = this.state.ValidCargoType;\r\n        let ValidCargoWeight = this.state.ValidCargoWeight;\r\n        let ValidLoadingPlace = this.state.ValidLoadingPlace;\r\n        let ValidUnloadingPlace = this.state.ValidUnloadingPlace;\r\n        let ValidLoadingDate = this.state.ValidLoadingDate;\r\n        let ValidLoadingTime = this.state.ValidLoadingTime;\r\n        let ValidAcceptedDelay = this.state.AcceptedDelay;\r\n        let ValidPrice = this.state.ValidPrice;\r\n\r\n        switch (field) {\r\n            case \"CargoType\":\r\n                ValidCargoType = (value !== \"\");\r\n                Errors.CargoType = ValidCargoType ? \"\" : \"Cargo type is required.\";\r\n                break;\r\n            case \"CargoWeight\":\r\n                ValidCargoWeight = (value !== \"\");\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight is required.\"; \r\n\r\n                if (Errors.CargoWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCargoWeight = (value >= 100);\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight must be greater than 100 lbs.\";\r\n                break;\r\n            case \"LoadingPlace\":\r\n                ValidLoadingPlace = (value !== \"\");\r\n                Errors.LoadingPlace = ValidLoadingPlace ? \"\" : \"Loading place is required.\";\r\n                break;\r\n            case \"UnloadingPlace\":\r\n                ValidUnloadingPlace = (value !== \"\");\r\n                Errors.UnloadingPlace = ValidUnloadingPlace ? \"\" : \"Unloading place is required.\";\r\n                break;\r\n            case \"LoadingDate\":\r\n                ValidLoadingDate = (value !== \"\");\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date is required.\";\r\n\r\n                if (Errors.LoadingDate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidLoadingDate = (new Date(value) >= new Date());\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date must be later than yesterday.\";\r\n                break;\r\n            case \"LoadingTime\":\r\n                ValidLoadingTime = (value !== \"\");\r\n                Errors.LoadingTime = ValidLoadingTime ? \"\" : \"Loading time is required.\";\r\n                break;\r\n            case \"AcceptedDelay\":\r\n                ValidAcceptedDelay = (value !== \"\");\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay is required.\";\r\n\r\n                if (Errors.AcceptedDelay !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidAcceptedDelay = (value >= 0 && value <= 48);\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay can be in the range of 0 to 48 hours.\";\r\n                break;\r\n            case \"Price\":\r\n                ValidPrice = (value !== \"\");\r\n                Errors.Price = ValidPrice ? \"\" : \"Price is required.\";\r\n\r\n                if (Errors.Price !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPrice = (value > 0.00);\r\n                Errors.Price = ValidPrice ? \"\" : \"Price must be more than $0.00.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCargoType: ValidCargoType,\r\n            ValidCargoWeight: ValidCargoWeight,\r\n            ValidLoadingPlace: ValidLoadingPlace,\r\n            ValidUnloadingPlace: ValidUnloadingPlace,\r\n            ValidLoadingDate: ValidLoadingDate,\r\n            ValidLoadingTime: ValidLoadingTime,\r\n            ValidAcceptedDelay: ValidAcceptedDelay,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidCargoType &&\r\n                        this.state.ValidCargoWeight &&\r\n                        this.state.ValidLoadingPlace &&\r\n                        this.state.ValidUnloadingPlace &&\r\n                        this.state.ValidLoadingDate &&\r\n                        this.state.ValidLoadingTime &&\r\n                        this.state.AcceptedDelay &&\r\n                        this.state.ValidPrice\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newJobOffer = {\r\n            Token: localStorage.Token,\r\n            TripType: this.state.TripType,\r\n            CargoType: this.state.CargoType,\r\n            CargoWeight: this.state.CargoWeight,\r\n            LoadingPlace: this.state.LoadingPlace,\r\n            UnloadingPlace: this.state.UnloadingPlace,\r\n            LoadingDate: this.state.LoadingDate,\r\n            LoadingTime: this.state.LoadingTime,\r\n            EntryExit: this.state.EntryExit,\r\n            Price: this.state.Price,\r\n            AcceptedDelay: this.state.AcceptedDelay,\r\n            JobOfferType: this.state.JobOfferType\r\n        };\r\n\r\n        console.log(\"Going to add Job offer.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addJobOffer(newJobOffer).then(response => {\r\n            if (response.Message === \"Job offer is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div className=\"modal\" id=\"add-job-offer-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Add Job Offer</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                                        alt=\"job_offfers.png\" src=\"./images/job_offers.png\" data-source-index=\"2\" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Place</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"LoadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LoadingPlace} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LoadingPlace}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Unloading Place</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"UnloadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.UnloadingPlace} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.UnloadingPlace}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Trip Type</label><br />\r\n                                                    <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                        <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                            <span>{this.state.TripType}</span>\r\n                                                            <span className=\"caret\"></span>\r\n                                                        </button>\r\n                                                        <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                            <li><a onClick={() => { this.setState({ TripType: \"One Way\" }); }}>One Way</a></li>\r\n                                                            <li><a onClick={() => { this.setState({ TripType: \"Two Way\" }); }}>Two Way</a></li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Cargo Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"CargoType\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.CargoType} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.CargoType}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Cargo Weight (lbs)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"CargoWeight\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.CargoWeight} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.CargoWeight}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Date</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"LoadingDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LoadingDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LoadingDate}</span>\r\n                                                </div>                                   \r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Time</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"time\" name=\"LoadingTime\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LoadingTime} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LoadingTime}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Accepted Delay (Hours)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"AcceptedDelay\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.AcceptedDelay} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.AcceptedDelay}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Price (USD)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" min=\"0.00\" step=\"0.01\" max=\"100.00\" name=\"Price\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={this.state.Price} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Price}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <button type=\"button\" data-toggle=\"button\" className=\"btn btn-toggle-switch\"\r\n                                                        autocomplete=\"off\" aria-pressed=\"false\"\r\n                                                        onClick={() => {\r\n                                                            this.state.JobOfferType = (this.state.JobOfferType === \"Fixed-Price\") ?\r\n                                                                \"Auctionable\" : \"Fixed-Price\";\r\n                                                        }}>\r\n                                                        <span className=\"stateLabel stateLabel-on\">Auctionable Job Offer</span>\r\n                                                        <span className=\"stateLabel stateLabel-off\">Fixed-Price Job Offer</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"checkbox\">\r\n                                                        <label className=\"control-label\">\r\n                                                            <input type=\"checkbox\" name=\"EntryExit\"\r\n                                                                value={this.state.EntryExit} onChange={() => {\r\n                                                                    this.state.EntryExit = this.state.EntryExit ? 0 : 1;\r\n                                                                }}></input>\r\n                                                            <span>Entry/Exit</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>   \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddJobOfferDialog;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { updateJobOffer } from \"../../../TraderFunctions.js\";\r\n\r\nclass EditJobOfferDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobOfferID: this.props.JobOffer.JobOfferID,\r\n            LoadingPlace: this.props.JobOffer.LoadingPlace,\r\n            UnloadingPlace: this.props.JobOffer.UnloadingPlace,\r\n            TripType: this.props.JobOffer.TripType,\r\n            CargoType: this.props.JobOffer.CargoType,\r\n            CargoWeight: this.props.JobOffer.CargoWeight,\r\n            LoadingDate: this.props.JobOffer.LoadingDate,\r\n            LoadingTime: this.props.JobOffer.LoadingTime,\r\n            AcceptedDelay: this.props.JobOffer.AcceptedDelay,\r\n            Price: this.props.JobOffer.Price,\r\n            JobOfferType: this.props.JobOffer.JobOfferType,\r\n            EntryExit: this.props.JobOffer.EntryExit,\r\n\r\n            ValidCargoType: true,\r\n            ValidCargoWeight: true,\r\n            ValidLoadingPlace: true,\r\n            ValidUnloadingPlace: true,\r\n            ValidLoadingDate: true,\r\n            ValidLoadingTime: true,\r\n            ValidAcceptedDelay: true,\r\n            ValidPrice: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                CargoType: \"\",\r\n                CargoWeight: \"\",\r\n                LoadingPlace: \"\",\r\n                UnloadingPlace: \"\",\r\n                LoadingDate: \"\",\r\n                LoadingTime: \"\",\r\n                AcceptedDelay: \"\",\r\n                Price: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCargoType = this.state.ValidCargoType;\r\n        let ValidCargoWeight = this.state.ValidCargoWeight;\r\n        let ValidLoadingPlace = this.state.ValidLoadingPlace;\r\n        let ValidUnloadingPlace = this.state.ValidUnloadingPlace;\r\n        let ValidLoadingDate = this.state.ValidLoadingDate;\r\n        let ValidLoadingTime = this.state.ValidLoadingTime;\r\n        let ValidAcceptedDelay = this.state.AcceptedDelay;\r\n        let ValidPrice = this.state.ValidPrice;\r\n\r\n        switch (field) {\r\n            case \"CargoType\":\r\n                ValidCargoType = (value !== \"\");\r\n                Errors.CargoType = ValidCargoType ? \"\" : \"Cargo type is required.\";\r\n                break;\r\n            case \"CargoWeight\":\r\n                ValidCargoWeight = (value !== \"\");\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight is required.\";\r\n\r\n                if (Errors.CargoWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCargoWeight = (value >= 100);\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight must be greater than 100 lbs.\";\r\n                break;\r\n            case \"LoadingPlace\":\r\n                ValidLoadingPlace = (value !== \"\");\r\n                Errors.LoadingPlace = ValidLoadingPlace ? \"\" : \"Loading place is required.\";\r\n                break;\r\n            case \"UnloadingPlace\":\r\n                ValidUnloadingPlace = (value !== \"\");\r\n                Errors.UnloadingPlace = ValidUnloadingPlace ? \"\" : \"Unloading place is required.\";\r\n                break;\r\n            case \"LoadingDate\":\r\n                ValidLoadingDate = (value !== \"\");\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date is required.\";\r\n\r\n                if (Errors.LoadingDate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidLoadingDate = (new Date(value) >= new Date());\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date must be later than yesterday.\";\r\n                break;\r\n            case \"LoadingTime\":\r\n                break;\r\n            case \"AcceptedDelay\":\r\n                ValidAcceptedDelay = (value !== \"\");\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay is required.\";\r\n\r\n                if (Errors.AcceptedDelay !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidAcceptedDelay = (value >= 0 && value <= 48);\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay can be in the range of 0 to 48 hours.\";\r\n                break;\r\n            case \"Price\":\r\n                ValidPrice = (value !== \"\");\r\n                Errors.Price = ValidPrice ? \"\" : \"Price is required.\";\r\n\r\n                if (Errors.Price !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPrice = (value > 0.00);\r\n                Errors.Price = ValidPrice ? \"\" : \"Price must be more than $0.00.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCargoType: ValidCargoType,\r\n            ValidCargoWeight: ValidCargoWeight,\r\n            ValidLoadingPlace: ValidLoadingPlace,\r\n            ValidUnloadingPlace: ValidUnloadingPlace,\r\n            ValidLoadingDate: ValidLoadingDate,\r\n            ValidLoadingTime: ValidLoadingTime,\r\n            ValidAcceptedDelay: ValidAcceptedDelay,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidCargoType &&\r\n                    this.state.ValidCargoWeight &&\r\n                    this.state.ValidLoadingPlace &&\r\n                    this.state.ValidUnloadingPlace &&\r\n                    this.state.ValidLoadingDate &&\r\n                    this.state.ValidLoadingTime &&\r\n                    this.state.AcceptedDelay &&\r\n                    this.state.ValidPrice\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedJobOffer = {\r\n            Token: localStorage.Token,\r\n            JobOfferID: this.state.JobOfferID,\r\n            TripType: this.state.TripType,\r\n            CargoType: this.state.CargoType,\r\n            CargoWeight: this.state.CargoWeight,\r\n            LoadingPlace: this.state.LoadingPlace,\r\n            UnloadingPlace: this.state.UnloadingPlace,\r\n            LoadingDate: this.state.LoadingDate,\r\n            LoadingTime: this.state.LoadingTime,\r\n            EntryExit: this.state.EntryExit,\r\n            Price: this.state.Price,\r\n            AcceptedDelay: this.state.AcceptedDelay,\r\n            JobOfferType: this.state.JobOfferType\r\n        };\r\n\r\n        console.log(\"Going to update Job offer.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateJobOffer(updatedJobOffer).then(response => {\r\n            if (response.Message === \"Job offer is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div className=\"modal\" id={`edit-job-offer-dialog-${this.props.DialogID}`}\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Job Offer</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                                        alt=\"job_offfers.png\" src=\"./images/job_offers.png\" data-source-index=\"2\" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Place</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"LoadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LoadingPlace} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LoadingPlace}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Unloading Place</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"UnloadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.UnloadingPlace} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.UnloadingPlace}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Trip Type</label><br />\r\n                                                    <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                        <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                            <span>{this.state.TripType}</span>\r\n                                                            <span className=\"caret\"></span>\r\n                                                        </button>\r\n                                                        <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                            <li><a onClick={() => { this.setState({ TripType: \"One Way\" }); }}>One Way</a></li>\r\n                                                            <li><a onClick={() => { this.setState({ TripType: \"Two Way\" }); }}>Two Way</a></li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Cargo Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"CargoType\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.CargoType} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.CargoType}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Cargo Weight (lbs)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"CargoWeight\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.CargoWeight} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.CargoWeight}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Date</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"LoadingDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LoadingDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LoadingDate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Time</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"time\" name=\"LoadingTime\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LoadingTime} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LoadingTime}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Accepted Delay (Hours)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"AcceptedDelay\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.AcceptedDelay} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.AcceptedDelay}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Price (USD)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" min=\"0.00\" step=\"0.01\" max=\"100.00\" name=\"Price\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={this.state.Price} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Price}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <button type=\"button\" data-toggle=\"button\" className={(this.state.JobOfferType === \"Auctionable\") ? \"btn btn-toggle-switch active\" : \"btn btn-toggle-switch\"}\r\n                                                        autocomplete=\"off\" aria-pressed={(this.state.JobOfferType === \"Auctionable\") ? \"true\" : \"false\"}\r\n                                                        onClick={() => {\r\n                                                            this.state.JobOfferType = (this.state.JobOfferType === \"Fixed-Price\") ?\r\n                                                                \"Auctionable\" : \"Fixed-Price\";\r\n                                                            this.validateField(\"\", \"\");\r\n                                                        }}>\r\n                                                        <span className=\"stateLabel stateLabel-on\">Auctionable Job Offer</span>\r\n                                                        <span className=\"stateLabel stateLabel-off\">Fixed-Price Job Offer</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"checkbox\">\r\n                                                        <label className=\"control-label\">\r\n                                                            <input type=\"checkbox\" name=\"EntryExit\" defaultChecked={(this.state.EntryExit === 1) ? \"checked\" : \"\"}\r\n                                                                value={this.state.EntryExit} onChange={() => {\r\n                                                                    this.state.EntryExit = (this.state.EntryExit === 1) ? 0 : 1;\r\n                                                                    this.validateField(\"\", \"\");\r\n                                                                }}></input>\r\n                                                            <span>Entry/Exit</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default EditJobOfferDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { getData, deleteJobOffer } from \"../../../TraderFunctions.js\";\r\nimport EditJobOfferDialog from \"./EditJobOfferDialog.js\";\r\n\r\nclass JobOffersList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllJobOffers: [],\r\n            JobOffers: [],\r\n            EditJobOfferDialogs: [],\r\n            SearchString: \"\",\r\n            Preloader: null,\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    onDelete = index => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedJobOffer = {\r\n            Token: localStorage.Token,\r\n            JobOfferID: this.state.JobOffers[index].JobOfferID \r\n        };\r\n\r\n        console.log(`Going to delete JobOffers[${index}]...`);\r\n\r\n        deleteJobOffer(discardedJobOffer).then(response => {\r\n            console.log(response);\r\n            if (response.Message === \"Job offer is deleted.\") {\r\n                this.onComponentUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobOffers\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job offers found.\") {\r\n                    console.log(response);\r\n                    this.setState({\r\n                        AllJobOffers: response.JobOffers,\r\n                        JobOffers: response.JobOffers\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllJobOffers: [],\r\n                        JobOffers: []\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.SearchString === \"\") {         \r\n            this.setState({\r\n                JobOffers: this.state.AllJobOffers\r\n            });\r\n            console.log(\"AFTER SETTING STATE...\");\r\n        }\r\n      \r\n        const allJobOffers = this.state.AllJobOffers;\r\n        let filteredJobOffers = [];\r\n\r\n        for (var i = 0; i < allJobOffers.length; i++) {\r\n            if (allJobOffers[i].LoadingPlace.includes(this.state.SearchString) ||\r\n                allJobOffers[i].UnloadingPlace.includes(this.state.SearchString)) {\r\n                filteredJobOffers[i] = allJobOffers[i];\r\n            }\r\n        }\r\n\r\n        console.log(filteredJobOffers);\r\n\r\n        this.setState({\r\n            JobOffers: filteredJobOffers\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Your Job Offers</div>\r\n                <nav className=\"navbar navbar-default\">\r\n                    <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5\" }}>\r\n                        <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                            <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                                <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search by Places\"\r\n                                            autoComplete=\"off\"\r\n                                            style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                            value={this.state.SearchString} onChange={this.onChange} />\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {this.state.JobOffers.map((jobOffer, index) => {\r\n                        const hoursSinceCreated = Math.abs(new Date() - new Date(jobOffer.TimeCreated)) / 36e5;\r\n\r\n                        return <li className=\"list-items-row\" key={index}>\r\n                            <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#${jobOffer.JobOfferID}`}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-2\">\r\n                                        <i className=\"glyph glyph-add\"></i>\r\n                                        <i className=\"glyph glyph-remove\"></i>\r\n                                        <strong>{index + 1}</strong>\r\n                                    </div>\r\n                                    <div className=\"col-md-2\">\r\n                                        <img src=\"./images/job_offers.png\" alt=\"job_offers.png\" height=\"50\" />\r\n                                    </div>\r\n                                    <div className=\"col-md-6\">\r\n                                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                            <span className=\"fas fa-map-marker-alt\" style={{ color: \"#606060\" }}></span>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Loading Place:</span> {jobOffer.LoadingPlace}\r\n                                        </div>\r\n                                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                            <span className=\"fas fa-map-marker-alt\" style={{ color: \"#606060\" }}></span>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Unloading Place:</span> {jobOffer.UnloadingPlace}\r\n                                        </div>\r\n                                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                            <span className=\"fas fa-map-signs\" style={{ color: \"#606060\" }}></span>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Trip Type:</span> {jobOffer.TripType}\r\n                                        </div>\r\n                                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                            <span className=\"fas fa-tag\" style={{ color: \"#606060\" }}></span>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Price:</span> {`$${jobOffer.Price}`}\r\n                                        </div>\r\n                                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                            <span className=\"fas fa-clock\" style={{ color: \"#606060\" }}></span>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Accepted Delay:</span> {`${jobOffer.AcceptedDelay} Hour(s)`}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6\">\r\n                                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                            <span className=\"fas fa-box\" style={{ color: \"#606060\" }}></span>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Cargo Type:</span> {jobOffer.CargoType}\r\n                                        </div>\r\n                                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                            <span className=\"fas fa-weight\" style={{ color: \"#606060\" }}></span>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Cargo Weight:</span> {`${jobOffer.CargoWeight} lbs.`}\r\n                                        </div>\r\n                                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                            <span className=\"fas fa-calendar\" style={{ color: \"#606060\" }}></span>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Loading Date:</span> {jobOffer.LoadingDate}\r\n                                        </div>\r\n                                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                            <span className=\"fas fa-clock\" style={{ color: \"#606060\" }}></span>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Loading Time:</span> {jobOffer.LoadingTime}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6\">\r\n                                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                            <span className=\"fas fa-hand-holding-usd\" style={{ color: \"#606060\" }}></span>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Offer Type:</span> {jobOffer.JobOfferType}\r\n                                        </div>\r\n                                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                            <span className=\"fas fa-id-badge\" style={{ color: \"#606060\" }}></span>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Entry/Exit:</span> {(jobOffer.EntryExit === 1) ?\r\n                                                <span className=\"fa fa-check-circle\" style={{ fontWeight: \"bold\", color: \"#25AE88\" }}></span> :\r\n                                                <span className=\"fa fa-times-circle\" style={{ fontWeight: \"bold\", color: \"#D75A4A\" }}></span>}\r\n                                        </div>\r\n                                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                            <span className=\"fas fa-plug\" style={{ color: \"#606060\" }}></span>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Available:</span> {(hoursSinceCreated < jobOffer.WaitingTime) ?\r\n                                                <span className=\"fa fa-check-circle\" style={{ fontWeight: \"bold\", color: \"#25AE88\" }}></span> :\r\n                                                <span className=\"fa fa-times-circle\" style={{ fontWeight: \"bold\", color: \"#D75A4A\" }}></span>}\r\n                                        </div>\r\n                                        <div style={{ padding: \"3px 0px 3px 0px\" }}>\r\n                                            <span className=\"fas fa-calendar\" style={{ color: \"#606060\" }}></span>\r\n                                            <span style={{ fontWeight: \"bold\", color: \"#606060\" }}>Created:</span> {`${(Math.floor(hoursSinceCreated))} Hour(s) Ago`}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"collapse\" id={jobOffer.JobOfferID}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-18 col-md-offset-2\">\r\n                                    </div>\r\n                                    <div className=\"col-md-4 text-right\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-primary\"\r\n                                            data-toggle=\"modal\"\r\n                                            data-target={`#edit-job-offer-dialog-${index}`}\r\n                                            onMouseDown={() => {\r\n                                                let editJobOfferDialogs = this.state.EditJobOfferDialogs;\r\n\r\n                                                editJobOfferDialogs[index] = <EditJobOfferDialog\r\n                                                    DialogID={index}\r\n                                                    JobOffer={jobOffer}\r\n                                                    OnCancel={() => {\r\n                                                        let editJobOfferDialogs = this.state.EditJobOfferDialogs;\r\n                                                        editJobOfferDialogs[index] = null;\r\n\r\n                                                        this.setState({\r\n                                                            EditJobOfferDialogs: editJobOfferDialogs\r\n                                                        });\r\n                                                    }}\r\n                                                    OnOK={cancelButton => {\r\n                                                        cancelButton.click();\r\n                                                        this.onComponentUpdated();\r\n                                                    }} />;\r\n\r\n                                                this.setState({\r\n                                                    EditJobOfferDialogs: editJobOfferDialogs\r\n                                                });\r\n                                            }}>\r\n                                            Edit\r\n                                            </button>\r\n                                        <button type=\"button\" className=\"btn btn-danger\" onClick={async () => { await this.onDelete(index); }}>Delete</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {this.state.EditJobOfferDialogs[index]}\r\n                        </li>\r\n                    })}\r\n                </ol>\r\n                {this.state.Preloader}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default JobOffersList;","import React, { Component } from \"react\";\r\nimport AddJobOfferDialog from \"./AddJobOfferDialog.js\";\r\nimport JobOffersList from \"./JobOffersList.js\";\r\n\r\nclass JobOffers extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddJobOfferDialog: null,\r\n            JobOffersList: null\r\n        };\r\n\r\n        this.onJobOffersUpdated = this.onJobOffersUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onJobOffersUpdated();\r\n    }\r\n\r\n    onJobOffersUpdated = () => {\r\n        this.JobOffersList.onComponentUpdated();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"job_offers.png\" src=\"./images/job_offers.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div className=\"col-md-12 col-md-pull-12\">\r\n                                <div className=\"type-h3\">Job Offers</div>\r\n                                <div className=\"type-sh3\">Manage Your Job Offers</div>\r\n                                <p>Hi There! Want to transport your freight somewhere? Why not create a new job offer now!!</p>\r\n                                <div className=\"btn-group\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-primary\"\r\n                                        data-toggle=\"modal\"\r\n                                        data-target=\"#add-job-offer-dialog\"\r\n                                        onMouseDown={() => {\r\n                                            this.setState({\r\n                                                AddJobOfferDialog: (<AddJobOfferDialog\r\n                                                    OnCancel={() => {\r\n                                                        this.setState({\r\n                                                            AddJobOfferDialog: null,\r\n                                                        });\r\n                                                    }}\r\n                                                    OnOK={cancelButton => {\r\n                                                        cancelButton.click();\r\n                                                        this.onJobOffersUpdated();\r\n                                                    }} />),\r\n                                            });\r\n                                        }}>\r\n                                        New Job Offer\r\n                                        </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <JobOffersList ref={jobOffersList => this.JobOffersList = jobOffersList} />\r\n                {this.state.AddJobOfferDialog}             \r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default JobOffers;","import React, { Component } from \"react\";\r\n\r\nclass OnGoingJobs extends Component {\r\n   render() {\r\n        return (\r\n            <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"on_going_jobs.png\" src=\"./images/on_going_jobs.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div className=\"col-md-12 col-md-pull-12\">\r\n                                <div className=\"type-h3\">On-Going Jobs</div>\r\n                                <div className=\"type-sh3\">Under Construction</div>\r\n                                <p>For now, it's lonely here!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default OnGoingJobs;","import React, { Component } from \"react\";\r\nimport JobRequests from \"./jobRequests/JobRequests.js\"; \r\nimport JobOffers from \"./jobOffers/JobOffers.js\";\r\nimport OnGoingJobs from \"./onGoingJobs/OnGoingJobs.js\";\r\n\r\nclass Jobs extends Component {\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"entity-list theme-alt\" style={{ backgroundColor: \"#161616\" }}>\r\n                    <div className=\"entity-list-item\" href=\"#job-requests\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">\r\n                        <div className=\"item-icon\" style={{ backgroundColor: \"rgba(0, 0, 0, 0)\" }}>\r\n                            <img src=\"./images/job_requests.png\" alt=\"job_requests.png\" />\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            \r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Job Requests</div>\r\n                            <div className=\"content-text-secondary\">Explore job requests from Drivers.</div>     \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\" href=\"#job-offers\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">\r\n                        <div className=\"item-icon\" style={{ backgroundColor: \"rgba(0, 0, 0, 0)\" }}>\r\n                            <img src=\"./images/job_offers.png\" alt=\"job_offers.png\" />\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Job Offers</div>\r\n                            <div className=\"content-text-secondary\">Create job opportunities for places of your own choice.</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\" href=\"#on-going-jobs\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">\r\n                        <div className=\"item-icon\" style={{ backgroundColor: \"rgba(0, 0, 0, 0)\" }}>\r\n                            <img src=\"./images/on_going_jobs.png\" alt=\"on_going_jobs.png\" />\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">On-Going Jobs</div>\r\n                            <div className=\"content-text-secondary\">Manage your jobs that are in progress.</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"tab-content\">\r\n                    <div role=\"tabpanel\" className=\"tab-pane active\" id=\"job-requests\">\r\n                        <JobRequests />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"job-offers\">\r\n                        <JobOffers />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"on-going-jobs\">\r\n                        <OnGoingJobs />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Jobs;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { getData, generalSettings } from \"../../TraderFunctions\";\r\n\r\nclass GeneralSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\",\r\n\r\n            ValidFirstName: true,\r\n            ValidLastName: true,\r\n            ValidPhoneNumber: true,\r\n\r\n            ValidForm: false,\r\n            SettingsSaved: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                PhoneNumber: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            this.setState({\r\n                Preloader: <Preloader />\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Trader\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader found.\") {\r\n                    let trader = response.Trader;\r\n\r\n                    this.setState({\r\n                        FirstName: trader.FirstName,\r\n                        LastName: trader.LastName,\r\n                        Address: trader.Address,\r\n                        PhoneNumber: trader.PhoneNumber,\r\n                        Gender: trader.Gender,\r\n                        Nationality: trader.Nationality,\r\n                        DateOfBirth: trader.DateOfBirth,\r\n                        Preloader: null,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        FirstName: \"\",\r\n                        LastName: \"\",\r\n                        Address: \"\",\r\n                        PhoneNumber: \"\",\r\n                        Gender: \"\",\r\n                        Nationality: \"\",\r\n                        DateOfBirth: \"\",\r\n                        Preloader: null,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFirstName = this.state.ValidFirstName;\r\n        let ValidLastName = this.state.ValidLastName;\r\n        let ValidPhoneNumber = this.state.ValidPhoneNumber;\r\n\r\n        switch (field) {\r\n            case \"FirstName\":\r\n                ValidFirstName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.FirstName = ValidFirstName ? \"\" : \"First name is invalid.\";\r\n                break;\r\n            case \"LastName\":\r\n                ValidLastName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.LastName = ValidLastName ? \"\" : \"Last name is invalid.\";\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = value.match(/^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/);\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFirstName: ValidFirstName,\r\n            ValidLastName: ValidLastName,\r\n            ValidPhoneNumber: ValidPhoneNumber,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidFirstName &&\r\n                    this.state.ValidLastName &&\r\n                    this.state.ValidPhoneNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedTrader = {\r\n            Token: localStorage.Token,\r\n            FirstName: this.state.FirstName,\r\n            LastName: this.state.LastName,\r\n            Address: this.state.Address,\r\n            PhoneNumber: this.state.PhoneNumber,\r\n            Gender: this.state.Gender,\r\n            Nationality: this.state.Nationality,\r\n            DateOfBirth: this.state.DateOfBirth,\r\n        }\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await generalSettings(updatedTrader).then(response => {\r\n            if (response.Message === \"Trader is updated.\") {\r\n                this.forceUpdate();\r\n                this.props.OnSettingsSaved();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>General Settings</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-comment\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"FirstName\" autoComplete=\"off\"\r\n                                        value={this.state.FirstName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">First Name</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"FirstName\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-comment\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"LastName\" autoComplete=\"off\"\r\n                                        value={this.state.LastName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Last Name</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"LastName\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-birthday-cake\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\" className=\"form-control\" name=\"DateOfBirth\" autoComplete=\"off\"\r\n                                        value={this.state.DateOfBirth} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Date of Birth</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className={this.state.Gender === \"Male\" ? \"fas fa-male\" : \"fas fa-female\"}></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"dropdown\" style={{ width: \"193px\", maxWidth: \"296px\", }}>\r\n                                    <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                        aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                        <span>{this.state.Gender}</span>\r\n                                        <span className=\"caret\"></span>\r\n                                    </button>\r\n                                    <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                        <li><a onClick={() => { this.setState({ Gender: \"Male\" }); this.validateField(\"\", \"\"); }}>Male</a></li>\r\n                                        <li><a onClick={() => { this.setState({ Gender: \"Female\" }); this.validateField(\"\", \"\"); }}>Female</a></li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Gender</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-flag\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"Nationality\" autoComplete=\"off\"\r\n                                        value={this.state.Nationality} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Nationality</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-phone\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autoComplete=\"off\"\r\n                                        placeholder=\"+XXXXXXXXXXXX\" value={this.state.PhoneNumber} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Phone Number</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"PhoneNumber\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-location-arrow\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"Address\" autoComplete=\"off\"\r\n                                        value={this.state.Address} onChange={this.onChange} style={{ width: \"393px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Address</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default GeneralSettings;","import React, { Component } from \"react\";\r\n\r\nclass Payments extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"jumbotron\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"tools.png\" src=\"./images/tools.png\" style={{ borderRadius: \"50%\" }} data-source-index=\"1\" />\r\n                            </div>\r\n                            <div class=\"col-md-12 col-md-pull-12\">\r\n                                <div class=\"type-h3\" style={{ color: \"#008575\", }}>\r\n                                    Payments\r\n                    </div>\r\n                                <div class=\"type-sh3\" style={{ color: \"#949496\", }}>\r\n                                    Under-Construction\r\n                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Payments;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { usernameAndEmailSettings } from \"../../TraderFunctions.js\";\r\n\r\nclass CodeConfirmationDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ConfirmCode: \"\",\r\n\r\n            ValidConfirmCode: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                ConfirmCode: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidConfirmCode = this.state.ValidConfirmCode;\r\n\r\n        ValidConfirmCode = value === this.props.Code;\r\n        Errors.ConfirmCode = ValidConfirmCode ? \"\" : \"Invalid code.\";\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidConfirmCode: ValidConfirmCode,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidConfirmCode\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedTrader = {\r\n            Token: localStorage.Token,\r\n            Username: this.props.Username,\r\n            Email: this.props.Email,\r\n        };\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await usernameAndEmailSettings(updatedTrader).then(response => {\r\n            if (response.Message === \"Trader is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section class=\"text-left\">\r\n                <div\r\n                    class=\"modal in\" id=\"code-confirmation-dialog\" tabindex=\"-1\"\r\n                    role=\"dialog\" aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\"\r\n                    style={{ display: \"block\" }}>\r\n                    <div class=\"modal-dialog\">\r\n                        {this.state.Preloader}\r\n                        <div class=\"modal-dialog\">\r\n                            <div class=\"modal-content\">\r\n                                <section>\r\n                                    <form noValidate onSubmit={this.onSubmit}>\r\n                                        <div class=\"modal-header\">\r\n                                            <img alt=\"passcode.png\" src=\"./images/passcode.png\" height=\"60\" />\r\n                                            <div class=\"type-h3\">Email Confirmation</div>\r\n                                            <div class=\"type-sh3\">We delivered a confirmation code to your email.</div>\r\n                                        </div>\r\n                                        <div class=\"modal-body\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-md-12\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <label class=\"control-label\">Confirmation Code</label>\r\n                                                        <input type=\"text\" name=\"ConfirmCode\" class=\"form-control\" autocomplete=\"off\"\r\n                                                            value={this.state.ConfirmCode} onChange={this.onChange} />\r\n                                                        <span class=\"text-danger\">{this.state.Errors.ConfirmCode}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"modal-footer\">\r\n                                            <button class=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                                ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                            <input type=\"submit\" value=\"Confirm\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </form>\r\n                                </section>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default CodeConfirmationDialog;","import React, { Component } from \"react\";\r\nimport CodeConfirmationDialog from \"./CodeConfirmationDialog.js\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport {\r\n    getData,\r\n    validateUsername,\r\n    validateEmail,\r\n    sendCode,\r\n    usernameAndEmailSettings\r\n} from \"../../TraderFunctions\";\r\n\r\nclass UsernameAndEmailSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            NewUsername: \"\",\r\n\r\n            Email: \"\",\r\n            NewEmail: \"\",\r\n\r\n            Code: \"\",\r\n\r\n            ValidNewUsername: true,\r\n            ValidNewEmail: true,\r\n\r\n            ValidForm: false,\r\n            CodeConfirmationDialog: null,\r\n\r\n            Errors: {\r\n                NewUsername: \"\",\r\n                NewEmail: \"\",\r\n            },\r\n\r\n            CodeConfirmation: \"\",\r\n            Preloader: null\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            this.setState({\r\n                Preloader: <Preloader />\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Trader\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader found.\") {\r\n                    let trader = response.Trader;\r\n\r\n                    this.setState({\r\n                        Username: trader.Username,\r\n                        NewUsername: trader.Username,\r\n                        Email: trader.Email,\r\n                        NewEmail: trader.Email,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Username: \"\",\r\n                        NewUsername: \"\",\r\n                        Email: \"\",\r\n                        NewEmail: \"\",\r\n                        Preloader: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewUsername = this.state.ValidNewUsername;\r\n        let ValidNewEmail = this.state.ValidNewEmail;\r\n        \r\n        switch (field) {\r\n            case \"NewUsername\":\r\n                ValidNewUsername = (value !== \"\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is required.\";\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value.match(/^[a-z0-9]+$/i));\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is invalid.\";\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value !== \"Username is unavailable.\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is unavailable.\";\r\n                break;\r\n            case \"NewEmail\":\r\n                ValidNewEmail = (value !== \"\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is required.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i));\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is invalid.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value !== \"Email is already taken.\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is already taken.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewUsername: ValidNewUsername,\r\n            ValidNewEmail: ValidNewEmail,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidNewUsername &&\r\n                    this.state.ValidNewEmail\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername === this.state.Username &&\r\n            this.state.NewEmail === this.state.Email) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername !== this.state.Username) {\r\n            const response = await validateUsername(this.state.NewUsername);\r\n\r\n            if (response.Message === \"Username is unavailable.\") {\r\n                this.validateField(\"NewUsername\", response.Message);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail !== this.state.Email) {\r\n            const response = await validateEmail(this.state.NewEmail);\r\n            if (response.Message === \"Email is already taken.\") {\r\n                this.validateField(\"NewEmail\", response.Message);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail === this.state.Email) {\r\n            const updatedTrader = {\r\n                Token: localStorage.Token,\r\n                Username: this.state.NewUsername,\r\n                Email: this.state.NewEmail,\r\n            };\r\n\r\n            this.setState({\r\n                Preloader: <Preloader />\r\n            });\r\n\r\n            console.log(\"Going to update username.\");\r\n            await usernameAndEmailSettings(updatedTrader).then(response => {  \r\n                console.log(response);\r\n                if (response.Message === \"Trader is updated.\") {\r\n                    \r\n                    this.props.OnSettingsSaved();\r\n                }\r\n\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            console.log(\"Going to send code...\");\r\n            await sendCode(this.state.NewEmail).then(response => {\r\n                console.log(response);\r\n                if (response.Message === \"Code sent.\") {\r\n                    this.setState({\r\n                        CodeConfirmationDialog: <CodeConfirmationDialog\r\n                            Code={response.Code}\r\n                            Username={this.state.NewUsername}\r\n                            Email={this.state.NewEmail}\r\n                            OnCancel={() => {\r\n                                this.setState({\r\n                                    CodeConfirmationDialog: null,\r\n                                });\r\n                            }}\r\n                            OnOK={cancelButton => {\r\n                                cancelButton.click();\r\n                                this.props.OnSettingsSaved();\r\n                            }} />\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Username and Emails</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-at\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"NewUsername\" className=\"form-control\" autoComplete=\"off\"\r\n                                        value={this.state.NewUsername} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Username</div>\r\n                                <div className=\"content-text-secondary text-danger\">{this.state.Errors[\"NewUsername\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-envelope\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"email\" name=\"NewEmail\" className=\"form-control\" placeholder=\"someone@example.com\" autoComplete=\"off\"\r\n                                        value={this.state.NewEmail} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Email</div>\r\n                                <div className=\"content-text-secondary text-danger\">{this.state.Errors[\"NewEmail\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n                {this.state.CodeConfirmationDialog}\r\n            </div> \r\n        );\r\n    }\r\n};\r\n\r\nexport default UsernameAndEmailSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { validatePassword, passwordSettings } from \"../../TraderFunctions\";\r\n\r\nclass PasswordSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            CurrentPassword: \"\",\r\n            NewPassword: \"\",\r\n            ConfirmPassword: \"\",\r\n\r\n            ValidCurrentPassword: false,\r\n            ValidNewPassword: false,\r\n            ValidConfirmPassword: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                CurrentPassword: \"\",\r\n                NewPassword: \"\",\r\n                ConfirmPassword: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    async validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCurrentPassword = this.state.ValidCurrentPassword;\r\n        let ValidNewPassword = this.state.ValidNewPassword;\r\n        let ValidConfirmPassword = this.state.ValidConfirmPassword;\r\n\r\n        switch (field) {\r\n            case \"CurrentPassword\":\r\n                ValidCurrentPassword = (value !== \"\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is required.\";\r\n\r\n                if (Errors.CurrentPassword !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCurrentPassword = (value !== \"Invalid password.\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is invalid.\";\r\n                break;\r\n            case \"NewPassword\":\r\n                ValidNewPassword = value.length >= 6;\r\n                Errors.NewPassword = ValidNewPassword ? \"\" : \"Password is too short.\";\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                ValidConfirmPassword = value === this.state.NewPassword;\r\n                Errors.ConfirmPassword = ValidConfirmPassword ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCurrentPassword: ValidCurrentPassword,\r\n            ValidNewPassword: ValidNewPassword,\r\n            ValidConfirmPassword: ValidConfirmPassword,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidCurrentPassword &&\r\n                    this.state.ValidNewPassword &&\r\n                    this.state.ValidConfirmPassword\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        let passwordPackage = {\r\n            Token: localStorage.Token,\r\n            Password: this.state.CurrentPassword\r\n        };\r\n\r\n        await validatePassword(passwordPackage).then(async response => {\r\n            if (response.Message === \"Invalid password.\") {\r\n                this.validateField(\"CurrentPassword\", response.Message);\r\n            }\r\n            else {\r\n                const updatedTrader = {\r\n                    Token: localStorage.Token,\r\n                    Password: this.state.NewPassword\r\n                };\r\n\r\n                this.setState({\r\n                    Preloader: <Preloader />\r\n                });\r\n\r\n                await passwordSettings(updatedTrader).then(response => {\r\n                    if (response.Message === \"Trader is updated.\") {\r\n                        this.props.OnSettingsSaved();\r\n                    }\r\n\r\n                    this.setState({\r\n                        Preloader: null\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\" }}>Change Password</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-key\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" name=\"CurrentPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                        value={this.state.CurrentPassword} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Current Password</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"CurrentPassword\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-key\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" name=\"NewPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                        value={this.state.NewPassword} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">New Password</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"NewPassword\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-key\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" name=\"ConfirmPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                        value={this.state.ConfirmPassword} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Confirm Password</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"ConfirmPassword\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default PasswordSettings;","import React, { Component } from \"react\";\r\nimport GeneralSettings from \"./GeneralSettings\";\r\nimport UsernameAndEmailSettings from \"./UsernameAndEmailSettings\";\r\nimport PasswordSettings from \"./PasswordSettings\";\r\n\r\nclass Settings extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <GeneralSettings ref=\"GeneralSettings\" OnSettingsSaved={() => { this.refs.GeneralSettings.componentDidMount(); }} />\r\n                <UsernameAndEmailSettings ref=\"UsernameAndEmailSettings\" OnSettingsSaved={() => { this.refs.UsernameAndEmailSettings.componentDidMount(); }} />\r\n                <PasswordSettings ref=\"PasswordSettings\" OnSettingsSaved={() => { this.refs.PasswordSettings.forceUpdate(); }} />\r\n            </div> \r\n        );\r\n    }\r\n};\r\n\r\nexport default Settings;","import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { TabMenu } from \"../../../styles/TabStyles\";\r\nimport Profile from \"./profile/Profile\";\r\nimport Jobs from \"./jobs/Jobs\";\r\nimport Payments from \"./payments/Payments\";\r\nimport Settings from \"./settings/Settings\";\r\n\r\nclass TradersDashboard extends Component {\r\n    render() {\r\n        if (!localStorage.Token) {\r\n            return <Redirect to=\"/login\" />;\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={TabMenu}>\r\n                        <li role=\"presentation\" className=\"active\">\r\n                            <a href=\"#profile\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\" onClick={() => { this.refs.Profile.componentDidMount(); }}>Profile</a>\r\n                        </li>                        \r\n                        <li role=\"presentation\"><a href=\"#jobs\" aria-controls=\"jobs\" role=\"tab\" data-toggle=\"tab\">Jobs</a></li>\r\n                        <li role=\"presentation\"><a href=\"#payments\" aria-controls=\"payments\" role=\"tab\" data-toggle=\"tab\">Payments</a></li>\r\n                        <li role=\"presentation\"><a href=\"#settings\" aria-controls=\"settings\" role=\"tab\" data-toggle=\"tab\">Settings</a></li>\r\n                    </ul>\r\n\r\n                    <div className=\"tab-content\">\r\n                        <div role=\"tabpanel\" className=\"tab-pane active\" id=\"profile\">\r\n                            <Profile ref=\"Profile\" />\r\n                        </div>\r\n                        <div role=\"tabpanel\" className=\"tab-pane\" id=\"jobs\">\r\n                            <Jobs />\r\n                        </div>\r\n                        <div role=\"tabpanel\" className=\"tab-pane\" id=\"payments\">\r\n                            Payments\r\n                        </div>\r\n                        <div role=\"tabpanel\" className=\"tab-pane\" id=\"settings\">\r\n                            <Settings />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default TradersDashboard;","import React, { Component } from \"react\";\r\n\r\nclass BackToTop extends Component {\r\n    render() {\r\n        return (\r\n            <a id=\"up\" href=\"#top\" className=\"back-to-top\" style={{ position: \"fixed\", right: \"20px\", bottom: \"20px\", }}>\r\n                <i className=\"glyph glyph-up\" style={{ color: \"#008575\", }}></i>\r\n                <span className=\"sr-only\">Back to top</span>\r\n            </a>\r\n        );\r\n    }\r\n};\r\n\r\nexport default BackToTop;","import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <footer className=\"border-top footer theme-default color-bg-light-neutral-high text-light\">\r\n                <div className=\"container\">\r\n                    &copy; {new Date().getFullYear()} - Core Infinite - <a asp-area=\"\" asp-controller=\"Home\" asp-action=\"Privacy\">Privacy</a>\r\n                </div>\r\n            </footer>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Header from \"./components/shared/Header\";\r\nimport Landing from \"./components/landing/Landing\";\r\nimport Login from \"./components/login/Login\";\r\nimport Register from \"./components/register/Register\";\r\nimport EmailConfirmation from \"./components/register/EmailConfirmation\";\r\nimport AccountSetup from \"./components/register/AccountSetup\";\r\nimport Congratulations from \"./components/register/Congratulations\";\r\nimport DriversDashboard from \"./components/drivers/dashboard/DriversDashboard.js\"\r\nimport TradersDashboard from \"./components/traders/dashboard/TradersDashboard.js\"\r\nimport BackToTop from \"./controls/BackToTop\";\r\nimport Footer from \"./components/shared/Footer\";\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Router basename=\"/\">\r\n                <div className=\"App\">\r\n                    <Header />\r\n                    <Route exact path=\"/\" component={Landing} />\r\n                    <Route exact path=\"/register\" component={Register} />\r\n                    <Route exact path=\"/emailConfirmation\" component={EmailConfirmation} />\r\n                    <Route exact path=\"/setupAccount\" component={AccountSetup} />\r\n                    <Route exact path=\"/congratulations\" component={Congratulations} />\r\n                    <Route exact path=\"/login\" component={Login} />\r\n                    <Route exact path=\"/drivers\" component={DriversDashboard} />\r\n                    <Route exact path=\"/traders\" component={TradersDashboard} />\r\n                    <BackToTop />\r\n                    <Footer />\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = {\r\n    APP_NAME: \"Naqel\",\r\n    USER_TOKEN: \"userToken\",\r\n    USER_NOT_FOUND: \"Username not found.\",\r\n    INVALID_PASSWORD: \"Invalid password.\",\r\n    USERNAME_OR_EMAIL_TAKEN: \"Username or email is already taken.\",\r\n    NAQEL_SERVER: \"https://naqelserver.azurewebsites.net/\",\r\n    IMAGE_UPLOADER: \"https://us-central1-naqel-transport-jobs.cloudfunctions.net/uploadImage\"\r\n};"],"sourceRoot":""}
{"version":3,"sources":["components/shared/Header.js","components/landing/Landing.js","components/drivers/DriverFunctions.js","components/traders/TraderFunctions.js","styles/MiscellaneousStyles.js","controls/Preloader.js","styles/CardStyles.js","components/login/Login.js","components/register/Register.js","components/register/EmailConfirmation.js","components/register/AccountSetup.js","components/register/Congratulations.js","components/drivers/dashboard/profile/ProfilePhoto.js","controls/ImageUploader.js","components/drivers/dashboard/profile/documents/drivingLicence/AddDrivingLicenceDialog.js","components/drivers/dashboard/profile/documents/drivingLicence/AddDrivingLicenceButton.js","components/drivers/dashboard/profile/documents/entryExitCard/AddEntryExitCardDialog.js","components/drivers/dashboard/profile/documents/entryExitCard/AddEntryExitCardButton.js","components/drivers/dashboard/profile/documents/identityCard/AddIdentityCardDialog.js","components/drivers/dashboard/profile/documents/identityCard/AddIdentityCardButton.js","components/drivers/dashboard/profile/documents/drivingLicence/EditDrivingLicenceDialog.js","components/drivers/dashboard/profile/documents/drivingLicence/DrivingLicenceListItem.js","components/drivers/dashboard/profile/documents/entryExitCard/EditEntryExitCardDialog.js","components/drivers/dashboard/profile/documents/entryExitCard/EntryExitCardListItem.js","components/drivers/dashboard/profile/documents/identityCard/EditIdentityCardDialog.js","components/drivers/dashboard/profile/documents/identityCard/IdentityCardListItem.js","components/drivers/dashboard/profile/documents/DocumentsList.js","controls/Rating.js","controls/PageHeading.js","components/drivers/dashboard/profile/Profile.js","components/drivers/dashboard/trucks/TruckSettings.js","components/drivers/dashboard/trucks/AddTruckDialog.js","components/drivers/dashboard/trucks/trailers/AddTrailerDialog.js","components/drivers/dashboard/trucks/trailers/AddTrailer.js","components/drivers/dashboard/trucks/trailers/EditTrailerDialog.js","components/drivers/dashboard/trucks/trailers/TrailersList.js","components/drivers/dashboard/trucks/trailers/Trailers.js","components/drivers/dashboard/trucks/Truck.js","components/drivers/dashboard/permits/AddPermitLicenceDialog.js","components/drivers/dashboard/permits/EditPermitLicenceDialog.js","components/drivers/dashboard/permits/PermitLicencesListItem.js","controls/ProgressBar.js","components/drivers/dashboard/permits/PermitLicencesList.js","components/drivers/dashboard/permits/Permits.js","components/drivers/dashboard/financial_affairs/FinancialAffairs.js","containers/searching/SearchingContainer.js","containers/trader/documents/IdentityCardContainer.js","containers/trader/documents/CommercialRegisterCertificateContainer.js","containers/trader/documents/DocumentsDialog.js","containers/trader/TraderContainer.js","containers/trader/documents/DocumentsContainer.js","components/drivers/dashboard/jobs/jobRequests/ProfileDialog.js","containers/traderRequest/TraderRequestContainer.js","components/drivers/dashboard/jobs/jobRequests/RequestDialog.js","components/drivers/dashboard/jobs/jobRequests/TraderRequestRow.js","components/drivers/dashboard/jobs/jobRequests/TraderRequestsTable.js","components/drivers/dashboard/jobs/jobRequests/EditJobRequestDialog.js","containers/jobReqeust/JobRequestContainer.js","components/drivers/dashboard/jobs/jobRequests/JobRequestPackageItem.js","components/drivers/dashboard/jobs/jobRequests/AddJobRequestDialog.js","controls/ProgressRing.js","components/drivers/dashboard/jobs/jobRequests/JobRequestsList.js","components/drivers/dashboard/jobs/jobRequests/JobRequests.js","containers/jobOffer/JobOfferContainer.js","components/drivers/dashboard/jobs/jobOffers/BidJobOfferDialog.js","components/drivers/dashboard/jobs/jobOffers/JobOfferPostListItem.js","components/drivers/dashboard/jobs/jobOffers/JobOfferPostsList.js","components/drivers/dashboard/jobs/jobOffers/JobOffers.js","controls/Map.js","components/drivers/dashboard/jobs/onGoingJob/MapTab.js","components/drivers/dashboard/jobs/onGoingJob/objectionsTab/ReasonsList.js","components/drivers/dashboard/jobs/onGoingJob/objectionsTab/AddObjectionDialog.js","containers/onGoingJob/JobObjectionContainer.js","components/drivers/dashboard/jobs/onGoingJob/objectionsTab/Objections.js","containers/onGoingJob/JobContainer.js","components/drivers/dashboard/jobs/onGoingJob/Job.js","components/drivers/dashboard/jobs/onGoingJob/FinishJobDialog.js","components/drivers/dashboard/jobs/onGoingJob/OnGoingJobOptions.js","components/drivers/dashboard/jobs/onGoingJob/OnGoingJob.js","containers/completedJob/CompletedJobContainer.js","components/drivers/dashboard/jobs/completedJobs/CompletedJobPackageListItem.js","components/drivers/dashboard/jobs/completedJobs/CompletedJobsList.js","components/drivers/dashboard/jobs/completedJobs/CompletedJobs.js","components/drivers/dashboard/jobs/Jobs.js","components/drivers/dashboard/payments/Payments.js","components/drivers/dashboard/settings/GeneralSettings.js","components/drivers/dashboard/settings/CodeConfirmationDialog.js","components/drivers/dashboard/settings/UsernameAndEmailSettings.js","components/drivers/dashboard/settings/PasswordSettings.js","components/drivers/dashboard/settings/Settings.js","components/drivers/dashboard/DriversDashboard.js","components/traders/dashboard/profile/ProfilePhoto.js","components/traders/dashboard/profile/documents/identityCard/AddIdentityCardDialog.js","components/traders/dashboard/profile/documents/identityCard/AddIdentityCardButton.js","components/traders/dashboard/profile/documents/commercialRegisterCertificate/AddCommercialRegisterCertificateDialog.js","components/traders/dashboard/profile/documents/commercialRegisterCertificate/AddCommercialRegisterCertificateButton.js","components/traders/dashboard/profile/documents/identityCard/EditIdentityCardDialog.js","components/traders/dashboard/profile/documents/identityCard/IdentityCardListItem.js","components/traders/dashboard/profile/documents/commercialRegisterCertificate/EditCommercialRegisterCertificateDialog.js","components/traders/dashboard/profile/documents/commercialRegisterCertificate/CommercialRegisterCertificateListItem.js","components/traders/dashboard/profile/documents/DocumentsList.js","components/traders/dashboard/profile/Profile.js","containers/driver/documents/DrivingLicenceContainer.js","containers/driver/documents/EntryExitCardContainer.js","containers/driver/documents/IdentityCardContainer.js","containers/driver/documents/DocumentsDialog.js","containers/driver/DriverContainer.js","containers/truck/TrailerContainer.js","containers/truck/TrailersDialog.js","containers/truck/TruckContainer.js","components/traders/dashboard/jobs/jobRequests/SendTraderRequestDialog.js","components/traders/dashboard/jobs/jobRequests/TraderRequestDialog.js","components/traders/dashboard/jobs/jobRequests/AssignJobDialog.js","components/traders/dashboard/jobs/jobRequests/JobRequestPostListItem.js","components/traders/dashboard/jobs/jobRequests/JobRequestPostsList.js","components/traders/dashboard/jobs/jobRequests/JobRequests.js","containers/driver/documents/DocumentsContainer.js","components/traders/dashboard/jobs/jobOffers/ProfileDialog.js","containers/truck/TrailersContainer.js","components/traders/dashboard/jobs/jobOffers/TruckDialog.js","components/traders/dashboard/jobs/jobOffers/AssignJobDialog.js","components/traders/dashboard/jobs/jobOffers/DriverRequestRow.js","components/traders/dashboard/jobs/jobOffers/DriverRequestsTable.js","components/traders/dashboard/jobs/jobOffers/EditJobOfferDialog.js","components/traders/dashboard/jobs/jobOffers/JobOfferPackageItem.js","components/traders/dashboard/jobs/jobOffers/AddJobOfferDialog.js","components/traders/dashboard/jobs/jobOffers/JobOffersList.js","components/traders/dashboard/jobs/jobOffers/JobOffers.js","components/traders/dashboard/jobs/onGoingJob/Job.js","components/traders/dashboard/jobs/onGoingJob/MapTab.js","components/traders/dashboard/jobs/onGoingJob/objections/ReasonsList.js","components/traders/dashboard/jobs/onGoingJob/objections/AddObjectionDialog.js","components/traders/dashboard/jobs/onGoingJob/objections/Objections.js","components/traders/dashboard/jobs/onGoingJob/ApproveJobDialog.js","controls/InteractiveRating.js","components/traders/dashboard/jobs/onGoingJob/ReviewDialog.js","components/traders/dashboard/jobs/onGoingJob/OnGoingJobOptions.js","components/traders/dashboard/jobs/onGoingJob/OnGoingJob.js","components/traders/dashboard/jobs/completedJobs/ReviewDialog.js","components/traders/dashboard/jobs/completedJobs/CompletedJobPackageListItem.js","components/traders/dashboard/jobs/completedJobs/CompletedJobsList.js","components/traders/dashboard/jobs/completedJobs/CompletedJobs.js","components/traders/dashboard/jobs/Jobs.js","components/traders/dashboard/payments/BillListItem.js","components/traders/dashboard/payments/BillsList.js","components/traders/dashboard/payments/Payments.js","components/traders/dashboard/settings/GeneralSettings.js","components/traders/dashboard/settings/CodeConfirmationDialog.js","components/traders/dashboard/settings/UsernameAndEmailSettings.js","components/traders/dashboard/settings/PasswordSettings.js","components/traders/dashboard/settings/Settings.js","components/traders/dashboard/TradersDashboard.js","controls/BackToTop.js","components/shared/Footer.js","App.js","index.js","res/strings.js"],"names":["Header","props","logOut","event","preventDefault","localStorage","userToken","removeItem","Token","history","push","state","DriverLoggedIn","bind","token","jwt_decode","loginRegisterLinks","className","to","userLinks","DriverID","onClick","this","type","data-toggle","data-target","Strings","APP_NAME","toUpperCase","id","Component","withRouter","Landing","class","style","width","backgroundColor","alt","src","data-source-index","color","fontWeight","href","textDecoration","registerDriver","newCredentials","a","async","axios","post","NAQEL_SERVER","Username","Email","Password","RegisterAs","then","response","data","localeCompare","USERNAME_OR_EMAIL_TAKEN","setItem","setupDriverAccount","newDriver","FirstName","LastName","DateOfBirth","Gender","Address","PhoneNumber","Nationality","console","log","loginDriver","driver","EmailOrUsername","SignInAs","getData","request","Get","get","params","Params","headers","Authorization","uploadDriverProfilePhoto","driverProfilePhoto","PhotoURL","FileName","generalSettings","updatedDriver","validateUsername","username","validateEmail","email","sendCode","usernameAndEmailSettings","validatePassword","passwordPackage","passwordSettings","addTruck","newTruck","PlateNumber","Owner","ProductionYear","Brand","Model","Type","MaximumWeight","updateTruckPhoto","updatedTruck","updateTruck","deleteTruck","discardedTruck","delete","addTrailer","newTrailer","deleteTrailer","discardedTrailer","TrailerID","addDrivingLicence","newDrivingLicence","LicenceNumber","ReleaseDate","ExpiryDate","updateDrivingLicence","updatedDrivingLicence","deleteDrivingLicence","discardedDrivingLicence","addEntryExitCard","newEntryExitCard","EntryExitNumber","NumberOfMonths","updateEntryExitCard","updatedEntryExitCard","deleteEntryExitCard","discardedEntryExitCard","addIdentityCard","newIdentityCard","IDNumber","updateIdentityCard","updatedIdentityCard","deleteIdentityCard","discardedIdentityCard","addPermitLicence","newPermitLicence","PermitNumber","Code","Place","deletePermitLicence","discardedPermitLicence","PermitLicenceID","updatePermitLicence","updatedPermitLicence","addJobRequest","newJobRequest","LoadingPlace","UnloadingPlace","TripType","Price","updateJobRequest","updatedJobRequest","JobRequestID","deleteJobRequest","discardedJobRequest","addDriverRequest","newDriverRequest","JobOfferID","deleteDriverRequest","discardedDriverRequest","addObjectionReason","newObjectionReason","Reason","addJobObjection","newJobObjection","OnGoingJobID","Comment","finishJob","finishedJob","toggleSelectTraderRequest","toggleSelectedTraderRequest","TraderRequestID","Selected","deleteOnGoingJob","discardedOnGoingJob","registerTrader","res","setupTraderAccount","newTrader","loginTrader","trader","catch","error","uploadTraderProfilePhoto","traderProfilePhoto","updatedTrader","addJobOffer","newJobOffer","CargoType","CargoWeight","LoadingDate","LoadingTime","EntryExit","AcceptedDelay","JobOfferType","updateJobOffer","updatedJobOffer","deleteJobOffer","discardedJobOffer","addTraderRequest","newTraderReqeust","deleteTraderRequest","discardedTraderRequest","approveJob","approvedJob","addDriverReview","newDriverReview","CompletedJobID","Rating","Review","addOnGoingJobFromJobOffer","newOnGoingJob","DriverRequestID","addOnGoingJobFromJobRequest","addDriverReviewFromOnGoingJob","Required","paddingLeft","PreloaderScreen","background","position","zIndex","top","display","alignItems","justifyContent","height","Preloader","textAlign","LoginCardBack","backgroundImage","backgroundAttachment","backgroundRepeat","backgroundSize","RegisterCardBack","EmailConfirmationCardBack","AccountSetupCardBack","CongratulationsCardBack","Card","padding","alignContent","boxShadow","CardLarge","CardXLarge","margin","CardChild","CardTitle","paddingTop","Login","onChange","name","target","value","setState","validateField","onSubmit","ValidForm","user","Message","LoggedInAsDriver","LoginError","LoggedInAsTrader","ValidEmailOrUsername","ValidPassword","Errors","field","noValidate","htmlFor","placeholder","aria-haspopup","role","aria-expanded","aria-labelledby","e","disabled","Register","ConfirmPassword","NullError","UsernameOrEmailTaken","newCredentialsToken","PasswordsMatched","ValidEmail","Agreed","fieldValidationErrors","match","length","refs","agreementCheckBox","checked","validateForm","autocomplete","required","maxWidth","ref","AgreementError","tabindex","aria-hidden","String","data-dismiss","EmailConfirmation","code","ConfirmationCode","InvalidCodeError","AccountSetup","verifiedCredentialsToken","decoded","newUser","ValidFirstName","ValidLastName","ValidDateOfBirth","ValidNationality","ValidAddress","ValidPhoneNumber","Date","atl","rows","IsCreatedSuccessfully","ProfilePhoto","onImageUpload","Image","files","formData","FormData","append","IMAGE_UPLOADER","onUploadProgress","UploadProgress","message","imageUrl","filename","photoURL","ImageURL","profilePhoto","fileInput","click","border","ImageUploader","startsWith","OnInvalidImageSelected","exception","OnImageUploaded","Source","AddDrivingLicenceDialog","OnOK","cancelButton","ValidLicenceNumber","ValidType","ValidReleaseDate","ValidExpiryDate","ValidPhotoURL","getTime","tabIndex","Height","Width","ImageCategory","autoComplete","OnCancel","AddDrivingLicenceButton","minWidth","onMouseDown","OnDocumentsUpdated","AddEntryExitCardDialog","ValidEntryExitNumber","ValidNumberOfMonths","releaseDate","expiryDate","setMonth","getMonth","toLocaleString","AddEntryExitCardButton","AddIdentityCardDialog","ValidIDNumber","min","max","AddIdentityCardButton","EditDrivingLicenceDialog","drivingLicence","DrivingLicence","DrivingLicenceID","DrivingLicenceListItem","onDelete","onComponentUpdated","borderTop","borderRadius","Index","overflow","EditEntryExitCardDialog","entryExitCard","EntryExitCard","EntryExitCardListItem","EntryExitCardID","EditIdentityCardDialog","identityCard","IdentityCard","IdentityCardListItem","IdentityCardID","DocumentsList","onDocumentsUpdated","index","undefined","marginTop","Size","Color","Label","PageHeading","Heading","Profile","Active","RatingAndReviews","WarningAlert","Driver","ratingAndReviews","Reviews","TruckSettings","OnTruckSettingsUpdated","ValidPlateNumber","ValidOwner","ValidProductionYear","ValidBrand","ValidModel","ValidMaximumWeight","truck","Truck","currentYear","getFullYear","AddTruckDialog","ShowPreloader","AddTrailerDialog","AddTrailer","paddingBottom","marginBottom","OnTrailerAdded","EditTrailerDialog","updatedTrailer","Trailer","updateTrailer","dialogID","TrailersList","Trailers","OnTrailersUpdated","EditTrailerDialogs","map","key","editTrailerDialogs","showPreloader","AddPermitLicenceDialog","ValidPermitNumber","ValidCode","ValidPlace","EditPermitLicenceDialog","PermitLicence","DialogID","PermitLicenceListItem","permitLicenceID","OnPermitLicenceUpdated","AllPermitLicences","PermitLicences","EditPermitLicenceDialogs","SearchString","permitLicence","ProgressBar","PermitLicencesList","Searching","onSearch","allPermitLicences","filteredPermitLicences","i","includes","permitLicences","paddingRight","Permits","onPermitLicencesUpdated","permitLicencesList","FinancialAffairs","SearchingContainer","searching","searchingFor","SearchingFor","IdentityCardContainer","CommercialRegisterCertificateContainer","commercialRegisterCertificate","CommercialRegisterCertificate","Number","DocumentsDialog","TraderID","TraderDocuments","traderDocuments","TraderContainer","TraderProfile","refresh","Refresh","traderProfile","Trader","onJob","OnJob","UUID","substring","TabView","DocumentsContainer","ProfileDialog","aria-controls","RefreshTrader","RefreshDocuments","TraderRequestContainer","traderRequest","TraderRequest","toDateString","Created","toTimeString","RequestDialog","TraderRequestRow","onToggleSelect","traderRequestID","isSelected","selectedTraderRequest","OnTraderRequestUpdated","traderRequestPackage","TraderRequestPackage","traderOnJob","TraderOnJob","requestSelected","profileIndex","requestIndex","RefreshTraderContainer","RefreshDocumentsContainer","TraderRequestsTable","OnRequestsFound","TraderRequestPackages","RequestSelected","traderRequestPackages","EditJobRequestDialog","CanEdit","JobRequest","ValidLoadingPlace","ValidUnloadingPlace","ValidPrice","step","JobRequestContainer","jobRequest","createdHoursAgo","Math","abs","TimeCreated","WaitingTime","JobRequestPackageItem","jobRequestID","OnJobRequestUpdated","NumberOfRequests","JobRequestPackage","RefreshTraderRequestsTable","number","AddJobRequestDialog","ProgressRing","JobRequestsList","AllJobRequestPackages","JobRequests","JobRequestPackages","Refreshing","allJobRequestPackages","filteredJobRequestPackages","count","jobRequestPackage","jobRequestPackages","JobOfferContainer","jobOffer","JobOffer","loadingDate","setHours","parseInt","setMinutes","setSeconds","BidJobOfferDialog","IsRequestSent","DriverRequest","JobOfferPostsList","onCancelRequest","OnRequestUpdated","onSendRequest","JobOfferPost","RequestSent","RequestButton","driverRequest","JobOfferPosts","jobOfferPost","JobOfferPostListItem","jobOfferPosts","JobOffers","Geocode","setApiKey","enableDebug","Map","NoState","AsyncMap","withScriptjs","withGoogleMap","googleMapURL","defaultZoom","defaultCenter","lat","lng","loadingElement","containerElement","mapElement","MapTab","ReasonsList","ObjectionReasons","NewReason","objectionReasons","errors","ObjectionReason","AddPressed","ValidNewReason","objectionReason","OnReasonSelected","AddObjectionDialog","ValidReason","ValidComment","readonly","reason","JobObjectionContainer","jobObjectionPackage","JobObjectionPackage","jobObjection","JobObjection","firstName","lastName","createdOn","Objections","JobObjectionPackages","jobObjectionPackages","JobContainer","onGoingJob","OnGoingJob","JobNumber","Job","JumbotronContent","hasObjections","HasObjections","CompletedByDriver","dateDifference","days","floor","hours","minutes","round","dayString","hourString","minuteString","remainingTime","FinishJobDialog","onYes","Progress","completedByDriver","OnGoingJobOptions","onDiscard","OnJobRemoved","completedByTrader","CompletedByTrader","OnJobFinished","Loading","RefreshObjections","OnObjectionAdded","CompletedJobContainer","completedJob","CompletedJob","CompletedJobPackageListItem","CompletedJobPackage","driverReview","DriverReview","CompletedJobsList","AllCompletedJobPackages","CompletedJobPackages","SearchDate","allCompletedJobPackages","filteredCompletedJobPackages","searchDate","completedJobPackage","completedJobPackages","CompletedJobs","Jobs","RefreshJobRequests","RefreshJobOffers","RefreshOnGoingJob","RefreshCompletedJobs","Payments","GeneralSettings","OnSettingsSaved","SettingsSaved","CodeConfirmationDialog","ConfirmCode","ValidConfirmCode","UsernameAndEmailSettings","NewUsername","NewEmail","ValidNewUsername","ValidNewEmail","CodeConfirmation","PasswordSettings","CurrentPassword","NewPassword","ValidCurrentPassword","ValidNewPassword","ValidConfirmPassword","Settings","componentDidMount","forceUpdate","DriversDashboard","onCloseNavigation","Left","left","fontSize","AddCommercialRegisterCertificateDialog","newCommercialRegisterCertificate","addCommercialRegisterCertificate","readOnly","AddCommercialRegisterCertificateButton","onRefresh","Key","random","EditCommercialRegisterCertificateDialog","updatedCommercialRegisterCertificate","updateCommercialRegisterCertificate","CommercialRegisterCertificateListItem","discardedCommercialRegisterCertificate","deleteCommercialRegisterCertificate","ID","DrivingLicenceContainer","EntryExitCardContainer","DriverDocuments","driverDocuments","DriverContainer","DriverProfile","driverProfile","TrailerContainer","trailer","TrailersDialog","trailers","TruckContainer","OnTrailersFound","TruckProfile","truckProfile","SendTraderRequestDialog","newTraderRequest","ValidCargoType","ValidCargoWeight","ValidLoadingDate","ValidLoadingTime","ValidAcceptedDelay","TraderRequestDialog","AssignJobDialog","onAssignNow","CanAssign","price","JobRequestPostListItem","Badge","JobRequestPost","driverOnJob","DriverOnJob","canAssign","assignJobIndex","OnJobAssigned","RefreshDriverContainer","RefreshTruckContainer","JobRequestPostsList","JobRequestPosts","jobRequestPost","jobRequestPosts","RefreshDriver","TrailersContainer","DriverRequestRow","driverRequestPackage","DriverRequestPackage","truckIndex","TruckDialog","DriverRequestsTable","DriverRequestPackages","DriverRequests","jobOfferType","driverRequestPackages","EditJobOfferDialog","aria-pressed","defaultChecked","JobOfferPackageItem","jobOfferID","OnJobOfferUpdated","JobOfferPackage","hasDriverRequests","HasDriverRequests","RefreshDriverRequestsTable","AddJobOfferDialog","JobOffersList","AllJobOfferPackages","JobOfferPackages","allJobOfferPackages","filteredJobOfferPackages","jobOfferPackage","jobOfferPackages","ApproveJobDialog","onApprove","InteractiveRating","onRate","rating","OnRated","title","ReviewDialog","ValidRating","ValidReview","DriverRated","onGoingJobID","driverRated","billPaid","BillPaid","OnReviewAdded","jobPackage","BillListItem","Bill","BillsList","Bills","bills","bill","TradersDashboard","BackToTop","right","bottom","Footer","asp-area","asp-controller","asp-action","App","basename","exact","path","component","Congratulations","ReactDOM","render","document","getElementById","module","exports","USER_TOKEN","USER_NOT_FOUND","INVALID_PASSWORD"],"mappings":"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","file":"static/js/main.b7de7505.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Strings from \"../../res/strings\"\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DriverLoggedIn: false\r\n        };\r\n\r\n        this.logOut = this.logOut.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    logOut = event => {\r\n        event.preventDefault();\r\n\r\n        if (localStorage.userToken) {\r\n            localStorage.removeItem(\"userToken\");\r\n        }\r\n        else if (localStorage.Token) {\r\n            localStorage.removeItem(\"Token\");\r\n        }\r\n\r\n        this.props.history.push(`/login`);\r\n    }\r\n\r\n    render() {\r\n        let token;\r\n\r\n        if (localStorage.Token) {\r\n            token = jwt_decode(localStorage.Token);\r\n        }\r\n\r\n        const loginRegisterLinks = <ul className=\"nav navbar-nav navbar-right\">\r\n            <li>\r\n                <Link to=\"/register\">Register</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/login\">Login</Link>\r\n            </li>\r\n        </ul>;\r\n\r\n        const userLinks = <ul className=\"nav navbar-nav navbar-right\">\r\n            <li>\r\n                <Link to={(token && token.DriverID) ? \"/drivers\" : \"/traders\"}>Dashboard</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"\" onClick={this.logOut.bind(this)}>Logout</Link>\r\n            </li>\r\n        </ul>;\r\n\r\n        return (\r\n            <header>\r\n                <nav className=\"navbar navbar-default\">\r\n                    <div className=\"navbar-local color-accent theme-dark\">\r\n                        <div className=\"container\">\r\n                            <div className=\"navbar-header\">\r\n                                <button type=\"button\" className=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-2\">\r\n                                    <span className=\"sr-only\">Toggle navigation</span>\r\n                                    <i className=\"glyph glyph-hamburger\"></i>\r\n                                </button>\r\n                                <Link to=\"/\" className=\"navbar-brand\">{Strings.APP_NAME.toUpperCase()}</Link>\r\n                            </div>\r\n                            <div className=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-2\">\r\n                                <ul className=\"nav navbar-nav\"></ul>\r\n                                {localStorage.Token ? userLinks : loginRegisterLinks}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n        );\r\n    }\r\n};\r\n\r\nexport default withRouter(Header);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n        return <section>\r\n            <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                            <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                alt=\"truck.png\" src=\"./images/truck.png\" data-source-index=\"2\" />\r\n                        </div>\r\n                        <div class=\"col-md-12 col-md-pull-12\">\r\n                            <div class=\"type-h3\" style={{ color: \"#008575\", }}>Weclome to Naqel</div>\r\n                            <div class=\"type-sh3\" style={{ color: \"#949496\", }}>Transport Services On-The-Go</div>\r\n                            <p style={{ color: \"#D1D2D4\", }}>Welcome to Naqel! If you are a trader or a broker, and you want to publish job opportunities for drivers nearby, well, you are on the right place. Naqel is a mediator among traders, brokers and drivers, and provides intuitive and secure way to get transport services.</p>\r\n                            <p style={{ color: \"#D1D2D4\", }}>Not a Trader or a Broker? No worries! Naqel provides services for drivers too. If you are a driver, and you are searching for job opportunities, you are just one step away. Create your account on our Web Service, and we will notify you job oppprtunities on your personal account.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#16171F\" }}>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                            <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                alt=\"oath.png\" src=\"./images/oath.png\" data-source-index=\"2\" />\r\n                        </div>\r\n                        <div class=\"col-md-12 col-md-pull-12\">\r\n                            <div class=\"type-h3\" style={{ color: \"#008575\", }}>Privacy</div>\r\n                            <div class=\"type-sh3\" style={{ color: \"#949496\", }}>Your Privacy is Important to Us</div>\r\n                            <p style={{ color: \"#D1D2D4\", }}>Naqel's Privacy Statement describes the types of data we collect from you, how we use your data, and the legal bases we have to process your data. The Privacy Statement also describes how Naqel uses your content, which is information submitted by you to Naqel via the Services.</p>\r\n                            <p style={{ color: \"#D1D2D4\", }}>Where processing is based on consent and to the extent permitted by law, by agreeing to these Terms, you consent to Naqel's collection, use and disclosure of your content and data as described in the privacy statement.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#00201C\" }}>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                            <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                alt=\"account.png\" src=\"./images/account.png\" data-source-index=\"2\" />\r\n                        </div>\r\n                        <div class=\"col-md-12 col-md-pull-12\">\r\n                            <div class=\"type-h3\" style={{ color: \"#008575\", }}>User Accounts</div>\r\n                            <div class=\"type-sh3\" style={{ color: \"#949496\", }}>Signup and/or Login</div>\r\n                            <p style={{ color: \"#D1D2D4\", }}>Do you want to use our services right now? No Worries! Just signup by filling up precise forms and/or login to your profile. Drivers can view job opprotunities on their dashboards. Traders and/or Brokers can post job requests for freight from thier accounts.</p>\r\n                            <div class=\"btn-group\">\r\n                                <Link to=\"/register\" class=\"btn btn-secondary\">Signup</Link>\r\n                                <Link to=\"/login\" class=\"btn btn-primary\">Login</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"jumbotron theme-dark\" style={{ backgroundColor: \"#202020\", }}>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-24 text-center\">\r\n                            <div class=\"row section-gallery\">\r\n                                <div class=\"col-md-8\">\r\n                                    <h4 style={{ fontWeight: \"bold\", }}>LOCATION</h4>\r\n                                    <div class=\"type-p1 text-center\">\r\n                                        Wah\r\n                                            <br />\r\n                                            Punjab, Pakistan\r\n                                            </div>\r\n                                </div>\r\n                                <div class=\"col-md-8\">\r\n                                    <h4 style={{ fontWeight: \"bold\", }}>AROUND THE GLOBE</h4>\r\n                                    <div class=\"type-p1 text-center text-light\" style={{ color: \"#25AAE1\", }}>\r\n                                        <a class=\"fa\" href=\"#\">\r\n                                            <i class=\"fab fa-fw fa-facebook-f\"></i>\r\n                                        </a>\r\n                                        <a class=\"fa\" href=\"#\">\r\n                                            <i class=\"fab fa-fw fa-instagram\"></i>\r\n                                        </a>\r\n                                        <a class=\"fa\" href=\"#\">\r\n                                            <i class=\"fab fa-fw fa-twitter\"></i>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-8\">\r\n                                    <h4 style={{ fontWeight: \"bold\", }}>CONTACT US</h4>\r\n                                    <div class=\"type-p1 text-center\">Naqel is created by Core Infinite. For more information, visit <a style={{ textDecoration: \"none\", color: \"#008575\", }} href=\"#\" class=\"color-type-accent\">coreinfinte.com</a></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Landing;","import axios from \"axios\";\r\nimport Strings from \"../../res/strings\";\r\n\r\n// POST: Register\r\nexport const registerDriver = async newCredentials => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/register`, {\r\n        Username: newCredentials.Username,\r\n        Email: newCredentials.Email,\r\n        Password: newCredentials.Password,\r\n        RegisterAs: newCredentials.RegisterAs,\r\n    }).then(response => {\r\n        if (response.data.localeCompare(Strings.USERNAME_OR_EMAIL_TAKEN) === 0) {\r\n            return response.data;\r\n        }\r\n        else {\r\n            localStorage.setItem(\"newCredentialsToken\", response.data);\r\n            return response.data;\r\n        }\r\n    });\r\n};\r\n\r\n// POST: AccountSetup\r\nexport const setupDriverAccount = async newDriver => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/accountSetup`, {\r\n        Username: newDriver.Username,\r\n        Email: newDriver.Email,\r\n        Password: newDriver.Password,\r\n        RegisterAs: newDriver.RegisterAs,\r\n        FirstName: newDriver.FirstName,\r\n        LastName: newDriver.LastName,\r\n        DateOfBirth: newDriver.DateOfBirth,\r\n        Gender: newDriver.Gender,\r\n        Address: newDriver.Address,\r\n        PhoneNumber: newDriver.PhoneNumber,\r\n        Nationality: newDriver.Nationality,\r\n    }).then(response => {\r\n        console.log(response.data);\r\n    });\r\n};\r\n\r\n// POST: Login\r\nexport const loginDriver = async driver => {\r\n    console.log(`Sending HTTP POST request on ${Strings.NAQEL_SERVER}drivers/login`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/login`, {\r\n        EmailOrUsername: driver.EmailOrUsername,\r\n        Password: driver.Password,\r\n        SignInAs: driver.SignInAs,\r\n    }).then(response => {\r\n        return response.data;\r\n    })\r\n};\r\n\r\n// GET: GetData\r\nexport const getData = async request => {\r\n    console.log(`Sending GET request to ${Strings.NAQEL_SERVER}drivers/get${request.Get}...`);\r\n    return await axios.get(`${Strings.NAQEL_SERVER}drivers/get${request.Get}`, {\r\n        params: request.Params,\r\n        headers: { Authorization: `JWT ${request.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UploadDriverProfilePhoto\r\nexport const uploadDriverProfilePhoto = async driverProfilePhoto => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/uploadDriverProfilePhoto`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/uploadDriverProfilePhoto`, {\r\n        PhotoURL: driverProfilePhoto.PhotoURL,\r\n        FileName: driverProfilePhoto.FileName\r\n    }, {\r\n        headers: { Authorization: `JWT ${driverProfilePhoto.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: GeneralSettings\r\nexport const generalSettings = async updatedDriver => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/generalSettings`, {\r\n        FirstName: updatedDriver.FirstName,\r\n        LastName: updatedDriver.LastName,\r\n        Address: updatedDriver.Address,\r\n        PhoneNumber: updatedDriver.PhoneNumber,\r\n        Gender: updatedDriver.Gender,\r\n        Nationality: updatedDriver.Nationality,\r\n        DateOfBirth: updatedDriver.DateOfBirth,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedDriver.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateUsername\r\nexport const validateUsername = async username => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/validateUsername`, {\r\n        Username: username\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateEmail\r\nexport const validateEmail = async email => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/validateEmail`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POSTL SendCode\r\nexport const sendCode = async email => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}users/sendCode...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/sendCode`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UsernameAndEmailSettings\r\nexport const usernameAndEmailSettings = async updatedDriver => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/usernameAndEmailSettings...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/usernameAndEmailSettings`, {\r\n        Username: updatedDriver.Username,\r\n        Email: updatedDriver.Email\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedDriver.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidatePassword\r\nexport const validatePassword = async passwordPackage => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/validatePassword`, {\r\n        Password: passwordPackage.Password\r\n    }, {\r\n        headers: { Authorization: `JWT ${passwordPackage.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: PasswordSettings\r\nexport const passwordSettings = async updatedDriver => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/passwordSettings`, {\r\n        Password: updatedDriver.Password,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedDriver.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddTruck\r\nexport const addTruck = async newTruck => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addTruck...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addTruck`, {\r\n        PlateNumber: newTruck.PlateNumber,\r\n        Owner: newTruck.Owner,\r\n        ProductionYear: newTruck.ProductionYear,\r\n        Brand: newTruck.Brand,\r\n        Model: newTruck.Model,\r\n        Type: newTruck.Type,\r\n        MaximumWeight: newTruck.MaximumWeight,\r\n        PhotoURL: newTruck.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTruck.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UpdateTruckPhoto\r\nexport const updateTruckPhoto = async updatedTruck => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateTruckPhoto...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateTruckPhoto`, {\r\n        PhotoURL: updatedTruck.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTruck.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UpdateTruck\r\nexport const updateTruck = async updatedTruck => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateTruck...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateTruck`, {\r\n        PlateNumber: updatedTruck.PlateNumber,\r\n        Owner: updatedTruck.Owner,\r\n        ProductionYear: updatedTruck.ProductionYear,\r\n        Brand: updatedTruck.Brand,\r\n        Model: updatedTruck.Model,\r\n        Type: updatedTruck.Type,\r\n        MaximumWeight: updatedTruck.MaximumWeight\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTruck.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deleteTruck\r\nexport const deleteTruck = async discardedTruck => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteTruck...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteTruck`, {\r\n        headers: { Authorization: `JWT ${discardedTruck.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddTrailer\r\nexport const addTrailer = async newTrailer => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addTrailer...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addTrailer`, {\r\n        MaximumWeight: newTrailer.MaximumWeight,\r\n        PhotoURL: newTrailer.PhotoURL,\r\n        Type: newTrailer.Type\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTrailer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteTrailer\r\nexport const deleteTrailer = async discardedTrailer => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteTrailer...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteTrailer`, {\r\n        headers: { Authorization: `JWT ${discardedTrailer.Token}` },\r\n        data: { TrailerID: discardedTrailer.TrailerID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateTrailer\r\nexport const updateTrailer = updatedTrailer => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateTrailer...`);\r\n    return axios.post(`${Strings.NAQEL_SERVER}drivers/updateTrailer`, {\r\n        TrailerID: updatedTrailer.TrailerID,\r\n        MaximumWeight: updatedTrailer.MaximumWeight,\r\n        PhotoURL: updatedTrailer.PhotoURL,\r\n        Type: updatedTrailer.Type\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTrailer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addDrivingLicence\r\nexport const addDrivingLicence = async newDrivingLicence => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addDrivingLicence...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addDrivingLicence`, {\r\n        LicenceNumber: newDrivingLicence.LicenceNumber,\r\n        Type: newDrivingLicence.Type,\r\n        ReleaseDate: newDrivingLicence.ReleaseDate,\r\n        ExpiryDate: newDrivingLicence.ExpiryDate,\r\n        PhotoURL: newDrivingLicence.PhotoURL,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newDrivingLicence.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateDrivingLicence\r\nexport const updateDrivingLicence = async updatedDrivingLicence => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateDrivingLicence...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateDrivingLicence`, {\r\n        LicenceNumber: updatedDrivingLicence.LicenceNumber,\r\n        Type: updatedDrivingLicence.Type,\r\n        ReleaseDate: updatedDrivingLicence.ReleaseDate,\r\n        ExpiryDate: updatedDrivingLicence.ExpiryDate,\r\n        PhotoURL: updatedDrivingLicence.PhotoURL,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedDrivingLicence.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteDrivingLicence\r\nexport const deleteDrivingLicence = async discardedDrivingLicence => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteDrivingLicence...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteDrivingLicence`, {\r\n            headers: { Authorization: `JWT ${discardedDrivingLicence.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addEntryExitCard\r\nexport const addEntryExitCard = async newEntryExitCard => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addEntryExitCard...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addEntryExitCard`, {\r\n        EntryExitNumber: newEntryExitCard.EntryExitNumber,\r\n        Type: newEntryExitCard.Type,\r\n        ReleaseDate: newEntryExitCard.ReleaseDate,\r\n        NumberOfMonths: newEntryExitCard.NumberOfMonths,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newEntryExitCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateEntryExiCard\r\nexport const updateEntryExitCard = async updatedEntryExitCard => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateEntryExitCard...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateEntryExitCard`, {\r\n        EntryExitNumber: updatedEntryExitCard.EntryExitNumber,\r\n        Type: updatedEntryExitCard.Type,\r\n        ReleaseDate: updatedEntryExitCard.ReleaseDate,\r\n        NumberOfMonths: updatedEntryExitCard.NumberOfMonths,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedEntryExitCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteEntryExitCard\r\nexport const deleteEntryExitCard = async discardedEntryExitCard => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteEntryExitCard...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteEntryExitCard`, {\r\n        headers: { Authorization: `JWT ${discardedEntryExitCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addIdentityCard\r\nexport const addIdentityCard = async newIdentityCard => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addIdentityCard...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addIdentityCard`, {\r\n        Token: newIdentityCard.Token,\r\n        IDNumber: newIdentityCard.IDNumber,\r\n        PhotoURL: newIdentityCard.PhotoURL,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateIdentityCard\r\nexport const updateIdentityCard = async updatedIdentityCard => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateIdentityCard...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateIdentityCard`, {\r\n        Token: updatedIdentityCard.Token,\r\n        IDNumber: updatedIdentityCard.IDNumber,\r\n        PhotoURL: updatedIdentityCard.PhotoURL,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteIdentityCard\r\nexport const deleteIdentityCard = async discardedIdentityCard => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteIdentityCard...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteIdentityCard`, {\r\n        headers: { Authorization: `JWT ${discardedIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addPermitLicence\r\nexport const addPermitLicence = async newPermitLicence => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addPermitLicence...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addPermitLicence`, {\r\n        PermitNumber: newPermitLicence.PermitNumber,\r\n        ExpiryDate: newPermitLicence.ExpiryDate,\r\n        PhotoURL: newPermitLicence.PhotoURL,\r\n        Code: newPermitLicence.Code,\r\n        Place: newPermitLicence.Place\r\n    }, {\r\n        headers: { Authorization: `JWT ${newPermitLicence.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deletePermitLicence\r\nexport const deletePermitLicence = async discardedPermitLicence => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deletePermitLicence...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deletePermitLicence`, {\r\n        headers: { Authorization: `JWT ${discardedPermitLicence.Token}` },\r\n        data: { PermitLicenceID: discardedPermitLicence.PermitLicenceID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updatePermitLicence\r\nexport const updatePermitLicence = async updatedPermitLicence => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updatePermitLicence...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updatePermitLicence`, {\r\n        PermitLicenceID: updatedPermitLicence.PermitLicenceID,\r\n        PermitNumber: updatedPermitLicence.PermitNumber,\r\n        ExpiryDate: updatedPermitLicence.ExpiryDate,\r\n        PhotoURL: updatedPermitLicence.PhotoURL,\r\n        Code: updatedPermitLicence.Code,\r\n        Place: updatedPermitLicence.Place\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedPermitLicence.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addJobRequest\r\nexport const addJobRequest = async newJobRequest => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addJobRequest...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addJobRequest`, {\r\n        LoadingPlace: newJobRequest.LoadingPlace,\r\n        UnloadingPlace: newJobRequest.UnloadingPlace,\r\n        TripType: newJobRequest.TripType,\r\n        Price: newJobRequest.Price,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newJobRequest.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateJobRequest\r\nexport const updateJobRequest = async updatedJobRequest => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateJobRequest...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateJobRequest`, {\r\n        JobRequestID: updatedJobRequest.JobRequestID,\r\n        LoadingPlace: updatedJobRequest.LoadingPlace,\r\n        UnloadingPlace: updatedJobRequest.UnloadingPlace,\r\n        TripType: updatedJobRequest.TripType,\r\n        Price: updatedJobRequest.Price,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedJobRequest.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteJobRequest\r\nexport const deleteJobRequest = async discardedJobRequest => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteJobRequest...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteJobRequest`, {\r\n        headers: { Authorization: `JWT ${discardedJobRequest.Token}` },\r\n        data: { JobRequestID: discardedJobRequest.JobRequestID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addDriverRequest\r\nexport const addDriverRequest = async newDriverRequest => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addDriverRequest...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addDriverRequest`, {\r\n        JobOfferID: newDriverRequest.JobOfferID,\r\n        Price: newDriverRequest.Price\r\n    }, {\r\n        headers: { Authorization: `JWT ${newDriverRequest.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deleteDriverRequest\r\nexport const deleteDriverRequest = async discardedDriverRequest => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteDriverRequest...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteDriverRequest`, {\r\n        headers: { Authorization: `JWT ${discardedDriverRequest.Token}` },\r\n        data: { JobOfferID: discardedDriverRequest.JobOfferID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addOnGoingJob\r\nexport const addOnGoingJob = async newOnGoingJob => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addOnGoingJob...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addOnGoingJob`, {\r\n        TraderRequestID: newOnGoingJob.TraderRequestID\r\n    }, {\r\n        headers: { Authorization: `JWT ${newOnGoingJob.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addObjectionReason\r\nexport const addObjectionReason = async newObjectionReason => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addObjectionReason...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addObjectionReason`, {\r\n        Reason: newObjectionReason.Reason\r\n    }, {\r\n        headers: { Authorization: `JWT ${newObjectionReason.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addJobObjection\r\nexport const addJobObjection = async newJobObjection => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addJobObjection...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addJobObjection`, {\r\n        OnGoingJobID: newJobObjection.OnGoingJobID,\r\n        Reason: newJobObjection.Reason,\r\n        Comment: newJobObjection.Comment\r\n    }, {\r\n        headers: { Authorization: `JWT ${newJobObjection.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: finishJob\r\nexport const finishJob = async finishedJob => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/finishJob...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/finishJob`, {}, {\r\n        headers: { Authorization: `JWT ${finishedJob.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: toggleSelectTraderRequest\r\nexport const toggleSelectTraderRequest = async toggleSelectedTraderRequest => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/toggleSelectTraderRequest...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/toggleSelectTraderRequest`, {\r\n        TraderRequestID: toggleSelectedTraderRequest.TraderRequestID,\r\n        Selected: toggleSelectedTraderRequest.Selected\r\n    }, {\r\n        headers: { Authorization: `JWT ${toggleSelectedTraderRequest.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteOnGoingJob\r\nexport const deleteOnGoingJob = async discardedOnGoingJob => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteOnGoingJob...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteOnGoingJob`, {\r\n        headers: { Authorization: `JWT ${discardedOnGoingJob.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};","import axios from \"axios\";\r\nimport Strings from \"../../res/strings\";\r\n\r\n// POST: Register\r\nexport const registerTrader = async newCredentials => {\r\n    console.log(\"I'm in registerTrader axios...\");\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/register`, {\r\n        Username: newCredentials.Username,\r\n        Email: newCredentials.Email,\r\n        Password: newCredentials.Password,\r\n        RegisterAs: newCredentials.RegisterAs,\r\n    }).then(res => {\r\n        if (res.data.localeCompare(Strings.USERNAME_OR_EMAIL_TAKEN) === 0) {\r\n            return res.data;\r\n        }\r\n        else {\r\n            localStorage.setItem(\"newCredentialsToken\", res.data);\r\n            return res.data;\r\n        }\r\n    });\r\n};\r\n\r\n// POST: AccountSetup\r\nexport const setupTraderAccount = async newTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/accountSetup`, {\r\n        Username: newTrader.Username,\r\n        Email: newTrader.Email,\r\n        Password: newTrader.Password,\r\n        RegisterAs: newTrader.RegisterAs,\r\n        FirstName: newTrader.FirstName,\r\n        LastName: newTrader.LastName,\r\n        DateOfBirth: newTrader.DateOfBirth,\r\n        Gender: newTrader.Gender,\r\n        Address: newTrader.Address,\r\n        PhoneNumber: newTrader.PhoneNumber,\r\n        Nationality: newTrader.Nationality,\r\n    }).then(res => {\r\n        console.log(res.data);\r\n    });\r\n};\r\n\r\n// POST: Login\r\nexport const loginTrader = async trader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/login`, {\r\n        EmailOrUsername: trader.EmailOrUsername,\r\n        Password: trader.Password\r\n    }).then(response => {\r\n        return response.data;\r\n    }).catch(error => {\r\n        console.log(error);\r\n    });\r\n};\r\n\r\n// GET: GetData\r\nexport const getData = async request => {\r\n    console.log(`Sending GET request to ${Strings.NAQEL_SERVER}traders/get${request.Get}...`);\r\n    return await axios.get(`${Strings.NAQEL_SERVER}traders/get${request.Get}`, {\r\n        params: request.Params,\r\n        headers: { Authorization: `JWT ${request.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UploadDriverProfilePhoto\r\nexport const uploadTraderProfilePhoto = async traderProfilePhoto => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/uploadTraderProfilePhoto`, {\r\n        PhotoURL: traderProfilePhoto.PhotoURL,\r\n        FileName: traderProfilePhoto.FileName\r\n    }, {\r\n        headers: { Authorization: `JWT ${traderProfilePhoto.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: GeneralSettings\r\nexport const generalSettings = async updatedTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/generalSettings`, {\r\n        FirstName: updatedTrader.FirstName,\r\n        LastName: updatedTrader.LastName,\r\n        Address: updatedTrader.Address,\r\n        PhoneNumber: updatedTrader.PhoneNumber,\r\n        Gender: updatedTrader.Gender,\r\n        Nationality: updatedTrader.Nationality,\r\n        DateOfBirth: updatedTrader.DateOfBirth,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTrader.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateUsername\r\nexport const validateUsername = async username => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/validateUsername`, {\r\n        Username: username\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateEmail\r\nexport const validateEmail = async email => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/validateEmail`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: SendCode\r\nexport const sendCode = async email => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/sendCode`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UsernameAndEmailSettings\r\nexport const usernameAndEmailSettings = async updatedTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/usernameAndEmailSettings`, {\r\n        Username: updatedTrader.Username,\r\n        Email: updatedTrader.Email\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTrader.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidatePassword\r\nexport const validatePassword = async passwordPackage => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/validatePassword`, {\r\n        Password: passwordPackage.Password\r\n    }, {\r\n        headers: { Authorization: `JWT ${passwordPackage.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: PasswordSettings\r\nexport const passwordSettings = async updatedTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/passwordSettings`, {\r\n        Password: updatedTrader.Password,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTrader.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addIdentityCard\r\nexport const addIdentityCard = newIdentityCard => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/addIdentityCard`, {\r\n        IDNumber: newIdentityCard.IDNumber,\r\n        PhotoURL: newIdentityCard.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${newIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateIdentityCard\r\nexport const updateIdentityCard = updatedIdentityCard => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/updateIdentityCard`, {\r\n        IDNumber: updatedIdentityCard.IDNumber,\r\n        PhotoURL: updatedIdentityCard.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteIdentityCard\r\nexport const deleteIdentityCard = discardedIdentityCard => {\r\n    return axios.delete(`${Strings.NAQEL_SERVER}traders/deleteIdentityCard`, {\r\n        headers: { Authorization: `JWT ${discardedIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addCommercialRegisterCertificate\r\nexport const addCommercialRegisterCertificate = newCommercialRegisterCertificate => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/addCommercialRegisterCertificate`, {\r\n        Number: newCommercialRegisterCertificate.Number,\r\n        Type: newCommercialRegisterCertificate.Type,\r\n        PhotoURL: newCommercialRegisterCertificate.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${newCommercialRegisterCertificate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateCommercialRegisterCertificate\r\nexport const updateCommercialRegisterCertificate = updatedCommercialRegisterCertificate => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/updateCommercialRegisterCertificate`, {\r\n        Number: updatedCommercialRegisterCertificate.Number,\r\n        Type: updatedCommercialRegisterCertificate.Type,\r\n        PhotoURL: updatedCommercialRegisterCertificate.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedCommercialRegisterCertificate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteCommercialRegisterCertificate\r\nexport const deleteCommercialRegisterCertificate = discardedCommercialRegisterCertificate => {\r\n    return axios.delete(`${Strings.NAQEL_SERVER}traders/deleteCommercialRegisterCertificate`, {\r\n        headers: { Authorization: `JWT ${discardedCommercialRegisterCertificate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addJobOffer\r\nexport const addJobOffer = async newJobOffer => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addJobOffer`, {\r\n        TripType: newJobOffer.TripType,\r\n        CargoType: newJobOffer.CargoType,\r\n        CargoWeight: newJobOffer.CargoWeight,\r\n        LoadingPlace: newJobOffer.LoadingPlace,\r\n        UnloadingPlace: newJobOffer.UnloadingPlace,\r\n        LoadingDate: newJobOffer.LoadingDate,\r\n        LoadingTime: newJobOffer.LoadingTime,\r\n        EntryExit: newJobOffer.EntryExit,\r\n        Price: newJobOffer.Price,\r\n        AcceptedDelay: newJobOffer.AcceptedDelay,\r\n        JobOfferType: newJobOffer.JobOfferType\r\n    }, {\r\n        headers: { Authorization: `JWT ${newJobOffer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateJobOffer\r\nexport const updateJobOffer = async updatedJobOffer => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/updateJobOffer`, {\r\n        JobOfferID: updatedJobOffer.JobOfferID,\r\n        TripType: updatedJobOffer.TripType,\r\n        CargoType: updatedJobOffer.CargoType,\r\n        CargoWeight: updatedJobOffer.CargoWeight,\r\n        LoadingPlace: updatedJobOffer.LoadingPlace,\r\n        UnloadingPlace: updatedJobOffer.UnloadingPlace,\r\n        LoadingDate: updatedJobOffer.LoadingDate,\r\n        LoadingTime: updatedJobOffer.LoadingTime,\r\n        EntryExit: updatedJobOffer.EntryExit,\r\n        Price: updatedJobOffer.Price,\r\n        AcceptedDelay: updatedJobOffer.AcceptedDelay,\r\n        JobOfferType: updatedJobOffer.JobOfferType\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedJobOffer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deleteJobOffer\r\nexport const deleteJobOffer = async discardedJobOffer => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}traders/deleteJobOffer...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}traders/deleteJobOffer`, {\r\n        headers: { Authorization: `JWT ${discardedJobOffer.Token}` },\r\n        data: { JobOfferID: discardedJobOffer.JobOfferID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addATraderRequest\r\nexport const addTraderRequest = async newTraderReqeust => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/addTraderRequest...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addTraderRequest`, {\r\n        JobRequestID: newTraderReqeust.JobRequestID,\r\n        CargoType: newTraderReqeust.CargoType,\r\n        CargoWeight: newTraderReqeust.CargoWeight,\r\n        LoadingDate: newTraderReqeust.LoadingDate,\r\n        LoadingTime: newTraderReqeust.LoadingTime,\r\n        EntryExit: newTraderReqeust.EntryExit,\r\n        AcceptedDelay: newTraderReqeust.AcceptedDelay\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTraderReqeust.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deleteTraderRequest\r\nexport const deleteTraderRequest = async discardedTraderRequest => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}traders/deleteTraderRequest...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}traders/deleteTraderRequest`, {\r\n        headers: { Authorization: `JWT ${discardedTraderRequest.Token}` },\r\n        data: { JobRequestID: discardedTraderRequest.JobRequestID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addObjectionReason\r\nexport const addObjectionReason = async newObjectionReason => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/addObjectionReason...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addObjectionReason`, {\r\n        Reason: newObjectionReason.Reason\r\n    }, {\r\n        headers: { Authorization: `JWT ${newObjectionReason.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addJobObjection\r\nexport const addJobObjection = async newJobObjection => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/addJobObjection...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addJobObjection`, {\r\n        OnGoingJobID: newJobObjection.OnGoingJobID,\r\n        Reason: newJobObjection.Reason,\r\n        Comment: newJobObjection.Comment\r\n    }, {\r\n        headers: { Authorization: `JWT ${newJobObjection.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: approveJob\r\nexport const approveJob = async approvedJob => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/approveJob...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/approveJob`, {}, {\r\n        headers: { Authorization: `JWT ${approvedJob.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addDriverReview\r\nexport const addDriverReview = async newDriverReview => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/addDriverReview...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addDriverReview`, {\r\n        CompletedJobID: newDriverReview.CompletedJobID,\r\n        Rating: newDriverReview.Rating,\r\n        Review: newDriverReview.Review\r\n    }, {\r\n        headers: { Authorization: `JWT ${newDriverReview.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addOnGoingJobFromJobOffer\r\nexport const addOnGoingJobFromJobOffer = async newOnGoingJob => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/addOnGoingJobFromJobOffer...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addOnGoingJobFromJobOffer`, {\r\n        DriverRequestID: newOnGoingJob.DriverRequestID,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newOnGoingJob.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addOnGoingJobFromJobRequest\r\nexport const addOnGoingJobFromJobRequest = async newOnGoingJob => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/addOnGoingJobFromJobRequest...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addOnGoingJobFromJobRequest`, {\r\n        TraderRequestID: newOnGoingJob.TraderRequestID,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newOnGoingJob.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addDriverReviewFromOnGoingJob\r\nexport const addDriverReviewFromOnGoingJob = async newDriverReview => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/addDriverReviewFromOnGoingJob...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addDriverReviewFromOnGoingJob`, {\r\n        OnGoingJobID: newDriverReview.OnGoingJobID,\r\n        Rating: newDriverReview.Rating,\r\n        Review: newDriverReview.Review\r\n    }, {\r\n        headers: { Authorization: `JWT ${newDriverReview.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deleteOnGoingJob\r\nexport const deleteOnGoingJob = async discardedOnGoingJob => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}traders/deleteOnGoingJob...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}traders/deleteOnGoingJob`, {\r\n        headers: { Authorization: `JWT ${discardedOnGoingJob.Token}` },\r\n        data: { OnGoingJobID: discardedOnGoingJob.OnGoingJobID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};","export const Required = {\r\n    paddingLeft: \"5px\",\r\n    fontWeight: \"bold\",\r\n};\r\n\r\nexport const SelectOptionStyle = {\r\n    maxWidth: \"296px\",\r\n};\r\n\r\nexport const PreloaderScreen = {\r\n    background: \"rgba(0, 0, 0, 0.8)\",\r\n    position: \"fixed\",\r\n    zIndex: \"10\",\r\n    top: \"0px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n    height: \"100%\"\r\n};\r\n\r\nexport default {\r\n    Required,\r\n    SelectOptionStyle,\r\n    PreloaderScreen\r\n};","import React, { Component } from \"react\";\r\nimport { PreloaderScreen } from \"../styles/MiscellaneousStyles\";\r\n\r\nclass Preloader extends Component {\r\n    render() {\r\n        return (\r\n            <div style={PreloaderScreen}>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                    {/*<img src=\"./images/preloader.gif\" alt=\"preloader.gif\" height=\"200\" />*/}\r\n                    <div class=\"progress-ring progress-large\">\r\n                        <div class=\"progress-circle\"></div>\r\n                        <div class=\"progress-circle\"></div>\r\n                        <div class=\"progress-circle\"></div>\r\n                        <div class=\"progress-circle\"></div>\r\n                        <div class=\"progress-circle\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Preloader;","export const LoginCardBack = {\r\n    backgroundImage: \"url(/images/login_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n};\r\n\r\nexport const RegisterCardBack = {\r\n    backgroundImage: \"url(/images/signup_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n};\r\n\r\nexport const EmailConfirmationCardBack = {\r\n    backgroundImage: \"url(/images/passcode_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n};\r\n\r\nexport const AccountSetupCardBack = {\r\n    backgroundImage: \"url(/images/create_account_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n};\r\n\r\nexport const CongratulationsCardBack = {\r\n    backgroundImage: \"url(/images/congrats_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n};\r\n\r\nexport const Card = {\r\n    backgroundColor: \"rgba(229, 229, 229, 0.8)\",\r\n    height: \"auto\",\r\n    width: \"350px\",\r\n    padding: \"30px\",\r\n    alignContent: \"center\",\r\n    boxShadow: \"0 6px 6px rgba(0, 0, 0, 0.6)\",\r\n};\r\n\r\nexport const CardLarge = {\r\n    backgroundColor: \"rgba(229, 229, 229, 0.8)\",\r\n    height: \"auto\",\r\n    padding: \"30px\",\r\n    alignContent: \"center\",\r\n    boxShadow: \"0 6px 6px rgba(0, 0, 0, 0.6)\",\r\n};\r\n\r\nexport const CardXLarge = {\r\n    backgroundColor: \"rgba(229, 229, 229, 0.8)\",\r\n    height: \"auto\",\r\n    width: \"60%\",\r\n    margin: \"50px\",\r\n    boxShadow: \"0 6px 6px rgba(0, 0, 0, 0.6)\",\r\n};\r\n\r\nexport const CardChild = {\r\n    width: \"100%\",\r\n};\r\n\r\nexport const CardTitle = {\r\n    paddingTop: \"10px\",\r\n};\r\n\r\nexport default {\r\n    LoginCardBack,\r\n    RegisterCardBack,\r\n    EmailConfirmationCardBack,\r\n    AccountSetupCardBack,\r\n    CongratulationsCardBack,\r\n    Card,\r\n    CardLarge,\r\n    CardXLarge,\r\n    CardChild,\r\n    CardTitle,\r\n};","import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { loginDriver } from \"../drivers/DriverFunctions\";\r\nimport { loginTrader } from \"../traders/TraderFunctions\";\r\nimport Preloader from \"../../controls/Preloader\";\r\n\r\nimport {\r\n    LoginCardBack,\r\n    Card,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            EmailOrUsername: \"\",\r\n            Password: \"\",\r\n            SignInAs: \"Driver\",\r\n\r\n            ValidEmailOrUsername: false,\r\n            ValidPassword: false,\r\n\r\n            ValidForm: false,\r\n            LoggedInAsDriver: false,\r\n            LoggedInAsTrader: false,\r\n            LoginError: null,\r\n\r\n            Errors: {\r\n                EmailOrUsername: \"\",\r\n                Password: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value }, () => {\r\n            this.validateField(name, value)\r\n        });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidEmailOrUsername = this.state.ValidEmailOrUsername;\r\n        let ValidPassword = this.state.ValidPassword;\r\n\r\n        switch (field) {\r\n            case \"EmailOrUsername\":\r\n                ValidEmailOrUsername = (value !== \"\");\r\n                Errors.EmailOrUsername = ValidEmailOrUsername ? \"\" : \"Email or username is required.\";\r\n                break;\r\n            case \"Password\":\r\n                ValidPassword = (value != \"\");\r\n                Errors.Password = ValidPassword ? \"\" : \"Password is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidEmailOrUsername: ValidEmailOrUsername,\r\n            ValidPassword: ValidPassword\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidEmailOrUsername &&\r\n                    this.state.ValidPassword\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        await event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const user = {\r\n            EmailOrUsername: this.state.EmailOrUsername,\r\n            Password: this.state.Password,\r\n            SignInAs: this.state.SignInAs,\r\n        };\r\n\r\n        if (this.state.SignInAs === \"Driver\") {\r\n            console.log(\"logging in as Driver...\");\r\n\r\n            await loginDriver(user).then(response => {\r\n                console.log(response);\r\n                if (response.Message === \"Login successful.\") {\r\n                    localStorage.setItem(\"Token\", response.Token);\r\n\r\n                    this.setState({\r\n                        LoggedInAsDriver: true,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        LoginError: <div>\r\n                            <label className=\"control-label text-danger\">{response.Message}</label>\r\n                            <br />\r\n                        </div>,\r\n                        Preloader: null,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            console.log(\"Logging in as Trader or Broker...\");\r\n\r\n            await loginTrader(user).then(response => {\r\n                if (response.Message === \"Login successful.\") {\r\n                    localStorage.setItem(\"Token\", response.Token);\r\n\r\n                    this.setState({\r\n                        LoggedInAsTrader: true,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        LoginError: <div>\r\n                            <label className=\"control-label text-danger\">{response.Message}</label>\r\n                            <br />\r\n                        </div>,\r\n                        Preloader: null,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.LoggedInAsDriver) {\r\n            return <Redirect to={\"/drivers\"} />;\r\n        }\r\n        else if (this.state.LoggedInAsTrader) {\r\n            return <Redirect to={\"/traders\"} />;\r\n        }\r\n        else {\r\n            return <div>\r\n                <div className=\"middle\" style={LoginCardBack}>\r\n                    <div className=\"theme-default animated fadeIn\" style={Card} >\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/login.png\" alt=\"Login.png\" height=\"60\" />\r\n                            <div className=\"type-h3\" style={CardTitle}>Sign In</div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"EmailOrUsername\" className=\"control-label\">Email or Username</label>\r\n                                    <input type=\"email\" className=\"form-control\" name=\"EmailOrUsername\" placeholder=\"someone@provider.com\"\r\n                                        value={this.state.EmailOrUsername} onChange={this.onChange} />\r\n                                    <span className=\"text-danger\">{this.state.Errors.EmailOrUsername}</span>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"Password\" className=\"control-label\">Password</label>\r\n                                    <input type=\"password\" className=\"form-control\" name=\"Password\" placeholder=\"Password\"\r\n                                        value={this.state.Password} onChange={this.onChange} />\r\n                                    <span className=\"text-danger\">{this.state.Errors.Password}</span>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"control-label\">Sign In As</label>\r\n                                    <div className=\"dropdown\" style={{ width: \"100%\" }}>\r\n                                        <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                            <span>{this.state.SignInAs}</span>\r\n                                            <span className=\"caret\"></span>\r\n                                        </button>\r\n                                        <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                            <li><Link onClick={e => { this.state.SignInAs = \"Driver\" }} onChange={this.onChange}>Driver</Link></li>\r\n                                            <li><Link onClick={e => { this.state.SignInAs = \"Trader\" }} onChange={this.onChange}>Trader</Link></li>\r\n                                            <li><Link onClick={e => { this.state.SignInAs = \"Broker\" }} onChange={this.onChange}>Broker</Link></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    {this.state.LoginError}\r\n                                    <label className=\"control-label\"><Link to=\"/\">Forgot password</Link></label>\r\n                                    <br />\r\n                                    <label className=\"control-label\">No account? <span><Link to=\"/register\">Register now</Link></span></label>\r\n                                </div>\r\n                                <div>\r\n                                    <input type=\"submit\" value=\"Sign In\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.Preloader}\r\n            </div>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default Login;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { registerDriver } from \"../drivers/DriverFunctions\";\r\nimport { registerTrader } from \"../traders/TraderFunctions\"\r\nimport Strings from \"../../res/strings\";\r\nimport { Required } from \"../../styles/MiscellaneousStyles\";\r\n\r\nimport {\r\n    RegisterCardBack,\r\n    Card,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            Email: \"\",\r\n            Password: \"\",\r\n            ConfirmPassword: \"\",\r\n            RegisterAs: \"Driver\",\r\n            NullError: false,\r\n\r\n            PasswordsMatched: false,\r\n            UsernameOrEmailTaken: false,\r\n            ValidEmail: false,\r\n            ValidPassword: false,\r\n            ValidForm: false,\r\n            Agreed: false,\r\n\r\n            Errors: {\r\n                Email: \"\",\r\n                Password: \"\",\r\n                ConfirmPassword: \"\",\r\n                Agreed: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let fieldValidationErrors = this.state.Errors;\r\n        let ValidEmail = this.state.ValidEmail;\r\n        let ValidPassword = this.state.ValidPassword;\r\n        let PasswordsMatched = this.state.PasswordsMatched;\r\n        let Agreed = this.state.Agreed;\r\n\r\n        switch (field) {\r\n            case \"Email\":\r\n                ValidEmail = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n                fieldValidationErrors.Email = ValidEmail ? \"\" : \"Email is invalid.\";\r\n                break;\r\n            case \"Password\":\r\n                ValidPassword = value.length >= 6;\r\n                fieldValidationErrors.Password = ValidPassword ? \"\" : \"Password is too short.\";\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                PasswordsMatched = this.state.Password === value;\r\n                fieldValidationErrors.ConfirmPassword = PasswordsMatched ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n            case \"IsAgree\":\r\n                Agreed = this.refs.agreementCheckBox.checked;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: fieldValidationErrors,\r\n            ValidEmail: ValidEmail,\r\n            ValidPassword: ValidPassword,\r\n            PasswordsMatched: PasswordsMatched,\r\n            Agreed: Agreed,\r\n        }, this.validateForm);\r\n    }\r\n\r\n    validateForm() {\r\n        this.setState({\r\n            ValidForm: this.state.ValidEmail &&\r\n                this.state.ValidPassword &&\r\n                this.state.PasswordsMatched &&\r\n                this.state.Agreed\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.Username === \"\" ||\r\n            this.state.Email === \"\" ||\r\n            this.state.Password === \"\" ||\r\n            this.state.ConfirmPassword === \"\") {\r\n\r\n            this.setState({\r\n                NullError: true,\r\n                UsernameOrEmailTaken: false,\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const newCredentials = {\r\n            Username: this.state.Username,\r\n            Password: this.state.Password,\r\n            Email: this.state.Email,\r\n            RegisterAs: this.state.RegisterAs,\r\n        }\r\n\r\n        if (newCredentials.RegisterAs == \"Driver\") {\r\n            await registerDriver(newCredentials).then(response => {\r\n                if (response && localStorage.newCredentialsToken) {\r\n                    this.props.history.push(\"/emailConfirmation\");\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        NullError: false,\r\n                        UsernameOrEmailTaken: true,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else if (newCredentials.RegisterAs == \"Trader\" || newCredentials.RegisterAs == \"Broker\") {\r\n            console.log(\"Seting up resources for new trader or broker...\");\r\n            await registerTrader(newCredentials).then(response => {\r\n                if (response && localStorage.newCredentialsToken) {\r\n                    this.props.history.push(\"/emailConfirmation\");\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        NullError: false,\r\n                        UsernameOrEmailTaken: true,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"middle\" style={RegisterCardBack}>\r\n                    <div class=\"theme-default animated fadeIn\" style={Card}>\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/signup.png\" alt=\"signup.png\" height=\"60\" />\r\n                            <div class=\"type-h3\" style={CardTitle}>Sign Up</div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"Username\" class=\"control-label\">Username</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"Username\" type=\"text\" name=\"Username\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Username} onChange={this.onChange} required />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"Email\" class=\"control-label\">Email</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"Email\" type=\"email\" name=\"Email\" class=\"form-control\" placeholder=\"someone@example.com\" autocomplete=\"off\"\r\n                                        value={this.state.Email} onChange={this.onChange} />\r\n                                    <span class=\"text-danger\">{this.state.Errors[\"Email\"]}</span>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"Password\" class=\"control-label\">Password</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"Password\" type=\"password\" name=\"Password\" class=\"form-control\"\r\n                                        value={this.state.Password} onChange={this.onChange} />\r\n                                    <span class=\"text-danger\">{this.state.Errors[\"Password\"]}</span>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"ConfirmPassword\" class=\"control-label\">Confirm Password</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"ConfirmPassword\" type=\"password\" name=\"ConfirmPassword\" class=\"form-control\"\r\n                                        value={this.state.ConfirmPassword} onChange={this.onChange} />\r\n                                    <span class=\"text-danger\">{this.state.Errors[\"ConfirmPassword\"]}</span>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"control-label\">Register As</label>\r\n                                    <div class=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                        <button id=\"example-dropdown\" class=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                            <span>{this.state.RegisterAs}</span>\r\n                                            <span class=\"caret\"></span>\r\n                                        </button>\r\n                                        <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                            <li><Link onClick={e => { this.state.RegisterAs = \"Driver\" }} onChange={this.onChange}>Driver</Link></li>\r\n                                            <li><Link onClick={e => { this.state.RegisterAs = \"Trader\" }} onChange={this.onChange}>Trader</Link></li>\r\n                                            <li><Link onClick={e => { this.state.RegisterAs = \"Broker\" }} onChange={this.onChange}>Broker</Link></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div class=\"checkbox\">\r\n                                        <label class=\"control-label\">\r\n                                            <input ref=\"agreementCheckBox\" type=\"checkbox\" name=\"IsAgree\" value=\"\" onChange={this.onChange}></input>\r\n                                            <span>Agree with our </span>\r\n                                            <span>\r\n                                                <Link data-toggle=\"modal\" data-target=\"#terms\">Terms and Conditions</Link>\r\n                                            </span>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    {this.state.NullError &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">All fields are required.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                    {this.state.UsernameOrEmailTaken &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">Username or email is already taken.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                    {this.state.AgreementError &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">You must agree to our terms and conditions.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n\r\n                                    <label class=\"control-label\">Have an account? <span><Link to=\"/login\">Sign In Now!</Link></span></label>\r\n                                </div>\r\n                                <input type=\"submit\" value=\"Next\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"modal\" id=\"terms\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content animated fadeIn\">\r\n                            <div class=\"modal-header\">\r\n                                <h4 class=\"modal-title\" id=\"modal-sample-label\">Terms of Use</h4>\r\n                            </div>\r\n                            <div class=\"modal-body text-justify\">\r\n                                Your privacy is important to us. <span>{Strings.APP_NAME}</span>'s Privacy Statement describes the types of data we collect from you, how we use your Data, and the legal bases we have to process your Data. The Privacy Statement also describes how {String.APP_NAME} uses your content, which is information submitted by you to {Strings.APP_NAME} via the Services. Where processing is based on consent and to the extent permitted by law, by agreeing to these Terms, you consent to {Strings.APP_NAME}� collection, use and disclosure of your content and data as described in the privacy statement. In some cases, we will provide separate notice and request your consent as referenced in the privacy statement.\r\n                                </div>\r\n                            <div class=\"modal-footer\">\r\n                                <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Ok</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Register;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\"; \r\nimport { Required } from \"../../styles/MiscellaneousStyles\";\r\n\r\nimport {\r\n    EmailConfirmationCardBack,\r\n    Card,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass EmailConfirmation extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            ConfirmationCode: 0,\r\n            NullError: false,\r\n            InvalidCodeError: false,\r\n            Errors: {}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        const code = jwt_decode(localStorage.newCredentialsToken).Code; \r\n\r\n        if (this.state.ConfirmationCode === \"\") {\r\n\r\n            this.setState({\r\n                NullError: true,\r\n                InvalidCodeError: false,\r\n            });\r\n\r\n            return;\r\n        }\r\n        else if (this.state.ConfirmationCode != code) {\r\n\r\n            this.setState({\r\n                NullError: false,\r\n                InvalidCodeError: true,\r\n            });\r\n\r\n            return;\r\n        }\r\n        else {\r\n            localStorage.setItem(\"verifiedCredentialsToken\", localStorage.newCredentialsToken);\r\n            localStorage.removeItem(\"newCredentialsToken\");\r\n            this.props.history.push(\"/setupAccount\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.newCredentialsToken) {\r\n            this.props.history.push(\"/register\");\r\n            return <a />\r\n        }\r\n        else {\r\n            return (\r\n                <div class=\"middle\" style={EmailConfirmationCardBack}>\r\n                    <div class=\"theme-default animated fadeIn\" style={Card}>\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/passcode.png\" alt=\"passcode.png\" height=\"60\" />\r\n                            <div class=\"type-h3\" style={CardTitle}>Email Confirmation</div>\r\n                            <div class=\"type-sh3\">We delivered a confirmation code to your email.</div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"ConfirmationCode\" class=\"control-label\">Confirmation Code</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"ConfirmationCode\" type=\"text\" name=\"ConfirmationCode\" class=\"form-control\"\r\n                                        value={this.state.ConfirmationCode} onChange={this.onChange} />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    {this.state.NullError &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">Confirmation code is required.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                    {this.state.InvalidCodeError &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">Invalid code.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <input type=\"submit\" value=\"Next\" class=\"btn btn-primary\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport default EmailConfirmation;","import React, { Component } from \"react\";\r\nimport { setupDriverAccount } from \"../drivers/DriverFunctions\";\r\nimport { setupTraderAccount } from \"../traders/TraderFunctions\";\r\nimport { Required } from \"../../styles/MiscellaneousStyles\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport {\r\n    AccountSetupCardBack,\r\n    CardLarge,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass AccountSetup extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            Email: \"\",\r\n            Password: \"\",\r\n            RegisterAs: \"\",\r\n\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            DateOfBirth: \"\",\r\n            Gender: \"Male\",\r\n            Nationality: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n\r\n            ValidFirstName: false,\r\n            ValidLastName: false,\r\n            ValidDateOfBirth: false,\r\n            ValidNationality: false,\r\n            ValidAddress: false,\r\n            ValidPhoneNumber: false,\r\n\r\n            ValidForm: false,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                DateOfBirth: \"\",\r\n                Nationality: \"\",\r\n                Address: \"\",\r\n                PhoneNumber: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFirstName = this.state.ValidFirstName;\r\n        let ValidLastName = this.state.ValidLastName;\r\n        let ValidDateOfBirth = this.state.ValidDateOfBirth;\r\n        let ValidNationality = this.state.ValidNationality;\r\n        let ValidAddress = this.state.ValidAddress;\r\n        let ValidPhoneNumber = this.state.ValidPhoneNumber;\r\n\r\n        switch (field) {\r\n            case \"FirstName\":\r\n                ValidFirstName = ((value !== \"\") &&\r\n                    (value.match(/^[a-zA-Z ]+$/)));\r\n                Errors.FirstName = ValidFirstName ? \"\" : \"First name is invalid.\";\r\n                break;\r\n            case \"LastName\":\r\n                ValidLastName = ((value !== \"\") &&\r\n                    (value.match(/^[a-zA-Z ]+$/)));\r\n                Errors.LastName = ValidLastName ? \"\" : \"Last name is invalid.\";\r\n                break;\r\n            case \"DateOfBirth\":\r\n                ValidDateOfBirth = (new Date(value) < new Date());\r\n                Errors.DateOfBirth = ValidDateOfBirth ? \"\" : \"Your Birthday must be earlier than today.\";\r\n                break;\r\n            case \"Nationality\":\r\n                ValidNationality = ((value !== \"\") &&\r\n                    (value.match(/^[a-zA-Z ]+$/)));\r\n                Errors.Nationality = ValidNationality ? \"\" : \"Nationality is invalid.\";\r\n                break;\r\n            case \"Address\":\r\n                ValidAddress = (value !== \"\");\r\n                Errors.Address = ValidAddress ? \"\" : \"Address is required.\";\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = value.match(/^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/);\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFirstName: ValidFirstName,\r\n            ValidLastName: ValidLastName,\r\n            ValidDateOfBirth: ValidDateOfBirth,\r\n            ValidNationality: ValidNationality,\r\n            ValidAddress: ValidAddress,\r\n            ValidPhoneNumber: ValidPhoneNumber\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidFirstName &&\r\n                    this.state.ValidLastName &&\r\n                    this.state.ValidDateOfBirth &&\r\n                    this.state.ValidNationality &&\r\n                    this.state.ValidAddress &&\r\n                    this.state.ValidPhoneNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (localStorage.verifiedCredentialsToken) {\r\n            const decoded = jwt_decode(localStorage.verifiedCredentialsToken);\r\n            this.state.Username = decoded.Username;\r\n            this.state.Email = decoded.Email;\r\n            this.state.Password = decoded.Password;\r\n            this.state.RegisterAs = decoded.RegisterAs;\r\n        }\r\n\r\n        const newUser = {\r\n            Username: this.state.Username,\r\n            Email: this.state.Email,\r\n            Password: this.state.Password,\r\n            RegisterAs: this.state.RegisterAs,\r\n            FirstName: this.state.FirstName,\r\n            LastName: this.state.LastName,\r\n            DateOfBirth: this.state.DateOfBirth,\r\n            Gender: this.state.Gender,\r\n            Address: this.state.Address,\r\n            PhoneNumber: this.state.PhoneNumber,\r\n            Nationality: this.state.Nationality,\r\n        }\r\n\r\n        if (newUser.RegisterAs == \"Driver\") {\r\n            await setupDriverAccount(newUser).then(response => {\r\n                localStorage.removeItem(\"verifiedCredentialsToken\");\r\n                localStorage.setItem(\"IsCreatedSuccessfully\", true);\r\n                this.props.history.push(\"/congratulations\");\r\n            });\r\n        }\r\n        if (newUser.RegisterAs == \"Trader\" || newUser.RegisterAs == \"Broker\") {\r\n            await setupTraderAccount(newUser).then(response => {\r\n                localStorage.removeItem(\"verifiedCredentialsToken\");\r\n                localStorage.setItem(\"IsCreatedSuccessfully\", true);\r\n                this.props.history.push(\"/congratulations\");\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.verifiedCredentialsToken) {\r\n            this.props.history.push(\"/register\");\r\n            return <a />\r\n        }\r\n        else {\r\n            return (\r\n                <div class=\"middle\" style={AccountSetupCardBack}>\r\n                    <div class=\"theme-default animated fadeIn\" style={CardLarge}>\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/create_account.png\" atl=\"create_account.png\" height=\"60\" />\r\n                            <div class=\"type-h3\" style={CardTitle}>\r\n                                Create Account\r\n                                </div>\r\n                            <div class=\"type-sh3\">\r\n                                Just one more step, and you're done!\r\n                                </div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-8\">\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"FirstName\" class=\"control-label\">First Name</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"FirstName\" autocomplete=\"off\"\r\n                                                value={this.state.FirstName} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.FirstName}</span>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"LastName\" class=\"control-label\">Last Name</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"LastName\" autocomplete=\"off\"\r\n                                                value={this.state.LastName} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.LastName}</span>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"DateOfBirth\" class=\"control-label\">Date of Birth</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"date\" class=\"form-control\" name=\"DateOfBirth\" autocomplete=\"off\"\r\n                                                value={this.state.DateOfBirth} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.DateOfBirth}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-8\">\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"Gender\" class=\"control-label\">Gender</label>\r\n                                            <div class=\"dropdown\" style={{ width: \"193px\", maxWidth: \"296px\", }}>\r\n                                                <button id=\"example-dropdown\" class=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                    aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                    <span>{this.state.Gender}</span>\r\n                                                    <span class=\"caret\"></span>\r\n                                                </button>\r\n                                                <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                    <li><a onClick={() => { this.setState({ Gender: \"Male\" }); }}>Male</a></li>\r\n                                                    <li><a onClick={() => { this.setState({ Gender: \"Female\" }); }}>Female</a></li>\r\n                                                </ul>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"Nationality\" class=\"control-label\">Nationality</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"Nationality\" autocomplete=\"off\"\r\n                                                value={this.state.Nationality} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.Nationality}</span>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"PhoneNumber\" class=\"control-label\">Phone Number</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autocomplete=\"off\"\r\n                                                placeholder=\"+XXXXXXXXXXXX\" value={this.state.PhoneNumber} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.PhoneNumber}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-8\">\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"Address\" class=\"control-label\">Address</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <textarea class=\"form-control\" rows=\"5\" name=\"Address\" autocomplete=\"off\"\r\n                                                value={this.state.Address} onChange={this.onChange}></textarea>\r\n                                            <span class=\"text-danger\">{this.state.Errors.Address}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"submit\" value=\"Create\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport default AccountSetup;","import React, { Component } from \"react\";\r\nimport { CongratulationsCardBack, CardXLarge } from \"../../styles/CardStyles\";\r\n\r\nclass EmailConfirmation extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n        localStorage.removeItem(\"IsCreatedSuccessfully\");\r\n        this.props.history.push(\"/login\");\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.IsCreatedSuccessfully) {\r\n            this.props.history.push(\"/register\");\r\n            return <a />\r\n        }\r\n        else {\r\n            return (\r\n                <div class=\"middle\" style={CongratulationsCardBack}>\r\n                    <div class=\"jumbotron theme-default animated fadeIn\" style={CardXLarge}>\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                    <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        alt=\"congrats.png\" src=\"./images/congrats.png\" data-source-index=\"2\" />\r\n                                </div>\r\n                                <div class=\"col-md-12 col-md-pull-12\">\r\n                                    <div class=\"type-h3\">Congratulations</div>\r\n                                    <div class=\"type-sh3\">Your account has been created successfully.</div>\r\n                                    <br />\r\n                                    <form noValidate onSubmit={this.onSubmit}>\r\n                                        <input type=\"submit\" value=\"Sign In\" class=\"btn btn-primary\" />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>);\r\n        }\r\n    }\r\n};\r\n\r\nexport default EmailConfirmation;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { getData, uploadDriverProfilePhoto } from \"../../DriverFunctions\";\r\nimport Strings from \"../../../../res/strings\";\r\n\r\nclass ProfilePhoto extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Image: null,\r\n            PhotoURL: \"./images/defaultProfilePhoto.png\",\r\n            UploadProgress: null\r\n        };\r\n\r\n        this.onImageUpload = this.onImageUpload.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"ProfilePhoto\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Profile photo found.\") {\r\n                    let profilePhoto = response.ProfilePhoto;\r\n\r\n                    this.setState({\r\n                        PhotoURL: profilePhoto.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.state({\r\n                        PhotoURL: \"./images/defaultProfilePhoto.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onImageUpload = async event => {\r\n        this.state.Image = event.target.files[0];\r\n        const formData = new FormData();\r\n\r\n        try {\r\n            formData.append(\"Image\", this.state.Image, this.state.Image.name);\r\n\r\n            await axios.post(Strings.IMAGE_UPLOADER, formData, {\r\n                onUploadProgress: event => {\r\n                    this.setState({\r\n                        UploadProgress: <div className=\"progress-bar\">\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                        </div>\r\n                    });\r\n                }\r\n            }).then(async response => {\r\n                response = response.data;\r\n\r\n                if (response.message === \"Image uploaded successfully.\") {\r\n                    const driverProfilePhoto = {\r\n                        Token: localStorage.Token,\r\n                        PhotoURL: response.imageUrl,\r\n                        FileName: response.filename\r\n                    };\r\n\r\n                    let photoURL = response.imageUrl;\r\n\r\n                    await uploadDriverProfilePhoto(driverProfilePhoto).then(response => {\r\n                        if (response.Message === \"Profile photo is updated.\" ||\r\n                            response.Message === \"Profile photo is added.\") {\r\n\r\n                            this.setState({\r\n                                PhotoURL: photoURL,\r\n                                UploadProgress: null\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }).catch(() => {\r\n                this.setState({\r\n                    ImageURL: \"./images/defaultProfilePhoto.png\",\r\n                    UploadProgress: null\r\n                });\r\n            });\r\n        }\r\n        catch (exception) {\r\n            this.setState({\r\n                UploadProgress: null\r\n            });\r\n\r\n            return;\r\n        }\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <input type=\"file\" onChange={this.onImageUpload} style={{ display: \"none\", }} ref={fileInput => this.fileInput = fileInput} />\r\n            <figure className=\"media\">\r\n                <div className=\"media-img media-img-has-play ratio-1-1\">\r\n                    <a href=\"#\" onClick={() => this.fileInput.click()}>\r\n                        <img style={{\r\n                            border: \"5px solid #3A3A3C\"\r\n                        }}\r\n                            src={this.state.PhotoURL} alt=\"ProfilePhoto.png\" />\r\n                        <i className=\"glyph glyph-edit\"></i>\r\n                    </a>\r\n                </div>\r\n            </figure>\r\n            {this.state.UploadProgress}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ProfilePhoto;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Strings from \"../res/strings\";\r\n\r\nclass ImageUploader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Image: null,\r\n            UploadProgress: null,\r\n        };\r\n\r\n        this.onImageUpload = this.onImageUpload.bind(this);\r\n    }\r\n\r\n    onImageUpload = event => {\r\n        this.state.Image = event.target.files[0];\r\n\r\n        if (this.state.Image) {\r\n            let mimeType = this.state.Image.type;\r\n\r\n            if (!mimeType.startsWith(\"image\")) {\r\n                this.props.OnInvalidImageSelected();\r\n                return;\r\n            }\r\n        }\r\n\r\n        const formData = new FormData();\r\n\r\n        try {\r\n            formData.append(\"Image\", this.state.Image, this.state.Image.name);\r\n        }\r\n        catch (exception) {\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        axios.post(Strings.IMAGE_UPLOADER, formData, {\r\n            onUploadProgress: event => {\r\n                this.setState({\r\n                    UploadProgress: (\r\n                        <div className=\"progress-bar\">\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                        </div>\r\n                    ),\r\n                });\r\n            }\r\n        }).then(async response => {\r\n            this.props.OnImageUploaded(response.data);\r\n\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n        }).catch((error) => {\r\n            this.props.OnImageUploaded(error);\r\n\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async e => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"file\" onChange={this.onImageUpload} style={{ display: \"none\", }} ref={fileInput => this.fileInput = fileInput} />\r\n                <figure className=\"media\">\r\n                    <div className=\"media-img media-img-has-play ratio-1-1\">\r\n                        <a href=\"#\" onClick={() => this.fileInput.click()}>\r\n                            <img src={this.props.Source} alt=\"ProfilePhoto.png\"\r\n                                style={{\r\n                                    border: \"5px solid #3A3A3C\"\r\n                                }} />\r\n                            <i className=\"glyph glyph-edit\"></i>\r\n                        </a>\r\n                    </div>\r\n                </figure>\r\n                {/*<figure className=\"media\">\r\n                    <div className=\"media-img media-img-has-play ratio-movie\" style={{\r\n                        width: this.props.Width,\r\n                        height: this.props.Height,\r\n                        border: \"0px\",\r\n                        padding: \"0px\",\r\n                        border: \"5px solid #3A3A3C\"\r\n                    }}>\r\n                        <a onClick={() => this.fileInput.click()}>\r\n                            <img src={this.props.Source} alt=\"dafault-image.png\" />\r\n                            <i className=\"glyph glyph-edit\"></i>\r\n                        </a>\r\n                    </div>\r\n                </figure>*/}\r\n                {this.state.UploadProgress}\r\n            </div>\r\n                \r\n        );\r\n    }\r\n};\r\n\r\nexport default ImageUploader;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addDrivingLicence } from \"../../../../DriverFunctions.js\";\r\n\r\nclass AddDrivingLicenceDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LicenceNumber: \"\",\r\n            Type: \"\",\r\n            ReleaseDate: new Date(),\r\n            ExpiryDate: new Date(),\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidLicenceNumber: false,\r\n            ValidType: false,\r\n            ValidReleaseDate: false,\r\n            ValidExpiryDate: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                LicenceNumber: \"\",\r\n                Type: \"\",\r\n                ReleaseDate: \"\",\r\n                ExpiryDate: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidLicenceNumber = this.state.ValidLicenceNumber;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidReleaseDate = this.state.ValidReleaseDate;\r\n        let ValidExpiryDate = this.state.ValidExpiryDate;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"LicenceNumber\":\r\n                ValidLicenceNumber = (value !== \"\");\r\n                Errors.LicenceNumber = ValidLicenceNumber ? \"\" : \"Licence number is required.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Licence type is required\";\r\n                break;\r\n            case \"ReleaseDate\":\r\n                ValidReleaseDate = (new Date(value).getTime() < new Date(this.state.ExpiryDate).getTime());\r\n                Errors.ReleaseDate = ValidReleaseDate ? \"\" : \"Release date must be earlier than Expiry date.\";\r\n                break;\r\n            case \"ExpiryDate\":\r\n                ValidExpiryDate = (new Date(value).getTime() > new Date().getTime());\r\n                Errors.ExpiryDate = ValidExpiryDate ? \"\" : \"Expiry Date must be later than today.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidLicenceNumber: ValidLicenceNumber,\r\n            ValidType: ValidType,\r\n            ValidReleaseDate: ValidReleaseDate,\r\n            ValidExpiryDate: ValidExpiryDate,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidLicenceNumber &&\r\n                        this.state.ValidType &&\r\n                        this.state.ValidReleaseDate &&\r\n                        this.state.ValidExpiryDate &&\r\n                        this.state.ValidPhotoURL,\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newDrivingLicence = {\r\n            Token: localStorage.Token,\r\n            LicenceNumber: this.state.LicenceNumber,\r\n            Type: this.state.Type,\r\n            ReleaseDate: this.state.ReleaseDate,\r\n            ExpiryDate: this.state.ExpiryDate,\r\n            PhotoURL: this.state.PhotoURL,\r\n        }\r\n\r\n        console.log(\"Going to add the Driving Licence.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addDrivingLicence(newDrivingLicence).then(response => {\r\n            if (response.Message === \"Driving Licence is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div className=\"modal\" id=\"add-driving-licence-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Add Driving Licence</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"DrivingLicence\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Licence Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"LicenceNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LicenceNumber} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LicenceNumber}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Licence Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Release Date</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"ReleaseDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ReleaseDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ReleaseDate}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Expiry Date</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"ExpiryDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ExpiryDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ExpiryDate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddDrivingLicenceDialog;","import React, { Component } from \"react\";\r\nimport AddDrivingLicenceDialog from \"./AddDrivingLicenceDialog.js\";\r\n\r\nclass AddDrivingLicenceButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddDrivingLicenceDialog: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-driving-licence-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddDrivingLicenceDialog: (<AddDrivingLicenceDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddDrivingLicenceDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />),\r\n                        });\r\n                    }}>\r\n                    <span className=\"fas fa-plus\" aria-hidden=\"true\"></span> Driving Licence\r\n                </button>\r\n                {this.state.AddDrivingLicenceDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddDrivingLicenceButton;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addEntryExitCard } from \"../../../../DriverFunctions.js\";\r\n\r\nclass AddEntryExitCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            EntryExitNumber: \"\",\r\n            Type: \"Simple\",\r\n            ReleaseDate: new Date(),\r\n            NumberOfMonths: \"\",\r\n\r\n            ValidEntryExitNumber: false,\r\n            ValidReleaseDate: false,\r\n            ValidNumberOfMonths: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                EntryExitNumber: \"\",\r\n                ReleaseDate: \"\",\r\n                NumberOfMonths: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidEntryExitNumber = this.state.ValidEntryExitNumber;\r\n        let ValidReleaseDate = this.state.ValidReleaseDate;\r\n        let ValidNumberOfMonths = this.state.ValidNumberOfMonths;\r\n\r\n        switch (field) {\r\n            case \"EntryExitNumber\":\r\n                ValidEntryExitNumber = (value !== \"\");\r\n                Errors.EntryExitNumber = ValidEntryExitNumber ? \"\" : \"Entry/exit number is required.\";\r\n                break;\r\n            case \"ReleaseDate\":\r\n                ValidReleaseDate = (new Date(value).getTime() <= new Date());\r\n                Errors.ReleaseDate = ValidReleaseDate ? \"\" : \"Release date must not be later than today.\";\r\n                break;\r\n            case \"NumberOfMonths\":\r\n                ValidNumberOfMonths = (value !== \"\");\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : \"Number of months is required.\";\r\n\r\n                if (Errors.NumberOfMonths !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNumberOfMonths = (value > 0)\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : \"Number of months must be greater than 0.\";\r\n\r\n                if (Errors.NumberOfMonths !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                let releaseDate = new Date(this.state.ReleaseDate);\r\n                let expiryDate = new Date(releaseDate.setMonth(releaseDate.getMonth() + value));\r\n\r\n                ValidNumberOfMonths = (expiryDate > new Date());\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : `Your card is expired if it is for ${value} months. Your card might be expired on ${expiryDate.toLocaleString()}`;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidEntryExitNumber: ValidEntryExitNumber,\r\n            ValidReleaseDate: ValidReleaseDate,\r\n            ValidNumberOfMonths: ValidNumberOfMonths,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidEntryExitNumber &&\r\n                        this.state.ValidReleaseDate &&\r\n                        this.state.ValidNumberOfMonths\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newEntryExitCard = {\r\n            Token: localStorage.Token,\r\n            EntryExitNumber: this.state.EntryExitNumber,\r\n            Type: this.state.Type,\r\n            ReleaseDate: this.state.ReleaseDate,\r\n            NumberOfMonths: this.state.NumberOfMonths\r\n        };\r\n\r\n        console.log(\"Going to add Entry/Exit Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addEntryExitCard(newEntryExitCard).then(response => {\r\n            if (response.Message === \"Entry/Exit card is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div className=\"modal\" id=\"add-entry-exit-card-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Add Entry/Exit Card</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Entry/Exit Number</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"EntryExitNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.EntryExitNumber} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.EntryExitNumber}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Card Type</label><br />\r\n                                                <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                    <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                        aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                        <span>{this.state.Type}</span>\r\n                                                        <span className=\"caret\"></span>\r\n                                                    </button>\r\n                                                    <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                        <li><a onClick={() => { this.setState({ Type: \"Simple\" }); }}>Simple</a></li>\r\n                                                        <li><a onClick={() => { this.setState({ Type: \"Multiple\" }); }}>Multiple</a></li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Release Date</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"date\" name=\"ReleaseDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.ReleaseDate} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.ReleaseDate}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Number of Months</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"NumberOfMonths\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.NumberOfMonths} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.NumberOfMonths}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddEntryExitCardDialog;","import React, { Component } from \"react\";\r\nimport AddEntryExitCardDialog from \"./AddEntryExitCardDialog.js\";\r\n\r\nclass AddEntryExitCardButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddEntryExitCardDialog: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-entry-exit-card-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddEntryExitCardDialog: <AddEntryExitCardDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddEntryExitCardDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />\r\n                        });\r\n                    }}>\r\n                    <span className=\"fas fa-plus\" aria-hidden=\"true\"></span> Entry/Exit Card</button>\r\n                {this.state.AddEntryExitCardDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddEntryExitCardButton;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addIdentityCard } from \"../../../../DriverFunctions.js\";\r\n\r\nclass AddIdentityCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidIDNumber: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                IDNumber: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidIDNumber = this.state.ValidIDNumber;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"IDNumber\":\r\n                ValidIDNumber = (value !== \"\");\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidIDNumber = (value >= 1000000000 && value <= 9999999999);\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number must be 10-digits long.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidIDNumber: ValidIDNumber,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidIDNumber &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newIdentityCard = {\r\n            Token: localStorage.Token,\r\n            IDNumber: this.state.IDNumber,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to add Identity Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addIdentityCard(newIdentityCard).then(response => {\r\n            if (response.Message === \"Identity card is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div className=\"modal\" id=\"add-identity-card-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Add Identity Card</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    Height=\"220px\"\r\n                                                    Width=\"220px\"\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }}\r\n                                                    ImageCategory=\"IdentityCard\" />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">ID Number</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"IDNumber\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                    value={this.state.IDNumber} onChange={this.onChange} min=\"1000000000\" max=\"9999999999\" />\r\n                                                <span className=\"text-danger\">{this.state.Errors.IDNumber}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddIdentityCardDialog;","import React, { Component } from \"react\";\r\nimport AddIdentityCardDialog from \"./AddIdentityCardDialog.js\";\r\n\r\nclass AddIdentityCardButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddIdentityCardDialog: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-identity-card-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddIdentityCardDialog: <AddIdentityCardDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddIdentityCardDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />,\r\n                        });\r\n                    }}>\r\n                    <span className=\"fas fa-plus\" aria-hidden=\"true\"></span> Identity Card</button>\r\n                {this.state.AddIdentityCardDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddIdentityCardButton;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateDrivingLicence } from \"../../../../DriverFunctions.js\";\r\n\r\nclass EditDrivingLicenceDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LicenceNumber: \"\",\r\n            Type: \"\",\r\n            ReleaseDate: new Date(),\r\n            ExpiryDate: new Date(),\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidLicenceNumber: true,\r\n            ValidType: true,\r\n            ValidReleaseDate: true,\r\n            ValidExpiryDate: true,\r\n            ValidPhotoURL: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                LicenceNumber: \"\",\r\n                Type: \"\",\r\n                ReleaseDate: \"\",\r\n                ExpiryDate: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DrivingLicence\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Driving licence found.\") {\r\n                    let drivingLicence = response.DrivingLicence;\r\n\r\n                    this.setState({\r\n                        DrivingLicenceID: drivingLicence.DrivingLicenceID,\r\n                        LicenceNumber: drivingLicence.LicenceNumber,\r\n                        Type: drivingLicence.Type,\r\n                        ReleaseDate: drivingLicence.ReleaseDate,\r\n                        ExpiryDate: drivingLicence.ExpiryDate,\r\n                        PhotoURL: drivingLicence.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DrivingLicenceID: \"\",\r\n                        LicenceNumber: \"\",\r\n                        Type: \"\",\r\n                        ReleaseDate: new Date(),\r\n                        ExpiryDate: new Date(),\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidLicenceNumber = this.state.ValidLicenceNumber;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidReleaseDate = this.state.ValidReleaseDate;\r\n        let ValidExpiryDate = this.state.ValidExpiryDate;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"LicenceNumber\":\r\n                ValidLicenceNumber = (value !== \"\");\r\n                Errors.LicenceNumber = ValidLicenceNumber ? \"\" : \"Licence number is required.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Licence type is required\";\r\n                break;\r\n            case \"ReleaseDate\":\r\n                ValidReleaseDate = (new Date(value).getTime() < new Date(this.state.ExpiryDate).getTime());\r\n                Errors.ReleaseDate = ValidReleaseDate ? \"\" : \"Release date must be earlier than Expiry date.\";\r\n                break;\r\n            case \"ExpiryDate\":\r\n                ValidExpiryDate = (new Date(value).getTime() > new Date().getTime());\r\n                Errors.ExpiryDate = ValidExpiryDate ? \"\" : \"Expiry Date must be later than today.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidLicenceNumber: ValidLicenceNumber,\r\n            ValidType: ValidType,\r\n            ValidReleaseDate: ValidReleaseDate,\r\n            ValidExpiryDate: ValidExpiryDate,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidLicenceNumber &&\r\n                        this.state.ValidType &&\r\n                        this.state.ValidReleaseDate &&\r\n                        this.state.ValidExpiryDate &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedDrivingLicence = {\r\n            Token: localStorage.Token,\r\n            LicenceNumber: this.state.LicenceNumber,\r\n            Type: this.state.Type,\r\n            ReleaseDate: this.state.ReleaseDate,\r\n            ExpiryDate: this.state.ExpiryDate,\r\n            PhotoURL: this.state.PhotoURL,\r\n        }\r\n\r\n        console.log(\"Going to update the Driving Licence.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateDrivingLicence(updatedDrivingLicence).then(response => {\r\n            if (response.Message === \"Driving Licence is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id=\"edit-driving-licence-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Driving Licence</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"DrivingLicence\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Licence Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"LicenceNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LicenceNumber} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LicenceNumber}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Licence Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Release Date</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"ReleaseDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ReleaseDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ReleaseDate}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Expiry Date</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"ExpiryDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ExpiryDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ExpiryDate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default EditDrivingLicenceDialog;","import React, { Component } from \"react\";\r\nimport EditDriverLicenceDialog from \"./EditDrivingLicenceDialog.js\";\r\nimport { getData, deleteDrivingLicence } from \"../../../../DriverFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass DrivingLicenceListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DrivingLicenceID: \"\",\r\n            LicenceNumber: \"\",\r\n            Type: \"\",\r\n            ReleaseDate: \"\",\r\n            ExpiryDate: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n            EditDrivingLicenceDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedDrivingLicence = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete Driving Licence...`);\r\n\r\n        await deleteDrivingLicence(discardedDrivingLicence).then(response => {\r\n            if (response.Message === \"Driving Licence is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DrivingLicence\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Driving licence found.\") {\r\n                    let drivingLicence = response.DrivingLicence;\r\n\r\n                    this.setState({\r\n                        DrivingLicenceID: drivingLicence.DrivingLicenceID,\r\n                        LicenceNumber: drivingLicence.LicenceNumber,\r\n                        Type: drivingLicence.Type,\r\n                        ReleaseDate: drivingLicence.ReleaseDate,\r\n                        ExpiryDate: drivingLicence.ExpiryDate,\r\n                        PhotoURL: drivingLicence.PhotoURL\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DrivingLicenceID: \"\",\r\n                        LicenceNumber: \"\",\r\n                        Type: \"\",\r\n                        ReleaseDate: \"\",\r\n                        ExpiryDate: \"\",\r\n                        PhotoURL: \"./images/default_image.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#driving-licence-${this.state.DrivingLicenceID}`}>\r\n                    <div className=\"entity-list\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\" style={{ borderRadius: \"50%\" }}>\r\n                                <span className=\"glyph glyph-add\"></span>\r\n                                <span className=\"glyph glyph-remove\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">\r\n                                    <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>{`${this.props.Index}.`}</span>\r\n                                </div>\r\n                                <div className=\"content-text-secondary\">\r\n                                    <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>DRIVING LICENCE</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"collapse\" id={`driving-licence-${this.state.DrivingLicenceID}`}>\r\n                    <div className=\"jumbotron theme-default\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        src={this.state.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                            overflow: \"hidden\",\r\n                                            border: \"5px solid #3A3A3C\",\r\n                                            margin: \"5px\"\r\n                                        }} />\r\n                                </div>\r\n                                <div className=\"col-md-18\">\r\n                                    <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Driving Licence</div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-hashtag\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Licence Number</div>\r\n                                                        <div className=\"content-text-secondary\">{this.state.LicenceNumber}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-star-of-life\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Licence Type</div>\r\n                                                        <div className=\"content-text-secondary\">{this.state.Type}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-calendar\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Release Date</div>\r\n                                                        <div className=\"content-text-secondary\">{this.state.ReleaseDate}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-calendar\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Expiry Date</div>\r\n                                                        <div className=\"content-text-secondary\">{this.state.ExpiryDate}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary\"\r\n                            data-toggle=\"modal\"\r\n                            data-target=\"#edit-driving-licence-dialog\"\r\n                            onMouseDown={() => {\r\n                                this.setState({\r\n                                    EditDrivingLicenceDialog: <EditDriverLicenceDialog\r\n                                        OnCancel={() => {\r\n                                            this.setState({\r\n                                                EditDrivingLicenceDialog: null\r\n                                            });\r\n                                        }}\r\n                                        OnOK={cancelButton => {\r\n                                            cancelButton.click();\r\n                                            this.onComponentUpdated();\r\n                                        }} />\r\n                                });\r\n                            }}>Edit</button>\r\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                    </div>\r\n                </div>             \r\n                {this.state.Preloader}\r\n                {this.state.EditDrivingLicenceDialog}\r\n            </li>        \r\n        );\r\n    }\r\n};\r\n\r\nexport default DrivingLicenceListItem;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateEntryExitCard } from \"../../../../DriverFunctions.js\";\r\n\r\nclass EditEntryExitCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            EntryExitNumber: \"\",\r\n            Type: \"Simple\",\r\n            ReleaseDate: new Date(),\r\n            NumberOfMonths: \"\",\r\n\r\n            ValidEntryExitNumber: true,\r\n            ValidReleaseDate: true,\r\n            ValidNumberOfMonths: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                EntryExitNumber: \"\",\r\n                ReleaseDate: \"\",\r\n                NumberOfMonths: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"EntryExitCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Entry/exit card found.\") {\r\n                    let entryExitCard = response.EntryExitCard;\r\n\r\n                    this.setState({\r\n                        EntryExitNumber: entryExitCard.EntryExitNumber,\r\n                        Type: entryExitCard.Type,\r\n                        ReleaseDate: entryExitCard.ReleaseDate,\r\n                        NumberOfMonths: entryExitCard.NumberOfMonths\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        EntryExitNumber: \"\",\r\n                        Type: \"Simple\",\r\n                        ReleaseDate: new Date(),\r\n                        NumberOfMonths: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidEntryExitNumber = this.state.ValidEntryExitNumber;\r\n        let ValidReleaseDate = this.state.ValidReleaseDate;\r\n        let ValidNumberOfMonths = this.state.ValidNumberOfMonths;\r\n\r\n        switch (field) {\r\n            case \"EntryExitNumber\":\r\n                ValidEntryExitNumber = (value !== \"\");\r\n                Errors.EntryExitNumber = ValidEntryExitNumber ? \"\" : \"Entry/exit number is required.\";\r\n                break;\r\n            case \"ReleaseDate\":\r\n                ValidReleaseDate = (new Date(value).getTime() <= new Date());\r\n                Errors.ReleaseDate = ValidReleaseDate ? \"\" : \"Release date must not be later than today.\";\r\n                break;\r\n            case \"NumberOfMonths\":\r\n                ValidNumberOfMonths = (value !== \"\");\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : \"Number of months is required.\";\r\n\r\n                if (Errors.NumberOfMonths !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNumberOfMonths = (value > 0)\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : \"Number of months must be greater than 0.\";\r\n\r\n                if (Errors.NumberOfMonths !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                let releaseDate = new Date(this.state.ReleaseDate);\r\n                let expiryDate = new Date(releaseDate.setMonth(releaseDate.getMonth() + value));\r\n\r\n                ValidNumberOfMonths = (expiryDate > new Date());\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : `Your card is expired if it is for ${value} months. Your card might be expired on ${expiryDate.toLocaleString()}`;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidEntryExitNumber: ValidEntryExitNumber,\r\n            ValidReleaseDate: ValidReleaseDate,\r\n            ValidNumberOfMonths: ValidNumberOfMonths,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidEntryExitNumber &&\r\n                    this.state.ValidReleaseDate &&\r\n                    this.state.ValidNumberOfMonths\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedEntryExitCard = {\r\n            Token: localStorage.Token,\r\n            EntryExitNumber: this.state.EntryExitNumber,\r\n            Type: this.state.Type,\r\n            ReleaseDate: this.state.ReleaseDate,\r\n            NumberOfMonths: this.state.NumberOfMonths\r\n        };\r\n\r\n        console.log(\"Going to update Entry/Exit Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateEntryExitCard(updatedEntryExitCard).then(response => {\r\n            if (response.Message === \"Entry/Exit card is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal\" id=\"edit-entry-exit-card-dialog\"\r\n                tabindex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Edit Entry/Exit Card</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Entry/Exit Number</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"EntryExitNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.EntryExitNumber} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.EntryExitNumber}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Card Type</label><br />\r\n                                                <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                    <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                        aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                        <span>{this.state.Type}</span>\r\n                                                        <span className=\"caret\"></span>\r\n                                                    </button>\r\n                                                    <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                        <li><a onClick={() => {\r\n                                                            this.setState({ Type: \"Simple\" });\r\n                                                            this.validateField(\"\", \"\");\r\n                                                        }}>Simple</a></li>\r\n                                                        <li><a onClick={() => {\r\n                                                            this.setState({ Type: \"Multiple\" });\r\n                                                            this.validateField(\"\", \"\");\r\n                                                        }}>Multiple</a></li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Release Date</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"date\" name=\"ReleaseDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.ReleaseDate} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.ReleaseDate}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Number of Months</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"NumberOfMonths\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.NumberOfMonths} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.NumberOfMonths}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default EditEntryExitCardDialog;","import React, { Component } from \"react\";\r\nimport EditEntryExitCardDialog from \"./EditEntryExitCardDialog.js\";\r\nimport { getData, deleteEntryExitCard } from \"../../../../DriverFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass EntryExitCardListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            EntryExitCardID: \"\",\r\n            EntryExitNumber: \"\",\r\n            Type: \"Simple\",\r\n            ReleaseDate: \"\",\r\n            NumberOfMonths: \"\",\r\n\r\n            EditEntryExitCardDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedEntryExitCard = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete Exit/Entry card.`);\r\n\r\n        await deleteEntryExitCard(discardedEntryExitCard).then(response => {\r\n            if (response.Message === \"Entry/Exit card is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"EntryExitCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Entry/exit card found.\") {\r\n                    let entryExitCard = response.EntryExitCard;\r\n\r\n                    this.setState({\r\n                        EntryExitCardID: entryExitCard.EntryExitCardID,\r\n                        EntryExitNumber: entryExitCard.EntryExitNumber,\r\n                        Type: entryExitCard.Type,\r\n                        ReleaseDate: entryExitCard.ReleaseDate,\r\n                        NumberOfMonths: entryExitCard.NumberOfMonths,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        EntryExitCardID: \"\",\r\n                        EntryExitNumber: \"\",\r\n                        Type: \"Simple\",\r\n                        ReleaseDate: \"\",\r\n                        NumberOfMonths: \"\",\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n            <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#entry-exit-card-${this.state.EntryExitCardID}`}>\r\n                <div className=\"entity-list\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\" style={{ borderRadius: \"50%\" }}>\r\n                            <span className=\"glyph glyph-add\"></span>\r\n                            <span className=\"glyph glyph-remove\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>{`${this.props.Index}.`}</span>\r\n                            </div>\r\n                            <div className=\"content-text-secondary\">\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>ENTRY/EXIT CARD</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`entry-exit-card-${this.state.EntryExitCardID}`}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-24\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Entry/Exit Card</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Entry/Exit Number</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.EntryExitNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-star-of-life\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Entry/Exit Type</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.Type}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-calendar\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Release Date</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.ReleaseDate}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-calendar\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Number of Months</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.NumberOfMonths}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#edit-entry-exit-card-dialog\"\r\n                        onMouseDown={() => {\r\n                            this.setState({\r\n                                EditEntryExitCardDialog: <EditEntryExitCardDialog\r\n                                    OnCancel={() => {\r\n                                        this.setState({\r\n                                            EditEntryExitCardDialog: null\r\n                                        });\r\n                                    }}\r\n                                    OnOK={cancelButton => {\r\n                                        cancelButton.click();\r\n                                        this.onComponentUpdated();\r\n                                    }} />\r\n                            });\r\n                        }}>Edit</button>\r\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                </div>\r\n            </div>\r\n            {this.state.Preloader}\r\n            {this.state.EditEntryExitCardDialog}\r\n        </li>;\r\n    }\r\n};\r\n\r\nexport default EntryExitCardListItem;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateIdentityCard } from \"../../../../DriverFunctions.js\";\r\n\r\nclass EditIdentityCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidIDNumber: true,\r\n            ValidPhotoURL: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                IDNumber: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Identity card found.\") {\r\n                    let identityCard = response.IdentityCard;\r\n\r\n                    this.setState({\r\n                        IDNumber: identityCard.IDNumber,\r\n                        PhotoURL: identityCard.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        IDNumber: \"\",\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidIDNumber = this.state.ValidIDNumber;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"IDNumber\":\r\n                ValidIDNumber = (value !== \"\");\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidIDNumber = (value >= 1000000000 && value <= 9999999999);\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number must be 10-digits long.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidIDNumber: ValidIDNumber,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidIDNumber &&\r\n                    this.state.ValidPhotoURL\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedIdentityCard = {\r\n            Token: localStorage.Token,\r\n            IDNumber: this.state.IDNumber,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to update Identity Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateIdentityCard(updatedIdentityCard).then(response => {\r\n            if (response.Message === \"Identity card is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id=\"edit-identity-card-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Identity Card</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"IdentityCard\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">ID Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"IDNumber\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.IDNumber} onChange={this.onChange} min=\"1000000000\" max=\"99999999999\" />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.IDNumber}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default EditIdentityCardDialog;","import React, { Component } from \"react\";\r\nimport EditIdentityCardDialog from \"./EditIdentityCardDialog.js\";\r\nimport { getData, deleteIdentityCard } from \"../../../../DriverFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass IdentityCardListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IdentityCardID: \"\",\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            EditIdentityCardDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedIdentityCard = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete Identity Card.`);\r\n\r\n        await deleteIdentityCard(discardedIdentityCard).then(response => {\r\n            if (response.Message === \"Identity card is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Identity card found.\") {\r\n                    let identityCard = response.IdentityCard;\r\n\r\n                    this.setState({\r\n                        IdentityCardID: identityCard.IdentityCardID,\r\n                        IDNumber: identityCard.IDNumber,\r\n                        PhotoURL: identityCard.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        IdentityCardID: \"\",\r\n                        IDNumber: \"\",\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n            <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#identity-card-${this.state.IdentityCardID}`}>\r\n                <div className=\"entity-list\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\" style={{ borderRadius: \"50%\" }}>\r\n                            <span className=\"glyph glyph-add\"></span>\r\n                            <span className=\"glyph glyph-remove\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>{`${this.props.Index}.`}</span>\r\n                            </div>\r\n                            <div className=\"content-text-secondary\">\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>IDENTITY CARD</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`identity-card-${this.state.IdentityCardID}`}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={this.state.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Identity Card</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">ID Number</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.IDNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#edit-identity-card-dialog\"\r\n                        onMouseDown={() => {\r\n                            this.setState({\r\n                                EditIdentityCardDialog: (<EditIdentityCardDialog\r\n                                    OnCancel={() => {\r\n                                        this.setState({\r\n                                            EditIdentityCardDialog: null\r\n                                        });\r\n                                    }}\r\n                                    OnOK={cancelButton => {\r\n                                        cancelButton.click();\r\n                                        this.onComponentUpdated();\r\n                                    }} />)\r\n                            });\r\n                        }}>Edit</button>\r\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                </div>\r\n            </div> \r\n            {this.state.Preloader}\r\n            {this.state.EditIdentityCardDialog}\r\n        </li>;\r\n    }\r\n};\r\n\r\nexport default IdentityCardListItem;","import React, { Component } from \"react\";\r\nimport AddDrivingLicenceButton from \"./drivingLicence/AddDrivingLicenceButton.js\";\r\nimport AddEntryExitCardButton from \"./entryExitCard/AddEntryExitCardButton.js\";\r\nimport AddIdentityCardButton from \"./identityCard/AddIdentityCardButton.js\";\r\nimport DrivingLicenceListItem from \"./drivingLicence/DrivingLicenceListItem.js\"; \r\nimport EntryExitCardListItem from \"./entryExitCard/EntryExitCardListItem.js\";\r\nimport IdentityCardListItem from \"./identityCard/IdentityCardListItem.js\";\r\nimport { getData } from \"../../../DriverFunctions\";\r\n\r\nclass DocumentsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddDrivingLicenceButton: null,\r\n            AddEntryExitCardButton: null,\r\n            AddIdentityCardButton: null, \r\n            DrivingLicenceListItem: null,\r\n            EntryExitCardListItem: null,\r\n            IdentityCardListItem: null,\r\n        };\r\n\r\n        this.onDocumentsUpdated = this.onDocumentsUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onDocumentsUpdated();\r\n    }\r\n\r\n    onDocumentsUpdated = () => {\r\n        let index = 0;\r\n        let drivingLicence;\r\n        let entryExitCard;\r\n        let identityCard;\r\n\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DrivingLicence\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Driving licence found.\") {\r\n                    drivingLicence = response.DrivingLicence;\r\n                }\r\n                else {\r\n                    drivingLicence = undefined;\r\n                }\r\n\r\n                request = {\r\n                    Token: localStorage.Token,\r\n                    Get: \"EntryExitCard\"\r\n                };\r\n\r\n                getData(request).then(response => {\r\n                    if (response.Message === \"Entry/exit card found.\") {\r\n                        entryExitCard = response.EntryExitCard;\r\n                    }\r\n                    else {\r\n                        entryExitCard = undefined;\r\n                    }\r\n\r\n                    request = {\r\n                        Token: localStorage.Token,\r\n                        Get: \"IdentityCard\"\r\n                    };\r\n\r\n                    getData(request).then(response => {\r\n                        if (response.Message === \"Identity card found.\") {\r\n                            identityCard = response.IdentityCard;\r\n                        }\r\n                        else {\r\n                            identityCard = undefined;\r\n                        }\r\n\r\n                        (drivingLicence) ? this.setState({\r\n                            AddDrivingLicenceButton: null,\r\n                            DrivingLicenceListItem: <DrivingLicenceListItem\r\n                                Index={++index}\r\n                                OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                        }) : this.setState({\r\n                            AddDrivingLicenceButton: <AddDrivingLicenceButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                            DrivingLicenceListItem: null\r\n                        });\r\n\r\n                        (entryExitCard) ? this.setState({\r\n                            AddEntryExitCardButton: null,\r\n                            EntryExitCardListItem: <EntryExitCardListItem\r\n                                Index={++index}\r\n                                OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                        }) : this.setState({\r\n                            AddEntryExitCardButton: <AddEntryExitCardButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                            EntryExitCardListItem: null\r\n                        });\r\n\r\n                        (identityCard) ? this.setState({\r\n                            AddIdentityCardButton: null,\r\n                            IdentityCardListItem: <IdentityCardListItem\r\n                                Index={++index}\r\n                                OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                        }) : this.setState({\r\n                            AddIdentityCardButton: <AddIdentityCardButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                            IdentityCardListItem: null\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Documents</div>\r\n                <div style={{ padding: \"10px\", backgroundColor: \"#E5E5E5\" }}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-18 col-md-offset-2\"></div>\r\n                        <div className=\"col-md-4 text-right\">\r\n                            {this.state.AddDrivingLicenceButton}\r\n                            {this.state.AddEntryExitCardButton}\r\n                            {this.state.AddIdentityCardButton}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ol className=\"list-items\" style={{ marginTop: \"0px\" }}>\r\n                    {this.state.DrivingLicenceListItem}\r\n                    {this.state.EntryExitCardListItem}\r\n                    {this.state.IdentityCardListItem}\r\n                </ol>\r\n            </section>         \r\n        );\r\n    }\r\n};\r\n\r\nexport default DocumentsList;","import React, { Component } from \"react\";\r\n\r\nclass Rating extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div class={`rating ${this.props.Size} ${this.props.Color}`}>\r\n                <div class=\"rating-stars\">\r\n            <ul class=\"rating-stars-background\">\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                    </ul>\r\n                    <ul class=\"rating-stars-value\" style={{ width: `${this.props.Rating}%` }}>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                    </ul>\r\n                </div>\r\n                {this.props.Label ? <div class=\"rating-label rating-label-right\">{this.props.Label}</div> : null}\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Rating;","import React, { Component } from \"react\";\r\n\r\nclass PageHeading extends Component {\r\n    render() {\r\n        return <section>\r\n            <div style={{ backgroundColor: \"#1C6D6E\", padding: \"5px 5px 5px 20px\" }}>\r\n                <div className=\"sh1 color-light\" style={{ fontWeight: \"bold\" }}>{`/ ${this.props.Heading}`}</div>\r\n            </div>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#26525F\" }}></div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PageHeading;","import React, { Component } from \"react\";\r\nimport ProfilePhoto from \"./ProfilePhoto\";\r\nimport DocumentsList from \"./documents/DocumentsList.js\";\r\nimport Rating from \"../../../../controls/Rating\";\r\nimport { getData } from \"../../DriverFunctions.js\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Profile extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            Username: \"\",\r\n            Password: \"\",\r\n            Email: \"\",\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\",\r\n            Active: null,\r\n            RatingAndReviews: {},\r\n\r\n            WarningAlert: null,\r\n            Errors: {}\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Driver\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver found.\") {\r\n                    let driver = response.Driver;\r\n\r\n                    this.setState({\r\n                        Username: driver.Username,\r\n                        Password: driver.Password,\r\n                        Email: driver.Email,\r\n                        FirstName: driver.FirstName,\r\n                        LastName: driver.LastName,\r\n                        DateOfBirth: driver.DateOfBirth,\r\n                        Gender: driver.Gender,\r\n                        Address: driver.Address,\r\n                        PhoneNumber: driver.PhoneNumber,\r\n                        Nationality: driver.Nationality,\r\n                        Active: driver.Active,\r\n                        RatingAndReviews: response.RatingAndReviews\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Username: \"\",\r\n                        Password: \"\",\r\n                        Email: \"\",\r\n                        FirstName: \"\",\r\n                        LastName: \"\",\r\n                        Address: \"\",\r\n                        PhoneNumber: \"\",\r\n                        Gender: \"\",\r\n                        Nationality: \"\",\r\n                        DateOfBirth: \"\",\r\n                        Active: null,\r\n                        RatingAndReviews: {}\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const ratingAndReviews = this.state.RatingAndReviews;\r\n\r\n        return <section>\r\n            <PageHeading Heading=\"PROFILE\" />\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <ProfilePhoto />\r\n                        </div>\r\n                        <div className=\"col-md-18\">\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                {this.state.FirstName + \" \" + this.state.LastName}\r\n                            </div>\r\n                            <div className=\"type-sh3\">\r\n                                <span className=\"fas fa-briefcase m-r-xxxs\" style={{ color: \"#606060\" }}></span>Driver\r\n                            </div>\r\n                            <div className=\"type-sh3\">\r\n                                <span><Rating Rating={ratingAndReviews.Reviews > 0 ? ratingAndReviews.Rating : 0}\r\n                                    Color=\"\" Size=\"rating-small\"\r\n                                    Label={ratingAndReviews.Reviews > 0 ?\r\n                                        `(${ratingAndReviews.Reviews} Review(s))` : `No Reviews`} /></span>\r\n                            </div>\r\n                            \r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-globe-asia\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Active</div>\r\n                                                <div className=\"content-text-secondary\">{(this.state.Active === 1) ?\r\n                                                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-phone\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Phone Number</div>\r\n                                                <div className=\"content-text-secondary\">{this.state.PhoneNumber}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-at\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Username</div>\r\n                                                <div className=\"content-text-secondary\">{this.state.Username}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-envelope\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Email</div>\r\n                                                <div className=\"content-text-secondary\">{this.state.Email}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\" }}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-24\">\r\n                            <div className=\"type-h3\" style={{ paddingTop: \"0px\" }}>Details</div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list theme-alt\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                <span className=\"fas fa-birthday-cake color-default\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Birthday</div>\r\n                                                <div className=\"content-text-secondary\">{this.state.DateOfBirth}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list theme-alt\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                <span className={(this.state.Gender === \"Male\") ? \"fas fa-male color-default\" : \"fas fa-female color-default\"}></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Gender</div>\r\n                                                <div className=\"content-text-secondary\">{this.state.Gender}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list theme-alt\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                <span className=\"fas fa-flag color-default\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Nationality</div>\r\n                                                <div className=\"content-text-secondary\">{this.state.Nationality}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list theme-alt\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                <span className=\"fas fa-map-marker-alt color-default\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Address</div>\r\n                                                <div className=\"content-text-secondary\">{this.state.Address}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <DocumentsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Profile;","import React, { Component } from \"react\";\r\nimport { getData, updateTruck } from \"../../DriverFunctions\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\n\r\nclass TruckSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            PlateNumber: \"\",\r\n            Owner: \"\",\r\n            ProductionYear: \"\",\r\n            Brand: \"\",\r\n            Model: \"\",\r\n            Type: \"\",\r\n            MaximumWeight: \"\",\r\n\r\n            ValidPlateNumber: true,\r\n            ValidOwner: true,\r\n            ValidProductionYear: true,\r\n            ValidBrand: true,\r\n            ValidModel: true,\r\n            ValidType: true,\r\n            ValidMaximumWeight: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                PlateNumber: \"\",\r\n                Owner: \"\",\r\n                ProductionYear: \"\",\r\n                Brand: \"\",\r\n                Model: \"\",\r\n                Type: \"\",\r\n                MaximumWeight: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Truck\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Truck found.\") {\r\n                    let truck = response.Truck;\r\n\r\n                    this.setState({\r\n                        PlateNumber: truck.PlateNumber,\r\n                        Owner: truck.Owner,\r\n                        ProductionYear: truck.ProductionYear,\r\n                        Brand: truck.Brand,\r\n                        Model: truck.Model,\r\n                        Type: truck.Type,\r\n                        MaximumWeight: truck.MaximumWeight\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        PlateNumber: \"\",\r\n                        Owner: \"\",\r\n                        ProductionYear: \"\",\r\n                        Brand: \"\",\r\n                        Model: \"\",\r\n                        Type: \"\",\r\n                        MaximumWeight: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidPlateNumber = this.state.ValidPlateNumber;\r\n        let ValidOwner = this.state.ValidOwner;\r\n        let ValidProductionYear = this.state.ValidProductionYear;\r\n        let ValidBrand = this.state.ValidBrand;\r\n        let ValidModel = this.state.ValidModel;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidMaximumWeight = this.state.MaximumWeight;\r\n\r\n        switch (field) {\r\n            case \"PlateNumber\":\r\n                ValidPlateNumber = ((value !== \"\") && (value >= 1 && value <= 999));\r\n                Errors.PlateNumber = ValidPlateNumber ? \"\" : \"Plate Number must be between 001 and 999.\";\r\n                break;\r\n            case \"Owner\":\r\n                ValidOwner = (value !== \"\");\r\n                Errors.Owner = ValidOwner ? \"\" : \"Owner is required.\";\r\n                break;\r\n            case \"ProductionYear\":\r\n                let currentYear = new Date().getFullYear();\r\n                ValidProductionYear = ((value !== \"\") && (value >= 2000 && value <= currentYear));\r\n                Errors.ProductionYear = ValidProductionYear ? \"\" : `Production Year must be between 2000 and ${currentYear}`;\r\n                break;\r\n            case \"Brand\":\r\n                ValidBrand = (value !== \"\");\r\n                Errors.Brand = ValidBrand ? \"\" : \"Brand is required.\";\r\n                break;\r\n            case \"Model\":\r\n                ValidModel = (value !== \"\");\r\n                Errors.Model = ValidModel ? \"\" : \"Model is required.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required\";\r\n                break;\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n\r\n                if (Errors.MaximumWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidMaximumWeight = (value >= 700);\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum weight must be greater than 699.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPlateNumber: ValidPlateNumber,\r\n            ValidOwner: ValidOwner,\r\n            ValidProductionYear: ValidProductionYear,\r\n            ValidBrand: ValidBrand,\r\n            ValidModel: ValidModel,\r\n            ValidType: ValidType,\r\n            ValidMaximumWeight: ValidMaximumWeight\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidPlateNumber &&\r\n                    this.state.ValidOwner &&\r\n                    this.state.ValidProductionYear &&\r\n                    this.state.ValidBrand &&\r\n                    this.state.ValidModel &&\r\n                    this.state.ValidType &&\r\n                    this.state.MaximumWeight\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedTruck = {\r\n            Token: localStorage.Token,\r\n            PlateNumber: this.state.PlateNumber,\r\n            Owner: this.state.Owner,\r\n            ProductionYear: this.state.ProductionYear,\r\n            Brand: this.state.Brand,\r\n            Model: this.state.Model,\r\n            Type: this.state.Type,\r\n            MaximumWeight: this.state.MaximumWeight\r\n        };\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateTruck(updatedTruck).then(response => {\r\n            if (response.Message === \"Truck is updated.\") {\r\n                this.setState({\r\n                    Preloader: null,\r\n                    ValidForm: false\r\n                });\r\n\r\n                this.props.OnTruckSettingsUpdated();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Truck Settings</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-list-ol\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"number\" name=\"PlateNumber\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.PlateNumber} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Plate Number</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.PlateNumber}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-user\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"Owner\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Owner} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Owner</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.Owner}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-calendar-day\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"number\" name=\"ProductionYear\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.ProductionYear} onChange={this.onChange} placeholder=\"XXXX\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Production Year</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"ProductionYear\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-copyright\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"Brand\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Brand} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Brand</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.Brand}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-list-ol\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"Model\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Model} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Truck Model</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.Model}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-cog\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Type} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Truck Type</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.Type}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-weight\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"number\" name=\"MaximumWeight\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Maximum Weight (GVW)</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.MaximumWeight}</div>\r\n                            </div>\r\n                        </div>                      \r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default TruckSettings;","import React, { Component } from \"react\";\r\nimport { addTruck } from \"../../DriverFunctions\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { Required } from \"../../../../styles/MiscellaneousStyles\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader\";\r\n\r\nclass AddTruckDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PlateNumber: \"\",\r\n            Owner: \"\",\r\n            ProductionYear: \"\",\r\n            Brand: \"\",\r\n            Model: \"\",\r\n            Type: \"\",\r\n            MaximumWeight: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidPlateNumber: false,\r\n            ValidOwner: false,\r\n            ValidProductionYear: false,\r\n            ValidBrand: false,\r\n            ValidModel: false,\r\n            ValidType: false,\r\n            ValidMaximumWeight: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                PlateNumber: \"\",\r\n                Owner: \"\",\r\n                ProductionYear: \"\",\r\n                Brand: \"\",\r\n                Model: \"\",\r\n                Type: \"\",\r\n                MaximumWeight: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidPlateNumber = this.state.ValidPlateNumber;\r\n        let ValidOwner = this.state.ValidOwner;\r\n        let ValidProductionYear = this.state.ValidProductionYear;\r\n        let ValidBrand = this.state.ValidBrand;\r\n        let ValidModel = this.state.ValidModel;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidMaximumWeight = this.state.ValidMaximumWeight;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"PlateNumber\":\r\n                ValidPlateNumber = (value !== \"\");\r\n                Errors.PlateNumber = ValidPlateNumber ? \"\" : \"Plate number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPlateNumber = (value >= 100 && value <= 999);\r\n                Errors.PlateNumber = ValidPlateNumber ? \"\" : \"Plate number must be 3-digits long.\";\r\n                break;\r\n            case \"Owner\":\r\n                ValidOwner = (value !== \"\");\r\n                Errors.Owner = ValidOwner ? \"\" : \"Owner is required.\";\r\n                break;\r\n            case \"ProductionYear\":\r\n                let currentYear = new Date().getFullYear();\r\n                ValidProductionYear = ((value !== \"\") && (value >= 2000 && value <= currentYear));\r\n                Errors.ProductionYear = ValidProductionYear ? \"\" : `Production Year must be between 2000 and ${currentYear}`;\r\n                break;\r\n            case \"Brand\":\r\n                ValidBrand = (value !== \"\");\r\n                Errors.Brand = ValidBrand ? \"\" : \"Brand is required.\";\r\n                break;\r\n            case \"Model\":\r\n                ValidModel = (value !== \"\");\r\n                Errors.Model = ValidModel ? \"\" : \"Model is required.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required\";\r\n                break;\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n\r\n                if (Errors.MaximumWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidMaximumWeight = (value >= 700);\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum weight must be greater than 699.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPlateNumber: ValidPlateNumber,\r\n            ValidOwner: ValidOwner,\r\n            ValidProductionYear: ValidProductionYear,\r\n            ValidBrand: ValidBrand,\r\n            ValidModel: ValidModel,\r\n            ValidType: ValidType,\r\n            ValidMaximumWeight: ValidMaximumWeight,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidPlateNumber &&\r\n                        this.state.ValidOwner &&\r\n                        this.state.ValidProductionYear &&\r\n                        this.state.ValidBrand &&\r\n                        this.state.ValidModel &&\r\n                        this.state.ValidType &&\r\n                        this.state.ValidMaximumWeight &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newTruck = {\r\n            Token: localStorage.Token,\r\n            PlateNumber: this.state.PlateNumber,\r\n            Owner: this.state.Owner,\r\n            ProductionYear: this.state.ProductionYear,\r\n            Brand: this.state.Brand,\r\n            Model: this.state.Model,\r\n            Type: this.state.Type,\r\n            MaximumWeight: this.state.MaximumWeight,\r\n            PhotoURL: this.state.PhotoURL\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true \r\n        });\r\n\r\n        await addTruck(newTruck).then(response => {\r\n            if (response.Message === \"Truck is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal\" id=\"add-truck-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <p>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">New Truck</div>\r\n                                    <div className=\"type-sh3\">These detials will be displayed on your profile.</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <ImageUploader Source={this.state.PhotoURL}\r\n                                                    Height=\"220px\" Width=\"220px\"\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }}\r\n                                                    ImageCategory=\"Truck\" />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">                                          \r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Plate Number</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"PlateNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.PlateNumber} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.PlateNumber}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Owner</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Owner\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Owner} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Owner}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Production Year</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"ProductionYear\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.ProductionYear} onChange={this.onChange} placeholder=\"XXXX\" />\r\n                                                <span className=\"text-danger\">{this.state.Errors.ProductionYear}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Brand</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Brand\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Brand} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Brand}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Truck Model</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Model\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Model} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Model}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Truck Type</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Type} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Maximum Weight (GVW)</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"MaximumWeight\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.MaximumWeight}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\"\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>             \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddTruckDialog;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles\";\r\nimport ImageUploader from \"../../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { addTrailer } from \"../../../DriverFunctions.js\";\r\n\r\nclass AddTrailerDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            MaximumWeight: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n            Type: \"\",\r\n\r\n            ValidMaximumWeight: false,\r\n            ValidPhotoURL: false,\r\n            ValidType: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                MaximumWeight: \"\",\r\n                PhotoURL: \"\",\r\n                Type: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidMaximumWeight = this.state.ValidMaximumWeight;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n        let ValidType = this.state.ValidType;\r\n\r\n        switch (field) {\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n\r\n                if (Errors.MaximumWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidMaximumWeight = (value >= 700);\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum weight must be greater than 699.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidMaximumWeight: ValidMaximumWeight,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n            ValidType: ValidType\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidMaximumWeight &&\r\n                        this.state.ValidPhotoURL &&\r\n                        this.state.ValidType\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newTrailer = {\r\n            Token: localStorage.Token,\r\n            MaximumWeight: this.state.MaximumWeight,\r\n            PhotoURL: this.state.PhotoURL,\r\n            Type: this.state.Type\r\n        }\r\n\r\n        console.log(\"Going to add the trailer...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addTrailer(newTrailer).then(response => {\r\n            if (response.Message === \"Trailer is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id=\"add-trailer-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">New Trailer</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\" Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Maximum Weight (GVW)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"MaximumWeight\" className=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.MaximumWeight}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Trailer Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddTrailerDialog;","import React, { Component } from \"react\";\r\nimport AddTrailerDialog from \"./AddTrailerDialog\";\r\n\r\nclass AddTrailer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddTrailerDialog: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-truck-pickup\"></span>   Trailers</div>\r\n                            <p className=\"color-light\">RECOMMENDED: Since your truck is all set up, you're good to go for adding up to TWO trailers to it.</p>\r\n                            <div className=\"btn-group\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-primary\"\r\n                                    style={{ minWidth: \"152px\" }}\r\n                                    data-toggle=\"modal\"\r\n                                    data-target=\"#add-trailer-dialog\"\r\n                                    onMouseDown={() => {\r\n                                        this.setState({\r\n                                            AddTrailerDialog: <AddTrailerDialog\r\n                                                OnCancel={() => {\r\n                                                    this.setState({\r\n                                                        AddTrailerDialog: null\r\n                                                    });\r\n                                                }}\r\n                                                OnOK={cancelButton => {\r\n                                                    cancelButton.click();\r\n                                                    this.props.OnTrailerAdded();\r\n                                                }} />\r\n                                        });\r\n                                    }}>Add Trailer</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {this.state.AddTrailerDialog} \r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddTrailer;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles\";\r\nimport ImageUploader from \"../../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { updateTrailer } from \"../../../DriverFunctions.js\";\r\n\r\nclass EditTrailerDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            MaximumWeight: this.props.Trailer.MaximumWeight,\r\n            PhotoURL: this.props.Trailer.PhotoURL,\r\n            Type: this.props.Trailer.Type,\r\n\r\n            ValidMaximumWeight: true,\r\n            ValidPhotoURL: true,\r\n            ValidType: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                MaximumWeight: \"\",\r\n                PhotoURL: \"\",\r\n                Type: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidMaximumWeight = this.state.ValidMaximumWeight;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n        let ValidType = this.state.ValidType;\r\n\r\n        switch (field) {\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n\r\n                if (Errors.MaximumWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidMaximumWeight = (value >= 700);\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum weight must be greater than 699.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidMaximumWeight: ValidMaximumWeight,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n            ValidType: ValidType\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidMaximumWeight &&\r\n                        this.state.ValidPhotoURL &&\r\n                        this.state.ValidType\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedTrailer = {\r\n            Token: localStorage.Token,\r\n            TrailerID: this.props.Trailer.TrailerID,\r\n            MaximumWeight: this.state.MaximumWeight,\r\n            PhotoURL: this.state.PhotoURL,\r\n            Type: this.state.Type\r\n        }\r\n\r\n        console.log(\"Going to update trailer...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        updateTrailer(updatedTrailer).then(response => {\r\n            if (response.Message === \"Trailer is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id={`edit-trailer-dialog${this.props.dialogID}`}\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Trailer</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\" Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory={this.state.ImageCategory} />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Maximum Weight (GVW)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"MaximumWeight\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.MaximumWeight}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Trailer Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default EditTrailerDialog;","import React, { Component } from \"react\";\r\nimport { deleteTrailer } from \"../../../DriverFunctions.js\";\r\nimport EditTrailerDialog from \"./EditTrailerDialog.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\n\r\nclass TrailersList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Trailers: this.props.Trailers,\r\n            EditTrailerDialogs: [],\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async index => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedTrailer = {\r\n            Token: localStorage.Token,\r\n            TrailerID: this.state.Trailers[index].TrailerID \r\n        };\r\n\r\n        console.log(`Going to delete Trailers[${index}]...`);\r\n\r\n        await deleteTrailer(discardedTrailer).then(response => {\r\n            if (response.Message === \"Trailer is deleted.\") {\r\n                this.props.OnTrailersUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Trailers</div>\r\n            <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                {this.state.Trailers.map((value, index) => {\r\n                    return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                        <div className=\"jumbotron theme-default\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-6\">\r\n                                        <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                            src={value.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                                overflow: \"hidden\",\r\n                                                border: \"5px solid #3A3A3C\",\r\n                                                margin: \"5px\"\r\n                                            }} />\r\n                                    </div>\r\n                                    <div className=\"col-md-18\">\r\n                                        <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>{`Trailer # ${index + 1}.`}</div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"entity-list\">\r\n                                                    <div className=\"entity-list-item\">\r\n                                                        <div className=\"item-icon\">\r\n                                                            <span className=\"fas fa-weight\"></span>\r\n                                                        </div>\r\n                                                        <div className=\"item-content-primary\">\r\n                                                            <div className=\"content-text-primary\">Maximum Weight</div>\r\n                                                            <div className=\"content-text-secondary\">{`${value.MaximumWeight} GVM`}</div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"entity-list\">\r\n                                                    <div className=\"entity-list-item\">\r\n                                                        <div className=\"item-icon\">\r\n                                                            <span className=\"fas fa-star-of-life\"></span>\r\n                                                        </div>\r\n                                                        <div className=\"item-content-primary\">\r\n                                                            <div className=\"content-text-primary\">Trailer Type</div>\r\n                                                            <div className=\"content-text-secondary\">{value.Type}</div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target={`#edit-trailer-dialog${index}`}\r\n                                onMouseDown={() => {\r\n                                    let editTrailerDialogs = this.state.EditTrailerDialogs;\r\n\r\n                                    editTrailerDialogs[index] = <EditTrailerDialog\r\n                                        dialogID={index}\r\n                                        Trailer={value}\r\n                                        OnCancel={() => {\r\n                                            let editTrailerDialogs = this.state.EditTrailerDialogs\r\n                                            editTrailerDialogs[index] = null;\r\n\r\n                                            this.setState({\r\n                                                EditTrailerDialogs: editTrailerDialogs,\r\n                                            });\r\n\r\n                                        }}\r\n                                        OnOK={cancelButton => {\r\n                                            cancelButton.click();\r\n                                            this.props.OnTrailersUpdated();\r\n                                        }} />;\r\n\r\n                                    this.setState({\r\n                                        EditTrailerDialogs: editTrailerDialogs,\r\n                                    });\r\n                                }}>Edit</button>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(index); }}>Delete</button>\r\n                        </div>\r\n                        {this.state.EditTrailerDialogs[index]}\r\n                    </li>\r\n                })}\r\n            </ol>\r\n            {this.state.Preloader}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TrailersList;","import React, { Component } from \"react\";\r\nimport AddTrailer from \"./AddTrailer\";\r\nimport TrailersList from \"./TrailersList\"\r\nimport { getData } from \"../../../DriverFunctions\";\r\n\r\nclass Trailers extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddTrailer: null,\r\n            TrailersList: null\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Trailers\"\r\n            };\r\n\r\n            this.setState({\r\n                AddTrailer: null,\r\n                TrailersList: null\r\n            });\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Trailers found.\") {\r\n\r\n                    if (response.Trailers.length < 2) {\r\n                        this.setState({\r\n                            AddTrailer: <AddTrailer OnTrailerAdded={this.onComponentUpdated} />,\r\n                            TrailersList: <TrailersList Trailers={response.Trailers}\r\n                                OnTrailersUpdated={this.onComponentUpdated} />\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            AddTrailer: null,\r\n                            TrailersList: <TrailersList Trailers={response.Trailers}\r\n                                OnTrailersUpdated={this.onComponentUpdated} />\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AddTrailer: <AddTrailer OnTrailerAdded={this.onComponentUpdated} />,\r\n                        TrailersList: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            {this.state.AddTrailer}\r\n            {this.state.TrailersList}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Trailers;","import React, { Component } from \"react\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader\";\r\nimport { getData, updateTruckPhoto, deleteTruck } from \"../../DriverFunctions\";\r\nimport TruckSettings from \"./TruckSettings\";\r\nimport AddTruckDialog from \"./AddTruckDialog\";\r\nimport Trailers from \"./trailers/Trailers\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Truck extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            Truck: null,\r\n            ShowPreloader: false\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Truck\"\r\n            };\r\n\r\n            this.setState({\r\n                Preloader: <Preloader />\r\n            });\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Truck found.\") {\r\n                    this.setState({\r\n                        Truck: response.Truck,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Truck: null,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const discardedTruck = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete truck...`);\r\n\r\n        await deleteTruck(discardedTruck).then(async response => {\r\n            if (response.Message === \"Truck is deleted.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                await this.onComponentUpdated();\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const truck = this.state.Truck;\r\n        const showPreloader = this.state.ShowPreloader;\r\n\r\n        return <section>\r\n            <PageHeading Heading=\"TRUCKS\" />\r\n            {truck ? \r\n                <section>\r\n                    <div className=\"jumbotron theme-default\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <ImageUploader Source={truck.PhotoURL}\r\n                                        Height=\"200px\" Width=\"200px\"\r\n                                        OnImageUploaded={async response => {\r\n                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                const updatedTruck = {\r\n                                                    Token: localStorage.Token,\r\n                                                    PhotoURL: response.imageUrl\r\n                                                };\r\n\r\n                                                await updateTruckPhoto(updatedTruck).then(response => {\r\n                                                    if (response.Message === \"Truck photo updated.\") {\r\n                                                        this.setState({\r\n                                                            PhotoURL: updatedTruck.PhotoURL\r\n                                                        });\r\n                                                    }\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        OnInvalidImageSelected={() => {\r\n                                            return;\r\n                                        }}\r\n                                        ImageCategory=\"Truck\" />\r\n                                </div>\r\n                                <div className=\"col-md-18\">\r\n                                    <div className=\"type-h3 color-default p-t-n\">\r\n                                        {`${truck.Brand} ${truck.Model}`}\r\n                                    </div>\r\n                                    <div className=\"type-sh3\">\r\n                                        <span className=\"fas fa-truck m-r-xxs\" style={{ color: \"#606060\" }}></span>{truck.Type}\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-list-ol\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Plate Number</div>\r\n                                                        <div className=\"content-text-secondary\">{truck.PlateNumber}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-calendar-day\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Production Year</div>\r\n                                                        <div className=\"content-text-secondary\">{truck.ProductionYear}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-weight\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Maximum Weight</div>\r\n                                                        <div className=\"content-text-secondary\">{`${truck.MaximumWeight} GVW`}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.onDelete}>Delete Truck</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <TruckSettings OnTruckSettingsUpdated={this.onComponentUpdated} />\r\n                    <Trailers />\r\n                    {showPreloader ? <Preloader /> : null}\r\n                </section> :\r\n                <section>\r\n                    <div className=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        alt=\"add_truck.png\" src=\"./images/add_truck.png\" data-source-index=\"2\" />\r\n                                </div>\r\n                                <div className=\"col-md-12 col-md-pull-12\">\r\n                                    <div className=\"type-h3\">Truck</div>\r\n                                    <div className=\"type-sh3\">You have not added any truck yet.</div>\r\n                                    <p>Adding your truck will let the Traders or Brokers see details about your it. Valid and complete details of your truck make more chances for you to receive job requests.</p>\r\n                                    <div className=\"btn-group\">\r\n                                        <button className=\"btn btn-primary\"\r\n                                            data-toggle=\"modal\"\r\n                                            data-target=\"#add-truck-dialog\">Add Now</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <AddTruckDialog OnOK={this.onComponentUpdated} />\r\n                    {showPreloader ? <Preloader /> : null}\r\n                </section>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Truck;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { addPermitLicence } from \"../../DriverFunctions.js\";\r\n\r\nclass AddPermitLicenceDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PermitNumber: \"\",\r\n            ExpiryDate: new Date(),\r\n            PhotoURL: \"./images/default_image.png\",\r\n            Code: \"\",\r\n            Place: \"\",\r\n\r\n            ValidPermitNumber: false,\r\n            ValidExpiryDate: false,\r\n            ValidPhotoURL: false,\r\n            ValidCode: false,\r\n            ValidPlace: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                PermitNumber: \"\",\r\n                ExpiryDate: \"\",\r\n                PhotoURL: \"\",\r\n                Code: \"\",\r\n                Place: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidPermitNumber = this.state.ValidPermitNumber;\r\n        let ValidExpiryDate = this.state.ValidExpiryDate;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n        let ValidCode = this.state.ValidCode;\r\n        let ValidPlace = this.state.ValidPlace;\r\n\r\n        switch (field) {\r\n            case \"PermitNumber\":\r\n                ValidPermitNumber = (value !== \"\");\r\n                Errors.PermitNumber = ValidPermitNumber ? \"\" : \"Permit number is required.\";\r\n\r\n                if (Errors.PermitNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPermitNumber = (value !== \"\");\r\n                Errors.PermitNumber = ValidPermitNumber ? \"\" : \"Permit number is required.\";\r\n\r\n                break;\r\n            case \"ExpiryDate\":\r\n                ValidExpiryDate = (new Date(value).getTime() >= new Date().getTime());\r\n                Errors.ExpiryDate = ValidExpiryDate ? \"\" : \"Expiry Date must be later than yesterday.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            case \"Code\":\r\n                ValidCode = (value !== \"\");\r\n                Errors.Code = ValidCode ? \"\" : \"Permit code is required.\";\r\n                break;\r\n            case \"Place\":\r\n                ValidPlace = (value !== \"\");\r\n                Errors.Place = ValidPlace ? \"\" : \"Permit place is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPermitNumber: ValidPermitNumber,\r\n            ValidExpiryDate: ValidExpiryDate,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n            ValidCode: ValidCode,\r\n            ValidPlace: ValidPlace,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidPermitNumber &&\r\n                        this.state.ValidExpiryDate &&\r\n                        this.state.ValidPhotoURL &&\r\n                        this.state.ValidCode &&\r\n                        this.state.ValidPlace\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newPermitLicence = {\r\n            Token: localStorage.Token,\r\n            PermitNumber: this.state.PermitNumber,\r\n            ExpiryDate: this.state.ExpiryDate,\r\n            PhotoURL: this.state.PhotoURL,\r\n            Code: this.state.Code,\r\n            Place: this.state.Place\r\n        }\r\n\r\n        console.log(\"Going to add Permit Licence.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addPermitLicence(newPermitLicence).then(response => {\r\n            if (response.Message === \"Permit Licence is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div className=\"modal\" id=\"add-permit-licence-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Add Permit Licence</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    Height=\"220px\"\r\n                                                    Width=\"220px\"\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }} />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Permit Number</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"PermitNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.PermitNumber} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.PermitNumber}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Expiry Date</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"date\" name=\"ExpiryDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.ExpiryDate} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.ExpiryDate}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Permit Code</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Code\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Code} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Code}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Permit Place</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Place\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Place} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Place}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddPermitLicenceDialog;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../styles/MiscellaneousStyles\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { updatePermitLicence } from \"../../DriverFunctions.js\";\r\n\r\nclass EditPermitLicenceDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PermitNumber: this.props.PermitLicence.PermitNumber,\r\n            ExpiryDate: this.props.PermitLicence.ExpiryDate,\r\n            PhotoURL: this.props.PermitLicence.PhotoURL,\r\n            Code: this.props.PermitLicence.Code,\r\n            Place: this.props.PermitLicence.Place,\r\n\r\n            ValidPermitNumber: true,\r\n            ValidExpiryDate: true,\r\n            ValidPhotoURL: true,\r\n            ValidCode: true,\r\n            ValidPlace: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                PermitNumber: \"\",\r\n                ExpiryDate: \"\",\r\n                PhotoURL: \"\",\r\n                Code: \"\",\r\n                Place: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidPermitNumber = this.state.ValidPermitNumber;\r\n        let ValidExpiryDate = this.state.ValidExpiryDate;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n        let ValidCode = this.state.ValidCode;\r\n        let ValidPlace = this.state.ValidPlace;\r\n\r\n        switch (field) {\r\n            case \"PermitNumber\":\r\n                ValidPermitNumber = (value !== \"\");\r\n                Errors.PermitNumber = ValidPermitNumber ? \"\" : \"Permit number is required.\";\r\n                break;\r\n            case \"ExpiryDate\":\r\n                ValidExpiryDate = (new Date(value).getTime() >= new Date().getTime());\r\n                Errors.ExpiryDate = ValidExpiryDate ? \"\" : \"Expiry Date must be later than yesterday.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            case \"Code\":\r\n                ValidCode = (value !== \"\");\r\n                Errors.Code = ValidCode ? \"\" : \"Permit code is required.\";\r\n                break;\r\n            case \"Place\":\r\n                ValidPlace = (value !== \"\");\r\n                Errors.Place = ValidPlace ? \"\" : \"Permit place is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPermitNumber: ValidPermitNumber,\r\n            ValidExpiryDate: ValidExpiryDate,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n            ValidCode: ValidCode,\r\n            ValidPlace: ValidPlace,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidPermitNumber &&\r\n                    this.state.ValidExpiryDate &&\r\n                    this.state.ValidPhotoURL &&\r\n                    this.state.ValidCode &&\r\n                    this.state.ValidPlace\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedPermitLicence = {\r\n            Token: localStorage.Token,\r\n            PermitLicenceID: this.props.PermitLicence.PermitLicenceID,\r\n            PermitNumber: this.state.PermitNumber,\r\n            ExpiryDate: this.state.ExpiryDate,\r\n            PhotoURL: this.state.PhotoURL,\r\n            Code: this.state.Code,\r\n            Place: this.state.Place\r\n        }\r\n\r\n        console.log(\"Going to update Permit Licence.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updatePermitLicence(updatedPermitLicence).then(async response => {\r\n            if (response.Message === \"Permit Licence is updated.\") {\r\n                this.cancelButton.click();\r\n                await this.props.OnOK();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div className=\"modal\" id={`edit-permit-dialog${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Add Permit Licence</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    Height=\"220px\"\r\n                                                    Width=\"220px\"\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }} />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Permit Number</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"PermitNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.PermitNumber} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.PermitNumber}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Expiry Date</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"date\" name=\"ExpiryDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.ExpiryDate} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.ExpiryDate}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Permit Code</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Code\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Code} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Code}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Permit Place</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Place\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Place} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Place}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\"\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default EditPermitLicenceDialog;","import React, { Component } from \"react\";\r\nimport { deletePermitLicence } from \"../../DriverFunctions.js\";\r\nimport EditPermitLicenceDialog from \"./EditPermitLicenceDialog.js\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\n\r\nclass PermitLicenceListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllPermitLicences: [],\r\n            PermitLicences: [],\r\n            EditPermitLicenceDialogs: [],\r\n            SearchString: \"\",\r\n            Preloader: null,\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async permitLicenceID => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedPermitLicence = {\r\n            Token: localStorage.Token,\r\n            PermitLicenceID: permitLicenceID\r\n        };\r\n\r\n        console.log(\"Going to delete Permit licence...\");\r\n\r\n        await deletePermitLicence(discardedPermitLicence).then(async response => {\r\n            if (response.Message === \"Permit Licence is deleted.\") {\r\n                await this.props.OnPermitLicenceUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const permitLicence = this.props.PermitLicence;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                src={permitLicence.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"col-md-18\">\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>{`${index + 1}.`}</div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-hashtag\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Permit Number</div>\r\n                                                <div className=\"content-text-secondary\">{permitLicence.PermitNumber}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-calendar\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Expiry Date</div>\r\n                                                <div className=\"content-text-secondary\">{permitLicence.ExpiryDate}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-asterisk\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Permit Code</div>\r\n                                                <div className=\"content-text-secondary\">{permitLicence.Code}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-map-marker-alt\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Permit Place</div>\r\n                                                <div className=\"content-text-secondary\">{permitLicence.Place}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#edit-permit-dialog${index}`}>Edit</button>\r\n                <button type=\"button\" className=\"btn btn-danger\" onClick={async () => { await this.onDelete(permitLicence.PermitLicenceID); }}>Delete</button>\r\n            </div>\r\n            <EditPermitLicenceDialog\r\n                DialogID={index}\r\n                PermitLicence={permitLicence}\r\n                OnOK={async () => { await this.props.OnPermitLicenceUpdated(); }} />\r\n            {this.state.Preloader}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PermitLicenceListItem;","import React, { Component } from \"react\";\r\n\r\nclass ProgressBar extends Component {\r\n    render() {\r\n        return <div className=\"progress-bar\">\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n        </div>;\r\n    }\r\n};\r\n\r\nexport default ProgressBar","import React, { Component } from \"react\";\r\nimport { getData } from \"../../DriverFunctions.js\";\r\nimport PermitLicenceListItem from \"./PermitLicencesListItem\";\r\nimport ProgressBar from \"../../../../controls/ProgressBar\";\r\n\r\nclass PermitLicencesList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllPermitLicences: [],\r\n            PermitLicences: [],\r\n            SearchString: \"\",\r\n            Searching: null,\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"PermitLicences\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true,\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Permit licences found.\") {\r\n                    this.setState({\r\n                        AllPermitLicences: response.PermitLicences,\r\n                        PermitLicences: response.PermitLicences,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllPermitLicences: [],\r\n                        PermitLicences: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.SearchString === \"\") {\r\n            this.setState({\r\n                PermitLicences: this.state.AllPermitLicences\r\n            });\r\n        }\r\n\r\n        const allPermitLicences = this.state.AllPermitLicences;\r\n        let filteredPermitLicences = [];\r\n\r\n        for (var i = 0; i < allPermitLicences.length; i++) {\r\n            if (allPermitLicences[i].Place.includes(this.state.SearchString)) {\r\n                filteredPermitLicences[i] = allPermitLicences[i];\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            PermitLicences: filteredPermitLicences\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const permitLicences = this.state.PermitLicences;\r\n\r\n        return (\r\n            <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Permit Licences</div>\r\n                <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                    <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                        <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                            <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                                <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search by Permit Place\"\r\n                                            style={{ maxWidth: \"500px\", width: \"100%\" }} autoComplete=\"off\"\r\n                                            value={this.state.SearchString} onChange={this.onChange} />\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                {(permitLicences.length === 0) ?\r\n                    <div className=\"jumbotron theme-default\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                {this.state.Searching ? <div className=\"col-md-24 text-center\">\r\n                                    <div>\r\n                                        <div className=\"type-h3\" style={{ color: \"#008575\" }}>Searching</div>\r\n                                        <ProgressBar />\r\n                                    </div>\r\n                                </div> : <div className=\"col-md-24 text-center\">\r\n                                        <h3><span className=\"fas fa-exclamation-triangle\" style={{ color: \"#FFBF15\" }}></span> No licences found.</h3>\r\n                                    </div>}\r\n                            </div>\r\n                        </div>\r\n                    </div> : <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                        {this.state.PermitLicences.map((permitLicence, index) => {\r\n                            return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                                <PermitLicenceListItem Index={index}\r\n                                    PermitLicence={permitLicence}\r\n                                    OnPermitLicenceUpdated={async () => { await this.onComponentUpdated() }} />\r\n                            </li>\r\n                        })}\r\n                    </ol>}\r\n                {this.state.Preloader}\r\n            </section>         \r\n        );\r\n    }\r\n};\r\n\r\nexport default PermitLicencesList;","import React, { Component } from \"react\";\r\nimport AddPermitLicenceDialog from \"./AddPermitLicenceDialog.js\";\r\nimport PermitLicencesList from \"./PermitLicencesList.js\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Permits extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddPermitLicenceDialog: null\r\n        };\r\n\r\n        this.onPermitLicencesUpdated = this.onPermitLicencesUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onPermitLicencesUpdated();\r\n    }\r\n\r\n    onPermitLicencesUpdated = () => {\r\n        this.PermitLicencesList.onComponentUpdated();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <PageHeading Heading=\"PERMITS\" />\r\n                <div class=\"page-header\" style={{\r\n                    backgroundImage: \"url(/images/teal.jpg)\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundColor: \"#215761\"\r\n                }}>\r\n                    <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xs-18\">\r\n                                <div className=\"type-h3 color-light\"><span className=\"fas fa-id-badge\"></span>   Permit Licences</div>\r\n                                <p className=\"color-light\">If you are a non-Saudi driver, then you must have at least one permit licence.</p>\r\n                                <div className=\"btn-group\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-primary\"\r\n                                        data-toggle=\"modal\"\r\n                                        data-target=\"#add-permit-licence-dialog\"\r\n                                        onMouseDown={() => {\r\n                                            this.setState({\r\n                                                AddPermitLicenceDialog: (<AddPermitLicenceDialog\r\n                                                    OnCancel={() => {\r\n                                                        this.setState({\r\n                                                            AddPermitLicenceDialog: null,\r\n                                                        });\r\n                                                    }}\r\n                                                    OnOK={cancelButton => {\r\n                                                        cancelButton.click();\r\n                                                        this.onPermitLicencesUpdated();\r\n                                                    }} />),\r\n                                            });\r\n                                        }}>New Permit Licence</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <PermitLicencesList ref={permitLicencesList => this.PermitLicencesList = permitLicencesList} />\r\n                {this.state.AddPermitLicenceDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Permits;","import React, { Component } from \"react\";\r\n\r\nclass FinancialAffairs extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"jumbotron\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"tools.png\" src=\"./images/tools.png\" style={{ borderRadius: \"50%\" }} data-source-index=\"1\" />\r\n                            </div>\r\n                            <div class=\"col-md-12 col-md-pull-12\">\r\n                                <div class=\"type-h3\" style={{ color: \"#008575\", }}>\r\n                                    Financial Affairs\r\n                    </div>\r\n                                <div class=\"type-sh3\" style={{ color: \"#949496\", }}>\r\n                                    Under-Construction\r\n                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default FinancialAffairs;","import React, { Component } from \"react\";\r\nimport ProgressBar from \"../../controls/ProgressBar\";\r\n\r\nclass SearchingContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const searching = this.props.Searching;\r\n        const searchingFor = this.props.SearchingFor;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {searching ? <div className=\"col-md-24 text-center\">\r\n                            <div>\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\" }}>Searching</div>\r\n                                <ProgressBar />\r\n                            </div>\r\n                        </div> : <div className=\"col-md-24 text-center\">\r\n                                <h3><span className=\"fas fa-exclamation-triangle\" style={{ color: \"#FFBF15\" }}></span>{` No ${searchingFor} found.`}</h3>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            </div> \r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default SearchingContainer;","import React, { Component } from \"react\";\r\n\r\nclass IdentityCardContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const identityCard = this.props.IdentityCard;\r\n\r\n        return identityCard ? <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={identityCard.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-16\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Identity Card</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-24\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">ID Number</div>\r\n                                                    <div className=\"content-text-secondary\">{identityCard.IDNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </section> : null;\r\n    }\r\n};\r\n\r\nexport default IdentityCardContainer;","import React, { Component } from \"react\";\r\n\r\nclass CommercialRegisterCertificateContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const commercialRegisterCertificate = this.props.CommercialRegisterCertificate;\r\n\r\n        return commercialRegisterCertificate ? <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={commercialRegisterCertificate.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-16\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Commercial Register Certificate</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-24\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Certificate Number</div>\r\n                                                    <div className=\"content-text-secondary\">{commercialRegisterCertificate.Number}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-cog\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Certificate Type</div>\r\n                                                    <div className=\"content-text-secondary\">{commercialRegisterCertificate.Type}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </section> : null;\r\n    }\r\n};\r\n\r\nexport default CommercialRegisterCertificateContainer;","import React, { Component } from \"react\";\r\nimport IdentityCardContainer from \"./IdentityCardContainer\";\r\nimport CommercialRegisterCertificateContainer from \"./CommercialRegisterCertificateContainer\";\r\nimport SearchingContainer from \"../../searching/SearchingContainer\";\r\nimport { getData } from \"../../../components/drivers/DriverFunctions\";\r\n\r\nclass DocumentsDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TraderDocuments: null,\r\n            Searching: false,\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderDocuments\",\r\n                Params: {\r\n                    TraderID: this.props.TraderID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader documents found.\") {\r\n                    this.setState({\r\n                        TraderDocuments: response.TraderDocuments,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TraderDocuments: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const traderDocuments = this.state.TraderDocuments;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`documents-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h2\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Documents</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {(this.state.Searching || !traderDocuments) ?\r\n                                <SearchingContainer Searching={this.state.Searching}\r\n                                    SearchingFor=\"documents\" /> :\r\n                                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                                    <IdentityCardContainer IdentityCard={traderDocuments.IdentityCard} />\r\n                                    <CommercialRegisterCertificateContainer CommercialRegisterCertificate={traderDocuments.CommercialRegisterCertificate} />\r\n                                </ol>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DocumentsDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport SearchingContainer from \"../searching/SearchingContainer\";\r\nimport DocumentsDialog from \"./documents/DocumentsDialog\";\r\nimport { getData } from \"../../components/drivers/DriverFunctions\";\r\n\r\nclass TraderContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TraderProfile: null,\r\n            Searching: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.refresh.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.props.Refresh) {\r\n            this.props.Refresh(this.refresh);\r\n        }\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderProfile\",\r\n                Params: {\r\n                    TraderID: this.props.TraderID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader profile found.\") {\r\n                    this.setState({\r\n                        TraderProfile: response.TraderProfile,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TraderProfile: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderProfile\",\r\n                Params: {\r\n                    TraderID: this.props.TraderID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader profile found.\") {\r\n                    this.setState({\r\n                        TraderProfile: response.TraderProfile\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TraderProfile: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Searching || !this.state.TraderProfile) {\r\n            return <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor=\"trader\" />;\r\n        }\r\n        else {\r\n            const traderProfile = this.state.TraderProfile;\r\n            const trader = traderProfile.Trader;\r\n            const onJob = traderProfile.OnJob;\r\n            const profilePhoto = traderProfile.ProfilePhoto ?\r\n                traderProfile.ProfilePhoto :\r\n                \"./images/defaultProfilePhoto.png\";\r\n\r\n            const dialogID = UUID().substring(0, 7).toUpperCase();\r\n\r\n            return <section>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={profilePhoto} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                    {`${trader.FirstName} ${trader.LastName}`}\r\n                                    {onJob ? <span class=\"badge back-color-golden m-l-xxs\">ON JOB</span> : null}\r\n                                </div>\r\n                                <div className=\"type-sh3\">\r\n                                    <span className=\"fas fa-briefcase\" style={{ color: \"#606060\" }}></span>   {trader.Type}\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-globe-asia\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Active</div>\r\n                                                    <div className=\"content-text-secondary\">{(trader.Active === 1) ?\r\n                                                        <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                        <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className={(trader.Gender === \"Male\") ? \"fas fa-male\" : \"fas fa-female\"}></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Gender</div>\r\n                                                    <div className=\"content-text-secondary\">{trader.Gender}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-birthday-cake\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Birthday</div>\r\n                                                    <div className=\"content-text-secondary\">{trader.DateOfBirth}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-flag\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Nationality</div>\r\n                                                    <div className=\"content-text-secondary\">{trader.Nationality}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-envelope\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Email</div>\r\n                                                    <div className=\"content-text-secondary\">{trader.Email}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-phone\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Phone Number</div>\r\n                                                    <div className=\"content-text-secondary\">{trader.PhoneNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {this.props.TabView ? \r\n                                    null :\r\n                                    <button type=\"button\" className=\"btn btn-default\"\r\n                                        style={{ minWidth: \"152px\" }} data-toggle=\"modal\"\r\n                                        data-target={`#documents-dialog-${dialogID}`}>Documents</button>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.props.TabView ?\r\n                    null : \r\n                    <DocumentsDialog DialogID={dialogID}\r\n                        TraderID={this.props.TraderID} />}\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default TraderContainer;","import React, { Component } from \"react\";\r\nimport IdentityCardContainer from \"./IdentityCardContainer\";\r\nimport CommercialRegisterCertificateContainer from \"./CommercialRegisterCertificateContainer\";\r\nimport SearchingContainer from \"../../searching/SearchingContainer\";\r\nimport { getData } from \"../../../components/drivers/DriverFunctions\";\r\n\r\nclass DocumentsContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TraderDocuments: null,\r\n            Searching: false,\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderDocuments\",\r\n                Params: {\r\n                    TraderID: this.props.TraderID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader documents found.\") {\r\n                    this.setState({\r\n                        TraderDocuments: response.TraderDocuments,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TraderDocuments: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderDocuments\",\r\n                Params: {\r\n                    TraderID: this.props.TraderID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader documents found.\") {\r\n                    this.setState({\r\n                        TraderDocuments: response.TraderDocuments\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TraderDocuments: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const traderDocuments = this.state.TraderDocuments;\r\n\r\n        return (this.state.Searching || !traderDocuments) ?\r\n            <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor=\"documents\" /> :\r\n            <section>\r\n                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    <IdentityCardContainer IdentityCard={traderDocuments.IdentityCard} />\r\n                    <CommercialRegisterCertificateContainer CommercialRegisterCertificate={traderDocuments.CommercialRegisterCertificate} />\r\n                </ol>\r\n            </section>;\r\n    }\r\n};\r\n\r\nexport default DocumentsContainer;","import React, { Component } from \"react\";\r\nimport TraderContainer from \"../../../../../containers/trader/TraderContainer\";\r\nimport DocumentsContainer from \"../../../../../containers/trader/documents/DocumentsContainer\";\r\n\r\nclass ProfileDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`profile-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <section>\r\n                                <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                                    <li role=\"presentation\" className=\"active\">\r\n                                        <a href={`#trader-tab-${index}`} aria-controls={`trader-tab-${index}`} role=\"tab\" data-toggle=\"tab\">Trader</a>\r\n                                    </li>\r\n                                    <li role=\"presentation\">\r\n                                        <a href={`#documents-tab-${index}`} aria-controls={`documents-tab-${index}`} role=\"tab\" data-toggle=\"tab\">Documents</a>\r\n                                    </li>\r\n                                </ul>\r\n                                <div className=\"tab-content\">\r\n                                    <div role=\"tabpanel\" className=\"tab-pane active\" id={`trader-tab-${index}`}>\r\n                                        <TraderContainer Refresh={this.props.RefreshTrader} TraderID={this.props.TraderID} TabView={true} />\r\n                                    </div>\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id={`documents-tab-${index}`}>\r\n                                        <DocumentsContainer Refresh={this.props.RefreshDocuments} TraderID={this.props.TraderID} />\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ProfileDialog;","import React, { Component } from \"react\";\r\n\r\nclass TraderRequestContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const traderRequest = this.props.TraderRequest;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron\">\r\n                <div className=\"container\">\r\n                    <div className=\"col-md-24\">\r\n                        <div className=\"type-h3 color-default p-t-n\">Trader Request</div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-box\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Cargo Type</div>\r\n                                        <div className=\"content-text-secondary\">{traderRequest.CargoType}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-weight\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Cargo Weight</div>\r\n                                        <div className=\"content-text-secondary\">{`${traderRequest.CargoWeight} lbs.`}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-id-badge\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Entry/Exit</div>\r\n                                        <div className=\"content-text-secondary\">{(traderRequest.EntryExit === 1) ?\r\n                                            <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                            <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Date</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(traderRequest.LoadingDate).toDateString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Time</div>\r\n                                        <div className=\"content-text-secondary\">{traderRequest.LoadingTime}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Accpeted Delay</div>\r\n                                        <div className=\"content-text-secondary\">{`${traderRequest.AcceptedDelay} Hour(s)`}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Requested on</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(traderRequest.Created).toDateString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Requested at</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(traderRequest.Created).toTimeString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderRequestContainer;","import React, { Component } from \"react\";\r\nimport TraderRequestContainer from \"../../../../../containers/traderRequest/TraderRequestContainer\";\r\n\r\nclass RequestDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const traderRequest = this.props.TraderRequest;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`request-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <TraderRequestContainer TraderRequest={traderRequest} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default RequestDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport ProfileDialog from \"./ProfileDialog\";\r\nimport RequestDialog from \"./RequestDialog\";\r\nimport { toggleSelectTraderRequest } from \"../../../DriverFunctions\";\r\n\r\nclass TraderRequestRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false\r\n        };\r\n\r\n        this.onToggleSelect = this.onToggleSelect.bind(this);\r\n    }\r\n\r\n    onToggleSelect = async (traderRequestID, isSelected) => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const selectedTraderRequest = {\r\n            Token: localStorage.Token,\r\n            TraderRequestID: traderRequestID,\r\n            Selected: isSelected\r\n        };\r\n\r\n        console.log(`Going to select Trader request...`);\r\n\r\n        await toggleSelectTraderRequest(selectedTraderRequest).then(async response => {\r\n            if (response.Message === \"Trader request is toggled.\") {\r\n\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                await this.props.OnTraderRequestUpdated();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const traderRequestPackage = this.props.TraderRequestPackage;\r\n        const traderRequest = traderRequestPackage.TraderRequest;\r\n        const trader = traderRequestPackage.Trader;\r\n        const traderOnJob = traderRequestPackage.TraderOnJob;\r\n        const requestSelected = this.props.requestSelected;\r\n\r\n        const profileIndex = UUID();\r\n        const requestIndex = UUID();\r\n\r\n        return <tr>\r\n            {this.state.ShowPreloader ? <Preloader /> : null}\r\n            <td>\r\n                <strong>{index + 1}</strong>\r\n            </td>\r\n\r\n            <td>\r\n                {`${trader.FirstName} ${trader.LastName}`}\r\n                {index === 0 ? <span class=\"badge back-color-golden m-l-xxxs\">NEW</span> : null}\r\n                {traderOnJob ? <span class=\"badge back-color-golden m-l-xxxs\">ON JOB</span> : null}\r\n            </td>\r\n\r\n            <td>{new Date(traderRequest.Created).toDateString()}</td>\r\n\r\n            <td class=\"text-right\">\r\n                <div>\r\n                    <button className=\"btn btn-secondary m-xxxs\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#profile-dialog-${profileIndex}`}\r\n                        onMouseDown={async () => {\r\n                            await this.RefreshTraderContainer();\r\n                            await this.RefreshDocumentsContainer();\r\n                        }}>Profile</button>\r\n\r\n                    <button className=\"btn btn-secondary m-xxxs\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#request-dialog-${requestIndex}`}>Trader Request</button>\r\n\r\n                    {traderRequest.Selected ?\r\n                        <button className=\"btn btn-danger m-xxxs\"\r\n                            onClick={async () => { await this.onToggleSelect(traderRequest.TraderRequestID, false); }}>Deselect</button> :\r\n                        <button className=\"btn btn-primary m-xxxs\" disabled={requestSelected}\r\n                            onClick={async () => { await this.onToggleSelect(traderRequest.TraderRequestID, true); }}>Select</button>}\r\n\r\n                    <ProfileDialog Index={profileIndex}\r\n                        TraderID={traderRequest.TraderID}\r\n                        RefreshTrader={refresh => { this.RefreshTraderContainer = refresh; }}\r\n                        RefreshDocuments={refresh => { this.RefreshDocumentsContainer = refresh; }} />\r\n\r\n                    <RequestDialog Index={requestIndex}\r\n                        TraderRequest={traderRequest} />\r\n                </div>\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default TraderRequestRow;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport TraderRequestRow from \"./TraderRequestRow\";\r\nimport { getData } from \"../../../DriverFunctions\";\r\n\r\nclass TraderRequestsTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TraderRequestPackages: [],\r\n            RequestSelected: false,\r\n            Searching: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderRequestPackages\",\r\n                Params: {\r\n                    JobRequestID: this.props.JobRequestID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader request packages found.\") {\r\n                    this.props.OnRequestsFound(response.TraderRequestPackages.length);\r\n\r\n                    this.setState({\r\n                        TraderRequestPackages: response.TraderRequestPackages,\r\n                        RequestSelected: response.RequestSelected,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.props.OnRequestsFound(0);\r\n                    this.setState({\r\n                        TraderRequestPackages: [],\r\n                        RequestSelected: false,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderRequestPackages\",\r\n                Params: {\r\n                    JobRequestID: this.props.JobRequestID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader request packages found.\") {\r\n                    this.props.OnRequestsFound(response.TraderRequestPackages.length);\r\n\r\n                    this.setState({\r\n                        TraderRequestPackages: response.TraderRequestPackages,\r\n                        RequestSelected: response.RequestSelected\r\n                    });\r\n                }\r\n                else {\r\n                    this.props.OnRequestsFound(0);\r\n\r\n                    this.setState({\r\n                        TraderRequestPackages: [],\r\n                        RequestSelected: false,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Searching || this.state.TraderRequestPackages.length === 0) {\r\n            return <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor=\"requests\" />;\r\n        }\r\n        else {\r\n            const traderRequestPackages = this.state.TraderRequestPackages;\r\n            const requestSelected = this.state.RequestSelected;\r\n\r\n            return <section>\r\n                <div class=\"table-responsive back-color-gray\">\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>NUMBER</th>\r\n                                <th>TRADER</th>\r\n                                <th>REQUESTED ON</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {traderRequestPackages.map((traderRequestPackage, index) => {\r\n                                return <TraderRequestRow key={index}\r\n                                    Index={index}\r\n                                    TraderRequestPackage={traderRequestPackage}\r\n                                    RequestSelected={requestSelected}\r\n                                    OnTraderRequestUpdated={this.onComponentUpdated} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default TraderRequestsTable;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { updateJobRequest } from \"../../../DriverFunctions.js\";\r\n\r\nclass EditJobRequestDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LoadingPlace: this.props.JobRequest.LoadingPlace,\r\n            UnloadingPlace: this.props.JobRequest.UnloadingPlace,\r\n            TripType: this.props.JobRequest.TripType,\r\n            Price: this.props.JobRequest.Price,\r\n\r\n            ValidLoadingPlace: true,\r\n            ValidUnloadingPlace: true,\r\n            ValidPrice: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                LoadingPlace: \"\",\r\n                UnloadingPlace: \"\",\r\n                Price: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidLoadingPlace = this.state.ValidLoadingPlace;\r\n        let ValidUnloadingPlace = this.state.ValidUnloadingPlace;\r\n        let ValidPrice = this.state.ValidPrice;\r\n\r\n        switch (field) {\r\n            case \"LoadingPlace\":\r\n                ValidLoadingPlace = (value !== \"\");\r\n                Errors.LoadingPlace = ValidLoadingPlace ? \"\" : \"Loading place is required.\";\r\n                break;\r\n            case \"UnloadingPlace\":\r\n                ValidUnloadingPlace = (value !== \"\");\r\n                Errors.UnloadingPlace = ValidUnloadingPlace ? \"\" : \"Unloading place is required.\";\r\n                break;\r\n            case \"Price\":\r\n                ValidPrice = (value > 0.00);\r\n                Errors.Price = ValidPrice ? \"\" : \"Price must be more than $0.00.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidLoadingPlace: ValidLoadingPlace,\r\n            ValidUnloadingPlace: ValidUnloadingPlace,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.LoadingPlace &&\r\n                    this.state.ValidUnloadingPlace &&\r\n                    this.state.ValidPrice\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (!this.props.CanEdit()) {\r\n            return;\r\n        }\r\n\r\n        const updatedJobRequest = {\r\n            Token: localStorage.Token,\r\n            JobRequestID: this.props.JobRequest.JobRequestID,\r\n            LoadingPlace: this.state.LoadingPlace,\r\n            UnloadingPlace: this.state.UnloadingPlace,\r\n            TripType: this.state.TripType,\r\n            Price: this.state.Price\r\n        };\r\n\r\n        console.log(\"Going to update Job Request.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateJobRequest(updatedJobRequest).then(response => {\r\n            if (response.Message === \"Job request is updated.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div className=\"modal\" id={`edit-job-request-dialog-${this.props.DialogID}`}\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Job Request</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"control-label\">Loading Place</label>\r\n                                                        <span className=\"text-danger\" style={Required}>*</span>\r\n                                                        <input type=\"text\" name=\"LoadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                            value={this.state.LoadingPlace} onChange={this.onChange} />\r\n                                                        <span className=\"text-danger\">{this.state.Errors.LoadingPlace}</span>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"control-label\">Unloading Place</label>\r\n                                                        <span className=\"text-danger\" style={Required}>*</span>\r\n                                                        <input type=\"text\" name=\"UnloadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                            value={this.state.UnloadingPlace} onChange={this.onChange} />\r\n                                                        <span className=\"text-danger\">{this.state.Errors.UnloadingPlace}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"control-label\">Trip Type</label><br />\r\n                                                        <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                            <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                                aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                                <span>{this.state.TripType}</span>\r\n                                                                <span className=\"caret\"></span>\r\n                                                            </button>\r\n                                                            <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                                <li><a onClick={() => {\r\n                                                                    this.setState({ TripType: \"One Way\" });\r\n                                                                    this.validateField(\"\", \"\");\r\n                                                                }}>One Way</a></li>\r\n                                                                <li><a onClick={() => {\r\n                                                                    this.setState({ TripType: \"Two Way\" });\r\n                                                                    this.validateField(\"\", \"\");\r\n                                                                }}>Two Way</a></li>\r\n                                                            </ul>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"control-label\">Price (USD)</label>\r\n                                                        <span className=\"text-danger\" style={Required}>*</span>\r\n                                                        <input type=\"number\" min=\"0.00\" step=\"0.01\" max=\"100.00\" name=\"Price\"\r\n                                                            className=\"form-control\" autoComplete=\"off\" value={this.state.Price} onChange={this.onChange} />\r\n                                                        <span className=\"text-danger\">{this.state.Errors.Price}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\"\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default EditJobRequestDialog;","import React, { Component } from \"react\";\r\n\r\nclass JobRequestContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const jobRequest = this.props.JobRequest;\r\n        const createdHoursAgo = Math.abs(new Date() - new Date(jobRequest.TimeCreated)) / 36e5;\r\n\r\n       return <section>\r\n           <div className=\"jumbotron theme-default\">\r\n               <div className=\"container\">\r\n                   <div className=\"col-md-24\">\r\n                       <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>{index ? `${index + 1}.` : \"Job Request\"}</div>\r\n                       <div className=\"type-sh3\">\r\n                           <span className=\"fas fa-tag\" style={{ color: \"#606060\" }}></span>   {`$${jobRequest.Price}`}\r\n                       </div>\r\n                   </div>\r\n                   <div className=\"row\">\r\n                       <div className=\"col-md-12\">\r\n                           <div class=\"entity-list\">\r\n                               <div class=\"entity-list-item\">\r\n                                   <div class=\"item-icon\">\r\n                                       <span class=\"fas fa-map-marker-alt\"></span>\r\n                                   </div>\r\n                                   <div class=\"item-content-primary\">\r\n                                       <div class=\"content-text-primary\">Loading Place</div>\r\n                                       <div class=\"content-text-secondary\">{jobRequest.LoadingPlace}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div class=\"entity-list\">\r\n                               <div class=\"entity-list-item\">\r\n                                   <div class=\"item-icon\">\r\n                                       <span class=\"fas fa-map-marker-alt\"></span>\r\n                                   </div>\r\n                                   <div class=\"item-content-primary\">\r\n                                       <div class=\"content-text-primary\">Unloading Place</div>\r\n                                       <div class=\"content-text-secondary\">{jobRequest.UnloadingPlace}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div class=\"entity-list\">\r\n                               <div class=\"entity-list-item\">\r\n                                   <div class=\"item-icon\">\r\n                                       <span class=\"fas fa-map-signs\"></span>\r\n                                   </div>\r\n                                   <div class=\"item-content-primary\">\r\n                                       <div class=\"content-text-primary\">Trip Type</div>\r\n                                       <div class=\"content-text-secondary\">{jobRequest.TripType}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                       <div className=\"col-md-12\">\r\n                           <div class=\"entity-list\">\r\n                               <div class=\"entity-list-item\">\r\n                                   <div class=\"item-icon\">\r\n                                       <span class=\"fas fa-plug\"></span>\r\n                                   </div>\r\n                                   <div class=\"item-content-primary\">\r\n                                       <div class=\"content-text-primary\">Available</div>\r\n                                       <div class=\"content-text-secondary\">{(createdHoursAgo < jobRequest.WaitingTime) ? \r\n                                           <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                           <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div class=\"entity-list\">\r\n                               <div class=\"entity-list-item\">\r\n                                   <div class=\"item-icon\">\r\n                                       <span class=\"fas fa-calendar\"></span>\r\n                                   </div>\r\n                                   <div class=\"item-content-primary\">\r\n                                       <div class=\"content-text-primary\">Posted on</div>\r\n                                       <div class=\"content-text-secondary\">{new Date(jobRequest.TimeCreated).toDateString()}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div class=\"entity-list\">\r\n                               <div class=\"entity-list-item\">\r\n                                   <div class=\"item-icon\">\r\n                                       <span class=\"fas fa-clock\"></span>\r\n                                   </div>\r\n                                   <div class=\"item-content-primary\">\r\n                                       <div class=\"content-text-primary\">Posted at</div>\r\n                                       <div class=\"content-text-secondary\">{new Date(jobRequest.TimeCreated).toTimeString()}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobRequestContainer;","import React, { Component } from \"react\";\r\nimport TraderRequestsTable from \"./TraderRequestsTable.js\";\r\nimport EditJobRequestDialog from \"./EditJobRequestDialog\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { deleteJobRequest } from \"../../../DriverFunctions\";\r\nimport JobRequestContainer from \"../../../../../containers/jobReqeust/JobRequestContainer\";\r\n\r\nclass JobRequestPackageItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            NumberOfRequests: 0,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async jobRequestID => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedJobRequest = {\r\n            Token: localStorage.Token,\r\n            JobRequestID: jobRequestID\r\n        };\r\n\r\n        console.log(`Going to delete Job request...`);\r\n\r\n        await deleteJobRequest(discardedJobRequest).then(response => {\r\n            if (response.Message === \"Job request is deleted.\") {\r\n                this.props.OnJobRequestUpdated();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const jobRequest = this.props.JobRequestPackage;\r\n        const index = this.props.Index;\r\n\r\n        return <section>\r\n            <JobRequestContainer Index={index} JobRequest={jobRequest} />\r\n\r\n            <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                <button type=\"button\" className=\"btn btn-default\"\r\n                    data-toggle=\"modal\"\r\n                    disabled={(this.state.NumberOfRequests !== 0)}\r\n                    data-target={`#edit-job-request-dialog-${index}`}>Edit</button>\r\n                <button className=\"btn btn-danger\" onClick={async () => { await this.onDelete(jobRequest.JobRequestID); }}>Delete</button>\r\n            </div>\r\n\r\n            <EditJobRequestDialog\r\n                DialogID={index}\r\n                JobRequest={jobRequest}\r\n                CanEdit={() => { return this.state.NumberOfRequests === 0 ? true : false }}\r\n                OnOK={() => { this.props.OnJobRequestUpdated(); }} />\r\n\r\n            <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#job-request-package-${index}`}\r\n                onMouseDown={async () => { await this.RefreshTraderRequestsTable(); }}>\r\n                <div className=\"type-h4 text-right color-default p-xxxs\">\r\n                    <span class=\"badge back-color-danger m-r-xxs\">{this.state.NumberOfRequests}</span>Trader Requests\r\n                    <i className=\"fas fa-ellipsis-v\"></i>\r\n                    <i class=\"glyph glyph-add\"></i>\r\n                    <i class=\"glyph glyph-remove\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`job-request-package-${index}`}>\r\n\r\n                <TraderRequestsTable\r\n                    Refresh={refresh => { this.RefreshTraderRequestsTable = refresh; }}\r\n                    OnRequestsFound={number => {\r\n                        this.setState({\r\n                            NumberOfRequests: number\r\n                        });\r\n                    }}\r\n                    JobRequestID={jobRequest.JobRequestID} />\r\n\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            </div>\r\n\r\n            {this.state.Preloader}\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobRequestPackageItem;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { addJobRequest } from \"../../../DriverFunctions.js\";\r\n\r\nclass AddJobRequestDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LoadingPlace: \"\",\r\n            UnloadingPlace: \"\",\r\n            TripType: \"One Way\",\r\n            Price: 0.00,\r\n\r\n            ValidLoadingPlace: false,\r\n            ValidUnloadingPlace: false,\r\n            ValidPrice: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                LoadingPlace: \"\",\r\n                UnloadingPlace: \"\",\r\n                Price: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidLoadingPlace = this.state.ValidLoadingPlace;\r\n        let ValidUnloadingPlace = this.state.ValidUnloadingPlace;\r\n        let ValidPrice = this.state.ValidPrice;\r\n\r\n        switch (field) {\r\n            case \"LoadingPlace\":\r\n                ValidLoadingPlace = (value !== \"\");\r\n                Errors.LoadingPlace = ValidLoadingPlace ? \"\" : \"Loading place is required.\";\r\n                break;\r\n            case \"UnloadingPlace\":\r\n                ValidUnloadingPlace = (value !== \"\");\r\n                Errors.UnloadingPlace = ValidUnloadingPlace ? \"\" : \"Unloading place is required.\";\r\n                break;\r\n            case \"Price\":\r\n                ValidPrice = (value > 0.00);\r\n                Errors.Price = ValidPrice ? \"\" : \"Price must be more than $0.00.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidLoadingPlace: ValidLoadingPlace,\r\n            ValidUnloadingPlace: ValidUnloadingPlace,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidLoadingPlace &&\r\n                        this.state.ValidUnloadingPlace &&\r\n                        this.state.ValidPrice\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newJobRequest = {\r\n            Token: localStorage.Token,\r\n            LoadingPlace: this.state.LoadingPlace,\r\n            UnloadingPlace: this.state.UnloadingPlace,\r\n            TripType: this.state.TripType,\r\n            Price: this.state.Price\r\n        };\r\n\r\n        console.log(\"Going to add Job Request.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addJobRequest(newJobRequest).then(response => {\r\n            if (response.Message === \"Job request is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div className=\"modal\" id=\"add-job-request-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Add Job Request</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"control-label\">Loading Place</label>\r\n                                                        <span className=\"text-danger\" style={Required}>*</span>\r\n                                                        <input type=\"text\" name=\"LoadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                            value={this.state.LoadingPlace} onChange={this.onChange} />\r\n                                                        <span className=\"text-danger\">{this.state.Errors.LoadingPlace}</span>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"control-label\">Unloading Place</label>\r\n                                                        <span className=\"text-danger\" style={Required}>*</span>\r\n                                                        <input type=\"text\" name=\"UnloadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                            value={this.state.UnloadingPlace} onChange={this.onChange} />\r\n                                                        <span className=\"text-danger\">{this.state.Errors.UnloadingPlace}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"control-label\">Trip Type</label><br />\r\n                                                        <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                            <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                                aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                                <span>{this.state.TripType}</span>\r\n                                                                <span className=\"caret\"></span>\r\n                                                            </button>\r\n                                                            <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                                <li><a onClick={() => { this.setState({ TripType: \"One Way\" }); }}>One Way</a></li>\r\n                                                                <li><a onClick={() => { this.setState({ TripType: \"Two Way\" }); }}>Two Way</a></li>\r\n                                                            </ul>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"control-label\">Price (USD)</label>\r\n                                                        <span className=\"text-danger\" style={Required}>*</span>\r\n                                                        <input type=\"number\" min=\"0.00\" step=\"0.01\" max=\"100.00\" name=\"Price\"\r\n                                                            className=\"form-control\" autoComplete=\"off\" value={this.state.Price} onChange={this.onChange} />\r\n                                                        <span className=\"text-danger\">{this.state.Errors.Price}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\"\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddJobRequestDialog;","import React, { Component } from \"react\";\r\n\r\nclass ProgressRing extends Component {\r\n    render() {\r\n        return <div className=\"progress-ring\">\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n        </div>;\r\n    }\r\n};\r\n\r\nexport default ProgressRing;","import React, { Component } from \"react\";\r\nimport { getData } from \"../../../DriverFunctions\";\r\nimport JobRequestPackageItem from \"./JobRequestPackageItem\";\r\nimport AddJobRequestDialog from \"./AddJobRequestDialog\";\r\nimport ProgressBar from \"../../../../../controls/ProgressBar\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\n\r\nclass JobRequestsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllJobRequestPackages: [],\r\n            JobRequestPackages: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobRequestPackages\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job request packages found.\") {\r\n                    this.setState({\r\n                        AllJobRequestPackages: response.JobRequests,\r\n                        JobRequestPackages: response.JobRequests,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllJobRequestPackages: [],\r\n                        JobRequestPackages: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobRequestPackages\"\r\n            };\r\n\r\n            this.setState({\r\n                Refreshing: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job request packages found.\") {\r\n                    this.setState({\r\n                        AllJobRequestPackages: response.JobRequests,\r\n                        JobRequestPackages: response.JobRequests,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllJobRequestPackages: [],\r\n                        JobRequestPackages: [],\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.SearchString === \"\") {\r\n            this.setState({\r\n                JobRequestPackages: this.state.AllJobRequestPackages\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allJobRequestPackages = this.state.AllJobRequestPackages;\r\n        let filteredJobRequestPackages = [];\r\n        let count = 0;\r\n\r\n        for (let jobRequestPackage of allJobRequestPackages) {\r\n            let jobRequest = jobRequestPackage.JobRequest;\r\n\r\n            if (jobRequest.LoadingPlace.includes(this.state.SearchString) ||\r\n                jobRequest.UnloadingPlace.includes(this.state.SearchString)) {\r\n                filteredJobRequestPackages[count++] = jobRequestPackage;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            JobRequestPackages: filteredJobRequestPackages\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const jobRequestPackages = this.state.JobRequestPackages;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container\" style={{paddingBottom: \"10px\", marginBottom: \"12px\"}}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-briefcase m-r-xxs\"></span>Job Requests</div>\r\n                            <p className=\"color-light\">Create new job requests for your current and/or near-by locations to get a chance to increase your revenue.</p>\r\n                            <div className=\"btn-group\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-primary\"\r\n                                    data-toggle=\"modal\"\r\n                                    data-target=\"#add-job-request-dialog\">New Job Request</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <AddJobRequestDialog\r\n                OnOK={() => {\r\n                    this.onComponentUpdated();\r\n                }} />\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Your Job Requests\r\n                    {this.state.Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search by Places\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={this.state.SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            {(jobRequestPackages.length === 0) ?\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            {this.state.Searching ? <div className=\"col-md-24 text-center\">\r\n                                <div>\r\n                                    <div className=\"type-h3\" style={{ color: \"#008575\" }}>Searching</div>\r\n                                    <ProgressBar />\r\n                                </div>\r\n                            </div> : <div className=\"col-md-24 text-center\">\r\n                                    <h3><span className=\"fas fa-exclamation-triangle\" style={{ color: \"#FFBF15\" }}></span> No job requests found.</h3>\r\n                                </div>}\r\n                        </div>\r\n                    </div>\r\n                </div> : <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {this.state.JobRequestPackages.map((jobRequestPackage, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <JobRequestPackageItem Index={index}\r\n                                JobRequestPackage={jobRequestPackage}\r\n                                OnJobRequestUpdated={this.refresh} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobRequestsList;","import React, { Component } from \"react\";\r\nimport JobRequestsList from \"./JobRequestsList.js\";\r\n\r\nclass JobRequests extends Component {\r\n    render() {\r\n        return <section>\r\n            <JobRequestsList Refresh={this.props.Refresh} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobRequests;","import React, { Component } from \"react\";\r\n\r\nclass JobOfferContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const jobOffer = this.props.JobOffer;\r\n        const createdHoursAgo = Math.abs(new Date() - new Date(jobOffer.TimeCreated)) / 36e5;\r\n\r\n        let loadingDate = new Date(jobOffer.LoadingDate);\r\n        loadingDate.setHours((parseInt(jobOffer.LoadingTime.substring(0, 2))));\r\n        loadingDate.setMinutes(parseInt(jobOffer.LoadingTime.substring(3, 5)));\r\n        loadingDate.setSeconds(parseInt(jobOffer.LoadingTime.substring(6)));\r\n\r\n       return <section>\r\n           <div className=\"jumbotron theme-default\">\r\n               <div className=\"container\">\r\n                   <div className=\"col-md-24\">\r\n                       <div className=\"type-h3 color-default p-t-n\">{(index ?\r\n                           `${index + 1}. ${jobOffer.JobOfferType} Job Offer` :\r\n                           `${jobOffer.JobOfferType} Job Offer`)}</div>\r\n                       <div className=\"type-sh3\">\r\n                           <span className=\"fas fa-tag\" style={{ color: \"#606060\" }}></span>   {`$${jobOffer.Price}`}\r\n                       </div>\r\n                   </div>\r\n                   <div className=\"row\">\r\n                       <div className=\"col-md-8\">\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-map-marker-alt\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Loading Place</div>\r\n                                       <div className=\"content-text-secondary\">{jobOffer.LoadingPlace}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-map-marker-alt\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Unloading Place</div>\r\n                                       <div className=\"content-text-secondary\">{jobOffer.UnloadingPlace}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-map-signs\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Trip Type</div>\r\n                                       <div className=\"content-text-secondary\">{jobOffer.TripType}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-clock\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Accpeted Delay</div>\r\n                                       <div className=\"content-text-secondary\">{`${jobOffer.AcceptedDelay} Hour(s)`}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                       <div className=\"col-md-8\">\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-box\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Cargo Type</div>\r\n                                       <div className=\"content-text-secondary\">{jobOffer.CargoType}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-weight\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Cargo Weight</div>\r\n                                       <div className=\"content-text-secondary\">{`${jobOffer.CargoWeight} lbs.`}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-calendar\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Loading Date</div>\r\n                                       <div className=\"content-text-secondary\">{loadingDate.toDateString()}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-clock\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Loading Time</div>\r\n                                       <div className=\"content-text-secondary\">{loadingDate.toTimeString()}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                       <div className=\"col-md-8\">\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-id-badge\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Entry/Exit</div>\r\n                                       <div className=\"content-text-secondary\">{(jobOffer.EntryExit === 1) ?\r\n                                           <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                           <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-plug\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Availabe</div>\r\n                                       <div className=\"content-text-secondary\">{(createdHoursAgo < jobOffer.WaitingTime) ? \r\n                                           <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                           <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-calendar\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Posted on</div>\r\n                                       <div className=\"content-text-secondary\">{new Date(jobOffer.TimeCreated).toDateString()}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-clock\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Posted at</div>\r\n                                       <div className=\"content-text-secondary\">{new Date(jobOffer.TimeCreated).toTimeString()}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobOfferContainer;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { addDriverRequest } from \"../../../DriverFunctions\";\r\n\r\nclass BidJobOfferDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Price: 0,\r\n\r\n            ValidPrice: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                Price: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidPrice = this.state.ValidPrice;\r\n\r\n        switch (field) {\r\n            case \"Price\":\r\n                ValidPrice = (value !== \"\");\r\n                Errors.Price = ValidPrice ? \"\" : \"Bidding price is required.\";\r\n\r\n                if (Errors.Price !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPrice = (value <= this.props.JobOffer.Price);\r\n                Errors.Price = ValidPrice ? \"\" : \"You cannot bid more than maximum accepted price.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidPrice\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (this.props.IsRequestSent()) {\r\n            return;\r\n        }\r\n\r\n        const newDriverRequest = {\r\n            Token: localStorage.Token,\r\n            JobOfferID: this.props.JobOffer.JobOfferID,\r\n            Price: this.state.Price\r\n        };\r\n\r\n        console.log(\"Going to add driver request...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addDriverRequest(newDriverRequest).then(response => {\r\n            if (response.Message === \"Driver request is added.\") {\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n\r\n                this.cancelButton.click();\r\n                this.props.OnOK(response.DriverRequest);\r\n            }\r\n            else {\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div className=\"modal\" id={`bid-job-offer-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"bid.png\" src=\"./images/bid.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Bid on Price</div>\r\n                                    <div className=\"type-sh3\">{`Maximum Accepted Price is $${this.props.JobOffer.Price}.`}</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Price (USD)</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" min=\"0.00\" step=\"0.01\" max=\"100.00\" name=\"Price\"\r\n                                                    className=\"form-control\" autoComplete=\"off\" value={this.state.Price} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Price}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\"\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Bid\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default BidJobOfferDialog;","import React, { Component } from \"react\";\r\nimport { addDriverRequest, deleteDriverRequest } from \"../../../DriverFunctions\";\r\nimport TraderContainer from \"../../../../../containers/trader/TraderContainer\";\r\nimport JobOfferContainer from \"../../../../../containers/jobOffer/JobOfferContainer\";\r\nimport BidJobOfferDialog from \"./BidJobOfferDialog\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\n\r\nclass JobOfferPostsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Preloader: null\r\n        };\r\n\r\n        this.onSendRequest = this.onSendRequest.bind(this);\r\n        this.onCancelRequest = this.onCancelRequest.bind(this);\r\n    }\r\n\r\n    onCancelRequest = async jobOffer => {\r\n        const discardedDriverRequest = {\r\n            Token: localStorage.Token,\r\n            JobOfferID: jobOffer.JobOfferID\r\n        };\r\n\r\n        console.log(\"Going to delete driver request...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await deleteDriverRequest(discardedDriverRequest).then(response => {\r\n            if (response.Message === \"Driver request is deleted.\") {\r\n                this.props.OnRequestUpdated(jobOffer, null);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    };\r\n\r\n    onSendRequest = async jobOffer => {\r\n        if (this.props.JobOfferPost.RequestSent) {\r\n            return;\r\n        }\r\n\r\n        const newDriverRequest = {\r\n            Token: localStorage.Token,\r\n            JobOfferID: jobOffer.JobOfferID,\r\n            Price: null\r\n        };\r\n\r\n        console.log(\"Going to add driver request...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addDriverRequest(newDriverRequest).then(response => {\r\n            if (response.Message === \"Driver request is added.\") {\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n\r\n                this.props.OnRequestUpdated(jobOffer, response.DriverRequest);\r\n            }\r\n            else {\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const jobOffer = this.props.JobOfferPost.JobOffer;\r\n        const trader = this.props.JobOfferPost.Trader;\r\n        const driverRequest = this.props.JobOfferPost.DriverRequest;\r\n\r\n        let RequestButton;\r\n\r\n        if (driverRequest) {\r\n            RequestButton = <button className=\"btn btn-secondary\"\r\n                onClick={async () => { \r\n                    await this.onCancelRequest(jobOffer); }}>{(jobOffer.JobOfferType === \"Fixed-Price\") ?\r\n                    \"Cancel Request\" :\r\n                    \"Cancel Bid\"}\r\n            </button>;\r\n        }\r\n        else {\r\n            RequestButton = (jobOffer.JobOfferType === \"Fixed-Price\") ?\r\n                <button className=\"btn btn-primary\"\r\n                    onClick={async () => { await this.onSendRequest(jobOffer); }}>Send Request</button> :\r\n                <button className=\"btn btn-primary\"\r\n                    data-toggle=\"modal\"\r\n                    disabled={driverRequest}\r\n                    data-target={`#bid-job-offer-dialog-${index}`}>Bid</button>;\r\n        }\r\n\r\n        return <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron p-xxxs back-color-gray\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"type-h5 color-default p-t-n\">\r\n                                {`${index + 1}.`}\r\n                                {driverRequest ? <span class=\"badge back-color-default m-l-xxs\">{(jobOffer.JobOfferType === \"Fixed-Price\") ?\r\n                                    \"REQUEST SENT\" : \"ALREADY BADE\"}</span> : null}\r\n                            </div>\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-user\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Posted By</div>\r\n                                            <div className=\"content-text-secondary\">{`${trader.FirstName} ${trader.LastName}`}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-clock\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Posted On</div>\r\n                                            <div className=\"content-text-secondary\">{new Date(jobOffer.TimeCreated).toDateString()}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {driverRequest && driverRequest.Price ?\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-tag\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Your Bid Price</div>\r\n                                                <div className=\"content-text-secondary\">{`$${driverRequest.Price}`}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> : \r\n                                    null}\r\n                            </div>\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-tag\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Price</div>\r\n                                            <div className=\"content-text-secondary\">{`$${jobOffer.Price}`}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas  fa-map-marker-alt\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">From </div>\r\n                                            <div className=\"content-text-secondary\">{jobOffer.LoadingPlace}</div>\r\n                                            <div className=\"content-text-primary\">To</div>\r\n                                            <div className=\"content-text-secondary\">{jobOffer.UnloadingPlace}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"text-right\">\r\n                                {RequestButton}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"back-color-gray\" data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#job-offer-post-${index}`}>\r\n                    <div className=\"type-h4 text-right color-default p-xxs\">\r\n                        {\"   More Details\"} <i className=\"fas fa-ellipsis-v\"></i>\r\n                        <i class=\"glyph glyph-add\"></i>\r\n                        <i class=\"glyph glyph-remove\"></i>\r\n                    </div>\r\n                </div>\r\n                <div className=\"collapse\" id={`job-offer-post-${index}`}>\r\n                    <ul className=\"nav nav-tabs\" role=\"tablist\"\r\n                        style={{\r\n                            padding: \"10px\",\r\n                            backgroundColor: \"#EFEFEF\",\r\n                            width: \"100%\",\r\n                            margin: \"0px\"\r\n                        }}>\r\n                        <li role=\"presentation\" className=\"active\">\r\n                            <a href={`#job-offer-${index}`} aria-controls={`job-offer-${index}`} role=\"tab\" data-toggle=\"tab\">Job Offer</a>\r\n                        </li>\r\n                        <li role=\"presentation\">\r\n                            <a href={`#trader-${index}`} aria-controls={`trader-${index}`} role=\"tab\" data-toggle=\"tab\">Trader</a>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"tab-content\">\r\n                        <div role=\"tabpanel\" className=\"tab-pane active\" id={`job-offer-${index}`}>\r\n                            <JobOfferContainer JobOffer={jobOffer} />\r\n                        </div>\r\n                        <div role=\"tabpanel\" className=\"tab-pane\" id={`trader-${index}`}>\r\n                            <TraderContainer TraderID={jobOffer.TraderID} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <BidJobOfferDialog\r\n                    DialogID={index}\r\n                    JobOffer={jobOffer}\r\n                    IsRequestSent={() => { return driverRequest ? true : false; }}\r\n                    OnOK={driverRequest => { this.props.OnRequestUpdated(jobOffer, driverRequest); }} />\r\n            </li>\r\n            {this.state.Preloader}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobOfferPostsList;","import React, { Component } from \"react\";\r\nimport ProgressBar from \"../../../../../controls/ProgressBar\";\r\nimport { getData } from \"../../../DriverFunctions\";\r\nimport JobOfferPostListItem from \"./JobOfferPostListItem\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\n\r\nclass JobOfferPostsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobOfferPosts: [],\r\n            Preloader: null,\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobOfferPosts\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Job offer posts found.\") {\r\n                    this.setState({\r\n                        JobOfferPosts: response.JobOfferPosts,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobOfferPosts: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobOfferPosts\"\r\n            };\r\n\r\n            this.setState({\r\n                Refreshing: true\r\n            });\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Job offer posts found.\") {\r\n                    this.setState({\r\n                        JobOfferPosts: response.JobOfferPosts,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobOfferPosts: [],\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Searching) {\r\n            return <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#202020\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"job_offers.png\" src=\"./images/job_offers.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div className=\"col-md-12 col-md-pull-12\">\r\n                                <div className=\"type-h3\">Job Offers</div>\r\n                                <p>Job opportunities from Traders and Brokers are displayed here.</p>\r\n                                <div class=\"type-sh3\" style={{ color: \"#008575\" }}>Searhcing</div>\r\n                                <ProgressBar />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n        else if (this.state.JobOfferPosts.length === 0) {\r\n            return <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#202020\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"job_offers.png\" src=\"./images/job_offers.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div className=\"col-md-12 col-md-pull-12\">\r\n                                <div className=\"type-h3\">Job Offers</div>\r\n                                <div className=\"type-sh3\">No Job Offers Found...</div>\r\n                                <p>Job opportunities from Traders and Brokers are displayed here.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n        else {\r\n            return <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Job Offers\r\n                    {this.state.Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n                </div>\r\n                <ol className=\"list-items\" style={{ marginTop: \"0px\" }}>\r\n                    {this.state.JobOfferPosts.map((jobOfferPost, index) => {\r\n                        return <JobOfferPostListItem\r\n                            key={index}\r\n                            Index={index}\r\n                            JobOfferPost={jobOfferPost}\r\n                            OnRequestUpdated={(jobOffer, driverRequest) => {\r\n                                let jobOfferPosts = this.state.JobOfferPosts;\r\n\r\n                                for (let jobOfferPost of jobOfferPosts) {\r\n                                    if (jobOfferPost.JobOffer.JobOfferID === jobOffer.JobOfferID) {\r\n                                        jobOfferPost.DriverRequest = driverRequest;\r\n                                        break;\r\n                                    }\r\n                                }\r\n\r\n                                this.setState({\r\n                                    JobOfferPosts: jobOfferPosts\r\n                                });\r\n                            }} />;\r\n                    })}\r\n                </ol>\r\n            </section>;\r\n        }\r\n       \r\n    }\r\n};\r\n\r\nexport default JobOfferPostsList;","import React, { Component } from \"react\";\r\nimport JobOfferPostsList from \"./JobOfferPostsList\";\r\n\r\nclass JobOffers extends Component {\r\n   render() {\r\n       return <section>\r\n           <JobOfferPostsList Refresh={this.props.Refresh} />\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobOffers;","import React, { Component } from \"react\";\r\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\r\nimport Geocode from \"react-geocode\";\r\nimport Autocomplete from 'react-google-autocomplete';\r\nGeocode.setApiKey(\"AIzaSyC3YT8gMjGGdzQpHBNcayZYF4rvbGTL8IM\");\r\nGeocode.enableDebug();\r\n\r\nclass Map extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            NoState: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const AsyncMap = withScriptjs(\r\n            withGoogleMap(\r\n                props => (\r\n                    <GoogleMap\r\n                        googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyC3YT8gMjGGdzQpHBNcayZYF4rvbGTL8IM&libraries=places\"\r\n                        defaultZoom={10}\r\n                        defaultCenter={{ lat: 33.784310, lng: 72.738780 }}>                   \r\n                    </GoogleMap>\r\n                )\r\n            )\r\n        );\r\n        return (\r\n            <div>\r\n                <AsyncMap\r\n                    googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyC3YT8gMjGGdzQpHBNcayZYF4rvbGTL8IM&libraries=places\"\r\n                    loadingElement={ <div style={{ height: `100%` }} /> }\r\n                    containerElement={ <div style={{ height: \"400px\" }} /> }\r\n                    mapElement={ <div style={{ height: `100%` }} /> } />\r\n            </div>              \r\n        );\r\n    }\r\n};\r\n\r\nexport default Map;","import React, { Component } from \"react\";\r\nimport Map from \"../../../../../controls/Map\";\r\n\r\nclass MapTab extends Component {\r\n    render() {\r\n        return <section>\r\n            <div>\r\n                <Map />\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default MapTab;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\nimport { getData, addObjectionReason } from \"../../../../DriverFunctions\";\r\n\r\nclass ReasonsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ObjectionReasons: [],\r\n            AddPressed: false,\r\n            NewReason: \"\",\r\n            ValidNewReason: false,\r\n\r\n            ValidForm: false,\r\n            ProgressRing: null,\r\n\r\n            Errors: {\r\n                NewReason: \"0\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"ObjectionReasons\"\r\n            };\r\n\r\n            this.setState({\r\n                ProgressRing: <ProgressRing />\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Objection reasons found.\") {\r\n                    this.setState({\r\n                        ObjectionReasons: response.ObjectionReasons,\r\n                        ProgressRing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        ObjectionReasons: [],\r\n                        ProgressRing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewReason = this.state.ValidNewReason;\r\n\r\n        switch (field) {\r\n            case \"NewReason\":\r\n                ValidNewReason = (value.length > 0 && value.length <= 50);\r\n                Errors.NewReason = ValidNewReason ? value.length : \"Too long...\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewReason: ValidNewReason\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidNewReason\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ProgressRing: <ProgressRing />\r\n        });\r\n\r\n        const newObjectionReason = {\r\n            Token: localStorage.Token,\r\n            Reason: this.state.NewReason\r\n        };\r\n\r\n        console.log(\"Going to add Objection reason...\");\r\n\r\n        await addObjectionReason(newObjectionReason).then(response => {\r\n            if (response.Message === \"Objection reason is added.\") {\r\n                let objectionReasons = this.state.ObjectionReasons;\r\n                let errors = this.state.Errors;\r\n\r\n                objectionReasons.push(response.ObjectionReason);\r\n                errors.NewReason = \"0\";\r\n\r\n                this.setState({\r\n                    AddPressed: false,\r\n                    ObjectionReasons: objectionReasons,\r\n                    Errors: errors,\r\n                    NewReason: \"\"\r\n                });\r\n            }\r\n\r\n            this.setState({\r\n                ProgressRing: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const objectionReasons = this.state.ObjectionReasons;\r\n\r\n        return <section>\r\n            {this.state.ProgressRing}\r\n            <div class=\"entity-list entity-list-expandable\">\r\n                <div class=\"entity-list entity-list-add-item-button\">\r\n                    <a class={this.state.AddPressed ? \"entity-list-item active\" : \"entity-list-item\"}>\r\n                        <div class=\"item-icon\" onClick={() => {\r\n                            this.state.AddPressed ?\r\n                                this.setState({ AddPressed: false }) :\r\n                                this.setState({ AddPressed: true });\r\n                        }}>\r\n                            <span class=\"glyph glyph-add\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Add a Reason</div>\r\n                            <div class=\"content-text-secondary\" style={(this.state.Errors.NewReason === \"Too long...\") ? { color: \"#D75A4A\" } : null}>{this.state.Errors.NewReason}</div>\r\n                        </div>\r\n                        <div class=\"item-content-expanded\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <input type=\"text\" className=\"form-control\" name=\"NewReason\" autocomplete=\"off\"\r\n                                    value={this.state.NewReason} onChange={this.onChange} />\r\n                                <input type=\"submit\" value=\"Add\" className=\"btn btn-secondary\" disabled={!this.state.ValidForm} />\r\n                            </form>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                {objectionReasons.map((objectionReason, index) => {\r\n                    return <div key={index} class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-thumbs-down\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <button type=\"button\" class=\"btn btn-secondary\" style={{ margin: \"0px\", minWidth: \"0px\" }}\r\n                                onClick={() => { this.props.OnReasonSelected(objectionReason.Reason); }}>Select</button>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">{`${index + 1}.`}</div>\r\n                            <div class=\"content-text-secondary\">{objectionReason.Reason}</div>\r\n                        </div>\r\n                    </div>;\r\n                })}\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ReasonsList;","import React, { Component } from \"react\";\r\nimport ReasonsList from \"./ReasonsList\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { addJobObjection } from \"../../../../DriverFunctions\";\r\n\r\nclass AddObjectionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Reason: \"Select from the list.\",\r\n            Comment: \"\",\r\n\r\n            ValidReason: false,\r\n            ValidComment: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                Comment: \"0\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidComment = this.state.ValidComment;\r\n\r\n        switch (field) {\r\n            case \"Comment\":\r\n                ValidComment = (value !== \"\");\r\n                Errors.Comment = ValidComment ? \"\" : \"Comment is required\";\r\n\r\n                if (Errors.Comment !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidComment = (value.length <= 200);\r\n                Errors.Comment = ValidComment ? value.length : \"Too long...\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidComment: ValidComment\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidReason && this.state.ValidComment\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const newJobObjection = {\r\n            Token: localStorage.Token,\r\n            OnGoingJobID: this.props.OnGoingJobID,\r\n            Reason: this.state.Reason,\r\n            Comment: this.state.Comment\r\n        };\r\n\r\n        console.log(\"Going to add job objection...\");\r\n\r\n        await addJobObjection(newJobObjection).then(response => {\r\n            if (response.Message === \"Job objection is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"add-objection-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}\r\n                                    style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Add an Objection</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label>Reason</label>\r\n                                    <input type=\"text\" class=\"form-control\" name=\"Reason\" style={{ maxWidth: \"100%\" }} readonly\r\n                                        value={this.state.Reason} />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label>Comment</label>\r\n                                    <textarea rows=\"4\" class=\"form-control\" style={{ maxWidth: \"100%\" }} name=\"Comment\"\r\n                                        value={this.state.Comment} onChange={this.onChange}></textarea>\r\n                                    <span>{this.state.Errors.Comment}</span>\r\n                                </div>\r\n                                <div style={{ textAlign: \"right\" }}>\r\n                                    <input type=\"submit\" value=\"Add Objection\" className=\"btn btn-primary\" style={{ margin: \"0px\" }} disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                            <br/>\r\n                            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                            <div className=\"type-h4\" style={{ color: \"#008575\", padding: \"10px\", textAlign: \"right\" }}>{\"   Reasons\"}\r\n                                <i className=\"fas fa-ellipsis-v\"></i>\r\n                            </div>\r\n                            <ReasonsList ObjectionReasons={this.props.ObjectionReasons} OnReasonSelected={reason => {\r\n                                this.setState({\r\n                                    Reason: reason,\r\n                                    ValidReason: true\r\n                                }, () => {\r\n                                    this.setState({\r\n                                        ValidForm: this.state.ValidReason && this.state.ValidComment\r\n                                    });\r\n                                });\r\n                            }} />                           \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddObjectionDialog;","import React, { Component } from \"react\";\r\n\r\nclass JobObjectionContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const jobObjectionPackage = this.props.JobObjectionPackage;\r\n        const jobObjection = jobObjectionPackage.JobObjection;\r\n        const firstName = jobObjectionPackage.FirstName;\r\n        const lastName = jobObjectionPackage.LastName;\r\n\r\n        let createdOn = new Date(jobObjection.Created);\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-24\">\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                {`${index + 1}. Objection By ${firstName} ${lastName}`}\r\n                            </div>\r\n                            <div className=\"type-sh3\">\r\n                                <span className=\"fas fa-clock\" style={{ color: \"#606060\" }}></span>   {`Posted on ${createdOn.toDateString()}.`}\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-24\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-exclamation\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Reason</div>\r\n                                                <div className=\"content-text-secondary\">{jobObjection.Reason}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-comment\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Comment</div>\r\n                                                <div className=\"content-text-secondary\">{jobObjection.Comment}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobObjectionContainer;","import React, { Component } from \"react\";\r\nimport AddObjectionDialog from \"./AddObjectionDialog\";\r\nimport { getData } from \"../../../../DriverFunctions\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport JobObjectionContainer from \"../../../../../../containers/onGoingJob/JobObjectionContainer\";\r\n\r\nclass Objections extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobObjectionPackages: [],\r\n            Searching: false,\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobObjectionPackages\",\r\n                Params: {\r\n                    OnGoingJobID: this.props.OnGoingJobID\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job objection packages found.\") {\r\n                    this.setState({\r\n                        JobObjectionPackages: response.JobObjectionPackages,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobObjectionPackages: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobObjectionPackages\",\r\n                Params: {\r\n                    OnGoingJobID: this.props.OnGoingJobID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job objection packages found.\") {\r\n                    this.setState({\r\n                        JobObjectionPackages: response.JobObjectionPackages\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobObjectionPackages: []\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const jobObjectionPackages = this.state.JobObjectionPackages;\r\n\r\n        return <section>\r\n            <div class=\"page-header back-color-gradient\">\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-thumbs-down\"></span>   Job Objections</div>\r\n                            <p className=\"color-light\">Objections on this job, either by you or your customer, will terminate the job.</p>\r\n                            <div className=\"btn-group\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-primary\"\r\n                                    data-toggle=\"modal\"\r\n                                    data-target=\"#add-objection-dialog\">Add Objection</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <AddObjectionDialog OnGoingJobID={this.props.OnGoingJobID}\r\n                OnOK={this.onComponentUpdated} />\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Job Objections</div>\r\n            {(jobObjectionPackages.length === 0) ?\r\n                <SearchingContainer Searching={this.state.Searching}\r\n                    SearchingFor=\"job objctions\" /> : <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {jobObjectionPackages.map((jobObjectionPackage, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <JobObjectionContainer Index={index}\r\n                                JobObjectionPackage={jobObjectionPackage} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default Objections;","import React, { Component } from \"react\";\r\n\r\nclass JobContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const onGoingJob = this.props.OnGoingJob;\r\n\r\n        let loadingDate = new Date(onGoingJob.LoadingDate);\r\n        loadingDate.setHours((parseInt(onGoingJob.LoadingTime.substring(0, 2))));\r\n        loadingDate.setMinutes(parseInt(onGoingJob.LoadingTime.substring(3, 5)));\r\n        loadingDate.setSeconds(parseInt(onGoingJob.LoadingTime.substring(6)));\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"col-md-24\">\r\n                        <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Job Details</div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-map-marker-alt\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Place</div>\r\n                                        <div className=\"content-text-secondary\">{onGoingJob.LoadingPlace}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-map-marker-alt\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Unloading Place</div>\r\n                                        <div className=\"content-text-secondary\">{onGoingJob.UnloadingPlace}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-map-signs\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Trip Type</div>\r\n                                        <div className=\"content-text-secondary\">{onGoingJob.TripType}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Accpeted Delay</div>\r\n                                        <div className=\"content-text-secondary\">{`${onGoingJob.AcceptedDelay} Hour(s)`}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-box\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Cargo Type</div>\r\n                                        <div className=\"content-text-secondary\">{onGoingJob.CargoType}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-weight\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Cargo Weight</div>\r\n                                        <div className=\"content-text-secondary\">{`${onGoingJob.CargoWeight} lbs.`}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Date</div>\r\n                                        <div className=\"content-text-secondary\">{loadingDate.toDateString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Time</div>\r\n                                        <div className=\"content-text-secondary\">{loadingDate.toTimeString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-id-badge\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Entry/Exit</div>\r\n                                        <div className=\"content-text-secondary\">{(onGoingJob.EntryExit === 1) ?\r\n                                            <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                            <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Started on</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(onGoingJob.Created).toDateString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Started at</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(onGoingJob.Created).toTimeString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-hashtag\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Job Number</div>\r\n                                        <div className=\"content-text-secondary\">{onGoingJob.JobNumber}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobContainer;","import React, { Component } from \"react\";\r\nimport JobContainer from \"../../../../../containers/onGoingJob/JobContainer\";\r\n\r\nclass Job extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const onGoingJob = this.props.OnGoingJob;\r\n        const hasObjections = this.props.HasObjections;\r\n\r\n        let loadingDate = new Date(onGoingJob.LoadingDate);\r\n        loadingDate.setHours((parseInt(onGoingJob.LoadingTime.substring(0, 2))));\r\n        loadingDate.setMinutes(parseInt(onGoingJob.LoadingTime.substring(3, 5)));\r\n        loadingDate.setSeconds(parseInt(onGoingJob.LoadingTime.substring(6)));\r\n\r\n        let JumbotronContent;\r\n\r\n        if (onGoingJob.CompletedByDriver) {\r\n            JumbotronContent = <section>\r\n                <h3><span className=\"fas fa-smile p-r-xxxs\"></span>This Job is Completed.</h3>\r\n                <div class=\"type-sh3\">Waiting for Trader's Approval</div>\r\n            </section>;\r\n        }\r\n        else if (hasObjections) {\r\n            JumbotronContent = <h3><span className=\"fas fa-exclamation p-r-xxxs\"></span>This Job is Terminated.</h3>;\r\n        }\r\n        else {\r\n            let dateDifference = loadingDate - new Date();\r\n            const days = Math.floor(dateDifference / 86400000);\r\n            const hours = Math.floor((dateDifference % 86400000) / 3600000);\r\n            const minutes = Math.round(((dateDifference % 86400000) % 3600000) / 60000);\r\n\r\n            let dayString = (days > 0) ? `${days} Days ` : \"\";\r\n            let hourString = (hours > 0) ? `${hours} Hours ` : \"\";\r\n            let minuteString = (minutes > 0) ? `${minutes} Minutes ` : \"\";\r\n\r\n            let remainingTime = `${dayString}${hourString}${minuteString}Left To Load Cargo`;\r\n\r\n            if (dateDifference < 0) {\r\n                remainingTime = \"Loading Time has Passed\";\r\n            }\r\n\r\n            JumbotronContent = <section>\r\n                <h3><span className=\"fas fa-clock\"></span>   {remainingTime}</h3>\r\n                <div class=\"type-sh3\">\r\n                    <span className=\"fas fa-tag m-r-xxs\"></span>{`$${onGoingJob.Price} AMOUNT IS ON YOUR WAY`}</div>\r\n                <div class=\"col-md-12 col-md-offset-6\">\r\n                    <div class=\"type-p3\">{(onGoingJob.AcceptedDelay > 0) ?\r\n                        <span>\r\n                            <span className=\"fas fa-leaf\"></span>\r\n                            <span>{` You have a relaxation of ${onGoingJob.AcceptedDelay} Hours.`}</span>\r\n                        </span> :\r\n                        <span>\"You must reach on time to load the cargo.\"</span>}\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n\r\n        return <section>\r\n            <div class=\"jumbotron theme-dark\" style={{ background: \"linear-gradient(to right bottom, #008575, #005162)\" }}>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-24 text-center\">\r\n                            {JumbotronContent}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <JobContainer OnGoingJob={onGoingJob} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Job;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport { finishJob } from \"../../../DriverFunctions\";\r\n\r\nclass FinishJobDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Progress: null\r\n        };\r\n\r\n        this.onYes = this.onYes.bind(this);\r\n    }\r\n\r\n    onYes = async () => {\r\n        this.setState({\r\n            Progress: true\r\n        });\r\n\r\n        const finishedJob = {\r\n            Token: localStorage.Token,\r\n        }\r\n\r\n        console.log(\"Going to finish the job...\");\r\n\r\n        await finishJob(finishedJob).then(response => {\r\n            if (response.Message === \"Job is finished.\") {\r\n                this.setState({\r\n                    Progress: false\r\n                });\r\n\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n            else {\r\n                this.setState({\r\n                    Progress: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const completedByDriver = this.props.CompletedByDriver;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"finish-job-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}\r\n                                    style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            {this.state.Progress ? <ProgressRing /> : null}\r\n                            <div className=\"type-h2\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Finish Job</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div class=\"jumbotron\">\r\n                                <div class=\"container\">\r\n                                    <div class=\"row\">\r\n                                        {completedByDriver ? \r\n                                            <div class=\"col-md-24\">\r\n                                                <img alt=\"confetti.png\" src=\"./images/confetti.png\" height=\"100\" />\r\n                                                <div class=\"type-h3\">Congratulations! You Have Finished Your Job</div>\r\n                                                <div class=\"type-sh3\">The Trader's Approval is Pending at the Moment</div>\r\n                                                <p><span class=\"color-default\">Important Note:</span> You can view this job in <span class=\"color-default\">Completed Jobs</span> tab, once the trader approves job completion.</p>\r\n                                            </div> : \r\n                                            <div class=\"col-md-24\">\r\n                                                <p>Are you sure you want to finish this job? Your trader will approve job completion afterwards!</p>\r\n                                                <div class=\"text-right\">\r\n                                                    <button class=\"btn btn-primary\" onClick={this.onYes}>Yes</button>\r\n                                                </div>\r\n                                            </div>}\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default FinishJobDialog;","import React, { Component } from \"react\";\r\nimport FinishJobDialog from \"./FinishJobDialog\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { deleteOnGoingJob } from \"../../../DriverFunctions\";\r\n\r\nclass OnGoingJobOptions extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false\r\n        };\r\n    }\r\n\r\n    onDiscard = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const discardedOnGoingJob = {\r\n            Token: localStorage.Token\r\n        }\r\n\r\n        console.log(\"Going to discard the job...\");\r\n\r\n        await deleteOnGoingJob(discardedOnGoingJob).then(async response => {\r\n            if (response.Message === \"On-going job deleted.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                await this.props.OnJobRemoved();\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const hasObjections = this.props.HasObjections;\r\n        const completedByDriver = this.props.CompletedByDriver;\r\n        const completedByTrader = this.props.CompletedByTrader;\r\n        const showPreloader = this.state.ShowPreloader;\r\n\r\n        return hasObjections ?\r\n            <section>\r\n                {showPreloader ? <Preloader /> : null}\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"col-md-24\">\r\n                            <div className=\"type-h3 color-default p-t-n\">Discard the Job?</div>\r\n                            <div className=\"type-sh4\">This action cannot be undone! All job details will be removed. Are you sure you want to discard the job?</div>\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                            <button className=\"btn btn-danger\" onClick={this.onDiscard}>Discard</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section> :\r\n            <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"col-md-24\">\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Job Completion Status</div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-24\">\r\n                                <div className=\"entity-list theme-alt\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-certificate\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Finished By You</div>\r\n                                            <div className=\"content-text-secondary\">{completedByDriver ?\r\n                                                <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-certificate\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Approved By Trader</div>\r\n                                            <div className=\"content-text-secondary\">{completedByTrader ?\r\n                                                <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                            <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#finish-job-dialog\">Finish Job</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <FinishJobDialog CompletedByDriver={completedByDriver}\r\n                    OnOK={() => { this.props.OnJobFinished(); }} />\r\n            </section>;\r\n             \r\n    }\r\n};\r\n\r\nexport default OnGoingJobOptions;","import React, { Component } from \"react\";\r\nimport { getData } from \"../../../DriverFunctions\";\r\nimport ProgressBar from \"../../../../../controls/ProgressBar\";\r\nimport TraderContainer from \"../../../../../containers/trader/TraderContainer\";\r\nimport MapTab from \"./MapTab\";\r\nimport Objections from \"./objectionsTab/Objections\";\r\nimport Job from \"./Job\";\r\nimport OnGoingJobOptions from \"./OnGoingJobOptions\";\r\n\r\nclass OnGoingJob extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            OnGoingJob: null,\r\n            HasObjections: false,\r\n            Loading: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"OnGoingJob\"\r\n            };\r\n\r\n            this.setState({\r\n                Loading: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"On-going job found.\") {\r\n                    console.log(response);\r\n                    this.setState({\r\n                        OnGoingJob: response.OnGoingJob,\r\n                        HasObjections: response.HasObjections,\r\n                        Loading: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        OnGoingJob: null,\r\n                        HasObjections: false,\r\n                        Loading: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"OnGoingJob\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"On-going job found.\") {\r\n                    console.log(response);\r\n                    this.setState({\r\n                        OnGoingJob: response.OnGoingJob,\r\n                        HasObjections: response.HasObjections\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        OnGoingJob: null,\r\n                        HasObjections: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Loading || !this.state.OnGoingJob) {\r\n            return <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#202020\" }}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                alt=\"on_going_jobs.png\" src=\"./images/on_going_jobs.png\" data-source-index=\"2\" />\r\n                        </div>\r\n                        <div className=\"col-md-12 col-md-pull-12\">\r\n                            <div className=\"type-h3\">On-Going Job</div>\r\n                            {this.state.Loading ?\r\n                                <div>\r\n                                    <div class=\"type-sh3\" style={{ color: \"#008575\" }}>Searhcing</div>\r\n                                    <ProgressBar />\r\n                                </div> :\r\n                                <div className=\"type-sh3\">Couldn't Find Your Job...</div>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n        }\r\n        else {\r\n            const onGoingJob = this.state.OnGoingJob;\r\n            const hasObjections = this.state.HasObjections;\r\n\r\n            return <section>\r\n                {hasObjections ?\r\n                    <div class=\"alert alert-danger m-n\">\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xs-24\">\r\n                                    <p><span className=\"fas fa-exclamation-circle m-r-xxxs\"></span>This job has objections, and it cannot be finished now. You can still discard it. For more information, please tap on <span className=\"color-default\">Objections</span> tab.</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div> :\r\n                    null}\r\n\r\n                <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                    <li role=\"presentation\" className=\"active\">\r\n                        <a href=\"#job-tab\" aria-controls=\"job-tab\" role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={this.refresh}>Job</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#trader-tab\" aria-controls=\"trader-tab\" role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={async () => { await this.RefreshTraderContainer();  }}>Trader</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#map-tab\" aria-controls=\"map-tab\" role=\"tab\" data-toggle=\"tab\">Map</a>\r\n                    </li>\r\n                    {onGoingJob.CompletedByDriver ? \r\n                        null :\r\n                        <li role=\"presentation\">\r\n                            <a href=\"#objections-tab\" aria-controls=\"objections-tab\" role=\"tab\" data-toggle=\"tab\"\r\n                                onClick={async () => { await this.RefreshObjections(); }}>Objections</a>\r\n                        </li>}\r\n                </ul>\r\n\r\n                <div className=\"tab-content\">\r\n                    <div role=\"tabpanel\" className=\"tab-pane active\" id=\"job-tab\">\r\n                        <Job OnGoingJob={onGoingJob} HasObjections={hasObjections} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"trader-tab\">\r\n                        <TraderContainer Refresh={refresh => { this.RefreshTraderContainer = refresh; }} TraderID={onGoingJob.TraderID} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"map-tab\">\r\n                        <MapTab />\r\n                    </div>\r\n                    {onGoingJob.CompletedByDriver ? \r\n                        null :\r\n                        <div role=\"tabpanel\" className=\"tab-pane\" id=\"objections-tab\">\r\n                            <Objections Refresh={refresh => { this.RefreshObjections = refresh; }}\r\n                                OnGoingJobID={onGoingJob.OnGoingJobID} OnObjectionAdded={this.refresh} />\r\n                        </div>}\r\n                </div>\r\n                <OnGoingJobOptions HasObjections={hasObjections}\r\n                    CompletedByDriver={onGoingJob.CompletedByDriver}\r\n                    CompletedByTrader={onGoingJob.CompletedByTrader}\r\n                    OnJobRemoved={this.onComponentUpdated}\r\n                    OnJobFinished={() => {\r\n                        let onGoingJob = this.state.OnGoingJob;\r\n                        onGoingJob.CompletedByDriver = true;\r\n\r\n                        this.setState({\r\n                            OnGoingJob: onGoingJob\r\n                        });\r\n                    }} />\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default OnGoingJob;","import React, { Component } from \"react\";\r\n\r\nclass CompletedJobContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const completedJob = this.props.CompletedJob;\r\n\r\n        let loadingDate = new Date(completedJob.LoadingDate);\r\n        loadingDate.setHours((parseInt(completedJob.LoadingTime.substring(0, 2))));\r\n        loadingDate.setMinutes(parseInt(completedJob.LoadingTime.substring(3, 5)));\r\n        loadingDate.setSeconds(parseInt(completedJob.LoadingTime.substring(6)));\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"col-md-24\">\r\n                        <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                            {`${index + 1}.`}\r\n                        </div>\r\n                        <div className=\"type-sh3\">\r\n                            <span className=\"fas fa-tag m-r-xxs\" style={{ color: \"#606060\" }}></span>{`$${completedJob.Price}`}\r\n                        </div>\r\n                        <div className=\"type-h4\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                            <span className=\"fas fa-check m-r-xxxs\"></span>\r\n                            {`Cargo Items were Delivered at ${completedJob.UnloadingPlace} from ${completedJob.LoadingPlace}.`}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-hashtag\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Job Number</div>\r\n                                        <div className=\"content-text-secondary\">{completedJob.JobNumber}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-map-signs\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Trip Type</div>\r\n                                        <div className=\"content-text-secondary\">{completedJob.TripType}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Accpeted Delay</div>\r\n                                        <div className=\"content-text-secondary\">{`${completedJob.AcceptedDelay} Hour(s)`}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-id-badge\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Entry/Exit</div>\r\n                                        <div className=\"content-text-secondary\">{completedJob.EntryExit ?\r\n                                            <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                            <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-box\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Cargo Type</div>\r\n                                        <div className=\"content-text-secondary\">{completedJob.CargoType}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-weight\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Cargo Weight</div>\r\n                                        <div className=\"content-text-secondary\">{`${completedJob.CargoWeight} lbs.`}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Date</div>\r\n                                        <div className=\"content-text-secondary\">{loadingDate.toDateString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Time</div>\r\n                                        <div className=\"content-text-secondary\">{loadingDate.toTimeString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Completed on</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(completedJob.Created).toDateString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Completed at</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(completedJob.Created).toTimeString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default CompletedJobContainer;","import React, { Component } from \"react\";\r\nimport CompletedJobContainer from \"../../../../../containers/completedJob/CompletedJobContainer\";\r\nimport TraderContainer from \"../../../../../containers/trader/TraderContainer\";\r\nimport Rating from \"../../../../../controls/Rating\";\r\n\r\nclass CompletedJobPackageListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const completedJob = this.props.CompletedJobPackage.CompletedJob;\r\n        const driverReview = this.props.CompletedJobPackage.DriverReview;\r\n\r\n        return <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n            <CompletedJobContainer Index={index} CompletedJob={completedJob} />\r\n\r\n            {driverReview ?\r\n                <div class=\"alert alert-info m-n\" style={{ backgroundColor: \"#E5E5E5\", borderTop: \"2px solid #CCCCCC\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-24\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-star\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Rating</div>\r\n                                        <div className=\"content-text-secondary\"><Rating Rating={driverReview.Rating} Color=\"\" Size=\"rating-small\" /></div>\r\n                                        <div className=\"content-text-primary\">Review</div>\r\n                                        <div className=\"content-text-secondary\">{driverReview.Review}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> :\r\n                <div class=\"alert alert-info m-n\" style={{ backgroundColor: \"#E5E5E5\", borderTop: \"2px solid #CCCCCC\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-24\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-star\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">No Rating Found</div>\r\n                                        <div className=\"content-text-secondary\">Your rating and review appears here.</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n\r\n            <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#completed-job-${index}`}>\r\n                <div className=\"type-h4\" style={{ color: \"#008575\", padding: \"10px\", textAlign: \"right\" }}>Trader Details\r\n                    <i className=\"fas fa-ellipsis-v\"></i>\r\n                    <i class=\"glyph glyph-add\"></i>\r\n                    <i class=\"glyph glyph-remove\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`completed-job-${index}`}>\r\n                <TraderContainer TraderID={completedJob.TraderID} />\r\n            </div>\r\n        </li>;\r\n    }\r\n};\r\n\r\nexport default CompletedJobPackageListItem;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport CompletedJobPackageListItem from \"./CompletedJobPackageListItem\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport { getData } from \"../../../DriverFunctions\";\r\n\r\nclass CompletedJobsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllCompletedJobPackages: [],\r\n            CompletedJobPackages: [],\r\n            SearchDate: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        }\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"CompletedJobPackages\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Completed job packages found.\") {\r\n                    this.setState({\r\n                        AllCompletedJobPackages: response.CompletedJobPackages,\r\n                        CompletedJobPackages: response.CompletedJobPackages,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllCompletedJobPackages: [],\r\n                        CompletedJobPackages: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"CompletedJobPackages\"\r\n            };\r\n\r\n            this.setState({\r\n                Refreshing: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Completed job packages found.\") {\r\n                    this.setState({\r\n                        AllCompletedJobPackages: response.CompletedJobPackages,\r\n                        CompletedJobPackages: response.CompletedJobPackages,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllCompletedJobPackages: [],\r\n                        CompletedJobPackages: [],\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.SearchDate === \"\") {\r\n            this.setState({\r\n                CompletedJobPackages: this.state.AllCompletedJobPackages\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allCompletedJobPackages = this.state.AllCompletedJobPackages;\r\n        let filteredCompletedJobPackages = [];\r\n        let count = 0;\r\n        let searchDate = this.state.SearchDate;\r\n\r\n        for (let completedJobPackage of allCompletedJobPackages) {\r\n            let completedJob = completedJobPackage.CompletedJob;\r\n\r\n            if ((new Date(completedJob.LoadingDate).getTime() === new Date(searchDate).getTime()) ||\r\n                (new Date(completedJob.Created).getTime() === new Date(searchDate).getTime())) {\r\n                filteredCompletedJobPackages[count++] = completedJobPackage;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            CompletedJobPackages: filteredCompletedJobPackages\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const completedJobPackages = this.state.CompletedJobPackages;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-check m-r-xxs\"></span>Completed Jobs</div>\r\n                            <p className=\"color-light\">{`You have completed ${this.state.AllCompletedJobPackages.length} jobs.`}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Your Completed Jobs\r\n                    {this.state.Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\" name=\"SearchDate\" className=\"form-control\" placeholder=\"Search by Date\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={this.state.SearchDate} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div> \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            {(completedJobPackages.length === 0) ?\r\n                <SearchingContainer Searching={this.state.Searching}\r\n                    SearchingFor=\"completed jobs\" /> :\r\n                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {completedJobPackages.map((completedJobPackage, index) => {\r\n                        return <CompletedJobPackageListItem key={index}\r\n                            Index={index} CompletedJobPackage={completedJobPackage} />;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default CompletedJobsList;","import React, { Component } from \"react\";\r\nimport CompletedJobsList from \"./CompletedJobsList\";\r\n\r\nclass CompletedJobs extends Component {\r\n   render() {\r\n       return <section>\r\n           <CompletedJobsList Refresh={this.props.Refresh} />\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default CompletedJobs;","import React, { Component } from \"react\";\r\nimport JobRequests from \"./jobRequests/JobRequests\"; \r\nimport JobOffers from \"./jobOffers/JobOffers\";\r\nimport OnGoingJob from \"./onGoingJob/OnGoingJob\";\r\nimport CompletedJobs from \"./completedJobs/CompletedJobs\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Jobs extends Component {\r\n    render() {\r\n        return <section>\r\n            <PageHeading Heading=\"JOBS\" />\r\n            <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                padding: \"10px\",\r\n                backgroundColor: \"#3A3A3C\",\r\n                width: \"100%\",\r\n                margin: \"0px\",\r\n            }}>\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#job-requests\" aria-controls=\"job-requests\" role=\"tab\" data-toggle=\"tab\"\r\n                        onClick={async () => { await this.RefreshJobRequests(); }}>Job Requests</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#job-offers\" aria-controls=\"job-offers\" role=\"tab\" data-toggle=\"tab\"\r\n                        onClick={async () => { await this.RefreshJobOffers(); }}>Job Offers</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#on-going-job\" aria-controls=\"on-going-job\" role=\"tab\" data-toggle=\"tab\"\r\n                        onClick={async () => { await this.RefreshOnGoingJob(); }}>On-Going Job</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#completed-jobs\" aria-controls=\"completed-jobs\" role=\"tab\" data-toggle=\"tab\"\r\n                        onClick={async () => { await this.RefreshCompletedJobs(); }}>Completed Jobs</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div class=\"tab-content\">\r\n                <div role=\"tabpanel\" class=\"tab-pane active\" id=\"job-requests\">\r\n                    <JobRequests Refresh={refresh => { this.RefreshJobRequests = refresh; }} />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"job-offers\">\r\n                    <JobOffers Refresh={refresh => { this.RefreshJobOffers = refresh; }}/>\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"on-going-job\">\r\n                    <OnGoingJob Refresh={refresh => { this.RefreshOnGoingJob = refresh; }} />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"completed-jobs\">\r\n                    <CompletedJobs Refresh={refresh => { this.RefreshCompletedJobs = refresh; }}/>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Jobs;","import React, { Component } from \"react\";\r\n\r\nclass Payments extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"jumbotron\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"tools.png\" src=\"./images/tools.png\" style={{ borderRadius: \"50%\" }} data-source-index=\"1\" />\r\n                            </div>\r\n                            <div class=\"col-md-12 col-md-pull-12\">\r\n                                <div class=\"type-h3\" style={{ color: \"#008575\", }}>\r\n                                    Payments\r\n                    </div>\r\n                                <div class=\"type-sh3\" style={{ color: \"#949496\", }}>\r\n                                    Under-Construction\r\n                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Payments;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { getData, generalSettings } from \"../../DriverFunctions\";\r\n\r\nclass GeneralSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\",\r\n\r\n            ValidFirstName: true,\r\n            ValidLastName: true,\r\n            ValidPhoneNumber: true,\r\n\r\n            ValidForm: false,\r\n            SettingsSaved: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                PhoneNumber: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Driver\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver found.\") {\r\n                    let driver = response.Driver;\r\n\r\n                    this.setState({\r\n                        FirstName: driver.FirstName,\r\n                        LastName: driver.LastName,\r\n                        Address: driver.Address,\r\n                        PhoneNumber: driver.PhoneNumber,\r\n                        Gender: driver.Gender,\r\n                        Nationality: driver.Nationality,\r\n                        DateOfBirth: driver.DateOfBirth\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        FirstName: \"\",\r\n                        LastName: \"\",\r\n                        Address: \"\",\r\n                        PhoneNumber: \"\",\r\n                        Gender: \"\",\r\n                        Nationality: \"\",\r\n                        DateOfBirth: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFirstName = this.state.ValidFirstName;\r\n        let ValidLastName = this.state.ValidLastName;\r\n        let ValidPhoneNumber = this.state.ValidPhoneNumber;\r\n\r\n        switch (field) {\r\n            case \"FirstName\":\r\n                ValidFirstName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.FirstName = ValidFirstName ? \"\" : \"First name is invalid.\";\r\n                break;\r\n            case \"LastName\":\r\n                ValidLastName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.LastName = ValidLastName ? \"\" : \"Last name is invalid.\";\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = value.match(/^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/);\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFirstName: ValidFirstName,\r\n            ValidLastName: ValidLastName,\r\n            ValidPhoneNumber: ValidPhoneNumber,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidFirstName &&\r\n                    this.state.ValidLastName &&\r\n                    this.state.ValidPhoneNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedDriver = {\r\n            Token: localStorage.Token,\r\n            FirstName: this.state.FirstName,\r\n            LastName: this.state.LastName,\r\n            Address: this.state.Address,\r\n            PhoneNumber: this.state.PhoneNumber,\r\n            Gender: this.state.Gender,\r\n            Nationality: this.state.Nationality,\r\n            DateOfBirth: this.state.DateOfBirth\r\n        };\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await generalSettings(updatedDriver).then(response => {\r\n            if (response.Message === \"Driver is updated.\") {\r\n                this.props.OnSettingsSaved();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>General Settings</div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n                <div className=\"entity-list entity-list-expandable\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-comment\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"FirstName\" autoComplete=\"off\"\r\n                                    value={this.state.FirstName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">First Name</div>\r\n                            <div className=\"text-danger\">{this.state.Errors.FirstName}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-comment\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"LastName\" autoComplete=\"off\"\r\n                                    value={this.state.LastName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Last Name</div>\r\n                            <div className=\"text-danger\">{this.state.Errors.LastName}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-birthday-cake\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"date\" className=\"form-control\" name=\"DateOfBirth\" autoComplete=\"off\"\r\n                                    value={this.state.DateOfBirth} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Date of Birth</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className={this.state.Gender === \"Male\" ? \"fas fa-male\" : \"fas fa-female\"}></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"dropdown\" style={{ width: \"193px\", maxWidth: \"296px\", }}>\r\n                                <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                    aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                    <span>{this.state.Gender}</span>\r\n                                    <span className=\"caret\"></span>\r\n                                </button>\r\n                                <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                    <li><a onClick={() => { this.setState({ Gender: \"Male\" }); }}>Male</a></li>\r\n                                    <li><a onClick={() => { this.setState({ Gender: \"Female\" }); }}>Female</a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Gender</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-flag\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"Nationality\" autoComplete=\"off\"\r\n                                    value={this.state.Nationality} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Nationality</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-phone\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autoComplete=\"off\"\r\n                                    placeholder=\"+XXXXXXXXXXXX\" value={this.state.PhoneNumber} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Phone Number</div>\r\n                            <div className=\"text-danger\">{this.state.Errors.PhoneNumber}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-location-arrow\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"Address\" autoComplete=\"off\"\r\n                                    value={this.state.Address} onChange={this.onChange} style={{ width: \"393px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Address</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item active\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-save\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Save Changes?</div>\r\n                            <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                        </div>\r\n                        <div className=\"item-content-expanded\">\r\n                            <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            {this.state.Preloader}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default GeneralSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { usernameAndEmailSettings } from \"../../DriverFunctions.js\";\r\n\r\nclass CodeConfirmationDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ConfirmCode: \"\",\r\n\r\n            ValidConfirmCode: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                ConfirmCode: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidConfirmCode = this.state.ValidConfirmCode;\r\n\r\n        ValidConfirmCode = value === this.props.Code;\r\n        Errors.ConfirmCode = ValidConfirmCode ? \"\" : \"Invalid code.\";\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidConfirmCode: ValidConfirmCode,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidConfirmCode\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedDriver = {\r\n            Token: localStorage.Token,\r\n            Username: this.props.Username,\r\n            Email: this.props.Email,\r\n        };\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await usernameAndEmailSettings(updatedDriver).then(response => {\r\n            if (response.Message === \"Driver is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div\r\n                className=\"modal in\" id=\"code-confirmation-dialog\" tabIndex=\"-1\"\r\n                role=\"dialog\" aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\"\r\n                style={{ display: \"block\" }}>\r\n                <div className=\"modal-dialog\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"passcode.png\" src=\"./images/passcode.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Email Confirmation</div>\r\n                                        <div className=\"type-sh3\">We delivered a confirmation code to your email.</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Confirmation Code</label>\r\n                                                    <input type=\"text\" name=\"ConfirmCode\" className=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.ConfirmCode} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ConfirmCode}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Confirm\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default CodeConfirmationDialog;","import React, { Component } from \"react\";\r\nimport CodeConfirmationDialog from \"./CodeConfirmationDialog.js\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport {\r\n    getData,\r\n    validateUsername,\r\n    validateEmail,\r\n    sendCode,\r\n    usernameAndEmailSettings\r\n} from \"../../DriverFunctions.js\";\r\n\r\nclass UsernameAndEmailSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            NewUsername: \"\",\r\n\r\n            Email: \"\",\r\n            NewEmail: \"\",\r\n\r\n            Code: \"\",\r\n\r\n            ValidNewUsername: true,\r\n            ValidNewEmail: true,\r\n\r\n            ValidForm: false,\r\n            CodeConfirmationDialog: null,\r\n\r\n            Errors: {\r\n                NewUsername: \"\",\r\n                NewEmail: \"\",\r\n            },\r\n\r\n            CodeConfirmation: \"\",\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Driver\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver found.\") {\r\n                    let driver = response.Driver;\r\n\r\n                    this.setState({\r\n                        Username: driver.Username,\r\n                        NewUsername: driver.Username,\r\n                        Email: driver.Email,\r\n                        NewEmail: driver.Email\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Username: \"\",\r\n                        NewUsername: \"\",\r\n                        Email: \"\",\r\n                        NewEmail: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewUsername = this.state.ValidNewUsername;\r\n        let ValidNewEmail = this.state.ValidNewEmail;\r\n\r\n        switch (field) {\r\n            case \"NewUsername\":\r\n                ValidNewUsername = (value !== \"\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is required.\";\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value.match(/^[a-z0-9]+$/i));\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is invalid.\";\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value !== \"Username is unavailable.\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is unavailable.\";\r\n                break;\r\n            case \"NewEmail\":\r\n                ValidNewEmail = (value !== \"\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is required.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i));\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is invalid.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value !== \"Email is already taken.\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is already taken.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewUsername: ValidNewUsername,\r\n            ValidNewEmail: ValidNewEmail,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidNewUsername &&\r\n                    this.state.ValidNewEmail\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername === this.state.Username &&\r\n            this.state.NewEmail === this.state.Email) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername !== this.state.Username) {\r\n            const response = await validateUsername(this.state.NewUsername);\r\n\r\n            if (response.Message === \"Username is unavailable.\") {\r\n                this.validateField(\"NewUsername\", response.Message);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail !== this.state.Email) {\r\n            const response = await validateEmail(this.state.NewEmail);\r\n            if (response.Message === \"Email is already taken.\") {\r\n                this.validateField(\"NewEmail\", response.Message);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail === this.state.Email) {\r\n            const updatedDriver = {\r\n                Token: localStorage.Token,\r\n                Username: this.state.NewUsername,\r\n                Email: this.state.NewEmail,\r\n            };\r\n\r\n            this.setState({\r\n                Preloader: <Preloader />\r\n            });\r\n\r\n            console.log(\"Going to update username...\");\r\n            await usernameAndEmailSettings(updatedDriver).then(response => {\r\n                if (response.Message === \"Driver is updated.\") {\r\n                    this.props.OnSettingsSaved();\r\n                }\r\n\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            console.log(\"Going to send code...\");\r\n            await sendCode(this.state.NewEmail).then(response => {\r\n                if (response.Message === \"Code sent.\") {\r\n                    this.setState({\r\n                        CodeConfirmationDialog: <CodeConfirmationDialog\r\n                            Code={response.Code}\r\n                            Username={this.state.NewUsername}\r\n                            Email={this.state.NewEmail}\r\n                            OnCancel={() => {\r\n                                this.setState({\r\n                                    CodeConfirmationDialog: null,\r\n                                });\r\n                            }}\r\n                            OnOK={cancelButton => {\r\n                                cancelButton.click();\r\n                                this.props.OnSettingsSaved();\r\n                            }} />\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Username and Emails</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div class=\"entity-list entity-list-expandable\">\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-at\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" name=\"NewUsername\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.NewUsername} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Username</div>\r\n                                <div class=\"content-text-secondary text-danger\">{this.state.Errors.NewUsername}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-envelope\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"email\" name=\"NewEmail\" class=\"form-control\" placeholder=\"someone@example.com\" autocomplete=\"off\"\r\n                                        value={this.state.NewEmail} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Email</div>\r\n                                <div class=\"content-text-secondary text-danger\">{this.state.Errors.NewEmail}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item active\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Save Changes?</div>\r\n                                <div class=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div class=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n                {this.state.CodeConfirmationDialog}\r\n            </div> \r\n        );\r\n    }\r\n};\r\n\r\nexport default UsernameAndEmailSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { validatePassword, passwordSettings } from \"../../DriverFunctions.js\";\r\n\r\nclass PasswordSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            CurrentPassword: \"\",\r\n            NewPassword: \"\",\r\n            ConfirmPassword: \"\",\r\n\r\n            ValidCurrentPassword: false,\r\n            ValidNewPassword: false,\r\n            ValidConfirmPassword: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                CurrentPassword: \"\",\r\n                NewPassword: \"\",\r\n                ConfirmPassword: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    async validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCurrentPassword = this.state.ValidCurrentPassword;\r\n        let ValidNewPassword = this.state.ValidNewPassword;\r\n        let ValidConfirmPassword = this.state.ValidConfirmPassword;\r\n\r\n        switch (field) {\r\n            case \"CurrentPassword\":\r\n                ValidCurrentPassword = (value !== \"\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is required.\";\r\n\r\n                if (Errors.CurrentPassword !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCurrentPassword = (value !== \"Invalid password.\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is invalid.\";\r\n                break;\r\n            case \"NewPassword\":\r\n                ValidNewPassword = value.length >= 6;\r\n                Errors.NewPassword = ValidNewPassword ? \"\" : \"Password is too short.\";\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                ValidConfirmPassword = value === this.state.NewPassword;\r\n                Errors.ConfirmPassword = ValidConfirmPassword ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCurrentPassword: ValidCurrentPassword,\r\n            ValidNewPassword: ValidNewPassword,\r\n            ValidConfirmPassword: ValidConfirmPassword,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidCurrentPassword &&\r\n                    this.state.ValidNewPassword &&\r\n                    this.state.ValidConfirmPassword\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        let passwordPackage = {\r\n            Token: localStorage.Token,\r\n            Password: this.state.CurrentPassword\r\n        };\r\n\r\n        await validatePassword(passwordPackage).then(async response => {\r\n            if (response.Message === \"Invalid password.\") {\r\n                this.validateField(\"CurrentPassword\", response.Message);\r\n            }\r\n            else {\r\n                const updatedDriver = {\r\n                    Token: localStorage.Token,\r\n                    Password: this.state.NewPassword\r\n                };\r\n\r\n                this.setState({\r\n                    Preloader: <Preloader />\r\n                });\r\n\r\n                await passwordSettings(updatedDriver).then(response => {\r\n                    if (response.Message === \"Driver is updated.\") {\r\n                        this.props.OnSettingsSaved();\r\n                    }\r\n\r\n                    this.setState({\r\n                        Preloader: null\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div class=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\" }}>Change Password</div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n                <div class=\"entity-list entity-list-expandable\">\r\n                    <div class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <div class=\"form-group\">\r\n                                <input type=\"password\" name=\"CurrentPassword\" class=\"form-control\" autoComplete=\"off\"\r\n                                    value={this.state.CurrentPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Current Password</div>\r\n                            <div class=\"text-danger\">{this.state.Errors[\"CurrentPassword\"]}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <div class=\"form-group\">\r\n                                <input type=\"password\" name=\"NewPassword\" class=\"form-control\" autoComplete=\"off\"\r\n                                    value={this.state.NewPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">New Password</div>\r\n                            <div class=\"text-danger\">{this.state.Errors[\"NewPassword\"]}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <div class=\"form-group\">\r\n                                <input type=\"password\" name=\"ConfirmPassword\" class=\"form-control\" autoComplete=\"off\"\r\n                                    value={this.state.ConfirmPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Confirm Password</div>\r\n                            <div class=\"text-danger\">{this.state.Errors[\"ConfirmPassword\"]}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"entity-list-item active\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-save\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Save Changes?</div>\r\n                            <div class=\"content-text-secondary\">This cannot be undone.</div>\r\n                        </div>\r\n                        <div class=\"item-content-expanded\">\r\n                            <input type=\"submit\" value=\"Save\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            {this.state.Preloader}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PasswordSettings;","import React, { Component } from \"react\";\r\nimport GeneralSettings from \"./GeneralSettings\";\r\nimport UsernameAndEmailSettings from \"./UsernameAndEmailSettings\";\r\nimport PasswordSettings from \"./PasswordSettings\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Settings extends Component {\r\n    render() {\r\n        return <section>\r\n            <PageHeading Heading=\"SETTINGS\" />\r\n            <GeneralSettings ref=\"GeneralSettings\" OnSettingsSaved={() => { this.refs.GeneralSettings.componentDidMount(); }} />\r\n            <UsernameAndEmailSettings ref=\"UsernameAndEmailSettings\" OnSettingsSaved={() => { this.refs.UsernameAndEmailSettings.componentDidMount(); }} />\r\n            <PasswordSettings ref=\"PasswordSettings\" OnSettingsSaved={() => { this.refs.PasswordSettings.forceUpdate(); }} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Settings;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Profile from \"./profile/Profile\";\r\nimport Truck from \"./trucks/Truck\";\r\nimport Permits from \"./permits/Permits\";\r\nimport FinancialAffairs from \"./financial_affairs/FinancialAffairs\";\r\nimport Jobs from \"./jobs/Jobs\";\r\nimport Payments from \"./payments/Payments\";\r\nimport Settings from \"./settings/Settings\";\r\n\r\nclass DriversDashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Left: -400\r\n        };\r\n\r\n        this.onCloseNavigation = this.onCloseNavigation.bind(this);\r\n    }\r\n\r\n    onCloseNavigation = () => {\r\n        this.setState({\r\n            Left: -400\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.Token) {\r\n            return <Redirect to={\"/login\"} />;\r\n        }\r\n        else {\r\n            return <section>  \r\n                <div className=\"sidenav\" style={{ left: `${this.state.Left}px` }}>\r\n                    <a className=\"closebtn\" onClick={this.onCloseNavigation}>&times;</a>\r\n\r\n                    <div class=\"entity-list\" role=\"tablist\">\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#profile\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Profile</a>                           \r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#trucks\" aria-controls=\"trucks\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Trucks</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#permits\" aria-controls=\"permits\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Permits</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#financialAffairs\" aria-controls=\"financialAffairs\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Financial Affairs</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#jobs\" aria-controls=\"jobs\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Jobs</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#payments\" aria-controls=\"payments\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Payments</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#settings\" aria-controls=\"settings\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Settings</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"tab-content\">\r\n                    <div role=\"tabpanel\" className=\"tab-pane active\" id=\"profile\">\r\n                        <Profile />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"trucks\">\r\n                        <Truck />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"permits\">\r\n                        <Permits />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"financialAffairs\">\r\n                        <FinancialAffairs />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"jobs\">\r\n                        <Jobs />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"payments\">\r\n                        <Payments />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"settings\">\r\n                        <Settings />\r\n                    </div>\r\n                </div>\r\n                <div className=\"side-nav-btn\" onClick={() => {\r\n                    this.setState({\r\n                        Left: 0\r\n                    });\r\n                }}><div className=\"fas fa-bars\" style={{ fontSize: \"x-large\" }}></div>\r\n                </div>\r\n            </section>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default DriversDashboard;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { getData, uploadTraderProfilePhoto } from \"../../TraderFunctions\";\r\nimport Strings from \"../../../../res/strings\";\r\n\r\nclass ProfilePhoto extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Image: null,\r\n            PhotoURL: \"./images/defaultProfilePhoto.png\",\r\n            UploadProgress: null,\r\n        };\r\n\r\n        this.onImageUpload = this.onImageUpload.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"ProfilePhoto\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Profile photo found.\") {\r\n                    let profilePhoto = response.ProfilePhoto;\r\n\r\n                    this.setState({\r\n                        PhotoURL: profilePhoto.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.state({\r\n                        PhotoURL: \"./images/defaultProfilePhoto.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onImageUpload = async event => {\r\n        this.state.Image = event.target.files[0];\r\n        const formData = new FormData();\r\n\r\n        try {\r\n            formData.append(\"Image\", this.state.Image, this.state.Image.name);\r\n\r\n            await axios.post(Strings.IMAGE_UPLOADER, formData, {\r\n                onUploadProgress: event => {\r\n                    this.setState({\r\n                        UploadProgress: <div className=\"progress-bar\">\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                        </div>\r\n                    });\r\n                }\r\n            }).then(async response => {\r\n                response = response.data;\r\n\r\n                if (response.message === \"Image uploaded successfully.\") {\r\n                    const traderProfilePhoto = {\r\n                        Token: localStorage.Token,\r\n                        PhotoURL: response.imageUrl,\r\n                        FileName: response.filename\r\n                    }\r\n\r\n                    let photoURL = response.imageUrl;\r\n\r\n                    await uploadTraderProfilePhoto(traderProfilePhoto).then(response => {\r\n                        if (response.Message === \"Profile photo is updated.\" ||\r\n                            response.Message === \"Profile photo is added.\") {\r\n\r\n                            this.setState({\r\n                                PhotoURL: photoURL,\r\n                                UploadProgress: null,\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }).catch(() => {\r\n                this.props.OnImageUploaded(\"Invalid Image.\");\r\n                this.setState({\r\n                    ImageURL: \"./images/defaultProfilePhoto.png\",\r\n                    UploadProgress: null,\r\n                });\r\n            });\r\n        }\r\n        catch (exception) {\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n\r\n            return;\r\n        }\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <input type=\"file\" onChange={this.onImageUpload} style={{ display: \"none\", }} ref={fileInput => this.fileInput = fileInput} />\r\n                <figure className=\"media\">\r\n                    <div className=\"media-img media-img-has-play ratio-1-1\">\r\n                        <a href=\"#\" onClick={() => this.fileInput.click()}>\r\n                            <img style={{border: \"5px solid #3A3A3C\"}}\r\n                                src={this.state.PhotoURL} alt=\"ProfilePhoto.png\" />\r\n                            <i className=\"glyph glyph-edit\"></i>\r\n                        </a>\r\n                    </div>\r\n                </figure>\r\n                {this.state.UploadProgress}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ProfilePhoto;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addIdentityCard } from \"../../../../TraderFunctions.js\";\r\n\r\nclass AddIdentityCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidIDNumber: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                IDNumber: \"\",\r\n                PhotoURL: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidIDNumber = this.state.ValidIDNumber;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"IDNumber\":\r\n                ValidIDNumber = (value !== \"\");\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidIDNumber = (value >= 1000000000 && value <= 9999999999);\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number must be 10-digits long.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidIDNumber: ValidIDNumber,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidIDNumber &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newIdentityCard = {\r\n            Token: localStorage.Token,\r\n            IDNumber: this.state.IDNumber,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to add Identity Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        addIdentityCard(newIdentityCard).then(response => {\r\n            if (response.Message === \"Identity card is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div className=\"modal\" id=\"add-identity-card-dialog\"\r\n                    tabindex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Add Identity Card</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => { \r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"IdentityCard\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">ID Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"IDNumber\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.IDNumber} onChange={this.onChange} min=\"1000000000\" max=\"9999999999\"/>\r\n                                                    <span className=\"text-danger\">{this.state.Errors.IDNumber}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddIdentityCardDialog;","import React, { Component } from \"react\";\r\nimport AddIdentityCardDialog from \"./AddIdentityCardDialog.js\";\r\n\r\nclass AddIdentityCardButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddIdentityCardDialog: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-identity-card-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddIdentityCardDialog: <AddIdentityCardDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddIdentityCardDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />,\r\n                        });\r\n                    }}>\r\n                    <span className=\"fas fa-plus\" aria-hidden=\"true\"></span> Identity Card\r\n                </button>\r\n                {this.state.AddIdentityCardDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddIdentityCardButton;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addCommercialRegisterCertificate } from \"../../../../TraderFunctions.js\";\r\n\r\nclass AddCommercialRegisterCertificateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Number: UUID().substring(0, 7).toUpperCase(),\r\n            Type: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidType: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                Type: \"\",\r\n                PhotoURL: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Certificate type is required.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidType: ValidType,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidType &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newCommercialRegisterCertificate = {\r\n            Token: localStorage.Token,\r\n            Number: this.state.Number,\r\n            Type: this.state.Type,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to add commercial register certificate.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        addCommercialRegisterCertificate(newCommercialRegisterCertificate).then(response => {\r\n            if (response.Message === \"Commercial register certificate is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div className=\"modal\" id=\"add-commercial-register-certificate-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Add Commercial Register Certificate</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => { \r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"CommercialRegisterCertificate\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Certificate Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Number\" className=\"form-control\" autoComplete=\"off\" readOnly\r\n                                                        value={this.state.Number} onChange={this.onChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Certificate Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddCommercialRegisterCertificateDialog;","import React, { Component } from \"react\";\r\nimport AddCommercialRegisterCertificateDialog from \"./AddCommercialRegisterCertificateDialog.js\";\r\n\r\nclass AddCommercialRegisterCertificateButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddCommercialRegisterCertificateDialog: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-commercial-register-certificate-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddCommercialRegisterCertificateDialog: <AddCommercialRegisterCertificateDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddCommercialRegisterCertificateDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />\r\n                        });\r\n                    }}>\r\n                    <span className=\"fas fa-plus\" aria-hidden=\"true\"></span> CR Certificate\r\n                </button>\r\n                {this.state.AddCommercialRegisterCertificateDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddCommercialRegisterCertificateButton;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateIdentityCard } from \"../../../../TraderFunctions.js\";\r\n\r\nclass EditIdentityCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidIDNumber: true,\r\n            ValidPhotoURL: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                IDNumber: \"\",\r\n                PhotoURL: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            this.setState({\r\n                Preloader: <Preloader />\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Identity card found.\") {\r\n                    let identityCard = response.IdentityCard;\r\n\r\n                    this.setState({\r\n                        IDNumber: identityCard.IDNumber,\r\n                        PhotoURL: identityCard.PhotoURL,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        IDNumber: \"\",\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                        Preloader: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidIDNumber = this.state.ValidIDNumber;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"IDNumber\":\r\n                ValidIDNumber = (value !== \"\");\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidIDNumber = (value >= 1000000000 && value <= 9999999999);\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number must be 10-digits long.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidIDNumber: ValidIDNumber,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidIDNumber &&\r\n                    this.state.ValidPhotoURL\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedIdentityCard = {\r\n            Token: localStorage.Token,\r\n            IDNumber: this.state.IDNumber,\r\n            PhotoURL: this.state.PhotoURL,\r\n        }\r\n\r\n        console.log(\"Going to update Identity Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        updateIdentityCard(updatedIdentityCard).then(response => {\r\n            if (response.Message === \"Identity card is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id=\"edit-identity-card-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Identity Card</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"IdentityCard\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">ID Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"IDNumber\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.IDNumber} onChange={this.onChange} min=\"1000000000\" max=\"99999999999\" />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.IDNumber}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default EditIdentityCardDialog;","import React, { Component } from \"react\";\r\nimport EditIdentityCardDialog from \"./EditIdentityCardDialog.js\";\r\nimport { getData, deleteIdentityCard } from \"../../../../TraderFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass IdentityCardListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Key: Math.floor(Math.random() * 100),\r\n            IdentityCardID: \"\",\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            EditIdentityCardDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onRefresh = this.onRefresh.bind(this);\r\n    }\r\n\r\n    onDelete = () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        let discardedIdentityCard = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete Identity Card.`);\r\n\r\n        deleteIdentityCard(discardedIdentityCard).then(response => {\r\n            console.log(response);\r\n            if (response.Message === \"Identity card is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onRefresh();\r\n    }\r\n\r\n    onRefresh = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Identity card found.\") {\r\n                    let identityCard = response.IdentityCard;\r\n\r\n                    this.setState({\r\n                        IdentityCardID: identityCard.IdentityCardID,\r\n                        IDNumber: identityCard.IDNumber,\r\n                        PhotoURL: identityCard.PhotoURL\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        IdentityCardID: \"\",\r\n                        IDNumber: \"\",\r\n                        PhotoURL: \"./images/default_image.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#identity-card-${this.state.IdentityCardID}`}>\r\n                    <div className=\"entity-list\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\" style={{ borderRadius: \"50%\" }}>\r\n                                <span className=\"glyph glyph-add\"></span>\r\n                                <span className=\"glyph glyph-remove\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">\r\n                                    <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>{`${this.props.Index}.`}</span>\r\n                                </div>\r\n                                <div className=\"content-text-secondary\">\r\n                                    <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>IDENTITY CARD</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"collapse\" id={`identity-card-${this.state.IdentityCardID}`}>\r\n                    <div className=\"jumbotron theme-default\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        src={this.state.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                            overflow: \"hidden\",\r\n                                            border: \"5px solid #3A3A3C\",\r\n                                            margin: \"5px\"\r\n                                        }} />\r\n                                </div>\r\n                                <div className=\"col-md-18\">\r\n                                    <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                        Identity Card\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-hashtag\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">ID Number</div>\r\n                                                        <div className=\"content-text-secondary\">{this.state.IDNumber}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary\"\r\n                            data-toggle=\"modal\"\r\n                            data-target=\"#edit-identity-card-dialog\"\r\n                            onMouseDown={() => {\r\n                                this.setState({\r\n                                    EditIdentityCardDialog: <EditIdentityCardDialog\r\n                                        OnCancel={() => {\r\n                                            this.setState({\r\n                                                EditIdentityCardDialog: null\r\n                                            });\r\n                                        }}\r\n                                        OnOK={cancelButton => {\r\n                                            cancelButton.click();\r\n                                            this.onRefresh();\r\n                                        }} />\r\n                                });\r\n                            }}>Edit</button>\r\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                    </div>\r\n                </div>               \r\n                {this.state.Preloader}\r\n                {this.state.EditIdentityCardDialog}\r\n            </li>        \r\n        );\r\n    }\r\n};\r\n\r\nexport default IdentityCardListItem;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateCommercialRegisterCertificate } from \"../../../../TraderFunctions.js\";\r\n\r\nclass EditCommercialRegisterCertificateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Number: \"\",\r\n            Type: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidType: true,\r\n            ValidPhotoURL: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                Type: \"\",\r\n                PhotoURL: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onRefresh = this.onRefresh.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onRefresh();\r\n    }\r\n\r\n    onRefresh = () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"CommercialRegisterCertificate\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Commercial register certificate found.\") {\r\n                    let commercialRegisterCertificate = response.CommercialRegisterCertificate;\r\n\r\n                    this.setState({\r\n                        Number: commercialRegisterCertificate.Number,\r\n                        Type: commercialRegisterCertificate.Type,\r\n                        PhotoURL: commercialRegisterCertificate.PhotoURL,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Number: \"\",\r\n                        Type: \"\",\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                        Preloader: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Certificate type is required.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidType: ValidType,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidType &&\r\n                    this.state.ValidPhotoURL\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedCommercialRegisterCertificate = {\r\n            Token: localStorage.Token,\r\n            Number: this.state.Number,\r\n            Type: this.state.Type,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to update commercial register certificate.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        updateCommercialRegisterCertificate(updatedCommercialRegisterCertificate).then(response => {\r\n            if (response.Message === \"Commercial register certificate is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id=\"edit-commercial-register-certificate-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Commercial Register Certificate</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"IdentityCard\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Certificate Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Number\" className=\"form-control\" autoComplete=\"off\" readOnly\r\n                                                        value={this.state.Number} onChange={this.onChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Certificate Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default EditCommercialRegisterCertificateDialog;","import React, { Component } from \"react\";\r\nimport EditCommercialRegisterCertificateDialog from \"./EditCommercialRegisterCertificateDialog.js\";\r\nimport { getData, deleteCommercialRegisterCertificate } from \"../../../../TraderFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass CommercialRegisterCertificateListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ID: \"\",\r\n            Number: \"\",\r\n            Type: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            EditCommercialRegisterCertificateDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onRefresh = this.onRefresh.bind(this);\r\n    }\r\n\r\n    onDelete = () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        let discardedCommercialRegisterCertificate = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete commercial register certificate.`);\r\n\r\n        deleteCommercialRegisterCertificate(discardedCommercialRegisterCertificate).then(response => {\r\n            if (response.Message === \"Commercial register certificate is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onRefresh();\r\n    }\r\n\r\n    onRefresh = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"CommercialRegisterCertificate\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Commercial register certificate found.\") {\r\n                    let commercialRegisterCertificate = response.CommercialRegisterCertificate;\r\n\r\n                    this.setState({\r\n                        ID: commercialRegisterCertificate.ID,\r\n                        Number: commercialRegisterCertificate.Number,\r\n                        Type: commercialRegisterCertificate.Type,\r\n                        PhotoURL: commercialRegisterCertificate.PhotoURL\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        ID: \"\",\r\n                        Number: \"\",\r\n                        Type: \"\",\r\n                        PhotoURL: \"./images/default_image.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#commercial-register-certificate-${this.state.ID}`}>\r\n                    <div className=\"entity-list\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\" style={{ borderRadius: \"50%\" }}>\r\n                                <span className=\"glyph glyph-add\"></span>\r\n                                <span className=\"glyph glyph-remove\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">\r\n                                    <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>{`${this.props.Index}.`}</span>\r\n                                </div>\r\n                                <div className=\"content-text-secondary\">\r\n                                    <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>COMMERCIAL REGISTER CERTIFICATE</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"collapse\" id={`commercial-register-certificate-${this.state.ID}`}>\r\n                    <div className=\"jumbotron theme-default\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        src={this.state.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                            overflow: \"hidden\",\r\n                                            border: \"5px solid #3A3A3C\",\r\n                                            margin: \"5px\"\r\n                                        }} />\r\n                                </div>\r\n                                <div className=\"col-md-18\">\r\n                                    <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                        Commercial Register Certificate\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-hashtag\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Certificate Number</div>\r\n                                                        <div className=\"content-text-secondary\">{this.state.Number}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-cog\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Certificate Type</div>\r\n                                                        <div className=\"content-text-secondary\">{this.state.Type}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary\"\r\n                            data-toggle=\"modal\"\r\n                            data-target=\"#edit-commercial-register-certificate-dialog\"\r\n                            onMouseDown={() => {\r\n                                this.setState({\r\n                                    EditCommercialRegisterCertificateDialog: <EditCommercialRegisterCertificateDialog\r\n                                        OnCancel={() => {\r\n                                            this.setState({\r\n                                                EditCommercialRegisterCertificateDialog: null\r\n                                            });\r\n                                        }}\r\n                                        OnOK={cancelButton => {\r\n                                            cancelButton.click();\r\n                                            this.onRefresh();\r\n                                        }} />\r\n                                });\r\n                            }}>Edit</button>\r\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                    </div>\r\n                </div>               \r\n                {this.state.Preloader}\r\n                {this.state.EditCommercialRegisterCertificateDialog}\r\n            </li>        \r\n        );\r\n    }\r\n};\r\n\r\nexport default CommercialRegisterCertificateListItem;","import React, { Component } from \"react\";\r\nimport AddIdentityCardButton from \"./identityCard/AddIdentityCardButton.js\";\r\nimport AddCommercialRegisterCertificateButton from \"./commercialRegisterCertificate/AddCommercialRegisterCertificateButton.js\";\r\nimport IdentityCardListItem from \"./identityCard/IdentityCardListItem.js\";\r\nimport CommercialRegisterCertificateListItem from \"./commercialRegisterCertificate/CommercialRegisterCertificateListItem.js\";\r\nimport { getData } from \"../../../TraderFunctions\";\r\n\r\nclass DocumentsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddIdentityCardButton: null, \r\n            AddCommercialRegisterCertificateButton: null,\r\n            IdentityCardListItem: null,\r\n            CommercialRegisterCertificateListItem: null\r\n        };\r\n\r\n        this.onDocumentsUpdated = this.onDocumentsUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"I'm Here.. Going to update documents...\");\r\n        this.onDocumentsUpdated();\r\n    }\r\n\r\n    onDocumentsUpdated = () => {\r\n        let index = 0;\r\n        let identityCard;\r\n        let commercialRegisterCertificate;\r\n\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response =>\r\n            {\r\n                console.log(response);\r\n                if (response.Message === \"Identity card found.\") {\r\n                    identityCard = response.IdentityCard;\r\n                }\r\n                else {\r\n                    identityCard = undefined;\r\n                }\r\n\r\n                request = {\r\n                    Token: localStorage.Token,\r\n                    Get: \"CommercialRegisterCertificate\"\r\n                };\r\n\r\n                getData(request).then(response => {\r\n                    if (response.Message === \"Commercial register certificate found.\") {\r\n                        commercialRegisterCertificate = response.CommercialRegisterCertificate;\r\n                    }\r\n                    else {\r\n                        commercialRegisterCertificate = undefined;\r\n                    }\r\n\r\n                    (identityCard) ? this.setState({\r\n                        AddIdentityCardButton: null,\r\n                        IdentityCardListItem: <IdentityCardListItem\r\n                            Index={++index}\r\n                            OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                    }) : this.setState({\r\n                        AddIdentityCardButton: <AddIdentityCardButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                        IdentityCardListItem: null\r\n                    });\r\n\r\n                    (commercialRegisterCertificate) ? this.setState({\r\n                        AddCommercialRegisterCertificateButton: null,\r\n                        CommercialRegisterCertificateListItem: <CommercialRegisterCertificateListItem\r\n                            Index={++index}\r\n                            OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                    }) : this.setState({\r\n                        AddCommercialRegisterCertificateButton: <AddCommercialRegisterCertificateButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                        CommercialRegisterCertificateListItem: null\r\n                    });\r\n                });\r\n            });         \r\n        }      \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3 back-color-gray m-n p-xxs\">Documents</div>\r\n                <div className= \"text-right back-color-gray p-xxs\">\r\n                    {this.state.AddIdentityCardButton}\r\n                    {this.state.AddCommercialRegisterCertificateButton}\r\n                </div>\r\n                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {this.state.IdentityCardListItem}\r\n                    {this.state.CommercialRegisterCertificateListItem}\r\n                </ol>\r\n            </section>         \r\n        );\r\n    }\r\n};\r\n\r\nexport default DocumentsList;","import React, { Component } from \"react\";\r\nimport { getData } from \"../../TraderFunctions\";\r\nimport ProfilePhoto from \"./ProfilePhoto\";\r\nimport DocumentsList from \"./documents/DocumentsList\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            Email: \"\",\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\",\r\n            Type: \"\",\r\n            Active: null\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Trader\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader found.\") {\r\n                    let trader = response.Trader;\r\n\r\n                    this.setState({\r\n                        Username: trader.Username,\r\n                        Email: trader.Email,\r\n                        FirstName: trader.FirstName,\r\n                        LastName: trader.LastName,\r\n                        Address: trader.Address,\r\n                        PhoneNumber: trader.PhoneNumber,\r\n                        Gender: trader.Gender,\r\n                        Nationality: trader.Nationality,\r\n                        DateOfBirth: trader.DateOfBirth,\r\n                        Type: trader.Type,\r\n                        Active: trader.Active\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <PageHeading Heading=\"PROFILE\" />\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <ProfilePhoto />\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3 color-default p-t-n\">\r\n                                    {`${this.state.FirstName} ${this.state.LastName}`}\r\n                                </div>\r\n                                <div className=\"type-sh3\">\r\n                                    <span className=\"fas fa-briefcase m-r-xxxs\" style={{ color: \"#606060\" }}></span>{this.state.Type}\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-globe-asia\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Active</div>\r\n                                                    <div className=\"content-text-secondary\">{(this.state.Active === 1) ?\r\n                                                        <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                        <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-phone\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Phone Number</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.PhoneNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-at\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Username</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.Username}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-envelope\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Email</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.Email}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-24\">\r\n                                <div className=\"type-h3\" style={{ paddingTop: \"0px\" }}>Details</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list theme-alt\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                    <span className=\"fas fa-birthday-cake color-default\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Birthday</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.DateOfBirth}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list theme-alt\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                    <span className={(this.state.Gender === \"Male\") ? \"fas fa-male color-default\" : \"fas fa-female color-default\"}></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Gender</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.Gender}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list theme-alt\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                    <span className=\"fas fa-flag color-default\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Nationality</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.Nationality}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list theme-alt\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                    <span className=\"fas fa-map-marker-alt color-default\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Address</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.Address}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <DocumentsList />\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Profile;","import React, { Component } from \"react\";\r\n\r\nclass DrivingLicenceContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const drivingLicence = this.props.DrivingLicence;\r\n\r\n        return drivingLicence ? <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={drivingLicence.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-16\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Driving Licence</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-24\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Licence Number</div>\r\n                                                    <div class=\"content-text-secondary\">{drivingLicence.LicenceNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-cog\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Licence Type</div>\r\n                                                    <div class=\"content-text-secondary\">{drivingLicence.Type}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-calendar\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Release Date</div>\r\n                                                    <div class=\"content-text-secondary\">{new Date(drivingLicence.ReleaseDate).toDateString()}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-calendar\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Expiry Date</div>\r\n                                                    <div class=\"content-text-secondary\">{new Date(drivingLicence.ExpiryDate).toDateString()}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </section> : null;\r\n    }\r\n};\r\n\r\nexport default DrivingLicenceContainer;","import React, { Component } from \"react\";\r\n\r\nclass EntryExitCardContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const entryExitCard = this.props.EntryExitCard;\r\n\r\n        return entryExitCard ? <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-24\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Entry/Exit Card</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-24\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Entry/Exit Number</div>\r\n                                                    <div class=\"content-text-secondary\">{entryExitCard.EntryExitNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-cog\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Card Type</div>\r\n                                                    <div class=\"content-text-secondary\">{entryExitCard.Type}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-calendar\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Release Date</div>\r\n                                                    <div class=\"content-text-secondary\">{new Date(entryExitCard.ReleaseDate).toDateString()}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Number of Months</div>\r\n                                                    <div class=\"content-text-secondary\">{entryExitCard.NumberOfMonths}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </section> : null;\r\n    }\r\n};\r\n\r\nexport default EntryExitCardContainer;","import React, { Component } from \"react\";\r\n\r\nclass IdentityCardContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const identityCard = this.props.IdentityCard;\r\n\r\n        return identityCard ? <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={identityCard.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-16\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Identity Card</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-24\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">ID Number</div>\r\n                                                    <div class=\"content-text-secondary\">{identityCard.IDNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </section> : null;\r\n    }\r\n};\r\n\r\nexport default IdentityCardContainer;","import React, { Component } from \"react\";\r\nimport { getData } from \"../../../components/traders/TraderFunctions\";\r\nimport SearchingContainer from \"../../searching/SearchingContainer\"; \r\nimport DrivingLicenceContainer from \"./DrivingLicenceContainer\";\r\nimport EntryExitCardContianer from \"./EntryExitCardContainer\";\r\nimport IdentityCardContainer from \"./IdentityCardContainer\";\r\n\r\nclass DocumentsDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DriverDocuments: null,\r\n            Searching: false,\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DriverDocuments\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver documents found.\") {\r\n                    this.setState({\r\n                        DriverDocuments: response.DriverDocuments,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DriverDocuments: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const driverDocuments = this.state.DriverDocuments;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`documents-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h2\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Documents</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {(this.state.Searching || !driverDocuments) ?\r\n                                <SearchingContainer Searching={this.state.Searching}\r\n                                    SearchingFor=\"documents\" /> :\r\n                                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                                    <IdentityCardContainer IdentityCard={driverDocuments.IdentityCard} />\r\n                                    <DrivingLicenceContainer DrivingLicence={driverDocuments.DrivingLicence} />\r\n                                    <EntryExitCardContianer EntryExitCard={driverDocuments.EntryExitCard} />\r\n                                </ol>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DocumentsDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport Rating from \"../../controls/Rating\";\r\nimport SearchingContainer from \"../searching/SearchingContainer\";\r\nimport DocumentsDialog from \"./documents/DocumentsDialog\";\r\nimport { getData } from \"../../components/traders/TraderFunctions\";\r\n\r\nclass DriverContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DriverProfile: null,\r\n            Searching: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DriverProfile\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver profile found.\") {\r\n                    this.setState({\r\n                        DriverProfile: response.DriverProfile,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DriverProfile: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DriverProfile\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver profile found.\") {\r\n                    this.setState({\r\n                        DriverProfile: response.DriverProfile\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DriverProfile: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Searching || !this.state.DriverProfile) {\r\n            return <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor=\"driver\" />;\r\n        }\r\n        else {\r\n            const driverProfile = this.state.DriverProfile;\r\n            const driver = driverProfile.Driver;\r\n            const ratingAndReviews = driverProfile.RatingAndReviews\r\n            const onJob = driverProfile.OnJob;\r\n            const profilePhoto = driverProfile.ProfilePhoto ?\r\n                driverProfile.ProfilePhoto :\r\n                \"./images/defaultProfilePhoto.png\";\r\n\r\n            const dialogID = UUID().substring(0, 7).toUpperCase();\r\n\r\n            return <section>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={profilePhoto} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                    {`${driver.FirstName} ${driver.LastName} `}\r\n                                    {onJob ? <span class=\"badge back-color-golden\">ON JOB</span> : null}\r\n                                </div>\r\n                                <div className=\"type-sh3\"><span className=\"fas fa-car m-r-xxs\" style={{ color: \"#606060\" }}></span>Driver</div>\r\n                                <div className=\"type-sh3\">\r\n                                    <span><Rating Rating={ratingAndReviews.Reviews > 0 ? ratingAndReviews.Rating : 0}\r\n                                        Color=\"\" Size=\"rating-small\"\r\n                                        Label={ratingAndReviews.Reviews > 0 ?\r\n                                            `(${ratingAndReviews.Reviews} Review(s))` : `No Reviews`} /></span>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-globe-asia\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Active</div>\r\n                                                    <div className=\"content-text-secondary\">{(driver.Active === 1) ?\r\n                                                        <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                        <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class={(driver.Gender === \"Male\") ? \"fas fa-male\" : \"fas fa-female\"}></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Gender</div>\r\n                                                    <div class=\"content-text-secondary\">{driver.Gender}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-birthday-cake\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Birthday</div>\r\n                                                    <div class=\"content-text-secondary\">{driver.DateOfBirth}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-envelope\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Email</div>\r\n                                                    <div class=\"content-text-secondary\">{driver.Email}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-phone\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Phone Number</div>\r\n                                                    <div class=\"content-text-secondary\">{driver.PhoneNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-flag\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Nationality</div>\r\n                                                    <div class=\"content-text-secondary\">{driver.Nationality}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {this.props.TabView ?\r\n                                    null : \r\n                                    <button type=\"button\" className=\"btn btn-default\"\r\n                                        style={{ minWidth: \"152px\" }} data-toggle=\"modal\"\r\n                                        data-target={`#documents-dialog-${dialogID}`}>Documents</button>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.props.TabView ?\r\n                    null :\r\n                    <DocumentsDialog DialogID={dialogID}\r\n                        DriverID={this.props.DriverID} />}\r\n            </section>;\r\n        } \r\n    }\r\n};\r\n\r\nexport default DriverContainer;","import React, { Component } from \"react\";\r\n\r\nclass TrailerContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const trailer = this.props.Trailer;\r\n\r\n        return <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={trailer.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-16\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>{`${index + 1}.`}</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-24\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-weight\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Maximum Weight</div>\r\n                                                    <div class=\"content-text-secondary\">{`${trailer.MaximumWeight} GVM`}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-cog\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Trailer Type</div>\r\n                                                    <div class=\"content-text-secondary\">{trailer.Type}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TrailerContainer;","import React, { Component } from \"react\";\r\nimport TrailerContainer from \"./TrailerContainer\";\r\nimport SearchingContainer from \"../searching/SearchingContainer\";\r\n\r\nclass TrailersDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const trailers = this.props.Trailers;\r\n\r\n        let Trailers = (trailers.length > 0) ?\r\n            <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                {trailers.map((trailer, index) => {\r\n                    return <TrailerContainer key={index} Index={index} Trailer={trailer} />;\r\n                })}\r\n            </ol> : null;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`trailers-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h2\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Trailers</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {(trailers.length === 0) ?\r\n                                <SearchingContainer Searching={false}\r\n                                    SearchingFor=\"trailers\" /> : Trailers}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TrailersDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport SearchingContainer from \"../searching/SearchingContainer\";\r\nimport TrailersDialog from \"./TrailersDialog\";\r\nimport { getData } from \"../../components/traders/TraderFunctions\";\r\n\r\nclass TruckContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TruckProfile: null,\r\n            Searching: false\r\n        }\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n   onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TruckProfile\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Truck profile found.\") {\r\n\r\n                    if (this.props.OnTrailersFound) {\r\n                        this.props.OnTrailersFound(response.TruckProfile.Trailers);\r\n                    }\r\n\r\n                    this.setState({\r\n                        TruckProfile: response.TruckProfile,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TruckProfile: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TruckProfile\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Truck profile found.\") {\r\n\r\n                    if (this.props.OnTrailersFound) {\r\n                        this.props.OnTrailersFound(response.TruckProfile.Trailers);\r\n                    }\r\n\r\n                    this.setState({\r\n                        TruckProfile: response.TruckProfile\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TruckProfile: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Searching || !this.state.TruckProfile) {\r\n            return <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor=\"truck\" />;\r\n        }\r\n        else {\r\n            const truckProfile = this.state.TruckProfile;\r\n            const truck = truckProfile.Truck;\r\n            const dialogID = UUID().substring(0, 7).toUpperCase();\r\n\r\n            return <section>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={truck.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                    {`${truck.Brand} ${truck.Model}`}\r\n                                </div>\r\n                                <div className=\"type-sh3\">\r\n                                    <span className=\"fas fa-truck\" style={{ color: \"#606060\" }}></span>   {truck.Type}\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-list-ol\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Plate Number</div>\r\n                                                    <div class=\"content-text-secondary\">{truck.PlateNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-user\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Owner</div>\r\n                                                    <div class=\"content-text-secondary\">{truck.Owner}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-calendar-day\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Production Year</div>\r\n                                                    <div class=\"content-text-secondary\">{truck.ProductionYear}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-weight\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Maximum Weight</div>\r\n                                                    <div class=\"content-text-secondary\">{`${truck.MaximumWeight} GVW`}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {this.props.TabView ?\r\n                                    null :\r\n                                    <button type=\"button\" className=\"btn btn-default\"\r\n                                        style={{ minWidth: \"152px\" }} data-toggle=\"modal\"\r\n                                        data-target={`#trailers-dialog-${dialogID}`}>Trailers</button>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.props.TabView ?\r\n                    null :\r\n                    <TrailersDialog Trailers={truckProfile.Trailers} DialogID={dialogID} />}\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default TruckContainer;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { addTraderRequest } from \"../../../TraderFunctions.js\";\r\n\r\nclass SendTraderRequestDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            CargoType: \"\",\r\n            CargoWeight: 0,          \r\n            LoadingDate: new Date(),\r\n            LoadingTime: new Date().getTime(),\r\n            AcceptedDelay: 0,\r\n            EntryExit: 0,\r\n\r\n            ValidCargoType: false,\r\n            ValidCargoWeight: false,\r\n            ValidLoadingDate: false,\r\n            ValidLoadingTime: false,\r\n            ValidAcceptedDelay: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                CargoType: \"\",\r\n                CargoWeight: \"\",\r\n                LoadingDate: \"\",\r\n                LoadingTime: \"\",\r\n                AcceptedDelay: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCargoType = this.state.ValidCargoType;\r\n        let ValidCargoWeight = this.state.ValidCargoWeight;\r\n        let ValidLoadingDate = this.state.ValidLoadingDate;\r\n        let ValidLoadingTime = this.state.ValidLoadingTime;\r\n        let ValidAcceptedDelay = this.state.ValidAcceptedDelay;\r\n\r\n        switch (field) {\r\n            case \"CargoType\":\r\n                ValidCargoType = (value !== \"\");\r\n                Errors.CargoType = ValidCargoType ? \"\" : \"Cargo type is required.\";\r\n                break;\r\n            case \"CargoWeight\":\r\n                ValidCargoWeight = (value !== \"\");\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight is required.\"; \r\n\r\n                if (Errors.CargoWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCargoWeight = (value >= 100);\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight must be greater than 100 lbs.\";\r\n                break;\r\n            case \"LoadingDate\":\r\n                ValidLoadingDate = (value !== \"\");\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date is required.\";\r\n\r\n                if (Errors.LoadingDate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidLoadingDate = (new Date(value) >= new Date());\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date must be later than yesterday.\";\r\n                break;\r\n            case \"LoadingTime\":\r\n                ValidLoadingTime = (value !== \"\");\r\n                Errors.LoadingTime = ValidLoadingTime ? \"\" : \"Loading time is required.\";\r\n                break;\r\n            case \"AcceptedDelay\":\r\n                ValidAcceptedDelay = (value !== \"\");\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay is required.\";\r\n\r\n                if (Errors.AcceptedDelay !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidAcceptedDelay = (value >= 0 && value <= 48);\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay can be in the range of 0 to 48 hours.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCargoType: ValidCargoType,\r\n            ValidCargoWeight: ValidCargoWeight,\r\n            ValidLoadingDate: ValidLoadingDate,\r\n            ValidLoadingTime: ValidLoadingTime,\r\n            ValidAcceptedDelay: ValidAcceptedDelay\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidCargoType &&\r\n                        this.state.ValidCargoWeight &&\r\n                        this.state.ValidLoadingDate &&\r\n                        this.state.ValidLoadingTime &&\r\n                        this.state.AcceptedDelay\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (this.props.IsRequestSent()) {\r\n            return;\r\n        }\r\n\r\n        const newTraderRequest = {\r\n            Token: localStorage.Token,\r\n            JobRequestID: this.props.JobRequest.JobRequestID,\r\n            CargoType: this.state.CargoType,\r\n            CargoWeight: this.state.CargoWeight,\r\n            LoadingDate: this.state.LoadingDate,\r\n            LoadingTime: this.state.LoadingTime,\r\n            EntryExit: this.state.EntryExit,\r\n            AcceptedDelay: this.state.AcceptedDelay\r\n        };\r\n\r\n        console.log(\"Going to add trader request...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addTraderRequest(newTraderRequest).then(response => {\r\n            if (response.Message === \"Trader request is added.\") {\r\n\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n\r\n                this.cancelButton.click();\r\n                this.props.OnOK(response.TraderRequest);\r\n            }\r\n            else {\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div className=\"modal\" id={`send-trader-reqeust-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"send.png\" src=\"./images/send.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Send Request</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Cargo Type</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"CargoType\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.CargoType} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.CargoType}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Cargo Weight (lbs)</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"CargoWeight\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.CargoWeight} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.CargoWeight}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Accepted Delay (Hours)</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"AcceptedDelay\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.AcceptedDelay} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.AcceptedDelay}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Loading Date</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"date\" name=\"LoadingDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.LoadingDate} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.LoadingDate}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Loading Time</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"time\" name=\"LoadingTime\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.LoadingTime} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.LoadingTime}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"checkbox\">\r\n                                                    <label className=\"control-label\">\r\n                                                        <input type=\"checkbox\" name=\"EntryExit\"\r\n                                                            value={this.state.EntryExit} onChange={() => {\r\n                                                                this.state.EntryExit = this.state.EntryExit ? 0 : 1;\r\n                                                            }}></input>\r\n                                                        <span>Entry/Exit</span>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\"\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Send\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default SendTraderRequestDialog;","import React, { Component } from \"react\";\r\nimport TraderRequestContainer from \"../../../../../containers/traderRequest/TraderRequestContainer\";\r\n\r\nclass TraderRequestDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`trader-request-dialog-${this.props.Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <TraderRequestContainer TraderRequest={this.props.TraderRequest} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderRequestDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { addOnGoingJobFromJobRequest } from \"../../../TraderFunctions\";\r\n\r\nclass AssignJobDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false\r\n        };\r\n\r\n        this.onAssignNow = this.onAssignNow.bind(this);\r\n    }\r\n\r\n    onAssignNow = async () => {\r\n        if (!this.props.CanAssign()) {\r\n            return;\r\n        }\r\n\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newOnGoingJob = {\r\n            Token: localStorage.Token,\r\n            TraderRequestID: this.props.TraderRequestID\r\n        };\r\n\r\n        console.log(\"Going to add on-going job...\");\r\n\r\n        await addOnGoingJobFromJobRequest(newOnGoingJob).then(async response => {\r\n            if (response.Message === \"On-going job is added.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.cancelButton.click();\r\n                await this.props.OnOK();\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n\r\n            \r\n        });\r\n    };\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const driver = this.props.Driver;\r\n        const price = this.props.Price;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`assign-from-request-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div class=\"jumbotron\">\r\n                                <div class=\"container\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-24\">\r\n                                            <img alt=\"new.png\" src=\"./images/new.png\" height=\"80\" />\r\n                                            <div class=\"type-h4\">You are About to Start a New Job with <span class=\"color-default\">{`${driver.FirstName} ${driver.LastName}`}</span>.</div>\r\n                                            <div class=\"type-sh3\">Your Payment Amount is <span class=\"color-default\">{`$${price}`}</span>.</div>\r\n                                            <p><span class=\"color-default\">Important Note:</span> After this step, you'll be engaged in an On-Going Job. You have to pay <span class=\"color-default\">{`$${price}`}</span> after the completion of your job from the <span class=\"color-default\">Payments</span> section.</p>\r\n                                            <div class=\"text-right\">\r\n                                                <button class=\"btn btn-primary\" onClick={this.onAssignNow}>Assign Now</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AssignJobDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport DriverContainer from \"../../../../../containers/driver/DriverContainer\";\r\nimport TruckContainer from \"../../../../../containers/truck/TruckContainer\";\r\nimport JobRequestContainer from \"../../../../../containers/jobReqeust/JobRequestContainer\";\r\nimport SendTraderRequestDialog from \"./SendTraderRequestDialog\";\r\nimport TraderRequestDialog from \"./TraderRequestDialog\";\r\nimport AssignJobDialog from \"./AssignJobDialog\";\r\nimport { deleteTraderRequest } from \"../../../TraderFunctions\";\r\n\r\nclass JobRequestPostListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Preloader: null\r\n        };\r\n\r\n        this.onCancelRequest = this.onCancelRequest.bind(this);\r\n    }\r\n\r\n    onCancelRequest = async jobRequest => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedTraderRequest = {\r\n            Token: localStorage.Token,\r\n            JobRequestID: jobRequest.JobRequestID\r\n        };\r\n\r\n        console.log(`Going to delete Trader request...`);\r\n\r\n        await deleteTraderRequest(discardedTraderRequest).then(response => {\r\n            if (response.Message === \"Trader request is deleted.\") {\r\n                this.props.OnRequestUpdated(jobRequest, null);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const jobRequest = this.props.JobRequestPost.JobRequest;\r\n        const driver = this.props.JobRequestPost.Driver;\r\n        const driverOnJob = this.props.JobRequestPost.DriverOnJob;\r\n        const traderOnJob = this.props.TraderOnJob;\r\n        const traderRequest = this.props.JobRequestPost.TraderRequest;\r\n        const canAssign = !driverOnJob && !traderOnJob;\r\n\r\n        const assignJobIndex = UUID();\r\n\r\n        let Badge;\r\n\r\n        if (traderRequest) {\r\n            Badge = traderRequest.Selected ?\r\n                <span class=\"badge back-color-golden m-l-xxs\">REQUEST ACCEPTED</span> :\r\n                <span class=\"badge back-color-default m-l-xxs\">REQUEST SENT</span>;\r\n        }\r\n        else {\r\n            Badge = null;\r\n        }\r\n\r\n        return <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron p-xxxs back-color-gray\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"type-h5 color-default p-t-n\">\r\n                                {`${index + 1}.`}\r\n                                {Badge}\r\n                            </div>\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-user\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Posted By</div>\r\n                                            <div className=\"content-text-secondary\">{`${driver.FirstName} ${driver.LastName}`}\r\n                                                {driverOnJob ?\r\n                                                    <span class=\"badge back-color-danger m-l-xxs\">ON JOB</span> :\r\n                                                    null}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-clock\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Posted On</div>\r\n                                            <div className=\"content-text-secondary\">{new Date(jobRequest.TimeCreated).toDateString()}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-tag\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Price</div>\r\n                                            <div className=\"content-text-secondary\">{`$${jobRequest.Price}`}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas  fa-map-marker-alt\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">From </div>\r\n                                            <div className=\"content-text-secondary\">{jobRequest.LoadingPlace}</div>\r\n                                            <div className=\"content-text-primary\">To</div>\r\n                                            <div className=\"content-text-secondary\">{jobRequest.UnloadingPlace}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"text-right\">\r\n                                {traderRequest ?\r\n                                    <section>\r\n                                        <button className=\"btn btn-secondary\"\r\n                                            onClick={async () => { await this.onCancelRequest(jobRequest); }}>Cancel Request</button>\r\n                                        <button className=\"btn btn-primary\"\r\n                                            data-toggle=\"modal\"\r\n                                            data-target={`#trader-request-dialog-${index}`}>View Request</button>\r\n                                        {traderRequest && traderRequest.Selected ?\r\n                                            <button className=\"btn btn-primary\"\r\n                                                disabled={!canAssign}\r\n                                                data-toggle=\"modal\"\r\n                                                data-target={`#assign-from-request-dialog-${assignJobIndex}`}>Assign Job</button> :\r\n                                            null}\r\n                                    </section> :\r\n                                    <button className=\"btn btn-primary\"\r\n                                        data-toggle=\"modal\"\r\n                                        data-target={`#send-trader-reqeust-dialog-${index}`}>Send Request</button>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {traderRequest ? \r\n                    <TraderRequestDialog Index={index} TraderRequest={traderRequest} /> : \r\n                    null}\r\n\r\n                {traderRequest && traderRequest.Selected ? \r\n                    <AssignJobDialog Index={assignJobIndex}\r\n                        TraderRequestID={traderRequest.TraderRequestID}\r\n                        Driver={driver}\r\n                        Price={jobRequest.Price}\r\n                        CanAssign={() => { return canAssign; }}\r\n                        OnOK={this.props.OnJobAssigned} /> : \r\n                    null}\r\n\r\n                <div className=\"back-color-gray\" data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#job-request-post-${index}`}>\r\n                    <div className=\"type-h4\" style={{ color: \"#008575\", padding: \"10px\", textAlign: \"right\" }}>\r\n                        {\"   More Details\"} <i className=\"fas fa-ellipsis-v\"></i>\r\n                        <i class=\"glyph glyph-add\"></i>\r\n                        <i class=\"glyph glyph-remove\"></i>\r\n                    </div>\r\n                </div>\r\n                <div className=\"collapse\" id={`job-request-post-${index}`}>\r\n                    <ul className=\"nav nav-tabs\" role=\"tablist\"\r\n                        style={{\r\n                            padding: \"10px\",\r\n                            backgroundColor: \"#EFEFEF\",\r\n                            width: \"100%\",\r\n                            margin: \"0px\"\r\n                        }}>\r\n                        <li role=\"presentation\" className=\"active\"><a href={`#job-request-${index}`} aria-controls={`job-request-${index}`} role=\"tab\" data-toggle=\"tab\">Job Request</a></li>\r\n                        <li role=\"presentation\">\r\n                            <a href={`#driver-${index}`} aria-controls={`driver-${index}`} role=\"tab\" data-toggle=\"tab\"\r\n                                onClick={async () => { await this.RefreshDriverContainer(); }}>Driver</a>\r\n                        </li>\r\n                        <li role=\"presentation\">\r\n                            <a href={`#truck-${index}`} aria-controls={`truck-${index}`} role=\"tab\" data-toggle=\"tab\"\r\n                                onClick={async () => { await this.RefreshTruckContainer(); }}>Truck</a>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"tab-content\">\r\n                        <div role=\"tabpanel\" className=\"tab-pane active\" id={`job-request-${index}`}>\r\n                            <JobRequestContainer JobRequest={jobRequest} />\r\n                        </div>\r\n                        <div role=\"tabpanel\" className=\"tab-pane\" id={`driver-${index}`}>\r\n                            <DriverContainer Refresh={refresh => { this.RefreshDriverContainer = refresh; }} DriverID={jobRequest.DriverID} />\r\n                        </div>\r\n                        <div role=\"tabpanel\" className=\"tab-pane\" id={`truck-${index}`}>\r\n                            <TruckContainer Refresh={refresh => { this.RefreshTruckContainer = refresh; }} DriverID={jobRequest.DriverID} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <SendTraderRequestDialog\r\n                    DialogID={index}\r\n                    JobRequest={jobRequest}\r\n                    IsRequestSent={() => { return traderRequest ? true : false; }}\r\n                    OnOK={traderRequest => { this.props.OnRequestUpdated(jobRequest, traderRequest); }} />\r\n            </li>\r\n            {this.state.Preloader}\r\n        </section>;     \r\n    }\r\n};\r\n\r\nexport default JobRequestPostListItem;","import React, { Component } from \"react\";\r\nimport ProgressBar from \"../../../../../controls/ProgressBar\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport { getData } from \"../../../TraderFunctions\";\r\nimport JobRequestPostListItem from \"./JobRequestPostListItem\";\r\n\r\nclass JobRequestPostsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobRequestPosts: [],\r\n            TraderOnJob: false,\r\n            Searching: true,\r\n            Refreshing: false,\r\n            Preloader: null,\r\n            Message: null,\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        this.props.Refresh(this.refresh);\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobRequestPosts\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job request posts found.\") {\r\n                    this.setState({\r\n                        JobRequestPosts: response.JobRequestPosts,\r\n                        TraderOnJob: response.TraderOnJob,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobRequestPosts: [],\r\n                        TraderOnJob: false,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Refreshing: true\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobRequestPosts\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job request posts found.\") {\r\n                    this.setState({\r\n                        JobRequestPosts: response.JobRequestPosts,\r\n                        TraderOnJob: response.TraderOnJob,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobRequestPosts: [],\r\n                        TraderOnJob: false,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Searching) {\r\n            return <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#202020\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"job_requests.png\" src=\"./images/job_requests.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div className=\"col-md-12 col-md-pull-12\">\r\n                                <div className=\"type-h3\">Job Requests</div>\r\n                                <p>Job requests from Drivers are dispalyed here.</p>\r\n                                <div class=\"type-sh3\" style={{ color: \"#008575\" }}>Searhcing</div>\r\n                                <ProgressBar />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n        else if (this.state.JobRequestPosts.length === 0) {\r\n            return <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#202020\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"job_requests.png\" src=\"./images/job_requests.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div className=\"col-md-12 col-md-pull-12\">\r\n                                <div className=\"type-h3\">Job Requests</div>\r\n                                <div className=\"type-sh3\">No Job Requests Found...</div>\r\n                                <p>Job requests from Drivers are dispalyed here.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n        else {\r\n            return <section>\r\n                {this.state.TraderOnJob ?\r\n                    <div class=\"alert alert-danger m-n\">\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xs-24\">\r\n                                    <p><span className=\"fas fa-exclamation-circle m-r-xxxs\"></span>While you are engaged in an On-Going Job, you cannot assign more jobs to drivers. View details in <span className=\"color-default\">On-Going Job</span> tab.</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div> :\r\n                    null}\r\n           <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Job Requests\r\n                    {this.state.Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n                </div>\r\n                <ol className=\"list-items\" style={{ marginTop: \"0px\" }}>\r\n                    {this.state.JobRequestPosts.map((jobRequestPost, index) => {\r\n                        return <JobRequestPostListItem key={index} Index={index}\r\n                            JobRequestPost={jobRequestPost}\r\n                            OnRequestUpdated={(jobRequest, traderRequest) => {\r\n                                let jobRequestPosts = this.state.JobRequestPosts;\r\n\r\n                                for (let jobRequestPost of jobRequestPosts) {\r\n                                    if (jobRequestPost.JobRequest.JobRequestID === jobRequest.JobRequestID) {\r\n                                        jobRequestPost.TraderRequest = traderRequest;\r\n                                        break;\r\n                                    }\r\n                                }\r\n\r\n                                this.setState({\r\n                                    JobRequestPosts: jobRequestPosts\r\n                                });\r\n                            }}\r\n                            TraderOnJob={this.state.TraderOnJob}\r\n                            OnJobAssigned={this.refresh} />;\r\n                    })} \r\n                </ol>\r\n       </section>;\r\n        }      \r\n    }\r\n};\r\n\r\nexport default JobRequestPostsList;","import React, { Component } from \"react\";\r\nimport JobRequestPostsList from \"./JobRequestPostsList\";\r\n\r\nclass JobOffers extends Component {\r\n   render() {\r\n       return <section>\r\n           <JobRequestPostsList Refresh={this.props.Refresh} />\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobOffers;","import React, { Component } from \"react\";\r\nimport { getData } from \"../../../components/traders/TraderFunctions\";\r\nimport SearchingContainer from \"../../searching/SearchingContainer\"; \r\nimport DrivingLicenceContainer from \"./DrivingLicenceContainer\";\r\nimport EntryExitCardContianer from \"./EntryExitCardContainer\";\r\nimport IdentityCardContainer from \"./IdentityCardContainer\";\r\n\r\nclass DocumentsContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DriverDocuments: null,\r\n            Searching: false,\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DriverDocuments\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver documents found.\") {\r\n                    this.setState({\r\n                        DriverDocuments: response.DriverDocuments,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DriverDocuments: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DriverDocuments\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver documents found.\") {\r\n                    this.setState({\r\n                        DriverDocuments: response.DriverDocuments\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DriverDocuments: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const driverDocuments = this.state.DriverDocuments;\r\n\r\n        return (this.state.Searching || !driverDocuments) ?\r\n            <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor=\"documents\" /> :\r\n            <section>\r\n                <ol className=\"list-items m-n\">\r\n                    <IdentityCardContainer IdentityCard={driverDocuments.IdentityCard} />\r\n                    <DrivingLicenceContainer DrivingLicence={driverDocuments.DrivingLicence} />\r\n                    <EntryExitCardContianer EntryExitCard={driverDocuments.EntryExitCard} />\r\n                </ol>\r\n            </section>;\r\n    }\r\n};\r\n\r\nexport default DocumentsContainer;","import React, { Component } from \"react\";\r\nimport DriverContainer from \"../../../../../containers/driver/DriverContainer\";\r\nimport DocumentsContainer from \"../../../../../containers/driver/documents/DocumentsContainer\";\r\n\r\nclass ProfileDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`profile-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h2\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Driver's Profile</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <section>\r\n                                <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                                    <li role=\"presentation\" className=\"active\">\r\n                                        <a href={`#driver-tab-${index}`} aria-controls={`driver-tab-${index}`} role=\"tab\" data-toggle=\"tab\">Driver</a>\r\n                                    </li>\r\n                                    <li role=\"presentation\">\r\n                                        <a href={`#documents-tab-${index}`} aria-controls={`documents-tab-${index}`} role=\"tab\" data-toggle=\"tab\">Documents</a>\r\n                                    </li>\r\n                                </ul>\r\n                                <div className=\"tab-content\">\r\n                                    <div role=\"tabpanel\" className=\"tab-pane active\" id={`driver-tab-${index}`}>\r\n                                        <DriverContainer Refresh={this.props.RefreshDriver} DriverID={this.props.DriverID} TabView={true} />\r\n                                    </div>\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id={`documents-tab-${index}`}>\r\n                                        <DocumentsContainer Refresh={this.props.RefreshDocuments} DriverID={this.props.DriverID} />\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ProfileDialog;","import React, { Component } from \"react\";\r\nimport TrailerContainer from \"./TrailerContainer\";\r\nimport SearchingContainer from \"../searching/SearchingContainer\";\r\n\r\nclass TrailersDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const trailers = this.props.Trailers;\r\n\r\n        return (trailers.length === 0) ?\r\n            <SearchingContainer Searching={false}\r\n                SearchingFor=\"trailers\" /> : \r\n            <section>\r\n                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {trailers.map((trailer, index) => {\r\n                        return <TrailerContainer key={index} Index={index} Trailer={trailer} />;\r\n                    })}\r\n                </ol>\r\n            </section>;\r\n    }\r\n};\r\n\r\nexport default TrailersDialog;","import React, { Component } from \"react\";\r\nimport TruckContainer from \"../../../../../containers/truck/TruckContainer\";\r\nimport TrailersContainer from \"../../../../../containers/truck/TrailersContainer\";\r\n\r\nclass ProfileDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Trailers: []\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`truck-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h2\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Driver's Profile</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <section>\r\n                                <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                                    <li role=\"presentation\" className=\"active\">\r\n                                        <a href={`#truck-tab-${index}`} aria-controls={`truck-tab-${index}`} role=\"tab\" data-toggle=\"tab\">Truck</a>\r\n                                    </li>\r\n                                    <li role=\"presentation\">\r\n                                        <a href={`#trailers-tab-${index}`} aria-controls={`trailers-tab-${index}`} role=\"tab\" data-toggle=\"tab\">Trailers</a>\r\n                                    </li>\r\n                                </ul>\r\n                                <div className=\"tab-content\">\r\n                                    <div role=\"tabpanel\" className=\"tab-pane active\" id={`truck-tab-${index}`}>\r\n                                        <TruckContainer Refresh={this.props.Refresh}\r\n                                            DriverID={this.props.DriverID}\r\n                                            OnTrailersFound={trailers => {\r\n                                                this.setState({\r\n                                                    Trailers: trailers\r\n                                                });\r\n                                            }}\r\n                                            TabView={true} />\r\n                                    </div>\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id={`trailers-tab-${index}`}>\r\n                                        <TrailersContainer Trailers={this.state.Trailers} />\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ProfileDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { addOnGoingJobFromJobOffer } from \"../../../TraderFunctions\";\r\n\r\nclass ProfileDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false\r\n        };\r\n\r\n        this.onAssignNow = this.onAssignNow.bind(this);\r\n    }\r\n\r\n    onAssignNow = async () => {\r\n        if (!this.props.CanAssign()) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newOnGoingJob = {\r\n            Token: localStorage.Token,\r\n            DriverRequestID: this.props.DriverRequestID\r\n        };\r\n\r\n        console.log(\"Going to add on-going job...\");\r\n\r\n        await addOnGoingJobFromJobOffer(newOnGoingJob).then(response => {\r\n            if (response.Message === \"On-going job is added.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.cancelButton.click();\r\n\r\n                this.props.OnOK();\r\n                return;\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n\r\n            \r\n        });\r\n    };\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const driver = this.props.Driver;\r\n        const price = this.props.Price;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`assign-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div class=\"jumbotron\">\r\n                                <div class=\"container\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-24\">\r\n                                            <img alt=\"new.png\" src=\"./images/new.png\" height=\"100\" />\r\n                                            <div class=\"type-h4\">You are About to Start a New Job with <span class=\"color-default\">{`${driver.FirstName} ${driver.LastName}`}</span>.</div>\r\n                                            <div class=\"type-sh3\">Your Payment Amount is <span class=\"color-default\">{`$${price}`}</span>.</div>\r\n                                            <p><span class=\"color-default\">Important Note:</span> After this step, you'll be engaged in an On-Going Job. You have to pay <span class=\"color-default\">{`$${price}`}</span> after the completion of your job from the <span class=\"color-default\">Payments</span> section.</p>\r\n                                            <div class=\"text-right\">\r\n                                                <button class=\"btn btn-primary\" onClick={this.onAssignNow}>Assign Now</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ProfileDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport ProfileDialog from \"./ProfileDialog\";\r\nimport TruckDialog from \"./TruckDialog\";\r\nimport AssignJobDialog from \"./AssignJobDialog\";\r\n\r\nclass DriverRequestRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const price = this.props.Price;\r\n        const driverRequestPackage = this.props.DriverRequestPackage;\r\n        const driverRequest = driverRequestPackage.DriverRequest;\r\n        const driver = driverRequestPackage.Driver;\r\n        const driverOnJob = driverRequestPackage.DriverOnJob;\r\n        const traderOnJob = driverRequestPackage.TraderOnJob;\r\n        const canAssign = !(driverOnJob || traderOnJob);\r\n\r\n        const profileIndex = UUID();\r\n        const truckIndex = UUID();\r\n        const assignJobIndex = UUID();\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{index + 1}</strong>\r\n            </td>\r\n\r\n            <td>\r\n                {`${driver.FirstName} ${driver.LastName}`}\r\n                {index === 0 ? <span class=\"badge back-color-golden m-l-xxxs\">NEW</span> : null}\r\n                {driverOnJob ? <span class=\"badge back-color-danger m-l-xxxs\">ON JOB</span> : null}\r\n            </td>\r\n\r\n            <td>{new Date(driverRequest.Created).toDateString()}</td>\r\n\r\n            {driverRequest.Price ? <td>{`$${driverRequest.Price}`}</td> : null}\r\n\r\n            <td class=\"text-right\">\r\n                <div>\r\n                    <button className=\"btn btn-secondary m-xxxs\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#profile-dialog-${profileIndex}`}\r\n                        onClick={async () => {\r\n                            await this.RefreshDriverContainer();\r\n                            await this.RefreshDocumentsContainer();\r\n                        }}>Profile</button>\r\n\r\n                    <button className=\"btn btn-secondary m-xxxs\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#truck-dialog-${truckIndex}`}\r\n                        onClick={async () => {\r\n                            await this.RefreshTruckContainer();\r\n                        }}>Truck</button>\r\n\r\n                    <button className=\"btn btn-primary m-xxxs\"\r\n                        disabled={!canAssign}\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#assign-dialog-${assignJobIndex}`}>Assign Job</button>\r\n\r\n                    <ProfileDialog Index={profileIndex}\r\n                        DriverID={driverRequest.DriverID}\r\n                        RefreshDriver={refresh => { this.RefreshDriverContainer = refresh; }}\r\n                        RefreshDocuments={refresh => { this.RefreshDocumentsContainer = refresh; }} />\r\n\r\n                    <TruckDialog Index={truckIndex}\r\n                        DriverID={driverRequest.DriverID}\r\n                        Refresh={refresh => { this.RefreshTruckContainer = refresh; }} />\r\n\r\n                    <AssignJobDialog Index={assignJobIndex}\r\n                        DriverRequestID={driverRequest.DriverRequestID}\r\n                        Driver={driver}\r\n                        Price={driverRequest.Price ? driverRequest.Price : price}\r\n                        CanAssign={() => { return canAssign; }}\r\n                        OnOK={this.props.OnJobAssigned} />\r\n                </div>\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default DriverRequestRow;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport DriverRequestRow from \"./DriverRequestRow\";\r\nimport { getData } from \"../../../TraderFunctions\";\r\n\r\nclass DriverRequestsTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DriverRequestPackages: [],\r\n            Searching: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DriverRequestPackages\",\r\n                Params: {\r\n                    JobOfferID: this.props.JobOfferID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver request packages found.\") {\r\n                    this.props.OnRequestsFound(response.DriverRequestPackages.length);\r\n                    this.setState({\r\n                        DriverRequestPackages: response.DriverRequestPackages,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.props.OnRequestsFound(0);\r\n                    this.setState({\r\n                        DriverRequestPackages: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DriverRequests\",\r\n                Params: {\r\n                    JobOfferID: this.props.JobOfferID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver requests found.\") {\r\n                    this.setState({\r\n                        DriverRequests: response.DriverRequests\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DriverRequests: []\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const jobOfferType = this.props.JobOfferType;\r\n\r\n        if (this.state.Searching || this.state.DriverRequestPackages.length === 0) {\r\n            return <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor={jobOfferType === \"Fixed-Price\" ? \"requests\" : \"bids\"} />;\r\n        }\r\n        else {\r\n            const driverRequestPackages = this.state.DriverRequestPackages;\r\n\r\n            return <section>\r\n                <div class=\"table-responsive back-color-gray\">\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>NUMBER</th>\r\n                                <th>DRIVER</th>\r\n                                <th>REQUESTED ON</th>\r\n                                {jobOfferType === \"Auctionable\" ? <th>BID PRICE</th> : null}\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {driverRequestPackages.map((driverRequestPackage, index) => {\r\n                                return <DriverRequestRow key={index}\r\n                                    Index={index}\r\n                                    Price={this.props.Price}\r\n                                    TraderOnJob={this.props.TraderOnJob}\r\n                                    DriverRequestPackage={driverRequestPackage}\r\n                                    OnJobAssigned={this.props.OnJobAssigned} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default DriverRequestsTable;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { updateJobOffer } from \"../../../TraderFunctions.js\";\r\n\r\nclass EditJobOfferDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobOfferID: this.props.JobOffer.JobOfferID,\r\n            LoadingPlace: this.props.JobOffer.LoadingPlace,\r\n            UnloadingPlace: this.props.JobOffer.UnloadingPlace,\r\n            TripType: this.props.JobOffer.TripType,\r\n            CargoType: this.props.JobOffer.CargoType,\r\n            CargoWeight: this.props.JobOffer.CargoWeight,\r\n            LoadingDate: this.props.JobOffer.LoadingDate,\r\n            LoadingTime: this.props.JobOffer.LoadingTime,\r\n            AcceptedDelay: this.props.JobOffer.AcceptedDelay,\r\n            Price: this.props.JobOffer.Price,\r\n            JobOfferType: this.props.JobOffer.JobOfferType,\r\n            EntryExit: this.props.JobOffer.EntryExit,\r\n\r\n            ValidCargoType: true,\r\n            ValidCargoWeight: true,\r\n            ValidLoadingPlace: true,\r\n            ValidUnloadingPlace: true,\r\n            ValidLoadingDate: true,\r\n            ValidLoadingTime: true,\r\n            ValidAcceptedDelay: true,\r\n            ValidPrice: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                CargoType: \"\",\r\n                CargoWeight: \"\",\r\n                LoadingPlace: \"\",\r\n                UnloadingPlace: \"\",\r\n                LoadingDate: \"\",\r\n                LoadingTime: \"\",\r\n                AcceptedDelay: \"\",\r\n                Price: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCargoType = this.state.ValidCargoType;\r\n        let ValidCargoWeight = this.state.ValidCargoWeight;\r\n        let ValidLoadingPlace = this.state.ValidLoadingPlace;\r\n        let ValidUnloadingPlace = this.state.ValidUnloadingPlace;\r\n        let ValidLoadingDate = this.state.ValidLoadingDate;\r\n        let ValidLoadingTime = this.state.ValidLoadingTime;\r\n        let ValidAcceptedDelay = this.state.ValidAcceptedDelay;\r\n        let ValidPrice = this.state.ValidPrice;\r\n\r\n        switch (field) {\r\n            case \"CargoType\":\r\n                ValidCargoType = (value !== \"\");\r\n                Errors.CargoType = ValidCargoType ? \"\" : \"Cargo type is required.\";\r\n                break;\r\n            case \"CargoWeight\":\r\n                ValidCargoWeight = (value !== \"\");\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight is required.\";\r\n\r\n                if (Errors.CargoWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCargoWeight = (value >= 100);\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight must be greater than 100 lbs.\";\r\n                break;\r\n            case \"LoadingPlace\":\r\n                ValidLoadingPlace = (value !== \"\");\r\n                Errors.LoadingPlace = ValidLoadingPlace ? \"\" : \"Loading place is required.\";\r\n                break;\r\n            case \"UnloadingPlace\":\r\n                ValidUnloadingPlace = (value !== \"\");\r\n                Errors.UnloadingPlace = ValidUnloadingPlace ? \"\" : \"Unloading place is required.\";\r\n                break;\r\n            case \"LoadingDate\":\r\n                ValidLoadingDate = (value !== \"\");\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date is required.\";\r\n\r\n                if (Errors.LoadingDate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidLoadingDate = (new Date(value) >= new Date());\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date must be later than yesterday.\";\r\n                break;\r\n            case \"LoadingTime\":\r\n                break;\r\n            case \"AcceptedDelay\":\r\n                ValidAcceptedDelay = (value !== \"\");\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay is required.\";\r\n\r\n                if (Errors.AcceptedDelay !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidAcceptedDelay = (value >= 0 && value <= 48);\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay can be in the range of 0 to 48 hours.\";\r\n                break;\r\n            case \"Price\":\r\n                ValidPrice = (value !== \"\");\r\n                Errors.Price = ValidPrice ? \"\" : \"Price is required.\";\r\n\r\n                if (Errors.Price !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPrice = (value > 0.00);\r\n                Errors.Price = ValidPrice ? \"\" : \"Price must be more than $0.00.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCargoType: ValidCargoType,\r\n            ValidCargoWeight: ValidCargoWeight,\r\n            ValidLoadingPlace: ValidLoadingPlace,\r\n            ValidUnloadingPlace: ValidUnloadingPlace,\r\n            ValidLoadingDate: ValidLoadingDate,\r\n            ValidLoadingTime: ValidLoadingTime,\r\n            ValidAcceptedDelay: ValidAcceptedDelay,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidCargoType &&\r\n                    this.state.ValidCargoWeight &&\r\n                    this.state.ValidLoadingPlace &&\r\n                    this.state.ValidUnloadingPlace &&\r\n                    this.state.ValidLoadingDate &&\r\n                    this.state.ValidLoadingTime &&\r\n                    this.state.AcceptedDelay &&\r\n                    this.state.ValidPrice\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedJobOffer = {\r\n            Token: localStorage.Token,\r\n            JobOfferID: this.state.JobOfferID,\r\n            TripType: this.state.TripType,\r\n            CargoType: this.state.CargoType,\r\n            CargoWeight: this.state.CargoWeight,\r\n            LoadingPlace: this.state.LoadingPlace,\r\n            UnloadingPlace: this.state.UnloadingPlace,\r\n            LoadingDate: this.state.LoadingDate,\r\n            LoadingTime: this.state.LoadingTime,\r\n            EntryExit: this.state.EntryExit,\r\n            Price: this.state.Price,\r\n            AcceptedDelay: this.state.AcceptedDelay,\r\n            JobOfferType: this.state.JobOfferType\r\n        };\r\n\r\n        console.log(\"Going to update Job offer.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateJobOffer(updatedJobOffer).then(response => {\r\n            if (response.Message === \"Job offer is updated.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div className=\"modal\" id={`edit-job-offer-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Edit Job Offer</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                                    alt=\"job_offfers.png\" src=\"./images/job_offers.png\" data-source-index=\"2\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Loading Place</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"LoadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.LoadingPlace} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.LoadingPlace}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Unloading Place</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"UnloadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.UnloadingPlace} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.UnloadingPlace}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Trip Type</label><br />\r\n                                                <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                    <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                        aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                        <span>{this.state.TripType}</span>\r\n                                                        <span className=\"caret\"></span>\r\n                                                    </button>\r\n                                                    <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                        <li><a onClick={() => { this.setState({ TripType: \"One Way\" }); }}>One Way</a></li>\r\n                                                        <li><a onClick={() => { this.setState({ TripType: \"Two Way\" }); }}>Two Way</a></li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Cargo Type</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"CargoType\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.CargoType} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.CargoType}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Cargo Weight (lbs)</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"CargoWeight\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.CargoWeight} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.CargoWeight}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Loading Date</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"date\" name=\"LoadingDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.LoadingDate} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.LoadingDate}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Loading Time</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"time\" name=\"LoadingTime\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.LoadingTime} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.LoadingTime}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Accepted Delay (Hours)</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"AcceptedDelay\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.AcceptedDelay} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.AcceptedDelay}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Price (USD)</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" min=\"0.00\" step=\"0.01\" max=\"100.00\" name=\"Price\"\r\n                                                    className=\"form-control\" autoComplete=\"off\" value={this.state.Price} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Price}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <button type=\"button\" data-toggle=\"button\" className={(this.state.JobOfferType === \"Auctionable\") ? \"btn btn-toggle-switch active\" : \"btn btn-toggle-switch\"}\r\n                                                    autocomplete=\"off\" aria-pressed={(this.state.JobOfferType === \"Auctionable\") ? \"true\" : \"false\"}\r\n                                                    onClick={() => {\r\n                                                        this.state.JobOfferType = (this.state.JobOfferType === \"Fixed-Price\") ?\r\n                                                            \"Auctionable\" : \"Fixed-Price\";\r\n                                                        this.validateField(\"\", \"\");\r\n                                                    }}>\r\n                                                    <span className=\"stateLabel stateLabel-on\">Auctionable Job Offer</span>\r\n                                                    <span className=\"stateLabel stateLabel-off\">Fixed-Price Job Offer</span>\r\n                                                </button>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"checkbox\">\r\n                                                    <label className=\"control-label\">\r\n                                                        <input type=\"checkbox\" name=\"EntryExit\" defaultChecked={(this.state.EntryExit === 1) ? \"checked\" : \"\"}\r\n                                                            value={this.state.EntryExit} onChange={() => {\r\n                                                                this.state.EntryExit = (this.state.EntryExit === 1) ? 0 : 1;\r\n                                                                this.validateField(\"\", \"\");\r\n                                                            }}></input>\r\n                                                        <span>Entry/Exit</span>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\"\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default EditJobOfferDialog;","import React, { Component } from \"react\";\r\nimport DriverRequestsTable from \"./DriverRequestsTable\";\r\nimport EditJobOfferDialog from \"./EditJobOfferDialog\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { deleteJobOffer } from \"../../../TraderFunctions\";\r\nimport JobOfferContainer from \"../../../../../containers/jobOffer/JobOfferContainer\";\r\n\r\nclass JobOfferPackageItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Preloader: null,\r\n            NumberOfRequests: 0\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async jobOfferID => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedJobOffer = {\r\n            Token: localStorage.Token,\r\n            JobOfferID: jobOfferID\r\n        };\r\n\r\n        console.log(`Going to delete Job offer...`);\r\n\r\n        await deleteJobOffer(discardedJobOffer).then(response => {\r\n            if (response.Message === \"Job offer is deleted.\") {\r\n                this.props.OnJobOfferUpdated();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const jobOffer = this.props.JobOfferPackage.JobOffer;\r\n        const hasDriverRequests = this.props.JobOfferPackage.HasDriverRequests;\r\n\r\n        return <section>\r\n            <JobOfferContainer Index={index} JobOffer={jobOffer} />\r\n\r\n            <div className=\"text-right p-xxs back-color-gray\">\r\n                <button type=\"button\" className=\"btn btn-default\"\r\n                    data-toggle=\"modal\"\r\n                    disabled={hasDriverRequests}\r\n                    data-target={`#edit-job-offer-dialog-${index}`}>Edit</button>\r\n                <button className=\"btn btn-danger\" onClick={async () => { await this.onDelete(jobOffer.JobOfferID); }}>Delete</button>\r\n            </div>\r\n\r\n            <EditJobOfferDialog\r\n                DialogID={index}\r\n                JobOffer={jobOffer}\r\n                CanEdit={() => { return (this.state.NumberOfRequests === 0) ? true : false }}\r\n                OnOK={() => { this.props.OnJobOfferUpdated(); }} />\r\n\r\n            <div data-toggle=\"collapse\" aria-expanded=\"false\"\r\n                data-target={`#job-offer-package-${index}`}\r\n                onMouseDown={async () => { await this.RefreshDriverRequestsTable(); }}>\r\n\r\n                <div className=\"type-h4 text-right color-default p-xxs\">\r\n                    <span class=\"badge back-color-danger m-r-xxxs\">{this.state.NumberOfRequests}</span>\r\n                    {(jobOffer.JobOfferType === \"Fixed-Price\") ? \"Driver Requests\" : \"Driver Bids\"}\r\n                    <i className=\"fas fa-ellipsis-v\"></i>\r\n                    <i class=\"glyph glyph-add\"></i>\r\n                    <i class=\"glyph glyph-remove\"></i>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`job-offer-package-${index}`}>\r\n\r\n                <DriverRequestsTable\r\n                    Refresh={refresh => { this.RefreshDriverRequestsTable = refresh; }}\r\n                    OnRequestsFound={number => {\r\n                        this.setState({\r\n                            NumberOfRequests: number\r\n                        });\r\n                    }}\r\n                    JobOfferID={jobOffer.JobOfferID}\r\n                    JobOfferType={jobOffer.JobOfferType}\r\n                    Price={jobOffer.Price}\r\n                    TraderOnJob={this.props.TraderOnJob}\r\n                    OnJobAssigned={this.props.OnJobOfferUpdated} />\r\n\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            </div>\r\n\r\n            {this.state.Preloader}\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobOfferPackageItem;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { addJobOffer } from \"../../../TraderFunctions.js\";\r\n\r\nclass AddJobOfferDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LoadingPlace: \"\",\r\n            UnloadingPlace: \"\",\r\n            TripType: \"One Way\",\r\n            CargoType: \"\",\r\n            CargoWeight: 0,          \r\n            LoadingDate: new Date(),\r\n            LoadingTime: new Date().getTime(),\r\n            AcceptedDelay: 0,\r\n            Price: 0.00,\r\n            JobOfferType: \"Fixed-Price\",\r\n            EntryExit: 0,\r\n\r\n            ValidCargoType: false,\r\n            ValidCargoWeight: false,\r\n            ValidLoadingPlace: false,\r\n            ValidUnloadingPlace: false,\r\n            ValidLoadingDate: false,\r\n            ValidLoadingTime: false,\r\n            ValidAcceptedDelay: false,\r\n            ValidPrice: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                CargoType: \"\",\r\n                CargoWeight: \"\",\r\n                LoadingPlace: \"\",\r\n                UnloadingPlace: \"\",\r\n                LoadingDate: \"\",\r\n                LoadingTime: \"\",\r\n                AcceptedDelay: \"\",\r\n                Price: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        if (name === \"EntryExit\" ||\r\n            name === \"JobOfferType\") {\r\n            console.log(`Value of ${name} is ${value}`);\r\n        }\r\n        \r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCargoType = this.state.ValidCargoType;\r\n        let ValidCargoWeight = this.state.ValidCargoWeight;\r\n        let ValidLoadingPlace = this.state.ValidLoadingPlace;\r\n        let ValidUnloadingPlace = this.state.ValidUnloadingPlace;\r\n        let ValidLoadingDate = this.state.ValidLoadingDate;\r\n        let ValidLoadingTime = this.state.ValidLoadingTime;\r\n        let ValidAcceptedDelay = this.state.ValidAcceptedDelay;\r\n        let ValidPrice = this.state.ValidPrice;\r\n\r\n        switch (field) {\r\n            case \"CargoType\":\r\n                ValidCargoType = (value !== \"\");\r\n                Errors.CargoType = ValidCargoType ? \"\" : \"Cargo type is required.\";\r\n                break;\r\n            case \"CargoWeight\":\r\n                ValidCargoWeight = (value !== \"\");\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight is required.\"; \r\n\r\n                if (Errors.CargoWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCargoWeight = (value >= 100);\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight must be greater than 100 lbs.\";\r\n                break;\r\n            case \"LoadingPlace\":\r\n                ValidLoadingPlace = (value !== \"\");\r\n                Errors.LoadingPlace = ValidLoadingPlace ? \"\" : \"Loading place is required.\";\r\n                break;\r\n            case \"UnloadingPlace\":\r\n                ValidUnloadingPlace = (value !== \"\");\r\n                Errors.UnloadingPlace = ValidUnloadingPlace ? \"\" : \"Unloading place is required.\";\r\n                break;\r\n            case \"LoadingDate\":\r\n                ValidLoadingDate = (value !== \"\");\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date is required.\";\r\n\r\n                if (Errors.LoadingDate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidLoadingDate = (new Date(value) >= new Date());\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date must be later than yesterday.\";\r\n                break;\r\n            case \"LoadingTime\":\r\n                ValidLoadingTime = (value !== \"\");\r\n                Errors.LoadingTime = ValidLoadingTime ? \"\" : \"Loading time is required.\";\r\n                break;\r\n            case \"AcceptedDelay\":\r\n                ValidAcceptedDelay = (value !== \"\");\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay is required.\";\r\n\r\n                if (Errors.AcceptedDelay !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidAcceptedDelay = (value >= 0 && value <= 48);\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay can be in the range of 0 to 48 hours.\";\r\n                break;\r\n            case \"Price\":\r\n                ValidPrice = (value !== \"\");\r\n                Errors.Price = ValidPrice ? \"\" : \"Price is required.\";\r\n\r\n                if (Errors.Price !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPrice = (value > 0.00);\r\n                Errors.Price = ValidPrice ? \"\" : \"Price must be more than $0.00.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCargoType: ValidCargoType,\r\n            ValidCargoWeight: ValidCargoWeight,\r\n            ValidLoadingPlace: ValidLoadingPlace,\r\n            ValidUnloadingPlace: ValidUnloadingPlace,\r\n            ValidLoadingDate: ValidLoadingDate,\r\n            ValidLoadingTime: ValidLoadingTime,\r\n            ValidAcceptedDelay: ValidAcceptedDelay,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidCargoType &&\r\n                        this.state.ValidCargoWeight &&\r\n                        this.state.ValidLoadingPlace &&\r\n                        this.state.ValidUnloadingPlace &&\r\n                        this.state.ValidLoadingDate &&\r\n                        this.state.ValidLoadingTime &&\r\n                        this.state.AcceptedDelay &&\r\n                        this.state.ValidPrice\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newJobOffer = {\r\n            Token: localStorage.Token,\r\n            TripType: this.state.TripType,\r\n            CargoType: this.state.CargoType,\r\n            CargoWeight: this.state.CargoWeight,\r\n            LoadingPlace: this.state.LoadingPlace,\r\n            UnloadingPlace: this.state.UnloadingPlace,\r\n            LoadingDate: this.state.LoadingDate,\r\n            LoadingTime: this.state.LoadingTime,\r\n            EntryExit: this.state.EntryExit,\r\n            Price: this.state.Price,\r\n            AcceptedDelay: this.state.AcceptedDelay,\r\n            JobOfferType: this.state.JobOfferType\r\n        };\r\n\r\n        console.log(\"Going to add Job offer.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addJobOffer(newJobOffer).then(response => {\r\n            if (response.Message === \"Job offer is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div className=\"modal\" id=\"add-job-offer-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Add Job Offer</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                                        alt=\"job_offfers.png\" src=\"./images/job_offers.png\" data-source-index=\"2\" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Place</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"LoadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LoadingPlace} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LoadingPlace}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Unloading Place</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"UnloadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.UnloadingPlace} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.UnloadingPlace}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Trip Type</label><br />\r\n                                                    <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                        <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                            <span>{this.state.TripType}</span>\r\n                                                            <span className=\"caret\"></span>\r\n                                                        </button>\r\n                                                        <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                            <li><a onClick={() => { this.setState({ TripType: \"One Way\" }); }}>One Way</a></li>\r\n                                                            <li><a onClick={() => { this.setState({ TripType: \"Two Way\" }); }}>Two Way</a></li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Cargo Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"CargoType\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.CargoType} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.CargoType}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Cargo Weight (lbs)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"CargoWeight\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.CargoWeight} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.CargoWeight}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Date</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"LoadingDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LoadingDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LoadingDate}</span>\r\n                                                </div>                                   \r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Time</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"time\" name=\"LoadingTime\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LoadingTime} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LoadingTime}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Accepted Delay (Hours)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"AcceptedDelay\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.AcceptedDelay} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.AcceptedDelay}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Price (USD)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" min=\"0.00\" step=\"0.01\" max=\"100.00\" name=\"Price\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={this.state.Price} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Price}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <button type=\"button\" data-toggle=\"button\" className=\"btn btn-toggle-switch\"\r\n                                                        autocomplete=\"off\" aria-pressed=\"false\"\r\n                                                        onClick={() => {\r\n                                                            this.state.JobOfferType = (this.state.JobOfferType === \"Fixed-Price\") ?\r\n                                                                \"Auctionable\" : \"Fixed-Price\";\r\n                                                        }}>\r\n                                                        <span className=\"stateLabel stateLabel-on\">Auctionable Job Offer</span>\r\n                                                        <span className=\"stateLabel stateLabel-off\">Fixed-Price Job Offer</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"checkbox\">\r\n                                                        <label className=\"control-label\">\r\n                                                            <input type=\"checkbox\" name=\"EntryExit\"\r\n                                                                value={this.state.EntryExit} onChange={() => {\r\n                                                                    this.state.EntryExit = this.state.EntryExit ? 0 : 1;\r\n                                                                }}></input>\r\n                                                            <span>Entry/Exit</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>   \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\"\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddJobOfferDialog;","import React, { Component } from \"react\";\r\nimport { getData } from \"../../../TraderFunctions\";\r\nimport JobOfferPackageItem from \"./JobOfferPackageItem\";\r\nimport AddJobOfferDialog from \"./AddJobOfferDialog\";\r\nimport ProgressBar from \"../../../../../controls/ProgressBar\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\n\r\nclass JobOffersList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllJobOfferPackages: [],\r\n            JobOfferPackages: [],\r\n            TraderOnJob: false,\r\n            SearchString: \"\",\r\n            Searching: null,\r\n            Refreshing: false,\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobOfferPackages\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job offer packages found.\") {\r\n                    this.setState({\r\n                        AllJobOfferPackages: response.JobOfferPackages,\r\n                        JobOfferPackages: response.JobOfferPackages,\r\n                        TraderOnJob: response.TraderOnJob,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllJobOfferPackages: [],\r\n                        JobOfferPackages: [],\r\n                        TraderOnJob: false,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobOfferPackages\"\r\n            };\r\n\r\n            this.setState({\r\n                Refreshing: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job offer packages found.\") {\r\n                    this.setState({\r\n                        AllJobOfferPackages: response.JobOfferPackages,\r\n                        JobOfferPackages: response.JobOfferPackages,\r\n                        TraderOnJob: response.TraderOnJob,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllJobOfferPackages: [],\r\n                        JobOfferPackages: [],\r\n                        TraderOnJob: false,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.SearchString === \"\") {\r\n            this.setState({\r\n                JobOfferPackages: this.state.AllJobOfferPackages\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allJobOfferPackages = this.state.AllJobOfferPackages;\r\n        let filteredJobOfferPackages = [];\r\n        let count = 0;\r\n\r\n        for (let jobOfferPackage of allJobOfferPackages) {\r\n            let jobOffer = jobOfferPackage.JobOffer;\r\n\r\n            if (jobOffer.LoadingPlace.includes(this.state.SearchString) ||\r\n                jobOffer.UnloadingPlace.includes(this.state.SearchString)) {\r\n                filteredJobOfferPackages[count++] = jobOfferPackage;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            JobOfferPackages: filteredJobOfferPackages\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const jobOfferPackages = this.state.JobOfferPackages;\r\n        return <section>\r\n            {this.state.TraderOnJob ?\r\n                <div class=\"alert alert-danger m-n\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xs-24\">\r\n                                <p><span className=\"fas fa-exclamation-circle m-r-xxxs\"></span>While you are engaged in an On-Going Job, you cannot assign more jobs to drivers. View details in <span className=\"color-default\">On-Going Job</span> tab.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> :\r\n                null}\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-hand-holding-usd\"></span>   Job Offers</div>\r\n                            <p className=\"color-light\">Hi There! Want to transport your freight somewhere? Why not create a new job offer now!</p>\r\n                            <div className=\"btn-group\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-primary\"\r\n                                    data-toggle=\"modal\"\r\n                                    data-target=\"#add-job-offer-dialog\">New Job Offer</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <AddJobOfferDialog\r\n                OnOK={() => {\r\n                    this.onComponentUpdated();\r\n                }} />\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Your Job Offers\r\n                    {this.state.Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search by Places\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={this.state.SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            {(jobOfferPackages.length === 0) ?\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            {this.state.Searching ? <div className=\"col-md-24 text-center\">\r\n                                <div>\r\n                                    <div className=\"type-h3\" style={{ color: \"#008575\" }}>Searching</div>\r\n                                    <ProgressBar />\r\n                                </div>\r\n                            </div> : <div className=\"col-md-24 text-center\">\r\n                                    <h3><span className=\"fas fa-exclamation-triangle\" style={{ color: \"#FFBF15\" }}></span> No job offers found.</h3>\r\n                                </div>}\r\n                        </div>\r\n                    </div>\r\n                </div> : <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {jobOfferPackages.map((jobOfferPackage, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <JobOfferPackageItem Index={index}\r\n                                JobOfferPackage={jobOfferPackage}\r\n                                OnJobOfferUpdated={this.onComponentUpdated}\r\n                                TraderOnJob={this.state.TraderOnJob} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n            \r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobOffersList;","import React, { Component } from \"react\";\r\nimport JobOffersList from \"./JobOffersList.js\";\r\n\r\nclass JobOffers extends Component {\r\n    render() {\r\n        return <section>\r\n            <JobOffersList Refresh={this.props.Refresh} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobOffers;","import React, { Component } from \"react\";\r\nimport JobContainer from \"../../../../../containers/onGoingJob/JobContainer\";\r\n\r\nclass Job extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const onGoingJob = this.props.OnGoingJob;\r\n        const hasObjections = this.props.HasObjections;\r\n\r\n        let loadingDate = new Date(onGoingJob.LoadingDate);\r\n        loadingDate.setHours((parseInt(onGoingJob.LoadingTime.substring(0, 2))));\r\n        loadingDate.setMinutes(parseInt(onGoingJob.LoadingTime.substring(3, 5)));\r\n        loadingDate.setSeconds(parseInt(onGoingJob.LoadingTime.substring(6)));\r\n\r\n        let JumbotronContent;\r\n\r\n        if (onGoingJob.CompletedByDriver) {\r\n            JumbotronContent = <section>\r\n                <h3><span className=\"fas fa-smile p-r-xxxs\"></span>Driver has Completed the Job</h3>\r\n                <div class=\"type-sh3\">Your Approval is Still Required</div>\r\n            </section>;\r\n        }\r\n        else if (hasObjections) {\r\n            JumbotronContent = <h3><span className=\"fas fa-exclamation p-r-xxxs\"></span>This Job is Terminated.</h3>;\r\n        }\r\n        else {\r\n            let dateDifference = loadingDate - new Date();\r\n            const days = Math.floor(dateDifference / 86400000);\r\n            const hours = Math.floor((dateDifference % 86400000) / 3600000);\r\n            const minutes = Math.round(((dateDifference % 86400000) % 3600000) / 60000);\r\n\r\n            let dayString = (days > 0) ? `${days} Days ` : \"\";\r\n            let hourString = (hours > 0) ? `${hours} Hours ` : \"\";\r\n            let minuteString = (minutes > 0) ? `${minutes} Minutes ` : \"\";\r\n\r\n            let remainingTime = `${dayString}${hourString}${minuteString} Left for Your Driver to Arrive`;\r\n\r\n            if (dateDifference < 0) {\r\n                remainingTime = \"Loading Time has Passed\";\r\n            }\r\n\r\n            JumbotronContent = <section>\r\n                <h3><span className=\"fas fa-clock\"></span>   {remainingTime}</h3>\r\n                <div class=\"type-sh3\">\r\n                    <span className=\"fas fa-tag m-r-xxs\"></span>{`This Job Costs You $${onGoingJob.Price}.`}</div>\r\n                <div class=\"col-md-12 col-md-offset-6\">\r\n                    <div class=\"type-p3\">{(onGoingJob.AcceptedDelay > 0) ?\r\n                        <span>\r\n                            <span className=\"fas fa-leaf m-r-xxxs\"></span>\r\n                            <span>{`The Driver has a relaxation of ${onGoingJob.AcceptedDelay} Hours.`}</span>\r\n                        </span> :\r\n                        <span>{\"Hoping for the driver to be on time.\"}</span>}\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n\r\n        return <section>\r\n            <div class=\"jumbotron theme-dark\" style={{ background: \"linear-gradient(to right bottom, #008575, #005162)\" }}>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-24 text-center\">\r\n                            {JumbotronContent}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <JobContainer OnGoingJob={onGoingJob} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Job;","import React, { Component } from \"react\";\r\nimport Map from \"../../../../../controls/Map\";\r\n\r\nclass MapTab extends Component {\r\n    render() {\r\n        return <section>\r\n            <div>\r\n                <Map />\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default MapTab;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\nimport { getData, addObjectionReason } from \"../../../../TraderFunctions\";\r\n\r\nclass ReasonsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ObjectionReasons: [],\r\n            AddPressed: false,\r\n            NewReason: \"\",\r\n            ValidNewReason: false,\r\n\r\n            ValidForm: false,\r\n            ProgressRing: null,\r\n\r\n            Errors: {\r\n                NewReason: \"0\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"ObjectionReasons\"\r\n            };\r\n\r\n            this.setState({\r\n                ProgressRing: <ProgressRing />\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Objection reasons found.\") {\r\n                    this.setState({\r\n                        ObjectionReasons: response.ObjectionReasons,\r\n                        ProgressRing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        ObjectionReasons: [],\r\n                        ProgressRing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewReason = this.state.ValidNewReason;\r\n\r\n        switch (field) {\r\n            case \"NewReason\":\r\n                ValidNewReason = (value.length > 0 && value.length <= 50);\r\n                Errors.NewReason = ValidNewReason ? value.length : \"Too long...\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewReason: ValidNewReason\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidNewReason\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ProgressRing: <ProgressRing />\r\n        });\r\n\r\n        const newObjectionReason = {\r\n            Token: localStorage.Token,\r\n            Reason: this.state.NewReason\r\n        };\r\n\r\n        console.log(\"Going to add Objection reason...\");\r\n\r\n        await addObjectionReason(newObjectionReason).then(response => {\r\n            if (response.Message === \"Objection reason is added.\") {\r\n                let objectionReasons = this.state.ObjectionReasons;\r\n                let errors = this.state.Errors;\r\n\r\n                objectionReasons.push(response.ObjectionReason);\r\n                errors.NewReason = \"0\";\r\n\r\n                this.setState({\r\n                    AddPressed: false,\r\n                    ObjectionReasons: objectionReasons,\r\n                    Errors: errors,\r\n                    NewReason: \"\"\r\n                });\r\n            }\r\n\r\n            this.setState({\r\n                ProgressRing: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const objectionReasons = this.state.ObjectionReasons;\r\n\r\n        return <section>\r\n            {this.state.ProgressRing}\r\n            <div class=\"entity-list entity-list-expandable\">\r\n                <div class=\"entity-list entity-list-add-item-button\">\r\n                    <a class={this.state.AddPressed ? \"entity-list-item active\" : \"entity-list-item\"}>\r\n                        <div class=\"item-icon\" onClick={() => {\r\n                            this.state.AddPressed ?\r\n                                this.setState({ AddPressed: false }) :\r\n                                this.setState({ AddPressed: true });\r\n                        }}>\r\n                            <span class=\"glyph glyph-add\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Add a Reason</div>\r\n                            <div class=\"content-text-secondary\" style={(this.state.Errors.NewReason === \"Too long...\") ? { color: \"#D75A4A\" } : null}>{this.state.Errors.NewReason}</div>\r\n                        </div>\r\n                        <div class=\"item-content-expanded\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <input type=\"text\" className=\"form-control\" name=\"NewReason\" autocomplete=\"off\"\r\n                                    value={this.state.NewReason} onChange={this.onChange} />\r\n                                <input type=\"submit\" value=\"Add\" className=\"btn btn-secondary\" disabled={!this.state.ValidForm} />\r\n                            </form>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                {objectionReasons.map((objectionReason, index) => {\r\n                    return <div key={index} class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-thumbs-down\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <button type=\"button\" class=\"btn btn-secondary\" style={{ margin: \"0px\", minWidth: \"0px\" }}\r\n                                onClick={() => { this.props.OnReasonSelected(objectionReason.Reason); }}>Select</button>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">{`${index + 1}.`}</div>\r\n                            <div class=\"content-text-secondary\">{objectionReason.Reason}</div>\r\n                        </div>\r\n                    </div>;\r\n                })}\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ReasonsList;","import React, { Component } from \"react\";\r\nimport ReasonsList from \"./ReasonsList\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { addJobObjection } from \"../../../../TraderFunctions\";\r\n\r\nclass AddObjectionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Reason: \"Select from the list.\",\r\n            Comment: \"\",\r\n\r\n            ValidReason: false,\r\n            ValidComment: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                Comment: \"0\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidComment = this.state.ValidComment;\r\n\r\n        switch (field) {\r\n            case \"Comment\":\r\n                ValidComment = (value !== \"\");\r\n                Errors.Comment = ValidComment ? \"\" : \"Comment is required\";\r\n\r\n                if (Errors.Comment !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidComment = (value.length <= 200);\r\n                Errors.Comment = ValidComment ? value.length : \"Too long...\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidComment: ValidComment\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidReason && this.state.ValidComment\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const newJobObjection = {\r\n            Token: localStorage.Token,\r\n            OnGoingJobID: this.props.OnGoingJobID,\r\n            Reason: this.state.Reason,\r\n            Comment: this.state.Comment\r\n        };\r\n\r\n        console.log(\"Going to add job objection...\");\r\n\r\n        await addJobObjection(newJobObjection).then(response => {\r\n            if (response.Message === \"Job objection is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"add-objection-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}\r\n                                    style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Add an Objection</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label>Reason</label>\r\n                                    <input type=\"text\" class=\"form-control\" name=\"Reason\" style={{ maxWidth: \"100%\" }} readonly\r\n                                        value={this.state.Reason} />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label>Comment</label>\r\n                                    <textarea rows=\"4\" class=\"form-control\" style={{ maxWidth: \"100%\" }} name=\"Comment\"\r\n                                        value={this.state.Comment} onChange={this.onChange}></textarea>\r\n                                    <span className=\"text-danger\">{this.state.Errors.Comment}</span>\r\n                                </div>\r\n                                <div style={{ textAlign: \"right\" }}>\r\n                                    <input type=\"submit\" value=\"Add Objection\" className=\"btn btn-primary\" style={{ margin: \"0px\" }} disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                            <br/>\r\n                            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                            <div className=\"type-h4\" style={{ color: \"#008575\", padding: \"10px\", textAlign: \"right\" }}>{\"   Reasons\"}\r\n                                <i className=\"fas fa-ellipsis-v\"></i>\r\n                            </div>\r\n                            <ReasonsList ObjectionReasons={this.props.ObjectionReasons} OnReasonSelected={reason => {\r\n                                this.setState({\r\n                                    Reason: reason,\r\n                                    ValidReason: true\r\n                                }, () => {\r\n                                    this.setState({\r\n                                        ValidForm: this.state.ValidReason && this.state.ValidComment\r\n                                    });\r\n                                });\r\n                            }} />                           \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddObjectionDialog;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport AddObjectionDialog from \"./AddObjectionDialog\";\r\nimport { getData } from \"../../../../TraderFunctions\";\r\nimport JobObjectionContainer from \"../../../../../../containers/onGoingJob/JobObjectionContainer\";\r\n\r\nclass Objections extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobObjectionPackages: [],\r\n            Searching: false,\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobObjectionPackages\",\r\n                Params: {\r\n                    OnGoingJobID: this.props.OnGoingJobID\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job objection packages found.\") {\r\n                    this.setState({\r\n                        JobObjectionPackages: response.JobObjectionPackages,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobObjectionPackages: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobObjectionPackages\",\r\n                Params: {\r\n                    OnGoingJobID: this.props.OnGoingJobID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job objection packages found.\") {\r\n                    this.setState({\r\n                        JobObjectionPackages: response.JobObjectionPackages\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobObjectionPackages: []\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const jobObjectionPackages = this.state.JobObjectionPackages;\r\n\r\n        return <section>\r\n            <div class=\"page-header back-color-gradient\">\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-thumbs-down m-r-xxs\"></span>Job Objections</div>\r\n                            <p className=\"color-light\">Objections on this job, either by you or your driver, will terminate the job.</p>\r\n                            <div className=\"btn-group\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-primary\"\r\n                                    data-toggle=\"modal\"\r\n                                    data-target=\"#add-objection-dialog\">Add Objection</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <AddObjectionDialog OnGoingJobID={this.props.OnGoingJobID}\r\n                OnOK={async () => { await this.onComponentUpdated() }} />\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Job Objections</div>\r\n            {(jobObjectionPackages.length === 0) ?\r\n                <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor=\"job objctions\" /> : <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {jobObjectionPackages.map((jobObjectionPackage, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <JobObjectionContainer Index={index}\r\n                                JobObjectionPackage={jobObjectionPackage} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default Objections;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { approveJob } from \"../../../TraderFunctions\";\r\n\r\nclass ApproveJobDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false\r\n        };\r\n\r\n        this.onApprove = this.onApprove.bind(this);\r\n    }\r\n\r\n    onApprove = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const approvedJob = {\r\n            Token: localStorage.Token,\r\n        }\r\n\r\n        console.log(\"Going to approve the job...\");\r\n\r\n        await approveJob(approvedJob).then(response => {\r\n            if (response.Message === \"Job is approved.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n                return;\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"approve-job-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}\r\n                                    style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div class=\"jumbotron\">\r\n                                <div class=\"container\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-24\">\r\n                                            <img alt=\"stamp.png\" src=\"./images/stamp.png\" height=\"100\" />\r\n                                            <div class=\"type-h3\">Approve Completion</div>\r\n                                            <div class=\"type-sh3\">Your driver has finished the job. We hope your cargo is delivered.</div>\r\n                                            <p><span class=\"color-default\">Note:</span> After approving completion, you can view this job in your <span class=\"color-default\">Completed Jobs</span> tab. You can also rate and review this driver from there. You have to pay the bill from the <span class=\"color-default\">Payments</span> section.</p>\r\n                                            <div class=\"text-right\">\r\n                                                <button class=\"btn btn-primary\" onClick={this.onApprove}>Approve</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ApproveJobDialog;","import React, { Component } from \"react\";\r\n\r\nclass InteractiveRating extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Rating: 0\r\n        };\r\n\r\n        this.onRate = this.onRate.bind(this);\r\n    }\r\n\r\n    onRate = rating => {\r\n        this.props.OnRated(rating);\r\n\r\n        this.setState({\r\n            Rating: rating\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return <section>\r\n            <div class=\"rating\">\r\n                <div class=\"rating-stars\">\r\n                    <ul class=\"rating-stars-background\">\r\n                        <li><i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li>\r\n                    </ul>\r\n                    <ul class=\"rating-stars-value\" style={{ width: `${this.state.Rating}%` }}>\r\n                        <li><i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li>\r\n                    </ul>\r\n                    <div class=\"rating-stars-input\">\r\n                        <button class=\"rating-btn\" title=\"1\" onClick={() => { this.onRate(20); }}><i class=\"glyph glyph-star\"></i></button>\r\n                        <button class=\"rating-btn\" title=\"2\" onClick={() => { this.onRate(40); }}><i class=\"glyph glyph-star\"></i></button>\r\n                        <button class=\"rating-btn\" title=\"3\" onClick={() => { this.onRate(60); }}><i class=\"glyph glyph-star\"></i></button>\r\n                        <button class=\"rating-btn\" title=\"4\" onClick={() => { this.onRate(80); }}><i class=\"glyph glyph-star\"></i></button>\r\n                        <button class=\"rating-btn\" title=\"5\" onClick={() => { this.onRate(100); }}><i class=\"glyph glyph-star\"></i></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default InteractiveRating;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport InteractiveRating from \"../../../../../controls/InteractiveRating\";\r\nimport { addDriverReviewFromOnGoingJob } from \"../../../TraderFunctions\";\r\n\r\nclass ReviewDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Rating: 0,\r\n            Review: \"\",\r\n\r\n            ValidRating: false,\r\n            ValidReview: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Review: \"0\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidReview = this.state.ValidReview;\r\n\r\n        switch (field) {\r\n            case \"Review\":\r\n                ValidReview = (value !== \"\");\r\n                Errors.Review = ValidReview ? \"\" : \"Review is required\";\r\n\r\n                if (Errors.Review !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidReview = (value.length <= 200);\r\n                Errors.Review = ValidReview ? value.length : \"Too long...\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidReview: ValidReview\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidRating && this.state.ValidReview\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newDriverReview = {\r\n            Token: localStorage.Token,\r\n            OnGoingJobID: this.props.OnGoingJobID,\r\n            Rating: this.state.Rating,\r\n            Review: this.state.Review\r\n        };\r\n\r\n        console.log(\"Going to add driver review...\");\r\n\r\n        await addDriverReviewFromOnGoingJob(newDriverReview).then(response => {\r\n            if (response.Message === \"Driver review is added.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"review-dialog-from-on-going-job\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}\r\n                                    style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h3 color-default p-t-n\">Rate and Review</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label>Rate this Driver</label>\r\n                                    <InteractiveRating OnRated={rating => {\r\n                                        this.setState({\r\n                                            Rating: rating,\r\n                                            ValidRating: true\r\n                                        }, () => {\r\n                                            this.setState({\r\n                                                ValidForm: this.state.ValidRating && this.state.ValidReview\r\n                                            });\r\n                                        });\r\n                                    }} />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label>Review</label>\r\n                                    <textarea rows=\"6\" class=\"form-control\" name=\"Review\" style={{ maxWidth: \"100%\" }}\r\n                                        value={this.state.Review} onChange={this.onChange}></textarea>\r\n                                    <span className={(this.state.Errors.Review === \"Too long...\" ||\r\n                                        this.state.Errors.Review === \"Review is required\") ? \"text-danger\" : \"text-accent\"}>{this.state.Errors.Review}</span>\r\n                                </div>\r\n                                <div className=\"text-right\">\r\n                                    <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary m-n\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>                        \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ReviewDialog;","/// <reference path=\".js\" />\r\nimport React, { Component } from \"react\";\r\nimport ApproveJobDialog from \"./ApproveJobDialog\";\r\nimport ReviewDialog from \"./ReviewDialog\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { deleteOnGoingJob } from \"../../../TraderFunctions\";\r\n\r\nclass OnGoingJobOptions extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DriverRated: this.props.DriverRated,\r\n            ShowPreloader: false\r\n        };\r\n\r\n        this.onDiscard = this.onDiscard.bind(this);\r\n    }\r\n\r\n    onDiscard = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const discardedOnGoingJob = {\r\n            Token: localStorage.Token,\r\n            OnGoingJobID: this.props.OnGoingJobID\r\n        }\r\n\r\n        console.log(\"Going to discard the job...\");\r\n\r\n        await deleteOnGoingJob(discardedOnGoingJob).then(async response => {\r\n            if (response.Message === \"On-going job deleted.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                await this.props.OnJobRemoved();\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const hasObjections = this.props.HasObjections;\r\n        const completedByDriver = this.props.CompletedByDriver;\r\n        const completedByTrader = this.props.CompletedByTrader;\r\n        const onGoingJobID = this.props.OnGoingJobID;\r\n        const driverRated = this.state.DriverRated;\r\n        const showPreloader = this.state.ShowPreloader;\r\n\r\n        console.log(`DRIVER RATED: ${driverRated}`);\r\n\r\n        return hasObjections ?\r\n            <section>\r\n                {showPreloader ? <Preloader /> : null}\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"col-md-24\">\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Discard the Job?\r\n                                {driverRated ? <span class=\"badge back-color-danger m-l-xxs\">DRIVER IS RATED</span> : null}</div>\r\n                            <div className=\"type-sh4\">{driverRated ?\r\n                                \"This cannot be undone! All job details will be removed. Are you sure you want to discard the job?\" :\r\n                                \"This cannot be undone! All job details will be removed. If you have found the driver to be problematic, you can leave a review. Are you sure you want to discard the job?\"}</div>\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                            {driverRated ? \r\n                                null :\r\n                                <button className=\"btn btn-secondary\"\r\n                                    data-toggle=\"modal\"\r\n                                    data-target=\"#review-dialog-from-on-going-job\">Rate Driver</button>}\r\n                            <button className=\"btn btn-danger\" onClick={this.onDiscard}>Discard</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {driverRated ?\r\n                    null :\r\n                    <ReviewDialog OnGoingJobID={onGoingJobID}\r\n                        OnOK={() => {\r\n                            this.setState({\r\n                                DriverRated: true\r\n                            });\r\n                        }} />}\r\n            </section> :\r\n            <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"col-md-24\">\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Job Completion Status</div>\r\n                            <div className=\"type-sh4\">You'll be able to approve this job after your driver completes the job.</div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-24\">\r\n                                <div className=\"entity-list theme-alt\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-certificate\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Completed By Driver?</div>\r\n                                            <div className=\"content-text-secondary\">{completedByDriver ?\r\n                                                <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-certificate\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Approved By You?</div>\r\n                                            <div className=\"content-text-secondary\">{completedByTrader ?\r\n                                                <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                            {completedByDriver ? <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#approve-job-dialog\">Approve</button> : null}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ApproveJobDialog OnOK={this.props.OnJobRemoved} />\r\n            </section>;\r\n             \r\n    }\r\n};\r\n\r\nexport default OnGoingJobOptions;","import React, { Component } from \"react\";\r\nimport { getData } from \"../../../TraderFunctions\";\r\nimport ProgressBar from \"../../../../../controls/ProgressBar\";\r\nimport Job from \"./Job\";\r\nimport DriverContainer from \"../../../../../containers/driver/DriverContainer\";\r\nimport TruckContainer from \"../../../../../containers/truck/TruckContainer\";\r\nimport MapTab from \"./MapTab\";\r\nimport Objections from \"./objections/Objections\";\r\nimport OnGoingJobOptions from \"./OnGoingJobOptions\";\r\n\r\nclass OnGoingJob extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            OnGoingJob: null,\r\n            HasObjections: false,\r\n            Loading: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"OnGoingJob\"\r\n            };\r\n\r\n            this.setState({\r\n                Loading: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"On-going job found.\") {\r\n                    this.setState({\r\n                        OnGoingJob: response.OnGoingJob,\r\n                        HasObjections: response.HasObjections,\r\n                        Loading: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        OnGoingJob: null,\r\n                        HasObjections: false,\r\n                        Loading: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"OnGoingJob\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"On-going job found.\") {\r\n                    console.log(\"ON-GOING JOB\");\r\n                    console.log(response.OnGoingJob);\r\n\r\n                    this.setState({\r\n                        OnGoingJob: response.OnGoingJob,\r\n                        HasObjections: response.HasObjections\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        OnGoingJob: null,\r\n                        HasObjections: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Loading || !this.state.OnGoingJob) {\r\n            return <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#202020\" }}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                alt=\"on_going_jobs.png\" src=\"./images/on_going_jobs.png\" data-source-index=\"2\" />\r\n                        </div>\r\n                        <div className=\"col-md-12 col-md-pull-12\">\r\n                            <div className=\"type-h3\">On-Going Job</div>\r\n                            {this.state.Loading ?\r\n                                <div>\r\n                                    <div class=\"type-sh3\" style={{ color: \"#008575\" }}>Searhcing</div>\r\n                                    <ProgressBar />\r\n                                </div> :\r\n                                <div className=\"type-sh3\">Couldn't Find Your Job...</div>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n        }\r\n        else {\r\n            const onGoingJob = this.state.OnGoingJob;\r\n            const hasObjections = this.state.HasObjections;\r\n\r\n            return <section>\r\n                {hasObjections ?\r\n                    <div class=\"alert alert-danger m-n\">\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xs-24\">\r\n                                    <p><span className=\"fas fa-exclamation-circle m-r-xxxs\"></span>This job has objections, and it cannot be finished now. You can still discard it. For more information, please tap on <span className=\"color-default\">Objections</span> tab.</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div> :\r\n                    null}\r\n                <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                    <li role=\"presentation\" className=\"active\">\r\n                        <a href=\"#job-tab\" aria-controls=\"job-tab\" role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={this.refresh}>Job</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#driver-tab\" aria-controls=\"driver-tab\" role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={async () => { await this.RefreshDriverContainer(); }}>Driver</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#truck-tab\" aria-controls=\"truck-tab\" role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={async () => { await this.RefreshTruckContainer(); }}>Truck</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#map-tab\" aria-controls=\"map-tab\" role=\"tab\" data-toggle=\"tab\">Map</a>\r\n                    </li>\r\n                    {onGoingJob.CompletedByDriver ?\r\n                        null :\r\n                        <li role=\"presentation\">\r\n                            <a href=\"#objections-tab\" aria-controls=\"objections-tab\" role=\"tab\" data-toggle=\"tab\"\r\n                                onClick={async () => { await this.RefreshObjections(); }}>Objections</a>\r\n                        </li>}\r\n                </ul>\r\n\r\n                <div className=\"tab-content\">\r\n\r\n                    <div role=\"tabpanel\" className=\"tab-pane active\" id=\"job-tab\">\r\n                        <Job OnGoingJob={onGoingJob} HasObjections={hasObjections} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"driver-tab\">\r\n                        <DriverContainer Refresh={refresh => { this.RefreshDriverContainer = refresh; }} DriverID={onGoingJob.DriverID} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"truck-tab\">\r\n                        <TruckContainer Refresh={refresh => { this.RefreshTruckContainer = refresh; }} DriverID={onGoingJob.DriverID} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"map-tab\">\r\n                        <MapTab />\r\n                    </div>\r\n                    {onGoingJob.CompletedByDriver ? \r\n                        null :\r\n                        <div role=\"tabpanel\" className=\"tab-pane\" id=\"objections-tab\">\r\n                            <Objections Refresh={refresh => { this.RefreshObjections = refresh; }} OnGoingJobID={onGoingJob.OnGoingJobID} />\r\n                        </div>}\r\n                </div>\r\n\r\n                <OnGoingJobOptions HasObjections={hasObjections}\r\n                    CompletedByDriver={onGoingJob.CompletedByDriver}\r\n                    CompletedByTrader={onGoingJob.CompletedByTrader}\r\n                    OnGoingJobID={onGoingJob.OnGoingJobID}\r\n                    DriverRated={onGoingJob.DriverRated}\r\n                    OnJobRemoved={this.onComponentUpdated} />\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default OnGoingJob;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport InteractiveRating from \"../../../../../controls/InteractiveRating\";\r\nimport { addDriverReview } from \"../../../TraderFunctions\";\r\n\r\nclass ReviewDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Rating: 0,\r\n            Review: \"\",\r\n\r\n            ValidRating: false,\r\n            ValidReview: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Review: \"0\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidReview = this.state.ValidReview;\r\n\r\n        switch (field) {\r\n            case \"Review\":\r\n                ValidReview = (value !== \"\");\r\n                Errors.Review = ValidReview ? \"\" : \"Review is required\";\r\n\r\n                if (Errors.Review !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidReview = (value.length <= 200);\r\n                Errors.Review = ValidReview ? value.length : \"Too long...\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidReview: ValidReview\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidRating && this.state.ValidReview\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newDriverReview = {\r\n            Token: localStorage.Token,\r\n            CompletedJobID: this.props.CompletedJobID,\r\n            Rating: this.state.Rating,\r\n            Review: this.state.Review\r\n        };\r\n\r\n        console.log(\"Going to add driver review...\");\r\n\r\n        await addDriverReview(newDriverReview).then(response => {\r\n            if (response.Message === \"Driver review is added.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.cancelButton.click();\r\n                this.props.OnOK(response.DriverReview);\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`review-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}\r\n                                    style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h3 color-default p-t-n\">Rate and Review</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label>Rate this Driver</label>\r\n                                    <InteractiveRating OnRated={rating => {\r\n                                        this.setState({\r\n                                            Rating: rating,\r\n                                            ValidRating: true\r\n                                        }, () => {\r\n                                            this.setState({\r\n                                                ValidForm: this.state.ValidRating && this.state.ValidReview\r\n                                            });\r\n                                        });\r\n                                    }} />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label>Review</label>\r\n                                    <textarea rows=\"6\" class=\"form-control\" name=\"Review\" style={{ maxWidth: \"100%\" }}\r\n                                        value={this.state.Review} onChange={this.onChange}></textarea>\r\n                                    <span className={(this.state.Errors.Review === \"Too long...\" ||\r\n                                        this.state.Errors.Review === \"Review is required\") ? \"text-danger\" : \"text-accent\"}>{this.state.Errors.Review}</span>\r\n                                </div>\r\n                                <div className=\"text-right\">\r\n                                    <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary m-n\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>                        \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ReviewDialog;","import React, { Component } from \"react\";\r\nimport CompletedJobContainer from \"../../../../../containers/completedJob/CompletedJobContainer\";\r\nimport DriverContainer from \"../../../../../containers/driver/DriverContainer\";\r\nimport ReviewDialog from \"./ReviewDialog\";\r\nimport Rating from \"../../../../../controls/Rating\";\r\n\r\nclass CompletedJobPackageListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const completedJob = this.props.CompletedJobPackage.CompletedJob;\r\n        const billPaid = this.props.CompletedJobPackage.BillPaid;\r\n        const driverReview = this.props.CompletedJobPackage.DriverReview;\r\n\r\n        return <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n            {!billPaid ?\r\n                <div class=\"alert alert-danger m-n p-n\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xs-24\">\r\n                                <p><span className=\"fas fa-exclamation-circle m-r-xxxs\"></span>Please pay the bill for this job from <span className=\"color-default\">Payments</span> section.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> :\r\n                null}\r\n\r\n            <CompletedJobContainer Index={index} CompletedJob={completedJob} />\r\n\r\n            {driverReview ?\r\n                <div class=\"alert alert-info m-n p-n\" style={{ backgroundColor: \"#E5E5E5\", borderTop: \"2px solid #CCCCCC\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-24\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-star\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Rating</div>\r\n                                        <div className=\"content-text-secondary\"><Rating Rating={driverReview.Rating} Color=\"\" Size=\"rating-small\" /></div>\r\n                                        <div className=\"content-text-primary\">Review</div>\r\n                                        <div className=\"content-text-secondary\">{driverReview.Review}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> :\r\n                <div class=\"alert alert-info m-n p-n\" style={{ backgroundColor: \"#E5E5E5\", borderTop: \"2px solid #CCCCCC\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-20\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-star\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Rate and Review the Driver</div>\r\n                                        <div className=\"content-text-secondary\">Your reviews means a lot to us and the driver too.</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-4 text-right\">\r\n                            <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target={`#review-dialog-${index}`}>Write a Review</button>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n\r\n            <ReviewDialog DialogID={index}\r\n                CompletedJobID={completedJob.CompletedJobID}\r\n                OnOK={this.props.OnReviewAdded}/>\r\n\r\n            <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#completed-job-${index}`}\r\n                onClick={async () => { await this.RefreshDriverContainer(); }}>\r\n                <div className=\"type-h4\" style={{ color: \"#008575\", padding: \"10px\", textAlign: \"right\" }}>Driver Details\r\n                    <i className=\"fas fa-ellipsis-v\"></i>\r\n                    <i class=\"glyph glyph-add\"></i>\r\n                    <i class=\"glyph glyph-remove\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`completed-job-${index}`}>\r\n                <DriverContainer Refresh={refresh => { this.RefreshDriverContainer = refresh; }} DriverID={completedJob.DriverID} />\r\n            </div>\r\n        </li>;\r\n    }\r\n};\r\n\r\nexport default CompletedJobPackageListItem;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport CompletedJobPackageListItem from \"./CompletedJobPackageListItem\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport { getData } from \"../../../TraderFunctions\";\r\n\r\nclass CompletedJobsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllCompletedJobPackages: [],\r\n            CompletedJobPackages: [],\r\n            SearchDate: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        }\r\n        \r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"CompletedJobPackages\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Completed job packages found.\") {\r\n                    this.setState({\r\n                        AllCompletedJobPackages: response.CompletedJobPackages,\r\n                        CompletedJobPackages: response.CompletedJobPackages,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllCompletedJobPackages: [],\r\n                        CompletedJobPackages: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"CompletedJobPackages\"\r\n            };\r\n\r\n            this.setState({\r\n                Refreshing: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Completed job packages found.\") {\r\n                    this.setState({\r\n                        AllCompletedJobPackages: response.CompletedJobPackages,\r\n                        CompletedJobPackages: response.CompletedJobPackages,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllCompletedJobPackages: [],\r\n                        CompletedJobPackages: [],\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.SearchDate === \"\") {\r\n            this.setState({\r\n                CompletedJobPackages: this.state.AllCompletedJobPackages\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allCompletedJobPackages = this.state.AllCompletedJobPackages;\r\n        let filteredCompletedJobPackages = [];\r\n        let count = 0;\r\n        let searchDate = this.state.SearchDate;\r\n\r\n        for (let completedJobPackage of allCompletedJobPackages) {\r\n            let completedJob = completedJobPackage.CompletedJob;\r\n\r\n            if ((new Date(completedJob.LoadingDate).getTime() === new Date(searchDate).getTime()) ||\r\n                (new Date(completedJob.Created).getTime() === new Date(searchDate).getTime())) {\r\n                filteredCompletedJobPackages[count++] = completedJobPackage;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            CompletedJobPackages: filteredCompletedJobPackages\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const completedJobPackages = this.state.CompletedJobPackages;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-check m-r-xxs\"></span>Completed Jobs</div>\r\n                            <p className=\"color-light\">{`You have assigned ${completedJobPackages.length} jobs so far. Have more cargo to deliver? Add a Job Offer now, or browse some Job Requests.`}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Your Completed Jobs\r\n                    {this.state.Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\" name=\"SearchDate\" className=\"form-control\" placeholder=\"Search by Date\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={this.state.SearchDate} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div> \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            {(completedJobPackages.length === 0) ?\r\n                <SearchingContainer Searching={this.state.Searching}\r\n                    SearchingFor=\"completed jobs\" /> :\r\n                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {completedJobPackages.map((completedJobPackage, index) => {\r\n                        return <CompletedJobPackageListItem key={index}\r\n                            Index={index} CompletedJobPackage={completedJobPackage}\r\n                            OnReviewAdded={driverReview => {\r\n                                let completedJobPackages = this.state.CompletedJobPackages;\r\n\r\n                                for (let jobPackage of completedJobPackages) {\r\n                                    if (jobPackage === completedJobPackage) {\r\n                                        jobPackage.DriverReview = driverReview;\r\n                                        break;\r\n                                    }\r\n                                }\r\n\r\n                                this.setState({\r\n                                    CompletedJobPackages: completedJobPackages\r\n                                });\r\n                            }} />;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default CompletedJobsList;","import React, { Component } from \"react\";\r\nimport CompletedJobsList from \"./CompletedJobsList\";\r\n\r\nclass CompletedJobs extends Component {\r\n   render() {\r\n       return <section>\r\n           <CompletedJobsList Refresh={this.props.Refresh} />\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default CompletedJobs;","import React, { Component } from \"react\";\r\nimport JobRequests from \"./jobRequests/JobRequests.js\"; \r\nimport JobOffers from \"./jobOffers/JobOffers.js\";\r\nimport OnGoingJob from \"./onGoingJob/OnGoingJob.js\";\r\nimport CompletedJobs from \"./completedJobs/CompletedJobs\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Jobs extends Component {\r\n    render() {\r\n        return (\r\n            <section>\r\n                <PageHeading Heading=\"JOBS\" />\r\n                <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                    padding: \"10px\",\r\n                    backgroundColor: \"#3A3A3C\",\r\n                    width: \"100%\",\r\n                    margin: \"0px\",\r\n                }}>\r\n                    <li role=\"presentation\" className=\"active\">\r\n                        <a href=\"#job-requests\" aria-controls=\"job-requests\" role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={async () => { await this.RefreshJobRequests(); }}>Job Requests</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#job-offers\" aria-controls=\"job-offers\" role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={async () => { await this.RefreshJobOffers(); }}>Job Offers</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#on-going-job\" aria-controls=\"on-going-job\" role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={async () => { await this.RefreshOnGoingJob(); }}>On-Going Job</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#completed-jobs\" aria-controls=\"completed-jobs\" role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={async () => { await this.RefreshCompletedJobs(); }}>Completed Jobs</a>\r\n                    </li>\r\n                </ul>\r\n                <div className=\"tab-content\">\r\n                    <div role=\"tabpanel\" className=\"tab-pane active\" id=\"job-requests\">\r\n                        <JobRequests Refresh={refresh => { this.RefreshJobRequests = refresh; }} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"job-offers\">\r\n                        <JobOffers Refresh={refresh => { this.RefreshJobOffers = refresh; }} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"on-going-job\">\r\n                        <OnGoingJob Refresh={refresh => { this.RefreshOnGoingJob = refresh; }} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"completed-jobs\">\r\n                        <CompletedJobs Refresh={refresh => { this.RefreshCompletedJobs = refresh; }} />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Jobs;","import React, { Component } from \"react\";\r\n\r\nclass BillListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const bill = this.props.Bill;\r\n\r\n        return <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n            <div>BILL CONTAINER HERE</div>\r\n            <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#bill-${index}`}>\r\n                <div className=\"type-h4\" style={{ color: \"#008575\", padding: \"10px\", textAlign: \"right\" }}>Payment Details\r\n                    <i className=\"fas fa-ellipsis-v\"></i>\r\n                    <i class=\"glyph glyph-add\"></i>\r\n                    <i class=\"glyph glyph-remove\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`bill-${index}`}>\r\n                <div>PAID INFORMATION HERE</div>\r\n            </div>\r\n        </li>;\r\n    }\r\n};\r\n\r\nexport default BillListItem;","import React, { Component } from \"react\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport SearchingContainer from \"../../../../containers/searching/SearchingContainer\";\r\nimport BillListItem from \"./BillListItem\";\r\nimport { getData } from \"../../TraderFunctions\";\r\n\r\nclass BillsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Bills: [],\r\n            Searching: false\r\n        }\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Bills\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Bills found.\") {\r\n                    this.setState({\r\n                        Bills: response.Bills,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Bills: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const bills = this.state.Bills;\r\n\r\n        return <section>\r\n            <PageHeading Heading=\"PAYMENTS\" />\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/teal.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-money-bill-wave m-r-xs\"></span>Payments</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Your Bills</div>\r\n\r\n            {(bills.length === 0) ?\r\n                <SearchingContainer Searching={this.state.Searching}\r\n                    SearchingFor=\"bills\" /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {bills.map((bill, index) => {\r\n                        return <BillListItem key={index}\r\n                            Index={index} Bill={bill} />;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default BillsList;","import React, { Component } from \"react\";\r\nimport BillsList from \"./BillsList\";\r\n\r\nclass Payments extends Component {\r\n    render() {\r\n        return <section>\r\n            <BillsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Payments;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { getData, generalSettings } from \"../../TraderFunctions\";\r\n\r\nclass GeneralSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\",\r\n\r\n            ValidFirstName: true,\r\n            ValidLastName: true,\r\n            ValidPhoneNumber: true,\r\n\r\n            ValidForm: false,\r\n            SettingsSaved: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                PhoneNumber: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Trader\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader found.\") {\r\n                    let trader = response.Trader;\r\n\r\n                    this.setState({\r\n                        FirstName: trader.FirstName,\r\n                        LastName: trader.LastName,\r\n                        Address: trader.Address,\r\n                        PhoneNumber: trader.PhoneNumber,\r\n                        Gender: trader.Gender,\r\n                        Nationality: trader.Nationality,\r\n                        DateOfBirth: trader.DateOfBirth\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        FirstName: \"\",\r\n                        LastName: \"\",\r\n                        Address: \"\",\r\n                        PhoneNumber: \"\",\r\n                        Gender: \"\",\r\n                        Nationality: \"\",\r\n                        DateOfBirth: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFirstName = this.state.ValidFirstName;\r\n        let ValidLastName = this.state.ValidLastName;\r\n        let ValidPhoneNumber = this.state.ValidPhoneNumber;\r\n\r\n        switch (field) {\r\n            case \"FirstName\":\r\n                ValidFirstName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.FirstName = ValidFirstName ? \"\" : \"First name is invalid.\";\r\n                break;\r\n            case \"LastName\":\r\n                ValidLastName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.LastName = ValidLastName ? \"\" : \"Last name is invalid.\";\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = value.match(/^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/);\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFirstName: ValidFirstName,\r\n            ValidLastName: ValidLastName,\r\n            ValidPhoneNumber: ValidPhoneNumber,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidFirstName &&\r\n                    this.state.ValidLastName &&\r\n                    this.state.ValidPhoneNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedTrader = {\r\n            Token: localStorage.Token,\r\n            FirstName: this.state.FirstName,\r\n            LastName: this.state.LastName,\r\n            Address: this.state.Address,\r\n            PhoneNumber: this.state.PhoneNumber,\r\n            Gender: this.state.Gender,\r\n            Nationality: this.state.Nationality,\r\n            DateOfBirth: this.state.DateOfBirth,\r\n        }\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await generalSettings(updatedTrader).then(response => {\r\n            if (response.Message === \"Trader is updated.\") {\r\n                this.forceUpdate();\r\n                this.props.OnSettingsSaved();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>General Settings</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-comment\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"FirstName\" autoComplete=\"off\"\r\n                                        value={this.state.FirstName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">First Name</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"FirstName\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-comment\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"LastName\" autoComplete=\"off\"\r\n                                        value={this.state.LastName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Last Name</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"LastName\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-birthday-cake\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\" className=\"form-control\" name=\"DateOfBirth\" autoComplete=\"off\"\r\n                                        value={this.state.DateOfBirth} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Date of Birth</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className={this.state.Gender === \"Male\" ? \"fas fa-male\" : \"fas fa-female\"}></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"dropdown\" style={{ width: \"193px\", maxWidth: \"296px\", }}>\r\n                                    <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                        aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                        <span>{this.state.Gender}</span>\r\n                                        <span className=\"caret\"></span>\r\n                                    </button>\r\n                                    <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                        <li><a onClick={() => { this.setState({ Gender: \"Male\" }); this.validateField(\"\", \"\"); }}>Male</a></li>\r\n                                        <li><a onClick={() => { this.setState({ Gender: \"Female\" }); this.validateField(\"\", \"\"); }}>Female</a></li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Gender</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-flag\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"Nationality\" autoComplete=\"off\"\r\n                                        value={this.state.Nationality} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Nationality</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-phone\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autoComplete=\"off\"\r\n                                        placeholder=\"+XXXXXXXXXXXX\" value={this.state.PhoneNumber} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Phone Number</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"PhoneNumber\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-location-arrow\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"Address\" autoComplete=\"off\"\r\n                                        value={this.state.Address} onChange={this.onChange} style={{ width: \"393px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Address</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default GeneralSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { usernameAndEmailSettings } from \"../../TraderFunctions.js\";\r\n\r\nclass CodeConfirmationDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ConfirmCode: \"\",\r\n\r\n            ValidConfirmCode: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                ConfirmCode: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidConfirmCode = this.state.ValidConfirmCode;\r\n\r\n        ValidConfirmCode = value === this.props.Code;\r\n        Errors.ConfirmCode = ValidConfirmCode ? \"\" : \"Invalid code.\";\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidConfirmCode: ValidConfirmCode,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidConfirmCode\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedTrader = {\r\n            Token: localStorage.Token,\r\n            Username: this.props.Username,\r\n            Email: this.props.Email,\r\n        };\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await usernameAndEmailSettings(updatedTrader).then(response => {\r\n            if (response.Message === \"Trader is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div\r\n                    className=\"modal in\" id=\"code-confirmation-dialog\" tabIndex=\"-1\"\r\n                    role=\"dialog\" aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\"\r\n                    style={{ display: \"block\" }}>\r\n                    <div className=\"modal-dialog\">\r\n                        {this.state.Preloader}\r\n                        <div className=\"modal-dialog\">\r\n                            <div className=\"modal-content\">\r\n                                <section>\r\n                                    <form noValidate onSubmit={this.onSubmit}>\r\n                                        <div className=\"modal-header\">\r\n                                            <img alt=\"passcode.png\" src=\"./images/passcode.png\" height=\"60\" />\r\n                                            <div className=\"type-h3\">Email Confirmation</div>\r\n                                            <div className=\"type-sh3\">We delivered a confirmation code to your email.</div>\r\n                                        </div>\r\n                                        <div className=\"modal-body\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-12\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"control-label\">Confirmation Code</label>\r\n                                                        <input type=\"text\" name=\"ConfirmCode\" className=\"form-control\" autocomplete=\"off\"\r\n                                                            value={this.state.ConfirmCode} onChange={this.onChange} />\r\n                                                        <span className=\"text-danger\">{this.state.Errors.ConfirmCode}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"modal-footer\">\r\n                                            <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                                ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                            <input type=\"submit\" value=\"Confirm\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </form>\r\n                                </section>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default CodeConfirmationDialog;","import React, { Component } from \"react\";\r\nimport CodeConfirmationDialog from \"./CodeConfirmationDialog.js\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport {\r\n    getData,\r\n    validateUsername,\r\n    validateEmail,\r\n    sendCode,\r\n    usernameAndEmailSettings\r\n} from \"../../TraderFunctions\";\r\n\r\nclass UsernameAndEmailSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            NewUsername: \"\",\r\n\r\n            Email: \"\",\r\n            NewEmail: \"\",\r\n\r\n            Code: \"\",\r\n\r\n            ValidNewUsername: true,\r\n            ValidNewEmail: true,\r\n\r\n            ValidForm: false,\r\n            CodeConfirmationDialog: null,\r\n\r\n            Errors: {\r\n                NewUsername: \"\",\r\n                NewEmail: \"\",\r\n            },\r\n\r\n            CodeConfirmation: \"\",\r\n            Preloader: null\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Trader\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader found.\") {\r\n                    let trader = response.Trader;\r\n\r\n                    this.setState({\r\n                        Username: trader.Username,\r\n                        NewUsername: trader.Username,\r\n                        Email: trader.Email,\r\n                        NewEmail: trader.Email\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Username: \"\",\r\n                        NewUsername: \"\",\r\n                        Email: \"\",\r\n                        NewEmail: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewUsername = this.state.ValidNewUsername;\r\n        let ValidNewEmail = this.state.ValidNewEmail;\r\n        \r\n        switch (field) {\r\n            case \"NewUsername\":\r\n                ValidNewUsername = (value !== \"\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is required.\";\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value.match(/^[a-z0-9]+$/i));\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is invalid.\";\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value !== \"Username is unavailable.\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is unavailable.\";\r\n                break;\r\n            case \"NewEmail\":\r\n                ValidNewEmail = (value !== \"\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is required.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i));\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is invalid.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value !== \"Email is already taken.\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is already taken.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewUsername: ValidNewUsername,\r\n            ValidNewEmail: ValidNewEmail,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidNewUsername &&\r\n                    this.state.ValidNewEmail\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername === this.state.Username &&\r\n            this.state.NewEmail === this.state.Email) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername !== this.state.Username) {\r\n            const response = await validateUsername(this.state.NewUsername);\r\n\r\n            if (response.Message === \"Username is unavailable.\") {\r\n                this.validateField(\"NewUsername\", response.Message);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail !== this.state.Email) {\r\n            const response = await validateEmail(this.state.NewEmail);\r\n            if (response.Message === \"Email is already taken.\") {\r\n                this.validateField(\"NewEmail\", response.Message);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail === this.state.Email) {\r\n            const updatedTrader = {\r\n                Token: localStorage.Token,\r\n                Username: this.state.NewUsername,\r\n                Email: this.state.NewEmail,\r\n            };\r\n\r\n            this.setState({\r\n                Preloader: <Preloader />\r\n            });\r\n\r\n            console.log(\"Going to update username.\");\r\n            await usernameAndEmailSettings(updatedTrader).then(response => {  \r\n                console.log(response);\r\n                if (response.Message === \"Trader is updated.\") {\r\n                    \r\n                    this.props.OnSettingsSaved();\r\n                }\r\n\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            console.log(\"Going to send code...\");\r\n            await sendCode(this.state.NewEmail).then(response => {\r\n                console.log(response);\r\n                if (response.Message === \"Code sent.\") {\r\n                    this.setState({\r\n                        CodeConfirmationDialog: <CodeConfirmationDialog\r\n                            Code={response.Code}\r\n                            Username={this.state.NewUsername}\r\n                            Email={this.state.NewEmail}\r\n                            OnCancel={() => {\r\n                                this.setState({\r\n                                    CodeConfirmationDialog: null,\r\n                                });\r\n                            }}\r\n                            OnOK={cancelButton => {\r\n                                cancelButton.click();\r\n                                this.props.OnSettingsSaved();\r\n                            }} />\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Username and Emails</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-at\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"NewUsername\" className=\"form-control\" autoComplete=\"off\"\r\n                                        value={this.state.NewUsername} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Username</div>\r\n                                <div className=\"content-text-secondary text-danger\">{this.state.Errors[\"NewUsername\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-envelope\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"email\" name=\"NewEmail\" className=\"form-control\" placeholder=\"someone@example.com\" autoComplete=\"off\"\r\n                                        value={this.state.NewEmail} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Email</div>\r\n                                <div className=\"content-text-secondary text-danger\">{this.state.Errors[\"NewEmail\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n                {this.state.CodeConfirmationDialog}\r\n            </div> \r\n        );\r\n    }\r\n};\r\n\r\nexport default UsernameAndEmailSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { validatePassword, passwordSettings } from \"../../TraderFunctions\";\r\n\r\nclass PasswordSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            CurrentPassword: \"\",\r\n            NewPassword: \"\",\r\n            ConfirmPassword: \"\",\r\n\r\n            ValidCurrentPassword: false,\r\n            ValidNewPassword: false,\r\n            ValidConfirmPassword: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                CurrentPassword: \"\",\r\n                NewPassword: \"\",\r\n                ConfirmPassword: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    async validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCurrentPassword = this.state.ValidCurrentPassword;\r\n        let ValidNewPassword = this.state.ValidNewPassword;\r\n        let ValidConfirmPassword = this.state.ValidConfirmPassword;\r\n\r\n        switch (field) {\r\n            case \"CurrentPassword\":\r\n                ValidCurrentPassword = (value !== \"\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is required.\";\r\n\r\n                if (Errors.CurrentPassword !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCurrentPassword = (value !== \"Invalid password.\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is invalid.\";\r\n                break;\r\n            case \"NewPassword\":\r\n                ValidNewPassword = value.length >= 6;\r\n                Errors.NewPassword = ValidNewPassword ? \"\" : \"Password is too short.\";\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                ValidConfirmPassword = value === this.state.NewPassword;\r\n                Errors.ConfirmPassword = ValidConfirmPassword ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCurrentPassword: ValidCurrentPassword,\r\n            ValidNewPassword: ValidNewPassword,\r\n            ValidConfirmPassword: ValidConfirmPassword,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidCurrentPassword &&\r\n                    this.state.ValidNewPassword &&\r\n                    this.state.ValidConfirmPassword\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        let passwordPackage = {\r\n            Token: localStorage.Token,\r\n            Password: this.state.CurrentPassword\r\n        };\r\n\r\n        await validatePassword(passwordPackage).then(async response => {\r\n            if (response.Message === \"Invalid password.\") {\r\n                this.validateField(\"CurrentPassword\", response.Message);\r\n            }\r\n            else {\r\n                const updatedTrader = {\r\n                    Token: localStorage.Token,\r\n                    Password: this.state.NewPassword\r\n                };\r\n\r\n                this.setState({\r\n                    Preloader: <Preloader />\r\n                });\r\n\r\n                await passwordSettings(updatedTrader).then(response => {\r\n                    if (response.Message === \"Trader is updated.\") {\r\n                        this.props.OnSettingsSaved();\r\n                    }\r\n\r\n                    this.setState({\r\n                        Preloader: null\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\" }}>Change Password</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-key\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" name=\"CurrentPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                        value={this.state.CurrentPassword} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Current Password</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"CurrentPassword\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-key\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" name=\"NewPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                        value={this.state.NewPassword} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">New Password</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"NewPassword\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-key\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" name=\"ConfirmPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                        value={this.state.ConfirmPassword} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Confirm Password</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"ConfirmPassword\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default PasswordSettings;","import React, { Component } from \"react\";\r\nimport GeneralSettings from \"./GeneralSettings\";\r\nimport UsernameAndEmailSettings from \"./UsernameAndEmailSettings\";\r\nimport PasswordSettings from \"./PasswordSettings\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Settings extends Component {\r\n    render() {\r\n        return <section>\r\n            <PageHeading Heading=\"SETTINGS\" />\r\n            <GeneralSettings ref=\"GeneralSettings\" OnSettingsSaved={() => { this.refs.GeneralSettings.componentDidMount(); }} />\r\n            <UsernameAndEmailSettings ref=\"UsernameAndEmailSettings\" OnSettingsSaved={() => { this.refs.UsernameAndEmailSettings.componentDidMount(); }} />\r\n            <PasswordSettings ref=\"PasswordSettings\" OnSettingsSaved={() => { this.refs.PasswordSettings.forceUpdate(); }} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Settings;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Profile from \"./profile/Profile\";\r\nimport Jobs from \"./jobs/Jobs\";\r\nimport Payments from \"./payments/Payments\";\r\nimport Settings from \"./settings/Settings\";\r\n\r\nclass TradersDashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Left: -400\r\n        };\r\n\r\n        this.onCloseNavigation = this.onCloseNavigation.bind(this);\r\n    }\r\n\r\n    onCloseNavigation = () => {\r\n        this.setState({\r\n            Left: -400\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.Token) {\r\n            return <Redirect to=\"/login\" />;\r\n        }\r\n        else {\r\n            return <section>\r\n                <div className=\"sidenav\" style={{ left: `${this.state.Left}px` }}>\r\n                    <a className=\"closebtn\" onClick={this.onCloseNavigation}>&times;</a>\r\n\r\n                    <div class=\"entity-list\" role=\"tablist\">\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#profile\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Profile</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#jobs\" aria-controls=\"jobs\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Jobs</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#payments\" aria-controls=\"payments\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Payments</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#settings\" aria-controls=\"settings\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Settings</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"tab-content\">\r\n                    <div role=\"tabpanel\" className=\"tab-pane active\" id=\"profile\">\r\n                        <Profile ref=\"Profile\" />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"jobs\">\r\n                        <Jobs />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"payments\">\r\n                        <Payments />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"settings\">\r\n                        <Settings />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"side-nav-btn\" onClick={() => {\r\n                    this.setState({\r\n                        Left: 0\r\n                    });\r\n                }}><div className=\"fas fa-bars\" style={{ fontSize: \"x-large\" }}></div>\r\n                </div>\r\n            </section>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default TradersDashboard;","import React, { Component } from \"react\";\r\n\r\nclass BackToTop extends Component {\r\n    render() {\r\n        return (\r\n            <a id=\"up\" href=\"#top\" className=\"back-to-top\" style={{ position: \"fixed\", right: \"20px\", bottom: \"20px\", }}>\r\n                <i className=\"glyph glyph-up\" style={{ color: \"#008575\", }}></i>\r\n                <span className=\"sr-only\">Back to top</span>\r\n            </a>\r\n        );\r\n    }\r\n};\r\n\r\nexport default BackToTop;","import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <footer className=\"border-top footer theme-default color-bg-light-neutral-high text-light\">\r\n                <div className=\"container\">\r\n                    &copy; {new Date().getFullYear()} - Core Infinite - <a asp-area=\"\" asp-controller=\"Home\" asp-action=\"Privacy\">Privacy</a>\r\n                </div>\r\n            </footer>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Header from \"./components/shared/Header\";\r\nimport Landing from \"./components/landing/Landing\";\r\nimport Login from \"./components/login/Login\";\r\nimport Register from \"./components/register/Register\";\r\nimport EmailConfirmation from \"./components/register/EmailConfirmation\";\r\nimport AccountSetup from \"./components/register/AccountSetup\";\r\nimport Congratulations from \"./components/register/Congratulations\";\r\nimport DriversDashboard from \"./components/drivers/dashboard/DriversDashboard\"\r\nimport TradersDashboard from \"./components/traders/dashboard/TradersDashboard\"\r\nimport BackToTop from \"./controls/BackToTop\";\r\nimport Footer from \"./components/shared/Footer\";\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Router basename=\"/\">\r\n                <div className=\"App\">\r\n                    <Header />\r\n                    <Route exact path=\"/\" component={Landing} />\r\n                    <Route exact path=\"/register\" component={Register} />\r\n                    <Route exact path=\"/emailConfirmation\" component={EmailConfirmation} />\r\n                    <Route exact path=\"/setupAccount\" component={AccountSetup} />\r\n                    <Route exact path=\"/congratulations\" component={Congratulations} />\r\n                    <Route exact path=\"/login\" component={Login} />\r\n                    <Route exact path=\"/drivers\" component={DriversDashboard} />\r\n                    <Route exact path=\"/traders\" component={TradersDashboard} />\r\n                    <BackToTop />\r\n                    <Footer />\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = {\r\n    APP_NAME: \"Naqel\",\r\n    USER_TOKEN: \"userToken\",\r\n    USER_NOT_FOUND: \"Username not found.\",\r\n    INVALID_PASSWORD: \"Invalid password.\",\r\n    USERNAME_OR_EMAIL_TAKEN: \"Username or email is already taken.\",\r\n    NAQEL_SERVER: \"https://naqel-server.azurewebsites.net/\",\r\n    IMAGE_UPLOADER: \"https://us-central1-naqel-transport-jobs.cloudfunctions.net/uploadImage\"\r\n};"],"sourceRoot":""}
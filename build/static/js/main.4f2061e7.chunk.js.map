{"version":3,"sources":["res/FirebaseApp.js","components/shared/Header.js","components/landing/Landing.js","components/drivers/DriverFunctions.js","components/traders/TraderFunctions.js","components/administrators/AdministratorFunctions.js","components/transportCompanyResponsibles/TransportCompanyResponsiblesFunctions.js","styles/MiscellaneousStyles.js","controls/Preloader.js","styles/CardStyles.js","components/login/Login.js","components/register/Register.js","components/register/EmailConfirmation.js","components/register/AccountSetup.js","components/register/SetupAdministratorAccount.js","components/register/SetupTransportCompanyResponsibleAccount.js","components/register/Congratulations.js","components/drivers/dashboard/profile/ProfilePhoto.js","controls/ImageUploader.js","components/drivers/dashboard/profile/documents/drivingLicence/AddDrivingLicenceDialog.js","components/drivers/dashboard/profile/documents/drivingLicence/AddDrivingLicenceButton.js","components/drivers/dashboard/profile/documents/entryExitCard/AddEntryExitCardDialog.js","components/drivers/dashboard/profile/documents/entryExitCard/AddEntryExitCardButton.js","components/drivers/dashboard/profile/documents/identityCard/AddIdentityCardDialog.js","components/drivers/dashboard/profile/documents/identityCard/AddIdentityCardButton.js","components/drivers/dashboard/profile/documents/drivingLicence/EditDrivingLicenceDialog.js","components/drivers/dashboard/profile/documents/drivingLicence/DrivingLicenceListItem.js","components/drivers/dashboard/profile/documents/entryExitCard/EditEntryExitCardDialog.js","components/drivers/dashboard/profile/documents/entryExitCard/EntryExitCardListItem.js","components/drivers/dashboard/profile/documents/identityCard/EditIdentityCardDialog.js","components/drivers/dashboard/profile/documents/identityCard/IdentityCardListItem.js","components/drivers/dashboard/profile/documents/DocumentsList.js","controls/Rating.js","controls/PageHeading.js","components/drivers/dashboard/profile/Profile.js","components/drivers/dashboard/trucks/TruckSettings.js","components/drivers/dashboard/trucks/AddTruckDialog.js","components/drivers/dashboard/trucks/trailers/AddTrailerDialog.js","components/drivers/dashboard/trucks/trailers/AddTrailer.js","components/drivers/dashboard/trucks/trailers/EditTrailerDialog.js","components/drivers/dashboard/trucks/trailers/TrailersList.js","components/drivers/dashboard/trucks/trailers/Trailers.js","components/drivers/dashboard/trucks/Truck.js","components/drivers/dashboard/permits/AddPermitLicenceDialog.js","components/drivers/dashboard/permits/EditPermitLicenceDialog.js","components/drivers/dashboard/permits/PermitLicencesListItem.js","controls/ProgressBar.js","components/drivers/dashboard/permits/PermitLicencesList.js","components/drivers/dashboard/permits/Permits.js","containers/searching/SearchingContainer.js","controls/ProgressRing.js","components/drivers/dashboard/earnings/EarningListItem.js","components/drivers/dashboard/earnings/EarningsList.js","components/drivers/dashboard/earnings/Earnings.js","containers/trader/documents/IdentityCardContainer.js","containers/trader/documents/CommercialRegisterCertificateContainer.js","components/shared/UserFunctions.js","containers/trader/documents/DocumentsDialog.js","containers/trader/TraderContainer.js","containers/trader/documents/DocumentsContainer.js","components/drivers/dashboard/jobs/jobRequests/ProfileDialog.js","containers/traderRequest/TraderRequestContainer.js","components/drivers/dashboard/jobs/jobRequests/RequestDialog.js","components/drivers/dashboard/jobs/jobRequests/TraderRequestRow.js","components/drivers/dashboard/jobs/jobRequests/TraderRequestsTable.js","controls/PlaceInput.js","components/drivers/dashboard/jobs/jobRequests/EditJobRequestDialog.js","containers/jobReqeust/JobRequestContainer.js","components/drivers/dashboard/jobs/jobRequests/JobRequestPackageItem.js","components/drivers/dashboard/jobs/jobRequests/AddJobRequestDialog.js","components/drivers/dashboard/jobs/jobRequests/JobRequestsList.js","components/drivers/dashboard/jobs/jobRequests/JobRequests.js","containers/jobOffer/JobOfferContainer.js","components/drivers/dashboard/jobs/jobOffers/list/BidJobOfferDialog.js","components/drivers/dashboard/jobs/jobOffers/list/JobOfferPostListItem.js","components/drivers/dashboard/jobs/jobOffers/list/JobOfferPostsList.js","components/drivers/dashboard/jobs/jobOffers/list/List.js","components/drivers/dashboard/jobs/jobOffers/map/JobOffersGoogleMap.js","components/drivers/dashboard/jobs/jobOffers/map/JobOffersMap.js","components/drivers/dashboard/jobs/jobOffers/map/Map.js","components/drivers/dashboard/jobs/jobOffers/JobOffers.js","components/drivers/dashboard/jobs/onGoingJob/OnGoingJobMap.js","components/drivers/dashboard/jobs/onGoingJob/objectionsTab/ReasonsList.js","components/drivers/dashboard/jobs/onGoingJob/objectionsTab/AddObjectionDialog.js","containers/onGoingJob/JobObjectionContainer.js","components/drivers/dashboard/jobs/onGoingJob/objectionsTab/Objections.js","containers/onGoingJob/JobContainer.js","components/drivers/dashboard/jobs/onGoingJob/Job.js","components/drivers/dashboard/jobs/onGoingJob/FinishJobDialog.js","components/drivers/dashboard/jobs/onGoingJob/OnGoingJobOptions.js","components/drivers/dashboard/jobs/onGoingJob/OnGoingJob.js","containers/completedJob/CompletedJobContainer.js","containers/payProof/PayProofContainer.js","components/drivers/dashboard/jobs/completedJobs/moreDetails/PayProofDetails.js","containers/payDetails/PayDetailsContainer.js","components/drivers/dashboard/jobs/completedJobs/moreDetails/PaymentDetails.js","components/drivers/dashboard/jobs/completedJobs/moreDetails/MoreDetails.js","components/drivers/dashboard/jobs/completedJobs/CompletedJobPackageListItem.js","components/drivers/dashboard/jobs/completedJobs/CompletedJobsList.js","components/drivers/dashboard/jobs/completedJobs/CompletedJobs.js","components/drivers/dashboard/jobs/Jobs.js","containers/bill/BillContainer.js","components/drivers/dashboard/payments/Bill.js","components/drivers/dashboard/payments/PrintBillDialog.js","components/drivers/dashboard/payments/AddPayProofDialog.js","components/drivers/dashboard/payments/PayProofDetails.js","components/drivers/dashboard/payments/PaymentDetails.js","components/drivers/dashboard/payments/PayOnlineDialog.js","components/drivers/dashboard/payments/BillListItem.js","components/drivers/dashboard/payments/BillsList.js","components/drivers/dashboard/payments/Payments.js","components/drivers/dashboard/questions/AskQuestionDialog.js","containers/driverQuestion/DriverQuestionContainer.js","components/drivers/dashboard/questions/DeleteQuestionDialog.js","components/drivers/dashboard/questions/QuestionListItem.js","components/drivers/dashboard/questions/QuestionsList.js","components/drivers/dashboard/questions/Questions.js","components/drivers/dashboard/settings/GeneralSettings.js","components/drivers/dashboard/settings/CodeConfirmationDialog.js","components/drivers/dashboard/settings/UsernameAndEmailSettings.js","components/drivers/dashboard/settings/PasswordSettings.js","components/drivers/dashboard/settings/Settings.js","containers/blockedUser/BlockedUserContainer.js","components/drivers/dashboard/DriversDashboard.js","components/traders/dashboard/profile/ProfilePhoto.js","components/traders/dashboard/profile/documents/identityCard/AddIdentityCardDialog.js","components/traders/dashboard/profile/documents/identityCard/AddIdentityCardButton.js","components/traders/dashboard/profile/documents/commercialRegisterCertificate/AddCommercialRegisterCertificateDialog.js","components/traders/dashboard/profile/documents/commercialRegisterCertificate/AddCommercialRegisterCertificateButton.js","components/traders/dashboard/profile/documents/identityCard/EditIdentityCardDialog.js","components/traders/dashboard/profile/documents/identityCard/IdentityCardListItem.js","components/traders/dashboard/profile/documents/commercialRegisterCertificate/EditCommercialRegisterCertificateDialog.js","components/traders/dashboard/profile/documents/commercialRegisterCertificate/CommercialRegisterCertificateListItem.js","components/traders/dashboard/profile/documents/DocumentsList.js","components/traders/dashboard/profile/Profile.js","containers/driver/documents/DrivingLicenceContainer.js","containers/driver/documents/EntryExitCardContainer.js","containers/driver/documents/IdentityCardContainer.js","containers/driver/documents/DocumentsDialog.js","containers/driver/DriverContainer.js","containers/truck/TrailerContainer.js","containers/truck/TrailersDialog.js","containers/truck/TruckContainer.js","components/traders/dashboard/jobs/jobRequests/list/SendTraderRequestDialog.js","components/traders/dashboard/jobs/jobRequests/list/TraderRequestDialog.js","components/traders/dashboard/jobs/jobRequests/list/AssignJobDialog.js","components/traders/dashboard/jobs/jobRequests/list/JobRequestPostListItem.js","components/traders/dashboard/jobs/jobRequests/list/JobRequestPostsList.js","components/traders/dashboard/jobs/jobRequests/list/List.js","components/traders/dashboard/jobs/jobRequests/map/JobRequestsGoogleMap.js","components/traders/dashboard/jobs/jobRequests/map/JobRequestsMap.js","components/traders/dashboard/jobs/jobRequests/map/Map.js","components/traders/dashboard/jobs/jobRequests/JobRequests.js","containers/driver/documents/DocumentsContainer.js","components/traders/dashboard/jobs/jobOffers/ProfileDialog.js","containers/truck/TrailersContainer.js","components/traders/dashboard/jobs/jobOffers/TruckDialog.js","components/traders/dashboard/jobs/jobOffers/AssignJobDialog.js","components/traders/dashboard/jobs/jobOffers/DriverRequestRow.js","components/traders/dashboard/jobs/jobOffers/DriverRequestsTable.js","components/traders/dashboard/jobs/jobOffers/EditJobOfferDialog.js","components/traders/dashboard/jobs/jobOffers/JobOfferPackageItem.js","components/traders/dashboard/jobs/jobOffers/AddJobOfferDialog.js","components/traders/dashboard/jobs/jobOffers/JobOffersList.js","components/traders/dashboard/jobs/jobOffers/JobOffers.js","components/traders/dashboard/jobs/onGoingJob/Job.js","components/traders/dashboard/jobs/onGoingJob/OnGoingJobMap.js","components/traders/dashboard/jobs/onGoingJob/objections/ReasonsList.js","components/traders/dashboard/jobs/onGoingJob/objections/AddObjectionDialog.js","components/traders/dashboard/jobs/onGoingJob/objections/Objections.js","components/traders/dashboard/jobs/onGoingJob/ApproveJobDialog.js","controls/InteractiveRating.js","components/traders/dashboard/jobs/onGoingJob/ReviewDialog.js","components/traders/dashboard/jobs/onGoingJob/OnGoingJobOptions.js","components/traders/dashboard/jobs/onGoingJob/OnGoingJob.js","components/traders/dashboard/jobs/completedJobs/ReviewDialog.js","components/traders/dashboard/jobs/completedJobs/CompletedJobPackageListItem.js","components/traders/dashboard/jobs/completedJobs/CompletedJobsList.js","components/traders/dashboard/jobs/completedJobs/CompletedJobs.js","components/traders/dashboard/jobs/Jobs.js","components/traders/dashboard/payments/Bill.js","components/traders/dashboard/payments/PrintBillDialog.js","components/traders/dashboard/payments/SpecialBill.js","components/traders/dashboard/payments/PrintSpecialBillDialog.js","components/traders/dashboard/payments/AddPayProofDialog.js","components/traders/dashboard/payments/PayProofDetails.js","components/traders/dashboard/payments/PaymentDetails.js","components/traders/dashboard/payments/PayOnlineDialog.js","components/traders/dashboard/payments/RequestSpecialBillDialog.js","components/traders/dashboard/payments/BillListItem.js","components/traders/dashboard/payments/BillsList.js","components/traders/dashboard/payments/Payments.js","components/traders/dashboard/questions/AskQuestionDialog.js","containers/traderQuestion/TraderQuestionContainer.js","components/traders/dashboard/questions/DeleteQuestionDialog.js","components/traders/dashboard/questions/QuestionListItem.js","components/traders/dashboard/questions/QuestionsList.js","components/traders/dashboard/questions/Questions.js","components/traders/dashboard/settings/GeneralSettings.js","components/traders/dashboard/settings/CodeConfirmationDialog.js","components/traders/dashboard/settings/UsernameAndEmailSettings.js","components/traders/dashboard/settings/PasswordSettings.js","components/traders/dashboard/settings/Settings.js","containers/exoneratedTrader/ExoneratedTraderContainer.js","components/traders/dashboard/TradersDashboard.js","components/administrators/dashboard/profile/ProfilePhoto.js","components/administrators/dashboard/profile/settings/GeneralSettings.js","components/administrators/dashboard/profile/settings/CodeConfirmationDialog.js","components/administrators/dashboard/profile/settings/UsernameAndEmailSettings.js","components/administrators/dashboard/profile/settings/PasswordSettings.js","components/administrators/dashboard/profile/settings/NaqellSettings.js","components/administrators/dashboard/profile/settings/Settings.js","components/administrators/dashboard/profile/Profile.js","components/administrators/dashboard/Drivers/BlockAccountDialog.js","components/administrators/dashboard/Drivers/UnblockAccountDialog.js","components/administrators/dashboard/Drivers/DriverListItem.js","components/administrators/dashboard/Drivers/DriversList.js","components/administrators/dashboard/Drivers/Drivers.js","components/administrators/dashboard/traders/SetRefundRateDialog.js","components/administrators/dashboard/traders/ChargeTraderDialog.js","components/administrators/dashboard/traders/ExonerateTraderDialog.js","components/administrators/dashboard/traders/TraderListItem.js","components/administrators/dashboard/traders/TradersList.js","components/administrators/dashboard/traders/Traders.js","components/administrators/dashboard/jobs/objectionReasons/traderObjectionReasons/AddObjectionReasonDialog.js","components/administrators/dashboard/jobs/objectionReasons/traderObjectionReasons/ObjectionReasonListItem.js","components/administrators/dashboard/jobs/objectionReasons/traderObjectionReasons/ObjectionReasonsList.js","components/administrators/dashboard/jobs/objectionReasons/traderObjectionReasons/TraderObjectionReasons.js","components/administrators/dashboard/jobs/objectionReasons/driverObjectionReasons/AddObjectionReasonDialog.js","components/administrators/dashboard/jobs/objectionReasons/driverObjectionReasons/ObjectionReasonListItem.js","components/administrators/dashboard/jobs/objectionReasons/driverObjectionReasons/ObjectionReasonsList.js","components/administrators/dashboard/jobs/objectionReasons/driverObjectionReasons/DriverObjectionReasons.js","components/administrators/dashboard/jobs/objectionReasons/ObjectionReasons.js","components/administrators/dashboard/jobs/objectionableJobs/jobObjections/Objections.js","components/administrators/dashboard/jobs/objectionableJobs/DiscardObjectionableJobDialog.js","components/administrators/dashboard/jobs/objectionableJobs/ObjectionableJobListItem.js","components/administrators/dashboard/jobs/objectionableJobs/ObjectionableJobsList.js","components/administrators/dashboard/jobs/objectionableJobs/ObjectionableJobs.js","components/administrators/dashboard/jobs/Jobs.js","components/administrators/dashboard/questions/driverQuestions/AnswerDriverQuestionDialog.js","components/administrators/dashboard/questions/driverQuestions/DriverQuestionClasses.js","components/administrators/dashboard/questions/driverQuestions/ClassifyDriverQuestionDialog.js","components/administrators/dashboard/questions/driverQuestions/DriverQuestionListItem.js","components/administrators/dashboard/questions/driverQuestions/DriverQuestionsList.js","components/administrators/dashboard/questions/driverQuestions/DriverQuestions.js","components/administrators/dashboard/questions/traderQuestions/AnswerTraderQuestionDialog.js","components/administrators/dashboard/questions/traderQuestions/TraderQuestionClasses.js","components/administrators/dashboard/questions/traderQuestions/ClassifyTraderQuestionDialog.js","components/administrators/dashboard/questions/traderQuestions/TraderQuestionListItem.js","components/administrators/dashboard/questions/traderQuestions/TraderQuestionsList.js","components/administrators/dashboard/questions/traderQuestions/TraderQuestions.js","containers/responsibleQuestion/ResponsibleQuestionContainer.js","components/administrators/dashboard/questions/responsibleQuestions/AnswerResponsibleQuestionDialog.js","components/administrators/dashboard/questions/responsibleQuestions/ResponsibleQuestionClasses.js","components/administrators/dashboard/questions/responsibleQuestions/ClassifyResponsibleQuestionDialog.js","components/administrators/dashboard/questions/responsibleQuestions/ResponsibleQuestionListItem.js","components/administrators/dashboard/questions/responsibleQuestions/ResponsibleQuestionsList.js","components/administrators/dashboard/questions/responsibleQuestions/ResponsibleQuestions.js","components/administrators/dashboard/questions/Questions.js","components/administrators/dashboard/feeRates/generalRates/globalAndTemporayRates/SetGlobalFeeRateDialog.js","components/administrators/dashboard/feeRates/generalRates/globalAndTemporayRates/SetTemporaryFeeRateDialog.js","components/administrators/dashboard/feeRates/generalRates/globalAndTemporayRates/ClearTemporaryFeeRateDialog.js","components/administrators/dashboard/feeRates/generalRates/globalAndTemporayRates/GlobalAndTemporaryRates.js","components/administrators/dashboard/feeRates/generalRates/priceRanges/UpdatePriceRangeDialog.js","components/administrators/dashboard/feeRates/generalRates/priceRanges/PriceRangeListItem.js","components/administrators/dashboard/feeRates/generalRates/priceRanges/AddPriceRangeDialog.js","components/administrators/dashboard/feeRates/generalRates/priceRanges/PriceRangesList.js","components/administrators/dashboard/feeRates/generalRates/priceRanges/PriceRanges.js","components/administrators/dashboard/feeRates/generalRates/GeneralRates.js","components/administrators/dashboard/feeRates/traderRates/UpdateTraderRateDialog.js","components/administrators/dashboard/feeRates/traderRates/TraderRateListItem.js","components/administrators/dashboard/feeRates/traderRates/AddTraderRateDialog.js","components/administrators/dashboard/feeRates/traderRates/TraderRatesList.js","components/administrators/dashboard/feeRates/traderRates/TraderRates.js","components/administrators/dashboard/feeRates/FeeRates.js","components/administrators/dashboard/financialAccounts/bills/tradersBills/PayProofDialog.js","components/administrators/dashboard/financialAccounts/bills/tradersBills/PayDetailsDialog.js","components/administrators/dashboard/financialAccounts/bills/tradersBills/TradersBillListItem.js","components/administrators/dashboard/financialAccounts/bills/tradersBills/TradersBillsList.js","components/administrators/dashboard/financialAccounts/bills/tradersBills/TradersBills.js","components/administrators/dashboard/financialAccounts/bills/driversBills/PayProofDialog.js","components/administrators/dashboard/financialAccounts/bills/driversBills/PayDetailsDialog.js","components/administrators/dashboard/financialAccounts/bills/driversBills/DriversBillListItem.js","components/administrators/dashboard/financialAccounts/bills/driversBills/DriversBillsList.js","components/administrators/dashboard/financialAccounts/bills/driversBills/DriversBills.js","components/administrators/dashboard/financialAccounts/bills/Bills.js","components/administrators/dashboard/financialAccounts/userAccountStatements/traderAccountStatements/accountStatement/RowData.js","components/administrators/dashboard/financialAccounts/userAccountStatements/traderAccountStatements/accountStatement/AccountStatementData.js","components/administrators/dashboard/financialAccounts/userAccountStatements/traderAccountStatements/accountStatement/AccountStatement.js","components/administrators/dashboard/financialAccounts/userAccountStatements/traderAccountStatements/TraderAccountStatementBrowser.js","components/administrators/dashboard/financialAccounts/userAccountStatements/traderAccountStatements/TraderAccountStatements.js","components/administrators/dashboard/financialAccounts/userAccountStatements/driverAccountStatements/accountStatement/RowData.js","components/administrators/dashboard/financialAccounts/userAccountStatements/driverAccountStatements/accountStatement/AccountStatementData.js","components/administrators/dashboard/financialAccounts/userAccountStatements/driverAccountStatements/accountStatement/AccountStatement.js","components/administrators/dashboard/financialAccounts/userAccountStatements/driverAccountStatements/DriverAccountStatementBrowser.js","components/administrators/dashboard/financialAccounts/userAccountStatements/driverAccountStatements/DriverAccountStatements.js","components/administrators/dashboard/financialAccounts/userAccountStatements/responsibleAccountStatements/accountStatement/RowData.js","components/administrators/dashboard/financialAccounts/userAccountStatements/responsibleAccountStatements/accountStatement/AccountStatementData.js","components/administrators/dashboard/financialAccounts/userAccountStatements/responsibleAccountStatements/accountStatement/AccountStatement.js","components/administrators/dashboard/financialAccounts/userAccountStatements/responsibleAccountStatements/ResponsibleAccountStatementBrowser.js","components/administrators/dashboard/financialAccounts/userAccountStatements/responsibleAccountStatements/ResponsibleAccountStatements.js","components/administrators/dashboard/financialAccounts/userAccountStatements/UserAccountStatements.js","components/administrators/dashboard/financialAccounts/accountStatement/RowData.js","components/administrators/dashboard/financialAccounts/accountStatement/AccountStatementData.js","components/administrators/dashboard/financialAccounts/accountStatement/AccountStatement.js","components/administrators/dashboard/financialAccounts/financialAccounts.js","components/administrators/dashboard/AdministratorsDashboard.js","components/transportCompanyResponsibles/dashboard/profile/documents/commercialRegisterCertificate/AddCommercialRegisterCertificateDialog.js","components/transportCompanyResponsibles/dashboard/profile/documents/commercialRegisterCertificate/EditCommercialRegisterCertificateDialog.js","components/transportCompanyResponsibles/dashboard/profile/documents/commercialRegisterCertificate/CommercialRegisterCertificateListItem.js","components/transportCompanyResponsibles/dashboard/profile/documents/DocumentsList.js","components/transportCompanyResponsibles/dashboard/profile/Profile.js","components/transportCompanyResponsibles/dashboard/settings/GeneralSettings.js","components/transportCompanyResponsibles/dashboard/settings/CodeConfirmationDialog.js","components/transportCompanyResponsibles/dashboard/settings/UsernameAndEmailSettings.js","components/transportCompanyResponsibles/dashboard/settings/PasswordSettings.js","components/transportCompanyResponsibles/dashboard/settings/Settings.js","components/transportCompanyResponsibles/dashboard/trucks/truckList/TruckDialog.js","components/transportCompanyResponsibles/dashboard/trucks/truckList/DriverDialog.js","components/transportCompanyResponsibles/dashboard/trucks/truckList/TruckMap.js","components/transportCompanyResponsibles/dashboard/trucks/truckList/LocateTruckDialog.js","components/transportCompanyResponsibles/dashboard/trucks/truckList/TruckListItem.js","components/transportCompanyResponsibles/dashboard/trucks/truckList/TrucksList.js","components/transportCompanyResponsibles/dashboard/trucks/truckList/TruckList.js","components/transportCompanyResponsibles/dashboard/trucks/truckJobs/truckJobsTable/truckJobDetails/DriverReviewContainer.js","components/transportCompanyResponsibles/dashboard/trucks/truckJobs/truckJobsTable/truckJobDetails/UserDetailsContainer.js","components/transportCompanyResponsibles/dashboard/trucks/truckJobs/truckJobsTable/truckJobDetails/TruckJobDetails.js","components/transportCompanyResponsibles/dashboard/trucks/truckJobs/truckJobsTable/TruckJobDetailsDialog.js","components/transportCompanyResponsibles/dashboard/trucks/truckJobs/truckJobsTable/TruckJobsRow.js","components/transportCompanyResponsibles/dashboard/trucks/truckJobs/truckJobsTable/TruckJobsTable.js","components/transportCompanyResponsibles/dashboard/trucks/truckJobs/truckJobsTable/SearchTruckJobsDialog.js","components/transportCompanyResponsibles/dashboard/trucks/truckJobs/truckJobsTable/TruckJobs.js","components/transportCompanyResponsibles/dashboard/trucks/truckJobs/TruckJobsBrowser.js","components/transportCompanyResponsibles/dashboard/trucks/truckJobs/TruckJobs.js","components/transportCompanyResponsibles/dashboard/trucks/Trucks.js","components/transportCompanyResponsibles/dashboard/questions/AskQuestionDialog.js","components/transportCompanyResponsibles/dashboard/questions/DeleteQuestionDialog.js","components/transportCompanyResponsibles/dashboard/questions/QuestionListItem.js","components/transportCompanyResponsibles/dashboard/questions/QuestionsList.js","components/transportCompanyResponsibles/dashboard/questions/Questions.js","components/transportCompanyResponsibles/dashboard/financialAccounts/accountStatement/AccountStatementRow.js","components/transportCompanyResponsibles/dashboard/financialAccounts/accountStatement/AccountStatementTable.js","components/transportCompanyResponsibles/dashboard/financialAccounts/accountStatement/AccountStatement.js","components/transportCompanyResponsibles/dashboard/financialAccounts/trucksAccountStatement/accountStatement/AccountStatementRow.js","components/transportCompanyResponsibles/dashboard/financialAccounts/trucksAccountStatement/accountStatement/AccountStatementTable.js","components/transportCompanyResponsibles/dashboard/financialAccounts/trucksAccountStatement/accountStatement/SearchTransactionsDialog.js","components/transportCompanyResponsibles/dashboard/financialAccounts/trucksAccountStatement/accountStatement/AccountStatement.js","components/transportCompanyResponsibles/dashboard/financialAccounts/trucksAccountStatement/TruckAccountStatementBrowser.js","components/transportCompanyResponsibles/dashboard/financialAccounts/trucksAccountStatement/TrucksAccountStatements.js","components/transportCompanyResponsibles/dashboard/financialAccounts/FinancialAccounts.js","components/transportCompanyResponsibles/dashboard/TransportComapanyResponsiblesDashboard.js","controls/BackToTop.js","components/shared/Footer.js","App.js","index.js","res/strings.js"],"names":["firebaseApp","Header","props","logOut","event","preventDefault","localStorage","userToken","removeItem","Token","history","push","state","DriverLoggedIn","bind","token","dashboardRoute","jwt_decode","DriverID","TraderID","AdministratorID","TransportCompanyResponsibleID","loginRegisterLinks","className","to","userLinks","onClick","this","type","data-toggle","data-target","Strings","APP_NAME","toUpperCase","id","Component","withRouter","Landing","class","style","width","backgroundColor","alt","src","data-source-index","color","height","fontWeight","href","textDecoration","registerDriver","newCredentials","a","async","axios","post","NAQEL_SERVER","Username","Email","Password","RegisterAs","then","response","data","localeCompare","USERNAME_OR_EMAIL_TAKEN","setItem","setupDriverAccount","newDriver","FirstName","LastName","DateOfBirth","Gender","Address","PhoneNumber","Nationality","console","log","loginDriver","driver","EmailOrUsername","SignInAs","getData","request","Get","get","params","Params","headers","Authorization","uploadDriverProfilePhoto","driverProfilePhoto","PhotoURL","FileName","generalSettings","updatedDriver","validateUsername","username","validateEmail","email","sendCode","usernameAndEmailSettings","validatePassword","passwordPackage","passwordSettings","addTruck","newTruck","PlateNumber","Owner","ProductionYear","Brand","Model","Type","MaximumWeight","updateTruckPhoto","updatedTruck","updateTruck","deleteTruck","discardedTruck","delete","addTrailer","newTrailer","deleteTrailer","discardedTrailer","TrailerID","addDrivingLicence","newDrivingLicence","LicenceNumber","ReleaseDate","ExpiryDate","updateDrivingLicence","updatedDrivingLicence","deleteDrivingLicence","discardedDrivingLicence","addEntryExitCard","newEntryExitCard","EntryExitNumber","NumberOfMonths","updateEntryExitCard","updatedEntryExitCard","deleteEntryExitCard","discardedEntryExitCard","addIdentityCard","newIdentityCard","IDNumber","updateIdentityCard","updatedIdentityCard","deleteIdentityCard","discardedIdentityCard","addPermitLicence","newPermitLicence","PermitNumber","Code","Place","deletePermitLicence","discardedPermitLicence","PermitLicenceID","updatePermitLicence","updatedPermitLicence","addJobRequest","newJobRequest","LoadingPlace","LoadingLat","LoadingLng","UnloadingPlace","UnloadingLat","UnloadingLng","TripType","Price","updateJobRequest","updatedJobRequest","JobRequestID","deleteJobRequest","discardedJobRequest","addDriverRequest","newDriverRequest","JobOfferID","deleteDriverRequest","discardedDriverRequest","addObjectionReason","newObjectionReason","Reason","addJobObjection","newJobObjection","OnGoingJobID","Comment","finishJob","finishedJob","toggleSelectTraderRequest","toggleSelectedTraderRequest","TraderRequestID","Selected","approveTraderPayProof","approvedTraderPayProof","TraderPayProofID","addDriverPayProof","newDriverPayProof","DriverBillID","deleteDriverPayProof","discardedDriverPayProof","DriverPayProofID","addQuestion","newQuestion","Question","deleteQuestion","discardedQuestion","DriverQuestionID","getClientSecret","newClientSecret","Amount","addDriverPayDetails","newDriverPayDetails","OwnerName","OwnerEmail","CardType","registerTrader","res","setupTraderAccount","newTrader","loginTrader","trader","catch","error","uploadTraderProfilePhoto","traderProfilePhoto","updatedTrader","addJobOffer","newJobOffer","CargoType","CargoWeight","LoadingDate","LoadingTime","EntryExit","AcceptedDelay","JobOfferType","updateJobOffer","updatedJobOffer","deleteJobOffer","discardedJobOffer","addTraderRequest","newTraderReqeust","deleteTraderRequest","discardedTraderRequest","approveJob","approvedJob","addDriverReview","newDriverReview","CompletedJobID","Rating","Review","addOnGoingJobFromJobOffer","newOnGoingJob","DriverRequestID","addOnGoingJobFromJobRequest","addDriverReviewFromOnGoingJob","addTraderPayProof","newTraderPayProof","TraderBillID","deleteTraderPayProof","discardedTraderPayProof","requestSpecialBill","requestedSpecialBill","TraderQuestionID","addTraderPayDetails","newTraderPayDetails","registerAdministrator","setupAdministratorAccount","newAdministrator","AdministratorSecret","loginAdministrator","administrator","uploadProfilePhoto","profilePhoto","updatedAdministrator","updateNaqelSettings","updatedNaqelSettings","Street","City","Country","ZIPCode","Website","BusinessName","BankName","AccountNumber","activateDriverAccount","activatedDriver","blockDriverAccount","blockedDriver","BlockDate","unblockDriverAccount","unblockedDriver","setRefundRate","traderRefundRate","RefundRate","exonerateTrader","exoneratedTrader","ExonerateDate","chargeTrader","chargedTrader","addTraderObjectionReason","newTraderObjectionReason","deleteTraderObjectionReason","discardedTraderObjectionReason","DriverObjectionReasonID","verifyTraderObjectionReason","verifiedTraderObjectionReason","addDriverObjectionReason","newDriverObjectionReason","deleteDriverObjectionReason","discardedDriverObjectionReason","verifyDriverObjectionReason","verifiedDriverObjectionReason","discardObjectionableJob","discardedObjectionableJob","addDriverAnswer","driverAnswer","Answer","addDriverQuestionClass","newDriverQuestionClass","Class","classifyDriverQuestion","classifiedDriverQuestion","addTraderAnswer","traderAnswer","addTraderQuestionClass","newTraderQuestionClass","classifyTraderQuestion","classifiedTraderQuestion","addResponsibleAnswer","responsibleAnswer","ResponsibleQuestionID","addResponsibleQuestionClass","newResponsibleQuestionClass","classifyResponsibleQuestion","classifiedResponsibleQuestion","setGlobalFeeRate","feeRate","FeeRate","setTemporaryFeeRate","temporaryFeeRateDate","Date","clearTemporaryFeeRate","clearedtemporaryFeeRate","addPriceRange","newPriceRange","StartRange","EndRange","updatePriceRange","updatedPriceRange","PriceRangeID","deletePriceRange","discardedPriceRange","addTraderRate","newTraderRate","updateTraderRate","updatedTraderRate","TraderRateID","deleteTraderRate","discardedTraderRate","approveDriverPayProof","approvedDriverPayProof","registerTransportCompanyResponsible","setupTransportCompanyResponsibleAccount","newTransportCompanyResponsible","Name","loginTransportCompanyResponsible","transportCompanyResponsible","addCommercialRegisterCertificate","newCommercialRegisterCertificate","updateCommercialRegisterCertificate","updatedCommercialRegisterCertificate","deleteCommercialRegisterCertificate","discardedCommercialRegisterCertificate","updatedTransportCompanyResponsible","Required","paddingLeft","PreloaderScreen","background","position","zIndex","top","display","alignItems","justifyContent","Preloader","textAlign","LoginCardBack","backgroundImage","backgroundAttachment","backgroundRepeat","backgroundSize","RegisterCardBack","EmailConfirmationCardBack","AccountSetupCardBack","CongratulationsCardBack","Card","padding","alignContent","boxShadow","CardLarge","CardXLarge","margin","CardChild","CardTitle","paddingTop","Login","onChange","name","target","value","setState","validateField","onSubmit","ValidForm","user","Message","LoggedInAsDriver","LoginError","LoggedInAsAdministrator","LoggedInAsTCResponsible","LoggedInAsTrader","ValidEmailOrUsername","ValidPassword","Errors","field","noValidate","htmlFor","placeholder","aria-haspopup","role","aria-expanded","aria-labelledby","e","disabled","Register","ConfirmPassword","NullError","UsernameOrEmailTaken","newCredentialsToken","PasswordsMatched","ValidEmail","Agreed","fieldValidationErrors","match","length","refs","agreementCheckBox","checked","validateForm","autocomplete","required","maxWidth","ref","AgreementError","tabindex","aria-hidden","String","data-dismiss","EmailConfirmation","NewCredentials","ConfirmationCode","ValidConfirmationCode","AccountSetup","verifiedCredentialsToken","decoded","newUser","ValidFirstName","ValidLastName","ValidDateOfBirth","ValidNationality","ValidAddress","ValidPhoneNumber","atl","rows","SetupAdministratorAccount","verifiedCredentials","errors","ValidAdministratorSecret","SetupTransportCompanyResponsibleAccount","ValidName","IsCreatedSuccessfully","ProfilePhoto","onImageUpload","Image","files","formData","FormData","append","IMAGE_UPLOADER","onUploadProgress","UploadProgress","message","imageUrl","filename","photoURL","ImageURL","fileInput","click","border","ImageUploader","startsWith","OnInvalidImageSelected","exception","OnImageUploaded","Source","AddDrivingLicenceDialog","OnOK","cancelButton","ValidLicenceNumber","ValidType","ValidReleaseDate","ValidExpiryDate","ValidPhotoURL","getTime","tabIndex","Height","Width","ImageCategory","autoComplete","OnCancel","AddDrivingLicenceButton","minWidth","onMouseDown","OnDocumentsUpdated","AddEntryExitCardDialog","ValidEntryExitNumber","ValidNumberOfMonths","releaseDate","expiryDate","setMonth","getMonth","toLocaleString","AddEntryExitCardButton","AddIdentityCardDialog","ValidIDNumber","min","max","AddIdentityCardButton","EditDrivingLicenceDialog","drivingLicence","DrivingLicence","DrivingLicenceID","DrivingLicenceListItem","onDelete","onComponentUpdated","borderTop","borderRadius","Index","overflow","EditEntryExitCardDialog","entryExitCard","EntryExitCard","EntryExitCardListItem","EntryExitCardID","EditIdentityCardDialog","identityCard","IdentityCard","IdentityCardListItem","IdentityCardID","DocumentsList","onDocumentsUpdated","index","undefined","marginTop","Size","Color","Label","PageHeading","Heading","Profile","Active","RatingAndReviews","WarningAlert","Driver","ratingAndReviews","Reviews","TruckSettings","OnTruckSettingsUpdated","ValidOwner","ValidPlateNumber","ValidProductionYear","ValidBrand","ValidModel","ValidMaximumWeight","truck","Truck","currentYear","getFullYear","AddTruckDialog","ShowPreloader","AddTrailerDialog","AddTrailer","paddingBottom","marginBottom","OnTrailerAdded","EditTrailerDialog","updatedTrailer","Trailer","updateTrailer","dialogID","TrailersList","Trailers","OnTrailersUpdated","EditTrailerDialogs","map","key","editTrailerDialogs","showPreloader","AddPermitLicenceDialog","ValidPermitNumber","ValidCode","ValidPlace","EditPermitLicenceDialog","PermitLicence","DialogID","PermitLicenceListItem","permitLicenceID","OnPermitLicenceUpdated","AllPermitLicences","PermitLicences","EditPermitLicenceDialogs","SearchString","permitLicence","ProgressBar","PermitLicencesList","Searching","onSearch","allPermitLicences","filteredPermitLicences","i","includes","permitLicences","paddingRight","Permits","onPermitLicencesUpdated","permitLicencesList","SearchingContainer","searching","searchingFor","SearchingFor","ProgressRing","EarningListItem","earning","Earning","created","Created","toFixed","JobNumber","DuesPaid","toDateString","toLocaleTimeString","EarningsList","Earnings","NetEarning","refresh","Refreshing","Refresh","earnings","netEarning","FinancialAffairs","IdentityCardContainer","CommercialRegisterCertificateContainer","commercialRegisterCertificate","CommercialRegisterCertificate","Number","getPublicData","DocumentsDialog","TraderDocuments","traderDocuments","TraderContainer","TraderProfile","traderProfile","Trader","onJob","OnJob","UUID","substring","TabView","DocumentsContainer","ProfileDialog","aria-controls","RefreshTrader","RefreshDocuments","TraderRequestContainer","traderRequest","TraderRequest","toTimeString","RequestDialog","TraderRequestRow","onToggleSelect","traderRequestID","isSelected","selectedTraderRequest","OnTraderRequestUpdated","traderRequestPackage","TraderRequestPackage","traderOnJob","TraderOnJob","requestSelected","profileIndex","requestIndex","RefreshTraderContainer","RefreshDocumentsContainer","TraderRequestsTable","OnRequestsFound","TraderRequestPackages","RequestSelected","traderRequestPackages","PlaceInput","address","onSelect","geocodeByAddress","results","location","geometry","lat","lng","place","Lat","Lng","OnPlaceSelected","getInputProps","suggestions","getSuggestionItemProps","loading","suggestion","active","cursor","description","EditJobRequestDialog","JobRequest","ValidLoadingPlace","ValidUnloadingPlace","ValidPrice","step","JobRequestContainer","jobRequest","createdHoursAgo","Math","abs","TimeCreated","WaitingTime","JobRequestPackageItem","jobRequestID","OnJobRequestUpdated","NumberOfRequests","JobRequestPackage","CanEdit","RefreshTraderRequestsTable","number","AddJobRequestDialog","JobRequestsList","AllJobRequestPackages","JobRequests","JobRequestPackages","allJobRequestPackages","filteredJobRequestPackages","count","jobRequestPackage","jobRequestPackages","JobOfferContainer","jobOffer","JobOffer","loadingDate","setHours","parseInt","setMinutes","setSeconds","BidJobOfferDialog","IsRequestSent","DriverRequest","stateValidForm","JobOfferPostsList","onCancelRequest","OnRequestUpdated","onSendRequest","JobOfferPost","RequestSent","RequestButton","driverRequest","JobOfferPosts","jobOfferPost","JobOfferPostListItem","jobOfferPosts","List","MapWrapped","withScriptjs","withGoogleMap","useState","SelectedJobOffer","SetSelectedJobOffer","defaultZoom","defaultCenter","center","icon","url","scaledSize","window","google","maps","onCloseClick","JobOffersGoogleMap","googleMapURL","loadingElement","containerElement","mapElement","JobOffersMap","Map","JobOffers","RefreshMap","firebase","apps","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Directions","SetDirections","OnGoingJob","directionsService","DirectionsService","origin","destination","route","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","directions","options","suppressMarkers","DriverLocation","OnGoingJobMap","ReasonsList","ObjectionReasons","NewReason","objectionReasons","ObjectionReason","AddPressed","ValidNewReason","objectionReason","OnReasonSelected","AddObjectionDialog","ValidReason","ValidComment","readonly","reason","JobObjectionContainer","JobObjection","createdOn","objectionBy","ObjectionBy","Objections","JobObjections","jobObjections","jobObjection","JobContainer","onGoingJob","Job","JumbotronContent","hasObjections","HasObjections","CompletedByDriver","dateDifference","days","floor","hours","minutes","round","dayString","hourString","minuteString","remainingTime","FinishJobDialog","onYes","Progress","completedByDriver","OnGoingJobOptions","completedByTrader","CompletedByTrader","OnJobFinished","Loading","Database","FirebaseApp","database","child","on","snapshot","driverLocation","val","locationCoordinates","split","parseFloat","RefreshObjections","OnObjectionAdded","OnJobRemoved","CompletedJobContainer","completedJob","CompletedJob","PayProofContainer","payProof","PayProof","Approved","PayProofDetails","onApprovePayment","OnPayProofApproved","PayDetailsContainer","PayDetails","PaymentDetails","TraderPaymentDetails","IsOnlinePayment","MoreDetails","traderID","completedJobID","RefreshPaymentDetails","CompletedJobPackageListItem","CompletedJobPackage","billPaid","BillPaid","driverReview","DriverReview","CompletedJobsList","AllCompletedJobPackages","CompletedJobPackages","SearchDate","allCompletedJobPackages","filteredCompletedJobPackages","searchString","completedJobPackage","completedJobPackages","completedJobPackageItem","CompletedJobs","Jobs","RefreshJobRequests","RefreshJobOffers","RefreshOnGoingJob","RefreshCompletedJobs","BillContainer","bill","Bill","BillNumber","Paid","BillData","billData","naqelSettings","NaqelSettings","PrintBillDialog","trigger","content","AddPayProofDialog","OnPayProofDeleted","PayOnlineDialog","onCardInputChange","CheckOut","toggleCard","toggle","ShowCard","billingDetails","stripe","Stripe","elements","Elements","cardElement","getElement","CardElement","clientSecret","ClientSecret","createPaymentMethod","card","billing_details","paymentMethodRequest","paymentMethod","brand","confirmCardPayment","payment_method","ToggleCard","Error","NewEmail","cardElementOpts","iconStyle","base","fontSize","fontFamily","iconColor","invalid","complete","hidePostalCode","borderColor","BillListItem","HasPayProof","HasPayDetails","OnPayProofUpdated","OnPayDetailsAdded","BillsList","Bills","NumberOfPaidBills","NumberOfUnpaidBills","bills","numberOfPaidBills","numberOfUnpaidBills","hasPayProof","billItem","stripePromise","loadStripe","STRIPE_PUBLISHABLE_KEY","Payments","AskQuestionDialog","ValidQuestion","DriverQuestionContainer","askedOn","askedBy","AskedBy","DriverAnswer","answeredOn","answeredBy","AnsweredBy","QuestionNumber","Edited","DeleteQuestionDialog","QuestionListItem","OnQuestionDeleted","QuestionsList","AllQuestions","Questions","allQuestions","filteredQuestions","question","GeneralSettings","OnSettingsSaved","SettingsSaved","CodeConfirmationDialog","ConfirmCode","ValidConfirmCode","UsernameAndEmailSettings","NewUsername","ValidNewUsername","ValidNewEmail","CodeConfirmation","PasswordSettings","CurrentPassword","NewPassword","ValidCurrentPassword","ValidNewPassword","ValidConfirmPassword","Settings","componentDidMount","forceUpdate","BlockedUserContainer","BlockedUser","DriversDashboard","onCloseNavigation","Left","DashboardData","left","IsActiveAccount","RefreshEarnings","AddCommercialRegisterCertificateDialog","readOnly","AddCommercialRegisterCertificateButton","onRefresh","Key","random","EditCommercialRegisterCertificateDialog","CommercialRegisterCertificateListItem","ID","DrivingLicenceContainer","EntryExitCardContainer","DriverDocuments","driverDocuments","DriverContainer","DriverProfile","driverProfile","TrailerContainer","trailer","TrailersDialog","trailers","TruckContainer","OnTrailersFound","TruckProfile","truckProfile","SendTraderRequestDialog","newTraderRequest","ValidCargoType","ValidCargoWeight","ValidLoadingDate","ValidLoadingTime","ValidAcceptedDelay","TraderRequestDialog","AssignJobDialog","onAssignNow","CanAssign","price","JobRequestPostListItem","Badge","JobRequestPost","driverOnJob","DriverOnJob","canAssign","assignJobIndex","OnJobAssigned","RefreshDriverContainer","RefreshTruckContainer","JobRequestPostsList","JobRequestPosts","jobRequestPost","jobRequestPosts","JobRequestWindow","SelectedJobRequest","SetSelectedJobRequest","JobRequestsGoogleMap","JobRequestsMap","RefreshDriver","TruckDialog","TrailersContainer","DriverRequestRow","driverRequestPackage","DriverRequestPackage","truckIndex","DriverRequestsTable","DriverRequestPackages","DriverRequests","jobOfferType","driverRequestPackages","EditJobOfferDialog","aria-pressed","JobOfferPackageItem","jobOfferID","OnJobOfferUpdated","JobOfferPackage","hasDriverRequests","HasDriverRequests","RefreshDriverRequestsTable","AddJobOfferDialog","JobOffersList","AllJobOfferPackages","JobOfferPackages","allJobOfferPackages","filteredJobOfferPackages","jobOfferPackage","jobOfferPackages","ApproveJobDialog","onApprove","InteractiveRating","onRate","rating","OnRated","title","ReviewDialog","ValidRating","ValidReview","DriverRated","onGoingJobID","driverRated","OnReviewAdded","jobPackage","SpecialBill","SpecialTraderBill","PrintSpecialBillDialog","jobNumber","RequestSpecialBillDialog","TraderBill","canRequestSpecialBills","CanRequestSpecialBills","specialBill","OnSpecialBillRequested","TraderQuestionContainer","TraderAnswer","ExoneratedTrader","TradersDashboard","ExoneratedTraderContainer","OnProfilePhotoUpdated","Administrator","ValidStreet","ValidCity","ValidCountry","ValidZIPCode","ValidWebsite","ValidBusinessName","ValidBankName","ValidAccountNumber","BlockAccountDialog","ValidBlockDate","UnblockAccountDialog","onUnblock","DriverListItem","onActivateAccount","OnAccountActivated","IsBlocked","OnAccountBlocked","DriversList","AllDrivers","Drivers","allDrivers","filteredDrivers","drivers","driverItem","isBlocked","SetRefundRateDialog","TraderRefundRate","ValidRefundRate","ChargeTraderDialog","onCharge","ExonerateTraderDialog","ValidExonerateDate","TraderListItem","IsExonerated","refundRate","OnRefundRateSet","OnTraderExonerated","TradersList","AllTraders","Traders","allTraders","filteredTraders","traders","traderItem","isExonerated","AddObjectionReasonDialog","ObjectionReasonListItem","ShowProgressRing","OnObjectionReasonUpdated","onVerify","ObjectionReasonsList","AllObjectionReasons","allObjectionReasons","filteredObjectionReasons","TraderObjectionReasons","DriverObjectionReasons","OnObjectionsFound","DiscardObjectionableJobDialog","onDiscard","ObjectionableJobListItem","NumberOfObjections","ObjectionableJob","numberOfObjections","OnJobDiscarded","ObjectionableJobsList","AllObjectionableJobs","ObjectionableJobs","allObjectionableJobs","filteredObjectionableJobs","objectionableJob","AnswerDriverQuestionDialog","ValidAnswer","DriverQuestionClasses","QuestionClasses","NewClass","questionClasses","QuestionClass","ValidNewClass","questionClass","OnClassSelected","ClassifyDriverQuestionDialog","onClassSelected","DriverQuestionListItem","OnQuestionUpdated","DriverQuestionsList","DriverQuestions","AnswerTraderQuestionDialog","TraderQuestionClasses","ClassifyTraderQuestionDialog","TraderQuestionListItem","TraderQuestionsList","TraderQuestions","ResponsibleQuestionContainer","ResponsibleAnswer","AnswerResponsibleQuestionDialog","ResponsibleQuestionClasses","ClassifyResponsibleQuestionDialog","ResponsibleQuestionListItem","ResponsibleQuestionsList","ResponsibleQuestions","SetGlobalFeeRateDialog","ValidFeeRate","SetTemporaryFeeRateDialog","temporaryFeeRateData","ValidDate","ClearTemporaryFeeRateDialog","onClear","clearedTemporaryFeeRate","GlobalAndTemporaryRates","GlobalFeeRate","TemporaryFeeRateData","dateUpTo","UpdatePriceRangeDialog","PriceRangeListItem","PriceRange","OnPriceRangeDeleted","OnPriceRangeUpdated","AddPriceRangeDialog","ValidStartRange","ValidEndRange","PriceRangesList","PriceRanges","priceRange","priceRanges","priceRangeItem","GeneralRates","UpdateTraderRateDialog","TraderRateListItem","TraderRate","OnTraderRateDeleted","OnTraderRateUpdated","AddTraderRateDialog","ValidUsername","TraderRatesList","AllTraderRates","TraderRates","allTraderRates","filteredTraderRates","traderRate","traderRates","traderRateItem","FeeRates","PayProofDialog","PayDetailsDialog","TradersBillListItem","TraderPayProof","TraderPayDetails","TradersBillsList","AllBills","allBills","filteredBills","TradersBills","DriversBillListItem","DriverPayProof","DriverPayDetails","DriversBillsList","DriversBills","RowData","toLocaleDateString","PaymentMethod","RecipientAmount","ChargedAmount","AccountStatementData","AccountStatement","TotalRecipientAmount","TotalChargedAmount","TotalAmount","OnSearch","TraderAccountStatement","traderAccountStatement","TraderAccountStatementBrowser","SearchAccountStatement","TraderAccountStatements","AmountEarned","AmountCharged","NetAmount","DriverAccountStatement","driverAccountStatement","DriverAccountStatementBrowser","DriverAccountStatements","Transaction","TruckNumber","TraderBillNumber","TraderBillPaid","TraderPaymentMethod","DriverBillNumber","DriverBillPaid","DriverPaymentMethod","Earned","Charged","transportCompany","TransportCompany","netAmount","netEarned","netCharged","Transactions","transaction","InternalNumber","CommercialRegisterNumber","ResponsibleAccountStatement","responsibleAccountStatement","ResponsibleAccountStatementBrowser","ResponsibleAccountStatements","UserAccountStatements","Payee","PayeeType","accountStatement","FinancialAccounts","AdministratorsDashboard","OnCertificateDeleted","OnCertificateUpdated","updatedCertificate","TransportCompanyResponsible","TruckMap","LocateTruckDialog","locateTruck","LocateTruck","TruckListItem","DriverDialog","TrucksList","Trucks","TruckList","DriverReviewContainer","UserDetailsContainer","TruckJobDetails","JobDetails","TruckJobDetailsDialog","searchTruckJobDetails","SearchTruckJobDetails","jobDetails","TruckJobsRow","TruckJob","TruckJobsTable","TruckJobs","truckJob","SearchTruckJobsDialog","StartDate","EndDate","StartPrice","EndPrice","filteredTruckJobs","slice","indicesToRemove","startDate","splice","endDate","searchTruckJobs","truckNumber","AllTruckJobs","ShowingSearchResults","SearchTruckJobs","truckJobs","TruckJobsBrowser","AccountStatementRow","AccountStatementTable","TCResponsibleAccountStatement","tCResponsibleAccountStatement","SearchTransactionsDialog","filteredTransactions","searchTruckAccountStatement","AllTransactions","SearchTruckAccountStatement","TruckAccountStatement","transactions","truckAccountStatement","TruckAccountStatementBrowser","TrucksAccountStatements","TransportCompanyResponsiblesDashboard","BackToTop","right","bottom","Footer","asp-area","asp-controller","asp-action","App","basename","exact","path","component","Congratulations","ReactDOM","render","document","getElementById","module","exports","USER_TOKEN","USER_NOT_FOUND","INVALID_PASSWORD","STRIPE_SECRET_KEY"],"mappings":"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","file":"static/js/main.4f2061e7.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst FirebaseConfiguration = {\r\n    apiKey: \"AIzaSyCeVZ0rXxY1ZVX_6O3N9UkxBByQXnNKWMo\",\r\n    authDomain: \"naqel-transport-jobs.firebaseapp.com\",\r\n    databaseURL: \"https://naqel-transport-jobs.firebaseio.com\",\r\n    projectId: \"naqel-transport-jobs\",\r\n    storageBucket: \"naqel-transport-jobs.appspot.com\",\r\n    messagingSenderId: \"331974863267\",\r\n    appId: \"1:331974863267:web:9a8f80195b8bc8e9b5d216\",\r\n    measurementId: \"G-Q3X399QB20\"\r\n};\r\n\r\nlet firebaseApp;\r\n\r\nif (!firebase.apps.length) {\r\n    firebaseApp = firebase.initializeApp(FirebaseConfiguration);\r\n}\r\n\r\nexport default firebaseApp;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Strings from \"../../res/strings\"\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DriverLoggedIn: false\r\n        };\r\n\r\n        this.logOut = this.logOut.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    logOut = event => {\r\n        event.preventDefault();\r\n\r\n        if (localStorage.userToken) {\r\n            localStorage.removeItem(\"userToken\");\r\n        }\r\n        else if (localStorage.Token) {\r\n            localStorage.removeItem(\"Token\");\r\n        }\r\n\r\n        this.props.history.push(`/login`);\r\n    }\r\n\r\n    render() {\r\n        let token;\r\n        let dashboardRoute;\r\n\r\n        if (localStorage.Token) {\r\n            token = jwt_decode(localStorage.Token);\r\n\r\n            if (token.DriverID) {\r\n                dashboardRoute = \"/drivers\";\r\n            }\r\n            else if (token.TraderID) {\r\n                dashboardRoute = \"/traders\";\r\n            }\r\n            else if (token.AdministratorID) {\r\n                dashboardRoute = \"/administrators\";\r\n            }\r\n            else if (token.TransportCompanyResponsibleID) {\r\n                dashboardRoute = \"/transportCompanyResponsibles\";\r\n            }\r\n            else {\r\n                dashboardRoute = \"/login\";\r\n            }\r\n        }\r\n\r\n        const loginRegisterLinks = <ul className=\"nav navbar-nav navbar-right\">\r\n            <li>\r\n                <Link to=\"/register\">Register</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/login\">Login</Link>\r\n            </li>\r\n        </ul>;\r\n\r\n        const userLinks = <ul className=\"nav navbar-nav navbar-right\">\r\n            <li>\r\n                <Link to={dashboardRoute}>Dashboard</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"\" onClick={this.logOut.bind(this)}>Logout</Link>\r\n            </li>\r\n        </ul>;\r\n\r\n        return (\r\n            <header>\r\n                <nav className=\"navbar navbar-default\">\r\n                    <div className=\"navbar-local color-accent theme-dark\">\r\n                        <div className=\"container\">\r\n                            <div className=\"navbar-header\">\r\n                                <button type=\"button\" className=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-2\">\r\n                                    <span className=\"sr-only\">Toggle navigation</span>\r\n                                    <i className=\"glyph glyph-hamburger\"></i>\r\n                                </button>\r\n                                <Link to=\"/\" className=\"navbar-brand\">{Strings.APP_NAME.toUpperCase()}</Link>\r\n                            </div>\r\n                            <div className=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-2\">\r\n                                <ul className=\"nav navbar-nav\"></ul>\r\n                                {localStorage.Token ? userLinks : loginRegisterLinks}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n        );\r\n    }\r\n};\r\n\r\nexport default withRouter(Header);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n        return <section>\r\n            <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                            <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                alt=\"truck.png\" src=\"./images/truck.png\" data-source-index=\"2\" />\r\n                        </div>\r\n                        <div class=\"col-md-12 col-md-pull-12\">\r\n                            <div class=\"type-h3\" style={{ color: \"#008575\", }}>Weclome to Naqel</div>\r\n                            <div class=\"type-sh3\" style={{ color: \"#949496\", }}>Transport Services On-The-Go</div>\r\n                            <p style={{ color: \"#D1D2D4\", }}>Welcome to Naqel! If you are a trader or a broker, and you want to publish job opportunities for drivers nearby, well, you are on the right place. Naqel is a mediator among traders, brokers and drivers, and provides intuitive and secure way to get transport services.</p>\r\n                            <p style={{ color: \"#D1D2D4\", }}>Not a Trader or a Broker? No worries! Naqel provides services for drivers too. If you are a driver, and you are searching for job opportunities, you are just one step away. Create your account on our Web Service, and we will notify you job oppprtunities on your personal account.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#16171F\" }}>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                            <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                alt=\"oath.png\" src=\"./images/oath.png\" data-source-index=\"2\" />\r\n                        </div>\r\n                        <div class=\"col-md-12 col-md-pull-12\">\r\n                            <div class=\"type-h3\" style={{ color: \"#008575\", }}>Privacy</div>\r\n                            <div class=\"type-sh3\" style={{ color: \"#949496\", }}>Your Privacy is Important to Us</div>\r\n                            <p style={{ color: \"#D1D2D4\", }}>Naqel's Privacy Statement describes the types of data we collect from you, how we use your data, and the legal bases we have to process your data. The Privacy Statement also describes how Naqel uses your content, which is information submitted by you to Naqel via the Services.</p>\r\n                            <p style={{ color: \"#D1D2D4\", }}>Where processing is based on consent and to the extent permitted by law, by agreeing to these Terms, you consent to Naqel's collection, use and disclosure of your content and data as described in the privacy statement.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#00201C\" }}>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                            <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                alt=\"account.png\" src=\"./images/account.png\" data-source-index=\"2\" />\r\n                        </div>\r\n                        <div class=\"col-md-12 col-md-pull-12\">\r\n                            <div class=\"type-h3\" style={{ color: \"#008575\", }}>User Accounts</div>\r\n                            <div class=\"type-sh3\" style={{ color: \"#949496\", }}>Signup and/or Login</div>\r\n                            <p style={{ color: \"#D1D2D4\", }}>Do you want to use our services right now? No Worries! Just signup by filling up precise forms and/or login to your profile. Drivers can view job opprotunities on their dashboards. Traders and/or Brokers can post job requests for freight from thier accounts.</p>\r\n                            <div class=\"btn-group\">\r\n                                <Link to=\"/register\" class=\"btn btn-secondary\">Signup</Link>\r\n                                <Link to=\"/login\" class=\"btn btn-primary\">Login</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"jumbotron theme-dark\" style={{ backgroundColor: \"#202020\", height: \"100vh\" }}>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-24 text-center\">\r\n                            <div class=\"row section-gallery\">\r\n                                <div class=\"col-md-8\">\r\n                                    <h4 style={{ fontWeight: \"bold\", }}>LOCATION</h4>\r\n                                    <div class=\"type-p1 text-center\">\r\n                                        Wah\r\n                                            <br />\r\n                                            Punjab, Pakistan\r\n                                            </div>\r\n                                </div>\r\n                                <div class=\"col-md-8\">\r\n                                    <h4 style={{ fontWeight: \"bold\", }}>AROUND THE GLOBE</h4>\r\n                                    <div class=\"type-p1 text-center text-light\" style={{ color: \"#25AAE1\", }}>\r\n                                        <a class=\"fa\" href=\"#\">\r\n                                            <i class=\"fab fa-fw fa-facebook-f\"></i>\r\n                                        </a>\r\n                                        <a class=\"fa\" href=\"#\">\r\n                                            <i class=\"fab fa-fw fa-instagram\"></i>\r\n                                        </a>\r\n                                        <a class=\"fa\" href=\"#\">\r\n                                            <i class=\"fab fa-fw fa-twitter\"></i>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-8\">\r\n                                    <h4 style={{ fontWeight: \"bold\", }}>CONTACT US</h4>\r\n                                    <div class=\"type-p1 text-center\">Naqel is created by Core Infinite. For more information, visit <a style={{ textDecoration: \"none\", color: \"#008575\", }} href=\"#\" class=\"color-type-accent\">coreinfinte.com</a></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Landing;","import axios from \"axios\";\r\nimport Strings from \"../../res/strings\";\r\n\r\n// POST: Register\r\nexport const registerDriver = async newCredentials => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/register`, {\r\n        Username: newCredentials.Username,\r\n        Email: newCredentials.Email,\r\n        Password: newCredentials.Password,\r\n        RegisterAs: newCredentials.RegisterAs,\r\n    }).then(response => {\r\n        if (response.data.localeCompare(Strings.USERNAME_OR_EMAIL_TAKEN) === 0) {\r\n            return response.data;\r\n        }\r\n        else {\r\n            localStorage.setItem(\"newCredentialsToken\", response.data);\r\n            return response.data;\r\n        }\r\n    });\r\n};\r\n\r\n// POST: AccountSetup\r\nexport const setupDriverAccount = async newDriver => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/accountSetup`, {\r\n        Username: newDriver.Username,\r\n        Email: newDriver.Email,\r\n        Password: newDriver.Password,\r\n        RegisterAs: newDriver.RegisterAs,\r\n        FirstName: newDriver.FirstName,\r\n        LastName: newDriver.LastName,\r\n        DateOfBirth: newDriver.DateOfBirth,\r\n        Gender: newDriver.Gender,\r\n        Address: newDriver.Address,\r\n        PhoneNumber: newDriver.PhoneNumber,\r\n        Nationality: newDriver.Nationality,\r\n    }).then(response => {\r\n        console.log(response.data);\r\n    });\r\n};\r\n\r\n// POST: Login\r\nexport const loginDriver = async driver => {\r\n    console.log(`Sending HTTP POST request on ${Strings.NAQEL_SERVER}drivers/login`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/login`, {\r\n        EmailOrUsername: driver.EmailOrUsername,\r\n        Password: driver.Password,\r\n        SignInAs: driver.SignInAs,\r\n    }).then(response => {\r\n        return response.data;\r\n    })\r\n};\r\n\r\n// GET: GetData\r\nexport const getData = async request => {\r\n    console.log(`Sending GET request to ${Strings.NAQEL_SERVER}drivers/get${request.Get}...`);\r\n    return await axios.get(`${Strings.NAQEL_SERVER}drivers/get${request.Get}`, {\r\n        params: request.Params,\r\n        headers: { Authorization: `JWT ${request.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UploadDriverProfilePhoto\r\nexport const uploadDriverProfilePhoto = async driverProfilePhoto => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/uploadDriverProfilePhoto`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/uploadDriverProfilePhoto`, {\r\n        PhotoURL: driverProfilePhoto.PhotoURL,\r\n        FileName: driverProfilePhoto.FileName\r\n    }, {\r\n        headers: { Authorization: `JWT ${driverProfilePhoto.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: GeneralSettings\r\nexport const generalSettings = async updatedDriver => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/generalSettings`, {\r\n        FirstName: updatedDriver.FirstName,\r\n        LastName: updatedDriver.LastName,\r\n        Address: updatedDriver.Address,\r\n        PhoneNumber: updatedDriver.PhoneNumber,\r\n        Gender: updatedDriver.Gender,\r\n        Nationality: updatedDriver.Nationality,\r\n        DateOfBirth: updatedDriver.DateOfBirth,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedDriver.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateUsername\r\nexport const validateUsername = async username => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/validateUsername`, {\r\n        Username: username\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateEmail\r\nexport const validateEmail = async email => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/validateEmail`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POSTL SendCode\r\nexport const sendCode = async email => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}users/sendCode...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/sendCode`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UsernameAndEmailSettings\r\nexport const usernameAndEmailSettings = async updatedDriver => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/usernameAndEmailSettings...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/usernameAndEmailSettings`, {\r\n        Username: updatedDriver.Username,\r\n        Email: updatedDriver.Email\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedDriver.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidatePassword\r\nexport const validatePassword = async passwordPackage => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/validatePassword`, {\r\n        Password: passwordPackage.Password\r\n    }, {\r\n        headers: { Authorization: `JWT ${passwordPackage.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: PasswordSettings\r\nexport const passwordSettings = async updatedDriver => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/passwordSettings`, {\r\n        Password: updatedDriver.Password,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedDriver.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddTruck\r\nexport const addTruck = async newTruck => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addTruck...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addTruck`, {\r\n        TransportCompanyResponsibleID: newTruck.TransportCompanyResponsibleID,\r\n        PlateNumber: newTruck.PlateNumber,\r\n        Owner: newTruck.Owner,\r\n        ProductionYear: newTruck.ProductionYear,\r\n        Brand: newTruck.Brand,\r\n        Model: newTruck.Model,\r\n        Type: newTruck.Type,\r\n        MaximumWeight: newTruck.MaximumWeight,\r\n        PhotoURL: newTruck.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTruck.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UpdateTruckPhoto\r\nexport const updateTruckPhoto = async updatedTruck => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateTruckPhoto...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateTruckPhoto`, {\r\n        PhotoURL: updatedTruck.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTruck.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UpdateTruck\r\nexport const updateTruck = async updatedTruck => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateTruck...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateTruck`, {\r\n        TransportCompanyResponsibleID: updatedTruck.TransportCompanyResponsibleID,\r\n        PlateNumber: updatedTruck.PlateNumber,\r\n        Owner: updatedTruck.Owner,\r\n        ProductionYear: updatedTruck.ProductionYear,\r\n        Brand: updatedTruck.Brand,\r\n        Model: updatedTruck.Model,\r\n        Type: updatedTruck.Type,\r\n        MaximumWeight: updatedTruck.MaximumWeight\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTruck.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deleteTruck\r\nexport const deleteTruck = async discardedTruck => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteTruck...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteTruck`, {\r\n        headers: { Authorization: `JWT ${discardedTruck.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddTrailer\r\nexport const addTrailer = async newTrailer => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addTrailer...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addTrailer`, {\r\n        MaximumWeight: newTrailer.MaximumWeight,\r\n        PhotoURL: newTrailer.PhotoURL,\r\n        Type: newTrailer.Type\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTrailer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteTrailer\r\nexport const deleteTrailer = async discardedTrailer => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteTrailer...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteTrailer`, {\r\n        headers: { Authorization: `JWT ${discardedTrailer.Token}` },\r\n        data: { TrailerID: discardedTrailer.TrailerID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateTrailer\r\nexport const updateTrailer = updatedTrailer => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateTrailer...`);\r\n    return axios.post(`${Strings.NAQEL_SERVER}drivers/updateTrailer`, {\r\n        TrailerID: updatedTrailer.TrailerID,\r\n        MaximumWeight: updatedTrailer.MaximumWeight,\r\n        PhotoURL: updatedTrailer.PhotoURL,\r\n        Type: updatedTrailer.Type\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTrailer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addDrivingLicence\r\nexport const addDrivingLicence = async newDrivingLicence => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addDrivingLicence...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addDrivingLicence`, {\r\n        LicenceNumber: newDrivingLicence.LicenceNumber,\r\n        Type: newDrivingLicence.Type,\r\n        ReleaseDate: newDrivingLicence.ReleaseDate,\r\n        ExpiryDate: newDrivingLicence.ExpiryDate,\r\n        PhotoURL: newDrivingLicence.PhotoURL,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newDrivingLicence.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateDrivingLicence\r\nexport const updateDrivingLicence = async updatedDrivingLicence => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateDrivingLicence...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateDrivingLicence`, {\r\n        LicenceNumber: updatedDrivingLicence.LicenceNumber,\r\n        Type: updatedDrivingLicence.Type,\r\n        ReleaseDate: updatedDrivingLicence.ReleaseDate,\r\n        ExpiryDate: updatedDrivingLicence.ExpiryDate,\r\n        PhotoURL: updatedDrivingLicence.PhotoURL,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedDrivingLicence.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteDrivingLicence\r\nexport const deleteDrivingLicence = async discardedDrivingLicence => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteDrivingLicence...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteDrivingLicence`, {\r\n            headers: { Authorization: `JWT ${discardedDrivingLicence.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addEntryExitCard\r\nexport const addEntryExitCard = async newEntryExitCard => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addEntryExitCard...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addEntryExitCard`, {\r\n        EntryExitNumber: newEntryExitCard.EntryExitNumber,\r\n        Type: newEntryExitCard.Type,\r\n        ReleaseDate: newEntryExitCard.ReleaseDate,\r\n        NumberOfMonths: newEntryExitCard.NumberOfMonths,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newEntryExitCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateEntryExiCard\r\nexport const updateEntryExitCard = async updatedEntryExitCard => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateEntryExitCard...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateEntryExitCard`, {\r\n        EntryExitNumber: updatedEntryExitCard.EntryExitNumber,\r\n        Type: updatedEntryExitCard.Type,\r\n        ReleaseDate: updatedEntryExitCard.ReleaseDate,\r\n        NumberOfMonths: updatedEntryExitCard.NumberOfMonths,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedEntryExitCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteEntryExitCard\r\nexport const deleteEntryExitCard = async discardedEntryExitCard => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteEntryExitCard...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteEntryExitCard`, {\r\n        headers: { Authorization: `JWT ${discardedEntryExitCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addIdentityCard\r\nexport const addIdentityCard = async newIdentityCard => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addIdentityCard...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addIdentityCard`, {\r\n        Token: newIdentityCard.Token,\r\n        IDNumber: newIdentityCard.IDNumber,\r\n        PhotoURL: newIdentityCard.PhotoURL,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateIdentityCard\r\nexport const updateIdentityCard = async updatedIdentityCard => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateIdentityCard...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateIdentityCard`, {\r\n        Token: updatedIdentityCard.Token,\r\n        IDNumber: updatedIdentityCard.IDNumber,\r\n        PhotoURL: updatedIdentityCard.PhotoURL,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteIdentityCard\r\nexport const deleteIdentityCard = async discardedIdentityCard => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteIdentityCard...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteIdentityCard`, {\r\n        headers: { Authorization: `JWT ${discardedIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addPermitLicence\r\nexport const addPermitLicence = async newPermitLicence => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addPermitLicence...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addPermitLicence`, {\r\n        PermitNumber: newPermitLicence.PermitNumber,\r\n        ExpiryDate: newPermitLicence.ExpiryDate,\r\n        PhotoURL: newPermitLicence.PhotoURL,\r\n        Code: newPermitLicence.Code,\r\n        Place: newPermitLicence.Place\r\n    }, {\r\n        headers: { Authorization: `JWT ${newPermitLicence.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deletePermitLicence\r\nexport const deletePermitLicence = async discardedPermitLicence => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deletePermitLicence...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deletePermitLicence`, {\r\n        headers: { Authorization: `JWT ${discardedPermitLicence.Token}` },\r\n        data: { PermitLicenceID: discardedPermitLicence.PermitLicenceID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updatePermitLicence\r\nexport const updatePermitLicence = async updatedPermitLicence => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updatePermitLicence...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updatePermitLicence`, {\r\n        PermitLicenceID: updatedPermitLicence.PermitLicenceID,\r\n        PermitNumber: updatedPermitLicence.PermitNumber,\r\n        ExpiryDate: updatedPermitLicence.ExpiryDate,\r\n        PhotoURL: updatedPermitLicence.PhotoURL,\r\n        Code: updatedPermitLicence.Code,\r\n        Place: updatedPermitLicence.Place\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedPermitLicence.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addJobRequest\r\nexport const addJobRequest = async newJobRequest => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addJobRequest...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addJobRequest`, {\r\n        LoadingPlace: newJobRequest.LoadingPlace,\r\n        LoadingLat: newJobRequest.LoadingLat,\r\n        LoadingLng: newJobRequest.LoadingLng,\r\n        UnloadingPlace: newJobRequest.UnloadingPlace,\r\n        UnloadingLat: newJobRequest.UnloadingLat,\r\n        UnloadingLng: newJobRequest.UnloadingLng,\r\n        TripType: newJobRequest.TripType,\r\n        Price: newJobRequest.Price,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newJobRequest.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateJobRequest\r\nexport const updateJobRequest = async updatedJobRequest => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateJobRequest...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateJobRequest`, {\r\n        JobRequestID: updatedJobRequest.JobRequestID,\r\n        LoadingPlace: updatedJobRequest.LoadingPlace,\r\n        LoadingLat: updatedJobRequest.LoadingLat,\r\n        LoadingLng: updatedJobRequest.LoadingLng,\r\n        UnloadingPlace: updatedJobRequest.UnloadingPlace,\r\n        UnloadingLat: updatedJobRequest.UnloadingLat,\r\n        UnloadingLng: updatedJobRequest.UnloadingLng,\r\n        TripType: updatedJobRequest.TripType,\r\n        Price: updatedJobRequest.Price,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedJobRequest.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteJobRequest\r\nexport const deleteJobRequest = async discardedJobRequest => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteJobRequest...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteJobRequest`, {\r\n        headers: { Authorization: `JWT ${discardedJobRequest.Token}` },\r\n        data: { JobRequestID: discardedJobRequest.JobRequestID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addDriverRequest\r\nexport const addDriverRequest = async newDriverRequest => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addDriverRequest...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addDriverRequest`, {\r\n        JobOfferID: newDriverRequest.JobOfferID,\r\n        Price: newDriverRequest.Price\r\n    }, {\r\n        headers: { Authorization: `JWT ${newDriverRequest.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deleteDriverRequest\r\nexport const deleteDriverRequest = async discardedDriverRequest => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteDriverRequest...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteDriverRequest`, {\r\n        headers: { Authorization: `JWT ${discardedDriverRequest.Token}` },\r\n        data: { JobOfferID: discardedDriverRequest.JobOfferID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addOnGoingJob\r\nexport const addOnGoingJob = async newOnGoingJob => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addOnGoingJob...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addOnGoingJob`, {\r\n        TraderRequestID: newOnGoingJob.TraderRequestID\r\n    }, {\r\n        headers: { Authorization: `JWT ${newOnGoingJob.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addObjectionReason\r\nexport const addObjectionReason = async newObjectionReason => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addObjectionReason...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addObjectionReason`, {\r\n        Reason: newObjectionReason.Reason\r\n    }, {\r\n        headers: { Authorization: `JWT ${newObjectionReason.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addJobObjection\r\nexport const addJobObjection = async newJobObjection => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addJobObjection...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addJobObjection`, {\r\n        OnGoingJobID: newJobObjection.OnGoingJobID,\r\n        Reason: newJobObjection.Reason,\r\n        Comment: newJobObjection.Comment\r\n    }, {\r\n        headers: { Authorization: `JWT ${newJobObjection.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: finishJob\r\nexport const finishJob = async finishedJob => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/finishJob...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/finishJob`, {}, {\r\n        headers: { Authorization: `JWT ${finishedJob.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: toggleSelectTraderRequest\r\nexport const toggleSelectTraderRequest = async toggleSelectedTraderRequest => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/toggleSelectTraderRequest...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/toggleSelectTraderRequest`, {\r\n        TraderRequestID: toggleSelectedTraderRequest.TraderRequestID,\r\n        Selected: toggleSelectedTraderRequest.Selected\r\n    }, {\r\n        headers: { Authorization: `JWT ${toggleSelectedTraderRequest.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: approveTraderPayProof\r\nexport const approveTraderPayProof = async approvedTraderPayProof => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/approveTraderPayProof...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/approveTraderPayProof`, {\r\n        TraderPayProofID: approvedTraderPayProof.TraderPayProofID\r\n    }, {\r\n        headers: { Authorization: `JWT ${approvedTraderPayProof.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addDriverPayProof\r\nexport const addDriverPayProof = newDriverPayProof => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}drivers/addDriverPayProof`, {\r\n        DriverBillID: newDriverPayProof.DriverBillID,\r\n        PhotoURL: newDriverPayProof.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${newDriverPayProof.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deleteDriverPayProof\r\nexport const deleteDriverPayProof = async discardedDriverPayProof => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteDriverPayProof...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteDriverPayProof`, {\r\n        headers: { Authorization: `JWT ${discardedDriverPayProof.Token}` },\r\n        data: { DriverPayProofID: discardedDriverPayProof.DriverPayProofID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addQuestion\r\nexport const addQuestion = newQuestion => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}drivers/addQuestion`, {\r\n        Question: newQuestion.Question\r\n    }, {\r\n        headers: { Authorization: `JWT ${newQuestion.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deleteQuestion\r\nexport const deleteQuestion = async discardedQuestion => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteQuestion...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteQuestion`, {\r\n        headers: { Authorization: `JWT ${discardedQuestion.Token}` },\r\n        data: { DriverQuestionID: discardedQuestion.DriverQuestionID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: getClientSecret\r\nexport const getClientSecret = newClientSecret => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}drivers/getClientSecret`, {\r\n        Amount: newClientSecret.Amount\r\n    }, {\r\n        headers: { Authorization: `JWT ${newClientSecret.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addDriverPayDetails\r\nexport const addDriverPayDetails = newDriverPayDetails => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}drivers/addDriverPayDetails`, {\r\n        DriverBillID: newDriverPayDetails.DriverBillID,\r\n        OwnerName: newDriverPayDetails.OwnerName,\r\n        OwnerEmail: newDriverPayDetails.OwnerEmail,\r\n        CardType: newDriverPayDetails.CardType\r\n    }, {\r\n        headers: { Authorization: `JWT ${newDriverPayDetails.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};","import axios from \"axios\";\r\nimport Strings from \"../../res/strings\";\r\n\r\n// POST: Register\r\nexport const registerTrader = async newCredentials => {\r\n    console.log(\"I'm in registerTrader axios...\");\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/register`, {\r\n        Username: newCredentials.Username,\r\n        Email: newCredentials.Email,\r\n        Password: newCredentials.Password,\r\n        RegisterAs: newCredentials.RegisterAs,\r\n    }).then(res => {\r\n        if (res.data.localeCompare(Strings.USERNAME_OR_EMAIL_TAKEN) === 0) {\r\n            return res.data;\r\n        }\r\n        else {\r\n            localStorage.setItem(\"newCredentialsToken\", res.data);\r\n            return res.data;\r\n        }\r\n    });\r\n};\r\n\r\n// POST: AccountSetup\r\nexport const setupTraderAccount = async newTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/accountSetup`, {\r\n        Username: newTrader.Username,\r\n        Email: newTrader.Email,\r\n        Password: newTrader.Password,\r\n        RegisterAs: newTrader.RegisterAs,\r\n        FirstName: newTrader.FirstName,\r\n        LastName: newTrader.LastName,\r\n        DateOfBirth: newTrader.DateOfBirth,\r\n        Gender: newTrader.Gender,\r\n        Address: newTrader.Address,\r\n        PhoneNumber: newTrader.PhoneNumber,\r\n        Nationality: newTrader.Nationality,\r\n    }).then(res => {\r\n        console.log(res.data);\r\n    });\r\n};\r\n\r\n// POST: Login\r\nexport const loginTrader = async trader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/login`, {\r\n        EmailOrUsername: trader.EmailOrUsername,\r\n        Password: trader.Password\r\n    }).then(response => {\r\n        return response.data;\r\n    }).catch(error => {\r\n        console.log(error);\r\n    });\r\n};\r\n\r\n// GET: GetData\r\nexport const getData = async request => {\r\n    console.log(`Sending GET request to ${Strings.NAQEL_SERVER}traders/get${request.Get}...`);\r\n    return await axios.get(`${Strings.NAQEL_SERVER}traders/get${request.Get}`, {\r\n        params: request.Params,\r\n        headers: { Authorization: `JWT ${request.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// GET: GetPublicData\r\nexport const getPublicData = async request => {\r\n    console.log(`Sending GET request to ${Strings.NAQEL_SERVER}users/get${request.Get}...`);\r\n    return await axios.get(`${Strings.NAQEL_SERVER}users/get${request.Get}`, {\r\n        params: request.Params\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UploadDriverProfilePhoto\r\nexport const uploadTraderProfilePhoto = async traderProfilePhoto => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/uploadTraderProfilePhoto`, {\r\n        PhotoURL: traderProfilePhoto.PhotoURL,\r\n        FileName: traderProfilePhoto.FileName\r\n    }, {\r\n        headers: { Authorization: `JWT ${traderProfilePhoto.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: GeneralSettings\r\nexport const generalSettings = async updatedTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/generalSettings`, {\r\n        FirstName: updatedTrader.FirstName,\r\n        LastName: updatedTrader.LastName,\r\n        Address: updatedTrader.Address,\r\n        PhoneNumber: updatedTrader.PhoneNumber,\r\n        Gender: updatedTrader.Gender,\r\n        Nationality: updatedTrader.Nationality,\r\n        DateOfBirth: updatedTrader.DateOfBirth,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTrader.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateUsername\r\nexport const validateUsername = async username => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/validateUsername`, {\r\n        Username: username\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateEmail\r\nexport const validateEmail = async email => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/validateEmail`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: SendCode\r\nexport const sendCode = async email => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/sendCode`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UsernameAndEmailSettings\r\nexport const usernameAndEmailSettings = async updatedTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/usernameAndEmailSettings`, {\r\n        Username: updatedTrader.Username,\r\n        Email: updatedTrader.Email\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTrader.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidatePassword\r\nexport const validatePassword = async passwordPackage => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/validatePassword`, {\r\n        Password: passwordPackage.Password\r\n    }, {\r\n        headers: { Authorization: `JWT ${passwordPackage.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: PasswordSettings\r\nexport const passwordSettings = async updatedTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/passwordSettings`, {\r\n        Password: updatedTrader.Password,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTrader.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addIdentityCard\r\nexport const addIdentityCard = newIdentityCard => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/addIdentityCard`, {\r\n        IDNumber: newIdentityCard.IDNumber,\r\n        PhotoURL: newIdentityCard.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${newIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateIdentityCard\r\nexport const updateIdentityCard = updatedIdentityCard => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/updateIdentityCard`, {\r\n        IDNumber: updatedIdentityCard.IDNumber,\r\n        PhotoURL: updatedIdentityCard.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteIdentityCard\r\nexport const deleteIdentityCard = discardedIdentityCard => {\r\n    return axios.delete(`${Strings.NAQEL_SERVER}traders/deleteIdentityCard`, {\r\n        headers: { Authorization: `JWT ${discardedIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addCommercialRegisterCertificate\r\nexport const addCommercialRegisterCertificate = newCommercialRegisterCertificate => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/addCommercialRegisterCertificate`, {\r\n        Number: newCommercialRegisterCertificate.Number,\r\n        Type: newCommercialRegisterCertificate.Type,\r\n        PhotoURL: newCommercialRegisterCertificate.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${newCommercialRegisterCertificate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateCommercialRegisterCertificate\r\nexport const updateCommercialRegisterCertificate = updatedCommercialRegisterCertificate => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/updateCommercialRegisterCertificate`, {\r\n        Number: updatedCommercialRegisterCertificate.Number,\r\n        Type: updatedCommercialRegisterCertificate.Type,\r\n        PhotoURL: updatedCommercialRegisterCertificate.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedCommercialRegisterCertificate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteCommercialRegisterCertificate\r\nexport const deleteCommercialRegisterCertificate = discardedCommercialRegisterCertificate => {\r\n    return axios.delete(`${Strings.NAQEL_SERVER}traders/deleteCommercialRegisterCertificate`, {\r\n        headers: { Authorization: `JWT ${discardedCommercialRegisterCertificate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addJobOffer\r\nexport const addJobOffer = async newJobOffer => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addJobOffer`, {\r\n        TripType: newJobOffer.TripType,\r\n        CargoType: newJobOffer.CargoType,\r\n        CargoWeight: newJobOffer.CargoWeight,\r\n        LoadingPlace: newJobOffer.LoadingPlace,\r\n        LoadingLat: newJobOffer.LoadingLat,\r\n        LoadingLng: newJobOffer.LoadingLng,\r\n        UnloadingPlace: newJobOffer.UnloadingPlace,\r\n        UnloadingLat: newJobOffer.UnloadingLat,\r\n        UnloadingLng: newJobOffer.UnloadingLng,\r\n        LoadingDate: newJobOffer.LoadingDate,\r\n        LoadingTime: newJobOffer.LoadingTime,\r\n        EntryExit: newJobOffer.EntryExit,\r\n        Price: newJobOffer.Price,\r\n        AcceptedDelay: newJobOffer.AcceptedDelay,\r\n        JobOfferType: newJobOffer.JobOfferType\r\n    }, {\r\n        headers: { Authorization: `JWT ${newJobOffer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateJobOffer\r\nexport const updateJobOffer = async updatedJobOffer => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/updateJobOffer`, {\r\n        JobOfferID: updatedJobOffer.JobOfferID,\r\n        TripType: updatedJobOffer.TripType,\r\n        CargoType: updatedJobOffer.CargoType,\r\n        CargoWeight: updatedJobOffer.CargoWeight,\r\n        LoadingPlace: updatedJobOffer.LoadingPlace,\r\n        LoadingLat: updatedJobOffer.LoadingLat,\r\n        LoadingLng: updatedJobOffer.LoadingLng,\r\n        UnloadingPlace: updatedJobOffer.UnloadingPlace,\r\n        UnloadingLat: updatedJobOffer.UnloadingLat,\r\n        UnloadingLng: updatedJobOffer.UnloadingLng,\r\n        LoadingDate: updatedJobOffer.LoadingDate,\r\n        LoadingTime: updatedJobOffer.LoadingTime,\r\n        EntryExit: updatedJobOffer.EntryExit,\r\n        Price: updatedJobOffer.Price,\r\n        AcceptedDelay: updatedJobOffer.AcceptedDelay,\r\n        JobOfferType: updatedJobOffer.JobOfferType\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedJobOffer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deleteJobOffer\r\nexport const deleteJobOffer = async discardedJobOffer => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}traders/deleteJobOffer...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}traders/deleteJobOffer`, {\r\n        headers: { Authorization: `JWT ${discardedJobOffer.Token}` },\r\n        data: { JobOfferID: discardedJobOffer.JobOfferID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addATraderRequest\r\nexport const addTraderRequest = async newTraderReqeust => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/addTraderRequest...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addTraderRequest`, {\r\n        JobRequestID: newTraderReqeust.JobRequestID,\r\n        CargoType: newTraderReqeust.CargoType,\r\n        CargoWeight: newTraderReqeust.CargoWeight,\r\n        LoadingDate: newTraderReqeust.LoadingDate,\r\n        LoadingTime: newTraderReqeust.LoadingTime,\r\n        EntryExit: newTraderReqeust.EntryExit,\r\n        AcceptedDelay: newTraderReqeust.AcceptedDelay\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTraderReqeust.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deleteTraderRequest\r\nexport const deleteTraderRequest = async discardedTraderRequest => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}traders/deleteTraderRequest...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}traders/deleteTraderRequest`, {\r\n        headers: { Authorization: `JWT ${discardedTraderRequest.Token}` },\r\n        data: { JobRequestID: discardedTraderRequest.JobRequestID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addObjectionReason\r\nexport const addObjectionReason = async newObjectionReason => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/addObjectionReason...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addObjectionReason`, {\r\n        Reason: newObjectionReason.Reason\r\n    }, {\r\n        headers: { Authorization: `JWT ${newObjectionReason.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addJobObjection\r\nexport const addJobObjection = async newJobObjection => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/addJobObjection...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addJobObjection`, {\r\n        OnGoingJobID: newJobObjection.OnGoingJobID,\r\n        Reason: newJobObjection.Reason,\r\n        Comment: newJobObjection.Comment\r\n    }, {\r\n        headers: { Authorization: `JWT ${newJobObjection.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: approveJob\r\nexport const approveJob = async approvedJob => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/approveJob...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/approveJob`, {}, {\r\n        headers: { Authorization: `JWT ${approvedJob.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addDriverReview\r\nexport const addDriverReview = async newDriverReview => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/addDriverReview...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addDriverReview`, {\r\n        CompletedJobID: newDriverReview.CompletedJobID,\r\n        Rating: newDriverReview.Rating,\r\n        Review: newDriverReview.Review\r\n    }, {\r\n        headers: { Authorization: `JWT ${newDriverReview.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addOnGoingJobFromJobOffer\r\nexport const addOnGoingJobFromJobOffer = async newOnGoingJob => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/addOnGoingJobFromJobOffer...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addOnGoingJobFromJobOffer`, {\r\n        DriverRequestID: newOnGoingJob.DriverRequestID,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newOnGoingJob.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addOnGoingJobFromJobRequest\r\nexport const addOnGoingJobFromJobRequest = async newOnGoingJob => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/addOnGoingJobFromJobRequest...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addOnGoingJobFromJobRequest`, {\r\n        TraderRequestID: newOnGoingJob.TraderRequestID,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newOnGoingJob.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addDriverReviewFromOnGoingJob\r\nexport const addDriverReviewFromOnGoingJob = async newDriverReview => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/addDriverReviewFromOnGoingJob...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addDriverReviewFromOnGoingJob`, {\r\n        OnGoingJobID: newDriverReview.OnGoingJobID,\r\n        Rating: newDriverReview.Rating,\r\n        Review: newDriverReview.Review\r\n    }, {\r\n        headers: { Authorization: `JWT ${newDriverReview.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addTraderPayProof\r\nexport const addTraderPayProof = newTraderPayProof => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/addTraderPayProof`, {\r\n        TraderBillID: newTraderPayProof.TraderBillID,\r\n        PhotoURL: newTraderPayProof.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTraderPayProof.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deleteTraderPayProof\r\nexport const deleteTraderPayProof = async discardedTraderPayProof => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}traders/deleteTraderPayProof...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}traders/deleteTraderPayProof`, {\r\n        headers: { Authorization: `JWT ${discardedTraderPayProof.Token}` },\r\n        data: { TraderPayProofID: discardedTraderPayProof.TraderPayProofID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: getClientSecret\r\nexport const getClientSecret = newClientSecret => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/getClientSecret`, {\r\n        Amount: newClientSecret.Amount\r\n    }, {\r\n        headers: { Authorization: `JWT ${newClientSecret.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: requestSpecialBill\r\nexport const requestSpecialBill = requestedSpecialBill => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/requestSpecialBill`, {\r\n        TraderBillID: requestedSpecialBill.TraderBillID,\r\n        Amount: requestedSpecialBill.Amount\r\n    }, {\r\n        headers: { Authorization: `JWT ${requestedSpecialBill.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addQuestion\r\nexport const addQuestion = newQuestion => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/addQuestion`, {\r\n        Question: newQuestion.Question\r\n    }, {\r\n        headers: { Authorization: `JWT ${newQuestion.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deleteQuestion\r\nexport const deleteQuestion = async discardedQuestion => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}traders/deleteQuestion...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}traders/deleteQuestion`, {\r\n        headers: { Authorization: `JWT ${discardedQuestion.Token}` },\r\n        data: { TraderQuestionID: discardedQuestion.TraderQuestionID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addTraderPayDetails\r\nexport const addTraderPayDetails = newTraderPayDetails => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/addTraderPayDetails`, {\r\n        TraderBillID: newTraderPayDetails.TraderBillID,\r\n        OwnerName: newTraderPayDetails.OwnerName,\r\n        OwnerEmail: newTraderPayDetails.OwnerEmail,\r\n        CardType: newTraderPayDetails.CardType\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTraderPayDetails.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};","import axios from \"axios\";\r\nimport Strings from \"../../res/strings\";\r\n\r\n// POST: Register\r\nexport const registerAdministrator = async newCredentials => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/register`, {\r\n        Username: newCredentials.Username,\r\n        Email: newCredentials.Email,\r\n        Password: newCredentials.Password,\r\n        RegisterAs: newCredentials.RegisterAs,\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AccountSetup\r\nexport const setupAdministratorAccount = async newAdministrator => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/setupAccount`, {\r\n        Username: newAdministrator.Username,\r\n        Email: newAdministrator.Email,\r\n        Password: newAdministrator.Password,\r\n        RegisterAs: newAdministrator.RegisterAs,\r\n        FirstName: newAdministrator.FirstName,\r\n        LastName: newAdministrator.LastName,\r\n        AdministratorSecret: newAdministrator.AdministratorSecret\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: Login\r\nexport const loginAdministrator = async administrator => {\r\n    console.log(`Sending HTTP POST request on ${Strings.NAQEL_SERVER}administrators/login`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/login`, {\r\n        EmailOrUsername: administrator.EmailOrUsername,\r\n        Password: administrator.Password,\r\n        SignInAs: administrator.SignInAs,\r\n    }).then(response => {\r\n        return response.data;\r\n    })\r\n};\r\n\r\n// GET: GetData\r\nexport const getData = async request => {\r\n    console.log(`Sending GET request to ${Strings.NAQEL_SERVER}administrators/get${request.Get}...`);\r\n    return await axios.get(`${Strings.NAQEL_SERVER}administrators/get${request.Get}`, {\r\n        params: request.Params,\r\n        headers: { Authorization: `JWT ${request.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// GET: GetPublicData\r\nexport const getPublicData = async request => {\r\n    console.log(`Sending GET request to ${Strings.NAQEL_SERVER}users/get${request.Get}...`);\r\n    return await axios.get(`${Strings.NAQEL_SERVER}users/get${request.Get}`, {\r\n        params: request.Params\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: uploadProfilePhoto\r\nexport const uploadProfilePhoto = async profilePhoto => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/uploadProfilePhoto`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/uploadProfilePhoto`, {\r\n        PhotoURL: profilePhoto.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${profilePhoto.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: GeneralSettings\r\nexport const generalSettings = async updatedAdministrator => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/generalSettings`, {\r\n        FirstName: updatedAdministrator.FirstName,\r\n        LastName: updatedAdministrator.LastName\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedAdministrator.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateUsername\r\nexport const validateUsername = async username => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/validateUsername`, {\r\n        Username: username\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateEmail\r\nexport const validateEmail = async email => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/validateEmail`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POSTL SendCode\r\nexport const sendCode = async email => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}users/sendCode...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/sendCode`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UsernameAndEmailSettings\r\nexport const usernameAndEmailSettings = async updatedAdministrator => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/usernameAndEmailSettings...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/usernameAndEmailSettings`, {\r\n        Username: updatedAdministrator.Username,\r\n        Email: updatedAdministrator.Email\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedAdministrator.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidatePassword\r\nexport const validatePassword = async passwordPackage => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/validatePassword`, {\r\n        Password: passwordPackage.Password\r\n    }, {\r\n        headers: { Authorization: `JWT ${passwordPackage.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: PasswordSettings\r\nexport const passwordSettings = async updatedAdministrator => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/passwordSettings`, {\r\n        Password: updatedAdministrator.Password,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedAdministrator.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UpdateNaqelSettings\r\nexport const updateNaqelSettings = async updatedNaqelSettings => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/updateNaqelSettings`, {\r\n        Street: updatedNaqelSettings.Street,\r\n        City: updatedNaqelSettings.City,\r\n        Country: updatedNaqelSettings.Country,\r\n        ZIPCode: updatedNaqelSettings.ZIPCode,\r\n        PhoneNumber: updatedNaqelSettings.PhoneNumber,\r\n        Website: updatedNaqelSettings.Website,\r\n        BusinessName: updatedNaqelSettings.BusinessName,\r\n        BankName: updatedNaqelSettings.BankName,\r\n        AccountNumber: updatedNaqelSettings.AccountNumber,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedNaqelSettings.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ActivateDriverAccount\r\nexport const activateDriverAccount = async activatedDriver => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/activateDriverAccount...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/activateDriverAccount`, {\r\n        DriverID: activatedDriver.DriverID\r\n    }, {\r\n        headers: { Authorization: `JWT ${activatedDriver.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: BlockDriverAccount\r\nexport const blockDriverAccount = async blockedDriver => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/blockDriverAccount...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/blockDriverAccount`, {\r\n        DriverID: blockedDriver.DriverID,\r\n        BlockDate: blockedDriver.BlockDate,\r\n        Reason: blockedDriver.Reason\r\n    }, {\r\n        headers: { Authorization: `JWT ${blockedDriver.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UnblockDriverAccount\r\nexport const unblockDriverAccount = async unblockedDriver => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/unblockDriverAccount...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/unblockDriverAccount`, {\r\n        DriverID: unblockedDriver.DriverID,\r\n    }, {\r\n        headers: { Authorization: `JWT ${unblockedDriver.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: SetRefundRate\r\nexport const setRefundRate = async traderRefundRate => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/setRefundRate...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/setRefundRate`, {\r\n        TraderID: traderRefundRate.TraderID,\r\n        RefundRate: traderRefundRate.RefundRate\r\n    }, {\r\n        headers: { Authorization: `JWT ${traderRefundRate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ExonerateTrader\r\nexport const exonerateTrader = async exoneratedTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/exonerateTrader`, {\r\n        TraderID: exoneratedTrader.TraderID,\r\n        ExonerateDate: exoneratedTrader.ExonerateDate,\r\n        Reason: exoneratedTrader.Reason\r\n    }, {\r\n        headers: { Authorization: `JWT ${exoneratedTrader.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ChargeTrader\r\nexport const chargeTrader = async chargedTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/chargeTrader`, {\r\n        TraderID: chargedTrader.TraderID,\r\n    }, {\r\n        headers: { Authorization: `JWT ${chargedTrader.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddTraderObjectionReason\r\nexport const addTraderObjectionReason = async newTraderObjectionReason => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/addTraderObjectionReason...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addTraderObjectionReason`, {\r\n        Reason: newTraderObjectionReason.Reason\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTraderObjectionReason.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: DeleteTraderObjectionReason\r\nexport const deleteTraderObjectionReason = async discardedTraderObjectionReason => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}administrators/deleteTraderObjectionReason...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}administrators/deleteTraderObjectionReason`, {\r\n        headers: { Authorization: `JWT ${discardedTraderObjectionReason.Token}` },\r\n        data: { DriverObjectionReasonID: discardedTraderObjectionReason.DriverObjectionReasonID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: verifyTraderObjectionReason\r\nexport const verifyTraderObjectionReason = async verifiedTraderObjectionReason => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/verifyTraderObjectionReason...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/verifyTraderObjectionReason`, {\r\n        DriverObjectionReasonID: verifiedTraderObjectionReason.DriverObjectionReasonID\r\n    }, {\r\n        headers: { Authorization: `JWT ${verifiedTraderObjectionReason.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddDriverObjectionReason\r\nexport const addDriverObjectionReason = async newDriverObjectionReason => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/addDriverObjectionReason...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addDriverObjectionReason`, {\r\n        Reason: newDriverObjectionReason.Reason\r\n    }, {\r\n        headers: { Authorization: `JWT ${newDriverObjectionReason.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: DeleteDriverObjectionReason\r\nexport const deleteDriverObjectionReason = async discardedDriverObjectionReason => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}administrators/deleteDriverObjectionReason...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}administrators/deleteDriverObjectionReason`, {\r\n        headers: { Authorization: `JWT ${discardedDriverObjectionReason.Token}` },\r\n        data: { DriverObjectionReasonID: discardedDriverObjectionReason.DriverObjectionReasonID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: verifyDriverObjectionReason\r\nexport const verifyDriverObjectionReason = async verifiedDriverObjectionReason => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/verifyDriverObjectionReason...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/verifyDriverObjectionReason`, {\r\n        DriverObjectionReasonID: verifiedDriverObjectionReason.DriverObjectionReasonID\r\n    }, {\r\n        headers: { Authorization: `JWT ${verifiedDriverObjectionReason.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: DiscardObjectionableJob\r\nexport const discardObjectionableJob = async discardedObjectionableJob => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}administrators/discardObjectionableJob...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}administrators/discardObjectionableJob`, {\r\n        headers: { Authorization: `JWT ${discardedObjectionableJob.Token}` },\r\n        data: { OnGoingJobID: discardedObjectionableJob.OnGoingJobID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddDriverAnswer\r\nexport const addDriverAnswer = async driverAnswer => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/addDriverAnswer...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addDriverAnswer`, {\r\n        DriverQuestionID: driverAnswer.DriverQuestionID,\r\n        Answer: driverAnswer.Answer\r\n    }, {\r\n        headers: { Authorization: `JWT ${driverAnswer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddDriverQuestionClass\r\nexport const addDriverQuestionClass = async newDriverQuestionClass => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/addDriverQuestionClass...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addDriverQuestionClass`, {\r\n        Class: newDriverQuestionClass.Class\r\n    }, {\r\n        headers: { Authorization: `JWT ${newDriverQuestionClass.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ClassifyDriverQuestion\r\nexport const classifyDriverQuestion = async classifiedDriverQuestion => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/classifyDriverQuestion...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/classifyDriverQuestion`, {\r\n        DriverQuestionID: classifiedDriverQuestion.DriverQuestionID,\r\n        Class: classifiedDriverQuestion.Class\r\n    }, {\r\n        headers: { Authorization: `JWT ${classifiedDriverQuestion.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddTraderAnswer\r\nexport const addTraderAnswer = async traderAnswer => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/addTraderAnswer...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addTraderAnswer`, {\r\n        TraderQuestionID: traderAnswer.TraderQuestionID,\r\n        Answer: traderAnswer.Answer\r\n    }, {\r\n        headers: { Authorization: `JWT ${traderAnswer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddTraderQuestionClass\r\nexport const addTraderQuestionClass = async newTraderQuestionClass => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/addTraderQuestionClass...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addTraderQuestionClass`, {\r\n        Class: newTraderQuestionClass.Class\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTraderQuestionClass.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ClassifyTraderQuestion\r\nexport const classifyTraderQuestion = async classifiedTraderQuestion => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/classifyTraderQuestion...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/classifyTraderQuestion`, {\r\n        TraderQuestionID: classifiedTraderQuestion.TraderQuestionID,\r\n        Class: classifiedTraderQuestion.Class\r\n    }, {\r\n        headers: { Authorization: `JWT ${classifiedTraderQuestion.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddResponsibleAnswer\r\nexport const addResponsibleAnswer = async responsibleAnswer => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addResponsibleAnswer`, {\r\n        ResponsibleQuestionID: responsibleAnswer.ResponsibleQuestionID,\r\n        Answer: responsibleAnswer.Answer\r\n    }, {\r\n        headers: { Authorization: `JWT ${responsibleAnswer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddResponsibleQuestionClass\r\nexport const addResponsibleQuestionClass = async newResponsibleQuestionClass => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addResponsibleQuestionClass`, {\r\n        Class: newResponsibleQuestionClass.Class\r\n    }, {\r\n        headers: { Authorization: `JWT ${newResponsibleQuestionClass.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ClassifyResponsibleQuestion\r\nexport const classifyResponsibleQuestion = async classifiedResponsibleQuestion => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/classifyResponsibleQuestion`, {\r\n        ResponsibleQuestionID: classifiedResponsibleQuestion.ResponsibleQuestionID,\r\n        Class: classifiedResponsibleQuestion.Class\r\n    }, {\r\n        headers: { Authorization: `JWT ${classifiedResponsibleQuestion.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: SetGlobalFeeRate\r\nexport const setGlobalFeeRate = async feeRate => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/setGlobalFeeRate...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/setGlobalFeeRate`, {\r\n        FeeRate: feeRate.FeeRate\r\n    }, {\r\n        headers: { Authorization: `JWT ${feeRate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: SetTemporaryFeeRate\r\nexport const setTemporaryFeeRate = async temporaryFeeRateDate => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/setTemporaryFeeRate...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/setTemporaryFeeRate`, {\r\n        FeeRate: temporaryFeeRateDate.FeeRate,\r\n        Date: temporaryFeeRateDate.Date\r\n    }, {\r\n        headers: { Authorization: `JWT ${temporaryFeeRateDate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ClearTemporaryFeeRate\r\nexport const clearTemporaryFeeRate = async clearedtemporaryFeeRate => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/clearTemporaryFeeRate...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/clearTemporaryFeeRate`, {}, {\r\n        headers: { Authorization: `JWT ${clearedtemporaryFeeRate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddPriceRange\r\nexport const addPriceRange = async newPriceRange => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/addPriceRange...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addPriceRange`, {\r\n        StartRange: newPriceRange.StartRange,\r\n        EndRange: newPriceRange.EndRange,\r\n        FeeRate: newPriceRange.FeeRate\r\n    }, {\r\n        headers: { Authorization: `JWT ${newPriceRange.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UpdatePriceRange\r\nexport const updatePriceRange = async updatedPriceRange => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/updatePriceRange...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/updatePriceRange`, {\r\n        PriceRangeID: updatedPriceRange.PriceRangeID,\r\n        FeeRate: updatedPriceRange.FeeRate\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedPriceRange.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: DeletePriceRange\r\nexport const deletePriceRange = async discardedPriceRange => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}administrators/deletePriceRange...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}administrators/deletePriceRange`, {\r\n        headers: { Authorization: `JWT ${discardedPriceRange.Token}` },\r\n        data: { PriceRangeID: discardedPriceRange.PriceRangeID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddTraderRate\r\nexport const addTraderRate = async newTraderRate => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/addTraderRate...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addTraderRate`, {\r\n        Username: newTraderRate.Username,\r\n        FeeRate: newTraderRate.FeeRate\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTraderRate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UpdateTraderRate\r\nexport const updateTraderRate = async updatedTraderRate => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/updateTraderRate...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/updateTraderRate`, {\r\n        TraderRateID: updatedTraderRate.TraderRateID,\r\n        FeeRate: updatedTraderRate.FeeRate\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTraderRate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: DeleteTraderRate\r\nexport const deleteTraderRate = async discardedTraderRate => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}administrators/deleteTraderRate...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}administrators/deleteTraderRate`, {\r\n        headers: { Authorization: `JWT ${discardedTraderRate.Token}` },\r\n        data: { TraderRateID: discardedTraderRate.TraderRateID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ApproveDiverPayProof\r\nexport const approveDriverPayProof = async approvedDriverPayProof => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/approveDriverPayProof...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/approveDriverPayProof`, {\r\n        DriverPayProofID: approvedDriverPayProof.DriverPayProofID\r\n    }, {\r\n        headers: { Authorization: `JWT ${approvedDriverPayProof.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};","import axios from \"axios\";\r\nimport Strings from \"../../res/strings\";\r\n\r\n// POST: Register\r\nexport const registerTransportCompanyResponsible = async newCredentials => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}transportCompanyResponsibles/register`, {\r\n        Username: newCredentials.Username,\r\n        Email: newCredentials.Email,\r\n        Password: newCredentials.Password,\r\n        RegisterAs: newCredentials.RegisterAs,\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AccountSetup\r\nexport const setupTransportCompanyResponsibleAccount = async newTransportCompanyResponsible => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}transportCompanyResponsibles/setupAccount`, {\r\n        Username: newTransportCompanyResponsible.Username,\r\n        Email: newTransportCompanyResponsible.Email,\r\n        Password: newTransportCompanyResponsible.Password,\r\n        RegisterAs: newTransportCompanyResponsible.RegisterAs,\r\n        Name: newTransportCompanyResponsible.Name,\r\n        PhoneNumber: newTransportCompanyResponsible.PhoneNumber\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: Login\r\nexport const loginTransportCompanyResponsible = async transportCompanyResponsible => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}transportCompanyResponsibles/login`, {\r\n        EmailOrUsername: transportCompanyResponsible.EmailOrUsername,\r\n        Password: transportCompanyResponsible.Password,\r\n        SignInAs: transportCompanyResponsible.SignInAs,\r\n    }).then(response => {\r\n        return response.data;\r\n    })\r\n};\r\n\r\n// GET: GetData\r\nexport const getData = async request => {\r\n    return await axios.get(`${Strings.NAQEL_SERVER}transportCompanyResponsibles/get${request.Get}`, {\r\n        params: request.Params,\r\n        headers: { Authorization: `JWT ${request.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addCommercialRegisterCertificate\r\nexport const addCommercialRegisterCertificate = newCommercialRegisterCertificate => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}transportCompanyResponsibles/addCommercialRegisterCertificate`, {\r\n        Type: newCommercialRegisterCertificate.Type,\r\n        PhotoURL: newCommercialRegisterCertificate.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${newCommercialRegisterCertificate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateCommercialRegisterCertificate\r\nexport const updateCommercialRegisterCertificate = updatedCommercialRegisterCertificate => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}transportCompanyResponsibles/updateCommercialRegisterCertificate`, {\r\n        Type: updatedCommercialRegisterCertificate.Type,\r\n        PhotoURL: updatedCommercialRegisterCertificate.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedCommercialRegisterCertificate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteCommercialRegisterCertificate\r\nexport const deleteCommercialRegisterCertificate = discardedCommercialRegisterCertificate => {\r\n    return axios.delete(`${Strings.NAQEL_SERVER}transportCompanyResponsibles/deleteCommercialRegisterCertificate`, {\r\n        headers: { Authorization: `JWT ${discardedCommercialRegisterCertificate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: GeneralSettings\r\nexport const generalSettings = async updatedTransportCompanyResponsible => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}transportCompanyResponsibles/generalSettings`, {\r\n        Name: updatedTransportCompanyResponsible.Name,\r\n        PhoneNumber: updatedTransportCompanyResponsible.PhoneNumber\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTransportCompanyResponsible.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateUsername\r\nexport const validateUsername = async username => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}transportCompanyResponsibles/validateUsername`, {\r\n        Username: username\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateEmail\r\nexport const validateEmail = async email => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}transportCompanyResponsibles/validateEmail`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POSTL SendCode\r\nexport const sendCode = async email => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}users/sendCode...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/sendCode`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UsernameAndEmailSettings\r\nexport const usernameAndEmailSettings = async updatedTransportCompanyResponsible => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}transportCompanyResponsibles/usernameAndEmailSettings`, {\r\n        Username: updatedTransportCompanyResponsible.Username,\r\n        Email: updatedTransportCompanyResponsible.Email\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTransportCompanyResponsible.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidatePassword\r\nexport const validatePassword = async passwordPackage => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}transportCompanyResponsibles/validatePassword`, {\r\n        Password: passwordPackage.Password\r\n    }, {\r\n        headers: { Authorization: `JWT ${passwordPackage.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: PasswordSettings\r\nexport const passwordSettings = async updatedTransportCompanyResponsible => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}transportCompanyResponsibles/passwordSettings`, {\r\n        Password: updatedTransportCompanyResponsible.Password,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTransportCompanyResponsible.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addQuestion\r\nexport const addQuestion = newQuestion => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}transportCompanyResponsibles/addQuestion`, {\r\n        Question: newQuestion.Question\r\n    }, {\r\n        headers: { Authorization: `JWT ${newQuestion.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deleteQuestion\r\nexport const deleteQuestion = async discardedQuestion => {\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}transportCompanyResponsibles/deleteQuestion`, {\r\n        headers: { Authorization: `JWT ${discardedQuestion.Token}` },\r\n        data: { ResponsibleQuestionID: discardedQuestion.ResponsibleQuestionID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};","export const Required = {\r\n    paddingLeft: \"5px\",\r\n    fontWeight: \"bold\",\r\n};\r\n\r\nexport const SelectOptionStyle = {\r\n    maxWidth: \"296px\",\r\n};\r\n\r\nexport const PreloaderScreen = {\r\n    background: \"rgba(0, 0, 0, 0.8)\",\r\n    position: \"fixed\",\r\n    zIndex: \"10\",\r\n    top: \"0px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n    height: \"100%\"\r\n};\r\n\r\nexport default {\r\n    Required,\r\n    SelectOptionStyle,\r\n    PreloaderScreen\r\n};","import React, { Component } from \"react\";\r\nimport { PreloaderScreen } from \"../styles/MiscellaneousStyles\";\r\n\r\nclass Preloader extends Component {\r\n    render() {\r\n        return (\r\n            <div style={PreloaderScreen}>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                    {/*<img src=\"./images/preloader.gif\" alt=\"preloader.gif\" height=\"200\" />*/}\r\n                    <div class=\"progress-ring progress-large\">\r\n                        <div class=\"progress-circle\"></div>\r\n                        <div class=\"progress-circle\"></div>\r\n                        <div class=\"progress-circle\"></div>\r\n                        <div class=\"progress-circle\"></div>\r\n                        <div class=\"progress-circle\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Preloader;","export const LoginCardBack = {\r\n    backgroundImage: \"url(/images/login_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    height: \"100vh\"\r\n};\r\n\r\nexport const RegisterCardBack = {\r\n    backgroundImage: \"url(/images/signup_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    height: \"100vh\"\r\n};\r\n\r\nexport const EmailConfirmationCardBack = {\r\n    backgroundImage: \"url(/images/passcode_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    height: \"100vh\"\r\n};\r\n\r\nexport const AccountSetupCardBack = {\r\n    backgroundImage: \"url(/images/create_account_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    height: \"100vh\"\r\n};\r\n\r\nexport const CongratulationsCardBack = {\r\n    backgroundImage: \"url(/images/congrats_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    height: \"100vh\"\r\n};\r\n\r\nexport const Card = {\r\n    backgroundColor: \"rgba(229, 229, 229, 0.8)\",\r\n    height: \"auto\",\r\n    width: \"350px\",\r\n    padding: \"30px\",\r\n    alignContent: \"center\",\r\n    boxShadow: \"0 6px 6px rgba(0, 0, 0, 0.6)\",\r\n};\r\n\r\nexport const CardLarge = {\r\n    backgroundColor: \"rgba(229, 229, 229, 0.8)\",\r\n    height: \"auto\",\r\n    padding: \"30px\",\r\n    alignContent: \"center\",\r\n    boxShadow: \"0 6px 6px rgba(0, 0, 0, 0.6)\",\r\n};\r\n\r\nexport const CardXLarge = {\r\n    backgroundColor: \"rgba(229, 229, 229, 0.8)\",\r\n    height: \"auto\",\r\n    width: \"60%\",\r\n    margin: \"50px\",\r\n    boxShadow: \"0 6px 6px rgba(0, 0, 0, 0.6)\",\r\n};\r\n\r\nexport const CardChild = {\r\n    width: \"100%\",\r\n};\r\n\r\nexport const CardTitle = {\r\n    paddingTop: \"10px\",\r\n};\r\n\r\nexport default {\r\n    LoginCardBack,\r\n    RegisterCardBack,\r\n    EmailConfirmationCardBack,\r\n    AccountSetupCardBack,\r\n    CongratulationsCardBack,\r\n    Card,\r\n    CardLarge,\r\n    CardXLarge,\r\n    CardChild,\r\n    CardTitle,\r\n};","import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { loginDriver } from \"../drivers/DriverFunctions\";\r\nimport { loginTrader } from \"../traders/TraderFunctions\";\r\nimport { loginAdministrator } from \"../administrators/AdministratorFunctions\";\r\nimport { loginTransportCompanyResponsible } from \"../transportCompanyResponsibles/TransportCompanyResponsiblesFunctions\";\r\nimport Preloader from \"../../controls/Preloader\";\r\n\r\nimport {\r\n    LoginCardBack,\r\n    Card,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            EmailOrUsername: \"\",\r\n            Password: \"\",\r\n            SignInAs: \"Driver\",\r\n\r\n            ValidEmailOrUsername: false,\r\n            ValidPassword: false,\r\n\r\n            ValidForm: false,\r\n            LoggedInAsDriver: false,\r\n            LoggedInAsTrader: false,\r\n            LoggedInAsAdministrator: false,\r\n            LoggedInAsTCResponsible: false,\r\n            LoginError: null,\r\n\r\n            Errors: {\r\n                EmailOrUsername: \"\",\r\n                Password: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value }, () => {\r\n            this.validateField(name, value)\r\n        });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidEmailOrUsername = this.state.ValidEmailOrUsername;\r\n        let ValidPassword = this.state.ValidPassword;\r\n\r\n        switch (field) {\r\n            case \"EmailOrUsername\":\r\n                ValidEmailOrUsername = (value !== \"\");\r\n                Errors.EmailOrUsername = ValidEmailOrUsername ? \"\" : \"Email or username is required.\";\r\n                break;\r\n            case \"Password\":\r\n                ValidPassword = (value != \"\");\r\n                Errors.Password = ValidPassword ? \"\" : \"Password is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidEmailOrUsername: ValidEmailOrUsername,\r\n            ValidPassword: ValidPassword\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidEmailOrUsername &&\r\n                    this.state.ValidPassword\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        await event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const user = {\r\n            EmailOrUsername: this.state.EmailOrUsername,\r\n            Password: this.state.Password,\r\n            SignInAs: this.state.SignInAs,\r\n        };\r\n\r\n        if (this.state.SignInAs === \"Driver\") {\r\n            await loginDriver(user).then(response => {\r\n                console.log(response);\r\n                if (response.Message === \"Login successful.\") {\r\n                    localStorage.setItem(\"Token\", response.Token);\r\n\r\n                    this.setState({\r\n                        LoggedInAsDriver: true,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        LoginError: <div>\r\n                            <label className=\"control-label text-danger\">{response.Message}</label>\r\n                            <br />\r\n                        </div>,\r\n                        Preloader: null,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else if (this.state.SignInAs === \"Administrator\") {\r\n            await loginAdministrator(user).then(response => {\r\n                if (response.Message === \"Login successful.\") {\r\n                    localStorage.setItem(\"Token\", response.Token);\r\n\r\n                    this.setState({\r\n                        LoggedInAsAdministrator: true,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        LoginError: <div>\r\n                            <label className=\"control-label text-danger\">{response.Message}</label>\r\n                            <br />\r\n                        </div>,\r\n                        Preloader: null,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else if (this.state.SignInAs === \"TC Responsible\") {\r\n            await loginTransportCompanyResponsible(user).then(response => {\r\n                if (response.Message === \"Login successful.\") {\r\n                    localStorage.setItem(\"Token\", response.Token);\r\n\r\n                    this.setState({\r\n                        LoggedInAsTCResponsible: true,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        LoginError: <div>\r\n                            <label className=\"control-label text-danger\">{response.Message}</label>\r\n                            <br />\r\n                        </div>,\r\n                        Preloader: null,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            await loginTrader(user).then(response => {\r\n                if (response.Message === \"Login successful.\") {\r\n                    localStorage.setItem(\"Token\", response.Token);\r\n\r\n                    this.setState({\r\n                        LoggedInAsTrader: true,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        LoginError: <div>\r\n                            <label className=\"control-label text-danger\">{response.Message}</label>\r\n                            <br />\r\n                        </div>,\r\n                        Preloader: null,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.LoggedInAsDriver) {\r\n            return <Redirect to={\"/drivers\"} />;\r\n        }\r\n        else if (this.state.LoggedInAsTrader) {\r\n            return <Redirect to={\"/traders\"} />;\r\n        }\r\n        else if (this.state.LoggedInAsAdministrator) {\r\n            return <Redirect to={\"/administrators\"} />;\r\n        }\r\n        else if (this.state.LoggedInAsTCResponsible) {\r\n            return <Redirect to={\"/transportCompanyResponsibles\"} />;\r\n        }\r\n        else {\r\n            return <div>\r\n                <div className=\"middle\" style={LoginCardBack}>\r\n                    <div className=\"theme-default animated fadeIn\" style={Card} >\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/login.png\" alt=\"Login.png\" height=\"60\" />\r\n                            <div className=\"type-h3\" style={CardTitle}>Sign In</div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"EmailOrUsername\" className=\"control-label\">Email or Username</label>\r\n                                    <input type=\"email\" className=\"form-control\" name=\"EmailOrUsername\" placeholder=\"someone@provider.com\"\r\n                                        value={this.state.EmailOrUsername} onChange={this.onChange} />\r\n                                    <span className=\"text-danger\">{this.state.Errors.EmailOrUsername}</span>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"Password\" className=\"control-label\">Password</label>\r\n                                    <input type=\"password\" className=\"form-control\" name=\"Password\" placeholder=\"Password\"\r\n                                        value={this.state.Password} onChange={this.onChange} />\r\n                                    <span className=\"text-danger\">{this.state.Errors.Password}</span>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"control-label\">Sign In As</label>\r\n                                    <div className=\"dropdown\" style={{ width: \"100%\" }}>\r\n                                        <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                            <span>{this.state.SignInAs}</span>\r\n                                            <span className=\"caret\"></span>\r\n                                        </button>\r\n                                        <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                            <li><Link onClick={e => { this.state.SignInAs = \"Driver\" }} onChange={this.onChange}>Driver</Link></li>\r\n                                            <li><Link onClick={e => { this.state.SignInAs = \"Trader\" }} onChange={this.onChange}>Trader</Link></li>\r\n                                            <li><Link onClick={e => { this.state.SignInAs = \"Broker\" }} onChange={this.onChange}>Broker</Link></li>\r\n                                            <li><Link onClick={e => { this.state.SignInAs = \"TC Responsible\" }} onChange={this.onChange}>TC Responsible</Link></li>\r\n                                            <li><Link onClick={e => { this.state.SignInAs = \"Administrator\" }} onChange={this.onChange}>Administrator</Link></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    {this.state.LoginError}\r\n                                    <label className=\"control-label\"><Link to=\"/\">Forgot password</Link></label>\r\n                                    <br />\r\n                                    <label className=\"control-label\">No account? <span><Link to=\"/register\">Register now</Link></span></label>\r\n                                </div>\r\n                                <div>\r\n                                    <input type=\"submit\" value=\"Sign In\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.Preloader}\r\n            </div>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default Login;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Strings from \"../../res/strings\";\r\n\r\nimport { registerDriver } from \"../drivers/DriverFunctions\";\r\nimport { registerTrader } from \"../traders/TraderFunctions\";\r\nimport { registerAdministrator } from \"../administrators/AdministratorFunctions\";\r\nimport { registerTransportCompanyResponsible } from \"../transportCompanyResponsibles/TransportCompanyResponsiblesFunctions\";\r\n\r\nimport { Required } from \"../../styles/MiscellaneousStyles\";\r\n\r\nimport {\r\n    RegisterCardBack,\r\n    Card,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            Email: \"\",\r\n            Password: \"\",\r\n            ConfirmPassword: \"\",\r\n            RegisterAs: \"Driver\",\r\n            NullError: false,\r\n\r\n            PasswordsMatched: false,\r\n            UsernameOrEmailTaken: false,\r\n            ValidEmail: false,\r\n            ValidPassword: false,\r\n            ValidForm: false,\r\n            Agreed: false,\r\n\r\n            Errors: {\r\n                Email: \"\",\r\n                Password: \"\",\r\n                ConfirmPassword: \"\",\r\n                Agreed: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let fieldValidationErrors = this.state.Errors;\r\n        let ValidEmail = this.state.ValidEmail;\r\n        let ValidPassword = this.state.ValidPassword;\r\n        let PasswordsMatched = this.state.PasswordsMatched;\r\n        let Agreed = this.state.Agreed;\r\n\r\n        switch (field) {\r\n            case \"Email\":\r\n                ValidEmail = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n                fieldValidationErrors.Email = ValidEmail ? \"\" : \"Email is invalid.\";\r\n                break;\r\n            case \"Password\":\r\n                ValidPassword = value.length >= 6;\r\n                fieldValidationErrors.Password = ValidPassword ? \"\" : \"Password is too short.\";\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                PasswordsMatched = this.state.Password === value;\r\n                fieldValidationErrors.ConfirmPassword = PasswordsMatched ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n            case \"IsAgree\":\r\n                Agreed = this.refs.agreementCheckBox.checked;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: fieldValidationErrors,\r\n            ValidEmail: ValidEmail,\r\n            ValidPassword: ValidPassword,\r\n            PasswordsMatched: PasswordsMatched,\r\n            Agreed: Agreed,\r\n        }, this.validateForm);\r\n    }\r\n\r\n    validateForm() {\r\n        this.setState({\r\n            ValidForm: this.state.ValidEmail &&\r\n                this.state.ValidPassword &&\r\n                this.state.PasswordsMatched &&\r\n                this.state.Agreed\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.Username === \"\" ||\r\n            this.state.Email === \"\" ||\r\n            this.state.Password === \"\" ||\r\n            this.state.ConfirmPassword === \"\") {\r\n\r\n            this.setState({\r\n                NullError: true,\r\n                UsernameOrEmailTaken: false,\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const newCredentials = {\r\n            Username: this.state.Username,\r\n            Password: this.state.Password,\r\n            Email: this.state.Email,\r\n            RegisterAs: this.state.RegisterAs,\r\n        }\r\n\r\n        if (newCredentials.RegisterAs === \"Driver\") {\r\n            await registerDriver(newCredentials).then(response => {\r\n                if (response && localStorage.newCredentialsToken) {\r\n                    this.props.history.push(\"/emailConfirmation\");\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        NullError: false,\r\n                        UsernameOrEmailTaken: true,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else if (newCredentials.RegisterAs === \"Administrator\") {\r\n            await registerAdministrator(newCredentials).then(response => {\r\n                if (response.Message === \"Token received.\") {\r\n                    localStorage.setItem(\"newCredentialsToken\", response.Token);\r\n                    this.props.history.push(\"/emailConfirmation\");\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        NullError: false,\r\n                        UsernameOrEmailTaken: true,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else if (newCredentials.RegisterAs === \"TC Responsible\") {\r\n            await registerTransportCompanyResponsible(newCredentials).then(response => {\r\n                if (response.Message === \"Token received.\") {\r\n                    localStorage.setItem(\"newCredentialsToken\", response.Token);\r\n                    this.props.history.push(\"/emailConfirmation\");\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        NullError: false,\r\n                        UsernameOrEmailTaken: true,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            console.log(\"Seting up resources for new trader or broker...\");\r\n            await registerTrader(newCredentials).then(response => {\r\n                if (response && localStorage.newCredentialsToken) {\r\n                    this.props.history.push(\"/emailConfirmation\");\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        NullError: false,\r\n                        UsernameOrEmailTaken: true,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"middle\" style={RegisterCardBack}>\r\n                    <div class=\"theme-default animated fadeIn\" style={Card}>\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/signup.png\" alt=\"signup.png\" height=\"60\" />\r\n                            <div class=\"type-h3\" style={CardTitle}>Sign Up</div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"Username\" class=\"control-label\">Username</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"Username\" type=\"text\" name=\"Username\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Username} onChange={this.onChange} required />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"Email\" class=\"control-label\">Email</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"Email\" type=\"email\" name=\"Email\" class=\"form-control\" placeholder=\"someone@example.com\" autocomplete=\"off\"\r\n                                        value={this.state.Email} onChange={this.onChange} />\r\n                                    <span class=\"text-danger\">{this.state.Errors[\"Email\"]}</span>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"Password\" class=\"control-label\">Password</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"Password\" type=\"password\" name=\"Password\" class=\"form-control\"\r\n                                        value={this.state.Password} onChange={this.onChange} />\r\n                                    <span class=\"text-danger\">{this.state.Errors[\"Password\"]}</span>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"ConfirmPassword\" class=\"control-label\">Confirm Password</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"ConfirmPassword\" type=\"password\" name=\"ConfirmPassword\" class=\"form-control\"\r\n                                        value={this.state.ConfirmPassword} onChange={this.onChange} />\r\n                                    <span class=\"text-danger\">{this.state.Errors[\"ConfirmPassword\"]}</span>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"control-label\">Register As</label>\r\n                                    <div class=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                        <button id=\"example-dropdown\" class=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                            <span>{this.state.RegisterAs}</span>\r\n                                            <span class=\"caret\"></span>\r\n                                        </button>\r\n                                        <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                            <li><Link onClick={e => { this.state.RegisterAs = \"Driver\" }} onChange={this.onChange}>Driver</Link></li>\r\n                                            <li><Link onClick={e => { this.state.RegisterAs = \"Trader\" }} onChange={this.onChange}>Trader</Link></li>\r\n                                            <li><Link onClick={e => { this.state.RegisterAs = \"Broker\" }} onChange={this.onChange}>Broker</Link></li>\r\n                                            <li><Link onClick={e => { this.state.RegisterAs = \"TC Responsible\" }} onChange={this.onChange}>TC Responsible</Link></li>\r\n                                            <li><Link onClick={e => { this.state.RegisterAs = \"Administrator\" }} onChange={this.onChange}>Administrator</Link></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div class=\"checkbox\">\r\n                                        <label class=\"control-label\">\r\n                                            <input ref=\"agreementCheckBox\" type=\"checkbox\" name=\"IsAgree\" value=\"\" onChange={this.onChange}></input>\r\n                                            <span>Agree with our </span>\r\n                                            <span>\r\n                                                <Link data-toggle=\"modal\" data-target=\"#terms\">Terms and Conditions</Link>\r\n                                            </span>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    {this.state.NullError &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">All fields are required.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                    {this.state.UsernameOrEmailTaken &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">Username or email is already taken.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                    {this.state.AgreementError &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">You must agree to our terms and conditions.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n\r\n                                    <label class=\"control-label\">Have an account? <span><Link to=\"/login\">Sign In Now!</Link></span></label>\r\n                                </div>\r\n                                <input type=\"submit\" value=\"Next\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"modal\" id=\"terms\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content\">\r\n                            <div class=\"modal-header\">\r\n                                <h4 class=\"modal-title\" id=\"modal-sample-label\">Terms of Use</h4>\r\n                            </div>\r\n                            <div class=\"modal-body text-justify\">\r\n                                Your privacy is important to us. <span>{Strings.APP_NAME}</span>'s Privacy Statement describes the types of data we collect from you, how we use your Data, and the legal bases we have to process your Data. The Privacy Statement also describes how {String.APP_NAME} uses your content, which is information submitted by you to {Strings.APP_NAME} via the Services. Where processing is based on consent and to the extent permitted by law, by agreeing to these Terms, you consent to {Strings.APP_NAME}� collection, use and disclosure of your content and data as described in the privacy statement. In some cases, we will provide separate notice and request your consent as referenced in the privacy statement.\r\n                                </div>\r\n                            <div class=\"modal-footer\">\r\n                                <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Ok</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Register;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport {\r\n    EmailConfirmationCardBack,\r\n    Card,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass EmailConfirmation extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            NewCredentials: jwt_decode(localStorage.newCredentialsToken),\r\n            ConfirmationCode: 0,\r\n\r\n            ValidConfirmationCode: false,\r\n            ValidForm: false,\r\n\r\n            Errors: {\r\n                ConfirmationCode: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidConfirmationCode = this.state.ValidConfirmationCode;\r\n\r\n        switch (field) {\r\n            case \"ConfirmationCode\":\r\n                ValidConfirmationCode = (value !== \"\");\r\n                Errors.ConfirmationCode = ValidConfirmationCode ? \"\" : \"Confirmation code is required.\";\r\n\r\n                if (Errors.ConfirmationCode !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidConfirmationCode = (value === \"12345\" /*this.state.NewCredentials.Code*/);\r\n                Errors.ConfirmationCode = ValidConfirmationCode ? \"\" : \"Invalid code.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidConfirmationCode: ValidConfirmationCode\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidConfirmationCode\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        localStorage.setItem(\"verifiedCredentialsToken\", localStorage.newCredentialsToken);\r\n        localStorage.removeItem(\"newCredentialsToken\");\r\n\r\n        if (this.state.NewCredentials.RegisterAs === \"Administrator\") {\r\n            this.props.history.push(\"/setupAdministratorAccount\");\r\n        }\r\n        else if (this.state.NewCredentials.RegisterAs === \"TC Responsible\") {\r\n            this.props.history.push(\"/setupTransportCompanyResponsibleAccount\");\r\n        }\r\n        else {\r\n            this.props.history.push(\"/setupAccount\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.newCredentialsToken) {\r\n            return <Redirect to={\"/register\"} />;\r\n        }\r\n        else {\r\n            return <div class=\"middle\" style={EmailConfirmationCardBack}>\r\n                <div class=\"theme-default animated fadeIn\" style={Card}>\r\n                    <div style={CardChild}>\r\n                        <img src=\"./images/passcode.png\" alt=\"passcode.png\" height=\"60\" />\r\n                        <div class=\"type-h3\" style={CardTitle}>Email Confirmation</div>\r\n                        <div class=\"type-sh3\">We delivered a confirmation code to your email.</div>\r\n                        <br />\r\n                        <form noValidate onSubmit={this.onSubmit}>\r\n                            <div class=\"form-group\">\r\n                                <label htmlFor=\"ConfirmationCode\" class=\"control-label\">Confirmation Code</label>\r\n                                <span class=\"text-danger m-l-xxxs\">*</span>\r\n                                <input htmlFor=\"ConfirmationCode\" type=\"text\" name=\"ConfirmationCode\" class=\"form-control\"\r\n                                    value={this.state.ConfirmationCode} onChange={this.onChange} />\r\n                                <span class=\"text-danger\">{this.state.Errors.ConfirmationCode}</span>\r\n                            </div>\r\n                            <input type=\"submit\" value=\"Next\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default EmailConfirmation;","import React, { Component } from \"react\";\r\nimport { setupDriverAccount } from \"../drivers/DriverFunctions\";\r\nimport { setupTraderAccount } from \"../traders/TraderFunctions\";\r\nimport { Required } from \"../../styles/MiscellaneousStyles\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport {\r\n    AccountSetupCardBack,\r\n    CardLarge,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass AccountSetup extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            Email: \"\",\r\n            Password: \"\",\r\n            RegisterAs: \"\",\r\n\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            DateOfBirth: \"\",\r\n            Gender: \"Male\",\r\n            Nationality: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n\r\n            ValidFirstName: false,\r\n            ValidLastName: false,\r\n            ValidDateOfBirth: false,\r\n            ValidNationality: false,\r\n            ValidAddress: false,\r\n            ValidPhoneNumber: false,\r\n\r\n            ValidForm: false,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                DateOfBirth: \"\",\r\n                Nationality: \"\",\r\n                Address: \"\",\r\n                PhoneNumber: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFirstName = this.state.ValidFirstName;\r\n        let ValidLastName = this.state.ValidLastName;\r\n        let ValidDateOfBirth = this.state.ValidDateOfBirth;\r\n        let ValidNationality = this.state.ValidNationality;\r\n        let ValidAddress = this.state.ValidAddress;\r\n        let ValidPhoneNumber = this.state.ValidPhoneNumber;\r\n\r\n        switch (field) {\r\n            case \"FirstName\":\r\n                ValidFirstName = ((value !== \"\") &&\r\n                    (value.match(/^[a-zA-Z ]+$/)));\r\n                Errors.FirstName = ValidFirstName ? \"\" : \"First name is invalid.\";\r\n                break;\r\n            case \"LastName\":\r\n                ValidLastName = ((value !== \"\") &&\r\n                    (value.match(/^[a-zA-Z ]+$/)));\r\n                Errors.LastName = ValidLastName ? \"\" : \"Last name is invalid.\";\r\n                break;\r\n            case \"DateOfBirth\":\r\n                ValidDateOfBirth = (new Date(value) < new Date());\r\n                Errors.DateOfBirth = ValidDateOfBirth ? \"\" : \"Your Birthday must be earlier than today.\";\r\n                break;\r\n            case \"Nationality\":\r\n                ValidNationality = ((value !== \"\") &&\r\n                    (value.match(/^[a-zA-Z ]+$/)));\r\n                Errors.Nationality = ValidNationality ? \"\" : \"Nationality is invalid.\";\r\n                break;\r\n            case \"Address\":\r\n                ValidAddress = (value !== \"\");\r\n                Errors.Address = ValidAddress ? \"\" : \"Address is required.\";\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = value.match(/^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/);\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFirstName: ValidFirstName,\r\n            ValidLastName: ValidLastName,\r\n            ValidDateOfBirth: ValidDateOfBirth,\r\n            ValidNationality: ValidNationality,\r\n            ValidAddress: ValidAddress,\r\n            ValidPhoneNumber: ValidPhoneNumber\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidFirstName &&\r\n                    this.state.ValidLastName &&\r\n                    this.state.ValidDateOfBirth &&\r\n                    this.state.ValidNationality &&\r\n                    this.state.ValidAddress &&\r\n                    this.state.ValidPhoneNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (localStorage.verifiedCredentialsToken) {\r\n            const decoded = jwt_decode(localStorage.verifiedCredentialsToken);\r\n            this.state.Username = decoded.Username;\r\n            this.state.Email = decoded.Email;\r\n            this.state.Password = decoded.Password;\r\n            this.state.RegisterAs = decoded.RegisterAs;\r\n        }\r\n\r\n        const newUser = {\r\n            Username: this.state.Username,\r\n            Email: this.state.Email,\r\n            Password: this.state.Password,\r\n            RegisterAs: this.state.RegisterAs,\r\n            FirstName: this.state.FirstName,\r\n            LastName: this.state.LastName,\r\n            DateOfBirth: this.state.DateOfBirth,\r\n            Gender: this.state.Gender,\r\n            Address: this.state.Address,\r\n            PhoneNumber: this.state.PhoneNumber,\r\n            Nationality: this.state.Nationality,\r\n        }\r\n\r\n        if (newUser.RegisterAs == \"Driver\") {\r\n            await setupDriverAccount(newUser).then(response => {\r\n                localStorage.removeItem(\"verifiedCredentialsToken\");\r\n                localStorage.setItem(\"IsCreatedSuccessfully\", true);\r\n                this.props.history.push(\"/congratulations\");\r\n            });\r\n        }\r\n        if (newUser.RegisterAs == \"Trader\" || newUser.RegisterAs == \"Broker\") {\r\n            await setupTraderAccount(newUser).then(response => {\r\n                localStorage.removeItem(\"verifiedCredentialsToken\");\r\n                localStorage.setItem(\"IsCreatedSuccessfully\", true);\r\n                this.props.history.push(\"/congratulations\");\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.verifiedCredentialsToken) {\r\n            this.props.history.push(\"/register\");\r\n            return <a />\r\n        }\r\n        else {\r\n            return (\r\n                <div class=\"middle\" style={AccountSetupCardBack}>\r\n                    <div class=\"theme-default animated fadeIn\" style={CardLarge}>\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/create_account.png\" atl=\"create_account.png\" height=\"60\" />\r\n                            <div class=\"type-h3\" style={CardTitle}>\r\n                                Create Account\r\n                                </div>\r\n                            <div class=\"type-sh3\">\r\n                                Just one more step, and you're done!\r\n                                </div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-8\">\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"FirstName\" class=\"control-label\">First Name</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"FirstName\" autocomplete=\"off\"\r\n                                                value={this.state.FirstName} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.FirstName}</span>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"LastName\" class=\"control-label\">Last Name</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"LastName\" autocomplete=\"off\"\r\n                                                value={this.state.LastName} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.LastName}</span>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"DateOfBirth\" class=\"control-label\">Date of Birth</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"date\" class=\"form-control\" name=\"DateOfBirth\" autocomplete=\"off\"\r\n                                                value={this.state.DateOfBirth} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.DateOfBirth}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-8\">\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"Gender\" class=\"control-label\">Gender</label>\r\n                                            <div class=\"dropdown\" style={{ width: \"193px\", maxWidth: \"296px\", }}>\r\n                                                <button id=\"example-dropdown\" class=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                    aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                    <span>{this.state.Gender}</span>\r\n                                                    <span class=\"caret\"></span>\r\n                                                </button>\r\n                                                <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                    <li><a onClick={() => { this.setState({ Gender: \"Male\" }); }}>Male</a></li>\r\n                                                    <li><a onClick={() => { this.setState({ Gender: \"Female\" }); }}>Female</a></li>\r\n                                                </ul>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"Nationality\" class=\"control-label\">Nationality</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"Nationality\" autocomplete=\"off\"\r\n                                                value={this.state.Nationality} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.Nationality}</span>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"PhoneNumber\" class=\"control-label\">Phone Number</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autocomplete=\"off\"\r\n                                                placeholder=\"+XXXXXXXXXXXX\" value={this.state.PhoneNumber} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.PhoneNumber}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-8\">\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"Address\" class=\"control-label\">Address</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <textarea class=\"form-control\" rows=\"5\" name=\"Address\" autocomplete=\"off\"\r\n                                                value={this.state.Address} onChange={this.onChange}></textarea>\r\n                                            <span class=\"text-danger\">{this.state.Errors.Address}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"submit\" value=\"Create\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport default AccountSetup;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { setupAdministratorAccount } from \"../administrators/AdministratorFunctions\";\r\n\r\nimport {\r\n    AccountSetupCardBack,\r\n    CardLarge,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass SetupAdministratorAccount extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            AdministratorSecret: \"\",\r\n\r\n            ValidFirstName: false,\r\n            ValidLastName: false,\r\n            ValidAdministratorSecret: false,\r\n\r\n            ValidForm: false,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                AdministratorSecret: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFirstName = this.state.ValidFirstName;\r\n        let ValidLastName = this.state.ValidLastName;\r\n        let ValidAdministratorSecret = this.state.ValidAdministratorSecret;\r\n\r\n        switch (field) {\r\n            case \"FirstName\":\r\n                ValidFirstName = (value !== \"\");\r\n                Errors.FirstName = ValidFirstName ? \"\" : \"First name is required.\";\r\n\r\n                if (Errors.FirstName !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidFirstName = (value.match(/^[a-zA-Z ]+$/));\r\n                Errors.FirstName = ValidFirstName ? \"\" : \"First name is invalid.\";\r\n                break;\r\n            case \"LastName\":\r\n                ValidLastName = (value !== \"\");\r\n                Errors.LastName = ValidLastName ? \"\" : \"Last name is required.\";\r\n\r\n                if (Errors.LastName !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidLastName = (value.match(/^[a-zA-Z ]+$/));\r\n                Errors.LastName = ValidLastName ? \"\" : \"Last name is invalid.\";\r\n                break;\r\n            case \"AdministratorSecret\":\r\n                ValidAdministratorSecret = (value !== \"\");\r\n                Errors.AdministratorSecret = ValidAdministratorSecret ? \"\" : \"Secret code is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFirstName: ValidFirstName,\r\n            ValidLastName: ValidLastName,\r\n            ValidAdministratorSecret: ValidAdministratorSecret\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidFirstName &&\r\n                    this.state.ValidLastName &&\r\n                    this.state.ValidAdministratorSecret\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (localStorage.verifiedCredentialsToken) {\r\n            const verifiedCredentials = jwt_decode(localStorage.verifiedCredentialsToken);\r\n\r\n            const newAdministrator = {\r\n                Username: verifiedCredentials.Username,\r\n                Email: verifiedCredentials.Email,\r\n                Password: verifiedCredentials.Password,\r\n                RegisterAs: verifiedCredentials.RegisterAs,\r\n                FirstName: this.state.FirstName,\r\n                LastName: this.state.LastName,\r\n                AdministratorSecret: this.state.AdministratorSecret\r\n            }\r\n\r\n            await setupAdministratorAccount(newAdministrator).then(response => {\r\n                if (response.Message == \"Administrator created.\") {\r\n                    localStorage.removeItem(\"verifiedCredentialsToken\");\r\n                    localStorage.setItem(\"IsCreatedSuccessfully\", true);\r\n                    this.props.history.push(\"/congratulations\");\r\n                }\r\n                else {\r\n                    let errors = this.state.Errors;\r\n                    errors.AdministratorSecret = response.Message;\r\n\r\n                    this.setState({\r\n                        Errors: errors\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.verifiedCredentialsToken) {\r\n            return <Redirect to={\"/register\"} />;\r\n        }\r\n        else {\r\n            return <div class=\"middle\" style={AccountSetupCardBack}>\r\n                <div class=\"theme-default animated fadeIn\" style={CardLarge}>\r\n                    <div style={CardChild}>\r\n                        <img src=\"./images/create_account.png\" atl=\"create_account.png\" height=\"60\" />\r\n                        <div class=\"type-h3\" style={CardTitle}>\r\n                            Create Account\r\n                                </div>\r\n                        <div class=\"type-sh3\">\r\n                            Just one more step, and you're done!\r\n                                </div>\r\n                        <br />\r\n                        <form noValidate onSubmit={this.onSubmit}>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-24\">\r\n                                    <div class=\"form-group\">\r\n                                        <label class=\"control-label\">First Name</label>\r\n                                        <span class=\"text-danger m-l-xxxs\">*</span>\r\n                                        <input type=\"text\" className=\"form-control\" name=\"FirstName\" autocomplete=\"off\"\r\n                                            value={this.state.FirstName} onChange={this.onChange} />\r\n                                        <span class=\"text-danger\">{this.state.Errors.FirstName}</span>\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label class=\"control-label\">Last Name</label>\r\n                                        <span class=\"text-danger m-l-xxxs\">*</span>\r\n                                        <input type=\"text\" className=\"form-control\" name=\"LastName\" autocomplete=\"off\"\r\n                                            value={this.state.LastName} onChange={this.onChange} />\r\n                                        <span class=\"text-danger\">{this.state.Errors.LastName}</span>\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label class=\"control-label\">Secret Code</label>\r\n                                        <span class=\"text-danger m-l-xxxs\">*</span>\r\n                                        <input type=\"text\" class=\"form-control\" name=\"AdministratorSecret\" autocomplete=\"off\"\r\n                                            value={this.state.AdministratorSecret} onChange={this.onChange} />\r\n                                        <span class=\"text-danger\">{this.state.Errors.AdministratorSecret}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <input type=\"submit\" value=\"Create\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default SetupAdministratorAccount;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { setupTransportCompanyResponsibleAccount } from \"../transportCompanyResponsibles/TransportCompanyResponsiblesFunctions\";\r\n\r\nimport {\r\n    AccountSetupCardBack,\r\n    CardLarge,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass SetupTransportCompanyResponsibleAccount extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Name: \"\",\r\n            PhoneNumber: \"\",\r\n\r\n            ValidName: false,\r\n            ValidPhoneNumber: false,\r\n\r\n            ValidForm: false,\r\n\r\n            Errors: {\r\n                Name: \"\",\r\n                PhoneNumber: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidName,\r\n            ValidPhoneNumber\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"Name\":\r\n                ValidName = (value !== \"\");\r\n                Errors.Name = ValidName ? \"\" : \"Company name is required.\";\r\n\r\n                if (Errors.Name !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidName = (value.match(/^[a-zA-Z ]+$/));\r\n                Errors.Name = ValidName ? \"\" : \"Company name is invalid.\";\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = (value !== \"\");\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is required.\";\r\n\r\n                if (Errors.PhoneNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPhoneNumber = value.match(/^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/);\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidName: ValidName,\r\n            ValidPhoneNumber: ValidPhoneNumber\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: ValidName &&\r\n                        ValidPhoneNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (localStorage.verifiedCredentialsToken) {\r\n            const verifiedCredentials = jwt_decode(localStorage.verifiedCredentialsToken);\r\n\r\n            const newTransportCompanyResponsible = {\r\n                Username: verifiedCredentials.Username,\r\n                Email: verifiedCredentials.Email,\r\n                Password: verifiedCredentials.Password,\r\n                RegisterAs: verifiedCredentials.RegisterAs,\r\n                Name: this.state.Name,\r\n                PhoneNumber: this.state.PhoneNumber\r\n            }\r\n\r\n            await setupTransportCompanyResponsibleAccount(newTransportCompanyResponsible).then(response => {\r\n                if (response.Message === \"Transport company responsible created.\") {\r\n                    localStorage.removeItem(\"verifiedCredentialsToken\");\r\n                    localStorage.setItem(\"IsCreatedSuccessfully\", true);\r\n\r\n                    this.props.history.push(\"/congratulations\");\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.verifiedCredentialsToken) {\r\n            return <Redirect to={\"/register\"} />;\r\n        }\r\n        else {\r\n            return <div class=\"middle\" style={AccountSetupCardBack}>\r\n                <div class=\"theme-default animated fadeIn\" style={CardLarge}>\r\n                    <div style={CardChild}>\r\n                        <img src=\"./images/create_account.png\" atl=\"create_account.png\" height=\"60\" />\r\n                        <div class=\"type-h3\" style={CardTitle}>\r\n                            Create Account\r\n                                </div>\r\n                        <div class=\"type-sh3\">\r\n                            Just one more step, and you're done!\r\n                                </div>\r\n                        <br />\r\n                        <form noValidate onSubmit={this.onSubmit}>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-24\">\r\n                                    <div class=\"form-group\">\r\n                                        <label class=\"control-label\">Company Name</label>\r\n                                        <span class=\"text-danger m-l-xxxs\">*</span>\r\n                                        <input type=\"text\" className=\"form-control\" name=\"Name\" autocomplete=\"off\"\r\n                                            value={this.state.Name} onChange={this.onChange} />\r\n                                        <span class=\"text-danger\">{this.state.Errors.FirstName}</span>\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label htmlFor=\"PhoneNumber\" class=\"control-label\">Phone Number</label>\r\n                                        <span class=\"text-danger m-l-xxxs\">*</span>\r\n                                        <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autocomplete=\"off\"\r\n                                            placeholder=\"+XXXXXXXXXXXX\" value={this.state.PhoneNumber} onChange={this.onChange} />\r\n                                        <span class=\"text-danger\">{this.state.Errors.PhoneNumber}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <input type=\"submit\" value=\"Create\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default SetupTransportCompanyResponsibleAccount;","import React, { Component } from \"react\";\r\nimport { CongratulationsCardBack, CardXLarge } from \"../../styles/CardStyles\";\r\n\r\nclass EmailConfirmation extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n        localStorage.removeItem(\"IsCreatedSuccessfully\");\r\n        this.props.history.push(\"/login\");\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.IsCreatedSuccessfully) {\r\n            this.props.history.push(\"/register\");\r\n            return <a />\r\n        }\r\n        else {\r\n            return (\r\n                <div class=\"middle\" style={CongratulationsCardBack}>\r\n                    <div class=\"jumbotron theme-default animated fadeIn\" style={CardXLarge}>\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                    <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        alt=\"congrats.png\" src=\"./images/congrats.png\" data-source-index=\"2\" />\r\n                                </div>\r\n                                <div class=\"col-md-12 col-md-pull-12\">\r\n                                    <div class=\"type-h3\">Congratulations</div>\r\n                                    <div class=\"type-sh3\">Your account has been created successfully.</div>\r\n                                    <br />\r\n                                    <form noValidate onSubmit={this.onSubmit}>\r\n                                        <input type=\"submit\" value=\"Sign In\" class=\"btn btn-primary\" />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>);\r\n        }\r\n    }\r\n};\r\n\r\nexport default EmailConfirmation;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { getData, uploadDriverProfilePhoto } from \"../../DriverFunctions\";\r\nimport Strings from \"../../../../res/strings\";\r\n\r\nclass ProfilePhoto extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Image: null,\r\n            PhotoURL: \"./images/defaultProfilePhoto.png\",\r\n            UploadProgress: null\r\n        };\r\n\r\n        this.onImageUpload = this.onImageUpload.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"ProfilePhoto\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Profile photo found.\") {\r\n                    let profilePhoto = response.ProfilePhoto;\r\n\r\n                    this.setState({\r\n                        PhotoURL: profilePhoto.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.state({\r\n                        PhotoURL: \"./images/defaultProfilePhoto.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onImageUpload = async event => {\r\n        this.state.Image = event.target.files[0];\r\n        const formData = new FormData();\r\n\r\n        try {\r\n            formData.append(\"Image\", this.state.Image, this.state.Image.name);\r\n\r\n            await axios.post(Strings.IMAGE_UPLOADER, formData, {\r\n                onUploadProgress: event => {\r\n                    this.setState({\r\n                        UploadProgress: <div className=\"progress-bar\">\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                        </div>\r\n                    });\r\n                }\r\n            }).then(async response => {\r\n                response = response.data;\r\n\r\n                if (response.message === \"Image uploaded successfully.\") {\r\n                    const driverProfilePhoto = {\r\n                        Token: localStorage.Token,\r\n                        PhotoURL: response.imageUrl,\r\n                        FileName: response.filename\r\n                    };\r\n\r\n                    let photoURL = response.imageUrl;\r\n\r\n                    await uploadDriverProfilePhoto(driverProfilePhoto).then(response => {\r\n                        if (response.Message === \"Profile photo is updated.\" ||\r\n                            response.Message === \"Profile photo is added.\") {\r\n\r\n                            this.setState({\r\n                                PhotoURL: photoURL,\r\n                                UploadProgress: null\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }).catch(() => {\r\n                this.setState({\r\n                    ImageURL: \"./images/defaultProfilePhoto.png\",\r\n                    UploadProgress: null\r\n                });\r\n            });\r\n        }\r\n        catch (exception) {\r\n            this.setState({\r\n                UploadProgress: null\r\n            });\r\n\r\n            return;\r\n        }\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <input type=\"file\" onChange={this.onImageUpload} style={{ display: \"none\", }} ref={fileInput => this.fileInput = fileInput} />\r\n            <figure className=\"media\">\r\n                <div className=\"media-img media-img-has-play ratio-1-1\">\r\n                    <a href=\"#\" onClick={() => this.fileInput.click()}>\r\n                        <img style={{\r\n                            border: \"5px solid #3A3A3C\"\r\n                        }}\r\n                            src={this.state.PhotoURL} alt=\"ProfilePhoto.png\" />\r\n                        <i className=\"glyph glyph-edit\"></i>\r\n                    </a>\r\n                </div>\r\n            </figure>\r\n            {this.state.UploadProgress}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ProfilePhoto;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Strings from \"../res/strings\";\r\n\r\nclass ImageUploader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Image: null,\r\n            UploadProgress: null,\r\n        };\r\n\r\n        this.onImageUpload = this.onImageUpload.bind(this);\r\n    }\r\n\r\n    onImageUpload = event => {\r\n        this.state.Image = event.target.files[0];\r\n\r\n        if (this.state.Image) {\r\n            let mimeType = this.state.Image.type;\r\n\r\n            if (!mimeType.startsWith(\"image\")) {\r\n                this.props.OnInvalidImageSelected();\r\n                return;\r\n            }\r\n        }\r\n\r\n        const formData = new FormData();\r\n\r\n        try {\r\n            formData.append(\"Image\", this.state.Image, this.state.Image.name);\r\n        }\r\n        catch (exception) {\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        axios.post(Strings.IMAGE_UPLOADER, formData, {\r\n            onUploadProgress: event => {\r\n                this.setState({\r\n                    UploadProgress: (\r\n                        <div className=\"progress-bar\">\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                        </div>\r\n                    ),\r\n                });\r\n            }\r\n        }).then(async response => {\r\n            this.props.OnImageUploaded(response.data);\r\n\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n        }).catch((error) => {\r\n            this.props.OnImageUploaded(error);\r\n\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async e => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"file\" onChange={this.onImageUpload} style={{ display: \"none\", }} ref={fileInput => this.fileInput = fileInput} />\r\n                <figure className=\"media\">\r\n                    <div className=\"media-img media-img-has-play ratio-1-1\">\r\n                        <a onClick={() => this.fileInput.click()}>\r\n                            <img src={this.props.Source} alt=\"ProfilePhoto.png\"\r\n                                style={{\r\n                                    border: \"5px solid #3A3A3C\"\r\n                                }} />\r\n                            <i className=\"glyph glyph-edit\"></i>\r\n                        </a>\r\n                    </div>\r\n                </figure>\r\n                {this.state.UploadProgress}\r\n            </div>\r\n                \r\n        );\r\n    }\r\n};\r\n\r\nexport default ImageUploader;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addDrivingLicence } from \"../../../../DriverFunctions.js\";\r\n\r\nclass AddDrivingLicenceDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LicenceNumber: \"\",\r\n            Type: \"\",\r\n            ReleaseDate: new Date(),\r\n            ExpiryDate: new Date(),\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidLicenceNumber: false,\r\n            ValidType: false,\r\n            ValidReleaseDate: false,\r\n            ValidExpiryDate: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                LicenceNumber: \"\",\r\n                Type: \"\",\r\n                ReleaseDate: \"\",\r\n                ExpiryDate: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidLicenceNumber = this.state.ValidLicenceNumber;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidReleaseDate = this.state.ValidReleaseDate;\r\n        let ValidExpiryDate = this.state.ValidExpiryDate;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"LicenceNumber\":\r\n                ValidLicenceNumber = (value !== \"\");\r\n                Errors.LicenceNumber = ValidLicenceNumber ? \"\" : \"Licence number is required.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Licence type is required\";\r\n                break;\r\n            case \"ReleaseDate\":\r\n                ValidReleaseDate = (new Date(value).getTime() < new Date(this.state.ExpiryDate).getTime());\r\n                Errors.ReleaseDate = ValidReleaseDate ? \"\" : \"Release date must be earlier than Expiry date.\";\r\n                break;\r\n            case \"ExpiryDate\":\r\n                ValidExpiryDate = (new Date(value).getTime() > new Date().getTime());\r\n                Errors.ExpiryDate = ValidExpiryDate ? \"\" : \"Expiry Date must be later than today.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidLicenceNumber: ValidLicenceNumber,\r\n            ValidType: ValidType,\r\n            ValidReleaseDate: ValidReleaseDate,\r\n            ValidExpiryDate: ValidExpiryDate,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidLicenceNumber &&\r\n                        this.state.ValidType &&\r\n                        this.state.ValidReleaseDate &&\r\n                        this.state.ValidExpiryDate &&\r\n                        this.state.ValidPhotoURL,\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newDrivingLicence = {\r\n            Token: localStorage.Token,\r\n            LicenceNumber: this.state.LicenceNumber,\r\n            Type: this.state.Type,\r\n            ReleaseDate: this.state.ReleaseDate,\r\n            ExpiryDate: this.state.ExpiryDate,\r\n            PhotoURL: this.state.PhotoURL,\r\n        }\r\n\r\n        console.log(\"Going to add the Driving Licence.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addDrivingLicence(newDrivingLicence).then(response => {\r\n            if (response.Message === \"Driving Licence is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div className=\"modal\" id=\"add-driving-licence-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Add Driving Licence</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"DrivingLicence\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Licence Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"LicenceNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LicenceNumber} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LicenceNumber}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Licence Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Release Date</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"ReleaseDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ReleaseDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ReleaseDate}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Expiry Date</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"ExpiryDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ExpiryDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ExpiryDate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddDrivingLicenceDialog;","import React, { Component } from \"react\";\r\nimport AddDrivingLicenceDialog from \"./AddDrivingLicenceDialog.js\";\r\n\r\nclass AddDrivingLicenceButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddDrivingLicenceDialog: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-driving-licence-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddDrivingLicenceDialog: (<AddDrivingLicenceDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddDrivingLicenceDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />),\r\n                        });\r\n                    }}>\r\n                    <span className=\"fas fa-plus\" aria-hidden=\"true\"></span> Driving Licence\r\n                </button>\r\n                {this.state.AddDrivingLicenceDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddDrivingLicenceButton;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addEntryExitCard } from \"../../../../DriverFunctions.js\";\r\n\r\nclass AddEntryExitCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            EntryExitNumber: \"\",\r\n            Type: \"Simple\",\r\n            ReleaseDate: new Date(),\r\n            NumberOfMonths: \"\",\r\n\r\n            ValidEntryExitNumber: false,\r\n            ValidReleaseDate: false,\r\n            ValidNumberOfMonths: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                EntryExitNumber: \"\",\r\n                ReleaseDate: \"\",\r\n                NumberOfMonths: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidEntryExitNumber = this.state.ValidEntryExitNumber;\r\n        let ValidReleaseDate = this.state.ValidReleaseDate;\r\n        let ValidNumberOfMonths = this.state.ValidNumberOfMonths;\r\n\r\n        switch (field) {\r\n            case \"EntryExitNumber\":\r\n                ValidEntryExitNumber = (value !== \"\");\r\n                Errors.EntryExitNumber = ValidEntryExitNumber ? \"\" : \"Entry/exit number is required.\";\r\n                break;\r\n            case \"ReleaseDate\":\r\n                ValidReleaseDate = (new Date(value).getTime() <= new Date());\r\n                Errors.ReleaseDate = ValidReleaseDate ? \"\" : \"Release date must not be later than today.\";\r\n                break;\r\n            case \"NumberOfMonths\":\r\n                ValidNumberOfMonths = (value !== \"\");\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : \"Number of months is required.\";\r\n\r\n                if (Errors.NumberOfMonths !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNumberOfMonths = (value > 0)\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : \"Number of months must be greater than 0.\";\r\n\r\n                if (Errors.NumberOfMonths !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                let releaseDate = new Date(this.state.ReleaseDate);\r\n                let expiryDate = new Date(releaseDate.setMonth(releaseDate.getMonth() + value));\r\n\r\n                ValidNumberOfMonths = (expiryDate > new Date());\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : `Your card is expired if it is for ${value} months. Your card might be expired on ${expiryDate.toLocaleString()}`;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidEntryExitNumber: ValidEntryExitNumber,\r\n            ValidReleaseDate: ValidReleaseDate,\r\n            ValidNumberOfMonths: ValidNumberOfMonths,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidEntryExitNumber &&\r\n                        this.state.ValidReleaseDate &&\r\n                        this.state.ValidNumberOfMonths\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newEntryExitCard = {\r\n            Token: localStorage.Token,\r\n            EntryExitNumber: this.state.EntryExitNumber,\r\n            Type: this.state.Type,\r\n            ReleaseDate: this.state.ReleaseDate,\r\n            NumberOfMonths: this.state.NumberOfMonths\r\n        };\r\n\r\n        console.log(\"Going to add Entry/Exit Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addEntryExitCard(newEntryExitCard).then(response => {\r\n            if (response.Message === \"Entry/Exit card is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div className=\"modal\" id=\"add-entry-exit-card-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Add Entry/Exit Card</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Entry/Exit Number</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"EntryExitNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.EntryExitNumber} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.EntryExitNumber}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Card Type</label><br />\r\n                                                <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                    <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                        aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                        <span>{this.state.Type}</span>\r\n                                                        <span className=\"caret\"></span>\r\n                                                    </button>\r\n                                                    <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                        <li><a onClick={() => { this.setState({ Type: \"Simple\" }); }}>Simple</a></li>\r\n                                                        <li><a onClick={() => { this.setState({ Type: \"Multiple\" }); }}>Multiple</a></li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Release Date</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"date\" name=\"ReleaseDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.ReleaseDate} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.ReleaseDate}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Number of Months</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"NumberOfMonths\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.NumberOfMonths} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.NumberOfMonths}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddEntryExitCardDialog;","import React, { Component } from \"react\";\r\nimport AddEntryExitCardDialog from \"./AddEntryExitCardDialog.js\";\r\n\r\nclass AddEntryExitCardButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddEntryExitCardDialog: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-entry-exit-card-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddEntryExitCardDialog: <AddEntryExitCardDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddEntryExitCardDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />\r\n                        });\r\n                    }}>\r\n                    <span className=\"fas fa-plus\" aria-hidden=\"true\"></span> Entry/Exit Card</button>\r\n                {this.state.AddEntryExitCardDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddEntryExitCardButton;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addIdentityCard } from \"../../../../DriverFunctions.js\";\r\n\r\nclass AddIdentityCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidIDNumber: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                IDNumber: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidIDNumber = this.state.ValidIDNumber;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"IDNumber\":\r\n                ValidIDNumber = (value !== \"\");\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidIDNumber = (value >= 1000000000 && value <= 9999999999);\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number must be 10-digits long.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidIDNumber: ValidIDNumber,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidIDNumber &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newIdentityCard = {\r\n            Token: localStorage.Token,\r\n            IDNumber: this.state.IDNumber,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to add Identity Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addIdentityCard(newIdentityCard).then(response => {\r\n            if (response.Message === \"Identity card is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div className=\"modal\" id=\"add-identity-card-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Add Identity Card</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    Height=\"220px\"\r\n                                                    Width=\"220px\"\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }}\r\n                                                    ImageCategory=\"IdentityCard\" />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">ID Number</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"IDNumber\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                    value={this.state.IDNumber} onChange={this.onChange} min=\"1000000000\" max=\"9999999999\" />\r\n                                                <span className=\"text-danger\">{this.state.Errors.IDNumber}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddIdentityCardDialog;","import React, { Component } from \"react\";\r\nimport AddIdentityCardDialog from \"./AddIdentityCardDialog.js\";\r\n\r\nclass AddIdentityCardButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddIdentityCardDialog: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-identity-card-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddIdentityCardDialog: <AddIdentityCardDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddIdentityCardDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />,\r\n                        });\r\n                    }}>\r\n                    <span className=\"fas fa-plus\" aria-hidden=\"true\"></span> Identity Card</button>\r\n                {this.state.AddIdentityCardDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddIdentityCardButton;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateDrivingLicence } from \"../../../../DriverFunctions.js\";\r\n\r\nclass EditDrivingLicenceDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LicenceNumber: \"\",\r\n            Type: \"\",\r\n            ReleaseDate: new Date(),\r\n            ExpiryDate: new Date(),\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidLicenceNumber: true,\r\n            ValidType: true,\r\n            ValidReleaseDate: true,\r\n            ValidExpiryDate: true,\r\n            ValidPhotoURL: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                LicenceNumber: \"\",\r\n                Type: \"\",\r\n                ReleaseDate: \"\",\r\n                ExpiryDate: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DrivingLicence\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Driving licence found.\") {\r\n                    let drivingLicence = response.DrivingLicence;\r\n\r\n                    this.setState({\r\n                        DrivingLicenceID: drivingLicence.DrivingLicenceID,\r\n                        LicenceNumber: drivingLicence.LicenceNumber,\r\n                        Type: drivingLicence.Type,\r\n                        ReleaseDate: drivingLicence.ReleaseDate,\r\n                        ExpiryDate: drivingLicence.ExpiryDate,\r\n                        PhotoURL: drivingLicence.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DrivingLicenceID: \"\",\r\n                        LicenceNumber: \"\",\r\n                        Type: \"\",\r\n                        ReleaseDate: new Date(),\r\n                        ExpiryDate: new Date(),\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidLicenceNumber = this.state.ValidLicenceNumber;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidReleaseDate = this.state.ValidReleaseDate;\r\n        let ValidExpiryDate = this.state.ValidExpiryDate;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"LicenceNumber\":\r\n                ValidLicenceNumber = (value !== \"\");\r\n                Errors.LicenceNumber = ValidLicenceNumber ? \"\" : \"Licence number is required.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Licence type is required\";\r\n                break;\r\n            case \"ReleaseDate\":\r\n                ValidReleaseDate = (new Date(value).getTime() < new Date(this.state.ExpiryDate).getTime());\r\n                Errors.ReleaseDate = ValidReleaseDate ? \"\" : \"Release date must be earlier than Expiry date.\";\r\n                break;\r\n            case \"ExpiryDate\":\r\n                ValidExpiryDate = (new Date(value).getTime() > new Date().getTime());\r\n                Errors.ExpiryDate = ValidExpiryDate ? \"\" : \"Expiry Date must be later than today.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidLicenceNumber: ValidLicenceNumber,\r\n            ValidType: ValidType,\r\n            ValidReleaseDate: ValidReleaseDate,\r\n            ValidExpiryDate: ValidExpiryDate,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidLicenceNumber &&\r\n                        this.state.ValidType &&\r\n                        this.state.ValidReleaseDate &&\r\n                        this.state.ValidExpiryDate &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedDrivingLicence = {\r\n            Token: localStorage.Token,\r\n            LicenceNumber: this.state.LicenceNumber,\r\n            Type: this.state.Type,\r\n            ReleaseDate: this.state.ReleaseDate,\r\n            ExpiryDate: this.state.ExpiryDate,\r\n            PhotoURL: this.state.PhotoURL,\r\n        }\r\n\r\n        console.log(\"Going to update the Driving Licence.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateDrivingLicence(updatedDrivingLicence).then(response => {\r\n            if (response.Message === \"Driving Licence is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id=\"edit-driving-licence-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Driving Licence</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"DrivingLicence\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Licence Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"LicenceNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LicenceNumber} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LicenceNumber}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Licence Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Release Date</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"ReleaseDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ReleaseDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ReleaseDate}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Expiry Date</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"ExpiryDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ExpiryDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ExpiryDate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default EditDrivingLicenceDialog;","import React, { Component } from \"react\";\r\nimport EditDriverLicenceDialog from \"./EditDrivingLicenceDialog.js\";\r\nimport { getData, deleteDrivingLicence } from \"../../../../DriverFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass DrivingLicenceListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DrivingLicenceID: \"\",\r\n            LicenceNumber: \"\",\r\n            Type: \"\",\r\n            ReleaseDate: \"\",\r\n            ExpiryDate: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n            EditDrivingLicenceDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedDrivingLicence = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete Driving Licence...`);\r\n\r\n        await deleteDrivingLicence(discardedDrivingLicence).then(response => {\r\n            if (response.Message === \"Driving Licence is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DrivingLicence\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Driving licence found.\") {\r\n                    let drivingLicence = response.DrivingLicence;\r\n\r\n                    this.setState({\r\n                        DrivingLicenceID: drivingLicence.DrivingLicenceID,\r\n                        LicenceNumber: drivingLicence.LicenceNumber,\r\n                        Type: drivingLicence.Type,\r\n                        ReleaseDate: drivingLicence.ReleaseDate,\r\n                        ExpiryDate: drivingLicence.ExpiryDate,\r\n                        PhotoURL: drivingLicence.PhotoURL\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DrivingLicenceID: \"\",\r\n                        LicenceNumber: \"\",\r\n                        Type: \"\",\r\n                        ReleaseDate: \"\",\r\n                        ExpiryDate: \"\",\r\n                        PhotoURL: \"./images/default_image.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#driving-licence-${this.state.DrivingLicenceID}`}>\r\n                    <div className=\"entity-list\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\" style={{ borderRadius: \"50%\" }}>\r\n                                <span className=\"glyph glyph-add\"></span>\r\n                                <span className=\"glyph glyph-remove\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">\r\n                                    <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>{`${this.props.Index}.`}</span>\r\n                                </div>\r\n                                <div className=\"content-text-secondary\">\r\n                                    <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>DRIVING LICENCE</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"collapse\" id={`driving-licence-${this.state.DrivingLicenceID}`}>\r\n                    <div className=\"jumbotron theme-default\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        src={this.state.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                            overflow: \"hidden\",\r\n                                            border: \"5px solid #3A3A3C\",\r\n                                            margin: \"5px\"\r\n                                        }} />\r\n                                </div>\r\n                                <div className=\"col-md-18\">\r\n                                    <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Driving Licence</div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-hashtag\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Licence Number</div>\r\n                                                        <div className=\"content-text-secondary\">{this.state.LicenceNumber}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-star-of-life\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Licence Type</div>\r\n                                                        <div className=\"content-text-secondary\">{this.state.Type}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-calendar\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Release Date</div>\r\n                                                        <div className=\"content-text-secondary\">{this.state.ReleaseDate}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-calendar\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Expiry Date</div>\r\n                                                        <div className=\"content-text-secondary\">{this.state.ExpiryDate}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary\"\r\n                            data-toggle=\"modal\"\r\n                            data-target=\"#edit-driving-licence-dialog\"\r\n                            onMouseDown={() => {\r\n                                this.setState({\r\n                                    EditDrivingLicenceDialog: <EditDriverLicenceDialog\r\n                                        OnCancel={() => {\r\n                                            this.setState({\r\n                                                EditDrivingLicenceDialog: null\r\n                                            });\r\n                                        }}\r\n                                        OnOK={cancelButton => {\r\n                                            cancelButton.click();\r\n                                            this.onComponentUpdated();\r\n                                        }} />\r\n                                });\r\n                            }}>Edit</button>\r\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                    </div>\r\n                </div>             \r\n                {this.state.Preloader}\r\n                {this.state.EditDrivingLicenceDialog}\r\n            </li>        \r\n        );\r\n    }\r\n};\r\n\r\nexport default DrivingLicenceListItem;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateEntryExitCard } from \"../../../../DriverFunctions.js\";\r\n\r\nclass EditEntryExitCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            EntryExitNumber: \"\",\r\n            Type: \"Simple\",\r\n            ReleaseDate: new Date(),\r\n            NumberOfMonths: \"\",\r\n\r\n            ValidEntryExitNumber: true,\r\n            ValidReleaseDate: true,\r\n            ValidNumberOfMonths: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                EntryExitNumber: \"\",\r\n                ReleaseDate: \"\",\r\n                NumberOfMonths: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"EntryExitCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Entry/exit card found.\") {\r\n                    let entryExitCard = response.EntryExitCard;\r\n\r\n                    this.setState({\r\n                        EntryExitNumber: entryExitCard.EntryExitNumber,\r\n                        Type: entryExitCard.Type,\r\n                        ReleaseDate: entryExitCard.ReleaseDate,\r\n                        NumberOfMonths: entryExitCard.NumberOfMonths\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        EntryExitNumber: \"\",\r\n                        Type: \"Simple\",\r\n                        ReleaseDate: new Date(),\r\n                        NumberOfMonths: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidEntryExitNumber = this.state.ValidEntryExitNumber;\r\n        let ValidReleaseDate = this.state.ValidReleaseDate;\r\n        let ValidNumberOfMonths = this.state.ValidNumberOfMonths;\r\n\r\n        switch (field) {\r\n            case \"EntryExitNumber\":\r\n                ValidEntryExitNumber = (value !== \"\");\r\n                Errors.EntryExitNumber = ValidEntryExitNumber ? \"\" : \"Entry/exit number is required.\";\r\n                break;\r\n            case \"ReleaseDate\":\r\n                ValidReleaseDate = (new Date(value).getTime() <= new Date());\r\n                Errors.ReleaseDate = ValidReleaseDate ? \"\" : \"Release date must not be later than today.\";\r\n                break;\r\n            case \"NumberOfMonths\":\r\n                ValidNumberOfMonths = (value !== \"\");\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : \"Number of months is required.\";\r\n\r\n                if (Errors.NumberOfMonths !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNumberOfMonths = (value > 0)\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : \"Number of months must be greater than 0.\";\r\n\r\n                if (Errors.NumberOfMonths !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                let releaseDate = new Date(this.state.ReleaseDate);\r\n                let expiryDate = new Date(releaseDate.setMonth(releaseDate.getMonth() + value));\r\n\r\n                ValidNumberOfMonths = (expiryDate > new Date());\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : `Your card is expired if it is for ${value} months. Your card might be expired on ${expiryDate.toLocaleString()}`;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidEntryExitNumber: ValidEntryExitNumber,\r\n            ValidReleaseDate: ValidReleaseDate,\r\n            ValidNumberOfMonths: ValidNumberOfMonths,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidEntryExitNumber &&\r\n                    this.state.ValidReleaseDate &&\r\n                    this.state.ValidNumberOfMonths\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedEntryExitCard = {\r\n            Token: localStorage.Token,\r\n            EntryExitNumber: this.state.EntryExitNumber,\r\n            Type: this.state.Type,\r\n            ReleaseDate: this.state.ReleaseDate,\r\n            NumberOfMonths: this.state.NumberOfMonths\r\n        };\r\n\r\n        console.log(\"Going to update Entry/Exit Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateEntryExitCard(updatedEntryExitCard).then(response => {\r\n            if (response.Message === \"Entry/Exit card is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal\" id=\"edit-entry-exit-card-dialog\"\r\n                tabindex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Edit Entry/Exit Card</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Entry/Exit Number</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"EntryExitNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.EntryExitNumber} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.EntryExitNumber}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Card Type</label><br />\r\n                                                <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                    <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                        aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                        <span>{this.state.Type}</span>\r\n                                                        <span className=\"caret\"></span>\r\n                                                    </button>\r\n                                                    <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                        <li><a onClick={() => {\r\n                                                            this.setState({ Type: \"Simple\" });\r\n                                                            this.validateField(\"\", \"\");\r\n                                                        }}>Simple</a></li>\r\n                                                        <li><a onClick={() => {\r\n                                                            this.setState({ Type: \"Multiple\" });\r\n                                                            this.validateField(\"\", \"\");\r\n                                                        }}>Multiple</a></li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Release Date</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"date\" name=\"ReleaseDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.ReleaseDate} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.ReleaseDate}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Number of Months</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"NumberOfMonths\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.NumberOfMonths} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.NumberOfMonths}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default EditEntryExitCardDialog;","import React, { Component } from \"react\";\r\nimport EditEntryExitCardDialog from \"./EditEntryExitCardDialog.js\";\r\nimport { getData, deleteEntryExitCard } from \"../../../../DriverFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass EntryExitCardListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            EntryExitCardID: \"\",\r\n            EntryExitNumber: \"\",\r\n            Type: \"Simple\",\r\n            ReleaseDate: \"\",\r\n            NumberOfMonths: \"\",\r\n\r\n            EditEntryExitCardDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedEntryExitCard = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete Exit/Entry card.`);\r\n\r\n        await deleteEntryExitCard(discardedEntryExitCard).then(response => {\r\n            if (response.Message === \"Entry/Exit card is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"EntryExitCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Entry/exit card found.\") {\r\n                    let entryExitCard = response.EntryExitCard;\r\n\r\n                    this.setState({\r\n                        EntryExitCardID: entryExitCard.EntryExitCardID,\r\n                        EntryExitNumber: entryExitCard.EntryExitNumber,\r\n                        Type: entryExitCard.Type,\r\n                        ReleaseDate: entryExitCard.ReleaseDate,\r\n                        NumberOfMonths: entryExitCard.NumberOfMonths,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        EntryExitCardID: \"\",\r\n                        EntryExitNumber: \"\",\r\n                        Type: \"Simple\",\r\n                        ReleaseDate: \"\",\r\n                        NumberOfMonths: \"\",\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n            <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#entry-exit-card-${this.state.EntryExitCardID}`}>\r\n                <div className=\"entity-list\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\" style={{ borderRadius: \"50%\" }}>\r\n                            <span className=\"glyph glyph-add\"></span>\r\n                            <span className=\"glyph glyph-remove\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>{`${this.props.Index}.`}</span>\r\n                            </div>\r\n                            <div className=\"content-text-secondary\">\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>ENTRY/EXIT CARD</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`entry-exit-card-${this.state.EntryExitCardID}`}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-24\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Entry/Exit Card</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Entry/Exit Number</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.EntryExitNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-star-of-life\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Entry/Exit Type</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.Type}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-calendar\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Release Date</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.ReleaseDate}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-calendar\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Number of Months</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.NumberOfMonths}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#edit-entry-exit-card-dialog\"\r\n                        onMouseDown={() => {\r\n                            this.setState({\r\n                                EditEntryExitCardDialog: <EditEntryExitCardDialog\r\n                                    OnCancel={() => {\r\n                                        this.setState({\r\n                                            EditEntryExitCardDialog: null\r\n                                        });\r\n                                    }}\r\n                                    OnOK={cancelButton => {\r\n                                        cancelButton.click();\r\n                                        this.onComponentUpdated();\r\n                                    }} />\r\n                            });\r\n                        }}>Edit</button>\r\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                </div>\r\n            </div>\r\n            {this.state.Preloader}\r\n            {this.state.EditEntryExitCardDialog}\r\n        </li>;\r\n    }\r\n};\r\n\r\nexport default EntryExitCardListItem;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateIdentityCard } from \"../../../../DriverFunctions.js\";\r\n\r\nclass EditIdentityCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidIDNumber: true,\r\n            ValidPhotoURL: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                IDNumber: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Identity card found.\") {\r\n                    let identityCard = response.IdentityCard;\r\n\r\n                    this.setState({\r\n                        IDNumber: identityCard.IDNumber,\r\n                        PhotoURL: identityCard.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        IDNumber: \"\",\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidIDNumber = this.state.ValidIDNumber;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"IDNumber\":\r\n                ValidIDNumber = (value !== \"\");\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidIDNumber = (value >= 1000000000 && value <= 9999999999);\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number must be 10-digits long.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidIDNumber: ValidIDNumber,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidIDNumber &&\r\n                    this.state.ValidPhotoURL\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedIdentityCard = {\r\n            Token: localStorage.Token,\r\n            IDNumber: this.state.IDNumber,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to update Identity Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateIdentityCard(updatedIdentityCard).then(response => {\r\n            if (response.Message === \"Identity card is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id=\"edit-identity-card-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Identity Card</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"IdentityCard\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">ID Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"IDNumber\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.IDNumber} onChange={this.onChange} min=\"1000000000\" max=\"99999999999\" />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.IDNumber}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default EditIdentityCardDialog;","import React, { Component } from \"react\";\r\nimport EditIdentityCardDialog from \"./EditIdentityCardDialog.js\";\r\nimport { getData, deleteIdentityCard } from \"../../../../DriverFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass IdentityCardListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IdentityCardID: \"\",\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            EditIdentityCardDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedIdentityCard = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete Identity Card.`);\r\n\r\n        await deleteIdentityCard(discardedIdentityCard).then(response => {\r\n            if (response.Message === \"Identity card is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Identity card found.\") {\r\n                    let identityCard = response.IdentityCard;\r\n\r\n                    this.setState({\r\n                        IdentityCardID: identityCard.IdentityCardID,\r\n                        IDNumber: identityCard.IDNumber,\r\n                        PhotoURL: identityCard.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        IdentityCardID: \"\",\r\n                        IDNumber: \"\",\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n            <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#identity-card-${this.state.IdentityCardID}`}>\r\n                <div className=\"entity-list\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\" style={{ borderRadius: \"50%\" }}>\r\n                            <span className=\"glyph glyph-add\"></span>\r\n                            <span className=\"glyph glyph-remove\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>{`${this.props.Index}.`}</span>\r\n                            </div>\r\n                            <div className=\"content-text-secondary\">\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>IDENTITY CARD</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`identity-card-${this.state.IdentityCardID}`}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={this.state.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Identity Card</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">ID Number</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.IDNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#edit-identity-card-dialog\"\r\n                        onMouseDown={() => {\r\n                            this.setState({\r\n                                EditIdentityCardDialog: (<EditIdentityCardDialog\r\n                                    OnCancel={() => {\r\n                                        this.setState({\r\n                                            EditIdentityCardDialog: null\r\n                                        });\r\n                                    }}\r\n                                    OnOK={cancelButton => {\r\n                                        cancelButton.click();\r\n                                        this.onComponentUpdated();\r\n                                    }} />)\r\n                            });\r\n                        }}>Edit</button>\r\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                </div>\r\n            </div> \r\n            {this.state.Preloader}\r\n            {this.state.EditIdentityCardDialog}\r\n        </li>;\r\n    }\r\n};\r\n\r\nexport default IdentityCardListItem;","import React, { Component } from \"react\";\r\nimport AddDrivingLicenceButton from \"./drivingLicence/AddDrivingLicenceButton.js\";\r\nimport AddEntryExitCardButton from \"./entryExitCard/AddEntryExitCardButton.js\";\r\nimport AddIdentityCardButton from \"./identityCard/AddIdentityCardButton.js\";\r\nimport DrivingLicenceListItem from \"./drivingLicence/DrivingLicenceListItem.js\"; \r\nimport EntryExitCardListItem from \"./entryExitCard/EntryExitCardListItem.js\";\r\nimport IdentityCardListItem from \"./identityCard/IdentityCardListItem.js\";\r\nimport { getData } from \"../../../DriverFunctions\";\r\n\r\nclass DocumentsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddDrivingLicenceButton: null,\r\n            AddEntryExitCardButton: null,\r\n            AddIdentityCardButton: null, \r\n            DrivingLicenceListItem: null,\r\n            EntryExitCardListItem: null,\r\n            IdentityCardListItem: null,\r\n        };\r\n\r\n        this.onDocumentsUpdated = this.onDocumentsUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onDocumentsUpdated();\r\n    }\r\n\r\n    onDocumentsUpdated = () => {\r\n        let index = 0;\r\n        let drivingLicence;\r\n        let entryExitCard;\r\n        let identityCard;\r\n\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DrivingLicence\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Driving licence found.\") {\r\n                    drivingLicence = response.DrivingLicence;\r\n                }\r\n                else {\r\n                    drivingLicence = undefined;\r\n                }\r\n\r\n                request = {\r\n                    Token: localStorage.Token,\r\n                    Get: \"EntryExitCard\"\r\n                };\r\n\r\n                getData(request).then(response => {\r\n                    if (response.Message === \"Entry/exit card found.\") {\r\n                        entryExitCard = response.EntryExitCard;\r\n                    }\r\n                    else {\r\n                        entryExitCard = undefined;\r\n                    }\r\n\r\n                    request = {\r\n                        Token: localStorage.Token,\r\n                        Get: \"IdentityCard\"\r\n                    };\r\n\r\n                    getData(request).then(response => {\r\n                        if (response.Message === \"Identity card found.\") {\r\n                            identityCard = response.IdentityCard;\r\n                        }\r\n                        else {\r\n                            identityCard = undefined;\r\n                        }\r\n\r\n                        (drivingLicence) ? this.setState({\r\n                            AddDrivingLicenceButton: null,\r\n                            DrivingLicenceListItem: <DrivingLicenceListItem\r\n                                Index={++index}\r\n                                OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                        }) : this.setState({\r\n                            AddDrivingLicenceButton: <AddDrivingLicenceButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                            DrivingLicenceListItem: null\r\n                        });\r\n\r\n                        (entryExitCard) ? this.setState({\r\n                            AddEntryExitCardButton: null,\r\n                            EntryExitCardListItem: <EntryExitCardListItem\r\n                                Index={++index}\r\n                                OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                        }) : this.setState({\r\n                            AddEntryExitCardButton: <AddEntryExitCardButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                            EntryExitCardListItem: null\r\n                        });\r\n\r\n                        (identityCard) ? this.setState({\r\n                            AddIdentityCardButton: null,\r\n                            IdentityCardListItem: <IdentityCardListItem\r\n                                Index={++index}\r\n                                OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                        }) : this.setState({\r\n                            AddIdentityCardButton: <AddIdentityCardButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                            IdentityCardListItem: null\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Documents</div>\r\n                <div style={{ padding: \"10px\", backgroundColor: \"#E5E5E5\" }}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-18 col-md-offset-2\"></div>\r\n                        <div className=\"col-md-4 text-right\">\r\n                            {this.state.AddDrivingLicenceButton}\r\n                            {this.state.AddEntryExitCardButton}\r\n                            {this.state.AddIdentityCardButton}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ol className=\"list-items\" style={{ marginTop: \"0px\" }}>\r\n                    {this.state.DrivingLicenceListItem}\r\n                    {this.state.EntryExitCardListItem}\r\n                    {this.state.IdentityCardListItem}\r\n                </ol>\r\n            </section>         \r\n        );\r\n    }\r\n};\r\n\r\nexport default DocumentsList;","import React, { Component } from \"react\";\r\n\r\nclass Rating extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div class={`rating ${this.props.Size} ${this.props.Color}`}>\r\n                <div class=\"rating-stars\">\r\n            <ul class=\"rating-stars-background\">\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                    </ul>\r\n                    <ul class=\"rating-stars-value\" style={{ width: `${this.props.Rating}%` }}>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                    </ul>\r\n                </div>\r\n                {this.props.Label ? <div class=\"rating-label rating-label-right\">{this.props.Label}</div> : null}\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Rating;","import React, { Component } from \"react\";\r\n\r\nclass PageHeading extends Component {\r\n    render() {\r\n        return <section>\r\n            <div style={{ backgroundColor: \"#1C6D6E\", padding: \"5px 5px 5px 20px\" }}>\r\n                <div className=\"sh1 color-light\" style={{ fontWeight: \"bold\" }}>{`/ ${this.props.Heading}`}</div>\r\n            </div>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#26525F\" }}></div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PageHeading;","import React, { Component } from \"react\";\r\nimport ProfilePhoto from \"./ProfilePhoto\";\r\nimport DocumentsList from \"./documents/DocumentsList.js\";\r\nimport Rating from \"../../../../controls/Rating\";\r\nimport { getData } from \"../../DriverFunctions.js\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Profile extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            Username: \"\",\r\n            Password: \"\",\r\n            Email: \"\",\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\",\r\n            Active: null,\r\n            RatingAndReviews: {},\r\n\r\n            WarningAlert: null,\r\n            Errors: {}\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Driver\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver found.\") {\r\n                    let driver = response.Driver;\r\n\r\n                    this.setState({\r\n                        Username: driver.Username,\r\n                        Password: driver.Password,\r\n                        Email: driver.Email,\r\n                        FirstName: driver.FirstName,\r\n                        LastName: driver.LastName,\r\n                        DateOfBirth: driver.DateOfBirth,\r\n                        Gender: driver.Gender,\r\n                        Address: driver.Address,\r\n                        PhoneNumber: driver.PhoneNumber,\r\n                        Nationality: driver.Nationality,\r\n                        Active: driver.Active,\r\n                        RatingAndReviews: response.RatingAndReviews\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Username: \"\",\r\n                        Password: \"\",\r\n                        Email: \"\",\r\n                        FirstName: \"\",\r\n                        LastName: \"\",\r\n                        Address: \"\",\r\n                        PhoneNumber: \"\",\r\n                        Gender: \"\",\r\n                        Nationality: \"\",\r\n                        DateOfBirth: \"\",\r\n                        Active: null,\r\n                        RatingAndReviews: {}\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const ratingAndReviews = this.state.RatingAndReviews;\r\n\r\n        return <section>\r\n            <PageHeading Heading=\"PROFILE\" />\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <ProfilePhoto />\r\n                        </div>\r\n                        <div className=\"col-md-18\">\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                {this.state.FirstName + \" \" + this.state.LastName}\r\n                            </div>\r\n                            <div className=\"type-sh3\">\r\n                                <span className=\"fas fa-briefcase m-r-xxxs\" style={{ color: \"#606060\" }}></span>Driver\r\n                            </div>\r\n                            <div className=\"type-sh3\">\r\n                                <span><Rating Rating={ratingAndReviews.Reviews > 0 ? ratingAndReviews.Rating : 0}\r\n                                    Color=\"\" Size=\"rating-small\"\r\n                                    Label={ratingAndReviews.Reviews > 0 ?\r\n                                        `(${ratingAndReviews.Reviews} Review(s))` : `No Reviews`} /></span>\r\n                            </div>\r\n                            \r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-globe-asia\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Active</div>\r\n                                                <div className=\"content-text-secondary\">{(this.state.Active === 1) ?\r\n                                                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-phone\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Phone Number</div>\r\n                                                <div className=\"content-text-secondary\">{this.state.PhoneNumber}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-at\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Username</div>\r\n                                                <div className=\"content-text-secondary\">{this.state.Username}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-envelope\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Email</div>\r\n                                                <div className=\"content-text-secondary\">{this.state.Email}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\" }}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-24\">\r\n                            <div className=\"type-h3\" style={{ paddingTop: \"0px\" }}>Details</div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list theme-alt\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                <span className=\"fas fa-birthday-cake color-default\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Birthday</div>\r\n                                                <div className=\"content-text-secondary\">{this.state.DateOfBirth}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list theme-alt\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                <span className={(this.state.Gender === \"Male\") ? \"fas fa-male color-default\" : \"fas fa-female color-default\"}></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Gender</div>\r\n                                                <div className=\"content-text-secondary\">{this.state.Gender}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list theme-alt\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                <span className=\"fas fa-flag color-default\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Nationality</div>\r\n                                                <div className=\"content-text-secondary\">{this.state.Nationality}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list theme-alt\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                <span className=\"fas fa-map-marker-alt color-default\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Address</div>\r\n                                                <div className=\"content-text-secondary\">{this.state.Address}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <DocumentsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Profile;","import React, { Component } from \"react\";\r\nimport { getData, updateTruck } from \"../../DriverFunctions\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\n\r\nclass TruckSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            PlateNumber: \"\",\r\n            Owner: \"\",\r\n            ProductionYear: \"\",\r\n            Brand: \"\",\r\n            Model: \"\",\r\n            Type: \"\",\r\n            MaximumWeight: \"\",\r\n\r\n            ValidPlateNumber: true,\r\n            ValidOwner: true,\r\n            ValidProductionYear: true,\r\n            ValidBrand: true,\r\n            ValidModel: true,\r\n            ValidType: true,\r\n            ValidMaximumWeight: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                PlateNumber: \"\",\r\n                Owner: \"\",\r\n                ProductionYear: \"\",\r\n                Brand: \"\",\r\n                Model: \"\",\r\n                Type: \"\",\r\n                MaximumWeight: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Truck\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Truck found.\") {\r\n                    let truck = response.Truck;\r\n\r\n                    this.setState({\r\n                        PlateNumber: truck.PlateNumber,\r\n                        Owner: truck.Owner,\r\n                        ProductionYear: truck.ProductionYear,\r\n                        Brand: truck.Brand,\r\n                        Model: truck.Model,\r\n                        Type: truck.Type,\r\n                        MaximumWeight: truck.MaximumWeight\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        PlateNumber: \"\",\r\n                        Owner: \"\",\r\n                        ProductionYear: \"\",\r\n                        Brand: \"\",\r\n                        Model: \"\",\r\n                        Type: \"\",\r\n                        MaximumWeight: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidPlateNumber = this.state.ValidPlateNumber;\r\n        let ValidOwner = this.state.ValidOwner;\r\n        let ValidProductionYear = this.state.ValidProductionYear;\r\n        let ValidBrand = this.state.ValidBrand;\r\n        let ValidModel = this.state.ValidModel;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidMaximumWeight = this.state.MaximumWeight;\r\n\r\n        switch (field) {\r\n            case \"PlateNumber\":\r\n                ValidPlateNumber = ((value !== \"\") && (value >= 1 && value <= 999));\r\n                Errors.PlateNumber = ValidPlateNumber ? \"\" : \"Plate Number must be between 001 and 999.\";\r\n                break;\r\n            case \"Owner\":\r\n                ValidOwner = (value !== \"\");\r\n                Errors.Owner = ValidOwner ? \"\" : \"Owner is required.\";\r\n                break;\r\n            case \"ProductionYear\":\r\n                let currentYear = new Date().getFullYear();\r\n                ValidProductionYear = ((value !== \"\") && (value >= 2000 && value <= currentYear));\r\n                Errors.ProductionYear = ValidProductionYear ? \"\" : `Production Year must be between 2000 and ${currentYear}`;\r\n                break;\r\n            case \"Brand\":\r\n                ValidBrand = (value !== \"\");\r\n                Errors.Brand = ValidBrand ? \"\" : \"Brand is required.\";\r\n                break;\r\n            case \"Model\":\r\n                ValidModel = (value !== \"\");\r\n                Errors.Model = ValidModel ? \"\" : \"Model is required.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required\";\r\n                break;\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n\r\n                if (Errors.MaximumWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidMaximumWeight = (value >= 700);\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum weight must be greater than 699.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPlateNumber: ValidPlateNumber,\r\n            ValidOwner: ValidOwner,\r\n            ValidProductionYear: ValidProductionYear,\r\n            ValidBrand: ValidBrand,\r\n            ValidModel: ValidModel,\r\n            ValidType: ValidType,\r\n            ValidMaximumWeight: ValidMaximumWeight\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidPlateNumber &&\r\n                    this.state.ValidOwner &&\r\n                    this.state.ValidProductionYear &&\r\n                    this.state.ValidBrand &&\r\n                    this.state.ValidModel &&\r\n                    this.state.ValidType &&\r\n                    this.state.MaximumWeight\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        let request = {\r\n            Token: localStorage.Token,\r\n            Get: \"Owner\",\r\n            Params: {\r\n                Owner: this.state.Owner\r\n            }\r\n        };\r\n\r\n        await getData(request).then(async response => {\r\n            if (response.Message === \"Owner found.\") {\r\n                this.setState({\r\n                    Preloader: <Preloader />\r\n                });\r\n\r\n                const updatedTruck = {\r\n                    Token: localStorage.Token,\r\n                    TransportCompanyResponsibleID: response.Owner.TransportCompanyResponsibleID,\r\n                    PlateNumber: this.state.PlateNumber,\r\n                    Owner: response.Owner.Username,\r\n                    ProductionYear: this.state.ProductionYear,\r\n                    Brand: this.state.Brand,\r\n                    Model: this.state.Model,\r\n                    Type: this.state.Type,\r\n                    MaximumWeight: this.state.MaximumWeight\r\n                }\r\n\r\n                await updateTruck(updatedTruck).then(response => {\r\n                    this.setState({\r\n                        Preloader: false\r\n                    });\r\n\r\n                    if (response.Message === \"Truck is updated.\") {\r\n                        this.setState({\r\n                            ValidForm: false\r\n                        });\r\n\r\n                        this.props.OnTruckSettingsUpdated();\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                let {\r\n                    Errors,\r\n                } = this.state;\r\n\r\n                Errors.Owner = \"Owner not found.\"\r\n\r\n                this.setState({\r\n                    Errors: Errors,\r\n                    ValidOwner: false,\r\n                    ValidForm: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Truck Settings</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-list-ol\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"number\" name=\"PlateNumber\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.PlateNumber} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Plate Number</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.PlateNumber}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-copyright\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"Owner\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Owner} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Owner</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.Owner}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-calendar-day\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"number\" name=\"ProductionYear\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.ProductionYear} onChange={this.onChange} placeholder=\"XXXX\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Production Year</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"ProductionYear\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-copyright\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"Brand\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Brand} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Brand</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.Brand}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-list-ol\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"Model\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Model} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Truck Model</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.Model}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-cog\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Type} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Truck Type</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.Type}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-weight\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"number\" name=\"MaximumWeight\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Maximum Weight (GVW)</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.MaximumWeight}</div>\r\n                            </div>\r\n                        </div>                      \r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default TruckSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { Required } from \"../../../../styles/MiscellaneousStyles\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader\";\r\nimport { getData, addTruck } from \"../../DriverFunctions\";\r\n\r\nclass AddTruckDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PlateNumber: \"\",\r\n            Owner: \"\",\r\n            ProductionYear: \"\",\r\n            Brand: \"\",\r\n            Model: \"\",\r\n            Type: \"\",\r\n            MaximumWeight: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidPlateNumber: false,\r\n            ValidOwner: false,\r\n            ValidProductionYear: false,\r\n            ValidBrand: false,\r\n            ValidModel: false,\r\n            ValidType: false,\r\n            ValidMaximumWeight: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                PlateNumber: \"\",\r\n                Owner: \"\",\r\n                ProductionYear: \"\",\r\n                Brand: \"\",\r\n                Model: \"\",\r\n                Type: \"\",\r\n                MaximumWeight: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidPlateNumber = this.state.ValidPlateNumber;\r\n        let ValidOwner = this.state.ValidOwner;\r\n        let ValidProductionYear = this.state.ValidProductionYear;\r\n        let ValidBrand = this.state.ValidBrand;\r\n        let ValidModel = this.state.ValidModel;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidMaximumWeight = this.state.ValidMaximumWeight;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"PlateNumber\":\r\n                ValidPlateNumber = (value !== \"\");\r\n                Errors.PlateNumber = ValidPlateNumber ? \"\" : \"Plate number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPlateNumber = (value >= 100 && value <= 999);\r\n                Errors.PlateNumber = ValidPlateNumber ? \"\" : \"Plate number must be 3-digits long.\";\r\n                break;\r\n            case \"Owner\":\r\n                ValidOwner = (value !== \"\");\r\n                Errors.Owner = ValidOwner ? \"\" : \"Owner is required.\";\r\n                break;\r\n            case \"ProductionYear\":\r\n                let currentYear = new Date().getFullYear();\r\n                ValidProductionYear = ((value !== \"\") && (value >= 2000 && value <= currentYear));\r\n                Errors.ProductionYear = ValidProductionYear ? \"\" : `Production Year must be between 2000 and ${currentYear}`;\r\n                break;\r\n            case \"Brand\":\r\n                ValidBrand = (value !== \"\");\r\n                Errors.Brand = ValidBrand ? \"\" : \"Brand is required.\";\r\n                break;\r\n            case \"Model\":\r\n                ValidModel = (value !== \"\");\r\n                Errors.Model = ValidModel ? \"\" : \"Model is required.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required\";\r\n                break;\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n\r\n                if (Errors.MaximumWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidMaximumWeight = (value >= 700);\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum weight must be greater than 699.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPlateNumber: ValidPlateNumber,\r\n            ValidOwner: ValidOwner,\r\n            ValidProductionYear: ValidProductionYear,\r\n            ValidBrand: ValidBrand,\r\n            ValidModel: ValidModel,\r\n            ValidType: ValidType,\r\n            ValidMaximumWeight: ValidMaximumWeight,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidPlateNumber &&\r\n                        this.state.ValidOwner &&\r\n                        this.state.ValidProductionYear &&\r\n                        this.state.ValidBrand &&\r\n                        this.state.ValidModel &&\r\n                        this.state.ValidType &&\r\n                        this.state.ValidMaximumWeight &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        let request = {\r\n            Token: localStorage.Token,\r\n            Get: \"Owner\",\r\n            Params: {\r\n                Owner: this.state.Owner\r\n            }\r\n        };\r\n\r\n        await getData(request).then(async response => {\r\n            console.log(response);\r\n\r\n            if (response.Message === \"Owner found.\") {\r\n                \r\n                this.setState({\r\n                    ShowPreloader: true\r\n                });\r\n\r\n                const newTruck = {\r\n                    Token: localStorage.Token,\r\n                    TransportCompanyResponsibleID: response.Owner.TransportCompanyResponsibleID,\r\n                    PlateNumber: this.state.PlateNumber,\r\n                    Owner: response.Owner.Username,\r\n                    ProductionYear: this.state.ProductionYear,\r\n                    Brand: this.state.Brand,\r\n                    Model: this.state.Model,\r\n                    Type: this.state.Type,\r\n                    MaximumWeight: this.state.MaximumWeight,\r\n                    PhotoURL: this.state.PhotoURL\r\n                }\r\n\r\n                await addTruck(newTruck).then(response => {\r\n                    this.setState({\r\n                        ShowPreloader: false\r\n                    });\r\n\r\n                    if (response.Message === \"Truck is added.\") {\r\n                        this.cancelButton.click();\r\n                        this.props.OnOK();\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                let {\r\n                    Errors,\r\n                } = this.state;\r\n\r\n                Errors.Owner = \"Owner not found.\"\r\n\r\n                this.setState({\r\n                    Errors: Errors,\r\n                    ValidOwner: false,\r\n                    ValidForm: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"add-truck-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }} />\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"type-h3 color-default p-t-xxs\">Add Truck</div>\r\n                                                <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-md-12\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <label className=\"control-label\">Plate Number</label>\r\n                                                            <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                            <input type=\"number\" name=\"PlateNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                                value={this.state.PlateNumber} onChange={this.onChange} />\r\n                                                            <span className=\"text-danger\">{this.state.Errors.PlateNumber}</span>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label className=\"control-label\">Owner</label>\r\n                                                            <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                            <input type=\"text\" name=\"Owner\" className=\"form-control\" autoComplete=\"off\"\r\n                                                                value={this.state.Owner} onChange={this.onChange} />\r\n                                                            <span className=\"text-danger\">{this.state.Errors.Owner}</span>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label className=\"control-label\">Production Year</label>\r\n                                                            <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                            <input type=\"number\" name=\"ProductionYear\" className=\"form-control\" autoComplete=\"off\"\r\n                                                                value={this.state.ProductionYear} onChange={this.onChange} placeholder=\"XXXX\" />\r\n                                                            <span className=\"text-danger\">{this.state.Errors.ProductionYear}</span>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label className=\"control-label\">Brand</label>\r\n                                                            <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                            <input type=\"text\" name=\"Brand\" className=\"form-control\" autoComplete=\"off\"\r\n                                                                value={this.state.Brand} onChange={this.onChange} />\r\n                                                            <span className=\"text-danger\">{this.state.Errors.Brand}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-12\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <label className=\"control-label\">Truck Model</label>\r\n                                                            <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                            <input type=\"text\" name=\"Model\" className=\"form-control\" autoComplete=\"off\"\r\n                                                                value={this.state.Model} onChange={this.onChange} />\r\n                                                            <span className=\"text-danger\">{this.state.Errors.Model}</span>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label className=\"control-label\">Truck Type</label>\r\n                                                            <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                            <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\"\r\n                                                                value={this.state.Type} onChange={this.onChange} />\r\n                                                            <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label className=\"control-label\">Maximum Weight (GVW)</label>\r\n                                                            <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                            <input type=\"number\" name=\"MaximumWeight\" className=\"form-control\" autoComplete=\"off\"\r\n                                                                value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                                            <span className=\"text-danger\">{this.state.Errors.MaximumWeight}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddTruckDialog;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles\";\r\nimport ImageUploader from \"../../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { addTrailer } from \"../../../DriverFunctions.js\";\r\n\r\nclass AddTrailerDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            MaximumWeight: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n            Type: \"\",\r\n\r\n            ValidMaximumWeight: false,\r\n            ValidPhotoURL: false,\r\n            ValidType: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                MaximumWeight: \"\",\r\n                PhotoURL: \"\",\r\n                Type: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidMaximumWeight = this.state.ValidMaximumWeight;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n        let ValidType = this.state.ValidType;\r\n\r\n        switch (field) {\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n\r\n                if (Errors.MaximumWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidMaximumWeight = (value >= 700);\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum weight must be greater than 699.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidMaximumWeight: ValidMaximumWeight,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n            ValidType: ValidType\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidMaximumWeight &&\r\n                        this.state.ValidPhotoURL &&\r\n                        this.state.ValidType\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newTrailer = {\r\n            Token: localStorage.Token,\r\n            MaximumWeight: this.state.MaximumWeight,\r\n            PhotoURL: this.state.PhotoURL,\r\n            Type: this.state.Type\r\n        }\r\n\r\n        console.log(\"Going to add the trailer...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addTrailer(newTrailer).then(response => {\r\n            if (response.Message === \"Trailer is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id=\"add-trailer-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">New Trailer</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\" Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Maximum Weight (GVW)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"MaximumWeight\" className=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.MaximumWeight}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Trailer Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddTrailerDialog;","import React, { Component } from \"react\";\r\nimport AddTrailerDialog from \"./AddTrailerDialog\";\r\n\r\nclass AddTrailer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddTrailerDialog: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-truck-pickup\"></span>   Trailers</div>\r\n                            <p className=\"color-light\">RECOMMENDED: Since your truck is all set up, you're good to go for adding up to TWO trailers to it.</p>\r\n                            <div className=\"btn-group\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-primary\"\r\n                                    style={{ minWidth: \"152px\" }}\r\n                                    data-toggle=\"modal\"\r\n                                    data-target=\"#add-trailer-dialog\"\r\n                                    onMouseDown={() => {\r\n                                        this.setState({\r\n                                            AddTrailerDialog: <AddTrailerDialog\r\n                                                OnCancel={() => {\r\n                                                    this.setState({\r\n                                                        AddTrailerDialog: null\r\n                                                    });\r\n                                                }}\r\n                                                OnOK={cancelButton => {\r\n                                                    cancelButton.click();\r\n                                                    this.props.OnTrailerAdded();\r\n                                                }} />\r\n                                        });\r\n                                    }}>Add Trailer</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {this.state.AddTrailerDialog} \r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddTrailer;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles\";\r\nimport ImageUploader from \"../../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { updateTrailer } from \"../../../DriverFunctions.js\";\r\n\r\nclass EditTrailerDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            MaximumWeight: this.props.Trailer.MaximumWeight,\r\n            PhotoURL: this.props.Trailer.PhotoURL,\r\n            Type: this.props.Trailer.Type,\r\n\r\n            ValidMaximumWeight: true,\r\n            ValidPhotoURL: true,\r\n            ValidType: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                MaximumWeight: \"\",\r\n                PhotoURL: \"\",\r\n                Type: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidMaximumWeight = this.state.ValidMaximumWeight;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n        let ValidType = this.state.ValidType;\r\n\r\n        switch (field) {\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n\r\n                if (Errors.MaximumWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidMaximumWeight = (value >= 700);\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum weight must be greater than 699.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidMaximumWeight: ValidMaximumWeight,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n            ValidType: ValidType\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidMaximumWeight &&\r\n                        this.state.ValidPhotoURL &&\r\n                        this.state.ValidType\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedTrailer = {\r\n            Token: localStorage.Token,\r\n            TrailerID: this.props.Trailer.TrailerID,\r\n            MaximumWeight: this.state.MaximumWeight,\r\n            PhotoURL: this.state.PhotoURL,\r\n            Type: this.state.Type\r\n        }\r\n\r\n        console.log(\"Going to update trailer...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        updateTrailer(updatedTrailer).then(response => {\r\n            if (response.Message === \"Trailer is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id={`edit-trailer-dialog${this.props.dialogID}`}\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Trailer</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\" Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory={this.state.ImageCategory} />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Maximum Weight (GVW)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"MaximumWeight\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.MaximumWeight}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Trailer Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default EditTrailerDialog;","import React, { Component } from \"react\";\r\nimport { deleteTrailer } from \"../../../DriverFunctions.js\";\r\nimport EditTrailerDialog from \"./EditTrailerDialog.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\n\r\nclass TrailersList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Trailers: this.props.Trailers,\r\n            EditTrailerDialogs: [],\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async index => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedTrailer = {\r\n            Token: localStorage.Token,\r\n            TrailerID: this.state.Trailers[index].TrailerID \r\n        };\r\n\r\n        console.log(`Going to delete Trailers[${index}]...`);\r\n\r\n        await deleteTrailer(discardedTrailer).then(response => {\r\n            if (response.Message === \"Trailer is deleted.\") {\r\n                this.props.OnTrailersUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Trailers</div>\r\n            <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                {this.state.Trailers.map((value, index) => {\r\n                    return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                        <div className=\"jumbotron theme-default\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-6\">\r\n                                        <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                            src={value.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                                overflow: \"hidden\",\r\n                                                border: \"5px solid #3A3A3C\",\r\n                                                margin: \"5px\"\r\n                                            }} />\r\n                                    </div>\r\n                                    <div className=\"col-md-18\">\r\n                                        <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>{`Trailer # ${index + 1}.`}</div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"entity-list\">\r\n                                                    <div className=\"entity-list-item\">\r\n                                                        <div className=\"item-icon\">\r\n                                                            <span className=\"fas fa-weight\"></span>\r\n                                                        </div>\r\n                                                        <div className=\"item-content-primary\">\r\n                                                            <div className=\"content-text-primary\">Maximum Weight</div>\r\n                                                            <div className=\"content-text-secondary\">{`${value.MaximumWeight} GVM`}</div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"entity-list\">\r\n                                                    <div className=\"entity-list-item\">\r\n                                                        <div className=\"item-icon\">\r\n                                                            <span className=\"fas fa-star-of-life\"></span>\r\n                                                        </div>\r\n                                                        <div className=\"item-content-primary\">\r\n                                                            <div className=\"content-text-primary\">Trailer Type</div>\r\n                                                            <div className=\"content-text-secondary\">{value.Type}</div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target={`#edit-trailer-dialog${index}`}\r\n                                onMouseDown={() => {\r\n                                    let editTrailerDialogs = this.state.EditTrailerDialogs;\r\n\r\n                                    editTrailerDialogs[index] = <EditTrailerDialog\r\n                                        dialogID={index}\r\n                                        Trailer={value}\r\n                                        OnCancel={() => {\r\n                                            let editTrailerDialogs = this.state.EditTrailerDialogs\r\n                                            editTrailerDialogs[index] = null;\r\n\r\n                                            this.setState({\r\n                                                EditTrailerDialogs: editTrailerDialogs,\r\n                                            });\r\n\r\n                                        }}\r\n                                        OnOK={cancelButton => {\r\n                                            cancelButton.click();\r\n                                            this.props.OnTrailersUpdated();\r\n                                        }} />;\r\n\r\n                                    this.setState({\r\n                                        EditTrailerDialogs: editTrailerDialogs,\r\n                                    });\r\n                                }}>Edit</button>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(index); }}>Delete</button>\r\n                        </div>\r\n                        {this.state.EditTrailerDialogs[index]}\r\n                    </li>\r\n                })}\r\n            </ol>\r\n            {this.state.Preloader}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TrailersList;","import React, { Component } from \"react\";\r\nimport AddTrailer from \"./AddTrailer\";\r\nimport TrailersList from \"./TrailersList\"\r\nimport { getData } from \"../../../DriverFunctions\";\r\n\r\nclass Trailers extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddTrailer: null,\r\n            TrailersList: null\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Trailers\"\r\n            };\r\n\r\n            this.setState({\r\n                AddTrailer: null,\r\n                TrailersList: null\r\n            });\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Trailers found.\") {\r\n\r\n                    if (response.Trailers.length < 2) {\r\n                        this.setState({\r\n                            AddTrailer: <AddTrailer OnTrailerAdded={this.onComponentUpdated} />,\r\n                            TrailersList: <TrailersList Trailers={response.Trailers}\r\n                                OnTrailersUpdated={this.onComponentUpdated} />\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            AddTrailer: null,\r\n                            TrailersList: <TrailersList Trailers={response.Trailers}\r\n                                OnTrailersUpdated={this.onComponentUpdated} />\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AddTrailer: <AddTrailer OnTrailerAdded={this.onComponentUpdated} />,\r\n                        TrailersList: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            {this.state.AddTrailer}\r\n            {this.state.TrailersList}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Trailers;","import React, { Component } from \"react\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader\";\r\nimport { getData, updateTruckPhoto, deleteTruck } from \"../../DriverFunctions\";\r\nimport TruckSettings from \"./TruckSettings\";\r\nimport AddTruckDialog from \"./AddTruckDialog\";\r\nimport Trailers from \"./trailers/Trailers\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Truck extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            Truck: null,\r\n            ShowPreloader: false\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Truck\"\r\n            };\r\n\r\n            this.setState({\r\n                Preloader: <Preloader />\r\n            });\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Truck found.\") {\r\n                    this.setState({\r\n                        Truck: response.Truck,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Truck: null,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const discardedTruck = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete truck...`);\r\n\r\n        await deleteTruck(discardedTruck).then(async response => {\r\n            if (response.Message === \"Truck is deleted.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                await this.onComponentUpdated();\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const truck = this.state.Truck;\r\n        const showPreloader = this.state.ShowPreloader;\r\n\r\n        return <section>\r\n            <PageHeading Heading=\"TRUCKS\" />\r\n            {truck ? \r\n                <section>\r\n                    <div className=\"jumbotron theme-default\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <ImageUploader Source={truck.PhotoURL}\r\n                                        Height=\"200px\" Width=\"200px\"\r\n                                        OnImageUploaded={async response => {\r\n                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                const updatedTruck = {\r\n                                                    Token: localStorage.Token,\r\n                                                    PhotoURL: response.imageUrl\r\n                                                };\r\n\r\n                                                await updateTruckPhoto(updatedTruck).then(response => {\r\n                                                    if (response.Message === \"Truck photo updated.\") {\r\n                                                        this.setState({\r\n                                                            PhotoURL: updatedTruck.PhotoURL\r\n                                                        });\r\n                                                    }\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        OnInvalidImageSelected={() => {\r\n                                            return;\r\n                                        }}\r\n                                        ImageCategory=\"Truck\" />\r\n                                </div>\r\n                                <div className=\"col-md-18\">\r\n                                    <div className=\"type-h3 color-default p-t-n\">\r\n                                        {`${truck.Brand} ${truck.Model}`}\r\n                                    </div>\r\n                                    <div className=\"type-sh3\">\r\n                                        <span className=\"fas fa-truck m-r-xxs\" style={{ color: \"#606060\" }}></span>{truck.Type}\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-list-ol\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Plate Number</div>\r\n                                                        <div className=\"content-text-secondary\">{truck.PlateNumber}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-calendar-day\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Production Year</div>\r\n                                                        <div className=\"content-text-secondary\">{truck.ProductionYear}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-weight\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Maximum Weight</div>\r\n                                                        <div className=\"content-text-secondary\">{`${truck.MaximumWeight} GVW`}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-copyright\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Owner</div>\r\n                                                        <div className=\"content-text-secondary\">{truck.Owner}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.onDelete}>Delete Truck</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <TruckSettings OnTruckSettingsUpdated={this.onComponentUpdated} />\r\n                    <Trailers />\r\n                    {showPreloader ? <Preloader /> : null}\r\n                </section> :\r\n                <section>\r\n                    <div className=\"jumbotron theme-alt\" style={{ width: \"100%\", height: \"100vh\", backgroundColor: \"#333333\" }}>\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        alt=\"add_truck.png\" src=\"./images/add_truck.png\" data-source-index=\"2\" />\r\n                                </div>\r\n                                <div className=\"col-md-12 col-md-pull-12\">\r\n                                    <div className=\"type-h3\">Truck</div>\r\n                                    <div className=\"type-sh3\">You have not added any truck yet.</div>\r\n                                    <p>Adding your truck will let the Traders or Brokers see details about your it. Valid and complete details of your truck make more chances for you to receive job requests.</p>\r\n                                    <div className=\"btn-group\">\r\n                                        <button className=\"btn btn-primary\"\r\n                                            data-toggle=\"modal\"\r\n                                            data-target=\"#add-truck-dialog\">Add Now</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <AddTruckDialog OnOK={this.onComponentUpdated} />\r\n                    {showPreloader ? <Preloader /> : null}\r\n                </section>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Truck;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { addPermitLicence } from \"../../DriverFunctions.js\";\r\n\r\nclass AddPermitLicenceDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PermitNumber: \"\",\r\n            ExpiryDate: new Date(),\r\n            PhotoURL: \"./images/default_image.png\",\r\n            Code: \"\",\r\n            Place: \"\",\r\n\r\n            ValidPermitNumber: false,\r\n            ValidExpiryDate: false,\r\n            ValidPhotoURL: false,\r\n            ValidCode: false,\r\n            ValidPlace: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                PermitNumber: \"\",\r\n                ExpiryDate: \"\",\r\n                PhotoURL: \"\",\r\n                Code: \"\",\r\n                Place: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidPermitNumber = this.state.ValidPermitNumber;\r\n        let ValidExpiryDate = this.state.ValidExpiryDate;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n        let ValidCode = this.state.ValidCode;\r\n        let ValidPlace = this.state.ValidPlace;\r\n\r\n        switch (field) {\r\n            case \"PermitNumber\":\r\n                ValidPermitNumber = (value !== \"\");\r\n                Errors.PermitNumber = ValidPermitNumber ? \"\" : \"Permit number is required.\";\r\n\r\n                if (Errors.PermitNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPermitNumber = (value !== \"\");\r\n                Errors.PermitNumber = ValidPermitNumber ? \"\" : \"Permit number is required.\";\r\n\r\n                break;\r\n            case \"ExpiryDate\":\r\n                ValidExpiryDate = (new Date(value).getTime() >= new Date().getTime());\r\n                Errors.ExpiryDate = ValidExpiryDate ? \"\" : \"Expiry Date must be later than yesterday.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            case \"Code\":\r\n                ValidCode = (value !== \"\");\r\n                Errors.Code = ValidCode ? \"\" : \"Permit code is required.\";\r\n                break;\r\n            case \"Place\":\r\n                ValidPlace = (value !== \"\");\r\n                Errors.Place = ValidPlace ? \"\" : \"Permit place is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPermitNumber: ValidPermitNumber,\r\n            ValidExpiryDate: ValidExpiryDate,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n            ValidCode: ValidCode,\r\n            ValidPlace: ValidPlace,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidPermitNumber &&\r\n                        this.state.ValidExpiryDate &&\r\n                        this.state.ValidPhotoURL &&\r\n                        this.state.ValidCode &&\r\n                        this.state.ValidPlace\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newPermitLicence = {\r\n            Token: localStorage.Token,\r\n            PermitNumber: this.state.PermitNumber,\r\n            ExpiryDate: this.state.ExpiryDate,\r\n            PhotoURL: this.state.PhotoURL,\r\n            Code: this.state.Code,\r\n            Place: this.state.Place\r\n        }\r\n\r\n        console.log(\"Going to add Permit Licence.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addPermitLicence(newPermitLicence).then(response => {\r\n            if (response.Message === \"Permit Licence is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div className=\"modal\" id=\"add-permit-licence-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Add Permit Licence</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    Height=\"220px\"\r\n                                                    Width=\"220px\"\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }} />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Permit Number</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"PermitNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.PermitNumber} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.PermitNumber}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Expiry Date</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"date\" name=\"ExpiryDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.ExpiryDate} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.ExpiryDate}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Permit Code</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Code\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Code} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Code}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Permit Place</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Place\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Place} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Place}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddPermitLicenceDialog;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../styles/MiscellaneousStyles\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { updatePermitLicence } from \"../../DriverFunctions.js\";\r\n\r\nclass EditPermitLicenceDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PermitNumber: this.props.PermitLicence.PermitNumber,\r\n            ExpiryDate: this.props.PermitLicence.ExpiryDate,\r\n            PhotoURL: this.props.PermitLicence.PhotoURL,\r\n            Code: this.props.PermitLicence.Code,\r\n            Place: this.props.PermitLicence.Place,\r\n\r\n            ValidPermitNumber: true,\r\n            ValidExpiryDate: true,\r\n            ValidPhotoURL: true,\r\n            ValidCode: true,\r\n            ValidPlace: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                PermitNumber: \"\",\r\n                ExpiryDate: \"\",\r\n                PhotoURL: \"\",\r\n                Code: \"\",\r\n                Place: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidPermitNumber = this.state.ValidPermitNumber;\r\n        let ValidExpiryDate = this.state.ValidExpiryDate;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n        let ValidCode = this.state.ValidCode;\r\n        let ValidPlace = this.state.ValidPlace;\r\n\r\n        switch (field) {\r\n            case \"PermitNumber\":\r\n                ValidPermitNumber = (value !== \"\");\r\n                Errors.PermitNumber = ValidPermitNumber ? \"\" : \"Permit number is required.\";\r\n                break;\r\n            case \"ExpiryDate\":\r\n                ValidExpiryDate = (new Date(value).getTime() >= new Date().getTime());\r\n                Errors.ExpiryDate = ValidExpiryDate ? \"\" : \"Expiry Date must be later than yesterday.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            case \"Code\":\r\n                ValidCode = (value !== \"\");\r\n                Errors.Code = ValidCode ? \"\" : \"Permit code is required.\";\r\n                break;\r\n            case \"Place\":\r\n                ValidPlace = (value !== \"\");\r\n                Errors.Place = ValidPlace ? \"\" : \"Permit place is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPermitNumber: ValidPermitNumber,\r\n            ValidExpiryDate: ValidExpiryDate,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n            ValidCode: ValidCode,\r\n            ValidPlace: ValidPlace,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidPermitNumber &&\r\n                    this.state.ValidExpiryDate &&\r\n                    this.state.ValidPhotoURL &&\r\n                    this.state.ValidCode &&\r\n                    this.state.ValidPlace\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedPermitLicence = {\r\n            Token: localStorage.Token,\r\n            PermitLicenceID: this.props.PermitLicence.PermitLicenceID,\r\n            PermitNumber: this.state.PermitNumber,\r\n            ExpiryDate: this.state.ExpiryDate,\r\n            PhotoURL: this.state.PhotoURL,\r\n            Code: this.state.Code,\r\n            Place: this.state.Place\r\n        }\r\n\r\n        console.log(\"Going to update Permit Licence.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updatePermitLicence(updatedPermitLicence).then(async response => {\r\n            if (response.Message === \"Permit Licence is updated.\") {\r\n                this.cancelButton.click();\r\n                await this.props.OnOK();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div className=\"modal\" id={`edit-permit-dialog${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Add Permit Licence</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    Height=\"220px\"\r\n                                                    Width=\"220px\"\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }} />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Permit Number</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"PermitNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.PermitNumber} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.PermitNumber}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Expiry Date</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"date\" name=\"ExpiryDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.ExpiryDate} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.ExpiryDate}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Permit Code</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Code\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Code} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Code}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Permit Place</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Place\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Place} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Place}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\"\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default EditPermitLicenceDialog;","import React, { Component } from \"react\";\r\nimport { deletePermitLicence } from \"../../DriverFunctions.js\";\r\nimport EditPermitLicenceDialog from \"./EditPermitLicenceDialog.js\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\n\r\nclass PermitLicenceListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllPermitLicences: [],\r\n            PermitLicences: [],\r\n            EditPermitLicenceDialogs: [],\r\n            SearchString: \"\",\r\n            Preloader: null,\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async permitLicenceID => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedPermitLicence = {\r\n            Token: localStorage.Token,\r\n            PermitLicenceID: permitLicenceID\r\n        };\r\n\r\n        console.log(\"Going to delete Permit licence...\");\r\n\r\n        await deletePermitLicence(discardedPermitLicence).then(async response => {\r\n            if (response.Message === \"Permit Licence is deleted.\") {\r\n                await this.props.OnPermitLicenceUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const permitLicence = this.props.PermitLicence;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                src={permitLicence.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"col-md-18\">\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>{`${index + 1}.`}</div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-hashtag\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Permit Number</div>\r\n                                                <div className=\"content-text-secondary\">{permitLicence.PermitNumber}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-calendar\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Expiry Date</div>\r\n                                                <div className=\"content-text-secondary\">{permitLicence.ExpiryDate}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-asterisk\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Permit Code</div>\r\n                                                <div className=\"content-text-secondary\">{permitLicence.Code}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-map-marker-alt\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Permit Place</div>\r\n                                                <div className=\"content-text-secondary\">{permitLicence.Place}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#edit-permit-dialog${index}`}>Edit</button>\r\n                <button type=\"button\" className=\"btn btn-danger\" onClick={async () => { await this.onDelete(permitLicence.PermitLicenceID); }}>Delete</button>\r\n            </div>\r\n            <EditPermitLicenceDialog\r\n                DialogID={index}\r\n                PermitLicence={permitLicence}\r\n                OnOK={async () => { await this.props.OnPermitLicenceUpdated(); }} />\r\n            {this.state.Preloader}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PermitLicenceListItem;","import React, { Component } from \"react\";\r\n\r\nclass ProgressBar extends Component {\r\n    render() {\r\n        return <div className=\"progress-bar\">\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n        </div>;\r\n    }\r\n};\r\n\r\nexport default ProgressBar","import React, { Component } from \"react\";\r\nimport { getData } from \"../../DriverFunctions.js\";\r\nimport PermitLicenceListItem from \"./PermitLicencesListItem\";\r\nimport ProgressBar from \"../../../../controls/ProgressBar\";\r\n\r\nclass PermitLicencesList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllPermitLicences: [],\r\n            PermitLicences: [],\r\n            SearchString: \"\",\r\n            Searching: null,\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"PermitLicences\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true,\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Permit licences found.\") {\r\n                    this.setState({\r\n                        AllPermitLicences: response.PermitLicences,\r\n                        PermitLicences: response.PermitLicences,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllPermitLicences: [],\r\n                        PermitLicences: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.SearchString === \"\") {\r\n            this.setState({\r\n                PermitLicences: this.state.AllPermitLicences\r\n            });\r\n        }\r\n\r\n        const allPermitLicences = this.state.AllPermitLicences;\r\n        let filteredPermitLicences = [];\r\n\r\n        for (var i = 0; i < allPermitLicences.length; i++) {\r\n            if (allPermitLicences[i].Place.includes(this.state.SearchString)) {\r\n                filteredPermitLicences[i] = allPermitLicences[i];\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            PermitLicences: filteredPermitLicences\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const permitLicences = this.state.PermitLicences;\r\n\r\n        return (\r\n            <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Permit Licences</div>\r\n                <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                    <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                        <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                            <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                                <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search by Permit Place\"\r\n                                            style={{ maxWidth: \"500px\", width: \"100%\" }} autoComplete=\"off\"\r\n                                            value={this.state.SearchString} onChange={this.onChange} />\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                {(permitLicences.length === 0) ?\r\n                    <div className=\"jumbotron theme-default\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                {this.state.Searching ? <div className=\"col-md-24 text-center\">\r\n                                    <div>\r\n                                        <div className=\"type-h3\" style={{ color: \"#008575\" }}>Searching</div>\r\n                                        <ProgressBar />\r\n                                    </div>\r\n                                </div> : <div className=\"col-md-24 text-center\">\r\n                                        <h3><span className=\"fas fa-exclamation-triangle\" style={{ color: \"#FFBF15\" }}></span> No licences found.</h3>\r\n                                    </div>}\r\n                            </div>\r\n                        </div>\r\n                    </div> : <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                        {this.state.PermitLicences.map((permitLicence, index) => {\r\n                            return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                                <PermitLicenceListItem Index={index}\r\n                                    PermitLicence={permitLicence}\r\n                                    OnPermitLicenceUpdated={async () => { await this.onComponentUpdated() }} />\r\n                            </li>\r\n                        })}\r\n                    </ol>}\r\n                {this.state.Preloader}\r\n            </section>         \r\n        );\r\n    }\r\n};\r\n\r\nexport default PermitLicencesList;","import React, { Component } from \"react\";\r\nimport AddPermitLicenceDialog from \"./AddPermitLicenceDialog.js\";\r\nimport PermitLicencesList from \"./PermitLicencesList.js\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Permits extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddPermitLicenceDialog: null\r\n        };\r\n\r\n        this.onPermitLicencesUpdated = this.onPermitLicencesUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onPermitLicencesUpdated();\r\n    }\r\n\r\n    onPermitLicencesUpdated = () => {\r\n        this.PermitLicencesList.onComponentUpdated();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <PageHeading Heading=\"PERMITS\" />\r\n                <div class=\"page-header\" style={{\r\n                    backgroundImage: \"url(/images/teal.jpg)\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundColor: \"#215761\"\r\n                }}>\r\n                    <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xs-18\">\r\n                                <div className=\"type-h3 color-light\"><span className=\"fas fa-id-badge\"></span>   Permit Licences</div>\r\n                                <p className=\"color-light\">If you are a non-Saudi driver, then you must have at least one permit licence.</p>\r\n                                <div className=\"btn-group\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-primary\"\r\n                                        data-toggle=\"modal\"\r\n                                        data-target=\"#add-permit-licence-dialog\"\r\n                                        onMouseDown={() => {\r\n                                            this.setState({\r\n                                                AddPermitLicenceDialog: (<AddPermitLicenceDialog\r\n                                                    OnCancel={() => {\r\n                                                        this.setState({\r\n                                                            AddPermitLicenceDialog: null,\r\n                                                        });\r\n                                                    }}\r\n                                                    OnOK={cancelButton => {\r\n                                                        cancelButton.click();\r\n                                                        this.onPermitLicencesUpdated();\r\n                                                    }} />),\r\n                                            });\r\n                                        }}>New Permit Licence</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <PermitLicencesList ref={permitLicencesList => this.PermitLicencesList = permitLicencesList} />\r\n                {this.state.AddPermitLicenceDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Permits;","import React, { Component } from \"react\";\r\nimport ProgressBar from \"../../controls/ProgressBar\";\r\n\r\nclass SearchingContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const searching = this.props.Searching;\r\n        const searchingFor = this.props.SearchingFor;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\" style={{ width: \"100%\", height: \"100vh\" }}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {searching ? <div className=\"col-md-24 text-center\">\r\n                            <div>\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\" }}>Searching</div>\r\n                                <ProgressBar />\r\n                            </div>\r\n                        </div> : <div className=\"col-md-24 text-center\">\r\n                                <h3><span className=\"fas fa-exclamation-triangle\" style={{ color: \"#FFBF15\" }}></span>{` No ${searchingFor} found.`}</h3>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            </div> \r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default SearchingContainer;","import React, { Component } from \"react\";\r\n\r\nclass ProgressRing extends Component {\r\n    render() {\r\n        return <div className=\"progress-ring\">\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n        </div>;\r\n    }\r\n};\r\n\r\nexport default ProgressRing;","import React, { Component } from \"react\";\r\n\r\nclass EarningListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const earning = this.props.Earning;\r\n        const created = new Date(earning.Created);\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{index + 1}</strong>\r\n                {index === 0 ? <span class=\"badge back-color-golden m-l-xxxs\">NEW</span> : null}\r\n            </td>\r\n            <td>{`$${earning.Amount.toFixed(2)}`}</td>\r\n            <td>{earning.JobNumber}</td>\r\n            <td>{earning.DuesPaid ?\r\n                <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</td>\r\n            <td>{`${created.toDateString()} at ${created.toLocaleTimeString()}`}</td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default EarningListItem;","import React, { Component } from \"react\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport SearchingContainer from \"../../../../containers/searching/SearchingContainer\";\r\nimport ProgressRing from \"../../../../controls/ProgressRing\";\r\nimport EarningListItem from \"./EarningListItem\";\r\nimport { getData } from \"../../DriverFunctions\";\r\n\r\nclass EarningsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Earnings: [],\r\n            NetEarning: 0,\r\n            Searching: false,\r\n            Refreshing: false,\r\n        }\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Earnings\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Earnings found.\") {\r\n                    this.setState({\r\n                        Earnings: response.Earnings,\r\n                        NetEarning: response.NetEarning,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Earnings: [],\r\n                        NetEarning: 0,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Earnings\"\r\n            };\r\n\r\n            this.setState({\r\n                Refreshing: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Earnings found.\") {\r\n                    this.setState({\r\n                        Earnings: response.Earnings,\r\n                        NetEarning: response.NetEarning,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Earnings: [],\r\n                        NetEarning: 0,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const earnings = this.state.Earnings;\r\n        const netEarning = this.state.NetEarning; \r\n\r\n        return <section>\r\n            <PageHeading Heading=\"EARNINGS\" />\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/teal.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-coins m-r-xs\"></span>Earnings</div>\r\n                            <p className=\"color-light\">JOB CHARGES: In case you have some unpaid dues, you must pay them from Payments section.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"alert alert-info m-n\" style={{ backgroundColor: \"#333333\" }}>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <div className=\"entity-list theme-alt\">\r\n                            <div className=\"entity-list-item\">\r\n                                <div className=\"item-icon\" style={{ backgroundColor: \"#333333\", color: \"#008575\" }}>\r\n                                    <span className=\"fas fa-dollar-sign\"></span>\r\n                                </div>\r\n                                <div className=\"item-content-primary\">\r\n                                    <div className=\"content-text-primary\">Net Earning</div>\r\n                                    <div className=\"content-text-secondary\">{`$${netEarning.toFixed(2)}`}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Your Earnings\r\n                    {this.state.Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            {(earnings.length === 0) ?\r\n                <SearchingContainer Searching={this.state.Searching}\r\n                    SearchingFor=\"earnings\" /> :\r\n                <div class=\"table-responsive back-color-gray\" style={{ height: \"100vh\" }}>\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>NUMBER</th>\r\n                                <th>AMOUNT</th>\r\n                                <th>JOB NUMBER</th>\r\n                                <th>DUES PAID?</th>\r\n                                <th>EARNED ON</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {earnings.map((earning, index) => {\r\n                                return <EarningListItem key={index}\r\n                                    Index={index}\r\n                                    Earning={earning} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default EarningsList;","import React, { Component } from \"react\";\r\nimport EarningsList from \"./EarningsList\";\r\n\r\nclass FinancialAffairs extends Component {\r\n    render() {\r\n        return <section>\r\n            <EarningsList Refresh={this.props.Refresh} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default FinancialAffairs;","import React, { Component } from \"react\";\r\n\r\nclass IdentityCardContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const identityCard = this.props.IdentityCard;\r\n\r\n        return identityCard ? <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={identityCard.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-16\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Identity Card</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-24\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">ID Number</div>\r\n                                                    <div className=\"content-text-secondary\">{identityCard.IDNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </section> : null;\r\n    }\r\n};\r\n\r\nexport default IdentityCardContainer;","import React, { Component } from \"react\";\r\n\r\nclass CommercialRegisterCertificateContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const commercialRegisterCertificate = this.props.CommercialRegisterCertificate;\r\n\r\n        return commercialRegisterCertificate ? <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={commercialRegisterCertificate.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-16\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Commercial Register Certificate</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-24\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Certificate Number</div>\r\n                                                    <div className=\"content-text-secondary\">{commercialRegisterCertificate.Number}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-cog\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Certificate Type</div>\r\n                                                    <div className=\"content-text-secondary\">{commercialRegisterCertificate.Type}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </section> : null;\r\n    }\r\n};\r\n\r\nexport default CommercialRegisterCertificateContainer;","import axios from \"axios\";\r\nimport Strings from \"../../res/strings\";\r\n\r\n// GET: GetPublicData\r\nexport const getPublicData = async request => {\r\n    console.log(`Sending GET request to ${Strings.NAQEL_SERVER}users/get${request.Get}...`);\r\n    return await axios.get(`${Strings.NAQEL_SERVER}users/get${request.Get}`, {\r\n        params: request.Params\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};","import React, { Component } from \"react\";\r\nimport IdentityCardContainer from \"./IdentityCardContainer\";\r\nimport CommercialRegisterCertificateContainer from \"./CommercialRegisterCertificateContainer\";\r\nimport SearchingContainer from \"../../searching/SearchingContainer\";\r\nimport { getPublicData } from \"../../../components/shared/UserFunctions\";\r\n\r\nclass DocumentsDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TraderDocuments: null,\r\n            Searching: false,\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Get: \"TraderDocuments\",\r\n                Params: {\r\n                    TraderID: this.props.TraderID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Trader documents found.\") {\r\n                    this.setState({\r\n                        TraderDocuments: response.TraderDocuments,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TraderDocuments: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const traderDocuments = this.state.TraderDocuments;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`documents-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h2\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Documents</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {(this.state.Searching || !traderDocuments) ?\r\n                                <SearchingContainer Searching={this.state.Searching}\r\n                                    SearchingFor=\"documents\" /> :\r\n                                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                                    <IdentityCardContainer IdentityCard={traderDocuments.IdentityCard} />\r\n                                    <CommercialRegisterCertificateContainer CommercialRegisterCertificate={traderDocuments.CommercialRegisterCertificate} />\r\n                                </ol>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DocumentsDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport SearchingContainer from \"../searching/SearchingContainer\";\r\nimport DocumentsDialog from \"./documents/DocumentsDialog\";\r\nimport { getPublicData } from \"../../components/shared/UserFunctions\";\r\n\r\nclass TraderContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TraderProfile: null,\r\n            Searching: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.refresh.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.props.Refresh) {\r\n            this.props.Refresh(this.refresh);\r\n        }\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Get: \"TraderProfile\",\r\n                Params: {\r\n                    TraderID: this.props.TraderID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Trader profile found.\") {\r\n                    this.setState({\r\n                        TraderProfile: response.TraderProfile,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TraderProfile: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Get: \"TraderProfile\",\r\n                Params: {\r\n                    TraderID: this.props.TraderID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Trader profile found.\") {\r\n                    this.setState({\r\n                        TraderProfile: response.TraderProfile\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TraderProfile: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Searching || !this.state.TraderProfile) {\r\n            return <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor=\"trader\" />;\r\n        }\r\n        else {\r\n            const traderProfile = this.state.TraderProfile;\r\n            const trader = traderProfile.Trader;\r\n            const onJob = traderProfile.OnJob;\r\n            const profilePhoto = traderProfile.ProfilePhoto ?\r\n                traderProfile.ProfilePhoto :\r\n                \"./images/defaultProfilePhoto.png\";\r\n\r\n            const dialogID = UUID().substring(0, 7).toUpperCase();\r\n\r\n            return <section>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={profilePhoto} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                    {`${trader.FirstName} ${trader.LastName}`}\r\n                                    {onJob ? <span class=\"badge back-color-golden m-l-xxs\">ON JOB</span> : null}\r\n                                </div>\r\n                                <div className=\"type-sh3\">\r\n                                    <span className=\"fas fa-briefcase\" style={{ color: \"#606060\" }}></span>   {trader.Type}\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-globe-asia\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Active</div>\r\n                                                    <div className=\"content-text-secondary\">{(trader.Active === 1) ?\r\n                                                        <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                        <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className={(trader.Gender === \"Male\") ? \"fas fa-male\" : \"fas fa-female\"}></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Gender</div>\r\n                                                    <div className=\"content-text-secondary\">{trader.Gender}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-birthday-cake\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Birthday</div>\r\n                                                    <div className=\"content-text-secondary\">{trader.DateOfBirth}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-flag\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Nationality</div>\r\n                                                    <div className=\"content-text-secondary\">{trader.Nationality}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-envelope\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Email</div>\r\n                                                    <div className=\"content-text-secondary\">{trader.Email}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-phone\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Phone Number</div>\r\n                                                    <div className=\"content-text-secondary\">{trader.PhoneNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {this.props.TabView ? \r\n                                    null :\r\n                                    <button type=\"button\" className=\"btn btn-default\"\r\n                                        style={{ minWidth: \"152px\" }} data-toggle=\"modal\"\r\n                                        data-target={`#documents-dialog-${dialogID}`}>Documents</button>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.props.TabView ?\r\n                    null : \r\n                    <DocumentsDialog DialogID={dialogID}\r\n                        TraderID={this.props.TraderID} />}\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default TraderContainer;","import React, { Component } from \"react\";\r\nimport IdentityCardContainer from \"./IdentityCardContainer\";\r\nimport CommercialRegisterCertificateContainer from \"./CommercialRegisterCertificateContainer\";\r\nimport SearchingContainer from \"../../searching/SearchingContainer\";\r\nimport { getPublicData } from \"../../../components/shared/UserFunctions\";\r\n\r\nclass DocumentsContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TraderDocuments: null,\r\n            Searching: false,\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Get: \"TraderDocuments\",\r\n                Params: {\r\n                    TraderID: this.props.TraderID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Trader documents found.\") {\r\n                    this.setState({\r\n                        TraderDocuments: response.TraderDocuments,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TraderDocuments: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            let request = {\r\n                Get: \"TraderDocuments\",\r\n                Params: {\r\n                    TraderID: this.props.TraderID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Trader documents found.\") {\r\n                    this.setState({\r\n                        TraderDocuments: response.TraderDocuments\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TraderDocuments: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const traderDocuments = this.state.TraderDocuments;\r\n\r\n        return (this.state.Searching || !traderDocuments) ?\r\n            <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor=\"documents\" /> :\r\n            <section>\r\n                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    <IdentityCardContainer IdentityCard={traderDocuments.IdentityCard} />\r\n                    <CommercialRegisterCertificateContainer CommercialRegisterCertificate={traderDocuments.CommercialRegisterCertificate} />\r\n                </ol>\r\n            </section>;\r\n    }\r\n};\r\n\r\nexport default DocumentsContainer;","import React, { Component } from \"react\";\r\nimport TraderContainer from \"../../../../../containers/trader/TraderContainer\";\r\nimport DocumentsContainer from \"../../../../../containers/trader/documents/DocumentsContainer\";\r\n\r\nclass ProfileDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`profile-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <section>\r\n                                <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                                    <li role=\"presentation\" className=\"active\">\r\n                                        <a href={`#trader-tab-${index}`} aria-controls={`trader-tab-${index}`} role=\"tab\" data-toggle=\"tab\">Trader</a>\r\n                                    </li>\r\n                                    <li role=\"presentation\">\r\n                                        <a href={`#documents-tab-${index}`} aria-controls={`documents-tab-${index}`} role=\"tab\" data-toggle=\"tab\">Documents</a>\r\n                                    </li>\r\n                                </ul>\r\n                                <div className=\"tab-content\">\r\n                                    <div role=\"tabpanel\" className=\"tab-pane active\" id={`trader-tab-${index}`}>\r\n                                        <TraderContainer Refresh={this.props.RefreshTrader} TraderID={this.props.TraderID} TabView={true} />\r\n                                    </div>\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id={`documents-tab-${index}`}>\r\n                                        <DocumentsContainer Refresh={this.props.RefreshDocuments} TraderID={this.props.TraderID} />\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ProfileDialog;","import React, { Component } from \"react\";\r\n\r\nclass TraderRequestContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const traderRequest = this.props.TraderRequest;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron\">\r\n                <div className=\"container\">\r\n                    <div className=\"col-md-24\">\r\n                        <div className=\"type-h3 color-default p-t-n\">Trader Request</div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-box\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Cargo Type</div>\r\n                                        <div className=\"content-text-secondary\">{traderRequest.CargoType}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-weight\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Cargo Weight</div>\r\n                                        <div className=\"content-text-secondary\">{`${traderRequest.CargoWeight} lbs.`}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-id-badge\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Entry/Exit</div>\r\n                                        <div className=\"content-text-secondary\">{(traderRequest.EntryExit === 1) ?\r\n                                            <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                            <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Date</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(traderRequest.LoadingDate).toDateString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Time</div>\r\n                                        <div className=\"content-text-secondary\">{traderRequest.LoadingTime}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Accpeted Delay</div>\r\n                                        <div className=\"content-text-secondary\">{`${traderRequest.AcceptedDelay} Hour(s)`}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Requested on</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(traderRequest.Created).toDateString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Requested at</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(traderRequest.Created).toTimeString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderRequestContainer;","import React, { Component } from \"react\";\r\nimport TraderRequestContainer from \"../../../../../containers/traderRequest/TraderRequestContainer\";\r\n\r\nclass RequestDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const traderRequest = this.props.TraderRequest;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`request-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <TraderRequestContainer TraderRequest={traderRequest} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default RequestDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport ProfileDialog from \"./ProfileDialog\";\r\nimport RequestDialog from \"./RequestDialog\";\r\nimport { toggleSelectTraderRequest } from \"../../../DriverFunctions\";\r\n\r\nclass TraderRequestRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false\r\n        };\r\n\r\n        this.onToggleSelect = this.onToggleSelect.bind(this);\r\n    }\r\n\r\n    onToggleSelect = async (traderRequestID, isSelected) => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const selectedTraderRequest = {\r\n            Token: localStorage.Token,\r\n            TraderRequestID: traderRequestID,\r\n            Selected: isSelected\r\n        };\r\n\r\n        console.log(`Going to select Trader request...`);\r\n\r\n        await toggleSelectTraderRequest(selectedTraderRequest).then(async response => {\r\n            if (response.Message === \"Trader request is toggled.\") {\r\n\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                await this.props.OnTraderRequestUpdated();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const traderRequestPackage = this.props.TraderRequestPackage;\r\n        const traderRequest = traderRequestPackage.TraderRequest;\r\n        const trader = traderRequestPackage.Trader;\r\n        const traderOnJob = traderRequestPackage.TraderOnJob;\r\n        const requestSelected = this.props.requestSelected;\r\n\r\n        const profileIndex = UUID();\r\n        const requestIndex = UUID();\r\n\r\n        return <tr>\r\n            {this.state.ShowPreloader ? <Preloader /> : null}\r\n            <td>\r\n                <strong>{index + 1}</strong>\r\n            </td>\r\n\r\n            <td>\r\n                {`${trader.FirstName} ${trader.LastName}`}\r\n                {index === 0 ? <span class=\"badge back-color-golden m-l-xxxs\">NEW</span> : null}\r\n                {traderOnJob ? <span class=\"badge back-color-golden m-l-xxxs\">ON JOB</span> : null}\r\n            </td>\r\n\r\n            <td>{new Date(traderRequest.Created).toDateString()}</td>\r\n\r\n            <td class=\"text-right\">\r\n                <div>\r\n                    <button className=\"btn btn-secondary m-xxxs\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#profile-dialog-${profileIndex}`}\r\n                        onMouseDown={async () => {\r\n                            await this.RefreshTraderContainer();\r\n                            await this.RefreshDocumentsContainer();\r\n                        }}>Profile</button>\r\n\r\n                    <button className=\"btn btn-secondary m-xxxs\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#request-dialog-${requestIndex}`}>Trader Request</button>\r\n\r\n                    {traderRequest.Selected ?\r\n                        <button className=\"btn btn-danger m-xxxs\"\r\n                            onClick={async () => { await this.onToggleSelect(traderRequest.TraderRequestID, false); }}>Deselect</button> :\r\n                        <button className=\"btn btn-primary m-xxxs\" disabled={requestSelected}\r\n                            onClick={async () => { await this.onToggleSelect(traderRequest.TraderRequestID, true); }}>Select</button>}\r\n\r\n                    <ProfileDialog Index={profileIndex}\r\n                        TraderID={traderRequest.TraderID}\r\n                        RefreshTrader={refresh => { this.RefreshTraderContainer = refresh; }}\r\n                        RefreshDocuments={refresh => { this.RefreshDocumentsContainer = refresh; }} />\r\n\r\n                    <RequestDialog Index={requestIndex}\r\n                        TraderRequest={traderRequest} />\r\n                </div>\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default TraderRequestRow;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport TraderRequestRow from \"./TraderRequestRow\";\r\nimport { getData } from \"../../../DriverFunctions\";\r\n\r\nclass TraderRequestsTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TraderRequestPackages: [],\r\n            RequestSelected: false,\r\n            Searching: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderRequestPackages\",\r\n                Params: {\r\n                    JobRequestID: this.props.JobRequestID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader request packages found.\") {\r\n                    this.props.OnRequestsFound(response.TraderRequestPackages.length);\r\n\r\n                    this.setState({\r\n                        TraderRequestPackages: response.TraderRequestPackages,\r\n                        RequestSelected: response.RequestSelected,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.props.OnRequestsFound(0);\r\n                    this.setState({\r\n                        TraderRequestPackages: [],\r\n                        RequestSelected: false,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderRequestPackages\",\r\n                Params: {\r\n                    JobRequestID: this.props.JobRequestID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader request packages found.\") {\r\n                    this.props.OnRequestsFound(response.TraderRequestPackages.length);\r\n\r\n                    this.setState({\r\n                        TraderRequestPackages: response.TraderRequestPackages,\r\n                        RequestSelected: response.RequestSelected\r\n                    });\r\n                }\r\n                else {\r\n                    this.props.OnRequestsFound(0);\r\n\r\n                    this.setState({\r\n                        TraderRequestPackages: [],\r\n                        RequestSelected: false,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Searching || this.state.TraderRequestPackages.length === 0) {\r\n            return <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor=\"requests\" />;\r\n        }\r\n        else {\r\n            const traderRequestPackages = this.state.TraderRequestPackages;\r\n            const requestSelected = this.state.RequestSelected;\r\n\r\n            return <section>\r\n                <div class=\"table-responsive back-color-gray\">\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>NUMBER</th>\r\n                                <th>TRADER</th>\r\n                                <th>REQUESTED ON</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {traderRequestPackages.map((traderRequestPackage, index) => {\r\n                                return <TraderRequestRow key={index}\r\n                                    Index={index}\r\n                                    TraderRequestPackage={traderRequestPackage}\r\n                                    RequestSelected={requestSelected}\r\n                                    OnTraderRequestUpdated={this.onComponentUpdated} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default TraderRequestsTable;","import React, { Component } from \"react\";\r\n\r\nimport PlacesAutocomplete, {\r\n    geocodeByAddress,\r\n    getLatLng,\r\n} from \"react-places-autocomplete\";\r\n\r\nclass PlaceInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Address: this.props.Address\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSelect = this.onSelect.bind(this);\r\n    }\r\n\r\n    onChange = address => {\r\n        this.setState({\r\n            Address: address\r\n        });\r\n    };\r\n\r\n    onSelect = address => {\r\n        geocodeByAddress(address).then(results => {\r\n            const location = results[0].geometry.location;\r\n            const lat = location.lat();\r\n            const lng = location.lng()\r\n\r\n            const place = {\r\n                Address: address,\r\n                Lat: lat ? lat : 0.0,\r\n                Lng: lng ? lng : 0.0,\r\n            };\r\n\r\n            this.props.OnPlaceSelected(place);\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            Address\r\n        } = this.state;\r\n\r\n        return <PlacesAutocomplete\r\n            value={Address}\r\n            onChange={this.onChange}\r\n            onSelect={this.onSelect}>\r\n            {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n                <div>\r\n                    <div className=\"form-group m-n\">\r\n                        <input value={Address} {...getInputProps({\r\n                            placeholder: \"Search Places...\",\r\n                            className: \"form-control m-n\",\r\n                        })} />\r\n                    </div>\r\n\r\n                    <div className=\"autocomplete-dropdown-container\" style={{ maxWidth: \"296px\", minWidth: \"88px\" }}>\r\n                        {loading && <div className=\"suggestion-item p-xxxs\">Loading...</div>}\r\n                        {suggestions.map(suggestion => {\r\n                            const className = suggestion.active\r\n                                ? \"suggestion-item--active p-xxxs\"\r\n                                : \"suggestion-item p-xxxs\";\r\n\r\n                            const style = suggestion.active\r\n                                ? { backgroundColor: \"#EBEBEB\", cursor: \"pointer\" }\r\n                                : { backgroundColor: \"#FEFEFE\", cursor: \"pointer\" };\r\n\r\n                            return <div\r\n                                {...getSuggestionItemProps(suggestion, {\r\n                                    className,\r\n                                    style,\r\n                                })}>\r\n                                <span>{suggestion.description}</span>\r\n                            </div>;\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </PlacesAutocomplete>;\r\n    }\r\n};\r\n\r\nexport default PlaceInput;","import React, { Component } from \"react\";\r\nimport PlaceInput from \"../../../../../controls/PlaceInput\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { updateJobRequest } from \"../../../DriverFunctions.js\";\r\n\r\nclass EditJobRequestDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const {\r\n            JobRequest\r\n        } = this.props;\r\n\r\n        this.state = {\r\n            LoadingPlace: {\r\n                Address: JobRequest.LoadingPlace,\r\n                Lat: JobRequest.LoadingLat,\r\n                Lng: JobRequest.LoadingLng\r\n            },\r\n            UnloadingPlace: {\r\n                Address: JobRequest.UnloadingPlace,\r\n                Lat: JobRequest.UnloadingLat,\r\n                Lng: JobRequest.UnloadingLng\r\n            },\r\n            TripType: JobRequest.TripType,\r\n            Price: JobRequest.Price,\r\n\r\n            ValidLoadingPlace: true,\r\n            ValidUnloadingPlace: true,\r\n            ValidPrice: true,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                LoadingPlace: \"\",\r\n                UnloadingPlace: \"\",\r\n                Price: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidPrice\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"Price\":\r\n                ValidPrice = (value > 0.00);\r\n                Errors.Price = ValidPrice ? \"\" : \"Price must be more than $0.00.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: ValidPrice\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (!this.state.LoadingPlace) {\r\n            let {\r\n                Errors\r\n            } = this.state;\r\n\r\n            Errors.LoadingPlace = \"Loading place is required.\";\r\n\r\n            this.setState({\r\n                Errors: Errors\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        if (!this.state.UnloadingPlace) {\r\n            let {\r\n                Errors\r\n            } = this.state;\r\n\r\n            Errors.UnloadingPlace = \"Unloading place is required.\";\r\n\r\n            this.setState({\r\n                Errors: Errors\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const updatedJobRequest = {\r\n            Token: localStorage.Token,\r\n            JobRequestID: this.props.JobRequest.JobRequestID,\r\n            LoadingPlace: this.state.LoadingPlace.Address,\r\n            LoadingLat: this.state.LoadingPlace.Lat,\r\n            LoadingLng: this.state.LoadingPlace.Lng,\r\n            UnloadingPlace: this.state.UnloadingPlace.Address,\r\n            UnloadingLat: this.state.UnloadingPlace.Lat,\r\n            UnloadingLng: this.state.UnloadingPlace.Lng,\r\n            TripType: this.state.TripType,\r\n            Price: this.state.Price\r\n        };\r\n\r\n        await updateJobRequest(updatedJobRequest).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Job request is updated.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            LoadingPlace,\r\n            UnloadingPlace,\r\n            TripType,\r\n            Price,\r\n            Errors,\r\n            ShowPreloader,\r\n            ValidForm\r\n        } = this.state;\r\n\r\n        const {\r\n            DialogID\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`edit-job-request-dialog-${DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"type-h3 color-default p-t-xxs\">Add Job Request</div>\r\n                                        <div className=\"row p-t-xxs\">\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Place</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <PlaceInput Address={LoadingPlace.Address}\r\n                                                        OnPlaceSelected={place => {\r\n                                                            this.setState({\r\n                                                                LoadingPlace: place,\r\n                                                            });\r\n                                                        }} />\r\n                                                    <span className=\"text-danger\">{Errors.LoadingPlace}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Unloading Place</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <PlaceInput Address={UnloadingPlace.Address}\r\n                                                        OnPlaceSelected={place => {\r\n                                                            this.setState({\r\n                                                                UnloadingPlace: place,\r\n                                                            });\r\n                                                        }} />\r\n                                                    <span className=\"text-danger\">{Errors.UnloadingPlace}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Trip Type</label><br />\r\n                                                    <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                        <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                            <span>{TripType}</span>\r\n                                                            <span className=\"caret\"></span>\r\n                                                        </button>\r\n                                                        <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                            <li><a onClick={() => { this.setState({ TripType: \"One Way\" }); }}>One Way</a></li>\r\n                                                            <li><a onClick={() => { this.setState({ TripType: \"Two Way\" }); }}>Two Way</a></li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Price (USD)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" min=\"0.00\" step=\"0.01\" max=\"100.00\" name=\"Price\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={Price} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.Price}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default EditJobRequestDialog;","import React, { Component } from \"react\";\r\n\r\nclass JobRequestContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const jobRequest = this.props.JobRequest;\r\n        const createdHoursAgo = Math.abs(new Date() - new Date(jobRequest.TimeCreated)) / 36e5;\r\n\r\n       return <section>\r\n           <div className=\"jumbotron theme-default\">\r\n               <div className=\"container\">\r\n                   <div className=\"col-md-24\">\r\n                       <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>{index ? `${index + 1}.` : \"Job Request\"}</div>\r\n                       <div className=\"type-sh3\">\r\n                           <span className=\"fas fa-tag\" style={{ color: \"#606060\" }}></span>   {`$${jobRequest.Price}`}\r\n                       </div>\r\n                   </div>\r\n                   <div className=\"row\">\r\n                       <div className=\"col-md-12\">\r\n                           <div class=\"entity-list\">\r\n                               <div class=\"entity-list-item\">\r\n                                   <div class=\"item-icon\">\r\n                                       <span class=\"fas fa-map-marker-alt\"></span>\r\n                                   </div>\r\n                                   <div class=\"item-content-primary\">\r\n                                       <div class=\"content-text-primary\">Loading Place</div>\r\n                                       <div class=\"content-text-secondary\">{jobRequest.LoadingPlace}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div class=\"entity-list\">\r\n                               <div class=\"entity-list-item\">\r\n                                   <div class=\"item-icon\">\r\n                                       <span class=\"fas fa-map-marker-alt\"></span>\r\n                                   </div>\r\n                                   <div class=\"item-content-primary\">\r\n                                       <div class=\"content-text-primary\">Unloading Place</div>\r\n                                       <div class=\"content-text-secondary\">{jobRequest.UnloadingPlace}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div class=\"entity-list\">\r\n                               <div class=\"entity-list-item\">\r\n                                   <div class=\"item-icon\">\r\n                                       <span class=\"fas fa-map-signs\"></span>\r\n                                   </div>\r\n                                   <div class=\"item-content-primary\">\r\n                                       <div class=\"content-text-primary\">Trip Type</div>\r\n                                       <div class=\"content-text-secondary\">{jobRequest.TripType}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                       <div className=\"col-md-12\">\r\n                           <div class=\"entity-list\">\r\n                               <div class=\"entity-list-item\">\r\n                                   <div class=\"item-icon\">\r\n                                       <span class=\"fas fa-plug\"></span>\r\n                                   </div>\r\n                                   <div class=\"item-content-primary\">\r\n                                       <div class=\"content-text-primary\">Available</div>\r\n                                       <div class=\"content-text-secondary\">{(createdHoursAgo < jobRequest.WaitingTime) ? \r\n                                           <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                           <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div class=\"entity-list\">\r\n                               <div class=\"entity-list-item\">\r\n                                   <div class=\"item-icon\">\r\n                                       <span class=\"fas fa-calendar\"></span>\r\n                                   </div>\r\n                                   <div class=\"item-content-primary\">\r\n                                       <div class=\"content-text-primary\">Posted on</div>\r\n                                       <div class=\"content-text-secondary\">{new Date(jobRequest.TimeCreated).toDateString()}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div class=\"entity-list\">\r\n                               <div class=\"entity-list-item\">\r\n                                   <div class=\"item-icon\">\r\n                                       <span class=\"fas fa-clock\"></span>\r\n                                   </div>\r\n                                   <div class=\"item-content-primary\">\r\n                                       <div class=\"content-text-primary\">Posted at</div>\r\n                                       <div class=\"content-text-secondary\">{new Date(jobRequest.TimeCreated).toTimeString()}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobRequestContainer;","import React, { Component } from \"react\";\r\nimport TraderRequestsTable from \"./TraderRequestsTable.js\";\r\nimport EditJobRequestDialog from \"./EditJobRequestDialog\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { deleteJobRequest } from \"../../../DriverFunctions\";\r\nimport JobRequestContainer from \"../../../../../containers/jobReqeust/JobRequestContainer\";\r\n\r\nclass JobRequestPackageItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            NumberOfRequests: 0,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async jobRequestID => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedJobRequest = {\r\n            Token: localStorage.Token,\r\n            JobRequestID: jobRequestID\r\n        };\r\n\r\n        console.log(`Going to delete Job request...`);\r\n\r\n        await deleteJobRequest(discardedJobRequest).then(response => {\r\n            if (response.Message === \"Job request is deleted.\") {\r\n                this.props.OnJobRequestUpdated();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const jobRequest = this.props.JobRequestPackage;\r\n        const index = this.props.Index;\r\n\r\n        return <section>\r\n            <JobRequestContainer Index={index} JobRequest={jobRequest} />\r\n\r\n            <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                <button type=\"button\" className=\"btn btn-default\"\r\n                    data-toggle=\"modal\"\r\n                    disabled={(this.state.NumberOfRequests !== 0)}\r\n                    data-target={`#edit-job-request-dialog-${index}`}>Edit</button>\r\n                <button className=\"btn btn-danger\" onClick={async () => { await this.onDelete(jobRequest.JobRequestID); }}>Delete</button>\r\n            </div>\r\n\r\n            <EditJobRequestDialog\r\n                DialogID={index}\r\n                JobRequest={jobRequest}\r\n                CanEdit={() => { return this.state.NumberOfRequests === 0 ? true : false }}\r\n                OnOK={() => { this.props.OnJobRequestUpdated(); }} />\r\n\r\n            <div className=\"back-color-gray\" data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#job-request-package-${index}`}\r\n                onMouseDown={async () => { await this.RefreshTraderRequestsTable(); }}>\r\n                <div className=\"type-h4 text-right color-default p-xxxs\">\r\n                    <span class=\"badge back-color-danger m-r-xxs\">{this.state.NumberOfRequests}</span>Trader Requests\r\n                    <i className=\"fas fa-ellipsis-v\"></i>\r\n                    <i class=\"glyph glyph-add\"></i>\r\n                    <i class=\"glyph glyph-remove\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`job-request-package-${index}`}>\r\n\r\n                <TraderRequestsTable\r\n                    Refresh={refresh => { this.RefreshTraderRequestsTable = refresh; }}\r\n                    OnRequestsFound={number => {\r\n                        this.setState({\r\n                            NumberOfRequests: number\r\n                        });\r\n                    }}\r\n                    JobRequestID={jobRequest.JobRequestID} />\r\n\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            </div>\r\n\r\n            {this.state.Preloader}\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobRequestPackageItem;","import React, { Component } from \"react\";\r\nimport PlaceInput from \"../../../../../controls/PlaceInput\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { addJobRequest } from \"../../../DriverFunctions.js\";\r\n\r\nclass AddJobRequestDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LoadingPlace: null,\r\n            UnloadingPlace: null,\r\n            TripType: \"One Way\",\r\n            Price: 0.00,\r\n\r\n            ValidLoadingPlace: false,\r\n            ValidUnloadingPlace: false,\r\n            ValidPrice: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                LoadingPlace: \"\",\r\n                UnloadingPlace: \"\",\r\n                Price: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidPrice\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"Price\":\r\n                ValidPrice = (value > 0.00);\r\n                Errors.Price = ValidPrice ? \"\" : \"Price must be more than $0.00.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: ValidPrice\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (!this.state.LoadingPlace) {\r\n            let {\r\n                Errors\r\n            } = this.state;\r\n\r\n            Errors.LoadingPlace = \"Loading place is required.\";\r\n\r\n            this.setState({\r\n                Errors: Errors\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        if (!this.state.UnloadingPlace) {\r\n            let {\r\n                Errors\r\n            } = this.state;\r\n\r\n            Errors.UnloadingPlace = \"Unloading place is required.\";\r\n\r\n            this.setState({\r\n                Errors: Errors\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newJobRequest = {\r\n            Token: localStorage.Token,\r\n            LoadingPlace: this.state.LoadingPlace.Address,\r\n            LoadingLat: this.state.LoadingPlace.Lat,\r\n            LoadingLng: this.state.LoadingPlace.Lng,\r\n            UnloadingPlace: this.state.UnloadingPlace.Address,\r\n            UnloadingLat: this.state.UnloadingPlace.Lat,\r\n            UnloadingLng: this.state.UnloadingPlace.Lng,\r\n            TripType: this.state.TripType,\r\n            Price: this.state.Price\r\n        };\r\n\r\n        await addJobRequest(newJobRequest).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Job request is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            TripType,\r\n            Price,\r\n            Errors,\r\n            ShowPreloader,\r\n            ValidForm\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"add-job-request-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"type-h3 color-default p-t-xxs\">Add Job Request</div>\r\n                                        <div className=\"row p-t-xxs\">\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Place</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <PlaceInput Address=\"\"\r\n                                                        OnPlaceSelected={place => {\r\n                                                            this.setState({\r\n                                                                LoadingPlace: place,\r\n                                                            });\r\n                                                        }} />\r\n                                                    <span className=\"text-danger\">{Errors.LoadingPlace}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Unloading Place</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <PlaceInput Address=\"\"\r\n                                                        OnPlaceSelected={place => {\r\n                                                            this.setState({\r\n                                                                UnloadingPlace: place,\r\n                                                            });\r\n                                                        }} />\r\n                                                    <span className=\"text-danger\">{Errors.UnloadingPlace}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Trip Type</label><br />\r\n                                                    <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                        <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                            <span>{TripType}</span>\r\n                                                            <span className=\"caret\"></span>\r\n                                                        </button>\r\n                                                        <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                            <li><a onClick={() => { this.setState({ TripType: \"One Way\" }); }}>One Way</a></li>\r\n                                                            <li><a onClick={() => { this.setState({ TripType: \"Two Way\" }); }}>Two Way</a></li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Price (USD)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" min=\"0.00\" step=\"0.01\" max=\"100.00\" name=\"Price\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={Price} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.Price}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddJobRequestDialog;","import React, { Component } from \"react\";\r\nimport { getData } from \"../../../DriverFunctions\";\r\nimport JobRequestPackageItem from \"./JobRequestPackageItem\";\r\nimport AddJobRequestDialog from \"./AddJobRequestDialog\";\r\nimport ProgressBar from \"../../../../../controls/ProgressBar\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\n\r\nclass JobRequestsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllJobRequestPackages: [],\r\n            JobRequestPackages: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobRequestPackages\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job request packages found.\") {\r\n                    this.setState({\r\n                        AllJobRequestPackages: response.JobRequests,\r\n                        JobRequestPackages: response.JobRequests,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllJobRequestPackages: [],\r\n                        JobRequestPackages: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobRequestPackages\"\r\n            };\r\n\r\n            this.setState({\r\n                Refreshing: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job request packages found.\") {\r\n                    this.setState({\r\n                        AllJobRequestPackages: response.JobRequests,\r\n                        JobRequestPackages: response.JobRequests,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllJobRequestPackages: [],\r\n                        JobRequestPackages: [],\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.SearchString === \"\") {\r\n            this.setState({\r\n                JobRequestPackages: this.state.AllJobRequestPackages\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allJobRequestPackages = this.state.AllJobRequestPackages;\r\n        let filteredJobRequestPackages = [];\r\n        let count = 0;\r\n\r\n        for (let jobRequestPackage of allJobRequestPackages) {\r\n            let jobRequest = jobRequestPackage.JobRequest;\r\n\r\n            if (jobRequest.LoadingPlace.includes(this.state.SearchString) ||\r\n                jobRequest.UnloadingPlace.includes(this.state.SearchString)) {\r\n                filteredJobRequestPackages[count++] = jobRequestPackage;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            JobRequestPackages: filteredJobRequestPackages\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const jobRequestPackages = this.state.JobRequestPackages;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container\" style={{paddingBottom: \"10px\", marginBottom: \"12px\"}}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-briefcase m-r-xxs\"></span>Job Requests</div>\r\n                            <p className=\"color-light\">Create new job requests for your current and/or near-by locations to get a chance to increase your revenue.</p>\r\n                            <div className=\"btn-group\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-primary\"\r\n                                    data-toggle=\"modal\"\r\n                                    data-target=\"#add-job-request-dialog\">New Job Request</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <AddJobRequestDialog\r\n                OnOK={() => {\r\n                    this.onComponentUpdated();\r\n                }} />\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Your Job Requests\r\n                    {this.state.Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search by Places\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={this.state.SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            {(jobRequestPackages.length === 0) ?\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            {this.state.Searching ? <div className=\"col-md-24 text-center\">\r\n                                <div>\r\n                                    <div className=\"type-h3\" style={{ color: \"#008575\" }}>Searching</div>\r\n                                    <ProgressBar />\r\n                                </div>\r\n                            </div> : <div className=\"col-md-24 text-center\">\r\n                                    <h3><span className=\"fas fa-exclamation-triangle\" style={{ color: \"#FFBF15\" }}></span> No job requests found.</h3>\r\n                                </div>}\r\n                        </div>\r\n                    </div>\r\n                </div> : <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {this.state.JobRequestPackages.map((jobRequestPackage, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <JobRequestPackageItem Index={index}\r\n                                JobRequestPackage={jobRequestPackage}\r\n                                OnJobRequestUpdated={this.refresh} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobRequestsList;","import React, { Component } from \"react\";\r\nimport JobRequestsList from \"./JobRequestsList.js\";\r\n\r\nclass JobRequests extends Component {\r\n    render() {\r\n        return <section>\r\n            <JobRequestsList Refresh={this.props.Refresh} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobRequests;","import React, { Component } from \"react\";\r\n\r\nclass JobOfferContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const jobOffer = this.props.JobOffer;\r\n        const createdHoursAgo = Math.abs(new Date() - new Date(jobOffer.TimeCreated)) / 36e5;\r\n\r\n        let loadingDate = new Date(jobOffer.LoadingDate);\r\n        loadingDate.setHours((parseInt(jobOffer.LoadingTime.substring(0, 2))));\r\n        loadingDate.setMinutes(parseInt(jobOffer.LoadingTime.substring(3, 5)));\r\n        loadingDate.setSeconds(parseInt(jobOffer.LoadingTime.substring(6)));\r\n\r\n       return <section>\r\n           <div className=\"jumbotron theme-default\">\r\n               <div className=\"container\">\r\n                   <div className=\"col-md-24\">\r\n                       <div className=\"type-h3 color-default p-t-n\">{(index ?\r\n                           `${index + 1}. ${jobOffer.JobOfferType} Job Offer` :\r\n                           `${jobOffer.JobOfferType} Job Offer`)}</div>\r\n                       <div className=\"type-sh3\">\r\n                           <span className=\"fas fa-tag\" style={{ color: \"#606060\" }}></span>   {`$${jobOffer.Price}`}\r\n                       </div>\r\n                   </div>\r\n                   <div className=\"row\">\r\n                       <div className=\"col-md-8\">\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-map-marker-alt\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Loading Place</div>\r\n                                       <div className=\"content-text-secondary\">{jobOffer.LoadingPlace}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-map-marker-alt\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Unloading Place</div>\r\n                                       <div className=\"content-text-secondary\">{jobOffer.UnloadingPlace}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-map-signs\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Trip Type</div>\r\n                                       <div className=\"content-text-secondary\">{jobOffer.TripType}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-clock\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Accpeted Delay</div>\r\n                                       <div className=\"content-text-secondary\">{`${jobOffer.AcceptedDelay} Hour(s)`}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                       <div className=\"col-md-8\">\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-box\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Cargo Type</div>\r\n                                       <div className=\"content-text-secondary\">{jobOffer.CargoType}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-weight\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Cargo Weight</div>\r\n                                       <div className=\"content-text-secondary\">{`${jobOffer.CargoWeight} lbs.`}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-calendar\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Loading Date</div>\r\n                                       <div className=\"content-text-secondary\">{loadingDate.toDateString()}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-clock\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Loading Time</div>\r\n                                       <div className=\"content-text-secondary\">{loadingDate.toTimeString()}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                       <div className=\"col-md-8\">\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-id-badge\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Entry/Exit</div>\r\n                                       <div className=\"content-text-secondary\">{(jobOffer.EntryExit === 1) ?\r\n                                           <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                           <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-plug\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Availabe</div>\r\n                                       <div className=\"content-text-secondary\">{(createdHoursAgo < jobOffer.WaitingTime) ? \r\n                                           <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                           <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-calendar\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Posted on</div>\r\n                                       <div className=\"content-text-secondary\">{new Date(jobOffer.TimeCreated).toDateString()}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-clock\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Posted at</div>\r\n                                       <div className=\"content-text-secondary\">{new Date(jobOffer.TimeCreated).toTimeString()}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobOfferContainer;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addDriverRequest } from \"../../../../DriverFunctions\";\r\n\r\nclass BidJobOfferDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Price: 0,\r\n\r\n            ValidPrice: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                Price: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidPrice = this.state.ValidPrice;\r\n\r\n        switch (field) {\r\n            case \"Price\":\r\n                ValidPrice = (value !== \"\");\r\n                Errors.Price = ValidPrice ? \"\" : \"Bidding price is required.\";\r\n\r\n                if (Errors.Price !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPrice = (value <= this.props.JobOffer.Price);\r\n                Errors.Price = ValidPrice ? \"\" : \"You cannot bid more than maximum accepted price.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidPrice\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (this.props.IsRequestSent()) {\r\n            return;\r\n        }\r\n\r\n        const newDriverRequest = {\r\n            Token: localStorage.Token,\r\n            JobOfferID: this.props.JobOffer.JobOfferID,\r\n            Price: this.state.Price\r\n        };\r\n\r\n        console.log(\"Going to add driver request...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addDriverRequest(newDriverRequest).then(response => {\r\n            if (response.Message === \"Driver request is added.\") {\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n\r\n                this.cancelButton.click();\r\n                this.props.OnOK(response.DriverRequest);\r\n            }\r\n            else {\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`bid-job-offer-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"type-h3 color-default p-t-xxs\">Bid on Price</div>\r\n                                        <div className=\"type-sh3\">{`Maximum Accepted Price is $${this.props.JobOffer.Price}.`}</div>\r\n                                        <div className=\"row p-t-xxs\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Price (USD)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" min=\"0.00\" step=\"0.01\" name=\"Price\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={this.state.Price} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Price}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Bid\" className=\"btn btn-primary\" disabled={!this.stateValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default BidJobOfferDialog;","import React, { Component } from \"react\";\r\nimport { addDriverRequest, deleteDriverRequest } from \"../../../../DriverFunctions\";\r\nimport TraderContainer from \"../../../../../../containers/trader/TraderContainer\";\r\nimport JobOfferContainer from \"../../../../../../containers/jobOffer/JobOfferContainer\";\r\nimport BidJobOfferDialog from \"./BidJobOfferDialog\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\n\r\nclass JobOfferPostsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Preloader: null\r\n        };\r\n\r\n        this.onSendRequest = this.onSendRequest.bind(this);\r\n        this.onCancelRequest = this.onCancelRequest.bind(this);\r\n    }\r\n\r\n    onCancelRequest = async jobOffer => {\r\n        const discardedDriverRequest = {\r\n            Token: localStorage.Token,\r\n            JobOfferID: jobOffer.JobOfferID\r\n        };\r\n\r\n        console.log(\"Going to delete driver request...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await deleteDriverRequest(discardedDriverRequest).then(response => {\r\n            if (response.Message === \"Driver request is deleted.\") {\r\n                this.props.OnRequestUpdated(jobOffer, null);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    };\r\n\r\n    onSendRequest = async jobOffer => {\r\n        if (this.props.JobOfferPost.RequestSent) {\r\n            return;\r\n        }\r\n\r\n        const newDriverRequest = {\r\n            Token: localStorage.Token,\r\n            JobOfferID: jobOffer.JobOfferID,\r\n            Price: null\r\n        };\r\n\r\n        console.log(\"Going to add driver request...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addDriverRequest(newDriverRequest).then(response => {\r\n            if (response.Message === \"Driver request is added.\") {\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n\r\n                this.props.OnRequestUpdated(jobOffer, response.DriverRequest);\r\n            }\r\n            else {\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const jobOffer = this.props.JobOfferPost.JobOffer;\r\n        const trader = this.props.JobOfferPost.Trader;\r\n        const driverRequest = this.props.JobOfferPost.DriverRequest;\r\n\r\n        let RequestButton;\r\n\r\n        if (driverRequest) {\r\n            RequestButton = <button className=\"btn btn-secondary\"\r\n                onClick={async () => { \r\n                    await this.onCancelRequest(jobOffer); }}>{(jobOffer.JobOfferType === \"Fixed-Price\") ?\r\n                    \"Cancel Request\" :\r\n                    \"Cancel Bid\"}\r\n            </button>;\r\n        }\r\n        else {\r\n            RequestButton = (jobOffer.JobOfferType === \"Fixed-Price\") ?\r\n                <button className=\"btn btn-primary\"\r\n                    onClick={async () => { await this.onSendRequest(jobOffer); }}>Send Request</button> :\r\n                <button className=\"btn btn-primary\"\r\n                    data-toggle=\"modal\"\r\n                    disabled={driverRequest}\r\n                    data-target={`#bid-job-offer-dialog-${index}`}>Bid</button>;\r\n        }\r\n\r\n        return <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron p-xxxs back-color-gray\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"type-h5 color-default p-t-n\">\r\n                                {`${index + 1}.`}\r\n                                {driverRequest ? <span class=\"badge back-color-default m-l-xxs\">{(jobOffer.JobOfferType === \"Fixed-Price\") ?\r\n                                    \"REQUEST SENT\" : \"ALREADY BADE\"}</span> : null}\r\n                            </div>\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-user\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Posted By</div>\r\n                                            <div className=\"content-text-secondary\">{`${trader.FirstName} ${trader.LastName}`}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-clock\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Posted On</div>\r\n                                            <div className=\"content-text-secondary\">{new Date(jobOffer.TimeCreated).toDateString()}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {driverRequest && driverRequest.Price ?\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-tag\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Your Bid Price</div>\r\n                                                <div className=\"content-text-secondary\">{`$${driverRequest.Price}`}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> : \r\n                                    null}\r\n                            </div>\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-tag\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Price</div>\r\n                                            <div className=\"content-text-secondary\">{`$${jobOffer.Price}`}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas  fa-map-marker-alt\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">From </div>\r\n                                            <div className=\"content-text-secondary\">{jobOffer.LoadingPlace}</div>\r\n                                            <div className=\"content-text-primary\">To</div>\r\n                                            <div className=\"content-text-secondary\">{jobOffer.UnloadingPlace}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"text-right\">\r\n                                {RequestButton}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"back-color-gray\" data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#job-offer-post-${index}`}>\r\n                    <div className=\"type-h4 text-right color-default p-xxxs\">\r\n                        {\"   More Details\"} <i className=\"fas fa-ellipsis-v\"></i>\r\n                        <i class=\"glyph glyph-add\"></i>\r\n                        <i class=\"glyph glyph-remove\"></i>\r\n                    </div>\r\n                </div>\r\n                <div className=\"collapse\" id={`job-offer-post-${index}`}>\r\n                    <ul className=\"nav nav-tabs\" role=\"tablist\"\r\n                        style={{\r\n                            padding: \"10px\",\r\n                            backgroundColor: \"#EFEFEF\",\r\n                            width: \"100%\",\r\n                            margin: \"0px\"\r\n                        }}>\r\n                        <li role=\"presentation\" className=\"active\">\r\n                            <a href={`#job-offer-${index}`} aria-controls={`job-offer-${index}`} role=\"tab\" data-toggle=\"tab\">Job Offer</a>\r\n                        </li>\r\n                        <li role=\"presentation\">\r\n                            <a href={`#trader-${index}`} aria-controls={`trader-${index}`} role=\"tab\" data-toggle=\"tab\">Trader</a>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"tab-content\">\r\n                        <div role=\"tabpanel\" className=\"tab-pane active\" id={`job-offer-${index}`}>\r\n                            <JobOfferContainer JobOffer={jobOffer} />\r\n                        </div>\r\n                        <div role=\"tabpanel\" className=\"tab-pane\" id={`trader-${index}`}>\r\n                            <TraderContainer TraderID={jobOffer.TraderID} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <BidJobOfferDialog\r\n                    DialogID={index}\r\n                    JobOffer={jobOffer}\r\n                    IsRequestSent={() => { return driverRequest ? true : false; }}\r\n                    OnOK={driverRequest => { this.props.OnRequestUpdated(jobOffer, driverRequest); }} />\r\n            </li>\r\n            {this.state.Preloader}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobOfferPostsList;","import React, { Component } from \"react\";\r\nimport ProgressBar from \"../../../../../../controls/ProgressBar\";\r\nimport { getData } from \"../../../../DriverFunctions\";\r\nimport JobOfferPostListItem from \"./JobOfferPostListItem\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\n\r\nclass JobOfferPostsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobOfferPosts: [],\r\n            Preloader: null,\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobOfferPosts\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Job offer posts found.\") {\r\n                    this.setState({\r\n                        JobOfferPosts: response.JobOfferPosts,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobOfferPosts: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobOfferPosts\"\r\n            };\r\n\r\n            this.setState({\r\n                Refreshing: true\r\n            });\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Job offer posts found.\") {\r\n                    this.setState({\r\n                        JobOfferPosts: response.JobOfferPosts,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobOfferPosts: [],\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Searching) {\r\n            return <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\", width: \"100%\", height: \"100vh\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"job_offers.png\" src=\"./images/job_offers.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div className=\"col-md-12 col-md-pull-12\">\r\n                                <div className=\"type-h3\">Job Offers</div>\r\n                                <p>Job opportunities from Traders and Brokers are displayed here.</p>\r\n                                <div class=\"type-sh3\" style={{ color: \"#008575\" }}>Searhcing</div>\r\n                                <ProgressBar />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n        else if (this.state.JobOfferPosts.length === 0) {\r\n            return <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\", width: \"100%\", height: \"100vh\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"job_offers.png\" src=\"./images/job_offers.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div className=\"col-md-12 col-md-pull-12\">\r\n                                <div className=\"type-h3\">Job Offers</div>\r\n                                <div className=\"type-sh3\">No Job Offers Found...</div>\r\n                                <p>Job opportunities from Traders and Brokers are displayed here.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n        else {\r\n            return <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Job Offers\r\n                    {this.state.Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n                </div>\r\n                <ol className=\"list-items\" style={{ marginTop: \"0px\" }}>\r\n                    {this.state.JobOfferPosts.map((jobOfferPost, index) => {\r\n                        return <JobOfferPostListItem\r\n                            key={index}\r\n                            Index={index}\r\n                            JobOfferPost={jobOfferPost}\r\n                            OnRequestUpdated={(jobOffer, driverRequest) => {\r\n                                let jobOfferPosts = this.state.JobOfferPosts;\r\n\r\n                                for (let jobOfferPost of jobOfferPosts) {\r\n                                    if (jobOfferPost.JobOffer.JobOfferID === jobOffer.JobOfferID) {\r\n                                        jobOfferPost.DriverRequest = driverRequest;\r\n                                        break;\r\n                                    }\r\n                                }\r\n\r\n                                this.setState({\r\n                                    JobOfferPosts: jobOfferPosts\r\n                                });\r\n                            }} />;\r\n                    })}\r\n                </ol>\r\n            </section>;\r\n        }\r\n       \r\n    }\r\n};\r\n\r\nexport default JobOfferPostsList;","import React, { Component } from \"react\";\r\nimport JobOfferPostsList from \"./JobOfferPostsList\";\r\n\r\nclass List extends Component {\r\n   render() {\r\n       return <section>\r\n           <JobOfferPostsList Refresh={this.props.Refresh} />\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default List;","import React, { useState } from \"react\";\r\nimport { withGoogleMap, withScriptjs, GoogleMap, Marker, InfoWindow } from \"react-google-maps\";\r\nconst Key = \"AIzaSyD_U_2NzdPIL7TWb8ECBHWO1eROR2yrebI\";\r\n\r\nconst Map = props => {\r\n    const [SelectedJobOffer, SetSelectedJobOffer] = useState(null);\r\n\r\n    const {\r\n        Place,\r\n        JobOfferPosts\r\n    } = props;\r\n\r\n    const lat = Place ? Place.Lat : 33.784310;\r\n    const lng = Place ? Place.Lng : 72.738780;\r\n\r\n    return <GoogleMap\r\n        defaultZoom={10}\r\n        defaultCenter={{ lat: 33.784310, lng: 72.738780 }}\r\n        center={{ lat: lat, lng: lng }}>\r\n\r\n        {JobOfferPosts.map(jobOfferPost => (\r\n            <Marker key={jobOfferPost.JobOffer.JobOfferID} position={{ lat: jobOfferPost.JobOffer.LoadingLat, lng: jobOfferPost.JobOffer.LoadingLng }}\r\n                icon={{\r\n                    url: \"./images/marker.svg\",\r\n                    scaledSize: new window.google.maps.Size(40, 40)\r\n                }}\r\n                onClick={() => {\r\n                    SetSelectedJobOffer(jobOfferPost.JobOffer);\r\n                }} />\r\n        ))}\r\n\r\n        {SelectedJobOffer && <InfoWindow position={{ lat: SelectedJobOffer.LoadingLat, lng: SelectedJobOffer.LoadingLng }}\r\n            onCloseClick={() => {\r\n                SetSelectedJobOffer(null);\r\n            }}>\r\n\r\n            <section>\r\n                <div className=\"jumbotron theme-default\" style={{ backgroundColor: \"#FFFFFF\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"col-md-24\">\r\n                            <div className=\"type-h6 color-default p-t-n\">{`${SelectedJobOffer.JobOfferType} Job Offer`}</div>\r\n                            <div className=\"type-sh6\">\r\n                                <span className=\"fas fa-tag color-default m-r-xxxs\"></span>\r\n                                <span className=\"color-default\">PRICE: </span>{`$${SelectedJobOffer.Price}`}</div>\r\n                            <div className=\"type-sh6\">\r\n                                <span className=\"fas fa-map-marker-alt color-default m-r-xxxs\"></span>\r\n                                <span className=\"color-default\">FROM: </span>{SelectedJobOffer.LoadingPlace}</div>\r\n                            <div className=\"type-sh6\">\r\n                                <span className=\"fas fa-map-marker-alt color-default m-r-xxxs\"></span>\r\n                                <span className=\"color-default\">TO: </span>{SelectedJobOffer.UnloadingPlace}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </InfoWindow>}\r\n    </GoogleMap>;\r\n}\r\n\r\nconst MapWrapped = withScriptjs(withGoogleMap(Map));\r\n\r\nconst JobOffersGoogleMap = props => {\r\n    return <div style={{ width: \"100%\", height: \"100vh\" }}>\r\n        <MapWrapped\r\n            googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${Key}`}\r\n            loadingElement={<div style={{ height: `100%` }} />}\r\n            containerElement={<div style={{ height: `100%` }} />}\r\n            mapElement={<div style={{ height: `100%` }} />}\r\n            Place={props.Place}\r\n            JobOfferPosts={props.JobOfferPosts} />\r\n    </div>;\r\n}\r\n\r\nexport default JobOffersGoogleMap;","import React, { Component } from \"react\";\r\nimport PlaceInput from \"../../../../../../controls/PlaceInput\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport JobOffersGoogleMap from \"./JobOffersGoogleMap\";\r\nimport { getData } from \"../../../../DriverFunctions\";\r\n\r\nclass JobOffersMap extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobOfferPosts: [],\r\n            Place: null,\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobOfferPosts\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Job offer posts found.\") {\r\n                    this.setState({\r\n                        JobOfferPosts: response.JobOfferPosts,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobOfferPosts: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobOfferPosts\"\r\n            };\r\n\r\n            this.setState({\r\n                Refreshing: true\r\n            });\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Job offer posts found.\") {\r\n                    this.setState({\r\n                        JobOfferPosts: response.JobOfferPosts,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobOfferPosts: [],\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            JobOfferPosts,\r\n            Place,\r\n            Searching\r\n        } = this.state;\r\n\r\n        return <section>\r\n\r\n            {JobOfferPosts.length === 0 ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"job offers\" /> :\r\n                <section>\r\n                    <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                        <PlaceInput Address=\"\"\r\n                            OnPlaceSelected={place => {\r\n                                this.setState({\r\n                                    Place: place,\r\n                                });\r\n                            }} />\r\n                    </div>\r\n                    <JobOffersGoogleMap Place={Place} JobOfferPosts={JobOfferPosts} />\r\n                </section>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobOffersMap;","import React, { Component } from \"react\";\r\nimport JobOffersMap from \"./JobOffersMap\";\r\n\r\nclass Map extends Component {\r\n    render() {\r\n        return <section>\r\n            <JobOffersMap Refresh={this.props.Refresh} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Map;","import React, { Component } from \"react\";\r\nimport List from \"./list/List\";\r\nimport Map from \"./map/Map\";\r\n\r\nclass JobOffers extends Component {\r\n    render() {\r\n        return <section>\r\n            <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#job-offers-list\" aria-controls=\"job-offers-list\" role=\"tab\" data-toggle=\"tab\">List</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#job-offers-map\" aria-controls=\"job-offers-map\" role=\"tab\" data-toggle=\"tab\">Map</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div className=\"tab-content\">\r\n                <div role=\"tabpanel\" className=\"tab-pane active\" id=\"job-offers-list\">\r\n                    <List Refresh={this.props.Refresh} />\r\n                </div>\r\n                <div role=\"tabpanel\" className=\"tab-pane\" id=\"job-offers-map\">\r\n                    <Map Refresh={refresh => { this.RefreshMap = refresh; }} />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobOffers;","import React, { useState } from \"react\";\r\nimport { withGoogleMap, withScriptjs, GoogleMap, DirectionsRenderer, Marker } from \"react-google-maps\";\r\nconst Key = \"AIzaSyD_U_2NzdPIL7TWb8ECBHWO1eROR2yrebI\";\r\n\r\nconst Directions = props => {\r\n    const [Directions, SetDirections] = useState(null);\r\n\r\n    const { OnGoingJob } = props;\r\n\r\n    const directionsService = new window.google.maps.DirectionsService();\r\n\r\n    const origin = { lat: OnGoingJob.LoadingLat, lng: OnGoingJob.LoadingLng };\r\n    const destination = { lat: OnGoingJob.UnloadingLat, lng: OnGoingJob.UnloadingLng };\r\n\r\n    directionsService.route({\r\n        origin: origin,\r\n        destination: destination,\r\n        travelMode: window.google.maps.TravelMode.DRIVING\r\n    }, (result, status) => {\r\n        if (status === window.google.maps.DirectionsStatus.OK) {\r\n            SetDirections(result);\r\n        } else {\r\n            console.error(`error fetching directions ${result}`);\r\n        }\r\n    });\r\n\r\n    return <DirectionsRenderer directions={Directions} options={{\r\n        suppressMarkers: true\r\n    }} />;\r\n};\r\n\r\nconst Map = props => {\r\n    const {\r\n        OnGoingJob,\r\n        DriverLocation\r\n    } = props;\r\n\r\n    return <GoogleMap\r\n        defaultZoom={10}>\r\n\r\n        <Marker key={1} position={{ lat: OnGoingJob.LoadingLat, lng: OnGoingJob.LoadingLng }}\r\n            icon={{\r\n                url: \"./images/source.svg\",\r\n                scaledSize: new window.google.maps.Size(30, 30)\r\n            }} />\r\n\r\n        <Marker key={1} position={{ lat: OnGoingJob.UnloadingLat, lng: OnGoingJob.UnloadingLng }}\r\n            icon={{\r\n                url: \"./images/destination.svg\",\r\n                scaledSize: new window.google.maps.Size(30, 30)\r\n            }} />\r\n\r\n        {DriverLocation ?\r\n            <Marker key={1} position={{ lat: DriverLocation.Lat, lng: DriverLocation.Lng }}\r\n                icon={{\r\n                    url: \"./images/driver_marker.svg\",\r\n                    scaledSize: new window.google.maps.Size(40, 40)\r\n                }} /> : null}\r\n\r\n        <Directions OnGoingJob={props.OnGoingJob} />\r\n    </GoogleMap>;\r\n}\r\n\r\nconst MapWrapped = withScriptjs(withGoogleMap(Map));\r\n\r\nconst OnGoingJobMap = props => {\r\n    return <div style={{ width: \"100%\", height: \"400px\" }}>\r\n        <MapWrapped\r\n            googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${Key}`}\r\n            loadingElement={<div style={{ height: `100%` }} />}\r\n            containerElement={<div style={{ height: `100%` }} />}\r\n            mapElement={<div style={{ height: `100%` }} />}\r\n            OnGoingJob={props.OnGoingJob}\r\n            DriverLocation={props.DriverLocation} />\r\n    </div>;\r\n}\r\n\r\nexport default OnGoingJobMap;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\nimport { getData, addObjectionReason } from \"../../../../DriverFunctions\";\r\n\r\nclass ReasonsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ObjectionReasons: [],\r\n            AddPressed: false,\r\n            NewReason: \"\",\r\n            ValidNewReason: false,\r\n\r\n            ValidForm: false,\r\n            ProgressRing: null,\r\n\r\n            Errors: {\r\n                NewReason: \"0\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"ObjectionReasons\"\r\n            };\r\n\r\n            this.setState({\r\n                ProgressRing: <ProgressRing />\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Objection reasons found.\") {\r\n                    this.setState({\r\n                        ObjectionReasons: response.ObjectionReasons,\r\n                        ProgressRing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        ObjectionReasons: [],\r\n                        ProgressRing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewReason = this.state.ValidNewReason;\r\n\r\n        switch (field) {\r\n            case \"NewReason\":\r\n                ValidNewReason = (value.length > 0 && value.length <= 50);\r\n                Errors.NewReason = ValidNewReason ? value.length : \"Too long...\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewReason: ValidNewReason\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidNewReason\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ProgressRing: <ProgressRing />\r\n        });\r\n\r\n        const newObjectionReason = {\r\n            Token: localStorage.Token,\r\n            Reason: this.state.NewReason\r\n        };\r\n\r\n        console.log(\"Going to add Objection reason...\");\r\n\r\n        await addObjectionReason(newObjectionReason).then(response => {\r\n            if (response.Message === \"Objection reason is added.\") {\r\n                let objectionReasons = this.state.ObjectionReasons;\r\n                let errors = this.state.Errors;\r\n\r\n                objectionReasons.push(response.ObjectionReason);\r\n                errors.NewReason = \"0\";\r\n\r\n                this.setState({\r\n                    AddPressed: false,\r\n                    ObjectionReasons: objectionReasons,\r\n                    Errors: errors,\r\n                    NewReason: \"\"\r\n                });\r\n            }\r\n\r\n            this.setState({\r\n                ProgressRing: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const objectionReasons = this.state.ObjectionReasons;\r\n\r\n        return <section>\r\n            {this.state.ProgressRing}\r\n            <div class=\"entity-list entity-list-expandable\">\r\n                <div class=\"entity-list entity-list-add-item-button\">\r\n                    <a class={this.state.AddPressed ? \"entity-list-item active\" : \"entity-list-item\"}>\r\n                        <div class=\"item-icon\" onClick={() => {\r\n                            this.state.AddPressed ?\r\n                                this.setState({ AddPressed: false }) :\r\n                                this.setState({ AddPressed: true });\r\n                        }}>\r\n                            <span class=\"glyph glyph-add\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Add a Reason</div>\r\n                            <div class=\"content-text-secondary\" style={(this.state.Errors.NewReason === \"Too long...\") ? { color: \"#D75A4A\" } : null}>{this.state.Errors.NewReason}</div>\r\n                        </div>\r\n                        <div class=\"item-content-expanded\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <input type=\"text\" className=\"form-control\" name=\"NewReason\" autocomplete=\"off\"\r\n                                    value={this.state.NewReason} onChange={this.onChange} />\r\n                                <input type=\"submit\" value=\"Add\" className=\"btn btn-secondary\" disabled={!this.state.ValidForm} />\r\n                            </form>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                {objectionReasons.map((objectionReason, index) => {\r\n                    return <div key={index} class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-thumbs-down\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <button type=\"button\" class=\"btn btn-secondary\" style={{ margin: \"0px\", minWidth: \"0px\" }}\r\n                                onClick={() => { this.props.OnReasonSelected(objectionReason.Reason); }}>Select</button>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">{`${index + 1}.`}</div>\r\n                            <div class=\"content-text-secondary\">{objectionReason.Reason}</div>\r\n                        </div>\r\n                    </div>;\r\n                })}\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ReasonsList;","import React, { Component } from \"react\";\r\nimport ReasonsList from \"./ReasonsList\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { addJobObjection } from \"../../../../DriverFunctions\";\r\n\r\nclass AddObjectionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Reason: \"Select from the list.\",\r\n            Comment: \"\",\r\n\r\n            ValidReason: false,\r\n            ValidComment: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                Comment: \"0\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidComment = this.state.ValidComment;\r\n\r\n        switch (field) {\r\n            case \"Comment\":\r\n                ValidComment = (value !== \"\");\r\n                Errors.Comment = ValidComment ? \"\" : \"Comment is required\";\r\n\r\n                if (Errors.Comment !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidComment = (value.length <= 200);\r\n                Errors.Comment = ValidComment ? value.length : \"Too long...\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidComment: ValidComment\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidReason && this.state.ValidComment\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const newJobObjection = {\r\n            Token: localStorage.Token,\r\n            OnGoingJobID: this.props.OnGoingJobID,\r\n            Reason: this.state.Reason,\r\n            Comment: this.state.Comment\r\n        };\r\n\r\n        console.log(\"Going to add job objection...\");\r\n\r\n        await addJobObjection(newJobObjection).then(response => {\r\n            if (response.Message === \"Job objection is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"add-objection-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}\r\n                                    style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Add an Objection</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label>Reason</label>\r\n                                    <input type=\"text\" class=\"form-control\" name=\"Reason\" style={{ maxWidth: \"100%\" }} readonly\r\n                                        value={this.state.Reason} />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label>Comment</label>\r\n                                    <textarea rows=\"4\" class=\"form-control\" style={{ maxWidth: \"100%\" }} name=\"Comment\"\r\n                                        value={this.state.Comment} onChange={this.onChange}></textarea>\r\n                                    <span>{this.state.Errors.Comment}</span>\r\n                                </div>\r\n                                <div style={{ textAlign: \"right\" }}>\r\n                                    <input type=\"submit\" value=\"Add Objection\" className=\"btn btn-primary\" style={{ margin: \"0px\" }} disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                            <br/>\r\n                            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                            <div className=\"type-h4\" style={{ color: \"#008575\", padding: \"10px\", textAlign: \"right\" }}>{\"   Reasons\"}\r\n                                <i className=\"fas fa-ellipsis-v\"></i>\r\n                            </div>\r\n                            <ReasonsList ObjectionReasons={this.props.ObjectionReasons} OnReasonSelected={reason => {\r\n                                this.setState({\r\n                                    Reason: reason,\r\n                                    ValidReason: true\r\n                                }, () => {\r\n                                    this.setState({\r\n                                        ValidForm: this.state.ValidReason && this.state.ValidComment\r\n                                    });\r\n                                });\r\n                            }} />                           \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddObjectionDialog;","import React, { Component } from \"react\";\r\n\r\nclass JobObjectionContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            JobObjection\r\n        } = this.props;\r\n\r\n        let createdOn = new Date(JobObjection.Created);\r\n        let objectionBy = JobObjection.ObjectionBy;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"type-h5 color-default p-t-n\">{`${Index + 1}.`}</div>\r\n                    <div className=\"entity-list\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-user\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">\r\n                                    {objectionBy.Type === \"Driver\" ? \r\n                                        <span className=\"fas fa-car m-r-xxxs\"></span> : \r\n                                        <span className=\"fas fa-briefcase m-r-xxxs\"></span>}\r\n                                    {`${objectionBy.FirstName} ${objectionBy.LastName}`}\r\n                                </div>\r\n                                <div className=\"content-text-secondary\">{objectionBy.Username}</div>\r\n                                <div className=\"content-text-secondary\">{`Posted on ${createdOn.toDateString()}.`}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-thumbs-down\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Objection</div>\r\n                                <div className=\"content-text-secondary\">{`Reason: ${JobObjection.Reason}`}</div>\r\n                                <div className=\"content-text-secondary\">{`Comment: ${JobObjection.Comment}`}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobObjectionContainer;","import React, { Component } from \"react\";\r\nimport AddObjectionDialog from \"./AddObjectionDialog\";\r\nimport { getData } from \"../../../../DriverFunctions\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport JobObjectionContainer from \"../../../../../../containers/onGoingJob/JobObjectionContainer\";\r\n\r\nclass Objections extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobObjections: [],\r\n            Searching: false,\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobObjections\",\r\n                Params: {\r\n                    OnGoingJobID: this.props.OnGoingJobID\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job objections found.\") {\r\n                    this.setState({\r\n                        JobObjections: response.JobObjections,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobObjections: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobObjections\",\r\n                Params: {\r\n                    OnGoingJobID: this.props.OnGoingJobID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job objection packages found.\") {\r\n                    this.setState({\r\n                        JobObjections: response.JobObjections\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobObjections: []\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const jobObjections = this.state.JobObjections;\r\n\r\n        return <section>\r\n            <div class=\"page-header back-color-gradient\">\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-thumbs-down\"></span>   Job Objections</div>\r\n                            <p className=\"color-light\">Objections on this job, either by you or your customer, will terminate the job.</p>\r\n                            <div className=\"btn-group\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-primary\"\r\n                                    data-toggle=\"modal\"\r\n                                    data-target=\"#add-objection-dialog\">Add Objection</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <AddObjectionDialog OnGoingJobID={this.props.OnGoingJobID}\r\n                OnOK={this.onComponentUpdated} />\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Job Objections</div>\r\n            {(jobObjections.length === 0) ?\r\n                <SearchingContainer Searching={this.state.Searching}\r\n                    SearchingFor=\"job objctions\" /> : <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {jobObjections.map((jobObjection, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <JobObjectionContainer Index={index}\r\n                                JobObjection={jobObjection} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default Objections;","import React, { Component } from \"react\";\r\n\r\nclass JobContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const onGoingJob = this.props.OnGoingJob;\r\n\r\n        let loadingDate = new Date(onGoingJob.LoadingDate);\r\n        loadingDate.setHours((parseInt(onGoingJob.LoadingTime.substring(0, 2))));\r\n        loadingDate.setMinutes(parseInt(onGoingJob.LoadingTime.substring(3, 5)));\r\n        loadingDate.setSeconds(parseInt(onGoingJob.LoadingTime.substring(6)));\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"col-md-24\">\r\n                        <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                            {(index !== null && (index >= 0)) ? `${index + 1}. Job Details` : `Job Details`}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-map-marker-alt\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Place</div>\r\n                                        <div className=\"content-text-secondary\">{onGoingJob.LoadingPlace}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-map-marker-alt\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Unloading Place</div>\r\n                                        <div className=\"content-text-secondary\">{onGoingJob.UnloadingPlace}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-map-signs\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Trip Type</div>\r\n                                        <div className=\"content-text-secondary\">{onGoingJob.TripType}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Accpeted Delay</div>\r\n                                        <div className=\"content-text-secondary\">{`${onGoingJob.AcceptedDelay} Hour(s)`}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-box\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Cargo Type</div>\r\n                                        <div className=\"content-text-secondary\">{onGoingJob.CargoType}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-weight\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Cargo Weight</div>\r\n                                        <div className=\"content-text-secondary\">{`${onGoingJob.CargoWeight} lbs.`}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Date</div>\r\n                                        <div className=\"content-text-secondary\">{loadingDate.toDateString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Time</div>\r\n                                        <div className=\"content-text-secondary\">{loadingDate.toTimeString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-id-badge\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Entry/Exit</div>\r\n                                        <div className=\"content-text-secondary\">{(onGoingJob.EntryExit === 1) ?\r\n                                            <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                            <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Started on</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(onGoingJob.Created).toDateString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Started at</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(onGoingJob.Created).toTimeString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-hashtag\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Job Number</div>\r\n                                        <div className=\"content-text-secondary\">{onGoingJob.JobNumber}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobContainer;","import React, { Component } from \"react\";\r\nimport JobContainer from \"../../../../../containers/onGoingJob/JobContainer\";\r\n\r\nclass Job extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const onGoingJob = this.props.OnGoingJob;\r\n        const hasObjections = this.props.HasObjections;\r\n\r\n        let loadingDate = new Date(onGoingJob.LoadingDate);\r\n        loadingDate.setHours((parseInt(onGoingJob.LoadingTime.substring(0, 2))));\r\n        loadingDate.setMinutes(parseInt(onGoingJob.LoadingTime.substring(3, 5)));\r\n        loadingDate.setSeconds(parseInt(onGoingJob.LoadingTime.substring(6)));\r\n\r\n        let JumbotronContent;\r\n\r\n        if (onGoingJob.CompletedByDriver) {\r\n            JumbotronContent = <section>\r\n                <h3><span className=\"fas fa-smile p-r-xxxs\"></span>This Job is Completed.</h3>\r\n                <div class=\"type-sh3\">Waiting for Trader's Approval</div>\r\n            </section>;\r\n        }\r\n        else if (hasObjections) {\r\n            JumbotronContent = <h3><span className=\"fas fa-exclamation p-r-xxxs\"></span>This Job is Terminated.</h3>;\r\n        }\r\n        else {\r\n            let dateDifference = loadingDate - new Date();\r\n            const days = Math.floor(dateDifference / 86400000);\r\n            const hours = Math.floor((dateDifference % 86400000) / 3600000);\r\n            const minutes = Math.round(((dateDifference % 86400000) % 3600000) / 60000);\r\n\r\n            let dayString = (days > 0) ? `${days} Days ` : \"\";\r\n            let hourString = (hours > 0) ? `${hours} Hours ` : \"\";\r\n            let minuteString = (minutes > 0) ? `${minutes} Minutes ` : \"\";\r\n\r\n            let remainingTime = `${dayString}${hourString}${minuteString}Left To Load Cargo`;\r\n\r\n            if (dateDifference < 0) {\r\n                remainingTime = \"Loading Time has Passed\";\r\n            }\r\n\r\n            JumbotronContent = <section>\r\n                <h3><span className=\"fas fa-clock\"></span>   {remainingTime}</h3>\r\n                <div class=\"type-sh3\">\r\n                    <span className=\"fas fa-tag m-r-xxs\"></span>{`$${onGoingJob.Price} AMOUNT IS ON YOUR WAY`}</div>\r\n                <div class=\"col-md-12 col-md-offset-6\">\r\n                    <div class=\"type-p3\">{(onGoingJob.AcceptedDelay > 0) ?\r\n                        <span>\r\n                            <span className=\"fas fa-leaf\"></span>\r\n                            <span>{` You have a relaxation of ${onGoingJob.AcceptedDelay} Hours.`}</span>\r\n                        </span> :\r\n                        <span>\"You must reach on time to load the cargo.\"</span>}\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n\r\n        return <section>\r\n            <div class=\"jumbotron theme-dark\" style={{ background: \"linear-gradient(to right bottom, #008575, #005162)\" }}>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-24 text-center\">\r\n                            {JumbotronContent}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <JobContainer OnGoingJob={onGoingJob} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Job;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport { finishJob } from \"../../../DriverFunctions\";\r\n\r\nclass FinishJobDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Progress: null\r\n        };\r\n\r\n        this.onYes = this.onYes.bind(this);\r\n    }\r\n\r\n    onYes = async () => {\r\n        this.setState({\r\n            Progress: true\r\n        });\r\n\r\n        const finishedJob = {\r\n            Token: localStorage.Token,\r\n        }\r\n\r\n        console.log(\"Going to finish the job...\");\r\n\r\n        await finishJob(finishedJob).then(response => {\r\n            if (response.Message === \"Job is finished.\") {\r\n                this.setState({\r\n                    Progress: false\r\n                });\r\n\r\n                this.props.OnOK();\r\n            }\r\n            else {\r\n                this.setState({\r\n                    Progress: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const completedByDriver = this.props.CompletedByDriver;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"finish-job-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}\r\n                                    style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            {this.state.Progress ? <ProgressRing /> : null}\r\n                            <div className=\"type-h2\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Finish Job</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div class=\"jumbotron\">\r\n                                <div class=\"container\">\r\n                                    <div class=\"row\">\r\n                                        {completedByDriver ? \r\n                                            <div class=\"col-md-24\">\r\n                                                <img alt=\"confetti.png\" src=\"./images/confetti.png\" height=\"100\" />\r\n                                                <div class=\"type-h3\">Congratulations! You Have Finished Your Job</div>\r\n                                                <div class=\"type-sh3\">The Trader's Approval is Pending at the Moment</div>\r\n                                                <p><span class=\"color-default\">Important Note:</span> You can view this job in <span class=\"color-default\">Completed Jobs</span> tab, once the trader approves job completion.</p>\r\n                                            </div> : \r\n                                            <div class=\"col-md-24\">\r\n                                                <p>Are you sure you want to finish this job? Your trader will approve job completion afterwards!</p>\r\n                                                <div class=\"text-right\">\r\n                                                    <button class=\"btn btn-primary\" onClick={this.onYes}>Yes</button>\r\n                                                </div>\r\n                                            </div>}\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default FinishJobDialog;","import React, { Component } from \"react\";\r\nimport FinishJobDialog from \"./FinishJobDialog\";\r\n\r\nclass OnGoingJobOptions extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const hasObjections = this.props.HasObjections;\r\n        const completedByDriver = this.props.CompletedByDriver;\r\n        const completedByTrader = this.props.CompletedByTrader;\r\n\r\n        return hasObjections ?\r\n            <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"entity-list theme-alt\">\r\n                            <div className=\"entity-list-item\">\r\n                                <div className=\"item-icon\">\r\n                                    <span className=\"fas fa-exclamation-circle\"></span>\r\n                                </div>\r\n                                <div className=\"item-content-primary\">\r\n                                    <div className=\"content-text-primary\">Objectionable Job</div>\r\n                                    <div className=\"content-text-secondary\">Since your job has got objections, Naqel team will review them, and consequently take any suitable actions!</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section> :\r\n            <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"col-md-24\">\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Job Completion Status</div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-24\">\r\n                                <div className=\"entity-list theme-alt\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-certificate\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Finished By You</div>\r\n                                            <div className=\"content-text-secondary\">{completedByDriver ?\r\n                                                <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-certificate\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Approved By Trader</div>\r\n                                            <div className=\"content-text-secondary\">{completedByTrader ?\r\n                                                <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                            <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#finish-job-dialog\">Finish Job</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <FinishJobDialog CompletedByDriver={completedByDriver}\r\n                    OnOK={() => { this.props.OnJobFinished(); }} />\r\n            </section>;\r\n             \r\n    }\r\n};\r\n\r\nexport default OnGoingJobOptions;","import React, { Component } from \"react\";\r\nimport FirebaseApp from \"../../../../../res/FirebaseApp\";\r\nimport { getData } from \"../../../DriverFunctions\";\r\nimport ProgressBar from \"../../../../../controls/ProgressBar\";\r\nimport TraderContainer from \"../../../../../containers/trader/TraderContainer\";\r\nimport OnGoingJobMap from \"./OnGoingJobMap\";\r\nimport Objections from \"./objectionsTab/Objections\";\r\nimport Job from \"./Job\";\r\nimport OnGoingJobOptions from \"./OnGoingJobOptions\";\r\n\r\nclass OnGoingJob extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.Database = null;\r\n\r\n        this.state = {\r\n            OnGoingJob: null,\r\n            HasObjections: false,\r\n            DriverLocation: null,\r\n            Loading: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"OnGoingJob\"\r\n            };\r\n\r\n            this.setState({\r\n                Loading: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"On-going job found.\") {\r\n                    if (!this.Database) {\r\n                        this.Database = FirebaseApp.database().ref().child(`${response.OnGoingJob.DriverID}`);\r\n                    }\r\n\r\n                    this.Database.on(\"value\", snapshot => {\r\n                        let driverLocation = null;\r\n                        const value = snapshot.val();\r\n\r\n                        if (value) {\r\n                            const locationCoordinates = value[\"latlong\"].split(\",\");\r\n\r\n                            driverLocation = {\r\n                                Lat: parseFloat(locationCoordinates[0]),\r\n                                Lng: parseFloat(locationCoordinates[1])\r\n                            };\r\n                        }\r\n\r\n                        this.setState({\r\n                            DriverLocation: driverLocation,\r\n                            OnGoingJob: response.OnGoingJob,\r\n                            HasObjections: response.HasObjections,\r\n                            Loading: false\r\n                        });\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        OnGoingJob: null,\r\n                        DriverLocation: null,\r\n                        HasObjections: false,\r\n                        Loading: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"OnGoingJob\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"On-going job found.\") {\r\n                    console.log(response);\r\n                    this.setState({\r\n                        OnGoingJob: response.OnGoingJob,\r\n                        HasObjections: response.HasObjections\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        OnGoingJob: null,\r\n                        HasObjections: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Loading || !this.state.OnGoingJob) {\r\n            return <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\", width: \"100%\", height: \"100vh\" }}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                alt=\"on_going_jobs.png\" src=\"./images/on_going_jobs.png\" data-source-index=\"2\" />\r\n                        </div>\r\n                        <div className=\"col-md-12 col-md-pull-12\">\r\n                            <div className=\"type-h3\">On-Going Job</div>\r\n                            {this.state.Loading ?\r\n                                <div>\r\n                                    <div class=\"type-sh3\" style={{ color: \"#008575\" }}>Searhcing</div>\r\n                                    <ProgressBar />\r\n                                </div> :\r\n                                <div className=\"type-sh3\">Couldn't Find Your Job...</div>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n        }\r\n        else {\r\n            const onGoingJob = this.state.OnGoingJob;\r\n            const hasObjections = this.state.HasObjections;\r\n\r\n            return <section>\r\n                {hasObjections ?\r\n                    <div class=\"alert alert-danger m-n\">\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xs-24\">\r\n                                    <p><span className=\"fas fa-exclamation-circle m-r-xxxs\"></span>This job has objections, and it cannot be finished now. Actions are pending by Naqel. For more information, please tap on <span className=\"color-default\">Objections</span> tab.</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div> :\r\n                    null}\r\n\r\n                <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                    <li role=\"presentation\" className=\"active\">\r\n                        <a href=\"#job-tab\" aria-controls=\"job-tab\" role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={this.refresh}>Job</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#trader-tab\" aria-controls=\"trader-tab\" role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={async () => { await this.RefreshTraderContainer();  }}>Trader</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#map-tab\" aria-controls=\"map-tab\" role=\"tab\" data-toggle=\"tab\">Map</a>\r\n                    </li>\r\n                    {onGoingJob.CompletedByDriver ? \r\n                        null :\r\n                        <li role=\"presentation\">\r\n                            <a href=\"#objections-tab\" aria-controls=\"objections-tab\" role=\"tab\" data-toggle=\"tab\"\r\n                                onClick={async () => { await this.RefreshObjections(); }}>Objections</a>\r\n                        </li>}\r\n                </ul>\r\n\r\n                <div className=\"tab-content\">\r\n                    <div role=\"tabpanel\" className=\"tab-pane active\" id=\"job-tab\">\r\n                        <Job OnGoingJob={onGoingJob} HasObjections={hasObjections} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"trader-tab\">\r\n                        <TraderContainer Refresh={refresh => { this.RefreshTraderContainer = refresh; }} TraderID={onGoingJob.TraderID} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"map-tab\">\r\n                        <OnGoingJobMap OnGoingJob={onGoingJob}\r\n                            DriverLocation={this.state.DriverLocation}/>\r\n                    </div>\r\n                    {onGoingJob.CompletedByDriver ? \r\n                        null :\r\n                        <div role=\"tabpanel\" className=\"tab-pane\" id=\"objections-tab\">\r\n                            <Objections Refresh={refresh => { this.RefreshObjections = refresh; }}\r\n                                OnGoingJobID={onGoingJob.OnGoingJobID} OnObjectionAdded={this.refresh} />\r\n                        </div>}\r\n                </div>\r\n                <OnGoingJobOptions HasObjections={hasObjections}\r\n                    CompletedByDriver={onGoingJob.CompletedByDriver}\r\n                    CompletedByTrader={onGoingJob.CompletedByTrader}\r\n                    OnJobRemoved={this.onComponentUpdated}\r\n                    OnJobFinished={() => {\r\n                        let onGoingJob = this.state.OnGoingJob;\r\n                        onGoingJob.CompletedByDriver = true;\r\n\r\n                        this.setState({\r\n                            OnGoingJob: onGoingJob\r\n                        });\r\n                    }} />\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default OnGoingJob;","import React, { Component } from \"react\";\r\n\r\nclass CompletedJobContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const completedJob = this.props.CompletedJob;\r\n\r\n        let loadingDate = new Date(completedJob.LoadingDate);\r\n        loadingDate.setHours((parseInt(completedJob.LoadingTime.substring(0, 2))));\r\n        loadingDate.setMinutes(parseInt(completedJob.LoadingTime.substring(3, 5)));\r\n        loadingDate.setSeconds(parseInt(completedJob.LoadingTime.substring(6)));\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"col-md-24\">\r\n                        <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                            {index && index >= 0 ? `${index + 1}.` : \"Job\"}\r\n                            {index === 0 ? <span class=\"badge back-color-golden m-l-xxs\">LATEST</span> : null}\r\n                        </div>\r\n                        <div className=\"type-sh3\">\r\n                            <span className=\"fas fa-tag m-r-xxs\" style={{ color: \"#606060\" }}></span>{`$${completedJob.Price.toFixed(2)}`}\r\n                        </div>\r\n                        <div className=\"type-h4\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                            <span className=\"fas fa-check m-r-xxxs\"></span>\r\n                            {`Cargo Items were Delivered at ${completedJob.UnloadingPlace} from ${completedJob.LoadingPlace}.`}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-hashtag\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Job Number</div>\r\n                                        <div className=\"content-text-secondary\">{completedJob.JobNumber}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-map-signs\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Trip Type</div>\r\n                                        <div className=\"content-text-secondary\">{completedJob.TripType}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Accpeted Delay</div>\r\n                                        <div className=\"content-text-secondary\">{`${completedJob.AcceptedDelay} Hour(s)`}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-id-badge\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Entry/Exit</div>\r\n                                        <div className=\"content-text-secondary\">{completedJob.EntryExit ?\r\n                                            <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                            <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-box\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Cargo Type</div>\r\n                                        <div className=\"content-text-secondary\">{completedJob.CargoType}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-weight\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Cargo Weight</div>\r\n                                        <div className=\"content-text-secondary\">{`${completedJob.CargoWeight} lbs.`}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Date</div>\r\n                                        <div className=\"content-text-secondary\">{loadingDate.toDateString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Time</div>\r\n                                        <div className=\"content-text-secondary\">{loadingDate.toTimeString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Completed on</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(completedJob.Created).toDateString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Completed at</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(completedJob.Created).toTimeString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default CompletedJobContainer;","import React, { Component } from \"react\";\r\n\r\nclass PayProofContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const payProof = this.props.PayProof;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                src={payProof.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"col-md-18\">\r\n                            <div className=\"type-h3 color-default p-t-n\">Payment Proof</div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-24\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-certificate\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Approved</div>\r\n                                                <div className=\"content-text-secondary\">{payProof.Approved ?\r\n                                                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-calendar\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Uploaded On</div>\r\n                                                <div className=\"content-text-secondary\">{`DATE: ${new Date(payProof.Created).toDateString()}`}</div>\r\n                                                <div className=\"content-text-secondary\">{`TIME: ${new Date(payProof.Created).toLocaleTimeString()}`}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PayProofContainer;","import React, { Component } from \"react\";\r\nimport PayProofContainer from \"../../../../../../containers/payProof/PayProofContainer\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { approveTraderPayProof } from \"../../../../DriverFunctions\";\r\n\r\nclass PayProofDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false\r\n        };\r\n\r\n        this.onApprovePayment = this.onApprovePayment.bind(this);\r\n    }\r\n\r\n    onApprovePayment = async () => {\r\n        if (this.props.PayProof.Approved) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        let approvedTraderPayProof = {\r\n            Token: localStorage.Token,\r\n            TraderPayProofID: this.props.PayProof.TraderPayProofID\r\n        };\r\n\r\n        console.log(`Going to approve Trader pay proof.`);\r\n\r\n        await approveTraderPayProof(approvedTraderPayProof).then(response => {\r\n            if (response.Message === \"Trader pay proof is approved.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.props.OnPayProofApproved();\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const showPreloader = this.state.ShowPreloader;\r\n        const payProof = this.props.PayProof;\r\n\r\n        return <section>\r\n            {payProof.Approved ?\r\n                null :\r\n                <div class=\"alert alert-info m-n p-n\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xs-24\">\r\n                                <p><span className=\"fas fa-exclamation-circle m-r-xxxs\"></span>PENDING APPROVAL: The trader has updated this pay proof. Tap on the <span className=\"color-default\">Approve</span> button, if you have received the payment.\r\n                                    Afterwards, you will have to pay our job dues from your <span className=\"color-default\">Payments</span> section.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n            <PayProofContainer PayProof={payProof} />\r\n            {payProof.Approved ?\r\n                null : \r\n                <div className=\"text-right back-color-gray p-xxs\">\r\n                    <button className=\"btn btn-primary m-n\" onClick={this.onApprovePayment}>Approve Payment</button>\r\n                </div>}\r\n            {showPreloader ? <Preloader /> : null}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PayProofDetails;","import React, { Component } from \"react\";\r\n\r\nclass PayDetailsContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            PayDetails\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-24\">\r\n                            <div className=\"type-h3 color-default p-t-n\">Credit Card Payment</div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-user\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Owner Name</div>\r\n                                                <div className=\"content-text-secondary\">{PayDetails.OwnerName}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-envelope\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Owner Email</div>\r\n                                                <div className=\"content-text-secondary\">{PayDetails.OwnerEmail}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-credit-card\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Payment Method</div>\r\n                                                <div className=\"content-text-secondary\">{PayDetails.CardType.toUpperCase()}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-certificate\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Approved</div>\r\n                                                <div className=\"content-text-secondary\">\r\n                                                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-calendar\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Paid On</div>\r\n                                                <div className=\"content-text-secondary\">{`DATE: ${new Date(PayDetails.Created).toDateString()}`}</div>\r\n                                                <div className=\"content-text-secondary\">{`TIME: ${new Date(PayDetails.Created).toLocaleTimeString()}`}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PayDetailsContainer;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport PayProofDetails from \"./PayProofDetails\";\r\nimport PayDetailsContainer from \"../../../../../../containers/payDetails/PayDetailsContainer\";\r\nimport { getData } from \"../../../../DriverFunctions\";\r\n\r\nclass PaymentDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TraderPaymentDetails: null,\r\n            Searching: false,\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderPaymentDetails\",\r\n                Params: {\r\n                    CompletedJobID: this.props.CompletedJobID\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader payment details found.\") {\r\n                    this.setState({\r\n                        TraderPaymentDetails: response.TraderPaymentDetails,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TraderPaymentDetails: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderPaymentDetails\",\r\n                Params: {\r\n                    CompletedJobID: this.props.CompletedJobID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader payment details found.\") {\r\n                    this.setState({\r\n                        TraderPaymentDetails: response.TraderPaymentDetails\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TraderPaymentDetails: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            TraderPaymentDetails,\r\n            Searching\r\n        } = this.state;\r\n\r\n        if (Searching || !TraderPaymentDetails) {\r\n            return <SearchingContainer Searching={Searching}\r\n                SearchingFor=\"payment details\" />;\r\n        }\r\n        else {\r\n            if (TraderPaymentDetails.IsOnlinePayment) {\r\n                return <PayDetailsContainer PayDetails={TraderPaymentDetails.PayDetails} />\r\n            }\r\n            else {\r\n                return <PayProofDetails PayProof={TraderPaymentDetails.PayProof}\r\n                    OnPayProofApproved={async () => {\r\n                        this.props.OnPayProofApproved();\r\n                        await this.refresh();\r\n                    }} />;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport default PaymentDetails;","import React, { Component } from \"react\";\r\nimport TraderContainer from \"../../../../../../containers/trader/TraderContainer\";\r\nimport PaymentDetails from \"./PaymentDetails\";\r\n\r\nclass MoreDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const traderID = this.props.TraderID;\r\n        const completedJobID = this.props.CompletedJobID;\r\n\r\n        return <section>\r\n            <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href={`#trader-completed-jobs-${index}`} aria-controls={`trader-completed-jobs-${index}`} role=\"tab\" data-toggle=\"tab\"\r\n                        onClick={async () => { await this.RefreshTraderContainer(); }}>Trader</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href={`#payment-details-completed-jobs-${index}`} aria-controls={`payment-details-completed-jobs-${index}`} role=\"tab\" data-toggle=\"tab\"\r\n                        onClick={async () => { await this.RefreshPaymentDetails(); }}>Payment Details</a>\r\n                </li>\r\n            </ul>\r\n            <div className=\"tab-content\">\r\n                <div role=\"tabpanel\" className=\"tab-pane active\" id={`trader-completed-jobs-${index}`}>\r\n                    <TraderContainer Refresh={refresh => { this.RefreshTraderContainer = refresh; }} TraderID={traderID} />\r\n                </div>\r\n                <div role=\"tabpanel\" className=\"tab-pane\" id={`payment-details-completed-jobs-${index}`}>\r\n                    <PaymentDetails Refresh={refresh => { this.RefreshPaymentDetails = refresh; }} CompletedJobID={completedJobID}\r\n                        OnPayProofApproved={this.props.OnPayProofApproved} />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default MoreDetails;","import React, { Component } from \"react\";\r\nimport CompletedJobContainer from \"../../../../../containers/completedJob/CompletedJobContainer\";\r\nimport Rating from \"../../../../../controls/Rating\";\r\nimport MoreDetails from \"./moreDetails/MoreDetails\";\r\n\r\nclass CompletedJobPackageListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const completedJob = this.props.CompletedJobPackage.CompletedJob;\r\n        const billPaid = this.props.CompletedJobPackage.BillPaid;\r\n        const driverReview = this.props.CompletedJobPackage.DriverReview;\r\n\r\n        return <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n            {billPaid ?\r\n                <div class=\"alert alert-info m-n p-n\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xs-24\">\r\n                                <p><span className=\"fas fa-check-circle m-r-xxxs\"></span>The bill has been paid! Tap on <span className=\"color-default\">More Details</span> for payment information.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> :\r\n                <div class=\"alert alert-danger m-n p-n\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xs-24\">\r\n                                <p><span className=\"fas fa-exclamation-circle m-r-xxxs\"></span>The trader has not paid the bill yet; If the bill is paid via Bank Transfer then your approval is required.\r\n                                    Tap on <span className=\"color-default\">More Details</span> for payment details.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n\r\n            <CompletedJobContainer Index={index} CompletedJob={completedJob} />\r\n\r\n            {driverReview ?\r\n                <div class=\"alert alert-info m-n\" style={{ backgroundColor: \"#E5E5E5\", borderTop: \"2px solid #CCCCCC\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-24\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-star\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Rating</div>\r\n                                        <div className=\"content-text-secondary\"><Rating Rating={driverReview.Rating} Color=\"\" Size=\"rating-small\" /></div>\r\n                                        <div className=\"content-text-primary\">Review</div>\r\n                                        <div className=\"content-text-secondary\">{driverReview.Review}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> :\r\n                <div class=\"alert alert-info m-n\" style={{ backgroundColor: \"#E5E5E5\", borderTop: \"2px solid #CCCCCC\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-24\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-star\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">No Rating Found</div>\r\n                                        <div className=\"content-text-secondary\">Your rating and review appears here.</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n\r\n            <div className=\"back-color-gray\" data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#completed-job-${index}`}>\r\n                <div className=\"type-h4 color-default text-right p-xxxs\">More Details\r\n                    <i className=\"fas fa-ellipsis-v\"></i>\r\n                    <i class=\"glyph glyph-add\"></i>\r\n                    <i class=\"glyph glyph-remove\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`completed-job-${index}`}>\r\n                <MoreDetails Index={index}\r\n                    TraderID={completedJob.TraderID}\r\n                    CompletedJobID={completedJob.CompletedJobID}\r\n                    OnPayProofApproved={() => {\r\n                        this.props.OnPayProofApproved(this.props.CompletedJobPackage);\r\n                    }} />\r\n            </div>\r\n        </li>;\r\n    }\r\n};\r\n\r\nexport default CompletedJobPackageListItem;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport CompletedJobPackageListItem from \"./CompletedJobPackageListItem\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport { getData } from \"../../../DriverFunctions\";\r\n\r\nclass CompletedJobsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllCompletedJobPackages: [],\r\n            CompletedJobPackages: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        }\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"CompletedJobPackages\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Completed job packages found.\") {\r\n                    this.setState({\r\n                        AllCompletedJobPackages: response.CompletedJobPackages,\r\n                        CompletedJobPackages: response.CompletedJobPackages,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllCompletedJobPackages: [],\r\n                        CompletedJobPackages: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"CompletedJobPackages\"\r\n            };\r\n\r\n            this.setState({\r\n                Refreshing: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Completed job packages found.\") {\r\n                    this.setState({\r\n                        AllCompletedJobPackages: response.CompletedJobPackages,\r\n                        CompletedJobPackages: response.CompletedJobPackages,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllCompletedJobPackages: [],\r\n                        CompletedJobPackages: [],\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.SearchDate === \"\") {\r\n            this.setState({\r\n                CompletedJobPackages: this.state.AllCompletedJobPackages\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allCompletedJobPackages = this.state.AllCompletedJobPackages;\r\n        let filteredCompletedJobPackages = [];\r\n        let count = 0;\r\n        let searchString = this.state.SearchString;\r\n\r\n        for (let completedJobPackage of allCompletedJobPackages) {\r\n            let completedJob = completedJobPackage.CompletedJob;\r\n\r\n            if (completedJob.JobNumber.includes(searchString)) {\r\n                filteredCompletedJobPackages[count++] = completedJobPackage;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            CompletedJobPackages: filteredCompletedJobPackages\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const completedJobPackages = this.state.CompletedJobPackages;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-check m-r-xxs\"></span>Completed Jobs</div>\r\n                            <p className=\"color-light\">{`You have completed ${this.state.AllCompletedJobPackages.length} jobs.`}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Your Completed Jobs\r\n                    {this.state.Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search Jobs\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={this.state.SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div> \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            {(completedJobPackages.length === 0) ?\r\n                <SearchingContainer Searching={this.state.Searching}\r\n                    SearchingFor=\"completed jobs\" /> :\r\n                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {completedJobPackages.map((completedJobPackage, index) => {\r\n                        return <CompletedJobPackageListItem key={index}\r\n                            Index={index}\r\n                            CompletedJobPackage={completedJobPackage}\r\n                            OnPayProofApproved={completedJobPackage => {\r\n                                let completedJobPackages = this.state.CompletedJobPackages;\r\n\r\n                                for (let completedJobPackageItem of completedJobPackages) {\r\n                                    if (completedJobPackageItem === completedJobPackage) {\r\n                                        completedJobPackageItem.BillPaid = true;\r\n                                        break;\r\n                                    }\r\n                                }\r\n\r\n                                this.setState({\r\n                                    CompletedJobPackages: completedJobPackages\r\n                                });\r\n                            }} />;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default CompletedJobsList;","import React, { Component } from \"react\";\r\nimport CompletedJobsList from \"./CompletedJobsList\";\r\n\r\nclass CompletedJobs extends Component {\r\n   render() {\r\n       return <section>\r\n           <CompletedJobsList Refresh={this.props.Refresh} />\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default CompletedJobs;","import React, { Component } from \"react\";\r\nimport JobRequests from \"./jobRequests/JobRequests\"; \r\nimport JobOffers from \"./jobOffers/JobOffers\";\r\nimport OnGoingJob from \"./onGoingJob/OnGoingJob\";\r\nimport CompletedJobs from \"./completedJobs/CompletedJobs\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Jobs extends Component {\r\n    render() {\r\n        return <section>\r\n            <PageHeading Heading=\"JOBS\" />\r\n            <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                padding: \"10px\",\r\n                backgroundColor: \"#3A3A3C\",\r\n                width: \"100%\",\r\n                margin: \"0px\",\r\n            }}>\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#job-requests\" aria-controls=\"job-requests\" role=\"tab\" data-toggle=\"tab\"\r\n                        onClick={async () => { await this.RefreshJobRequests(); }}>Job Requests</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#job-offers\" aria-controls=\"job-offers\" role=\"tab\" data-toggle=\"tab\"\r\n                        onClick={async () => { await this.RefreshJobOffers(); }}>Job Offers</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#on-going-job\" aria-controls=\"on-going-job\" role=\"tab\" data-toggle=\"tab\"\r\n                        onClick={async () => { await this.RefreshOnGoingJob(); }}>On-Going Job</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#completed-jobs\" aria-controls=\"completed-jobs\" role=\"tab\" data-toggle=\"tab\"\r\n                        onClick={async () => { await this.RefreshCompletedJobs(); }}>Completed Jobs</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div class=\"tab-content\">\r\n                <div role=\"tabpanel\" class=\"tab-pane active\" id=\"job-requests\">\r\n                    <JobRequests Refresh={refresh => { this.RefreshJobRequests = refresh; }} />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"job-offers\">\r\n                    <JobOffers Refresh={refresh => { this.RefreshJobOffers = refresh; }}/>\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"on-going-job\">\r\n                    <OnGoingJob Refresh={refresh => { this.RefreshOnGoingJob = refresh; }} />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"completed-jobs\">\r\n                    <CompletedJobs Refresh={refresh => { this.RefreshCompletedJobs = refresh; }}/>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Jobs;","import React, { Component } from \"react\";\r\n\r\nclass BillContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const bill = this.props.Bill;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"col-md-24\">\r\n                        <div className=\"type-h5 color-default p-t-n\">\r\n                            {`${index + 1}. Bill Number: ${bill.BillNumber}`}\r\n                            {index === 0 ? <span class=\"badge back-color-golden m-l-xxs\">NEW</span> : null}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-dollar-sign\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Amount</div>\r\n                                        <div className=\"content-text-secondary\">{`$${bill.Amount.toFixed(2)}`}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-certificate\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Paid</div>\r\n                                        <div className=\"content-text-secondary\">{bill.Paid ?\r\n                                            <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                            <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-hashtag\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Job Number</div>\r\n                                        <div className=\"content-text-secondary\">{bill.JobNumber}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Generated On</div>\r\n                                        <div className=\"content-text-secondary\">{`DATE: ${new Date(bill.Created).toDateString()}`}</div>\r\n                                        <div className=\"content-text-secondary\">{`TIME: ${new Date(bill.Created).toLocaleTimeString()}`}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default BillContainer;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../containers/searching/SearchingContainer\";\r\nimport { getData } from \"../../DriverFunctions\";\r\n\r\nclass Bill extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            BillData: null,\r\n            Searching: false\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"BillData\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Bill data found.\") {\r\n                    this.setState({\r\n                        BillData: response.BillData,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        BillData: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const billData = this.state.BillData;\r\n        const searching = this.state.Searching;\r\n\r\n        if (searching || !billData) {\r\n            return <SearchingContainer Searching={searching}\r\n                SearchingFor=\"bill data\" />;\r\n        }\r\n        else {\r\n            const bill = this.props.Bill;\r\n            const naqelSettings = this.state.BillData.NaqelSettings;\r\n\r\n            return <section>\r\n                <div className=\"jumbotron theme-default back-color-light\">\r\n                    <div className=\"container\">\r\n                        <div className=\"type-t3\" style={{ fontWeight: \"600\" }}><span className=\"fas fa-route m-r-xxxs\"></span>NAQEL</div>\r\n\r\n                        <div className=\"p-t-xxs\">\r\n                            <div className=\"type-t9\">{naqelSettings.Street}</div>\r\n                            <div className=\"type-t9\">{`${naqelSettings.City}, ${naqelSettings.Country}.`}</div>\r\n                            <div className=\"type-t9\">{`ZIP ${naqelSettings.ZIPCode}`}</div>\r\n                        </div>\r\n\r\n                        <div className=\"p-t-xxs\">\r\n                            <div className=\"type-t9\">{naqelSettings.PhoneNumber}</div>\r\n                            <div className=\"type-t9\">{naqelSettings.Website}</div>\r\n                            <div className=\"type-t9\">{naqelSettings.BusinessName}</div>\r\n                        </div>\r\n\r\n                        <div className=\"type-t7 p-t-xxs\">BANK DETAILS</div>\r\n                        <div className=\"p-t-xxs\">\r\n                            <div className=\"type-t9\">BANK NAME</div>\r\n                            <div className=\"type-t9\">{naqelSettings.BankName}</div>\r\n                            <div className=\"type-t9 p-t-xxxs\">ACCOUNT #</div>\r\n                            <div className=\"type-t9\">{naqelSettings.AccountNumber}</div>\r\n                        </div>\r\n\r\n                        <div className=\"type-t7 p-t-xxs\">BILLED TO</div>\r\n                        <div className=\"p-t-xxs\">\r\n                            <div className=\"type-t9\">{`${billData.FirstName} ${billData.LastName}`}</div>\r\n                            <div className=\"type-t9\">{billData.Address}</div>\r\n                        </div>\r\n\r\n                        <div className=\"type-t7 p-t-xxs\">INVOICE</div>\r\n                        <div className=\"p-t-xxs\">\r\n                            <div className=\"type-t9\">INVOICE #</div>\r\n                            <div className=\"type-t9\">{bill.DriverBillID}</div>\r\n                            <div className=\"type-t9 p-t-xxxs\">DATE OF ISSUE</div>\r\n                            <div className=\"type-t9\">{new Date(bill.Created).toDateString()}</div>\r\n                            <div className=\"type-t9 p-t-xxxs\">INVOICE TOTAL</div>\r\n                            <div className=\"type-t3 color-default\">{`$${bill.Amount.toFixed(2)}`}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default Bill;","import React, { Component } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport Bill from \"./Bill\";\r\n\r\nclass PrintBillDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const bill = this.props.Bill;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`print-bill-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <Bill Bill={bill} ref={bill => (this.Bill = bill)} />\r\n                            <div className=\"text-right back-color-gray p-xxs\">\r\n                                <ReactToPrint\r\n                                    trigger={() => <button className=\"btn btn-primary m-n\">Print</button>}\r\n                                    content={() => this.Bill} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PrintBillDialog;","import React, { Component } from \"react\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { addDriverPayProof } from \"../../DriverFunctions\";\r\n\r\nclass AddPayProofDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                PhotoURL: \"\"\r\n            }\r\n        };\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidPhotoURL\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newDriverPayProof = {\r\n            Token: localStorage.Token,\r\n            DriverBillID: this.props.DriverBillID,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to add driver pay proof.\");\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        await addDriverPayProof(newDriverPayProof).then(response => {\r\n            if (response.Message === \"Driver pay proof is added.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const showPreloader = this.state.ShowPreloader;\r\n        const index = this.props.Index;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`add-pay-proof-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {showPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }} />\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\"></label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Upload Payment Proof</div>\r\n                                                <div className=\"type-sh3\"> The proof of a payment can be a Bank Transfer Receipt.</div>\r\n                                                <div className=\"type-sh4 text-danger\">{this.state.Errors.PhotoURL}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Upload\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddPayProofDialog;","import React, { Component } from \"react\";\r\nimport PayProofContainer from \"../../../../containers/payProof/PayProofContainer\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { deleteDriverPayProof } from \"../../DriverFunctions\";\r\n\r\nclass PayProofDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        if (this.props.PayProof.Approved) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        let discardedDriverPayProof = {\r\n            Token: localStorage.Token,\r\n            DriverPayProofID: this.props.PayProof.DriverPayProofID\r\n        };\r\n\r\n        console.log(`Going to delete driver pay proof.`);\r\n\r\n        await deleteDriverPayProof(discardedDriverPayProof).then(response => {\r\n            if (response.Message === \"Driver pay proof is deleted.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.props.OnPayProofDeleted();\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const showPreloader = this.state.ShowPreloader;\r\n        const payProof = this.props.PayProof;\r\n\r\n        return <section>\r\n            {payProof.Approved ?\r\n                null :\r\n                <div class=\"alert alert-danger m-n p-n\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xs-24\">\r\n                                <p><span className=\"fas fa-exclamation-circle m-r-xxxs\"></span>PENDING APPROVAL: Naqel team will approve this proof.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n            <PayProofContainer PayProof={payProof} />\r\n            {payProof.Approved ? \r\n                null : \r\n                <div className=\"text-right back-color-gray p-xxs\">\r\n                    <button className=\"btn btn-danger m-n\" onClick={this.onDelete}>Delete</button>\r\n                </div>}\r\n            {showPreloader ? <Preloader /> : null}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PayProofDetails;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../containers/searching/SearchingContainer\";\r\nimport PayProofDetails from \"./PayProofDetails\";\r\nimport PayDetailsContainer from \"../../../../containers/payDetails/PayDetailsContainer\";\r\nimport { getData } from \"../../DriverFunctions\";\r\n\r\nclass PaymentDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PaymentDetails: null,\r\n            Searching: false,\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"PaymentDetails\",\r\n                Params: {\r\n                    DriverBillID: this.props.DriverBillID\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Payment details found.\") {\r\n                    this.setState({\r\n                        PaymentDetails: response.PaymentDetails,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        PaymentDetails: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"PaymentDetails\",\r\n                Params: {\r\n                    DriverBillID: this.props.DriverBillID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Payment details found.\") {\r\n                    this.setState({\r\n                        PaymentDetails: response.PaymentDetails\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        PaymentDetails: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            PaymentDetails,\r\n            Searching\r\n        } = this.state;\r\n\r\n        if (Searching || !PaymentDetails) {\r\n            return <SearchingContainer Searching={Searching}\r\n                SearchingFor=\"payment details\" />;\r\n        }\r\n        else {\r\n            if (PaymentDetails.IsOnlinePayment) {\r\n                return <PayDetailsContainer PayDetails={PaymentDetails.PayDetails} />\r\n            }\r\n            else {\r\n                return <PayProofDetails PayProof={PaymentDetails.PayProof}\r\n                    OnPayProofDeleted={this.props.OnPayProofDeleted} />;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport default PaymentDetails;","import React, { Component } from \"react\";\r\nimport { CardElement } from \"@stripe/react-stripe-js\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport {\r\n    getClientSecret,\r\n    addDriverPayDetails,\r\n} from \"../../DriverFunctions\";\r\n\r\nclass PayOnlineDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Owner: \"\",\r\n            Email: \"\",\r\n\r\n            ValidOwner: false,\r\n            ValidEmail: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n            ShowCard: false,\r\n\r\n            Errors: {\r\n                Owner: \"\",\r\n                Email: \"\",\r\n                CheckOut: \"\"\r\n            }\r\n        };\r\n\r\n        this.toggleCard = this.toggleCard.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onCardInputChange = this.onCardInputChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.ToggleCard(this.toggleCard);\r\n    }\r\n\r\n    onCardInputChange = event => {\r\n        let Errors = this.state.Errors;\r\n        Errors.CheckOut = event.error ? event.error.message : \"\";\r\n\r\n        this.setState({\r\n            Errors: Errors\r\n        });\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidOwner = this.state.ValidOwner;\r\n        let ValidEmail = this.state.ValidEmail;\r\n\r\n        switch (field) {\r\n            case \"Owner\":\r\n                ValidOwner = (value !== \"\");\r\n                Errors.Owner = ValidOwner ? \"\" : \"Card owner name is required.\";\r\n\r\n                if (Errors.Owner !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidOwner = value.match(/^[a-zA-Z ]+$/);\r\n                Error.Owner = ValidOwner ? \"\" : \"Invalid owner name.\";\r\n                break;\r\n            case \"Email\":\r\n                ValidEmail = (value !== \"\");\r\n                Errors.Email = ValidEmail ? \"\" : \"Email is required.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidEmail = (value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i));\r\n                Errors.Email = ValidEmail ? \"\" : \"Email is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidOwner: ValidOwner,\r\n            ValidEmail: ValidEmail,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidOwner &&\r\n                        this.state.ValidEmail\r\n            });\r\n        });\r\n    }\r\n\r\n    toggleCard = toggle => {\r\n        this.setState({\r\n            ShowCard: toggle\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const bill = this.props.Bill;\r\n\r\n        const billingDetails = {\r\n            name: this.state.Owner,\r\n            email: this.state.Email\r\n        };\r\n\r\n        const newClientSecret = {\r\n            Token: localStorage.Token,\r\n            Amount: bill.Amount * 100\r\n        };\r\n\r\n        const stripe = this.props.Stripe;\r\n        const elements = this.props.Elements;\r\n\r\n        const cardElement = elements.getElement(CardElement);\r\n\r\n        try {\r\n            await getClientSecret(newClientSecret).then(async response => {\r\n                if (response.Message === \"Client secret found.\") {\r\n                    const clientSecret = response.ClientSecret;\r\n\r\n                    const paymentMethodRequest = await stripe.createPaymentMethod({\r\n                        type: \"card\",\r\n                        card: cardElement,\r\n                        billing_details: billingDetails\r\n                    });\r\n\r\n                    if (paymentMethodRequest.error) {\r\n                        let Errors = this.state.Errors;\r\n                        Errors.CheckOut = paymentMethodRequest.error.message;\r\n\r\n                        this.setState({\r\n                            Errors: Errors,\r\n                            ShowPreloader: false\r\n                        });\r\n\r\n                        return;\r\n                    }\r\n\r\n                    const newDriverPayDetails = {\r\n                        Token: localStorage.Token,\r\n                        DriverBillID: this.props.Bill.DriverBillID,\r\n                        OwnerName: this.state.Owner,\r\n                        OwnerEmail: this.state.Email,\r\n                        CardType: paymentMethodRequest.paymentMethod.card.brand\r\n                    };\r\n\r\n                    const { error } = await stripe.confirmCardPayment(clientSecret, {\r\n                        payment_method: paymentMethodRequest.paymentMethod.id\r\n                    });\r\n\r\n                    if (error) {\r\n                        let Errors = this.state.Errors;\r\n                        Errors.CheckOut = error.message;\r\n\r\n                        this.setState({\r\n                            Errors: Errors,\r\n                            ShowPreloader: false\r\n                        });\r\n\r\n                        return;\r\n                    }\r\n\r\n                    await addDriverPayDetails(newDriverPayDetails).then(response => {\r\n                        this.setState({\r\n                            ShowPreloader: false\r\n                        });\r\n\r\n                        if (response.Message === \"Pay details are added.\") {\r\n                            this.toggleCard(false);\r\n                            this.cancelButton.click();\r\n                            this.props.OnOK();\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        ShowPreloader: false\r\n                    });\r\n                }\r\n            });\r\n        } catch (error) {\r\n            let Errors = this.state.Errors;\r\n            Errors.CheckOut = error.message;\r\n\r\n            this.setState({\r\n                Errors: Errors\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ShowCard\r\n        } = this.state;\r\n\r\n        const showPreloader = this.state.ShowPreloader;\r\n        const index = this.props.Index;\r\n        const bill = this.props.Bill;\r\n\r\n        const iframeStyles = {\r\n            base: {\r\n                color: \"#000000\",\r\n                fontSize: \"15px\",\r\n                fontFamily: \"Segoe UI\",\r\n                iconColor: \"#000000\"\r\n            },\r\n            invalid: {\r\n                iconColor: \"#D75A4A\",\r\n                color: \"#D75A4A\"\r\n            },\r\n            complete: {\r\n                iconColor: \"#008575\"\r\n            }\r\n        };\r\n\r\n        const cardElementOpts = {\r\n            iconStyle: \"solid\",\r\n            style: iframeStyles,\r\n            hidePostalCode: true\r\n        };\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`pay-online-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {showPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    onClick={() => { this.toggleCard(false); }}\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Pay Online</div>\r\n                                                <div className=\"type-sh3 m-b-xxs\">Pay the bill with your credit card.</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Owner Name</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"Owner\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Owner} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Owner}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Owner Email</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"email\" name=\"Email\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        placeholder=\"someone@mail.com\" value={this.state.Email} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Email}</span>\r\n                                                </div>\r\n\r\n                                                <div className=\"type-sh4\">\r\n                                                    <span className=\"fab fa-cc-visa\"></span>\r\n                                                    <span className=\"fab fa-cc-mastercard m-l-xxxs\"></span>\r\n                                                    <span className=\"fab fa-cc-amex m-l-xxxs\"></span>\r\n                                                    <span className=\"fab fa-cc-discover m-l-xxxs\"></span>\r\n                                                    <span className=\"fab fa-cc-diners-club m-l-xxxs\"></span>\r\n                                                    <span className=\"fab fa-cc-jcb m-l-xxxs\"></span>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Credit Card Information</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <div className=\"form-control p-t-xxxs p-b-xxxs\"\r\n                                                        style={{\r\n                                                            maxWidth: \"100%\",\r\n                                                            width: \"100%\",\r\n                                                            borderColor: \"rgba(0, 0, 0, 0.6)\"\r\n                                                        }}>\r\n                                                        {ShowCard ? \r\n                                                            <CardElement\r\n                                                                options={cardElementOpts}\r\n                                                                onChange={this.onCardInputChange} /> : null}\r\n                                                    </div>\r\n                                                    <span className=\"text-danger\">{this.state.Errors.CheckOut}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value={`Pay $${bill.Amount.toFixed(2)}`} className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PayOnlineDialog;","import React, { Component } from \"react\";\r\nimport { ElementsConsumer } from \"@stripe/react-stripe-js\";\r\nimport BillContainer from \"../../../../containers/bill/BillContainer\";\r\nimport PrintBillDialog from \"./PrintBillDialog\";\r\nimport AddPayProofDialog from \"./AddPayProofDialog\";\r\nimport PaymentDetails from \"./PaymentDetails\";\r\nimport PayOnlineDialog from \"./PayOnlineDialog\";\r\n\r\nclass BillListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const bill = this.props.Bill;\r\n\r\n        return <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n            <BillContainer Index={index} Bill={bill} />\r\n\r\n            <div className=\"text-right back-color-gray p-xxs\">\r\n                <button className=\"btn btn-secondary\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#print-bill-dialog-${index}`}>Print Bill</button>\r\n\r\n                {bill.HasPayProof || bill.HasPayDetails ?\r\n                    null :\r\n                    <button className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#pay-online-dialog-${index}`}\r\n                        onMouseDown={() => { this.ToggleCard(true); }}>Pay Online</button>}\r\n\r\n                {bill.HasPayProof || bill.HasPayDetails ?\r\n                    null : \r\n                    <button className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#add-pay-proof-dialog-${index}`}>Upload Pay Proof</button>}\r\n            </div>\r\n\r\n            <div className=\"back-color-gray\" data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#bill-${index}`}\r\n                onMouseDown={async () => { await this.RefreshPaymentDetails(); }}>\r\n                <div className=\"type-h4 color-default text-right p-xxxs\">Payment Details\r\n                    <i className=\"fas fa-ellipsis-v\"></i>\r\n                    <i class=\"glyph glyph-add\"></i>\r\n                    <i class=\"glyph glyph-remove\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`bill-${index}`}>\r\n                <PaymentDetails Refresh={refresh => { this.RefreshPaymentDetails = refresh; }}\r\n                    DriverBillID={bill.DriverBillID}\r\n                    OnPayProofDeleted={async () => {\r\n                        this.props.OnPayProofUpdated(bill, false);\r\n                        await this.RefreshPaymentDetails();\r\n                    }} />\r\n            </div>\r\n\r\n            <PrintBillDialog Index={index}\r\n                Bill={bill} />\r\n\r\n            {bill.HasPayProof || bill.HasPayDetails ?\r\n                null : \r\n                <AddPayProofDialog Index={index}\r\n                    DriverBillID={bill.DriverBillID}\r\n                    OnOK={async () => {\r\n                        this.props.OnPayProofUpdated(bill, true);\r\n                        await this.RefreshPaymentDetails();\r\n                    }} />}\r\n\r\n            {bill.HasPayDetails ?\r\n                null :\r\n                <ElementsConsumer>\r\n                    {({ elements, stripe }) => (\r\n                        <PayOnlineDialog Index={index}\r\n                            Bill={bill}\r\n                            Elements={elements}\r\n                            Stripe={stripe}\r\n                            ToggleCard={toggleCard => { this.ToggleCard = toggleCard; }}\r\n                            OnOK={async () => {\r\n                                this.props.OnPayDetailsAdded(bill);\r\n                                await this.RefreshPaymentDetails();\r\n                            }} />)}\r\n                </ElementsConsumer>}\r\n        </li>;\r\n    }\r\n};\r\n\r\nexport default BillListItem;","import React, { Component } from \"react\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport SearchingContainer from \"../../../../containers/searching/SearchingContainer\";\r\nimport BillListItem from \"./BillListItem\";\r\nimport { getData } from \"../../DriverFunctions\";\r\n\r\nclass BillsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Bills: [],\r\n            NumberOfPaidBills: 0,\r\n            NumberOfUnpaidBills: 0, \r\n            Searching: false\r\n        }\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Bills\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Bills found.\") {\r\n                    this.setState({\r\n                        Bills: response.Bills,\r\n                        NumberOfPaidBills: response.NumberOfPaidBills,\r\n                        NumberOfUnpaidBills: response.NumberOfUnpaidBills,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Bills: [],\r\n                        NumberOfPaidBills: 0,\r\n                        NumberOfUnpaidBills: 0,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const bills = this.state.Bills;\r\n        const numberOfPaidBills = this.state.NumberOfPaidBills;\r\n        const numberOfUnpaidBills = this.state.NumberOfUnpaidBills;\r\n\r\n        return <section>\r\n            <PageHeading Heading=\"PAYMENTS\" />\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/teal.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-money-bill-wave m-r-xs\"></span>Payments</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"alert alert-info m-n\" style={{ backgroundColor: \"#333333\" }}>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <div className=\"entity-list theme-alt\">\r\n                            <div className=\"entity-list-item\">\r\n                                <div className=\"item-icon\" style={{ backgroundColor: \"#333333\", color: \"#008575\" }}>\r\n                                    <span className=\"fas fa-thumbs-up\"></span>\r\n                                </div>\r\n                                <div className=\"item-content-primary\">\r\n                                    <div className=\"content-text-primary\">Paid Bills</div>\r\n                                    <div className=\"content-text-secondary\">{numberOfPaidBills}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <div className=\"entity-list theme-alt\">\r\n                            <div className=\"entity-list-item\">\r\n                                <div className=\"item-icon\" style={{ backgroundColor: \"#333333\", color: \"#008575\" }}>\r\n                                    <span className=\"fas fa-thumbs-down\"></span>\r\n                                </div>\r\n                                <div className=\"item-content-primary\">\r\n                                    <div className=\"content-text-primary\">Unpaid Bills</div>\r\n                                    <div className=\"content-text-secondary\">{numberOfUnpaidBills}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Your Bills</div>\r\n\r\n            {(bills.length === 0) ?\r\n                <SearchingContainer Searching={this.state.Searching}\r\n                    SearchingFor=\"bills\" /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {bills.map((bill, index) => {\r\n                        return <BillListItem key={index}\r\n                            Index={index} Bill={bill}\r\n                            OnPayProofUpdated={(bill, hasPayProof) => {\r\n                                let bills = this.state.Bills;\r\n\r\n                                for (let billItem of bills) {\r\n                                    if (billItem === bill) {\r\n                                        billItem.HasPayProof = hasPayProof;\r\n                                        break;\r\n                                    }\r\n                                }\r\n\r\n                                this.setState({\r\n                                    Bills: bills\r\n                                });\r\n                            }}\r\n                            OnPayDetailsAdded={bill => {\r\n                                let bills = this.state.Bills;\r\n                                let numberOfPaidBills = this.state.NumberOfPaidBills;\r\n                                let numberOfUnpaidBills = this.state.NumberOfUnpaidBills;\r\n\r\n                                for (let billItem of bills) {\r\n                                    if (billItem === bill) {\r\n                                        billItem.Paid = true;\r\n                                        billItem.HasPayDetails = true;\r\n                                        numberOfPaidBills++;\r\n                                        numberOfUnpaidBills--;\r\n                                        break;\r\n                                    }\r\n                                }\r\n\r\n                                this.setState({\r\n                                    Bills: bills,\r\n                                    NumberOfPaidBills: numberOfPaidBills,\r\n                                    NumberOfUnpaidBills: numberOfUnpaidBills\r\n                                });\r\n                            }}/>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default BillsList;","import React, { Component } from \"react\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport Strings from \"../../../../res/strings\";\r\nimport BillsList from \"./BillsList\";\r\n\r\nconst stripePromise = loadStripe(Strings.STRIPE_PUBLISHABLE_KEY);\r\n\r\nclass Payments extends Component {\r\n    render() {\r\n        return <section>\r\n            <Elements stripe={stripePromise}>\r\n                <BillsList />\r\n            </Elements>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Payments;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { addQuestion } from \"../../DriverFunctions\";\r\n\r\nclass AskQuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Question: \"\",\r\n\r\n            ValidQuestion: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Question: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidQuestion = this.state.ValidQuestion;\r\n\r\n        switch (field) {\r\n            case \"Question\":\r\n                ValidQuestion = (value !== \"\");\r\n                Errors.Question = ValidQuestion ? \"\" : \"Question is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidQuestion: ValidQuestion,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidQuestion\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newQuestion = {\r\n            Token: localStorage.Token,\r\n            Question: this.state.Question\r\n        };\r\n\r\n        await addQuestion(newQuestion).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Question is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Question,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`ask-question-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Ask a New Question</div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">Question</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <textarea rows=\"6\" class=\"form-control\" name=\"Question\" style={{ maxWidth: \"100%\" }}\r\n                                                        value={Question} onChange={this.onChange}></textarea>\r\n                                                    <span className=\"text-danger\">{Errors.Question}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Post\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AskQuestionDialog;","import React, { Component } from \"react\";\r\n\r\nclass DriverQuestionContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Question\r\n        } = this.props;\r\n\r\n        const askedOn = new Date(Question.Created);\r\n        const askedBy = Question.AskedBy;\r\n        const driverAnswer = Question.DriverAnswer;\r\n        const answeredOn = driverAnswer ? new Date(driverAnswer.Created) : null;\r\n        const answeredBy = driverAnswer ? driverAnswer.AnsweredBy : null;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"type-h5 color-default p-t-n\">{`${Index + 1}. Question ID: ${Question.QuestionNumber}`}</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-user\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">\r\n                                            <span className=\"fas fa-car m-r-xxxs\"></span>\r\n                                            {`${askedBy.FirstName} ${askedBy.LastName}`}\r\n                                        </div>\r\n                                        <div className=\"content-text-secondary\">{askedBy.Username}</div>\r\n                                        <div className=\"content-text-secondary\">{`${askedOn.toDateString()} at ${askedOn.toLocaleTimeString()}`}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-question\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">\r\n                                            <span className=\"m-r-xxxs\">Question</span>\r\n                                            {Question.Class ?\r\n                                                <span class=\"badge back-color-golden\">{Question.Class.toUpperCase()}</span> :\r\n                                                <span class=\"badge back-color-golden\">UNCLASSIFIED</span>}\r\n                                        </div>\r\n                                        <div className=\"content-text-secondary\">{Question.Question}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {driverAnswer ? \r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-user\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">\r\n                                                <span className=\"fas fa-user-shield m-r-xxxs\"></span>\r\n                                                {`${answeredBy.FirstName} ${answeredBy.LastName}`}\r\n                                            </div>\r\n                                            <div className=\"content-text-secondary\">{answeredBy.Username}</div>\r\n                                            <div className=\"content-text-secondary\">{`${answeredOn.toDateString()} at ${answeredOn.toLocaleTimeString()}.`}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-comment\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">\r\n                                                <span className=\"m-r-xxxs\">Answer</span>\r\n                                                {driverAnswer.Edited ? <span className=\"color-default\">EDITED</span> : null}\r\n                                            </div>\r\n                                            <div className=\"content-text-secondary\">{driverAnswer.Answer}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div> : \r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-comment\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">\r\n                                                <span className=\"m-r-xxxs\">Answer</span>\r\n                                            </div>\r\n                                            <div className=\"content-text-secondary\">This question has not been answered yet.</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default DriverQuestionContainer;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { deleteQuestion } from \"../../DriverFunctions\";\r\n\r\nclass DeleteQuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false,\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const discardedQuestion = {\r\n            Token: localStorage.Token,\r\n            DriverQuestionID: this.props.DriverQuestionID\r\n        };\r\n\r\n        await deleteQuestion(discardedQuestion).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Question is deleted.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            QuestionNumber\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`delete-driver-question-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-h3 color-default p-t-n\">Delete Question</div>\r\n                                            <div className=\"type-sh3 m-b-xxs\">Are you sure you want to delete question with ID\r\n                                                <span className=\"color-default\">{` ${QuestionNumber}.`}</span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-right\">\r\n                                        <button className=\"btn btn-primary\" onClick={this.onDelete}>Delete</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DeleteQuestionDialog;","import React, { Component } from \"react\";\r\nimport DriverQuestionContainer from \"../../../../containers/driverQuestion/DriverQuestionContainer\";\r\nimport DeleteQuestionDialog from \"./DeleteQuestionDialog\";\r\n\r\nclass QuestionListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Question\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <DriverQuestionContainer Index={Index}\r\n                Question={Question} />\r\n\r\n            <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                <button className=\"btn btn-danger m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#delete-driver-question-dialog-${Index}`}>Delete</button>\r\n            </div>\r\n\r\n            <DeleteQuestionDialog Index={Index}\r\n                DriverQuestionID={Question.DriverQuestionID}\r\n                QuestionNumber={Question.QuestionNumber}\r\n                OnOK={this.props.OnQuestionDeleted}/>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default QuestionListItem;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../containers/searching/SearchingContainer\";\r\nimport ProgressRing from \"../../../../controls/ProgressRing\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport AskQuestionDialog from \"./AskQuestionDialog\";\r\nimport QuestionListItem from \"./QuestionListItem\";\r\nimport { getData } from \"../../DriverFunctions\";\r\n\r\nclass QuestionsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllQuestions: [],\r\n            Questions: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Questions\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Questions found.\") {\r\n                    this.setState({\r\n                        AllQuestions: response.Questions,\r\n                        Questions: response.Questions,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllQuestions: [],\r\n                        Questions: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                Questions: this.state.AllQuestions\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allQuestions = this.state.AllQuestions;\r\n        let filteredQuestions = [];\r\n        let count = 0;\r\n\r\n        for (let question of allQuestions) {\r\n            if (question.Question.includes(searchString) ||\r\n                question.QuestionNumber.includes(searchString) ||\r\n                question.Class.includes(searchString)) {\r\n                filteredQuestions[count++] = question;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Questions: filteredQuestions\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Questions,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <PageHeading Heading=\"QUESTIONS\" />\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-question-circle m-r-xxs\"></span>Questions</div>\r\n                            <p className=\"color-light\">If you are facing any issues, then post a question. Naqel team will answer them as soon as possible.</p>\r\n                            <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target={`#ask-question-dialog`}>Ask a Question</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <AskQuestionDialog OnOK={async () => { await this.onComponentUpdated(); }} />\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Your Questions\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search Questions\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(Questions.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"questions\" /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {Questions.map((question, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <QuestionListItem Index={index}\r\n                                Question={question}\r\n                                OnQuestionDeleted={this.onComponentUpdated} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default QuestionsList;","import React, { Component } from \"react\";\r\nimport QuestionsList from \"./QuestionsList\";\r\n\r\nclass Questions extends Component {\r\n    render() {\r\n        return <section>\r\n            <QuestionsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Questions;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { getData, generalSettings } from \"../../DriverFunctions\";\r\n\r\nclass GeneralSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\",\r\n\r\n            ValidFirstName: true,\r\n            ValidLastName: true,\r\n            ValidPhoneNumber: true,\r\n\r\n            ValidForm: false,\r\n            SettingsSaved: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                PhoneNumber: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Driver\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver found.\") {\r\n                    let driver = response.Driver;\r\n\r\n                    this.setState({\r\n                        FirstName: driver.FirstName,\r\n                        LastName: driver.LastName,\r\n                        Address: driver.Address,\r\n                        PhoneNumber: driver.PhoneNumber,\r\n                        Gender: driver.Gender,\r\n                        Nationality: driver.Nationality,\r\n                        DateOfBirth: driver.DateOfBirth\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        FirstName: \"\",\r\n                        LastName: \"\",\r\n                        Address: \"\",\r\n                        PhoneNumber: \"\",\r\n                        Gender: \"\",\r\n                        Nationality: \"\",\r\n                        DateOfBirth: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFirstName = this.state.ValidFirstName;\r\n        let ValidLastName = this.state.ValidLastName;\r\n        let ValidPhoneNumber = this.state.ValidPhoneNumber;\r\n\r\n        switch (field) {\r\n            case \"FirstName\":\r\n                ValidFirstName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.FirstName = ValidFirstName ? \"\" : \"First name is invalid.\";\r\n                break;\r\n            case \"LastName\":\r\n                ValidLastName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.LastName = ValidLastName ? \"\" : \"Last name is invalid.\";\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = value.match(/^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/);\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFirstName: ValidFirstName,\r\n            ValidLastName: ValidLastName,\r\n            ValidPhoneNumber: ValidPhoneNumber,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidFirstName &&\r\n                    this.state.ValidLastName &&\r\n                    this.state.ValidPhoneNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedDriver = {\r\n            Token: localStorage.Token,\r\n            FirstName: this.state.FirstName,\r\n            LastName: this.state.LastName,\r\n            Address: this.state.Address,\r\n            PhoneNumber: this.state.PhoneNumber,\r\n            Gender: this.state.Gender,\r\n            Nationality: this.state.Nationality,\r\n            DateOfBirth: this.state.DateOfBirth\r\n        };\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await generalSettings(updatedDriver).then(response => {\r\n            if (response.Message === \"Driver is updated.\") {\r\n                this.props.OnSettingsSaved();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>General Settings</div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n                <div className=\"entity-list entity-list-expandable\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-comment\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"FirstName\" autoComplete=\"off\"\r\n                                    value={this.state.FirstName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">First Name</div>\r\n                            <div className=\"text-danger\">{this.state.Errors.FirstName}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-comment\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"LastName\" autoComplete=\"off\"\r\n                                    value={this.state.LastName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Last Name</div>\r\n                            <div className=\"text-danger\">{this.state.Errors.LastName}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-birthday-cake\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"date\" className=\"form-control\" name=\"DateOfBirth\" autoComplete=\"off\"\r\n                                    value={this.state.DateOfBirth} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Date of Birth</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className={this.state.Gender === \"Male\" ? \"fas fa-male\" : \"fas fa-female\"}></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"dropdown\" style={{ width: \"193px\", maxWidth: \"296px\", }}>\r\n                                <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                    aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                    <span>{this.state.Gender}</span>\r\n                                    <span className=\"caret\"></span>\r\n                                </button>\r\n                                <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                    <li><a onClick={() => { this.setState({ Gender: \"Male\" }); }}>Male</a></li>\r\n                                    <li><a onClick={() => { this.setState({ Gender: \"Female\" }); }}>Female</a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Gender</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-flag\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"Nationality\" autoComplete=\"off\"\r\n                                    value={this.state.Nationality} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Nationality</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-phone\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autoComplete=\"off\"\r\n                                    placeholder=\"+XXXXXXXXXXXX\" value={this.state.PhoneNumber} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Phone Number</div>\r\n                            <div className=\"text-danger\">{this.state.Errors.PhoneNumber}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-location-arrow\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"Address\" autoComplete=\"off\"\r\n                                    value={this.state.Address} onChange={this.onChange} style={{ width: \"393px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Address</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item active\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-save\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Save Changes?</div>\r\n                            <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                        </div>\r\n                        <div className=\"item-content-expanded\">\r\n                            <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            {this.state.Preloader}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default GeneralSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { usernameAndEmailSettings } from \"../../DriverFunctions.js\";\r\n\r\nclass CodeConfirmationDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ConfirmCode: \"\",\r\n\r\n            ValidConfirmCode: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                ConfirmCode: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidConfirmCode = this.state.ValidConfirmCode;\r\n\r\n        ValidConfirmCode = value === this.props.Code;\r\n        Errors.ConfirmCode = ValidConfirmCode ? \"\" : \"Invalid code.\";\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidConfirmCode: ValidConfirmCode,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidConfirmCode\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedDriver = {\r\n            Token: localStorage.Token,\r\n            Username: this.props.Username,\r\n            Email: this.props.Email,\r\n        };\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await usernameAndEmailSettings(updatedDriver).then(response => {\r\n            if (response.Message === \"Driver is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div\r\n                className=\"modal in\" id=\"code-confirmation-dialog\" tabIndex=\"-1\"\r\n                role=\"dialog\" aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\"\r\n                style={{ display: \"block\" }}>\r\n                <div className=\"modal-dialog\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"passcode.png\" src=\"./images/passcode.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Email Confirmation</div>\r\n                                        <div className=\"type-sh3\">We delivered a confirmation code to your email.</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Confirmation Code</label>\r\n                                                    <input type=\"text\" name=\"ConfirmCode\" className=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.ConfirmCode} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ConfirmCode}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Confirm\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default CodeConfirmationDialog;","import React, { Component } from \"react\";\r\nimport CodeConfirmationDialog from \"./CodeConfirmationDialog.js\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport {\r\n    getData,\r\n    validateUsername,\r\n    validateEmail,\r\n    sendCode,\r\n    usernameAndEmailSettings\r\n} from \"../../DriverFunctions.js\";\r\n\r\nclass UsernameAndEmailSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            NewUsername: \"\",\r\n\r\n            Email: \"\",\r\n            NewEmail: \"\",\r\n\r\n            Code: \"\",\r\n\r\n            ValidNewUsername: true,\r\n            ValidNewEmail: true,\r\n\r\n            ValidForm: false,\r\n            CodeConfirmationDialog: null,\r\n\r\n            Errors: {\r\n                NewUsername: \"\",\r\n                NewEmail: \"\",\r\n            },\r\n\r\n            CodeConfirmation: \"\",\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Driver\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver found.\") {\r\n                    let driver = response.Driver;\r\n\r\n                    this.setState({\r\n                        Username: driver.Username,\r\n                        NewUsername: driver.Username,\r\n                        Email: driver.Email,\r\n                        NewEmail: driver.Email\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Username: \"\",\r\n                        NewUsername: \"\",\r\n                        Email: \"\",\r\n                        NewEmail: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewUsername = this.state.ValidNewUsername;\r\n        let ValidNewEmail = this.state.ValidNewEmail;\r\n\r\n        switch (field) {\r\n            case \"NewUsername\":\r\n                ValidNewUsername = (value !== \"\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is required.\";\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value.match(/^[a-z0-9]+$/i));\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is invalid.\";\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value !== \"Username is unavailable.\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is unavailable.\";\r\n                break;\r\n            case \"NewEmail\":\r\n                ValidNewEmail = (value !== \"\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is required.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i));\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is invalid.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value !== \"Email is already taken.\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is already taken.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewUsername: ValidNewUsername,\r\n            ValidNewEmail: ValidNewEmail,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidNewUsername &&\r\n                    this.state.ValidNewEmail\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername === this.state.Username &&\r\n            this.state.NewEmail === this.state.Email) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername !== this.state.Username) {\r\n            const response = await validateUsername(this.state.NewUsername);\r\n\r\n            if (response.Message === \"Username is unavailable.\") {\r\n                this.validateField(\"NewUsername\", response.Message);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail !== this.state.Email) {\r\n            const response = await validateEmail(this.state.NewEmail);\r\n            if (response.Message === \"Email is already taken.\") {\r\n                this.validateField(\"NewEmail\", response.Message);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail === this.state.Email) {\r\n            const updatedDriver = {\r\n                Token: localStorage.Token,\r\n                Username: this.state.NewUsername,\r\n                Email: this.state.NewEmail,\r\n            };\r\n\r\n            this.setState({\r\n                Preloader: <Preloader />\r\n            });\r\n\r\n            console.log(\"Going to update username...\");\r\n            await usernameAndEmailSettings(updatedDriver).then(response => {\r\n                if (response.Message === \"Driver is updated.\") {\r\n                    this.props.OnSettingsSaved();\r\n                }\r\n\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            console.log(\"Going to send code...\");\r\n            await sendCode(this.state.NewEmail).then(response => {\r\n                if (response.Message === \"Code sent.\") {\r\n                    this.setState({\r\n                        CodeConfirmationDialog: <CodeConfirmationDialog\r\n                            Code={response.Code}\r\n                            Username={this.state.NewUsername}\r\n                            Email={this.state.NewEmail}\r\n                            OnCancel={() => {\r\n                                this.setState({\r\n                                    CodeConfirmationDialog: null,\r\n                                });\r\n                            }}\r\n                            OnOK={cancelButton => {\r\n                                cancelButton.click();\r\n                                this.props.OnSettingsSaved();\r\n                            }} />\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Username and Emails</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div class=\"entity-list entity-list-expandable\">\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-at\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" name=\"NewUsername\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.NewUsername} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Username</div>\r\n                                <div class=\"content-text-secondary text-danger\">{this.state.Errors.NewUsername}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-envelope\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"email\" name=\"NewEmail\" class=\"form-control\" placeholder=\"someone@example.com\" autocomplete=\"off\"\r\n                                        value={this.state.NewEmail} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Email</div>\r\n                                <div class=\"content-text-secondary text-danger\">{this.state.Errors.NewEmail}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item active\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Save Changes?</div>\r\n                                <div class=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div class=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n                {this.state.CodeConfirmationDialog}\r\n            </div> \r\n        );\r\n    }\r\n};\r\n\r\nexport default UsernameAndEmailSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { validatePassword, passwordSettings } from \"../../DriverFunctions.js\";\r\n\r\nclass PasswordSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            CurrentPassword: \"\",\r\n            NewPassword: \"\",\r\n            ConfirmPassword: \"\",\r\n\r\n            ValidCurrentPassword: false,\r\n            ValidNewPassword: false,\r\n            ValidConfirmPassword: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                CurrentPassword: \"\",\r\n                NewPassword: \"\",\r\n                ConfirmPassword: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    async validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCurrentPassword = this.state.ValidCurrentPassword;\r\n        let ValidNewPassword = this.state.ValidNewPassword;\r\n        let ValidConfirmPassword = this.state.ValidConfirmPassword;\r\n\r\n        switch (field) {\r\n            case \"CurrentPassword\":\r\n                ValidCurrentPassword = (value !== \"\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is required.\";\r\n\r\n                if (Errors.CurrentPassword !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCurrentPassword = (value !== \"Invalid password.\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is invalid.\";\r\n                break;\r\n            case \"NewPassword\":\r\n                ValidNewPassword = value.length >= 6;\r\n                Errors.NewPassword = ValidNewPassword ? \"\" : \"Password is too short.\";\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                ValidConfirmPassword = value === this.state.NewPassword;\r\n                Errors.ConfirmPassword = ValidConfirmPassword ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCurrentPassword: ValidCurrentPassword,\r\n            ValidNewPassword: ValidNewPassword,\r\n            ValidConfirmPassword: ValidConfirmPassword,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidCurrentPassword &&\r\n                    this.state.ValidNewPassword &&\r\n                    this.state.ValidConfirmPassword\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        let passwordPackage = {\r\n            Token: localStorage.Token,\r\n            Password: this.state.CurrentPassword\r\n        };\r\n\r\n        await validatePassword(passwordPackage).then(async response => {\r\n            if (response.Message === \"Invalid password.\") {\r\n                this.validateField(\"CurrentPassword\", response.Message);\r\n            }\r\n            else {\r\n                const updatedDriver = {\r\n                    Token: localStorage.Token,\r\n                    Password: this.state.NewPassword\r\n                };\r\n\r\n                this.setState({\r\n                    Preloader: <Preloader />\r\n                });\r\n\r\n                await passwordSettings(updatedDriver).then(response => {\r\n                    if (response.Message === \"Driver is updated.\") {\r\n                        this.props.OnSettingsSaved();\r\n                    }\r\n\r\n                    this.setState({\r\n                        Preloader: null\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div class=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\" }}>Change Password</div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n                <div class=\"entity-list entity-list-expandable\">\r\n                    <div class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <div class=\"form-group\">\r\n                                <input type=\"password\" name=\"CurrentPassword\" class=\"form-control\" autoComplete=\"off\"\r\n                                    value={this.state.CurrentPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Current Password</div>\r\n                            <div class=\"text-danger\">{this.state.Errors[\"CurrentPassword\"]}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <div class=\"form-group\">\r\n                                <input type=\"password\" name=\"NewPassword\" class=\"form-control\" autoComplete=\"off\"\r\n                                    value={this.state.NewPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">New Password</div>\r\n                            <div class=\"text-danger\">{this.state.Errors[\"NewPassword\"]}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <div class=\"form-group\">\r\n                                <input type=\"password\" name=\"ConfirmPassword\" class=\"form-control\" autoComplete=\"off\"\r\n                                    value={this.state.ConfirmPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Confirm Password</div>\r\n                            <div class=\"text-danger\">{this.state.Errors[\"ConfirmPassword\"]}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"entity-list-item active\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-save\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Save Changes?</div>\r\n                            <div class=\"content-text-secondary\">This cannot be undone.</div>\r\n                        </div>\r\n                        <div class=\"item-content-expanded\">\r\n                            <input type=\"submit\" value=\"Save\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            {this.state.Preloader}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PasswordSettings;","import React, { Component } from \"react\";\r\nimport GeneralSettings from \"./GeneralSettings\";\r\nimport UsernameAndEmailSettings from \"./UsernameAndEmailSettings\";\r\nimport PasswordSettings from \"./PasswordSettings\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Settings extends Component {\r\n    render() {\r\n        return <section>\r\n            <PageHeading Heading=\"SETTINGS\" />\r\n            <GeneralSettings ref=\"GeneralSettings\" OnSettingsSaved={() => { this.refs.GeneralSettings.componentDidMount(); }} />\r\n            <UsernameAndEmailSettings ref=\"UsernameAndEmailSettings\" OnSettingsSaved={() => { this.refs.UsernameAndEmailSettings.componentDidMount(); }} />\r\n            <PasswordSettings ref=\"PasswordSettings\" OnSettingsSaved={() => { this.refs.PasswordSettings.forceUpdate(); }} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Settings;","import React, { Component } from \"react\";\r\n\r\nclass BlockedUserContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            BlockedUser\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron\" style={{ height: \"100vh\" }}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 text-center\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                alt=\"sad.svg\" src=\"./images/sad.svg\" data-source-index=\"2\" />\r\n                        </div>\r\n                        <div className=\"col-md-20\">\r\n                            <div className=\"type-h3 color-default\">{`${BlockedUser.FirstName} ${BlockedUser.LastName}, Your Account Has Been Blocked!`}</div>\r\n                            <div className=\"type-sh3\">Up to: <span className=\"color-default\">{new Date(BlockedUser.BlockDate).toDateString()}</span></div>\r\n                            <div className=\"type-sh4\">You cannot use Naqel's services until it is unblocked. See the reason, why our team has blocked your account.</div>\r\n                            <p><span className=\"color-default\">REASON: </span>{BlockedUser.Reason}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default BlockedUserContainer;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Profile from \"./profile/Profile\";\r\nimport Truck from \"./trucks/Truck\";\r\nimport Permits from \"./permits/Permits\";\r\nimport Earnings from \"./earnings/Earnings\";\r\nimport Jobs from \"./jobs/Jobs\";\r\nimport Payments from \"./payments/Payments\";\r\nimport Questions from \"./questions/Questions\";\r\nimport Settings from \"./settings/Settings\";\r\nimport SearchingContainer from \"../../../containers/searching/SearchingContainer\";\r\nimport BlockedUserContainer from \"../../../containers/blockedUser/BlockedUserContainer\";\r\nimport { getData } from \"../DriverFunctions\";\r\n\r\nclass DriversDashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Left: -400,\r\n            DashboardData: null,\r\n            Searching: false\r\n        };\r\n\r\n        this.onCloseNavigation = this.onCloseNavigation.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DashboardData\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Dashboard data found.\") {\r\n                    this.setState({\r\n                        DashboardData: response.DashboardData,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DashboardData: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onCloseNavigation = () => {\r\n        this.setState({\r\n            Left: -400\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.Token) {\r\n            return <Redirect to={\"/login\"} />;\r\n        }\r\n        else {\r\n            const {\r\n                DashboardData,\r\n                Searching\r\n            } = this.state;\r\n\r\n            return (Searching || !DashboardData) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"driver\" /> : \r\n                <section>\r\n                    {DashboardData.BlockedUser ?\r\n                        <BlockedUserContainer BlockedUser={DashboardData.BlockedUser} /> :\r\n                        <section>\r\n                            <div className=\"sidenav\" style={{ left: `${this.state.Left}px` }}>\r\n                                <a className=\"closebtn\" onClick={this.onCloseNavigation}>&times;</a>\r\n\r\n                                <div class=\"entity-list\" role=\"tablist\">\r\n                                    <div class=\"entity-list-item\" role=\"presentation\">\r\n                                        <a href=\"#profile\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Profile</a>\r\n                                    </div>\r\n                                    <div class=\"entity-list-item\" role=\"presentation\">\r\n                                        <a href=\"#trucks\" aria-controls=\"trucks\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Trucks</a>\r\n                                    </div>\r\n                                    <div class=\"entity-list-item\" role=\"presentation\">\r\n                                        <a href=\"#permits\" aria-controls=\"permits\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Permits</a>\r\n                                    </div>\r\n                                    {DashboardData.IsActiveAccount ?\r\n                                        <section>\r\n                                            <div class=\"entity-list-item\" role=\"presentation\">\r\n                                                <a href=\"#jobs\" aria-controls=\"jobs\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Jobs</a>\r\n                                            </div>\r\n                                            <div class=\"entity-list-item\" role=\"presentation\">\r\n                                                <a href=\"#earnings\" aria-controls=\"earnings\" role=\"tab\" data-toggle=\"tab\" onClick={async () => {\r\n                                                    this.onCloseNavigation();\r\n                                                    await this.RefreshEarnings();\r\n                                                }}>Earnings</a>\r\n                                            </div>\r\n                                            <div class=\"entity-list-item\" role=\"presentation\">\r\n                                                <a href=\"#payments\" aria-controls=\"payments\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Payments</a>\r\n                                            </div>\r\n                                            <div class=\"entity-list-item\" role=\"presentation\">\r\n                                                <a href=\"#questions\" aria-controls=\"questions\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Questions</a>\r\n                                            </div>\r\n                                        </section> : null}\r\n                                    <div class=\"entity-list-item\" role=\"presentation\">\r\n                                        <a href=\"#settings\" aria-controls=\"settings\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Settings</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"tab-content\">\r\n                                {DashboardData.IsActiveAccount ?\r\n                                    null : <div class=\"alert alert-warning m-n\">\r\n                                        <div class=\"container\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-xs-24\">\r\n                                                    <p><span className=\"fas fa-exclamation-circle m-r-xxxs\"></span>Your account isn't yet activated by our team. Make sure to keep your profile up-to-date with your valid information. Our team will soon review your information. At the moment, you cannot use all Naqel services.</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>}\r\n\r\n                                <div role=\"tabpanel\" className=\"tab-pane active\" id=\"profile\">\r\n                                    <Profile />\r\n                                </div>\r\n                                <div role=\"tabpanel\" className=\"tab-pane\" id=\"trucks\">\r\n                                    <Truck />\r\n                                </div>\r\n                                <div role=\"tabpanel\" className=\"tab-pane\" id=\"permits\">\r\n                                    <Permits />\r\n                                </div>\r\n                                {DashboardData.IsActiveAccount ?\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"earnings\">\r\n                                        <Earnings Refresh={refresh => { this.RefreshEarnings = refresh; }} />\r\n                                    </div> : null}\r\n                                {DashboardData.IsActiveAccount ?\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"jobs\">\r\n                                        <Jobs />\r\n                                    </div> : null}\r\n                                {DashboardData.IsActiveAccount ?\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"payments\">\r\n                                        <Payments />\r\n                                    </div> : null}\r\n                                {DashboardData.IsActiveAccount ?\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"questions\">\r\n                                        <Questions />\r\n                                    </div> : null}\r\n                                <div role=\"tabpanel\" className=\"tab-pane\" id=\"settings\">\r\n                                    <Settings />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"side-nav-btn\" onClick={() => {\r\n                                this.setState({\r\n                                    Left: 0\r\n                                });\r\n                            }}><div className=\"fas fa-bars\" style={{ fontSize: \"x-large\" }}></div>\r\n                            </div>\r\n                        </section>}\r\n                </section>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default DriversDashboard;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { getData, uploadTraderProfilePhoto } from \"../../TraderFunctions\";\r\nimport Strings from \"../../../../res/strings\";\r\n\r\nclass ProfilePhoto extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Image: null,\r\n            PhotoURL: \"./images/defaultProfilePhoto.png\",\r\n            UploadProgress: null,\r\n        };\r\n\r\n        this.onImageUpload = this.onImageUpload.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"ProfilePhoto\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Profile photo found.\") {\r\n                    let profilePhoto = response.ProfilePhoto;\r\n\r\n                    this.setState({\r\n                        PhotoURL: profilePhoto.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        PhotoURL: \"./images/defaultProfilePhoto.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onImageUpload = async event => {\r\n        this.state.Image = event.target.files[0];\r\n        const formData = new FormData();\r\n\r\n        try {\r\n            formData.append(\"Image\", this.state.Image, this.state.Image.name);\r\n\r\n            await axios.post(Strings.IMAGE_UPLOADER, formData, {\r\n                onUploadProgress: event => {\r\n                    this.setState({\r\n                        UploadProgress: <div className=\"progress-bar\">\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                        </div>\r\n                    });\r\n                }\r\n            }).then(async response => {\r\n                response = response.data;\r\n\r\n                if (response.message === \"Image uploaded successfully.\") {\r\n                    const traderProfilePhoto = {\r\n                        Token: localStorage.Token,\r\n                        PhotoURL: response.imageUrl,\r\n                        FileName: response.filename\r\n                    }\r\n\r\n                    let photoURL = response.imageUrl;\r\n\r\n                    await uploadTraderProfilePhoto(traderProfilePhoto).then(response => {\r\n                        if (response.Message === \"Profile photo is updated.\" ||\r\n                            response.Message === \"Profile photo is added.\") {\r\n\r\n                            this.setState({\r\n                                PhotoURL: photoURL,\r\n                                UploadProgress: null,\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }).catch(() => {\r\n                this.props.OnImageUploaded(\"Invalid Image.\");\r\n                this.setState({\r\n                    ImageURL: \"./images/defaultProfilePhoto.png\",\r\n                    UploadProgress: null,\r\n                });\r\n            });\r\n        }\r\n        catch (exception) {\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n\r\n            return;\r\n        }\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <input type=\"file\" onChange={this.onImageUpload} style={{ display: \"none\", }} ref={fileInput => this.fileInput = fileInput} />\r\n                <figure className=\"media\">\r\n                    <div className=\"media-img media-img-has-play ratio-1-1\">\r\n                        <a href=\"#\" onClick={() => this.fileInput.click()}>\r\n                            <img style={{border: \"5px solid #3A3A3C\"}}\r\n                                src={this.state.PhotoURL} alt=\"ProfilePhoto.png\" />\r\n                            <i className=\"glyph glyph-edit\"></i>\r\n                        </a>\r\n                    </div>\r\n                </figure>\r\n                {this.state.UploadProgress}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ProfilePhoto;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addIdentityCard } from \"../../../../TraderFunctions.js\";\r\n\r\nclass AddIdentityCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidIDNumber: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                IDNumber: \"\",\r\n                PhotoURL: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidIDNumber = this.state.ValidIDNumber;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"IDNumber\":\r\n                ValidIDNumber = (value !== \"\");\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidIDNumber = (value >= 1000000000 && value <= 9999999999);\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number must be 10-digits long.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidIDNumber: ValidIDNumber,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidIDNumber &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newIdentityCard = {\r\n            Token: localStorage.Token,\r\n            IDNumber: this.state.IDNumber,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to add Identity Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        addIdentityCard(newIdentityCard).then(response => {\r\n            if (response.Message === \"Identity card is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div className=\"modal\" id=\"add-identity-card-dialog\"\r\n                    tabindex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Add Identity Card</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => { \r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"IdentityCard\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">ID Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"IDNumber\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.IDNumber} onChange={this.onChange} min=\"1000000000\" max=\"9999999999\"/>\r\n                                                    <span className=\"text-danger\">{this.state.Errors.IDNumber}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddIdentityCardDialog;","import React, { Component } from \"react\";\r\nimport AddIdentityCardDialog from \"./AddIdentityCardDialog.js\";\r\n\r\nclass AddIdentityCardButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddIdentityCardDialog: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-identity-card-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddIdentityCardDialog: <AddIdentityCardDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddIdentityCardDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />,\r\n                        });\r\n                    }}>\r\n                    <span className=\"fas fa-plus\" aria-hidden=\"true\"></span> Identity Card\r\n                </button>\r\n                {this.state.AddIdentityCardDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddIdentityCardButton;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addCommercialRegisterCertificate } from \"../../../../TraderFunctions.js\";\r\n\r\nclass AddCommercialRegisterCertificateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Number: UUID().substring(0, 7).toUpperCase(),\r\n            Type: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidType: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                Type: \"\",\r\n                PhotoURL: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Certificate type is required.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidType: ValidType,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidType &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newCommercialRegisterCertificate = {\r\n            Token: localStorage.Token,\r\n            Number: this.state.Number,\r\n            Type: this.state.Type,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to add commercial register certificate.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        addCommercialRegisterCertificate(newCommercialRegisterCertificate).then(response => {\r\n            if (response.Message === \"Commercial register certificate is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div className=\"modal\" id=\"add-commercial-register-certificate-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Add Commercial Register Certificate</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => { \r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"CommercialRegisterCertificate\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Certificate Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Number\" className=\"form-control\" autoComplete=\"off\" readOnly\r\n                                                        value={this.state.Number} onChange={this.onChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Certificate Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddCommercialRegisterCertificateDialog;","import React, { Component } from \"react\";\r\nimport AddCommercialRegisterCertificateDialog from \"./AddCommercialRegisterCertificateDialog.js\";\r\n\r\nclass AddCommercialRegisterCertificateButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddCommercialRegisterCertificateDialog: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-commercial-register-certificate-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddCommercialRegisterCertificateDialog: <AddCommercialRegisterCertificateDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddCommercialRegisterCertificateDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />\r\n                        });\r\n                    }}>\r\n                    <span className=\"fas fa-plus\" aria-hidden=\"true\"></span> CR Certificate\r\n                </button>\r\n                {this.state.AddCommercialRegisterCertificateDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddCommercialRegisterCertificateButton;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateIdentityCard } from \"../../../../TraderFunctions.js\";\r\n\r\nclass EditIdentityCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidIDNumber: true,\r\n            ValidPhotoURL: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                IDNumber: \"\",\r\n                PhotoURL: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            this.setState({\r\n                Preloader: <Preloader />\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Identity card found.\") {\r\n                    let identityCard = response.IdentityCard;\r\n\r\n                    this.setState({\r\n                        IDNumber: identityCard.IDNumber,\r\n                        PhotoURL: identityCard.PhotoURL,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        IDNumber: \"\",\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                        Preloader: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidIDNumber = this.state.ValidIDNumber;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"IDNumber\":\r\n                ValidIDNumber = (value !== \"\");\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidIDNumber = (value >= 1000000000 && value <= 9999999999);\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number must be 10-digits long.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidIDNumber: ValidIDNumber,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidIDNumber &&\r\n                    this.state.ValidPhotoURL\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedIdentityCard = {\r\n            Token: localStorage.Token,\r\n            IDNumber: this.state.IDNumber,\r\n            PhotoURL: this.state.PhotoURL,\r\n        }\r\n\r\n        console.log(\"Going to update Identity Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        updateIdentityCard(updatedIdentityCard).then(response => {\r\n            if (response.Message === \"Identity card is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id=\"edit-identity-card-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Identity Card</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"IdentityCard\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">ID Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"IDNumber\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.IDNumber} onChange={this.onChange} min=\"1000000000\" max=\"99999999999\" />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.IDNumber}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default EditIdentityCardDialog;","import React, { Component } from \"react\";\r\nimport EditIdentityCardDialog from \"./EditIdentityCardDialog.js\";\r\nimport { getData, deleteIdentityCard } from \"../../../../TraderFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass IdentityCardListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Key: Math.floor(Math.random() * 100),\r\n            IdentityCardID: \"\",\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            EditIdentityCardDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onRefresh = this.onRefresh.bind(this);\r\n    }\r\n\r\n    onDelete = () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        let discardedIdentityCard = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete Identity Card.`);\r\n\r\n        deleteIdentityCard(discardedIdentityCard).then(response => {\r\n            console.log(response);\r\n            if (response.Message === \"Identity card is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onRefresh();\r\n    }\r\n\r\n    onRefresh = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Identity card found.\") {\r\n                    let identityCard = response.IdentityCard;\r\n\r\n                    this.setState({\r\n                        IdentityCardID: identityCard.IdentityCardID,\r\n                        IDNumber: identityCard.IDNumber,\r\n                        PhotoURL: identityCard.PhotoURL\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        IdentityCardID: \"\",\r\n                        IDNumber: \"\",\r\n                        PhotoURL: \"./images/default_image.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#identity-card-${this.state.IdentityCardID}`}>\r\n                    <div className=\"entity-list\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\" style={{ borderRadius: \"50%\" }}>\r\n                                <span className=\"glyph glyph-add\"></span>\r\n                                <span className=\"glyph glyph-remove\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">\r\n                                    <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>{`${this.props.Index}.`}</span>\r\n                                </div>\r\n                                <div className=\"content-text-secondary\">\r\n                                    <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>IDENTITY CARD</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"collapse\" id={`identity-card-${this.state.IdentityCardID}`}>\r\n                    <div className=\"jumbotron theme-default\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        src={this.state.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                            overflow: \"hidden\",\r\n                                            border: \"5px solid #3A3A3C\",\r\n                                            margin: \"5px\"\r\n                                        }} />\r\n                                </div>\r\n                                <div className=\"col-md-18\">\r\n                                    <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                        Identity Card\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-hashtag\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">ID Number</div>\r\n                                                        <div className=\"content-text-secondary\">{this.state.IDNumber}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary\"\r\n                            data-toggle=\"modal\"\r\n                            data-target=\"#edit-identity-card-dialog\"\r\n                            onMouseDown={() => {\r\n                                this.setState({\r\n                                    EditIdentityCardDialog: <EditIdentityCardDialog\r\n                                        OnCancel={() => {\r\n                                            this.setState({\r\n                                                EditIdentityCardDialog: null\r\n                                            });\r\n                                        }}\r\n                                        OnOK={cancelButton => {\r\n                                            cancelButton.click();\r\n                                            this.onRefresh();\r\n                                        }} />\r\n                                });\r\n                            }}>Edit</button>\r\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                    </div>\r\n                </div>               \r\n                {this.state.Preloader}\r\n                {this.state.EditIdentityCardDialog}\r\n            </li>        \r\n        );\r\n    }\r\n};\r\n\r\nexport default IdentityCardListItem;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateCommercialRegisterCertificate } from \"../../../../TraderFunctions.js\";\r\n\r\nclass EditCommercialRegisterCertificateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Number: \"\",\r\n            Type: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidType: true,\r\n            ValidPhotoURL: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                Type: \"\",\r\n                PhotoURL: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onRefresh = this.onRefresh.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onRefresh();\r\n    }\r\n\r\n    onRefresh = () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"CommercialRegisterCertificate\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Commercial register certificate found.\") {\r\n                    let commercialRegisterCertificate = response.CommercialRegisterCertificate;\r\n\r\n                    this.setState({\r\n                        Number: commercialRegisterCertificate.Number,\r\n                        Type: commercialRegisterCertificate.Type,\r\n                        PhotoURL: commercialRegisterCertificate.PhotoURL,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Number: \"\",\r\n                        Type: \"\",\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                        Preloader: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Certificate type is required.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidType: ValidType,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidType &&\r\n                    this.state.ValidPhotoURL\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedCommercialRegisterCertificate = {\r\n            Token: localStorage.Token,\r\n            Number: this.state.Number,\r\n            Type: this.state.Type,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to update commercial register certificate.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        updateCommercialRegisterCertificate(updatedCommercialRegisterCertificate).then(response => {\r\n            if (response.Message === \"Commercial register certificate is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id=\"edit-commercial-register-certificate-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Commercial Register Certificate</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"IdentityCard\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Certificate Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Number\" className=\"form-control\" autoComplete=\"off\" readOnly\r\n                                                        value={this.state.Number} onChange={this.onChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Certificate Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default EditCommercialRegisterCertificateDialog;","import React, { Component } from \"react\";\r\nimport EditCommercialRegisterCertificateDialog from \"./EditCommercialRegisterCertificateDialog.js\";\r\nimport { getData, deleteCommercialRegisterCertificate } from \"../../../../TraderFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass CommercialRegisterCertificateListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ID: \"\",\r\n            Number: \"\",\r\n            Type: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            EditCommercialRegisterCertificateDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onRefresh = this.onRefresh.bind(this);\r\n    }\r\n\r\n    onDelete = () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        let discardedCommercialRegisterCertificate = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete commercial register certificate.`);\r\n\r\n        deleteCommercialRegisterCertificate(discardedCommercialRegisterCertificate).then(response => {\r\n            if (response.Message === \"Commercial register certificate is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onRefresh();\r\n    }\r\n\r\n    onRefresh = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"CommercialRegisterCertificate\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Commercial register certificate found.\") {\r\n                    let commercialRegisterCertificate = response.CommercialRegisterCertificate;\r\n\r\n                    this.setState({\r\n                        ID: commercialRegisterCertificate.ID,\r\n                        Number: commercialRegisterCertificate.Number,\r\n                        Type: commercialRegisterCertificate.Type,\r\n                        PhotoURL: commercialRegisterCertificate.PhotoURL\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        ID: \"\",\r\n                        Number: \"\",\r\n                        Type: \"\",\r\n                        PhotoURL: \"./images/default_image.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#commercial-register-certificate-${this.state.ID}`}>\r\n                    <div className=\"entity-list\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\" style={{ borderRadius: \"50%\" }}>\r\n                                <span className=\"glyph glyph-add\"></span>\r\n                                <span className=\"glyph glyph-remove\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">\r\n                                    <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>{`${this.props.Index}.`}</span>\r\n                                </div>\r\n                                <div className=\"content-text-secondary\">\r\n                                    <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>COMMERCIAL REGISTER CERTIFICATE</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"collapse\" id={`commercial-register-certificate-${this.state.ID}`}>\r\n                    <div className=\"jumbotron theme-default\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        src={this.state.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                            overflow: \"hidden\",\r\n                                            border: \"5px solid #3A3A3C\",\r\n                                            margin: \"5px\"\r\n                                        }} />\r\n                                </div>\r\n                                <div className=\"col-md-18\">\r\n                                    <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                        Commercial Register Certificate\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-hashtag\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Certificate Number</div>\r\n                                                        <div className=\"content-text-secondary\">{this.state.Number}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-cog\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Certificate Type</div>\r\n                                                        <div className=\"content-text-secondary\">{this.state.Type}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary\"\r\n                            data-toggle=\"modal\"\r\n                            data-target=\"#edit-commercial-register-certificate-dialog\"\r\n                            onMouseDown={() => {\r\n                                this.setState({\r\n                                    EditCommercialRegisterCertificateDialog: <EditCommercialRegisterCertificateDialog\r\n                                        OnCancel={() => {\r\n                                            this.setState({\r\n                                                EditCommercialRegisterCertificateDialog: null\r\n                                            });\r\n                                        }}\r\n                                        OnOK={cancelButton => {\r\n                                            cancelButton.click();\r\n                                            this.onRefresh();\r\n                                        }} />\r\n                                });\r\n                            }}>Edit</button>\r\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                    </div>\r\n                </div>               \r\n                {this.state.Preloader}\r\n                {this.state.EditCommercialRegisterCertificateDialog}\r\n            </li>        \r\n        );\r\n    }\r\n};\r\n\r\nexport default CommercialRegisterCertificateListItem;","import React, { Component } from \"react\";\r\nimport AddIdentityCardButton from \"./identityCard/AddIdentityCardButton.js\";\r\nimport AddCommercialRegisterCertificateButton from \"./commercialRegisterCertificate/AddCommercialRegisterCertificateButton.js\";\r\nimport IdentityCardListItem from \"./identityCard/IdentityCardListItem.js\";\r\nimport CommercialRegisterCertificateListItem from \"./commercialRegisterCertificate/CommercialRegisterCertificateListItem.js\";\r\nimport { getData } from \"../../../TraderFunctions\";\r\n\r\nclass DocumentsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddIdentityCardButton: null, \r\n            AddCommercialRegisterCertificateButton: null,\r\n            IdentityCardListItem: null,\r\n            CommercialRegisterCertificateListItem: null\r\n        };\r\n\r\n        this.onDocumentsUpdated = this.onDocumentsUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"I'm Here.. Going to update documents...\");\r\n        this.onDocumentsUpdated();\r\n    }\r\n\r\n    onDocumentsUpdated = () => {\r\n        let index = 0;\r\n        let identityCard;\r\n        let commercialRegisterCertificate;\r\n\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response =>\r\n            {\r\n                console.log(response);\r\n                if (response.Message === \"Identity card found.\") {\r\n                    identityCard = response.IdentityCard;\r\n                }\r\n                else {\r\n                    identityCard = undefined;\r\n                }\r\n\r\n                request = {\r\n                    Token: localStorage.Token,\r\n                    Get: \"CommercialRegisterCertificate\"\r\n                };\r\n\r\n                getData(request).then(response => {\r\n                    if (response.Message === \"Commercial register certificate found.\") {\r\n                        commercialRegisterCertificate = response.CommercialRegisterCertificate;\r\n                    }\r\n                    else {\r\n                        commercialRegisterCertificate = undefined;\r\n                    }\r\n\r\n                    (identityCard) ? this.setState({\r\n                        AddIdentityCardButton: null,\r\n                        IdentityCardListItem: <IdentityCardListItem\r\n                            Index={++index}\r\n                            OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                    }) : this.setState({\r\n                        AddIdentityCardButton: <AddIdentityCardButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                        IdentityCardListItem: null\r\n                    });\r\n\r\n                    (commercialRegisterCertificate) ? this.setState({\r\n                        AddCommercialRegisterCertificateButton: null,\r\n                        CommercialRegisterCertificateListItem: <CommercialRegisterCertificateListItem\r\n                            Index={++index}\r\n                            OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                    }) : this.setState({\r\n                        AddCommercialRegisterCertificateButton: <AddCommercialRegisterCertificateButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                        CommercialRegisterCertificateListItem: null\r\n                    });\r\n                });\r\n            });         \r\n        }      \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3 back-color-gray m-n p-xxs\">Documents</div>\r\n                <div className= \"text-right back-color-gray p-xxs\">\r\n                    {this.state.AddIdentityCardButton}\r\n                    {this.state.AddCommercialRegisterCertificateButton}\r\n                </div>\r\n                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {this.state.IdentityCardListItem}\r\n                    {this.state.CommercialRegisterCertificateListItem}\r\n                </ol>\r\n            </section>         \r\n        );\r\n    }\r\n};\r\n\r\nexport default DocumentsList;","import React, { Component } from \"react\";\r\nimport { getData } from \"../../TraderFunctions\";\r\nimport ProfilePhoto from \"./ProfilePhoto\";\r\nimport DocumentsList from \"./documents/DocumentsList\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            Email: \"\",\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\",\r\n            Type: \"\",\r\n            Active: null\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Trader\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader found.\") {\r\n                    let trader = response.Trader;\r\n\r\n                    this.setState({\r\n                        Username: trader.Username,\r\n                        Email: trader.Email,\r\n                        FirstName: trader.FirstName,\r\n                        LastName: trader.LastName,\r\n                        Address: trader.Address,\r\n                        PhoneNumber: trader.PhoneNumber,\r\n                        Gender: trader.Gender,\r\n                        Nationality: trader.Nationality,\r\n                        DateOfBirth: trader.DateOfBirth,\r\n                        Type: trader.Type,\r\n                        Active: trader.Active\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <PageHeading Heading=\"PROFILE\" />\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <ProfilePhoto />\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3 color-default p-t-n\">\r\n                                    {`${this.state.FirstName} ${this.state.LastName}`}\r\n                                </div>\r\n                                <div className=\"type-sh3\">\r\n                                    <span className=\"fas fa-briefcase m-r-xxxs\" style={{ color: \"#606060\" }}></span>{this.state.Type}\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-globe-asia\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Active</div>\r\n                                                    <div className=\"content-text-secondary\">{(this.state.Active === 1) ?\r\n                                                        <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                        <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-phone\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Phone Number</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.PhoneNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-at\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Username</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.Username}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-envelope\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Email</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.Email}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-24\">\r\n                                <div className=\"type-h3\" style={{ paddingTop: \"0px\" }}>Details</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list theme-alt\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                    <span className=\"fas fa-birthday-cake color-default\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Birthday</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.DateOfBirth}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list theme-alt\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                    <span className={(this.state.Gender === \"Male\") ? \"fas fa-male color-default\" : \"fas fa-female color-default\"}></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Gender</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.Gender}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list theme-alt\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                    <span className=\"fas fa-flag color-default\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Nationality</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.Nationality}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list theme-alt\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                    <span className=\"fas fa-map-marker-alt color-default\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Address</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.Address}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <DocumentsList />\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Profile;","import React, { Component } from \"react\";\r\n\r\nclass DrivingLicenceContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const drivingLicence = this.props.DrivingLicence;\r\n\r\n        return drivingLicence ? <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={drivingLicence.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-16\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Driving Licence</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-24\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Licence Number</div>\r\n                                                    <div class=\"content-text-secondary\">{drivingLicence.LicenceNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-cog\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Licence Type</div>\r\n                                                    <div class=\"content-text-secondary\">{drivingLicence.Type}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-calendar\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Release Date</div>\r\n                                                    <div class=\"content-text-secondary\">{new Date(drivingLicence.ReleaseDate).toDateString()}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-calendar\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Expiry Date</div>\r\n                                                    <div class=\"content-text-secondary\">{new Date(drivingLicence.ExpiryDate).toDateString()}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </section> : null;\r\n    }\r\n};\r\n\r\nexport default DrivingLicenceContainer;","import React, { Component } from \"react\";\r\n\r\nclass EntryExitCardContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const entryExitCard = this.props.EntryExitCard;\r\n\r\n        return entryExitCard ? <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-24\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Entry/Exit Card</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-24\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Entry/Exit Number</div>\r\n                                                    <div class=\"content-text-secondary\">{entryExitCard.EntryExitNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-cog\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Card Type</div>\r\n                                                    <div class=\"content-text-secondary\">{entryExitCard.Type}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-calendar\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Release Date</div>\r\n                                                    <div class=\"content-text-secondary\">{new Date(entryExitCard.ReleaseDate).toDateString()}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Number of Months</div>\r\n                                                    <div class=\"content-text-secondary\">{entryExitCard.NumberOfMonths}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </section> : null;\r\n    }\r\n};\r\n\r\nexport default EntryExitCardContainer;","import React, { Component } from \"react\";\r\n\r\nclass IdentityCardContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const identityCard = this.props.IdentityCard;\r\n\r\n        return identityCard ? <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={identityCard.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-16\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Identity Card</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-24\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">ID Number</div>\r\n                                                    <div class=\"content-text-secondary\">{identityCard.IDNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </section> : null;\r\n    }\r\n};\r\n\r\nexport default IdentityCardContainer;","import React, { Component } from \"react\";\r\nimport { getPublicData } from \"../../../components/shared/UserFunctions\";\r\nimport SearchingContainer from \"../../searching/SearchingContainer\"; \r\nimport DrivingLicenceContainer from \"./DrivingLicenceContainer\";\r\nimport EntryExitCardContianer from \"./EntryExitCardContainer\";\r\nimport IdentityCardContainer from \"./IdentityCardContainer\";\r\n\r\nclass DocumentsDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DriverDocuments: null,\r\n            Searching: false,\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Get: \"DriverDocuments\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Driver documents found.\") {\r\n                    this.setState({\r\n                        DriverDocuments: response.DriverDocuments,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DriverDocuments: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const driverDocuments = this.state.DriverDocuments;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`documents-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h2\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Documents</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {(this.state.Searching || !driverDocuments) ?\r\n                                <SearchingContainer Searching={this.state.Searching}\r\n                                    SearchingFor=\"documents\" /> :\r\n                                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                                    <IdentityCardContainer IdentityCard={driverDocuments.IdentityCard} />\r\n                                    <DrivingLicenceContainer DrivingLicence={driverDocuments.DrivingLicence} />\r\n                                    <EntryExitCardContianer EntryExitCard={driverDocuments.EntryExitCard} />\r\n                                </ol>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DocumentsDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport Rating from \"../../controls/Rating\";\r\nimport SearchingContainer from \"../searching/SearchingContainer\";\r\nimport DocumentsDialog from \"./documents/DocumentsDialog\";\r\nimport { getPublicData } from \"../../components/shared/UserFunctions\";\r\n\r\nclass DriverContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DriverProfile: null,\r\n            Searching: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Get: \"DriverProfile\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Driver profile found.\") {\r\n                    this.setState({\r\n                        DriverProfile: response.DriverProfile,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DriverProfile: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            let request = {\r\n                Get: \"DriverProfile\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Driver profile found.\") {\r\n                    this.setState({\r\n                        DriverProfile: response.DriverProfile\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DriverProfile: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Searching || !this.state.DriverProfile) {\r\n            return <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor=\"driver\" />;\r\n        }\r\n        else {\r\n            const driverProfile = this.state.DriverProfile;\r\n            const driver = driverProfile.Driver;\r\n            const ratingAndReviews = driverProfile.RatingAndReviews\r\n            const onJob = driverProfile.OnJob;\r\n            const profilePhoto = driverProfile.ProfilePhoto ?\r\n                driverProfile.ProfilePhoto :\r\n                \"./images/defaultProfilePhoto.png\";\r\n\r\n            const dialogID = UUID().substring(0, 7).toUpperCase();\r\n\r\n            return <section>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={profilePhoto} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                    {`${driver.FirstName} ${driver.LastName} `}\r\n                                    {onJob ? <span class=\"badge back-color-golden\">ON JOB</span> : null}\r\n                                </div>\r\n                                <div className=\"type-sh3\"><span className=\"fas fa-car m-r-xxs\" style={{ color: \"#606060\" }}></span>Driver</div>\r\n                                <div className=\"type-sh3\">\r\n                                    <span><Rating Rating={ratingAndReviews.Reviews > 0 ? ratingAndReviews.Rating : 0}\r\n                                        Color=\"\" Size=\"rating-small\"\r\n                                        Label={ratingAndReviews.Reviews > 0 ?\r\n                                            `(${ratingAndReviews.Reviews} Review(s))` : `No Reviews`} /></span>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-globe-asia\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Active</div>\r\n                                                    <div className=\"content-text-secondary\">{(driver.Active === 1) ?\r\n                                                        <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                        <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class={(driver.Gender === \"Male\") ? \"fas fa-male\" : \"fas fa-female\"}></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Gender</div>\r\n                                                    <div class=\"content-text-secondary\">{driver.Gender}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-birthday-cake\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Birthday</div>\r\n                                                    <div class=\"content-text-secondary\">{driver.DateOfBirth}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-envelope\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Email</div>\r\n                                                    <div class=\"content-text-secondary\">{driver.Email}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-phone\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Phone Number</div>\r\n                                                    <div class=\"content-text-secondary\">{driver.PhoneNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-flag\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Nationality</div>\r\n                                                    <div class=\"content-text-secondary\">{driver.Nationality}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {this.props.TabView ?\r\n                                    null : \r\n                                    <button type=\"button\" className=\"btn btn-default\"\r\n                                        style={{ minWidth: \"152px\" }} data-toggle=\"modal\"\r\n                                        data-target={`#documents-dialog-${dialogID}`}>Documents</button>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.props.TabView ?\r\n                    null :\r\n                    <DocumentsDialog DialogID={dialogID}\r\n                        DriverID={this.props.DriverID} />}\r\n            </section>;\r\n        } \r\n    }\r\n};\r\n\r\nexport default DriverContainer;","import React, { Component } from \"react\";\r\n\r\nclass TrailerContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const trailer = this.props.Trailer;\r\n\r\n        return <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={trailer.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-16\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>{`${index + 1}.`}</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-24\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-weight\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Maximum Weight</div>\r\n                                                    <div class=\"content-text-secondary\">{`${trailer.MaximumWeight} GVM`}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-cog\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Trailer Type</div>\r\n                                                    <div class=\"content-text-secondary\">{trailer.Type}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TrailerContainer;","import React, { Component } from \"react\";\r\nimport TrailerContainer from \"./TrailerContainer\";\r\nimport SearchingContainer from \"../searching/SearchingContainer\";\r\n\r\nclass TrailersDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const trailers = this.props.Trailers;\r\n\r\n        let Trailers = (trailers.length > 0) ?\r\n            <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                {trailers.map((trailer, index) => {\r\n                    return <TrailerContainer key={index} Index={index} Trailer={trailer} />;\r\n                })}\r\n            </ol> : null;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`trailers-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h2\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Trailers</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {(trailers.length === 0) ?\r\n                                <SearchingContainer Searching={false}\r\n                                    SearchingFor=\"trailers\" /> : Trailers}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TrailersDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport SearchingContainer from \"../searching/SearchingContainer\";\r\nimport TrailersDialog from \"./TrailersDialog\";\r\nimport { getPublicData } from \"../../components/shared/UserFunctions\";\r\n\r\nclass TruckContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TruckProfile: null,\r\n            Searching: false\r\n        }\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n   onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Get: \"TruckProfile\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Truck profile found.\") {\r\n\r\n                    if (this.props.OnTrailersFound) {\r\n                        this.props.OnTrailersFound(response.TruckProfile.Trailers);\r\n                    }\r\n\r\n                    this.setState({\r\n                        TruckProfile: response.TruckProfile,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TruckProfile: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            let request = {\r\n                Get: \"TruckProfile\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Truck profile found.\") {\r\n\r\n                    if (this.props.OnTrailersFound) {\r\n                        this.props.OnTrailersFound(response.TruckProfile.Trailers);\r\n                    }\r\n\r\n                    this.setState({\r\n                        TruckProfile: response.TruckProfile\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TruckProfile: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Searching || !this.state.TruckProfile) {\r\n            return <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor=\"truck\" />;\r\n        }\r\n        else {\r\n            const truckProfile = this.state.TruckProfile;\r\n            const truck = truckProfile.Truck;\r\n            const dialogID = UUID().substring(0, 7).toUpperCase();\r\n\r\n            return <section>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={truck.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                    {`${truck.Brand} ${truck.Model}`}\r\n                                </div>\r\n                                <div className=\"type-sh3\">\r\n                                    <span className=\"fas fa-truck\" style={{ color: \"#606060\" }}></span>   {truck.Type}\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-list-ol\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Plate Number</div>\r\n                                                    <div class=\"content-text-secondary\">{truck.PlateNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-user\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Owner</div>\r\n                                                    <div class=\"content-text-secondary\">{truck.Owner}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-calendar-day\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Production Year</div>\r\n                                                    <div class=\"content-text-secondary\">{truck.ProductionYear}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-weight\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Maximum Weight</div>\r\n                                                    <div class=\"content-text-secondary\">{`${truck.MaximumWeight} GVW`}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {this.props.TabView ?\r\n                                    null :\r\n                                    <button type=\"button\" className=\"btn btn-default\"\r\n                                        style={{ minWidth: \"152px\" }} data-toggle=\"modal\"\r\n                                        data-target={`#trailers-dialog-${dialogID}`}>Trailers</button>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.props.TabView ?\r\n                    null :\r\n                    <TrailersDialog Trailers={truckProfile.Trailers} DialogID={dialogID} />}\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default TruckContainer;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addTraderRequest } from \"../../../../TraderFunctions.js\";\r\n\r\nclass SendTraderRequestDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            CargoType: \"\",\r\n            CargoWeight: 0,          \r\n            LoadingDate: new Date(),\r\n            LoadingTime: new Date().getTime(),\r\n            AcceptedDelay: 0,\r\n            EntryExit: 0,\r\n\r\n            ValidCargoType: false,\r\n            ValidCargoWeight: false,\r\n            ValidLoadingDate: false,\r\n            ValidLoadingTime: false,\r\n            ValidAcceptedDelay: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                CargoType: \"\",\r\n                CargoWeight: \"\",\r\n                LoadingDate: \"\",\r\n                LoadingTime: \"\",\r\n                AcceptedDelay: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCargoType = this.state.ValidCargoType;\r\n        let ValidCargoWeight = this.state.ValidCargoWeight;\r\n        let ValidLoadingDate = this.state.ValidLoadingDate;\r\n        let ValidLoadingTime = this.state.ValidLoadingTime;\r\n        let ValidAcceptedDelay = this.state.ValidAcceptedDelay;\r\n\r\n        switch (field) {\r\n            case \"CargoType\":\r\n                ValidCargoType = (value !== \"\");\r\n                Errors.CargoType = ValidCargoType ? \"\" : \"Cargo type is required.\";\r\n                break;\r\n            case \"CargoWeight\":\r\n                ValidCargoWeight = (value !== \"\");\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight is required.\"; \r\n\r\n                if (Errors.CargoWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCargoWeight = (value >= 100);\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight must be greater than 100 lbs.\";\r\n                break;\r\n            case \"LoadingDate\":\r\n                ValidLoadingDate = (value !== \"\");\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date is required.\";\r\n\r\n                if (Errors.LoadingDate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidLoadingDate = (new Date(value) >= new Date());\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date must be later than yesterday.\";\r\n                break;\r\n            case \"LoadingTime\":\r\n                ValidLoadingTime = (value !== \"\");\r\n                Errors.LoadingTime = ValidLoadingTime ? \"\" : \"Loading time is required.\";\r\n                break;\r\n            case \"AcceptedDelay\":\r\n                ValidAcceptedDelay = (value !== \"\");\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay is required.\";\r\n\r\n                if (Errors.AcceptedDelay !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidAcceptedDelay = (value >= 0 && value <= 48);\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay can be in the range of 0 to 48 hours.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCargoType: ValidCargoType,\r\n            ValidCargoWeight: ValidCargoWeight,\r\n            ValidLoadingDate: ValidLoadingDate,\r\n            ValidLoadingTime: ValidLoadingTime,\r\n            ValidAcceptedDelay: ValidAcceptedDelay\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidCargoType &&\r\n                        this.state.ValidCargoWeight &&\r\n                        this.state.ValidLoadingDate &&\r\n                        this.state.ValidLoadingTime &&\r\n                        this.state.AcceptedDelay\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (this.props.IsRequestSent()) {\r\n            return;\r\n        }\r\n\r\n        const newTraderRequest = {\r\n            Token: localStorage.Token,\r\n            JobRequestID: this.props.JobRequest.JobRequestID,\r\n            CargoType: this.state.CargoType,\r\n            CargoWeight: this.state.CargoWeight,\r\n            LoadingDate: this.state.LoadingDate,\r\n            LoadingTime: this.state.LoadingTime,\r\n            EntryExit: this.state.EntryExit,\r\n            AcceptedDelay: this.state.AcceptedDelay\r\n        };\r\n\r\n        console.log(\"Going to add trader request...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addTraderRequest(newTraderRequest).then(response => {\r\n            if (response.Message === \"Trader request is added.\") {\r\n\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n\r\n                this.cancelButton.click();\r\n                this.props.OnOK(response.TraderRequest);\r\n            }\r\n            else {\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`send-trader-reqeust-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"type-h3 color-default p-t-xxs\">Send Request</div>\r\n                                        <div className=\"row p-t-xxs\">\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Cargo Type</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"CargoType\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.CargoType} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.CargoType}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Cargo Weight (lbs)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"CargoWeight\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.CargoWeight} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.CargoWeight}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Accepted Delay (Hours)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"AcceptedDelay\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.AcceptedDelay} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.AcceptedDelay}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Date</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"LoadingDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LoadingDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LoadingDate}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Time</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"time\" name=\"LoadingTime\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LoadingTime} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LoadingTime}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"checkbox\">\r\n                                                        <label className=\"control-label\">\r\n                                                            <input type=\"checkbox\" name=\"EntryExit\"\r\n                                                                value={this.state.EntryExit} onChange={() => {\r\n                                                                    this.state.EntryExit = this.state.EntryExit ? 0 : 1;\r\n                                                                }}></input>\r\n                                                            <span>Entry/Exit</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Send\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default SendTraderRequestDialog;","import React, { Component } from \"react\";\r\nimport TraderRequestContainer from \"../../../../../../containers/traderRequest/TraderRequestContainer\";\r\n\r\nclass TraderRequestDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`trader-request-dialog-${this.props.Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <TraderRequestContainer TraderRequest={this.props.TraderRequest} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderRequestDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { addOnGoingJobFromJobRequest } from \"../../../../TraderFunctions\";\r\n\r\nclass AssignJobDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false\r\n        };\r\n\r\n        this.onAssignNow = this.onAssignNow.bind(this);\r\n    }\r\n\r\n    onAssignNow = async () => {\r\n        if (!this.props.CanAssign()) {\r\n            return;\r\n        }\r\n\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newOnGoingJob = {\r\n            Token: localStorage.Token,\r\n            TraderRequestID: this.props.TraderRequestID\r\n        };\r\n\r\n        console.log(\"Going to add on-going job...\");\r\n\r\n        await addOnGoingJobFromJobRequest(newOnGoingJob).then(async response => {\r\n            if (response.Message === \"On-going job is added.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.cancelButton.click();\r\n                await this.props.OnOK();\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n\r\n            \r\n        });\r\n    };\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const driver = this.props.Driver;\r\n        const price = this.props.Price;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`assign-from-request-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div class=\"jumbotron\">\r\n                                <div class=\"container\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-24\">\r\n                                            <img alt=\"new.png\" src=\"./images/new.png\" height=\"80\" />\r\n                                            <div class=\"type-h4\">You are About to Start a New Job with <span class=\"color-default\">{`${driver.FirstName} ${driver.LastName}`}</span>.</div>\r\n                                            <div class=\"type-sh3\">Your Payment Amount is <span class=\"color-default\">{`$${price}`}</span>.</div>\r\n                                            <p><span class=\"color-default\">Important Note:</span> After this step, you'll be engaged in an On-Going Job. You have to pay <span class=\"color-default\">{`$${price}`}</span> after the completion of your job from the <span class=\"color-default\">Payments</span> section.</p>\r\n                                            <div class=\"text-right\">\r\n                                                <button class=\"btn btn-primary\" onClick={this.onAssignNow}>Assign Now</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AssignJobDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport DriverContainer from \"../../../../../../containers/driver/DriverContainer\";\r\nimport TruckContainer from \"../../../../../../containers/truck/TruckContainer\";\r\nimport JobRequestContainer from \"../../../../../../containers/jobReqeust/JobRequestContainer\";\r\nimport SendTraderRequestDialog from \"./SendTraderRequestDialog\";\r\nimport TraderRequestDialog from \"./TraderRequestDialog\";\r\nimport AssignJobDialog from \"./AssignJobDialog\";\r\nimport { deleteTraderRequest } from \"../../../../TraderFunctions\";\r\n\r\nclass JobRequestPostListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Preloader: null\r\n        };\r\n\r\n        this.onCancelRequest = this.onCancelRequest.bind(this);\r\n    }\r\n\r\n    onCancelRequest = async jobRequest => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedTraderRequest = {\r\n            Token: localStorage.Token,\r\n            JobRequestID: jobRequest.JobRequestID\r\n        };\r\n\r\n        console.log(`Going to delete Trader request...`);\r\n\r\n        await deleteTraderRequest(discardedTraderRequest).then(response => {\r\n            if (response.Message === \"Trader request is deleted.\") {\r\n                this.props.OnRequestUpdated(jobRequest, null);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const jobRequest = this.props.JobRequestPost.JobRequest;\r\n        const driver = this.props.JobRequestPost.Driver;\r\n        const driverOnJob = this.props.JobRequestPost.DriverOnJob;\r\n        const traderOnJob = this.props.TraderOnJob;\r\n        const traderRequest = this.props.JobRequestPost.TraderRequest;\r\n        const canAssign = !driverOnJob && !traderOnJob;\r\n\r\n        const assignJobIndex = UUID();\r\n\r\n        let Badge;\r\n\r\n        if (traderRequest) {\r\n            Badge = traderRequest.Selected ?\r\n                <span class=\"badge back-color-golden m-l-xxs\">REQUEST ACCEPTED</span> :\r\n                <span class=\"badge back-color-default m-l-xxs\">REQUEST SENT</span>;\r\n        }\r\n        else {\r\n            Badge = null;\r\n        }\r\n\r\n        return <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron p-xxxs back-color-gray\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"type-h5 color-default p-t-n\">\r\n                                {`${index + 1}.`}\r\n                                {Badge}\r\n                            </div>\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-user\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Posted By</div>\r\n                                            <div className=\"content-text-secondary\">{`${driver.FirstName} ${driver.LastName}`}\r\n                                                {driverOnJob ?\r\n                                                    <span class=\"badge back-color-danger m-l-xxs\">ON JOB</span> :\r\n                                                    null}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-clock\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Posted On</div>\r\n                                            <div className=\"content-text-secondary\">{new Date(jobRequest.TimeCreated).toDateString()}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-tag\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Price</div>\r\n                                            <div className=\"content-text-secondary\">{`$${jobRequest.Price}`}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas  fa-map-marker-alt\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">From </div>\r\n                                            <div className=\"content-text-secondary\">{jobRequest.LoadingPlace}</div>\r\n                                            <div className=\"content-text-primary\">To</div>\r\n                                            <div className=\"content-text-secondary\">{jobRequest.UnloadingPlace}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"text-right\">\r\n                                {traderRequest ?\r\n                                    <section>\r\n                                        <button className=\"btn btn-secondary\"\r\n                                            onClick={async () => { await this.onCancelRequest(jobRequest); }}>Cancel Request</button>\r\n                                        <button className=\"btn btn-primary\"\r\n                                            data-toggle=\"modal\"\r\n                                            data-target={`#trader-request-dialog-${index}`}>View Request</button>\r\n                                        {traderRequest && traderRequest.Selected ?\r\n                                            <button className=\"btn btn-primary\"\r\n                                                disabled={!canAssign}\r\n                                                data-toggle=\"modal\"\r\n                                                data-target={`#assign-from-request-dialog-${assignJobIndex}`}>Assign Job</button> :\r\n                                            null}\r\n                                    </section> :\r\n                                    <button className=\"btn btn-primary\"\r\n                                        data-toggle=\"modal\"\r\n                                        data-target={`#send-trader-reqeust-dialog-${index}`}>Send Request</button>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {traderRequest ? \r\n                    <TraderRequestDialog Index={index} TraderRequest={traderRequest} /> : \r\n                    null}\r\n\r\n                {traderRequest && traderRequest.Selected ? \r\n                    <AssignJobDialog Index={assignJobIndex}\r\n                        TraderRequestID={traderRequest.TraderRequestID}\r\n                        Driver={driver}\r\n                        Price={jobRequest.Price}\r\n                        CanAssign={() => { return canAssign; }}\r\n                        OnOK={this.props.OnJobAssigned} /> : \r\n                    null}\r\n\r\n                <div className=\"back-color-gray\" data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#job-request-post-${index}`}>\r\n                    <div className=\"type-h4 color-default text-right p-xxxs\">\r\n                        {\"   More Details\"} <i className=\"fas fa-ellipsis-v\"></i>\r\n                        <i class=\"glyph glyph-add\"></i>\r\n                        <i class=\"glyph glyph-remove\"></i>\r\n                    </div>\r\n                </div>\r\n                <div className=\"collapse\" id={`job-request-post-${index}`}>\r\n                    <ul className=\"nav nav-tabs\" role=\"tablist\"\r\n                        style={{\r\n                            padding: \"10px\",\r\n                            backgroundColor: \"#EFEFEF\",\r\n                            width: \"100%\",\r\n                            margin: \"0px\"\r\n                        }}>\r\n                        <li role=\"presentation\" className=\"active\"><a href={`#job-request-${index}`} aria-controls={`job-request-${index}`} role=\"tab\" data-toggle=\"tab\">Job Request</a></li>\r\n                        <li role=\"presentation\">\r\n                            <a href={`#driver-${index}`} aria-controls={`driver-${index}`} role=\"tab\" data-toggle=\"tab\"\r\n                                onClick={async () => { await this.RefreshDriverContainer(); }}>Driver</a>\r\n                        </li>\r\n                        <li role=\"presentation\">\r\n                            <a href={`#truck-${index}`} aria-controls={`truck-${index}`} role=\"tab\" data-toggle=\"tab\"\r\n                                onClick={async () => { await this.RefreshTruckContainer(); }}>Truck</a>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"tab-content\">\r\n                        <div role=\"tabpanel\" className=\"tab-pane active\" id={`job-request-${index}`}>\r\n                            <JobRequestContainer JobRequest={jobRequest} />\r\n                        </div>\r\n                        <div role=\"tabpanel\" className=\"tab-pane\" id={`driver-${index}`}>\r\n                            <DriverContainer Refresh={refresh => { this.RefreshDriverContainer = refresh; }} DriverID={jobRequest.DriverID} />\r\n                        </div>\r\n                        <div role=\"tabpanel\" className=\"tab-pane\" id={`truck-${index}`}>\r\n                            <TruckContainer Refresh={refresh => { this.RefreshTruckContainer = refresh; }} DriverID={jobRequest.DriverID} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <SendTraderRequestDialog\r\n                    DialogID={index}\r\n                    JobRequest={jobRequest}\r\n                    IsRequestSent={() => { return traderRequest ? true : false; }}\r\n                    OnOK={traderRequest => { this.props.OnRequestUpdated(jobRequest, traderRequest); }} />\r\n            </li>\r\n            {this.state.Preloader}\r\n        </section>;     \r\n    }\r\n};\r\n\r\nexport default JobRequestPostListItem;","import React, { Component } from \"react\";\r\nimport ProgressBar from \"../../../../../../controls/ProgressBar\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\nimport { getData } from \"../../../../TraderFunctions\";\r\nimport JobRequestPostListItem from \"./JobRequestPostListItem\";\r\n\r\nclass JobRequestPostsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobRequestPosts: [],\r\n            TraderOnJob: false,\r\n            Searching: true,\r\n            Refreshing: false,\r\n            Preloader: null,\r\n            Message: null,\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        this.props.Refresh(this.refresh);\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobRequestPosts\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job request posts found.\") {\r\n                    this.setState({\r\n                        JobRequestPosts: response.JobRequestPosts,\r\n                        TraderOnJob: response.TraderOnJob,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobRequestPosts: [],\r\n                        TraderOnJob: false,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Refreshing: true\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobRequestPosts\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job request posts found.\") {\r\n                    this.setState({\r\n                        JobRequestPosts: response.JobRequestPosts,\r\n                        TraderOnJob: response.TraderOnJob,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobRequestPosts: [],\r\n                        TraderOnJob: false,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Searching) {\r\n            return <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\", width: \"100%\", height: \"100vh\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"job_requests.png\" src=\"./images/job_requests.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div className=\"col-md-12 col-md-pull-12\">\r\n                                <div className=\"type-h3\">Job Requests</div>\r\n                                <p>Job requests from Drivers are dispalyed here.</p>\r\n                                <div class=\"type-sh3\" style={{ color: \"#008575\" }}>Searhcing</div>\r\n                                <ProgressBar />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n        else if (this.state.JobRequestPosts.length === 0) {\r\n            return <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\", width: \"100%\", height: \"100vh\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"job_requests.png\" src=\"./images/job_requests.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div className=\"col-md-12 col-md-pull-12\">\r\n                                <div className=\"type-h3\">Job Requests</div>\r\n                                <div className=\"type-sh3\">No Job Requests Found...</div>\r\n                                <p>Job requests from Drivers are dispalyed here.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n        else {\r\n            return <section>\r\n                {this.state.TraderOnJob ?\r\n                    <div class=\"alert alert-danger m-n\">\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xs-24\">\r\n                                    <p><span className=\"fas fa-exclamation-circle m-r-xxxs\"></span>While you are engaged in an On-Going Job, you cannot assign more jobs to drivers. View details in <span className=\"color-default\">On-Going Job</span> tab.</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div> :\r\n                    null}\r\n           <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Job Requests\r\n                    {this.state.Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n                </div>\r\n                <ol className=\"list-items\" style={{ marginTop: \"0px\" }}>\r\n                    {this.state.JobRequestPosts.map((jobRequestPost, index) => {\r\n                        return <JobRequestPostListItem key={index} Index={index}\r\n                            JobRequestPost={jobRequestPost}\r\n                            OnRequestUpdated={(jobRequest, traderRequest) => {\r\n                                let jobRequestPosts = this.state.JobRequestPosts;\r\n\r\n                                for (let jobRequestPost of jobRequestPosts) {\r\n                                    if (jobRequestPost.JobRequest.JobRequestID === jobRequest.JobRequestID) {\r\n                                        jobRequestPost.TraderRequest = traderRequest;\r\n                                        break;\r\n                                    }\r\n                                }\r\n\r\n                                this.setState({\r\n                                    JobRequestPosts: jobRequestPosts\r\n                                });\r\n                            }}\r\n                            TraderOnJob={this.state.TraderOnJob}\r\n                            OnJobAssigned={this.refresh} />;\r\n                    })} \r\n                </ol>\r\n       </section>;\r\n        }      \r\n    }\r\n};\r\n\r\nexport default JobRequestPostsList;","import React, { Component } from \"react\";\r\nimport JobRequestPostsList from \"./JobRequestPostsList\";\r\n\r\nclass List extends Component {\r\n   render() {\r\n       return <section>\r\n           <JobRequestPostsList Refresh={this.props.Refresh} />\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default List;","import React, { useState } from \"react\";\r\nimport { withGoogleMap, withScriptjs, GoogleMap, Marker, InfoWindow } from \"react-google-maps\";\r\nconst Key = \"AIzaSyD_U_2NzdPIL7TWb8ECBHWO1eROR2yrebI\";\r\n\r\nconst JobRequestWindow = props => {\r\n    const { JobRequest } = props;\r\n\r\n    return <section>\r\n        <div className=\"jumbotron theme-default\" style={{ backgroundColor: \"#FFFFFF\" }}>\r\n            <div className=\"container\">\r\n                <div className=\"col-md-24\">\r\n                    <div className=\"type-h6 color-default p-t-n\">Job Request</div>\r\n                    <div className=\"type-sh6\">\r\n                        <span className=\"fas fa-tag color-default m-r-xxxs\"></span>\r\n                        <span className=\"color-default\">PRICE: </span>{`$${JobRequest.Price}`}</div>\r\n                    <div className=\"type-sh6\">\r\n                        <span className=\"fas fa-map-marker-alt color-default m-r-xxxs\"></span>\r\n                        <span className=\"color-default\">FROM: </span>{JobRequest.LoadingPlace}</div>\r\n                    <div className=\"type-sh6\">\r\n                        <span className=\"fas fa-map-marker-alt color-default m-r-xxxs\"></span>\r\n                        <span className=\"color-default\">TO: </span>{JobRequest.UnloadingPlace}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>;\r\n};\r\n\r\nconst Map = props => {\r\n    const [SelectedJobRequest, SetSelectedJobRequest] = useState(null);\r\n\r\n    const {\r\n        Place,\r\n        JobRequestPosts\r\n    } = props;\r\n\r\n    const lat = Place ? Place.Lat : 33.784310;\r\n    const lng = Place ? Place.Lng : 72.738780;\r\n\r\n    return <GoogleMap\r\n        defaultZoom={10}\r\n        defaultCenter={{ lat: 33.784310, lng: 72.738780 }}\r\n        center={{ lat: lat, lng: lng }}>\r\n\r\n        {JobRequestPosts.map((jobRequestPost, index) => {\r\n            const jobRequest = jobRequestPost.JobRequest;\r\n\r\n            return <Marker key={index} position={{ lat: jobRequest.LoadingLat, lng: jobRequest.LoadingLng }}\r\n                icon={{\r\n                    url: \"./images/marker.svg\",\r\n                    scaledSize: new window.google.maps.Size(40, 40)\r\n                }}\r\n                onClick={() => {\r\n                    SetSelectedJobRequest(jobRequest);\r\n                }} />;\r\n        })}\r\n        \r\n\r\n        {SelectedJobRequest ? <InfoWindow position={{ lat: SelectedJobRequest.LoadingLat, lng: SelectedJobRequest.LoadingLng }}\r\n            onCloseClick={() => {\r\n                SetSelectedJobRequest(null);\r\n            }}>\r\n            <JobRequestWindow JobRequest={SelectedJobRequest} />\r\n        </InfoWindow> : null}\r\n    </GoogleMap>;\r\n}\r\n\r\nconst MapWrapped = withScriptjs(withGoogleMap(Map));\r\n\r\nconst JobRequestsGoogleMap = props => {\r\n    return <div style={{ width: \"100%\", height: \"100vh\" }}>\r\n        <MapWrapped\r\n            googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${Key}`}\r\n            loadingElement={<div style={{ height: `100%` }} />}\r\n            containerElement={<div style={{ height: `100%` }} />}\r\n            mapElement={<div style={{ height: `100%` }} />}\r\n            Place={props.Place}\r\n            JobRequestPosts={props.JobRequestPosts} />\r\n    </div>;\r\n}\r\n\r\nexport default JobRequestsGoogleMap;","import React, { Component } from \"react\";\r\nimport PlaceInput from \"../../../../../../controls/PlaceInput\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport JobRequestsGoogleMap from \"./JobRequestsGoogleMap\";\r\nimport { getData } from \"../../../../TraderFunctions\";\r\n\r\nclass JobRequestsMap extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobRequestPosts: [],\r\n            Place: null,\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobRequestPosts\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job request posts found.\") {\r\n                    this.setState({\r\n                        JobRequestPosts: response.JobRequestPosts,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobRequestPosts: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Refreshing: true\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobRequestPosts\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job request posts found.\") {\r\n                    this.setState({\r\n                        JobRequestPosts: response.JobRequestPosts,\r\n                        TraderOnJob: response.TraderOnJob,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobRequestPosts: [],\r\n                        TraderOnJob: false,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            JobRequestPosts,\r\n            Place,\r\n            Searching\r\n        } = this.state;\r\n\r\n        return <section>\r\n\r\n            {JobRequestPosts.length === 0 ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"job requests\" /> :\r\n                <section>\r\n                    <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                        <PlaceInput Address=\"\"\r\n                            OnPlaceSelected={place => {\r\n                                this.setState({\r\n                                    Place: place,\r\n                                });\r\n                            }} />\r\n                    </div>\r\n                    <JobRequestsGoogleMap Place={Place} JobRequestPosts={JobRequestPosts} />\r\n                </section>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobRequestsMap;","import React, { Component } from \"react\";\r\nimport JobRequestsMap from \"./JobRequestsMap\";\r\n\r\nclass Map extends Component {\r\n    render() {\r\n        return <section>\r\n            <JobRequestsMap Refresh={this.props.Refresh} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Map;","import React, { Component } from \"react\";\r\nimport List from \"./list/List\";\r\nimport Map from \"./map/Map\";\r\n\r\nclass JobRequests extends Component {\r\n    render() {\r\n        return <section>\r\n            <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#job-requests-list\" aria-controls=\"job-requests-list\" role=\"tab\" data-toggle=\"tab\">List</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#job-requests-map\" aria-controls=\"job-requests-map\" role=\"tab\" data-toggle=\"tab\">Map</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div className=\"tab-content\">\r\n                <div role=\"tabpanel\" className=\"tab-pane active\" id=\"job-requests-list\">\r\n                    <List Refresh={this.props.Refresh} />\r\n                </div>\r\n                <div role=\"tabpanel\" className=\"tab-pane\" id=\"job-requests-map\">\r\n                    <Map Refresh={refresh => { this.RefreshMap = refresh; }} />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobRequests;","/// <reference path=\".js\" />\r\nimport React, { Component } from \"react\";\r\nimport { getPublicData } from \"../../../components/shared/UserFunctions\";\r\nimport SearchingContainer from \"../../searching/SearchingContainer\"; \r\nimport DrivingLicenceContainer from \"./DrivingLicenceContainer\";\r\nimport EntryExitCardContianer from \"./EntryExitCardContainer\";\r\nimport IdentityCardContainer from \"./IdentityCardContainer\";\r\n\r\nclass DocumentsContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DriverDocuments: null,\r\n            Searching: false,\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Get: \"DriverDocuments\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Driver documents found.\") {\r\n                    this.setState({\r\n                        DriverDocuments: response.DriverDocuments,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DriverDocuments: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            let request = {\r\n                Get: \"DriverDocuments\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Driver documents found.\") {\r\n                    this.setState({\r\n                        DriverDocuments: response.DriverDocuments\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DriverDocuments: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const driverDocuments = this.state.DriverDocuments;\r\n\r\n        return (this.state.Searching || !driverDocuments) ?\r\n            <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor=\"documents\" /> :\r\n            <section>\r\n                <ol className=\"list-items m-n\">\r\n                    <IdentityCardContainer IdentityCard={driverDocuments.IdentityCard} />\r\n                    <DrivingLicenceContainer DrivingLicence={driverDocuments.DrivingLicence} />\r\n                    <EntryExitCardContianer EntryExitCard={driverDocuments.EntryExitCard} />\r\n                </ol>\r\n            </section>;\r\n    }\r\n};\r\n\r\nexport default DocumentsContainer;","import React, { Component } from \"react\";\r\nimport DriverContainer from \"../../../../../containers/driver/DriverContainer\";\r\nimport DocumentsContainer from \"../../../../../containers/driver/documents/DocumentsContainer\";\r\n\r\nclass ProfileDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`profile-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <section>\r\n                                <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                                    <li role=\"presentation\" className=\"active\">\r\n                                        <a href={`#driver-tab-${index}`} aria-controls={`driver-tab-${index}`} role=\"tab\" data-toggle=\"tab\">Driver</a>\r\n                                    </li>\r\n                                    <li role=\"presentation\">\r\n                                        <a href={`#documents-tab-${index}`} aria-controls={`documents-tab-${index}`} role=\"tab\" data-toggle=\"tab\">Documents</a>\r\n                                    </li>\r\n                                </ul>\r\n                                <div className=\"tab-content\">\r\n                                    <div role=\"tabpanel\" className=\"tab-pane active\" id={`driver-tab-${index}`}>\r\n                                        <DriverContainer Refresh={this.props.RefreshDriver} DriverID={this.props.DriverID} TabView={true} />\r\n                                    </div>\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id={`documents-tab-${index}`}>\r\n                                        <DocumentsContainer Refresh={this.props.RefreshDocuments} DriverID={this.props.DriverID} />\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ProfileDialog;","import React, { Component } from \"react\";\r\nimport TrailerContainer from \"./TrailerContainer\";\r\nimport SearchingContainer from \"../searching/SearchingContainer\";\r\n\r\nclass TrailersDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const trailers = this.props.Trailers;\r\n\r\n        return (trailers.length === 0) ?\r\n            <SearchingContainer Searching={false}\r\n                SearchingFor=\"trailers\" /> : \r\n            <section>\r\n                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {trailers.map((trailer, index) => {\r\n                        return <TrailerContainer key={index} Index={index} Trailer={trailer} />;\r\n                    })}\r\n                </ol>\r\n            </section>;\r\n    }\r\n};\r\n\r\nexport default TrailersDialog;","import React, { Component } from \"react\";\r\nimport TruckContainer from \"../../../../../containers/truck/TruckContainer\";\r\nimport TrailersContainer from \"../../../../../containers/truck/TrailersContainer\";\r\n\r\nclass TruckDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Trailers: []\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`truck-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <section>\r\n                                <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                                    <li role=\"presentation\" className=\"active\">\r\n                                        <a href={`#truck-tab-${index}`} aria-controls={`truck-tab-${index}`} role=\"tab\" data-toggle=\"tab\">Truck</a>\r\n                                    </li>\r\n                                    <li role=\"presentation\">\r\n                                        <a href={`#trailers-tab-${index}`} aria-controls={`trailers-tab-${index}`} role=\"tab\" data-toggle=\"tab\">Trailers</a>\r\n                                    </li>\r\n                                </ul>\r\n                                <div className=\"tab-content\">\r\n                                    <div role=\"tabpanel\" className=\"tab-pane active\" id={`truck-tab-${index}`}>\r\n                                        <TruckContainer Refresh={this.props.Refresh}\r\n                                            DriverID={this.props.DriverID}\r\n                                            OnTrailersFound={trailers => {\r\n                                                this.setState({\r\n                                                    Trailers: trailers\r\n                                                });\r\n                                            }}\r\n                                            TabView={true} />\r\n                                    </div>\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id={`trailers-tab-${index}`}>\r\n                                        <TrailersContainer Trailers={this.state.Trailers} />\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TruckDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { addOnGoingJobFromJobOffer } from \"../../../TraderFunctions\";\r\n\r\nclass ProfileDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false\r\n        };\r\n\r\n        this.onAssignNow = this.onAssignNow.bind(this);\r\n    }\r\n\r\n    onAssignNow = async () => {\r\n        if (!this.props.CanAssign()) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newOnGoingJob = {\r\n            Token: localStorage.Token,\r\n            DriverRequestID: this.props.DriverRequestID\r\n        };\r\n\r\n        console.log(\"Going to add on-going job...\");\r\n\r\n        await addOnGoingJobFromJobOffer(newOnGoingJob).then(response => {\r\n            if (response.Message === \"On-going job is added.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.cancelButton.click();\r\n\r\n                this.props.OnOK();\r\n                return;\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n\r\n            \r\n        });\r\n    };\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const driver = this.props.Driver;\r\n        const price = this.props.Price;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`assign-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div class=\"jumbotron\">\r\n                                <div class=\"container\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-24\">\r\n                                            <img alt=\"new.png\" src=\"./images/new.png\" height=\"100\" />\r\n                                            <div class=\"type-h4\">You are About to Start a New Job with <span class=\"color-default\">{`${driver.FirstName} ${driver.LastName}`}</span>.</div>\r\n                                            <div class=\"type-sh3\">Your Payment Amount is <span class=\"color-default\">{`$${price}`}</span>.</div>\r\n                                            <p><span class=\"color-default\">Important Note:</span> After this step, you'll be engaged in an On-Going Job. You have to pay <span class=\"color-default\">{`$${price}`}</span> after the completion of your job from the <span class=\"color-default\">Payments</span> section.</p>\r\n                                            <div class=\"text-right\">\r\n                                                <button class=\"btn btn-primary\" onClick={this.onAssignNow}>Assign Now</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ProfileDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport ProfileDialog from \"./ProfileDialog\";\r\nimport TruckDialog from \"./TruckDialog\";\r\nimport AssignJobDialog from \"./AssignJobDialog\";\r\n\r\nclass DriverRequestRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const price = this.props.Price;\r\n        const driverRequestPackage = this.props.DriverRequestPackage;\r\n        const driverRequest = driverRequestPackage.DriverRequest;\r\n        const driver = driverRequestPackage.Driver;\r\n        const driverOnJob = driverRequestPackage.DriverOnJob;\r\n        const traderOnJob = driverRequestPackage.TraderOnJob;\r\n        const canAssign = !(driverOnJob || traderOnJob);\r\n\r\n        const profileIndex = UUID();\r\n        const truckIndex = UUID();\r\n        const assignJobIndex = UUID();\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{index + 1}</strong>\r\n            </td>\r\n\r\n            <td>\r\n                {`${driver.FirstName} ${driver.LastName}`}\r\n                {index === 0 ? <span class=\"badge back-color-golden m-l-xxxs\">NEW</span> : null}\r\n                {driverOnJob ? <span class=\"badge back-color-danger m-l-xxxs\">ON JOB</span> : null}\r\n            </td>\r\n\r\n            <td>{new Date(driverRequest.Created).toDateString()}</td>\r\n\r\n            {driverRequest.Price ? <td>{`$${driverRequest.Price}`}</td> : null}\r\n\r\n            <td class=\"text-right\">\r\n                <div>\r\n                    <button className=\"btn btn-secondary m-xxxs\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#profile-dialog-${profileIndex}`}\r\n                        onClick={async () => {\r\n                            await this.RefreshDriverContainer();\r\n                            await this.RefreshDocumentsContainer();\r\n                        }}>Profile</button>\r\n\r\n                    <button className=\"btn btn-secondary m-xxxs\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#truck-dialog-${truckIndex}`}\r\n                        onClick={async () => {\r\n                            await this.RefreshTruckContainer();\r\n                        }}>Truck</button>\r\n\r\n                    <button className=\"btn btn-primary m-xxxs\"\r\n                        disabled={!canAssign}\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#assign-dialog-${assignJobIndex}`}>Assign Job</button>\r\n\r\n                    <ProfileDialog Index={profileIndex}\r\n                        DriverID={driverRequest.DriverID}\r\n                        RefreshDriver={refresh => { this.RefreshDriverContainer = refresh; }}\r\n                        RefreshDocuments={refresh => { this.RefreshDocumentsContainer = refresh; }} />\r\n\r\n                    <TruckDialog Index={truckIndex}\r\n                        DriverID={driverRequest.DriverID}\r\n                        Refresh={refresh => { this.RefreshTruckContainer = refresh; }} />\r\n\r\n                    <AssignJobDialog Index={assignJobIndex}\r\n                        DriverRequestID={driverRequest.DriverRequestID}\r\n                        Driver={driver}\r\n                        Price={driverRequest.Price ? driverRequest.Price : price}\r\n                        CanAssign={() => { return canAssign; }}\r\n                        OnOK={this.props.OnJobAssigned} />\r\n                </div>\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default DriverRequestRow;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport DriverRequestRow from \"./DriverRequestRow\";\r\nimport { getData } from \"../../../TraderFunctions\";\r\n\r\nclass DriverRequestsTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DriverRequestPackages: [],\r\n            Searching: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DriverRequestPackages\",\r\n                Params: {\r\n                    JobOfferID: this.props.JobOfferID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver request packages found.\") {\r\n                    this.props.OnRequestsFound(response.DriverRequestPackages.length);\r\n                    this.setState({\r\n                        DriverRequestPackages: response.DriverRequestPackages,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.props.OnRequestsFound(0);\r\n                    this.setState({\r\n                        DriverRequestPackages: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DriverRequests\",\r\n                Params: {\r\n                    JobOfferID: this.props.JobOfferID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver requests found.\") {\r\n                    this.setState({\r\n                        DriverRequests: response.DriverRequests\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DriverRequests: []\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const jobOfferType = this.props.JobOfferType;\r\n\r\n        if (this.state.Searching || this.state.DriverRequestPackages.length === 0) {\r\n            return <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor={jobOfferType === \"Fixed-Price\" ? \"requests\" : \"bids\"} />;\r\n        }\r\n        else {\r\n            const driverRequestPackages = this.state.DriverRequestPackages;\r\n\r\n            return <section>\r\n                <div class=\"table-responsive back-color-gray\">\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>NUMBER</th>\r\n                                <th>DRIVER</th>\r\n                                <th>REQUESTED ON</th>\r\n                                {jobOfferType === \"Auctionable\" ? <th>BID PRICE</th> : null}\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {driverRequestPackages.map((driverRequestPackage, index) => {\r\n                                return <DriverRequestRow key={index}\r\n                                    Index={index}\r\n                                    Price={this.props.Price}\r\n                                    TraderOnJob={this.props.TraderOnJob}\r\n                                    DriverRequestPackage={driverRequestPackage}\r\n                                    OnJobAssigned={this.props.OnJobAssigned} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default DriverRequestsTable;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport PlaceInput from \"../../../../../controls/PlaceInput\";\r\nimport { updateJobOffer } from \"../../../TraderFunctions.js\";\r\n\r\nclass EditJobOfferDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const {\r\n            JobOffer\r\n        } = this.props;\r\n\r\n        this.state = {\r\n            LoadingPlace: {\r\n                Address: JobOffer.LoadingPlace,\r\n                Lat: JobOffer.LoadingLat,\r\n                Lng: JobOffer.LoadingLng\r\n            },\r\n            UnloadingPlace: {\r\n                Address: JobOffer.UnloadingPlace,\r\n                Lat: JobOffer.UnloadingLat,\r\n                Lng: JobOffer.UnloadingLng\r\n            },\r\n            TripType: JobOffer.TripType,\r\n            CargoType: JobOffer.CargoType,\r\n            CargoWeight: JobOffer.CargoWeight,\r\n            LoadingDate: JobOffer.LoadingDate,\r\n            LoadingTime: JobOffer.LoadingTime,\r\n            AcceptedDelay: JobOffer.AcceptedDelay,\r\n            Price: JobOffer.Price,\r\n            JobOfferType: JobOffer.JobOfferType,\r\n            EntryExit: JobOffer.EntryExit,\r\n\r\n            ValidCargoType: true,\r\n            ValidCargoWeight: true,\r\n            ValidLoadingPlace: true,\r\n            ValidUnloadingPlace: true,\r\n            ValidLoadingDate: true,\r\n            ValidLoadingTime: true,\r\n            ValidAcceptedDelay: true,\r\n            ValidPrice: true,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: null,\r\n\r\n            Errors: {\r\n                CargoType: \"\",\r\n                CargoWeight: \"\",\r\n                LoadingPlace: \"\",\r\n                UnloadingPlace: \"\",\r\n                LoadingDate: \"\",\r\n                LoadingTime: \"\",\r\n                AcceptedDelay: \"\",\r\n                Price: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidCargoType,\r\n            ValidCargoWeight,\r\n            ValidLoadingDate,\r\n            ValidLoadingTime,\r\n            ValidAcceptedDelay,\r\n            ValidPrice\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"CargoType\":\r\n                ValidCargoType = (value !== \"\");\r\n                Errors.CargoType = ValidCargoType ? \"\" : \"Cargo type is required.\";\r\n                break;\r\n            case \"CargoWeight\":\r\n                ValidCargoWeight = (value !== \"\");\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight is required.\";\r\n\r\n                if (Errors.CargoWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCargoWeight = (value >= 100);\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight must be greater than 100 lbs.\";\r\n                break;\r\n            case \"LoadingDate\":\r\n                ValidLoadingDate = (value !== \"\");\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date is required.\";\r\n\r\n                if (Errors.LoadingDate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidLoadingDate = (new Date(value) >= new Date());\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date must be later than yesterday.\";\r\n                break;\r\n            case \"LoadingTime\":\r\n                ValidLoadingTime = (value !== \"\");\r\n                Errors.LoadingTime = ValidLoadingTime ? \"\" : \"Loading time is required.\";\r\n                break;\r\n            case \"AcceptedDelay\":\r\n                ValidAcceptedDelay = (value !== \"\");\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay is required.\";\r\n\r\n                if (Errors.AcceptedDelay !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidAcceptedDelay = (value >= 0 && value <= 48);\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay can be in the range of 0 to 48 hours.\";\r\n                break;\r\n            case \"Price\":\r\n                ValidPrice = (value !== \"\");\r\n                Errors.Price = ValidPrice ? \"\" : \"Price is required.\";\r\n\r\n                if (Errors.Price !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPrice = (value > 0.00);\r\n                Errors.Price = ValidPrice ? \"\" : \"Price must be more than $0.00.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCargoType: ValidCargoType,\r\n            ValidCargoWeight: ValidCargoWeight,\r\n            ValidLoadingDate: ValidLoadingDate,\r\n            ValidLoadingTime: ValidLoadingTime,\r\n            ValidAcceptedDelay: ValidAcceptedDelay,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: ValidCargoType &&\r\n                    ValidCargoWeight &&\r\n                    ValidLoadingDate &&\r\n                    ValidLoadingTime &&\r\n                    ValidAcceptedDelay &&\r\n                    ValidPrice\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (!this.state.LoadingPlace) {\r\n            let {\r\n                Errors\r\n            } = this.state;\r\n\r\n            Errors.LoadingPlace = \"Loading place is required.\";\r\n\r\n            this.setState({\r\n                Errors: Errors\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        if (!this.state.UnloadingPlace) {\r\n            let {\r\n                Errors\r\n            } = this.state;\r\n\r\n            Errors.UnloadingPlace = \"Unloading place is required.\";\r\n\r\n            this.setState({\r\n                Errors: Errors\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const updatedJobOffer = {\r\n            Token: localStorage.Token,\r\n            JobOfferID: this.props.JobOffer.JobOfferID,\r\n            TripType: this.state.TripType,\r\n            CargoType: this.state.CargoType,\r\n            CargoWeight: this.state.CargoWeight,\r\n            LoadingPlace: this.state.LoadingPlace.Address,\r\n            LoadingLat: this.state.LoadingPlace.Lat,\r\n            LoadingLng: this.state.LoadingPlace.Lng,\r\n            UnloadingPlace: this.state.UnloadingPlace.Address,\r\n            UnloadingLat: this.state.UnloadingPlace.Lat,\r\n            UnloadingLng: this.state.UnloadingPlace.Lng,\r\n            LoadingDate: this.state.LoadingDate,\r\n            LoadingTime: this.state.LoadingTime,\r\n            EntryExit: this.state.EntryExit,\r\n            Price: this.state.Price,\r\n            AcceptedDelay: this.state.AcceptedDelay,\r\n            JobOfferType: this.state.JobOfferType\r\n        };\r\n\r\n        await updateJobOffer(updatedJobOffer).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Job offer is updated.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            LoadingPlace,\r\n            UnloadingPlace,\r\n            TripType,\r\n            CargoType,\r\n            CargoWeight,\r\n            LoadingDate,\r\n            LoadingTime,\r\n            AcceptedDelay,\r\n            Price,\r\n            JobOfferType,\r\n            EntryExit,\r\n            ValidForm,\r\n            ShowPreloader,\r\n            Errors,\r\n        } = this.state;\r\n\r\n        const {\r\n            DialogID\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`edit-job-offer-dialog-${DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"type-h3 color-default p-t-xxs\">Edit Job Offer</div>\r\n                                        <div className=\"row p-t-xxs\">\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Place</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <PlaceInput Address={LoadingPlace.Address}\r\n                                                        OnPlaceSelected={place => {\r\n                                                            this.setState({\r\n                                                                LoadingPlace: place,\r\n                                                            });\r\n                                                        }} />\r\n                                                    <span className=\"text-danger\">{Errors.LoadingPlace}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Unloading Place</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <PlaceInput Address={UnloadingPlace.Address}\r\n                                                        OnPlaceSelected={place => {\r\n                                                            this.setState({\r\n                                                                UnloadingPlace: place,\r\n                                                            });\r\n                                                        }} />\r\n                                                    <span className=\"text-danger\">{Errors.UnloadingPlace}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Trip Type</label><br />\r\n                                                    <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                        <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                            <span>{TripType}</span>\r\n                                                            <span className=\"caret\"></span>\r\n                                                        </button>\r\n                                                        <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                            <li><a onClick={() => { this.setState({ TripType: \"One Way\" }); }}>One Way</a></li>\r\n                                                            <li><a onClick={() => { this.setState({ TripType: \"Two Way\" }); }}>Two Way</a></li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Cargo Type</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"CargoType\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={CargoType} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.CargoType}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Cargo Weight (lbs)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"CargoWeight\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={CargoWeight} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.CargoWeight}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Date</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"date\" name=\"LoadingDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={LoadingDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.LoadingDate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Time</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"time\" name=\"LoadingTime\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={LoadingTime} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.LoadingTime}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Accepted Delay (Hours)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"AcceptedDelay\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={AcceptedDelay} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.AcceptedDelay}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Price (USD)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" min=\"0.00\" step=\"0.01\" max=\"100.00\" name=\"Price\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={Price} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.Price}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <button type=\"button\" data-toggle=\"button\" className=\"btn btn-toggle-switch\"\r\n                                                        autocomplete=\"off\" aria-pressed=\"false\"\r\n                                                        onClick={() => {\r\n                                                            this.state.JobOfferType = (JobOfferType === \"Fixed-Price\") ?\r\n                                                                \"Auctionable\" : \"Fixed-Price\";\r\n                                                        }}>\r\n                                                        <span className=\"stateLabel stateLabel-on\">Auctionable Job Offer</span>\r\n                                                        <span className=\"stateLabel stateLabel-off\">Fixed-Price Job Offer</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"checkbox\">\r\n                                                        <label className=\"control-label\">\r\n                                                            <input type=\"checkbox\" name=\"EntryExit\"\r\n                                                                value={EntryExit} onChange={() => {\r\n                                                                    this.state.EntryExit = EntryExit ? false : true;\r\n                                                                }}></input>\r\n                                                            <span>Entry/Exit</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default EditJobOfferDialog;","import React, { Component } from \"react\";\r\nimport DriverRequestsTable from \"./DriverRequestsTable\";\r\nimport EditJobOfferDialog from \"./EditJobOfferDialog\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { deleteJobOffer } from \"../../../TraderFunctions\";\r\nimport JobOfferContainer from \"../../../../../containers/jobOffer/JobOfferContainer\";\r\n\r\nclass JobOfferPackageItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Preloader: null,\r\n            NumberOfRequests: 0\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async jobOfferID => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedJobOffer = {\r\n            Token: localStorage.Token,\r\n            JobOfferID: jobOfferID\r\n        };\r\n\r\n        console.log(`Going to delete Job offer...`);\r\n\r\n        await deleteJobOffer(discardedJobOffer).then(response => {\r\n            if (response.Message === \"Job offer is deleted.\") {\r\n                this.props.OnJobOfferUpdated();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const jobOffer = this.props.JobOfferPackage.JobOffer;\r\n        const hasDriverRequests = this.props.JobOfferPackage.HasDriverRequests;\r\n\r\n        return <section>\r\n            <JobOfferContainer Index={index} JobOffer={jobOffer} />\r\n\r\n            <div className=\"text-right p-xxs back-color-gray\">\r\n                <button type=\"button\" className=\"btn btn-default\"\r\n                    data-toggle=\"modal\"\r\n                    disabled={hasDriverRequests}\r\n                    data-target={`#edit-job-offer-dialog-${index}`}>Edit</button>\r\n                <button className=\"btn btn-danger\" onClick={async () => { await this.onDelete(jobOffer.JobOfferID); }}>Delete</button>\r\n            </div>\r\n\r\n            <EditJobOfferDialog\r\n                DialogID={index}\r\n                JobOffer={jobOffer}\r\n                CanEdit={() => { return (this.state.NumberOfRequests === 0) ? true : false }}\r\n                OnOK={() => { this.props.OnJobOfferUpdated(); }} />\r\n\r\n            <div className=\"back-color-gray\" data-toggle=\"collapse\" aria-expanded=\"false\"\r\n                data-target={`#job-offer-package-${index}`}\r\n                onMouseDown={async () => { await this.RefreshDriverRequestsTable(); }}>\r\n\r\n                <div className=\"type-h4 text-right color-default p-xxxs\">\r\n                    <span class=\"badge back-color-danger m-r-xxxs\">{this.state.NumberOfRequests}</span>\r\n                    {(jobOffer.JobOfferType === \"Fixed-Price\") ? \"Driver Requests\" : \"Driver Bids\"}\r\n                    <i className=\"fas fa-ellipsis-v\"></i>\r\n                    <i class=\"glyph glyph-add\"></i>\r\n                    <i class=\"glyph glyph-remove\"></i>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`job-offer-package-${index}`}>\r\n\r\n                <DriverRequestsTable\r\n                    Refresh={refresh => { this.RefreshDriverRequestsTable = refresh; }}\r\n                    OnRequestsFound={number => {\r\n                        this.setState({\r\n                            NumberOfRequests: number\r\n                        });\r\n                    }}\r\n                    JobOfferID={jobOffer.JobOfferID}\r\n                    JobOfferType={jobOffer.JobOfferType}\r\n                    Price={jobOffer.Price}\r\n                    TraderOnJob={this.props.TraderOnJob}\r\n                    OnJobAssigned={this.props.OnJobOfferUpdated} />\r\n\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            </div>\r\n\r\n            {this.state.Preloader}\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobOfferPackageItem;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport PlaceInput from \"../../../../../controls/PlaceInput\";\r\nimport { addJobOffer } from \"../../../TraderFunctions.js\";\r\n\r\nclass AddJobOfferDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LoadingPlace: null,\r\n            UnloadingPlace: null,\r\n            TripType: \"One Way\",\r\n            CargoType: \"\",\r\n            CargoWeight: 0,          \r\n            LoadingDate: new Date(),\r\n            LoadingTime: new Date().getTime(),\r\n            AcceptedDelay: 0,\r\n            Price: 0.00,\r\n            JobOfferType: \"Fixed-Price\",\r\n            EntryExit: 0,\r\n\r\n            ValidCargoType: false,\r\n            ValidCargoWeight: false,\r\n            ValidLoadingPlace: false,\r\n            ValidUnloadingPlace: false,\r\n            ValidLoadingDate: false,\r\n            ValidLoadingTime: false,\r\n            ValidAcceptedDelay: false,\r\n            ValidPrice: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: null,\r\n\r\n            Errors: {\r\n                CargoType: \"\",\r\n                CargoWeight: \"\",\r\n                LoadingPlace: \"\",\r\n                UnloadingPlace: \"\",\r\n                LoadingDate: \"\",\r\n                LoadingTime: \"\",\r\n                AcceptedDelay: \"\",\r\n                Price: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidCargoType,\r\n            ValidCargoWeight,\r\n            ValidLoadingDate,\r\n            ValidLoadingTime,\r\n            ValidAcceptedDelay,\r\n            ValidPrice\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"CargoType\":\r\n                ValidCargoType = (value !== \"\");\r\n                Errors.CargoType = ValidCargoType ? \"\" : \"Cargo type is required.\";\r\n                break;\r\n            case \"CargoWeight\":\r\n                ValidCargoWeight = (value !== \"\");\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight is required.\"; \r\n\r\n                if (Errors.CargoWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCargoWeight = (value >= 100);\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight must be greater than 100 lbs.\";\r\n                break;\r\n            case \"LoadingDate\":\r\n                ValidLoadingDate = (value !== \"\");\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date is required.\";\r\n\r\n                if (Errors.LoadingDate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidLoadingDate = (new Date(value) >= new Date());\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date must be later than yesterday.\";\r\n                break;\r\n            case \"LoadingTime\":\r\n                ValidLoadingTime = (value !== \"\");\r\n                Errors.LoadingTime = ValidLoadingTime ? \"\" : \"Loading time is required.\";\r\n                break;\r\n            case \"AcceptedDelay\":\r\n                ValidAcceptedDelay = (value !== \"\");\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay is required.\";\r\n\r\n                if (Errors.AcceptedDelay !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidAcceptedDelay = (value >= 0 && value <= 48);\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay can be in the range of 0 to 48 hours.\";\r\n                break;\r\n            case \"Price\":\r\n                ValidPrice = (value !== \"\");\r\n                Errors.Price = ValidPrice ? \"\" : \"Price is required.\";\r\n\r\n                if (Errors.Price !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPrice = (value > 0.00);\r\n                Errors.Price = ValidPrice ? \"\" : \"Price must be more than $0.00.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCargoType: ValidCargoType,\r\n            ValidCargoWeight: ValidCargoWeight,\r\n            ValidLoadingDate: ValidLoadingDate,\r\n            ValidLoadingTime: ValidLoadingTime,\r\n            ValidAcceptedDelay: ValidAcceptedDelay,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: ValidCargoType &&\r\n                        ValidCargoWeight &&\r\n                        ValidLoadingDate &&\r\n                        ValidLoadingTime &&\r\n                        ValidAcceptedDelay &&\r\n                        ValidPrice\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (!this.state.LoadingPlace) {\r\n            let {\r\n                Errors\r\n            } = this.state;\r\n\r\n            Errors.LoadingPlace = \"Loading place is required.\";\r\n\r\n            this.setState({\r\n                Errors: Errors\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        if (!this.state.UnloadingPlace) {\r\n            let {\r\n                Errors\r\n            } = this.state;\r\n\r\n            Errors.UnloadingPlace = \"Unloading place is required.\";\r\n\r\n            this.setState({\r\n                Errors: Errors\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const newJobOffer = {\r\n            Token: localStorage.Token,\r\n            TripType: this.state.TripType,\r\n            CargoType: this.state.CargoType,\r\n            CargoWeight: this.state.CargoWeight,\r\n            LoadingPlace: this.state.LoadingPlace.Address,\r\n            LoadingLat: this.state.LoadingPlace.Lat,\r\n            LoadingLng: this.state.LoadingPlace.Lng,\r\n            UnloadingPlace: this.state.UnloadingPlace.Address,\r\n            UnloadingLat: this.state.UnloadingPlace.Lat,\r\n            UnloadingLng: this.state.UnloadingPlace.Lng,\r\n            LoadingDate: this.state.LoadingDate,\r\n            LoadingTime: this.state.LoadingTime,\r\n            EntryExit: this.state.EntryExit,\r\n            Price: this.state.Price,\r\n            AcceptedDelay: this.state.AcceptedDelay,\r\n            JobOfferType: this.state.JobOfferType\r\n        };\r\n\r\n        console.log(\"Going to add Job offer.\");\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        await addJobOffer(newJobOffer).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Job offer is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            TripType,\r\n            CargoType,\r\n            CargoWeight,\r\n            LoadingDate,\r\n            LoadingTime,\r\n            AcceptedDelay,\r\n            Price,\r\n            JobOfferType,\r\n            EntryExit,\r\n            ValidForm,\r\n            ShowPreloader,\r\n            Errors,\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"add-job-offer-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"type-h3 color-default p-t-xxs\">Add Job Offer</div>\r\n                                        <div className=\"row p-t-xxs\">\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Place</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <PlaceInput Address=\"\"\r\n                                                        OnPlaceSelected={place => {\r\n                                                            this.setState({\r\n                                                                LoadingPlace: place,\r\n                                                            });\r\n                                                        }} />\r\n                                                    <span className=\"text-danger\">{Errors.LoadingPlace}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Unloading Place</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <PlaceInput Address=\"\"\r\n                                                        OnPlaceSelected={place => {\r\n                                                            this.setState({\r\n                                                                UnloadingPlace: place,\r\n                                                            });\r\n                                                        }} />\r\n                                                    <span className=\"text-danger\">{Errors.UnloadingPlace}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Trip Type</label><br />\r\n                                                    <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                        <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                            <span>{TripType}</span>\r\n                                                            <span className=\"caret\"></span>\r\n                                                        </button>\r\n                                                        <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                            <li><a onClick={() => { this.setState({ TripType: \"One Way\" }); }}>One Way</a></li>\r\n                                                            <li><a onClick={() => { this.setState({ TripType: \"Two Way\" }); }}>Two Way</a></li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Cargo Type</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"CargoType\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={CargoType} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.CargoType}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Cargo Weight (lbs)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"CargoWeight\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={CargoWeight} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.CargoWeight}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Date</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"date\" name=\"LoadingDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={LoadingDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.LoadingDate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Time</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"time\" name=\"LoadingTime\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={LoadingTime} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.LoadingTime}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Accepted Delay (Hours)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"AcceptedDelay\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={AcceptedDelay} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.AcceptedDelay}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Price (USD)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" min=\"0.00\" step=\"0.01\" max=\"100.00\" name=\"Price\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={Price} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.Price}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <button type=\"button\" data-toggle=\"button\" className=\"btn btn-toggle-switch\"\r\n                                                        autocomplete=\"off\" aria-pressed=\"false\"\r\n                                                        onClick={() => {\r\n                                                            this.state.JobOfferType = (JobOfferType === \"Fixed-Price\") ?\r\n                                                                \"Auctionable\" : \"Fixed-Price\";\r\n                                                        }}>\r\n                                                        <span className=\"stateLabel stateLabel-on\">Auctionable Job Offer</span>\r\n                                                        <span className=\"stateLabel stateLabel-off\">Fixed-Price Job Offer</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"checkbox\">\r\n                                                        <label className=\"control-label\">\r\n                                                            <input type=\"checkbox\" name=\"EntryExit\"\r\n                                                                value={EntryExit} onChange={() => {\r\n                                                                    this.state.EntryExit = EntryExit ? false : true;\r\n                                                                }}></input>\r\n                                                            <span>Entry/Exit</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddJobOfferDialog;","import React, { Component } from \"react\";\r\nimport { getData } from \"../../../TraderFunctions\";\r\nimport JobOfferPackageItem from \"./JobOfferPackageItem\";\r\nimport AddJobOfferDialog from \"./AddJobOfferDialog\";\r\nimport ProgressBar from \"../../../../../controls/ProgressBar\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\n\r\nclass JobOffersList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllJobOfferPackages: [],\r\n            JobOfferPackages: [],\r\n            TraderOnJob: false,\r\n            SearchString: \"\",\r\n            Searching: null,\r\n            Refreshing: false,\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobOfferPackages\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job offer packages found.\") {\r\n                    this.setState({\r\n                        AllJobOfferPackages: response.JobOfferPackages,\r\n                        JobOfferPackages: response.JobOfferPackages,\r\n                        TraderOnJob: response.TraderOnJob,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllJobOfferPackages: [],\r\n                        JobOfferPackages: [],\r\n                        TraderOnJob: false,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobOfferPackages\"\r\n            };\r\n\r\n            this.setState({\r\n                Refreshing: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job offer packages found.\") {\r\n                    this.setState({\r\n                        AllJobOfferPackages: response.JobOfferPackages,\r\n                        JobOfferPackages: response.JobOfferPackages,\r\n                        TraderOnJob: response.TraderOnJob,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllJobOfferPackages: [],\r\n                        JobOfferPackages: [],\r\n                        TraderOnJob: false,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.SearchString === \"\") {\r\n            this.setState({\r\n                JobOfferPackages: this.state.AllJobOfferPackages\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allJobOfferPackages = this.state.AllJobOfferPackages;\r\n        let filteredJobOfferPackages = [];\r\n        let count = 0;\r\n\r\n        for (let jobOfferPackage of allJobOfferPackages) {\r\n            let jobOffer = jobOfferPackage.JobOffer;\r\n\r\n            if (jobOffer.LoadingPlace.includes(this.state.SearchString) ||\r\n                jobOffer.UnloadingPlace.includes(this.state.SearchString)) {\r\n                filteredJobOfferPackages[count++] = jobOfferPackage;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            JobOfferPackages: filteredJobOfferPackages\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const jobOfferPackages = this.state.JobOfferPackages;\r\n        return <section>\r\n            {this.state.TraderOnJob ?\r\n                <div class=\"alert alert-danger m-n\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xs-24\">\r\n                                <p><span className=\"fas fa-exclamation-circle m-r-xxxs\"></span>While you are engaged in an On-Going Job, you cannot assign more jobs to drivers. View details in <span className=\"color-default\">On-Going Job</span> tab.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> :\r\n                null}\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-hand-holding-usd\"></span>   Job Offers</div>\r\n                            <p className=\"color-light\">Hi There! Want to transport your freight somewhere? Why not create a new job offer now!</p>\r\n                            <div className=\"btn-group\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-primary\"\r\n                                    data-toggle=\"modal\"\r\n                                    data-target=\"#add-job-offer-dialog\">New Job Offer</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <AddJobOfferDialog\r\n                OnOK={() => {\r\n                    this.onComponentUpdated();\r\n                }} />\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Your Job Offers\r\n                    {this.state.Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search by Places\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={this.state.SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            {(jobOfferPackages.length === 0) ?\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            {this.state.Searching ? <div className=\"col-md-24 text-center\">\r\n                                <div>\r\n                                    <div className=\"type-h3\" style={{ color: \"#008575\" }}>Searching</div>\r\n                                    <ProgressBar />\r\n                                </div>\r\n                            </div> : <div className=\"col-md-24 text-center\">\r\n                                    <h3><span className=\"fas fa-exclamation-triangle\" style={{ color: \"#FFBF15\" }}></span> No job offers found.</h3>\r\n                                </div>}\r\n                        </div>\r\n                    </div>\r\n                </div> : <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {jobOfferPackages.map((jobOfferPackage, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <JobOfferPackageItem Index={index}\r\n                                JobOfferPackage={jobOfferPackage}\r\n                                OnJobOfferUpdated={this.onComponentUpdated}\r\n                                TraderOnJob={this.state.TraderOnJob} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n            \r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobOffersList;","import React, { Component } from \"react\";\r\nimport JobOffersList from \"./JobOffersList.js\";\r\n\r\nclass JobOffers extends Component {\r\n    render() {\r\n        return <section>\r\n            <JobOffersList Refresh={this.props.Refresh} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobOffers;","import React, { Component } from \"react\";\r\nimport JobContainer from \"../../../../../containers/onGoingJob/JobContainer\";\r\n\r\nclass Job extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const onGoingJob = this.props.OnGoingJob;\r\n        const hasObjections = this.props.HasObjections;\r\n\r\n        let loadingDate = new Date(onGoingJob.LoadingDate);\r\n        loadingDate.setHours((parseInt(onGoingJob.LoadingTime.substring(0, 2))));\r\n        loadingDate.setMinutes(parseInt(onGoingJob.LoadingTime.substring(3, 5)));\r\n        loadingDate.setSeconds(parseInt(onGoingJob.LoadingTime.substring(6)));\r\n\r\n        let JumbotronContent;\r\n\r\n        if (onGoingJob.CompletedByDriver) {\r\n            JumbotronContent = <section>\r\n                <h3><span className=\"fas fa-smile p-r-xxxs\"></span>Driver has Completed the Job</h3>\r\n                <div class=\"type-sh3\">Your Approval is Still Required</div>\r\n            </section>;\r\n        }\r\n        else if (hasObjections) {\r\n            JumbotronContent = <h3><span className=\"fas fa-exclamation p-r-xxxs\"></span>This Job is Terminated.</h3>;\r\n        }\r\n        else {\r\n            let dateDifference = loadingDate - new Date();\r\n            const days = Math.floor(dateDifference / 86400000);\r\n            const hours = Math.floor((dateDifference % 86400000) / 3600000);\r\n            const minutes = Math.round(((dateDifference % 86400000) % 3600000) / 60000);\r\n\r\n            let dayString = (days > 0) ? `${days} Days ` : \"\";\r\n            let hourString = (hours > 0) ? `${hours} Hours ` : \"\";\r\n            let minuteString = (minutes > 0) ? `${minutes} Minutes ` : \"\";\r\n\r\n            let remainingTime = `${dayString}${hourString}${minuteString} Left for Your Driver to Arrive`;\r\n\r\n            if (dateDifference < 0) {\r\n                remainingTime = \"Loading Time has Passed\";\r\n            }\r\n\r\n            JumbotronContent = <section>\r\n                <h3><span className=\"fas fa-clock\"></span>   {remainingTime}</h3>\r\n                <div class=\"type-sh3\">\r\n                    <span className=\"fas fa-tag m-r-xxs\"></span>{`This Job Costs You $${onGoingJob.Price}.`}</div>\r\n                <div class=\"col-md-12 col-md-offset-6\">\r\n                    <div class=\"type-p3\">{(onGoingJob.AcceptedDelay > 0) ?\r\n                        <span>\r\n                            <span className=\"fas fa-leaf m-r-xxxs\"></span>\r\n                            <span>{`The Driver has a relaxation of ${onGoingJob.AcceptedDelay} Hours.`}</span>\r\n                        </span> :\r\n                        <span>{\"Hoping for the driver to be on time.\"}</span>}\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n\r\n        return <section>\r\n            <div class=\"jumbotron theme-dark\" style={{ background: \"linear-gradient(to right bottom, #008575, #005162)\" }}>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-24 text-center\">\r\n                            {JumbotronContent}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <JobContainer OnGoingJob={onGoingJob} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Job;","import React, { useState } from \"react\";\r\nimport { withGoogleMap, withScriptjs, GoogleMap, DirectionsRenderer, Marker } from \"react-google-maps\";\r\nconst Key = \"AIzaSyD_U_2NzdPIL7TWb8ECBHWO1eROR2yrebI\";\r\n\r\nconst Directions = props => {\r\n    const [Directions, SetDirections] = useState(null);\r\n\r\n    const { OnGoingJob } = props;\r\n\r\n    const directionsService = new window.google.maps.DirectionsService();\r\n\r\n    const origin = { lat: OnGoingJob.LoadingLat, lng: OnGoingJob.LoadingLng };\r\n    const destination = { lat: OnGoingJob.UnloadingLat, lng: OnGoingJob.UnloadingLng };\r\n\r\n    directionsService.route({\r\n        origin: origin,\r\n        destination: destination,\r\n        travelMode: window.google.maps.TravelMode.DRIVING\r\n    }, (result, status) => {\r\n        if (status === window.google.maps.DirectionsStatus.OK) {\r\n            SetDirections(result);\r\n        } else {\r\n            console.error(`error fetching directions ${result}`);\r\n        }\r\n    });\r\n\r\n    return <DirectionsRenderer directions={Directions} options={{\r\n        suppressMarkers: true\r\n    }} />;\r\n};\r\n\r\nconst Map = props => {\r\n    const [ShowInfoWindow, SetShowInfoWindow] = useState(false);\r\n\r\n    const {\r\n        OnGoingJob,\r\n        DriverLocation\r\n    } = props;\r\n\r\n    return <GoogleMap\r\n        defaultZoom={10}>\r\n\r\n        <Marker key={1} position={{ lat: OnGoingJob.LoadingLat, lng: OnGoingJob.LoadingLng }}\r\n            icon={{\r\n                url: \"./images/source.svg\",\r\n                scaledSize: new window.google.maps.Size(30, 30)\r\n            }} />\r\n\r\n        <Marker key={1} position={{ lat: OnGoingJob.UnloadingLat, lng: OnGoingJob.UnloadingLng }}\r\n            icon={{\r\n                url: \"./images/destination.svg\",\r\n                scaledSize: new window.google.maps.Size(30, 30)\r\n            }} />\r\n\r\n        {DriverLocation ?\r\n            <Marker key={1} position={{ lat: DriverLocation.Lat, lng: DriverLocation.Lng }}\r\n                icon={{\r\n                    url: \"./images/driver_marker.svg\",\r\n                    scaledSize: new window.google.maps.Size(40, 40)\r\n                }} /> : null}\r\n\r\n        <Directions OnGoingJob={OnGoingJob} />\r\n    </GoogleMap>;\r\n}\r\n\r\nconst MapWrapped = withScriptjs(withGoogleMap(Map));\r\n\r\nconst OnGoingJobMap = props => {\r\n    return <div style={{ width: \"100%\", height: \"400px\" }}>\r\n        <MapWrapped\r\n            googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${Key}`}\r\n            loadingElement={<div style={{ height: `100%` }} />}\r\n            containerElement={<div style={{ height: `100%` }} />}\r\n            mapElement={<div style={{ height: `100%` }} />}\r\n            OnGoingJob={props.OnGoingJob}\r\n            DriverLocation={props.DriverLocation} />\r\n    </div>;\r\n}\r\n\r\nexport default OnGoingJobMap;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\nimport { getData, addObjectionReason } from \"../../../../TraderFunctions\";\r\n\r\nclass ReasonsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ObjectionReasons: [],\r\n            AddPressed: false,\r\n            NewReason: \"\",\r\n            ValidNewReason: false,\r\n\r\n            ValidForm: false,\r\n            ProgressRing: null,\r\n\r\n            Errors: {\r\n                NewReason: \"0\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"ObjectionReasons\"\r\n            };\r\n\r\n            this.setState({\r\n                ProgressRing: <ProgressRing />\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Objection reasons found.\") {\r\n                    this.setState({\r\n                        ObjectionReasons: response.ObjectionReasons,\r\n                        ProgressRing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        ObjectionReasons: [],\r\n                        ProgressRing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewReason = this.state.ValidNewReason;\r\n\r\n        switch (field) {\r\n            case \"NewReason\":\r\n                ValidNewReason = (value.length > 0 && value.length <= 50);\r\n                Errors.NewReason = ValidNewReason ? value.length : \"Too long...\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewReason: ValidNewReason\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidNewReason\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ProgressRing: <ProgressRing />\r\n        });\r\n\r\n        const newObjectionReason = {\r\n            Token: localStorage.Token,\r\n            Reason: this.state.NewReason\r\n        };\r\n\r\n        console.log(\"Going to add Objection reason...\");\r\n\r\n        await addObjectionReason(newObjectionReason).then(response => {\r\n            if (response.Message === \"Objection reason is added.\") {\r\n                let objectionReasons = this.state.ObjectionReasons;\r\n                let errors = this.state.Errors;\r\n\r\n                objectionReasons.push(response.ObjectionReason);\r\n                errors.NewReason = \"0\";\r\n\r\n                this.setState({\r\n                    AddPressed: false,\r\n                    ObjectionReasons: objectionReasons,\r\n                    Errors: errors,\r\n                    NewReason: \"\"\r\n                });\r\n            }\r\n\r\n            this.setState({\r\n                ProgressRing: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const objectionReasons = this.state.ObjectionReasons;\r\n\r\n        return <section>\r\n            {this.state.ProgressRing}\r\n            <div class=\"entity-list entity-list-expandable\">\r\n                <div class=\"entity-list entity-list-add-item-button\">\r\n                    <a class={this.state.AddPressed ? \"entity-list-item active\" : \"entity-list-item\"}>\r\n                        <div class=\"item-icon\" onClick={() => {\r\n                            this.state.AddPressed ?\r\n                                this.setState({ AddPressed: false }) :\r\n                                this.setState({ AddPressed: true });\r\n                        }}>\r\n                            <span class=\"glyph glyph-add\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Add a Reason</div>\r\n                            <div class=\"content-text-secondary\" style={(this.state.Errors.NewReason === \"Too long...\") ? { color: \"#D75A4A\" } : null}>{this.state.Errors.NewReason}</div>\r\n                        </div>\r\n                        <div class=\"item-content-expanded\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <input type=\"text\" className=\"form-control\" name=\"NewReason\" autocomplete=\"off\"\r\n                                    value={this.state.NewReason} onChange={this.onChange} />\r\n                                <input type=\"submit\" value=\"Add\" className=\"btn btn-secondary\" disabled={!this.state.ValidForm} />\r\n                            </form>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                {objectionReasons.map((objectionReason, index) => {\r\n                    return <div key={index} class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-thumbs-down\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <button type=\"button\" class=\"btn btn-secondary\" style={{ margin: \"0px\", minWidth: \"0px\" }}\r\n                                onClick={() => { this.props.OnReasonSelected(objectionReason.Reason); }}>Select</button>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">{`${index + 1}.`}</div>\r\n                            <div class=\"content-text-secondary\">{objectionReason.Reason}</div>\r\n                        </div>\r\n                    </div>;\r\n                })}\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ReasonsList;","import React, { Component } from \"react\";\r\nimport ReasonsList from \"./ReasonsList\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { addJobObjection } from \"../../../../TraderFunctions\";\r\n\r\nclass AddObjectionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Reason: \"Select from the list.\",\r\n            Comment: \"\",\r\n\r\n            ValidReason: false,\r\n            ValidComment: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                Comment: \"0\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidComment = this.state.ValidComment;\r\n\r\n        switch (field) {\r\n            case \"Comment\":\r\n                ValidComment = (value !== \"\");\r\n                Errors.Comment = ValidComment ? \"\" : \"Comment is required\";\r\n\r\n                if (Errors.Comment !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidComment = (value.length <= 200);\r\n                Errors.Comment = ValidComment ? value.length : \"Too long...\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidComment: ValidComment\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidReason && this.state.ValidComment\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const newJobObjection = {\r\n            Token: localStorage.Token,\r\n            OnGoingJobID: this.props.OnGoingJobID,\r\n            Reason: this.state.Reason,\r\n            Comment: this.state.Comment\r\n        };\r\n\r\n        console.log(\"Going to add job objection...\");\r\n\r\n        await addJobObjection(newJobObjection).then(response => {\r\n            if (response.Message === \"Job objection is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"add-objection-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}\r\n                                    style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Add an Objection</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label>Reason</label>\r\n                                    <input type=\"text\" class=\"form-control\" name=\"Reason\" style={{ maxWidth: \"100%\" }} readonly\r\n                                        value={this.state.Reason} />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label>Comment</label>\r\n                                    <textarea rows=\"4\" class=\"form-control\" style={{ maxWidth: \"100%\" }} name=\"Comment\"\r\n                                        value={this.state.Comment} onChange={this.onChange}></textarea>\r\n                                    <span className=\"text-danger\">{this.state.Errors.Comment}</span>\r\n                                </div>\r\n                                <div style={{ textAlign: \"right\" }}>\r\n                                    <input type=\"submit\" value=\"Add Objection\" className=\"btn btn-primary\" style={{ margin: \"0px\" }} disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                            <br/>\r\n                            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                            <div className=\"type-h4\" style={{ color: \"#008575\", padding: \"10px\", textAlign: \"right\" }}>{\"   Reasons\"}\r\n                                <i className=\"fas fa-ellipsis-v\"></i>\r\n                            </div>\r\n                            <ReasonsList ObjectionReasons={this.props.ObjectionReasons} OnReasonSelected={reason => {\r\n                                this.setState({\r\n                                    Reason: reason,\r\n                                    ValidReason: true\r\n                                }, () => {\r\n                                    this.setState({\r\n                                        ValidForm: this.state.ValidReason && this.state.ValidComment\r\n                                    });\r\n                                });\r\n                            }} />                           \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddObjectionDialog;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport AddObjectionDialog from \"./AddObjectionDialog\";\r\nimport { getData } from \"../../../../TraderFunctions\";\r\nimport JobObjectionContainer from \"../../../../../../containers/onGoingJob/JobObjectionContainer\";\r\n\r\nclass Objections extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobObjections: [],\r\n            Searching: false,\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobObjections\",\r\n                Params: {\r\n                    OnGoingJobID: this.props.OnGoingJobID\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job objections found.\") {\r\n                    this.setState({\r\n                        JobObjections: response.JobObjections,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobObjections: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobObjections\",\r\n                Params: {\r\n                    OnGoingJobID: this.props.OnGoingJobID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job objection packages found.\") {\r\n                    this.setState({\r\n                        JobObjections: response.JobObjections\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobObjections: []\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const jobObjections = this.state.JobObjections;\r\n\r\n        return <section>\r\n            <div class=\"page-header back-color-gradient\">\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-thumbs-down m-r-xxs\"></span>Job Objections</div>\r\n                            <p className=\"color-light\">Objections on this job, either by you or your driver, will terminate the job.</p>\r\n                            <div className=\"btn-group\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-primary\"\r\n                                    data-toggle=\"modal\"\r\n                                    data-target=\"#add-objection-dialog\">Add Objection</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <AddObjectionDialog OnGoingJobID={this.props.OnGoingJobID}\r\n                OnOK={async () => { await this.onComponentUpdated() }} />\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Job Objections</div>\r\n            {(jobObjections.length === 0) ?\r\n                <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor=\"job objctions\" /> : <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {jobObjections.map((jobObjection, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <JobObjectionContainer Index={index}\r\n                                JobObjection={jobObjection} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default Objections;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { approveJob } from \"../../../TraderFunctions\";\r\n\r\nclass ApproveJobDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false\r\n        };\r\n\r\n        this.onApprove = this.onApprove.bind(this);\r\n    }\r\n\r\n    onApprove = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const approvedJob = {\r\n            Token: localStorage.Token,\r\n        }\r\n\r\n        console.log(\"Going to approve the job...\");\r\n\r\n        await approveJob(approvedJob).then(response => {\r\n            if (response.Message === \"Job is approved.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n                return;\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"approve-job-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}\r\n                                    style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div class=\"jumbotron\">\r\n                                <div class=\"container\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-24\">\r\n                                            <img alt=\"stamp.png\" src=\"./images/stamp.png\" height=\"100\" />\r\n                                            <div class=\"type-h3\">Approve Completion</div>\r\n                                            <div class=\"type-sh3\">Your driver has finished the job. We hope your cargo is delivered.</div>\r\n                                            <p><span class=\"color-default\">Note:</span> After approving completion, you can view this job in your <span class=\"color-default\">Completed Jobs</span> tab. You can also rate and review this driver from there. You have to pay the bill from the <span class=\"color-default\">Payments</span> section.</p>\r\n                                            <div class=\"text-right\">\r\n                                                <button class=\"btn btn-primary\" onClick={this.onApprove}>Approve</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ApproveJobDialog;","import React, { Component } from \"react\";\r\n\r\nclass InteractiveRating extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Rating: 0\r\n        };\r\n\r\n        this.onRate = this.onRate.bind(this);\r\n    }\r\n\r\n    onRate = rating => {\r\n        this.props.OnRated(rating);\r\n\r\n        this.setState({\r\n            Rating: rating\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return <section>\r\n            <div class=\"rating\">\r\n                <div class=\"rating-stars\">\r\n                    <ul class=\"rating-stars-background\">\r\n                        <li><i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li>\r\n                    </ul>\r\n                    <ul class=\"rating-stars-value\" style={{ width: `${this.state.Rating}%` }}>\r\n                        <li><i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li>\r\n                    </ul>\r\n                    <div class=\"rating-stars-input\">\r\n                        <button class=\"rating-btn\" title=\"1\" onClick={() => { this.onRate(20); }}><i class=\"glyph glyph-star\"></i></button>\r\n                        <button class=\"rating-btn\" title=\"2\" onClick={() => { this.onRate(40); }}><i class=\"glyph glyph-star\"></i></button>\r\n                        <button class=\"rating-btn\" title=\"3\" onClick={() => { this.onRate(60); }}><i class=\"glyph glyph-star\"></i></button>\r\n                        <button class=\"rating-btn\" title=\"4\" onClick={() => { this.onRate(80); }}><i class=\"glyph glyph-star\"></i></button>\r\n                        <button class=\"rating-btn\" title=\"5\" onClick={() => { this.onRate(100); }}><i class=\"glyph glyph-star\"></i></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default InteractiveRating;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport InteractiveRating from \"../../../../../controls/InteractiveRating\";\r\nimport { addDriverReviewFromOnGoingJob } from \"../../../TraderFunctions\";\r\n\r\nclass ReviewDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Rating: 0,\r\n            Review: \"\",\r\n\r\n            ValidRating: false,\r\n            ValidReview: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Review: \"0\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidReview = this.state.ValidReview;\r\n\r\n        switch (field) {\r\n            case \"Review\":\r\n                ValidReview = (value !== \"\");\r\n                Errors.Review = ValidReview ? \"\" : \"Review is required\";\r\n\r\n                if (Errors.Review !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidReview = (value.length <= 200);\r\n                Errors.Review = ValidReview ? value.length : \"Too long...\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidReview: ValidReview\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidRating && this.state.ValidReview\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newDriverReview = {\r\n            Token: localStorage.Token,\r\n            OnGoingJobID: this.props.OnGoingJobID,\r\n            Rating: this.state.Rating,\r\n            Review: this.state.Review\r\n        };\r\n\r\n        console.log(\"Going to add driver review...\");\r\n\r\n        await addDriverReviewFromOnGoingJob(newDriverReview).then(response => {\r\n            if (response.Message === \"Driver review is added.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"review-dialog-from-on-going-job\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}\r\n                                    style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h3 color-default p-t-n\">Rate and Review</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label>Rate this Driver</label>\r\n                                    <InteractiveRating OnRated={rating => {\r\n                                        this.setState({\r\n                                            Rating: rating,\r\n                                            ValidRating: true\r\n                                        }, () => {\r\n                                            this.setState({\r\n                                                ValidForm: this.state.ValidRating && this.state.ValidReview\r\n                                            });\r\n                                        });\r\n                                    }} />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label>Review</label>\r\n                                    <textarea rows=\"6\" class=\"form-control\" name=\"Review\" style={{ maxWidth: \"100%\" }}\r\n                                        value={this.state.Review} onChange={this.onChange}></textarea>\r\n                                    <span className={(this.state.Errors.Review === \"Too long...\" ||\r\n                                        this.state.Errors.Review === \"Review is required\") ? \"text-danger\" : \"text-accent\"}>{this.state.Errors.Review}</span>\r\n                                </div>\r\n                                <div className=\"text-right\">\r\n                                    <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary m-n\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>                        \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ReviewDialog;","/// <reference path=\".js\" />\r\nimport React, { Component } from \"react\";\r\nimport ApproveJobDialog from \"./ApproveJobDialog\";\r\nimport ReviewDialog from \"./ReviewDialog\";\r\n\r\nclass OnGoingJobOptions extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DriverRated: this.props.DriverRated\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const hasObjections = this.props.HasObjections;\r\n        const completedByDriver = this.props.CompletedByDriver;\r\n        const completedByTrader = this.props.CompletedByTrader;\r\n        const onGoingJobID = this.props.OnGoingJobID;\r\n        const driverRated = this.state.DriverRated;\r\n        const showPreloader = this.state.ShowPreloader;\r\n\r\n        console.log(`DRIVER RATED: ${driverRated}`);\r\n\r\n        return hasObjections ?\r\n            <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"entity-list theme-alt\">\r\n                            <div className=\"entity-list-item\">\r\n                                <div className=\"item-icon\">\r\n                                    <span className=\"fas fa-exclamation-circle\"></span>\r\n                                </div>\r\n                                <div className=\"item-content-primary\">\r\n                                    <div className=\"content-text-primary\">Objectionable Job</div>\r\n                                    <div className=\"content-text-secondary\">\r\n                                        {driverRated ?\r\n                                            \"Since your job has got objections, Naqel team will review them, and consequently take any suitable actions!\" :\r\n                                            \"Since your job has got objections, Naqel team will review them, and consequently take any suitable actions! If you have found the driver to be problematic, you can leave a review.\"}\r\n                                    </div>\r\n                                    <div className=\"content-text-secondary\">\r\n                                        {driverRated ? <span class=\"badge back-color-danger\">DRIVER IS RATED</span> : null}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {driverRated ? null :\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-secondary\"\r\n                                    data-toggle=\"modal\"\r\n                                    data-target=\"#review-dialog-from-on-going-job\">Rate Driver</button>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n                {driverRated ?\r\n                    null :\r\n                    <ReviewDialog OnGoingJobID={onGoingJobID}\r\n                        OnOK={() => {\r\n                            this.setState({\r\n                                DriverRated: true\r\n                            });\r\n                        }} />}\r\n            </section> :\r\n            <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"col-md-24\">\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Job Completion Status</div>\r\n                            <div className=\"type-sh4\">You'll be able to approve this job after your driver completes the job.</div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-24\">\r\n                                <div className=\"entity-list theme-alt\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-certificate\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Completed By Driver?</div>\r\n                                            <div className=\"content-text-secondary\">{completedByDriver ?\r\n                                                <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-certificate\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Approved By You?</div>\r\n                                            <div className=\"content-text-secondary\">{completedByTrader ?\r\n                                                <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                            {completedByDriver ? <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#approve-job-dialog\">Approve</button> : null}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ApproveJobDialog OnOK={this.props.OnJobRemoved} />\r\n            </section>;\r\n             \r\n    }\r\n};\r\n\r\nexport default OnGoingJobOptions;","import React, { Component } from \"react\";\r\nimport FirebaseApp from \"../../../../../res/FirebaseApp\";\r\nimport { getData } from \"../../../TraderFunctions\";\r\nimport ProgressBar from \"../../../../../controls/ProgressBar\";\r\nimport Job from \"./Job\";\r\nimport DriverContainer from \"../../../../../containers/driver/DriverContainer\";\r\nimport TruckContainer from \"../../../../../containers/truck/TruckContainer\";\r\nimport OnGoingJobMap from \"./OnGoingJobMap\";\r\nimport Objections from \"./objections/Objections\";\r\nimport OnGoingJobOptions from \"./OnGoingJobOptions\";\r\n\r\nclass OnGoingJob extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.Database = null;\r\n\r\n        this.state = {\r\n            OnGoingJob: null,\r\n            HasObjections: false,\r\n            DriverLocation: null,\r\n            Loading: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"OnGoingJob\"\r\n            };\r\n\r\n            this.setState({\r\n                Loading: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"On-going job found.\") {\r\n                    if (!this.Database) {\r\n                        this.Database = FirebaseApp.database().ref().child(`${response.OnGoingJob.DriverID}`);\r\n                    }\r\n\r\n                    this.Database.on(\"value\", snapshot => {\r\n                        let driverLocation = null;\r\n                        const value = snapshot.val();\r\n\r\n                        if (value) {\r\n                            const locationCoordinates = value[\"latlong\"].split(\",\");\r\n\r\n                            driverLocation = {\r\n                                Lat: parseFloat(locationCoordinates[0]),\r\n                                Lng: parseFloat(locationCoordinates[1])\r\n                            };\r\n                        }\r\n\r\n                        this.setState({\r\n                            DriverLocation: driverLocation,\r\n                            OnGoingJob: response.OnGoingJob,\r\n                            HasObjections: response.HasObjections,\r\n                            Loading: false\r\n                        });\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        OnGoingJob: null,\r\n                        DriverLocation: null,\r\n                        HasObjections: false,\r\n                        Loading: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"OnGoingJob\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"On-going job found.\") {\r\n                    if (!this.Database) {\r\n                        this.Database = FirebaseApp.database().ref().child(`${response.OnGoingJob.DriverID}`);\r\n                    }\r\n\r\n                    this.Database.on(\"value\", snapshot => {\r\n                        let driverLocation = null;\r\n                        const value = snapshot.val();\r\n\r\n                        if (value) {\r\n                            const locationCoordinates = value[\"latlong\"].split(\",\");\r\n\r\n                            driverLocation = {\r\n                                Lat: parseFloat(locationCoordinates[0]),\r\n                                Lng: parseFloat(locationCoordinates[1])\r\n                            };\r\n                        }\r\n\r\n                        this.setState({\r\n                            DriverLocation: driverLocation,\r\n                            OnGoingJob: response.OnGoingJob,\r\n                            HasObjections: response.HasObjections\r\n                        });\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        OnGoingJob: null,\r\n                        HasObjections: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Loading || !this.state.OnGoingJob) {\r\n            return <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\", width: \"100%\", height: \"100vh\" }}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                alt=\"on_going_jobs.png\" src=\"./images/on_going_jobs.png\" data-source-index=\"2\" />\r\n                        </div>\r\n                        <div className=\"col-md-12 col-md-pull-12\">\r\n                            <div className=\"type-h3\">On-Going Job</div>\r\n                            {this.state.Loading ?\r\n                                <div>\r\n                                    <div class=\"type-sh3\" style={{ color: \"#008575\" }}>Searhcing</div>\r\n                                    <ProgressBar />\r\n                                </div> :\r\n                                <div className=\"type-sh3\">Couldn't Find Your Job...</div>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n        }\r\n        else {\r\n            const onGoingJob = this.state.OnGoingJob;\r\n            const hasObjections = this.state.HasObjections;\r\n\r\n            return <section>\r\n                {hasObjections ?\r\n                    <div class=\"alert alert-danger m-n\">\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xs-24\">\r\n                                    <p><span className=\"fas fa-exclamation-circle m-r-xxxs\"></span>This job has objections, and it cannot be finished now. Actions are pending by Naqel. For more information, please tap on <span className=\"color-default\">Objections</span> tab.</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div> :\r\n                    null}\r\n                <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                    <li role=\"presentation\" className=\"active\">\r\n                        <a href=\"#job-tab\" aria-controls=\"job-tab\" role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={this.refresh}>Job</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#driver-tab\" aria-controls=\"driver-tab\" role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={async () => { await this.RefreshDriverContainer(); }}>Driver</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#truck-tab\" aria-controls=\"truck-tab\" role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={async () => { await this.RefreshTruckContainer(); }}>Truck</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#map-tab\" aria-controls=\"map-tab\" role=\"tab\" data-toggle=\"tab\">Map</a>\r\n                    </li>\r\n                    {onGoingJob.CompletedByDriver ?\r\n                        null :\r\n                        <li role=\"presentation\">\r\n                            <a href=\"#objections-tab\" aria-controls=\"objections-tab\" role=\"tab\" data-toggle=\"tab\"\r\n                                onClick={async () => { await this.RefreshObjections(); }}>Objections</a>\r\n                        </li>}\r\n                </ul>\r\n\r\n                <div className=\"tab-content\">\r\n\r\n                    <div role=\"tabpanel\" className=\"tab-pane active\" id=\"job-tab\">\r\n                        <Job OnGoingJob={onGoingJob} HasObjections={hasObjections} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"driver-tab\">\r\n                        <DriverContainer Refresh={refresh => { this.RefreshDriverContainer = refresh; }} DriverID={onGoingJob.DriverID} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"truck-tab\">\r\n                        <TruckContainer Refresh={refresh => { this.RefreshTruckContainer = refresh; }} DriverID={onGoingJob.DriverID} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"map-tab\">\r\n                        <OnGoingJobMap OnGoingJob={onGoingJob}\r\n                            DriverLocation={this.state.DriverLocation} />\r\n                    </div>\r\n                    {onGoingJob.CompletedByDriver ? \r\n                        null :\r\n                        <div role=\"tabpanel\" className=\"tab-pane\" id=\"objections-tab\">\r\n                            <Objections Refresh={refresh => { this.RefreshObjections = refresh; }} OnGoingJobID={onGoingJob.OnGoingJobID} />\r\n                        </div>}\r\n                </div>\r\n\r\n                <OnGoingJobOptions HasObjections={hasObjections}\r\n                    CompletedByDriver={onGoingJob.CompletedByDriver}\r\n                    CompletedByTrader={onGoingJob.CompletedByTrader}\r\n                    OnGoingJobID={onGoingJob.OnGoingJobID}\r\n                    DriverRated={onGoingJob.DriverRated}\r\n                    OnJobRemoved={this.onComponentUpdated} />\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default OnGoingJob;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport InteractiveRating from \"../../../../../controls/InteractiveRating\";\r\nimport { addDriverReview } from \"../../../TraderFunctions\";\r\n\r\nclass ReviewDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Rating: 0,\r\n            Review: \"\",\r\n\r\n            ValidRating: false,\r\n            ValidReview: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Review: \"0\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidReview = this.state.ValidReview;\r\n\r\n        switch (field) {\r\n            case \"Review\":\r\n                ValidReview = (value !== \"\");\r\n                Errors.Review = ValidReview ? \"\" : \"Review is required\";\r\n\r\n                if (Errors.Review !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidReview = (value.length <= 200);\r\n                Errors.Review = ValidReview ? value.length : \"Too long...\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidReview: ValidReview\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidRating && this.state.ValidReview\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newDriverReview = {\r\n            Token: localStorage.Token,\r\n            CompletedJobID: this.props.CompletedJobID,\r\n            Rating: this.state.Rating,\r\n            Review: this.state.Review\r\n        };\r\n\r\n        console.log(\"Going to add driver review...\");\r\n\r\n        await addDriverReview(newDriverReview).then(response => {\r\n            if (response.Message === \"Driver review is added.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.cancelButton.click();\r\n                this.props.OnOK(response.DriverReview);\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`review-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}\r\n                                    style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h3 color-default p-t-n\">Rate and Review</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label>Rate this Driver</label>\r\n                                    <InteractiveRating OnRated={rating => {\r\n                                        this.setState({\r\n                                            Rating: rating,\r\n                                            ValidRating: true\r\n                                        }, () => {\r\n                                            this.setState({\r\n                                                ValidForm: this.state.ValidRating && this.state.ValidReview\r\n                                            });\r\n                                        });\r\n                                    }} />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label>Review</label>\r\n                                    <textarea rows=\"6\" class=\"form-control\" name=\"Review\" style={{ maxWidth: \"100%\" }}\r\n                                        value={this.state.Review} onChange={this.onChange}></textarea>\r\n                                    <span className={(this.state.Errors.Review === \"Too long...\" ||\r\n                                        this.state.Errors.Review === \"Review is required\") ? \"text-danger\" : \"text-accent\"}>{this.state.Errors.Review}</span>\r\n                                </div>\r\n                                <div className=\"text-right\">\r\n                                    <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary m-n\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>                        \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ReviewDialog;","import React, { Component } from \"react\";\r\nimport CompletedJobContainer from \"../../../../../containers/completedJob/CompletedJobContainer\";\r\nimport DriverContainer from \"../../../../../containers/driver/DriverContainer\";\r\nimport ReviewDialog from \"./ReviewDialog\";\r\nimport Rating from \"../../../../../controls/Rating\";\r\n\r\nclass CompletedJobPackageListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const completedJob = this.props.CompletedJobPackage.CompletedJob;\r\n        const billPaid = this.props.CompletedJobPackage.BillPaid;\r\n        const driverReview = this.props.CompletedJobPackage.DriverReview;\r\n\r\n        return <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n            {!billPaid ?\r\n                <div class=\"alert alert-danger m-n p-n\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xs-24\">\r\n                                <p><span className=\"fas fa-exclamation-circle m-r-xxxs\"></span>Please pay the bill for this job from <span className=\"color-default\">Payments</span> section.\r\n                                    If you have uploaded a payment proof, then please wait for the driver to approve your payment.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> :\r\n                <div class=\"alert alert-info m-n p-n\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xs-24\">\r\n                                <p><span className=\"fas fa-check-circle m-r-xxxs\"></span>The bill has been paid! View bill details from the <span className=\"color-default\">Payments</span> section.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n\r\n            <CompletedJobContainer Index={index} CompletedJob={completedJob} />\r\n\r\n            {driverReview ?\r\n                <div class=\"alert alert-info m-n p-n\" style={{ backgroundColor: \"#E5E5E5\", borderTop: \"2px solid #CCCCCC\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-24\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-star\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Rating</div>\r\n                                        <div className=\"content-text-secondary\"><Rating Rating={driverReview.Rating} Color=\"\" Size=\"rating-small\" /></div>\r\n                                        <div className=\"content-text-primary\">Review</div>\r\n                                        <div className=\"content-text-secondary\">{driverReview.Review}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> :\r\n                <div class=\"alert alert-info m-n p-n\" style={{ backgroundColor: \"#E5E5E5\", borderTop: \"2px solid #CCCCCC\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-20\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-star\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Rate and Review the Driver</div>\r\n                                        <div className=\"content-text-secondary\">Your reviews means a lot to us and the driver too.</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-4 text-right\">\r\n                            <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target={`#review-dialog-${index}`}>Write a Review</button>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n\r\n            <ReviewDialog DialogID={index}\r\n                CompletedJobID={completedJob.CompletedJobID}\r\n                OnOK={this.props.OnReviewAdded}/>\r\n\r\n            <div className=\"back-color-gray\" data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#completed-job-${index}`}\r\n                onClick={async () => { await this.RefreshDriverContainer(); }}>\r\n                <div className=\"type-h4 color-default text-right p-xxxs\">Driver Details\r\n                    <i className=\"fas fa-ellipsis-v\"></i>\r\n                    <i class=\"glyph glyph-add\"></i>\r\n                    <i class=\"glyph glyph-remove\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`completed-job-${index}`}>\r\n                <DriverContainer Refresh={refresh => { this.RefreshDriverContainer = refresh; }} DriverID={completedJob.DriverID} />\r\n            </div>\r\n        </li>;\r\n    }\r\n};\r\n\r\nexport default CompletedJobPackageListItem;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport CompletedJobPackageListItem from \"./CompletedJobPackageListItem\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport { getData } from \"../../../TraderFunctions\";\r\n\r\nclass CompletedJobsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllCompletedJobPackages: [],\r\n            CompletedJobPackages: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        }\r\n        \r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"CompletedJobPackages\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Completed job packages found.\") {\r\n                    this.setState({\r\n                        AllCompletedJobPackages: response.CompletedJobPackages,\r\n                        CompletedJobPackages: response.CompletedJobPackages,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllCompletedJobPackages: [],\r\n                        CompletedJobPackages: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"CompletedJobPackages\"\r\n            };\r\n\r\n            this.setState({\r\n                Refreshing: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Completed job packages found.\") {\r\n                    this.setState({\r\n                        AllCompletedJobPackages: response.CompletedJobPackages,\r\n                        CompletedJobPackages: response.CompletedJobPackages,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllCompletedJobPackages: [],\r\n                        CompletedJobPackages: [],\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.SearchDate === \"\") {\r\n            this.setState({\r\n                CompletedJobPackages: this.state.AllCompletedJobPackages\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allCompletedJobPackages = this.state.AllCompletedJobPackages;\r\n        let filteredCompletedJobPackages = [];\r\n        let count = 0;\r\n        let searchString = this.state.SearchString;\r\n\r\n        for (let completedJobPackage of allCompletedJobPackages) {\r\n            let completedJob = completedJobPackage.CompletedJob;\r\n\r\n            if (completedJob.JobNumber.includes(searchString)) {\r\n                filteredCompletedJobPackages[count++] = completedJobPackage;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            CompletedJobPackages: filteredCompletedJobPackages\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const completedJobPackages = this.state.CompletedJobPackages;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-check m-r-xxs\"></span>Completed Jobs</div>\r\n                            <p className=\"color-light\">{`You have assigned ${completedJobPackages.length} jobs so far. Have more cargo to deliver? Add a Job Offer now, or browse some Job Requests.`}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Your Completed Jobs\r\n                    {this.state.Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search Jobs\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={this.state.SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div> \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            {(completedJobPackages.length === 0) ?\r\n                <SearchingContainer Searching={this.state.Searching}\r\n                    SearchingFor=\"completed jobs\" /> :\r\n                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {completedJobPackages.map((completedJobPackage, index) => {\r\n                        return <CompletedJobPackageListItem key={index}\r\n                            Index={index} CompletedJobPackage={completedJobPackage}\r\n                            OnReviewAdded={driverReview => {\r\n                                let completedJobPackages = this.state.CompletedJobPackages;\r\n\r\n                                for (let jobPackage of completedJobPackages) {\r\n                                    if (jobPackage === completedJobPackage) {\r\n                                        jobPackage.DriverReview = driverReview;\r\n                                        break;\r\n                                    }\r\n                                }\r\n\r\n                                this.setState({\r\n                                    CompletedJobPackages: completedJobPackages\r\n                                });\r\n                            }} />;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default CompletedJobsList;","import React, { Component } from \"react\";\r\nimport CompletedJobsList from \"./CompletedJobsList\";\r\n\r\nclass CompletedJobs extends Component {\r\n   render() {\r\n       return <section>\r\n           <CompletedJobsList Refresh={this.props.Refresh} />\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default CompletedJobs;","import React, { Component } from \"react\";\r\nimport JobRequests from \"./jobRequests/JobRequests.js\"; \r\nimport JobOffers from \"./jobOffers/JobOffers.js\";\r\nimport OnGoingJob from \"./onGoingJob/OnGoingJob.js\";\r\nimport CompletedJobs from \"./completedJobs/CompletedJobs\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Jobs extends Component {\r\n    render() {\r\n        return (\r\n            <section>\r\n                <PageHeading Heading=\"JOBS\" />\r\n                <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                    padding: \"10px\",\r\n                    backgroundColor: \"#3A3A3C\",\r\n                    width: \"100%\",\r\n                    margin: \"0px\",\r\n                }}>\r\n                    <li role=\"presentation\" className=\"active\">\r\n                        <a href=\"#job-requests\" aria-controls=\"job-requests\" role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={async () => { await this.RefreshJobRequests(); }}>Job Requests</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#job-offers\" aria-controls=\"job-offers\" role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={async () => { await this.RefreshJobOffers(); }}>Job Offers</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#on-going-job\" aria-controls=\"on-going-job\" role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={async () => { await this.RefreshOnGoingJob(); }}>On-Going Job</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#completed-jobs\" aria-controls=\"completed-jobs\" role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={async () => { await this.RefreshCompletedJobs(); }}>Completed Jobs</a>\r\n                    </li>\r\n                </ul>\r\n                <div className=\"tab-content\">\r\n                    <div role=\"tabpanel\" className=\"tab-pane active\" id=\"job-requests\">\r\n                        <JobRequests Refresh={refresh => { this.RefreshJobRequests = refresh; }} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"job-offers\">\r\n                        <JobOffers Refresh={refresh => { this.RefreshJobOffers = refresh; }} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"on-going-job\">\r\n                        <OnGoingJob Refresh={refresh => { this.RefreshOnGoingJob = refresh; }} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"completed-jobs\">\r\n                        <CompletedJobs Refresh={refresh => { this.RefreshCompletedJobs = refresh; }} />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Jobs;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../containers/searching/SearchingContainer\";\r\nimport { getData } from \"../../TraderFunctions\";\r\n\r\nclass Bill extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            BillData: null,\r\n            Searching: false\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"BillData\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Bill data found.\") {\r\n                    this.setState({\r\n                        BillData: response.BillData,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        BillData: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const billData = this.state.BillData;\r\n        const searching = this.state.Searching;\r\n        \r\n\r\n        if (searching || !billData) {\r\n            return <SearchingContainer Searching={searching}\r\n                SearchingFor=\"bill data\" />;\r\n        }\r\n        else {\r\n            const bill = this.props.Bill;\r\n\r\n            return <section>\r\n                <div className=\"jumbotron theme-default back-color-light\">\r\n                    <div className=\"container\">\r\n                        <div className=\"type-t3\" style={{ fontWeight: \"600\" }}><span className=\"fas fa-route m-r-xxxs\"></span>NAQEL</div>\r\n\r\n                        <div className=\"p-t-xxs\">\r\n                            <div className=\"type-t9\">123 Naqel Street</div>\r\n                            <div className=\"type-t9\">Wah, Punjab, Pakistan.</div>\r\n                            <div className=\"type-t9\">ZIP 47000</div>\r\n                        </div>\r\n\r\n                        <div className=\"p-t-xxs\">\r\n                            <div className=\"type-t9\">+92 318 5037972</div>\r\n                            <div className=\"type-t9\">naqel-transport-jobs.firebaseapp.com</div>\r\n                            <div className=\"type-t9\">Naqel Transport Jobs</div>\r\n                        </div>\r\n\r\n                        <div className=\"type-t7 p-t-xxs\">BILLED TO</div>\r\n                        <div className=\"p-t-xxs\">\r\n                            <div className=\"type-t9\">{`${billData.FirstName} ${billData.LastName}`}</div>\r\n                            <div className=\"type-t9\">{billData.Address}</div>\r\n                        </div>\r\n\r\n                        <div className=\"type-t7 p-t-xxs\">INVOICE</div>\r\n                        <div className=\"p-t-xxs\">\r\n                            <div className=\"type-t9\">INVOICE #</div>\r\n                            <div className=\"type-t9\">{bill.BillNumber}</div>\r\n                            <div className=\"type-t9 p-t-xxxs\">DATE OF ISSUE</div>\r\n                            <div className=\"type-t9\">{new Date(bill.Created).toDateString()}</div>\r\n                            <div className=\"type-t9 p-t-xxxs\">INVOICE TOTAL</div>\r\n                            <div className=\"type-t3 color-default\">{`$${bill.Amount.toFixed(2)}`}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default Bill;","import React, { Component } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport Bill from \"./Bill\";\r\n\r\nclass PrintBillDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const bill = this.props.Bill;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`print-bill-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <Bill Bill={bill} ref={bill => (this.Bill = bill)} />\r\n                            <div className=\"text-right back-color-gray p-xxs\">\r\n                                <ReactToPrint\r\n                                    trigger={() => <button className=\"btn btn-primary m-n\">Print</button>}\r\n                                    content={() => this.Bill} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PrintBillDialog;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../containers/searching/SearchingContainer\";\r\nimport { getData } from \"../../TraderFunctions\";\r\n\r\nclass SpecialBill extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            BillData: null,\r\n            Searching: false\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"BillData\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Bill data found.\") {\r\n                    this.setState({\r\n                        BillData: response.BillData,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        BillData: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const billData = this.state.BillData;\r\n        const searching = this.state.Searching;\r\n        \r\n\r\n        if (searching || !billData) {\r\n            return <SearchingContainer Searching={searching}\r\n                SearchingFor=\"bill data\" />;\r\n        }\r\n        else {\r\n            const bill = this.props.Bill;\r\n\r\n            return <section>\r\n                <div className=\"jumbotron theme-default back-color-light\">\r\n                    <div className=\"container\">\r\n                        <div className=\"p-t-xxs\">\r\n                            <div className=\"type-t9\">123 Naqel Street</div>\r\n                            <div className=\"type-t9\">Wah, Punjab, Pakistan.</div>\r\n                            <div className=\"type-t9\">ZIP 47000</div>\r\n                        </div>\r\n\r\n                        <div className=\"p-t-xxs\">\r\n                            <div className=\"type-t9\">+92 318 5037972</div>\r\n                            <div className=\"type-t9\">naqel-transport-jobs.firebaseapp.com</div>\r\n                            <div className=\"type-t9\">Naqel Transport Jobs</div>\r\n                        </div>\r\n\r\n                        <div className=\"type-t7 p-t-xxs\">BILLED TO</div>\r\n                        <div className=\"p-t-xxs\">\r\n                            <div className=\"type-t9\">{`${billData.FirstName} ${billData.LastName}`}</div>\r\n                            <div className=\"type-t9\">{billData.Address}</div>\r\n                        </div>\r\n\r\n                        <div className=\"type-t7 p-t-xxs\">INVOICE</div>\r\n                        <div className=\"p-t-xxs\">\r\n                            <div className=\"type-t9\">INVOICE #</div>\r\n                            <div className=\"type-t9\">{bill.BillNumber}</div>\r\n                            <div className=\"type-t9 p-t-xxxs\">DATE OF ISSUE</div>\r\n                            <div className=\"type-t9\">{new Date(bill.SpecialTraderBill.Created).toDateString()}</div>\r\n                            <div className=\"type-t9 p-t-xxxs\">INVOICE TOTAL</div>\r\n                            <div className=\"type-t3 color-default\">{`$${bill.SpecialTraderBill.Amount.toFixed(2)}`}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default SpecialBill;","import React, { Component } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport SpecialBill from \"./SpecialBill\";\r\n\r\nclass PrintSpecialBillDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const bill = this.props.Bill;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`print-special-bill-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <SpecialBill Bill={bill} ref={bill => (this.Bill = bill)} />\r\n                            <div className=\"text-right back-color-gray p-xxs\">\r\n                                <ReactToPrint\r\n                                    trigger={() => <button className=\"btn btn-primary m-n\">Print</button>}\r\n                                    content={() => this.Bill} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PrintSpecialBillDialog;","import React, { Component } from \"react\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { addTraderPayProof } from \"../../TraderFunctions\";\r\n\r\nclass AddPayProofDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                PhotoURL: \"\"\r\n            }\r\n        };\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidPhotoURL\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newTraderPayProof = {\r\n            Token: localStorage.Token,\r\n            TraderBillID: this.props.TraderBillID,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to add trader pay proof.\");\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        await addTraderPayProof(newTraderPayProof).then(response => {\r\n            if (response.Message === \"Trader pay proof is added.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const showPreloader = this.state.ShowPreloader;\r\n        const index = this.props.Index;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`add-pay-proof-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {showPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }} />\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\"></label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Upload Payment Proof</div>\r\n                                                <div className=\"type-sh3\"> The proof of a payment can be a Bank Transfer Receipt.</div>\r\n                                                <div className=\"type-sh4 text-danger\">{this.state.Errors.PhotoURL}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Upload\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddPayProofDialog;","import React, { Component } from \"react\";\r\nimport PayProofContainer from \"../../../../containers/payProof/PayProofContainer\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { deleteTraderPayProof } from \"../../TraderFunctions\";\r\n\r\nclass PayProofDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        if (this.props.PayProof.Approved) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        let discardedTraderPayProof = {\r\n            Token: localStorage.Token,\r\n            TraderPayProofID: this.props.PayProof.TraderPayProofID\r\n        };\r\n\r\n        console.log(`Going to delete Trader pay proof.`);\r\n\r\n        await deleteTraderPayProof(discardedTraderPayProof).then(response => {\r\n            if (response.Message === \"Trader pay proof is deleted.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.props.OnPayProofDeleted();\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const showPreloader = this.state.ShowPreloader;\r\n        const payProof = this.props.PayProof;\r\n        const jobNumber = this.props.JobNumber;\r\n\r\n        return <section>\r\n            {payProof.Approved ?\r\n                null :\r\n                <div class=\"alert alert-danger m-n p-n\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xs-24\">\r\n                                <p><span className=\"fas fa-exclamation-circle m-r-xxxs\"></span>PENDING APPROVAL: The driver will approve this proof. See driver details from <span className=\"color-default\">Completed Jobs</span> section for Job Number: <span className=\"color-default\">{jobNumber}</span>.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n            <PayProofContainer PayProof={payProof} />\r\n            {payProof.Approved ? \r\n                null : \r\n                <div className=\"text-right back-color-gray p-xxs\">\r\n                    <button className=\"btn btn-danger m-n\" onClick={this.onDelete}>Delete</button>\r\n                </div>}\r\n            {showPreloader ? <Preloader /> : null}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PayProofDetails;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../containers/searching/SearchingContainer\";\r\nimport PayProofDetails from \"./PayProofDetails\";\r\nimport PayDetailsContainer from \"../../../../containers/payDetails/PayDetailsContainer\";\r\nimport { getData } from \"../../TraderFunctions\";\r\n\r\nclass PaymentDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PaymentDetails: null,\r\n            Searching: false,\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"PaymentDetails\",\r\n                Params: {\r\n                    TraderBillID: this.props.TraderBillID\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                console.log(\"PAYMENT\");\r\n                console.log(response);\r\n                if (response.Message === \"Payment details found.\") {\r\n                    this.setState({\r\n                        PaymentDetails: response.PaymentDetails,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        PaymentDetails: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"PaymentDetails\",\r\n                Params: {\r\n                    TraderBillID: this.props.TraderBillID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Payment details found.\") {\r\n                    this.setState({\r\n                        PaymentDetails: response.PaymentDetails\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        PaymentDetails: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            PaymentDetails,\r\n            Searching\r\n        } = this.state;\r\n\r\n        if (Searching || !PaymentDetails) {\r\n            return <SearchingContainer Searching={Searching}\r\n                SearchingFor=\"payment details\" />;\r\n        }\r\n        else {\r\n            if (PaymentDetails.IsOnlinePayment) {\r\n                return <PayDetailsContainer PayDetails={PaymentDetails.PayDetails} />\r\n            }\r\n            else {\r\n                const {\r\n                    JobNumber\r\n                } = this.props;\r\n\r\n                return <PayProofDetails PayProof={PaymentDetails.PayProof}\r\n                    JobNumber={JobNumber}\r\n                    OnPayProofDeleted={this.props.OnPayProofDeleted} />;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport default PaymentDetails;","import React, { Component } from \"react\";\r\nimport { CardElement } from \"@stripe/react-stripe-js\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { getClientSecret } from \"../../TraderFunctions\";\r\nimport { addTraderPayDetails } from \"../../TraderFunctions\";\r\n\r\nclass PayOnlineDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Owner: \"\",\r\n            Email: \"\",\r\n\r\n            ValidOwner: false,\r\n            ValidEmail: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n            ShowCard: false,\r\n\r\n            Errors: {\r\n                Owner: \"\",\r\n                Email: \"\",\r\n                CheckOut: \"\"\r\n            }\r\n        };\r\n\r\n        this.toggleCard = this.toggleCard.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onCardInputChange = this.onCardInputChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.ToggleCard(this.toggleCard);\r\n    }\r\n\r\n    onCardInputChange = event => {\r\n        let Errors = this.state.Errors;\r\n        Errors.CheckOut = event.error ? event.error.message : \"\";\r\n\r\n        this.setState({\r\n            Errors: Errors\r\n        });\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidOwner = this.state.ValidOwner;\r\n        let ValidEmail = this.state.ValidEmail;\r\n\r\n        switch (field) {\r\n            case \"Owner\":\r\n                ValidOwner = (value !== \"\");\r\n                Errors.Owner = ValidOwner ? \"\" : \"Card owner name is required.\";\r\n\r\n                if (Errors.Owner !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidOwner = value.match(/^[a-zA-Z ]+$/);\r\n                Error.Owner = ValidOwner ? \"\" : \"Invalid owner name.\";\r\n                break;\r\n            case \"Email\":\r\n                ValidEmail = (value !== \"\");\r\n                Errors.Email = ValidEmail ? \"\" : \"Email is required.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidEmail = (value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i));\r\n                Errors.Email = ValidEmail ? \"\" : \"Email is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidOwner: ValidOwner,\r\n            ValidEmail: ValidEmail,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidOwner &&\r\n                        this.state.ValidEmail\r\n            });\r\n        });\r\n    }\r\n\r\n    toggleCard = toggle => {\r\n        this.setState({\r\n            ShowCard: toggle\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const bill = this.props.Bill;\r\n\r\n        const billingDetails = {\r\n            name: this.state.Owner,\r\n            email: this.state.Email\r\n        };\r\n\r\n        const newClientSecret = {\r\n            Token: localStorage.Token,\r\n            Amount: bill.Amount * 100\r\n        };\r\n\r\n        const stripe = this.props.Stripe;\r\n        const elements = this.props.Elements;\r\n\r\n        const cardElement = elements.getElement(CardElement);\r\n\r\n        try {\r\n            await getClientSecret(newClientSecret).then(async response => {\r\n                if (response.Message === \"Client secret found.\") {\r\n                    const clientSecret = response.ClientSecret;\r\n\r\n                    const paymentMethodRequest = await stripe.createPaymentMethod({\r\n                        type: \"card\",\r\n                        card: cardElement,\r\n                        billing_details: billingDetails\r\n                    });\r\n\r\n                    if (paymentMethodRequest.error) {\r\n                        let Errors = this.state.Errors;\r\n                        Errors.CheckOut = paymentMethodRequest.error.message;\r\n\r\n                        this.setState({\r\n                            Errors: Errors,\r\n                            ShowPreloader: false\r\n                        });\r\n\r\n                        return;\r\n                    }\r\n\r\n                    const newTraderPayDetails = {\r\n                        Token: localStorage.Token,\r\n                        TraderBillID: this.props.Bill.TraderBillID,\r\n                        OwnerName: this.state.Owner,\r\n                        OwnerEmail: this.state.Email,\r\n                        CardType: paymentMethodRequest.paymentMethod.card.brand\r\n                    };\r\n\r\n                    const { error } = await stripe.confirmCardPayment(clientSecret, {\r\n                        payment_method: paymentMethodRequest.paymentMethod.id\r\n                    });\r\n\r\n                    if (error) {\r\n                        let Errors = this.state.Errors;\r\n                        Errors.CheckOut = error.message;\r\n\r\n                        this.setState({\r\n                            Errors: Errors,\r\n                            ShowPreloader: false\r\n                        });\r\n\r\n                        return;\r\n                    }\r\n\r\n                    await addTraderPayDetails(newTraderPayDetails).then(response => {\r\n                        this.setState({\r\n                            ShowPreloader: false\r\n                        });\r\n\r\n                        if (response.Message === \"Pay details are added.\") {\r\n                            this.toggleCard(false);\r\n                            this.cancelButton.click();\r\n                            this.props.OnOK();\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        ShowPreloader: false\r\n                    });\r\n                }\r\n            });\r\n        } catch (error) {\r\n            let Errors = this.state.Errors;\r\n            Errors.CheckOut = error.message;\r\n\r\n            this.setState({\r\n                Errors: Errors\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ShowCard\r\n        } = this.state;\r\n\r\n        const showPreloader = this.state.ShowPreloader;\r\n        const index = this.props.Index;\r\n        const bill = this.props.Bill;\r\n\r\n        const iframeStyles = {\r\n            base: {\r\n                color: \"#000000\",\r\n                fontSize: \"15px\",\r\n                fontFamily: \"Segoe UI\",\r\n                iconColor: \"#000000\"\r\n            },\r\n            invalid: {\r\n                iconColor: \"#D75A4A\",\r\n                color: \"#D75A4A\"\r\n            },\r\n            complete: {\r\n                iconColor: \"#008575\"\r\n            }\r\n        };\r\n\r\n        const cardElementOpts = {\r\n            iconStyle: \"solid\",\r\n            style: iframeStyles,\r\n            hidePostalCode: true\r\n        };\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`pay-online-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {showPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    onClick={() => { this.toggleCard(false); }}\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Pay Online</div>\r\n                                                <div className=\"type-sh3 m-b-xxs\">Pay the bill with your credit card.</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Owner Name</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"Owner\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Owner} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Owner}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Owner Email</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"email\" name=\"Email\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        placeholder=\"someone@mail.com\" value={this.state.Email} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Email}</span>\r\n                                                </div>\r\n\r\n                                                <div className=\"type-sh4\">\r\n                                                    <span className=\"fab fa-cc-visa\"></span>\r\n                                                    <span className=\"fab fa-cc-mastercard m-l-xxxs\"></span>\r\n                                                    <span className=\"fab fa-cc-amex m-l-xxxs\"></span>\r\n                                                    <span className=\"fab fa-cc-discover m-l-xxxs\"></span>\r\n                                                    <span className=\"fab fa-cc-diners-club m-l-xxxs\"></span>\r\n                                                    <span className=\"fab fa-cc-jcb m-l-xxxs\"></span>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Credit Card Information</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <div className=\"form-control p-t-xxxs p-b-xxxs\"\r\n                                                        style={{\r\n                                                            maxWidth: \"100%\",\r\n                                                            width: \"100%\",\r\n                                                            borderColor: \"rgba(0, 0, 0, 0.6)\"\r\n                                                        }}>\r\n                                                        {ShowCard ? \r\n                                                            <CardElement\r\n                                                                options={cardElementOpts}\r\n                                                                onChange={this.onCardInputChange} /> : null}\r\n                                                    </div>\r\n                                                    <span className=\"text-danger\">{this.state.Errors.CheckOut}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value={`Pay $${bill.Amount.toFixed(2)}`} className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PayOnlineDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { requestSpecialBill } from \"../../TraderFunctions\";\r\n\r\nclass RequestSpecialBillDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Price: 0,\r\n\r\n            ValidPrice: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Price: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidPrice\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"Price\":\r\n                ValidPrice = (value !== \"\");\r\n                Errors.Price = ValidPrice ? \"\" : \"Temporary is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: ValidPrice\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const requestedSpecialBill = {\r\n            Token: localStorage.Token,\r\n            TraderBillID: this.props.TraderBill.TraderBillID,\r\n            Amount: this.state.Price\r\n        };\r\n\r\n        await requestSpecialBill(requestedSpecialBill).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Special bill is requested.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK(response.SpecialTraderBill);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Price,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            TraderBill\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`request-special-bill-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"type-h3 color-default p-t-xxs\">Request Special Bill</div>\r\n                                        <div className=\"type-sh3\">{`Current amount is $${TraderBill.Amount.toFixed(2)}.`}</div>\r\n                                        <div className=\"row p-t-xxs\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Temporary Amount (USD)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" step=\"0.01\" name=\"Price\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={Price} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.Price}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Request\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default RequestSpecialBillDialog;","import React, { Component } from \"react\";\r\nimport { ElementsConsumer } from \"@stripe/react-stripe-js\";\r\nimport BillContainer from \"../../../../containers/bill/BillContainer\";\r\nimport PrintBillDialog from \"./PrintBillDialog\";\r\nimport PrintSpecialBillDialog from \"./PrintSpecialBillDialog\";\r\nimport AddPayProofDialog from \"./AddPayProofDialog\";\r\nimport PaymentDetails from \"./PaymentDetails\";\r\nimport PayOnlineDialog from \"./PayOnlineDialog\";\r\nimport RequestSpecialBillDialog from \"./RequestSpecialBillDialog\";\r\n\r\nclass BillListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const bill = this.props.Bill;\r\n        const canRequestSpecialBills = this.props.CanRequestSpecialBills;\r\n\r\n        return <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n            <BillContainer Index={index} Bill={bill} />\r\n\r\n            <div className=\"text-right back-color-gray p-xxs\">\r\n                <button className=\"btn btn-secondary\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#print-bill-dialog-${index}`}>Print Bill</button>\r\n\r\n                {bill.HasPayProof || bill.HasPayDetails ?\r\n                    null :\r\n                    <button className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#pay-online-dialog-${index}`}\r\n                        onMouseDown={() => { this.ToggleCard(true); }}>Pay Online</button>}\r\n\r\n                {bill.HasPayProof || bill.HasPayDetails ?\r\n                    null :\r\n                    <button className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#add-pay-proof-dialog-${index}`}>Upload Pay Proof</button>}\r\n\r\n                {canRequestSpecialBills ?\r\n                    <section>{bill.SpecialTraderBill ? \r\n                        <button className=\"btn btn-secondary\"\r\n                            data-toggle=\"modal\"\r\n                            data-target={`#print-special-bill-dialog-${index}`}>Print Special Bill</button> : \r\n                        <button className=\"btn btn-primary\"\r\n                            data-toggle=\"modal\"\r\n                            data-target={`#request-special-bill-dialog-${index}`}>Request Special Bill</button>}</section> : null}\r\n            </div>\r\n\r\n            <div className=\"back-color-gray\" data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#bill-${index}`}\r\n                onMouseDown={async () => { await this.RefreshPaymentDetails(); }}>\r\n                <div className=\"type-h4 color-default text-right p-xxxs\">Payment Details\r\n                    <i className=\"fas fa-ellipsis-v\"></i>\r\n                    <i class=\"glyph glyph-add\"></i>\r\n                    <i class=\"glyph glyph-remove\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`bill-${index}`}>\r\n                <PaymentDetails Refresh={refresh => { this.RefreshPaymentDetails = refresh; }}\r\n                    TraderBillID={bill.TraderBillID}\r\n                    JobNumber={bill.JobNumber}\r\n                    OnPayProofDeleted={async () => {\r\n                        this.props.OnPayProofUpdated(bill, false);\r\n                        await this.RefreshPaymentDetails();\r\n                    }} />\r\n            </div>\r\n\r\n            <PrintBillDialog Index={index}\r\n                Bill={bill} />\r\n\r\n            {bill.HasPayProof || bill.HasPayDetails ? \r\n                null : \r\n                <AddPayProofDialog Index={index}\r\n                    TraderBillID={bill.TraderBillID}\r\n                    OnOK={async () => {\r\n                        this.props.OnPayProofUpdated(bill, true);\r\n                        await this.RefreshPaymentDetails();\r\n                    }} />}\r\n\r\n            {bill.HasPayDetails ? \r\n                null :\r\n                <ElementsConsumer>\r\n                    {({ elements, stripe }) => (\r\n                        <PayOnlineDialog Index={index}\r\n                            Bill={bill}\r\n                            Elements={elements}\r\n                            Stripe={stripe}\r\n                            ToggleCard={toggleCard => { this.ToggleCard = toggleCard; }}\r\n                            OnOK={async () => {\r\n                                this.props.OnPayDetailsAdded(bill);\r\n                                await this.RefreshPaymentDetails();\r\n                            }} />)}\r\n                </ElementsConsumer>}\r\n\r\n            {canRequestSpecialBills ?\r\n                <section>{bill.SpecialTraderBill ? \r\n                    <PrintSpecialBillDialog Index={index}\r\n                        Bill={bill} /> : \r\n                    <RequestSpecialBillDialog Index={index}\r\n                        TraderBill={bill}\r\n                        OnOK={specialBill => {\r\n                            this.props.OnSpecialBillRequested(bill, specialBill);\r\n                        }} />}</section> : null}\r\n        </li>;\r\n    }\r\n};\r\n\r\nexport default BillListItem;","import React, { Component } from \"react\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport SearchingContainer from \"../../../../containers/searching/SearchingContainer\";\r\nimport BillListItem from \"./BillListItem\";\r\nimport { getData } from \"../../TraderFunctions\";\r\n\r\nclass BillsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Bills: [],\r\n            NumberOfPaidBills: 0,\r\n            NumberOfUnpaidBills: 0,\r\n            CanRequestSpecialBills: false,\r\n            Searching: false\r\n        }\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Bills\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Bills found.\") {\r\n                    this.setState({\r\n                        Bills: response.Bills,\r\n                        NumberOfPaidBills: response.NumberOfPaidBills,\r\n                        NumberOfUnpaidBills: response.NumberOfUnpaidBills,\r\n                        CanRequestSpecialBills: response.CanRequestSpecialBills,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Bills: [],\r\n                        NumberOfPaidBills: 0,\r\n                        NumberOfUnpaidBills: 0,\r\n                        CanRequestSpecialBills: false,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const bills = this.state.Bills;\r\n        const numberOfPaidBills = this.state.NumberOfPaidBills;\r\n        const numberOfUnpaidBills = this.state.NumberOfUnpaidBills;\r\n        const canRequestSpecialBills = this.state.CanRequestSpecialBills;\r\n\r\n        return <section>\r\n            <PageHeading Heading=\"PAYMENTS\" />\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/teal.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-money-bill-wave m-r-xs\"></span>Payments</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"alert alert-info m-n\" style={{ backgroundColor: \"#333333\" }}>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <div className=\"entity-list theme-alt\">\r\n                            <div className=\"entity-list-item\">\r\n                                <div className=\"item-icon\" style={{ backgroundColor: \"#333333\", color: \"#008575\" }}>\r\n                                    <span className=\"fas fa-thumbs-up\"></span>\r\n                                </div>\r\n                                <div className=\"item-content-primary\">\r\n                                    <div className=\"content-text-primary\">Paid Bills</div>\r\n                                    <div className=\"content-text-secondary\">{numberOfPaidBills}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <div className=\"entity-list theme-alt\">\r\n                            <div className=\"entity-list-item\">\r\n                                <div className=\"item-icon\" style={{ backgroundColor: \"#333333\", color: \"#008575\" }}>\r\n                                    <span className=\"fas fa-thumbs-down\"></span>\r\n                                </div>\r\n                                <div className=\"item-content-primary\">\r\n                                    <div className=\"content-text-primary\">Unpaid Bills</div>\r\n                                    <div className=\"content-text-secondary\">{numberOfUnpaidBills}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Your Bills</div>\r\n\r\n            {(bills.length === 0) ?\r\n                <SearchingContainer Searching={this.state.Searching}\r\n                    SearchingFor=\"bills\" /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {bills.map((bill, index) => {\r\n                        return <BillListItem key={index}\r\n                            Index={index} Bill={bill}\r\n                            CanRequestSpecialBills={canRequestSpecialBills}\r\n                            OnPayProofUpdated={(bill, hasPayProof) => {\r\n                                let bills = this.state.Bills;\r\n\r\n                                for (let billItem of bills) {\r\n                                    if (billItem === bill) {\r\n                                        billItem.HasPayProof = hasPayProof;\r\n                                        break;\r\n                                    }\r\n                                }\r\n\r\n                                this.setState({\r\n                                    Bills: bills\r\n                                });\r\n                            }}\r\n                            OnPayDetailsAdded={bill => {\r\n                                let bills = this.state.Bills;\r\n                                let numberOfPaidBills = this.state.NumberOfPaidBills;\r\n                                let numberOfUnpaidBills = this.state.NumberOfUnpaidBills;\r\n\r\n                                for (let billItem of bills) {\r\n                                    if (billItem === bill) {\r\n                                        billItem.Paid = true;\r\n                                        billItem.HasPayDetails = true;\r\n                                        numberOfPaidBills++;\r\n                                        numberOfUnpaidBills--;\r\n                                        break;\r\n                                    }\r\n                                }\r\n\r\n                                this.setState({\r\n                                    Bills: bills,\r\n                                    NumberOfPaidBills: numberOfPaidBills,\r\n                                    NumberOfUnpaidBills: numberOfUnpaidBills\r\n                                });\r\n                            }}\r\n                            OnSpecialBillRequested={(bill, specialBill) => {\r\n                                let bills = this.state.Bills;\r\n\r\n                                for (let billItem of bills) {\r\n                                    if (billItem === bill) {\r\n                                        billItem.SpecialTraderBill = specialBill;\r\n                                        break;\r\n                                    }\r\n                                }\r\n\r\n                                this.setState({\r\n                                    Bills: bills\r\n                                });\r\n                            }} />;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default BillsList;","import React, { Component } from \"react\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport Strings from \"../../../../res/strings\";\r\nimport BillsList from \"./BillsList\";\r\n\r\nconst stripePromise = loadStripe(Strings.STRIPE_PUBLISHABLE_KEY);\r\n\r\nclass Payments extends Component {\r\n    render() {\r\n        return <section>\r\n            <Elements stripe={stripePromise}>\r\n                <BillsList />\r\n            </Elements>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Payments;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { addQuestion } from \"../../TraderFunctions\";\r\n\r\nclass AskQuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Question: \"\",\r\n\r\n            ValidQuestion: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Question: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidQuestion = this.state.ValidQuestion;\r\n\r\n        switch (field) {\r\n            case \"Question\":\r\n                ValidQuestion = (value !== \"\");\r\n                Errors.Question = ValidQuestion ? \"\" : \"Question is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidQuestion: ValidQuestion,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidQuestion\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newQuestion = {\r\n            Token: localStorage.Token,\r\n            Question: this.state.Question\r\n        };\r\n\r\n        await addQuestion(newQuestion).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Question is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Question,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`ask-question-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Ask a New Question</div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">Question</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <textarea rows=\"6\" class=\"form-control\" name=\"Question\" style={{ maxWidth: \"100%\" }}\r\n                                                        value={Question} onChange={this.onChange}></textarea>\r\n                                                    <span className=\"text-danger\">{Errors.Question}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Post\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AskQuestionDialog;","import React, { Component } from \"react\";\r\n\r\nclass TraderQuestionContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Question\r\n        } = this.props;\r\n\r\n        const askedOn = new Date(Question.Created);\r\n        const askedBy = Question.AskedBy;\r\n        const traderAnswer = Question.TraderAnswer;\r\n        const answeredOn = traderAnswer ? new Date(traderAnswer.Created) : null;\r\n        const answeredBy = traderAnswer ? traderAnswer.AnsweredBy : null;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"type-h5 color-default p-t-n\">{`${Index + 1}. Question ID: ${Question.QuestionNumber}`}</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-user\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">\r\n                                            <span className=\"fas fa-briefcase m-r-xxxs\"></span>\r\n                                            {`${askedBy.FirstName} ${askedBy.LastName}`}\r\n                                        </div>\r\n                                        <div className=\"content-text-secondary\">{askedBy.Username}</div>\r\n                                        <div className=\"content-text-secondary\">{`${askedOn.toDateString()} at ${askedOn.toLocaleTimeString()}`}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-question\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">\r\n                                            <span className=\"m-r-xxxs\">Question</span>\r\n                                            {Question.Class ?\r\n                                                <span class=\"badge back-color-golden\">{Question.Class.toUpperCase()}</span> :\r\n                                                <span class=\"badge back-color-golden\">UNCLASSIFIED</span>}\r\n                                        </div>\r\n                                        <div className=\"content-text-secondary\">{Question.Question}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {traderAnswer ? \r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-user\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">\r\n                                                <span className=\"fas fa-user-shield m-r-xxxs\"></span>\r\n                                                {`${answeredBy.FirstName} ${answeredBy.LastName}`}\r\n                                            </div>\r\n                                            <div className=\"content-text-secondary\">{answeredBy.Username}</div>\r\n                                            <div className=\"content-text-secondary\">{`${answeredOn.toDateString()} at ${answeredOn.toLocaleTimeString()}.`}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-comment\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">\r\n                                                <span className=\"m-r-xxxs\">Answer</span>\r\n                                                {traderAnswer.Edited ? <span className=\"color-default\">EDITED</span> : null}\r\n                                            </div>\r\n                                            <div className=\"content-text-secondary\">{traderAnswer.Answer}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div> : \r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-comment\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">\r\n                                                <span className=\"m-r-xxxs\">Answer</span>\r\n                                            </div>\r\n                                            <div className=\"content-text-secondary\">This question has not been answered yet.</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default TraderQuestionContainer;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { deleteQuestion } from \"../../TraderFunctions\";\r\n\r\nclass DeleteQuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false,\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const discardedQuestion = {\r\n            Token: localStorage.Token,\r\n            TraderQuestionID: this.props.TraderQuestionID\r\n        };\r\n\r\n        await deleteQuestion(discardedQuestion).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Question is deleted.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            QuestionNumber\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`delete-trader-question-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-h3 color-default p-t-n\">Delete Question</div>\r\n                                            <div className=\"type-sh3 m-b-xxs\">Are you sure you want to delete question with ID\r\n                                                <span className=\"color-default\">{` ${QuestionNumber}.`}</span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-right\">\r\n                                        <button className=\"btn btn-primary\" onClick={this.onDelete}>Delete</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DeleteQuestionDialog;","import React, { Component } from \"react\";\r\nimport TraderQuestionContainer from \"../../../../containers/traderQuestion/TraderQuestionContainer\";\r\nimport DeleteQuestionDialog from \"./DeleteQuestionDialog\";\r\n\r\nclass QuestionListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Question\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <TraderQuestionContainer Index={Index}\r\n                Question={Question} />\r\n\r\n            <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                <button className=\"btn btn-danger m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#delete-trader-question-dialog-${Index}`}>Delete</button>\r\n            </div>\r\n\r\n            <DeleteQuestionDialog Index={Index}\r\n                TraderQuestionID={Question.TraderQuestionID}\r\n                QuestionNumber={Question.QuestionNumber}\r\n                OnOK={this.props.OnQuestionDeleted}/>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default QuestionListItem;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../containers/searching/SearchingContainer\";\r\nimport ProgressRing from \"../../../../controls/ProgressRing\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport AskQuestionDialog from \"./AskQuestionDialog\";\r\nimport QuestionListItem from \"./QuestionListItem\";\r\nimport { getData } from \"../../TraderFunctions\";\r\n\r\nclass QuestionsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllQuestions: [],\r\n            Questions: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Questions\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Questions found.\") {\r\n                    this.setState({\r\n                        AllQuestions: response.Questions,\r\n                        Questions: response.Questions,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllQuestions: [],\r\n                        Questions: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                Questions: this.state.AllQuestions\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allQuestions = this.state.AllQuestions;\r\n        let filteredQuestions = [];\r\n        let count = 0;\r\n\r\n        for (let question of allQuestions) {\r\n            if (question.Question.includes(searchString) ||\r\n                question.QuestionNumber.includes(searchString) ||\r\n                question.Class.includes(searchString)) {\r\n                filteredQuestions[count++] = question;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Questions: filteredQuestions\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Questions,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <PageHeading Heading=\"QUESTIONS\" />\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-question-circle m-r-xxs\"></span>Questions</div>\r\n                            <p className=\"color-light\">If you are facing any issues, then post a question. Naqel team will answer them as soon as possible.</p>\r\n                            <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target={`#ask-question-dialog`}>Ask a Question</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <AskQuestionDialog OnOK={async () => { await this.onComponentUpdated(); }} />\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Your Questions\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search Questions\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(Questions.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"questions\" /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {Questions.map((question, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <QuestionListItem Index={index}\r\n                                Question={question}\r\n                                OnQuestionDeleted={this.onComponentUpdated} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default QuestionsList;","import React, { Component } from \"react\";\r\nimport QuestionsList from \"./QuestionsList\";\r\n\r\nclass Questions extends Component {\r\n    render() {\r\n        return <section>\r\n            <QuestionsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Questions;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { getData, generalSettings } from \"../../TraderFunctions\";\r\n\r\nclass GeneralSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\",\r\n\r\n            ValidFirstName: true,\r\n            ValidLastName: true,\r\n            ValidPhoneNumber: true,\r\n\r\n            ValidForm: false,\r\n            SettingsSaved: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                PhoneNumber: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Trader\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader found.\") {\r\n                    let trader = response.Trader;\r\n\r\n                    this.setState({\r\n                        FirstName: trader.FirstName,\r\n                        LastName: trader.LastName,\r\n                        Address: trader.Address,\r\n                        PhoneNumber: trader.PhoneNumber,\r\n                        Gender: trader.Gender,\r\n                        Nationality: trader.Nationality,\r\n                        DateOfBirth: trader.DateOfBirth\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        FirstName: \"\",\r\n                        LastName: \"\",\r\n                        Address: \"\",\r\n                        PhoneNumber: \"\",\r\n                        Gender: \"\",\r\n                        Nationality: \"\",\r\n                        DateOfBirth: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFirstName = this.state.ValidFirstName;\r\n        let ValidLastName = this.state.ValidLastName;\r\n        let ValidPhoneNumber = this.state.ValidPhoneNumber;\r\n\r\n        switch (field) {\r\n            case \"FirstName\":\r\n                ValidFirstName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.FirstName = ValidFirstName ? \"\" : \"First name is invalid.\";\r\n                break;\r\n            case \"LastName\":\r\n                ValidLastName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.LastName = ValidLastName ? \"\" : \"Last name is invalid.\";\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = value.match(/^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/);\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFirstName: ValidFirstName,\r\n            ValidLastName: ValidLastName,\r\n            ValidPhoneNumber: ValidPhoneNumber,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidFirstName &&\r\n                    this.state.ValidLastName &&\r\n                    this.state.ValidPhoneNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedTrader = {\r\n            Token: localStorage.Token,\r\n            FirstName: this.state.FirstName,\r\n            LastName: this.state.LastName,\r\n            Address: this.state.Address,\r\n            PhoneNumber: this.state.PhoneNumber,\r\n            Gender: this.state.Gender,\r\n            Nationality: this.state.Nationality,\r\n            DateOfBirth: this.state.DateOfBirth,\r\n        }\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await generalSettings(updatedTrader).then(response => {\r\n            if (response.Message === \"Trader is updated.\") {\r\n                this.forceUpdate();\r\n                this.props.OnSettingsSaved();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>General Settings</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-comment\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"FirstName\" autoComplete=\"off\"\r\n                                        value={this.state.FirstName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">First Name</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"FirstName\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-comment\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"LastName\" autoComplete=\"off\"\r\n                                        value={this.state.LastName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Last Name</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"LastName\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-birthday-cake\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\" className=\"form-control\" name=\"DateOfBirth\" autoComplete=\"off\"\r\n                                        value={this.state.DateOfBirth} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Date of Birth</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className={this.state.Gender === \"Male\" ? \"fas fa-male\" : \"fas fa-female\"}></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"dropdown\" style={{ width: \"193px\", maxWidth: \"296px\", }}>\r\n                                    <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                        aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                        <span>{this.state.Gender}</span>\r\n                                        <span className=\"caret\"></span>\r\n                                    </button>\r\n                                    <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                        <li><a onClick={() => { this.setState({ Gender: \"Male\" }); this.validateField(\"\", \"\"); }}>Male</a></li>\r\n                                        <li><a onClick={() => { this.setState({ Gender: \"Female\" }); this.validateField(\"\", \"\"); }}>Female</a></li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Gender</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-flag\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"Nationality\" autoComplete=\"off\"\r\n                                        value={this.state.Nationality} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Nationality</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-phone\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autoComplete=\"off\"\r\n                                        placeholder=\"+XXXXXXXXXXXX\" value={this.state.PhoneNumber} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Phone Number</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"PhoneNumber\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-location-arrow\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"Address\" autoComplete=\"off\"\r\n                                        value={this.state.Address} onChange={this.onChange} style={{ width: \"393px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Address</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default GeneralSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { usernameAndEmailSettings } from \"../../TraderFunctions.js\";\r\n\r\nclass CodeConfirmationDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ConfirmCode: \"\",\r\n\r\n            ValidConfirmCode: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                ConfirmCode: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidConfirmCode = this.state.ValidConfirmCode;\r\n\r\n        ValidConfirmCode = value === this.props.Code;\r\n        Errors.ConfirmCode = ValidConfirmCode ? \"\" : \"Invalid code.\";\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidConfirmCode: ValidConfirmCode,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidConfirmCode\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedTrader = {\r\n            Token: localStorage.Token,\r\n            Username: this.props.Username,\r\n            Email: this.props.Email,\r\n        };\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await usernameAndEmailSettings(updatedTrader).then(response => {\r\n            if (response.Message === \"Trader is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div\r\n                    className=\"modal in\" id=\"code-confirmation-dialog\" tabIndex=\"-1\"\r\n                    role=\"dialog\" aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\"\r\n                    style={{ display: \"block\" }}>\r\n                    <div className=\"modal-dialog\">\r\n                        {this.state.Preloader}\r\n                        <div className=\"modal-dialog\">\r\n                            <div className=\"modal-content\">\r\n                                <section>\r\n                                    <form noValidate onSubmit={this.onSubmit}>\r\n                                        <div className=\"modal-header\">\r\n                                            <img alt=\"passcode.png\" src=\"./images/passcode.png\" height=\"60\" />\r\n                                            <div className=\"type-h3\">Email Confirmation</div>\r\n                                            <div className=\"type-sh3\">We delivered a confirmation code to your email.</div>\r\n                                        </div>\r\n                                        <div className=\"modal-body\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-12\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"control-label\">Confirmation Code</label>\r\n                                                        <input type=\"text\" name=\"ConfirmCode\" className=\"form-control\" autocomplete=\"off\"\r\n                                                            value={this.state.ConfirmCode} onChange={this.onChange} />\r\n                                                        <span className=\"text-danger\">{this.state.Errors.ConfirmCode}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"modal-footer\">\r\n                                            <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                                ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                            <input type=\"submit\" value=\"Confirm\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </form>\r\n                                </section>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default CodeConfirmationDialog;","import React, { Component } from \"react\";\r\nimport CodeConfirmationDialog from \"./CodeConfirmationDialog.js\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport {\r\n    getData,\r\n    validateUsername,\r\n    validateEmail,\r\n    sendCode,\r\n    usernameAndEmailSettings\r\n} from \"../../TraderFunctions\";\r\n\r\nclass UsernameAndEmailSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            NewUsername: \"\",\r\n\r\n            Email: \"\",\r\n            NewEmail: \"\",\r\n\r\n            Code: \"\",\r\n\r\n            ValidNewUsername: true,\r\n            ValidNewEmail: true,\r\n\r\n            ValidForm: false,\r\n            CodeConfirmationDialog: null,\r\n\r\n            Errors: {\r\n                NewUsername: \"\",\r\n                NewEmail: \"\",\r\n            },\r\n\r\n            CodeConfirmation: \"\",\r\n            Preloader: null\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Trader\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader found.\") {\r\n                    let trader = response.Trader;\r\n\r\n                    this.setState({\r\n                        Username: trader.Username,\r\n                        NewUsername: trader.Username,\r\n                        Email: trader.Email,\r\n                        NewEmail: trader.Email\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Username: \"\",\r\n                        NewUsername: \"\",\r\n                        Email: \"\",\r\n                        NewEmail: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewUsername = this.state.ValidNewUsername;\r\n        let ValidNewEmail = this.state.ValidNewEmail;\r\n        \r\n        switch (field) {\r\n            case \"NewUsername\":\r\n                ValidNewUsername = (value !== \"\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is required.\";\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value.match(/^[a-z0-9]+$/i));\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is invalid.\";\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value !== \"Username is unavailable.\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is unavailable.\";\r\n                break;\r\n            case \"NewEmail\":\r\n                ValidNewEmail = (value !== \"\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is required.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i));\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is invalid.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value !== \"Email is already taken.\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is already taken.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewUsername: ValidNewUsername,\r\n            ValidNewEmail: ValidNewEmail,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidNewUsername &&\r\n                    this.state.ValidNewEmail\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername === this.state.Username &&\r\n            this.state.NewEmail === this.state.Email) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername !== this.state.Username) {\r\n            const response = await validateUsername(this.state.NewUsername);\r\n\r\n            if (response.Message === \"Username is unavailable.\") {\r\n                this.validateField(\"NewUsername\", response.Message);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail !== this.state.Email) {\r\n            const response = await validateEmail(this.state.NewEmail);\r\n            if (response.Message === \"Email is already taken.\") {\r\n                this.validateField(\"NewEmail\", response.Message);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail === this.state.Email) {\r\n            const updatedTrader = {\r\n                Token: localStorage.Token,\r\n                Username: this.state.NewUsername,\r\n                Email: this.state.NewEmail,\r\n            };\r\n\r\n            this.setState({\r\n                Preloader: <Preloader />\r\n            });\r\n\r\n            console.log(\"Going to update username.\");\r\n            await usernameAndEmailSettings(updatedTrader).then(response => {  \r\n                console.log(response);\r\n                if (response.Message === \"Trader is updated.\") {\r\n                    \r\n                    this.props.OnSettingsSaved();\r\n                }\r\n\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            console.log(\"Going to send code...\");\r\n            await sendCode(this.state.NewEmail).then(response => {\r\n                console.log(response);\r\n                if (response.Message === \"Code sent.\") {\r\n                    this.setState({\r\n                        CodeConfirmationDialog: <CodeConfirmationDialog\r\n                            Code={response.Code}\r\n                            Username={this.state.NewUsername}\r\n                            Email={this.state.NewEmail}\r\n                            OnCancel={() => {\r\n                                this.setState({\r\n                                    CodeConfirmationDialog: null,\r\n                                });\r\n                            }}\r\n                            OnOK={cancelButton => {\r\n                                cancelButton.click();\r\n                                this.props.OnSettingsSaved();\r\n                            }} />\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Username and Emails</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-at\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"NewUsername\" className=\"form-control\" autoComplete=\"off\"\r\n                                        value={this.state.NewUsername} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Username</div>\r\n                                <div className=\"content-text-secondary text-danger\">{this.state.Errors[\"NewUsername\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-envelope\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"email\" name=\"NewEmail\" className=\"form-control\" placeholder=\"someone@example.com\" autoComplete=\"off\"\r\n                                        value={this.state.NewEmail} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Email</div>\r\n                                <div className=\"content-text-secondary text-danger\">{this.state.Errors[\"NewEmail\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n                {this.state.CodeConfirmationDialog}\r\n            </div> \r\n        );\r\n    }\r\n};\r\n\r\nexport default UsernameAndEmailSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { validatePassword, passwordSettings } from \"../../TraderFunctions\";\r\n\r\nclass PasswordSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            CurrentPassword: \"\",\r\n            NewPassword: \"\",\r\n            ConfirmPassword: \"\",\r\n\r\n            ValidCurrentPassword: false,\r\n            ValidNewPassword: false,\r\n            ValidConfirmPassword: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                CurrentPassword: \"\",\r\n                NewPassword: \"\",\r\n                ConfirmPassword: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    async validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCurrentPassword = this.state.ValidCurrentPassword;\r\n        let ValidNewPassword = this.state.ValidNewPassword;\r\n        let ValidConfirmPassword = this.state.ValidConfirmPassword;\r\n\r\n        switch (field) {\r\n            case \"CurrentPassword\":\r\n                ValidCurrentPassword = (value !== \"\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is required.\";\r\n\r\n                if (Errors.CurrentPassword !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCurrentPassword = (value !== \"Invalid password.\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is invalid.\";\r\n                break;\r\n            case \"NewPassword\":\r\n                ValidNewPassword = value.length >= 6;\r\n                Errors.NewPassword = ValidNewPassword ? \"\" : \"Password is too short.\";\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                ValidConfirmPassword = value === this.state.NewPassword;\r\n                Errors.ConfirmPassword = ValidConfirmPassword ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCurrentPassword: ValidCurrentPassword,\r\n            ValidNewPassword: ValidNewPassword,\r\n            ValidConfirmPassword: ValidConfirmPassword,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidCurrentPassword &&\r\n                    this.state.ValidNewPassword &&\r\n                    this.state.ValidConfirmPassword\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        let passwordPackage = {\r\n            Token: localStorage.Token,\r\n            Password: this.state.CurrentPassword\r\n        };\r\n\r\n        await validatePassword(passwordPackage).then(async response => {\r\n            if (response.Message === \"Invalid password.\") {\r\n                this.validateField(\"CurrentPassword\", response.Message);\r\n            }\r\n            else {\r\n                const updatedTrader = {\r\n                    Token: localStorage.Token,\r\n                    Password: this.state.NewPassword\r\n                };\r\n\r\n                this.setState({\r\n                    Preloader: <Preloader />\r\n                });\r\n\r\n                await passwordSettings(updatedTrader).then(response => {\r\n                    if (response.Message === \"Trader is updated.\") {\r\n                        this.props.OnSettingsSaved();\r\n                    }\r\n\r\n                    this.setState({\r\n                        Preloader: null\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\" }}>Change Password</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-key\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" name=\"CurrentPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                        value={this.state.CurrentPassword} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Current Password</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"CurrentPassword\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-key\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" name=\"NewPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                        value={this.state.NewPassword} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">New Password</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"NewPassword\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-key\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" name=\"ConfirmPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                        value={this.state.ConfirmPassword} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Confirm Password</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"ConfirmPassword\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default PasswordSettings;","import React, { Component } from \"react\";\r\nimport GeneralSettings from \"./GeneralSettings\";\r\nimport UsernameAndEmailSettings from \"./UsernameAndEmailSettings\";\r\nimport PasswordSettings from \"./PasswordSettings\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Settings extends Component {\r\n    render() {\r\n        return <section>\r\n            <PageHeading Heading=\"SETTINGS\" />\r\n            <GeneralSettings ref=\"GeneralSettings\" OnSettingsSaved={() => { this.refs.GeneralSettings.componentDidMount(); }} />\r\n            <UsernameAndEmailSettings ref=\"UsernameAndEmailSettings\" OnSettingsSaved={() => { this.refs.UsernameAndEmailSettings.componentDidMount(); }} />\r\n            <PasswordSettings ref=\"PasswordSettings\" OnSettingsSaved={() => { this.refs.PasswordSettings.forceUpdate(); }} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Settings;","import React, { Component } from \"react\";\r\n\r\nclass BlockedUserContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ExoneratedTrader\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron\" style={{ height: \"100vh\" }}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 text-center\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                alt=\"sad.svg\" src=\"./images/sad.svg\" data-source-index=\"2\" />\r\n                        </div>\r\n                        <div className=\"col-md-20\">\r\n                            <div className=\"type-h3 color-default\">{`${ExoneratedTrader.FirstName} ${ExoneratedTrader.LastName}, You have been exonerated!`}</div>\r\n                            <div className=\"type-sh3\">Up to: <span className=\"color-default\">{new Date(ExoneratedTrader.ExonerateDate).toDateString()}</span></div>\r\n                            <div className=\"type-sh4\">You cannot use Naqel's services until you are exonerated. See the reason, why our team has exonerated you.</div>\r\n                            <p><span className=\"color-default\">REASON: </span>{ExoneratedTrader.Reason}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default BlockedUserContainer;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Profile from \"./profile/Profile\";\r\nimport Jobs from \"./jobs/Jobs\";\r\nimport Payments from \"./payments/Payments\";\r\nimport Questions from \"./questions/Questions\";\r\nimport Settings from \"./settings/Settings\";\r\nimport SearchingContainer from \"../../../containers/searching/SearchingContainer\";\r\nimport ExoneratedTraderContainer from \"../../../containers/exoneratedTrader/ExoneratedTraderContainer\";\r\nimport { getData } from \"../TraderFunctions\";\r\n\r\nclass TradersDashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Left: -400,\r\n            DashboardData: null,\r\n            Searching: false\r\n        };\r\n\r\n        this.onCloseNavigation = this.onCloseNavigation.bind(this);\r\n    }\r\n\r\n    onCloseNavigation = () => {\r\n        this.setState({\r\n            Left: -400\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DashboardData\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Dashboard data found.\") {\r\n                    this.setState({\r\n                        DashboardData: response.DashboardData,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DashboardData: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.Token) {\r\n            return <Redirect to=\"/login\" />;\r\n        }\r\n        else {\r\n            const {\r\n                DashboardData,\r\n                Searching\r\n            } = this.state;\r\n\r\n            return (Searching || !DashboardData) ?\r\n                <SearchingContainer Searching={Searching}\r\n                    SearchingFor=\"trader\" /> :\r\n                <section>\r\n                    {DashboardData.ExoneratedTrader ?\r\n                        <ExoneratedTraderContainer ExoneratedTrader={DashboardData.ExoneratedTrader} /> :\r\n                        <section>\r\n                            <section>\r\n                                <div className=\"sidenav\" style={{ left: `${this.state.Left}px` }}>\r\n                                    <a className=\"closebtn\" onClick={this.onCloseNavigation}>&times;</a>\r\n\r\n                                    <div class=\"entity-list\" role=\"tablist\">\r\n                                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                                            <a href=\"#profile\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Profile</a>\r\n                                        </div>\r\n                                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                                            <a href=\"#jobs\" aria-controls=\"jobs\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Jobs</a>\r\n                                        </div>\r\n                                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                                            <a href=\"#payments\" aria-controls=\"payments\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Payments</a>\r\n                                        </div>\r\n                                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                                            <a href=\"#questions\" aria-controls=\"questions\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Questions</a>\r\n                                        </div>\r\n                                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                                            <a href=\"#settings\" aria-controls=\"settings\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Settings</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"tab-content\">\r\n                                    <div role=\"tabpanel\" className=\"tab-pane active\" id=\"profile\">\r\n                                        <Profile ref=\"Profile\" />\r\n                                    </div>\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"jobs\">\r\n                                        <Jobs />\r\n                                    </div>\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"payments\">\r\n                                        <Payments />\r\n                                    </div>\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"questions\">\r\n                                        <Questions />\r\n                                    </div>\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"settings\">\r\n                                        <Settings />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"side-nav-btn\" onClick={() => {\r\n                                    this.setState({\r\n                                        Left: 0\r\n                                    });\r\n                                }}><div className=\"fas fa-bars\" style={{ fontSize: \"x-large\" }}></div>\r\n                                </div>\r\n                            </section>\r\n                        </section>}\r\n                </section>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default TradersDashboard;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { uploadProfilePhoto } from \"../../AdministratorFunctions\";\r\nimport Strings from \"../../../../res/strings\";\r\n\r\nclass ProfilePhoto extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Image: null,\r\n            PhotoURL: this.props.PhotoURL,\r\n            UploadProgress: null\r\n        };\r\n\r\n        this.onImageUpload = this.onImageUpload.bind(this);\r\n    }\r\n\r\n    onImageUpload = async event => {\r\n        this.state.Image = event.target.files[0];\r\n        const formData = new FormData();\r\n\r\n        try {\r\n            formData.append(\"Image\", this.state.Image, this.state.Image.name);\r\n\r\n            await axios.post(Strings.IMAGE_UPLOADER, formData, {\r\n                onUploadProgress: event => {\r\n                    this.setState({\r\n                        UploadProgress: <div className=\"progress-bar\">\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                        </div>\r\n                    });\r\n                }\r\n            }).then(async response => {\r\n                response = response.data;\r\n\r\n                if (response.message === \"Image uploaded successfully.\") {\r\n                    const profilePhoto = {\r\n                        Token: localStorage.Token,\r\n                        PhotoURL: response.imageUrl\r\n                    };\r\n\r\n                    let photoURL = response.imageUrl;\r\n\r\n                    await uploadProfilePhoto(profilePhoto).then(response => {\r\n                        if (response.Message === \"Profile photo is updated.\") {\r\n                            this.setState({\r\n                                UploadProgress: null\r\n                            });\r\n\r\n                            this.props.OnProfilePhotoUpdated();\r\n                        }\r\n                    });\r\n                }\r\n            }).catch(() => {\r\n                this.setState({\r\n                    PhotoURL: \"./images/defaultProfilePhoto.png\",\r\n                    UploadProgress: null\r\n                });\r\n            });\r\n        }\r\n        catch (exception) {\r\n            this.setState({\r\n                UploadProgress: null\r\n            });\r\n\r\n            return;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <input type=\"file\" onChange={this.onImageUpload} style={{ display: \"none\", }} ref={fileInput => this.fileInput = fileInput} />\r\n            <figure className=\"media\">\r\n                <div className=\"media-img media-img-has-play ratio-1-1\">\r\n                    <a href=\"#\" onClick={() => this.fileInput.click()}>\r\n                        <img style={{\r\n                            border: \"5px solid #3A3A3C\"\r\n                        }}\r\n                            src={this.props.PhotoURL} alt=\"ProfilePhoto.png\" />\r\n                        <i className=\"glyph glyph-edit\"></i>\r\n                    </a>\r\n                </div>\r\n            </figure>\r\n            {this.state.UploadProgress}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ProfilePhoto;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { getData, generalSettings } from \"../../../AdministratorFunctions\";\r\n\r\nclass GeneralSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n\r\n            ValidFirstName: true,\r\n            ValidLastName: true,\r\n\r\n            ValidForm: false,\r\n            SettingsSaved: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Administrator\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Administrator found.\") {\r\n                    let administrator = response.Administrator;\r\n\r\n                    this.setState({\r\n                        FirstName: administrator.FirstName,\r\n                        LastName: administrator.LastName,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        FirstName: \"\",\r\n                        LastName: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFirstName = this.state.ValidFirstName;\r\n        let ValidLastName = this.state.ValidLastName;\r\n\r\n        switch (field) {\r\n            case \"FirstName\":\r\n                ValidFirstName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.FirstName = ValidFirstName ? \"\" : \"First name is invalid.\";\r\n                break;\r\n            case \"LastName\":\r\n                ValidLastName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.LastName = ValidLastName ? \"\" : \"Last name is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFirstName: ValidFirstName,\r\n            ValidLastName: ValidLastName\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidFirstName &&\r\n                    this.state.ValidLastName\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedAdministrator = {\r\n            Token: localStorage.Token,\r\n            FirstName: this.state.FirstName,\r\n            LastName: this.state.LastName\r\n        };\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        await generalSettings(updatedAdministrator).then(response => {\r\n            if (response.Message === \"Administrator is updated.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.props.OnSettingsSaved();\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            FirstName,\r\n            LastName,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>General Settings</div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n                <div className=\"entity-list entity-list-expandable\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-comment\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"FirstName\" autoComplete=\"off\"\r\n                                    value={FirstName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">First Name</div>\r\n                            <div className=\"text-danger\">{Errors.FirstName}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-comment\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"LastName\" autoComplete=\"off\"\r\n                                    value={LastName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Last Name</div>\r\n                            <div className=\"text-danger\">{Errors.LastName}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item active\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-save\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Save Changes?</div>\r\n                            <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                        </div>\r\n                        <div className=\"item-content-expanded\">\r\n                            <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            {ShowPreloader ? <Preloader /> : null}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default GeneralSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { usernameAndEmailSettings } from \"../../../AdministratorFunctions\";\r\n\r\nclass CodeConfirmationDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ConfirmCode: \"\",\r\n\r\n            ValidConfirmCode: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                ConfirmCode: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidConfirmCode = this.state.ValidConfirmCode;\r\n\r\n        ValidConfirmCode = value === \"12345\";\r\n        Errors.ConfirmCode = ValidConfirmCode ? \"\" : \"Invalid code.\";\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidConfirmCode: ValidConfirmCode,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidConfirmCode\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const updatedAdministrator = {\r\n            Token: localStorage.Token,\r\n            Username: this.props.Username,\r\n            Email: this.props.Email,\r\n        };\r\n\r\n        await usernameAndEmailSettings(updatedAdministrator).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Administrator is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ConfirmCode,\r\n            ValidForm,\r\n            ShowPreloader,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal in\" id=\"code-confirmation-dialog\" tabIndex=\"-1\"\r\n                role=\"dialog\" aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\"\r\n                style={{ display: \"block\" }}>\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Email Confirmation</div>\r\n                                                <div className=\"type-sh3 m-b-xxs\">We delivered a confirmation code to your email.</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Confirmation Code</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"ConfirmCode\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={ConfirmCode} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.ConfirmCode}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Confirm\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default CodeConfirmationDialog;","import React, { Component } from \"react\";\r\nimport CodeConfirmationDialog from \"./CodeConfirmationDialog\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\n\r\nimport {\r\n    getData,\r\n    validateUsername,\r\n    validateEmail,\r\n    sendCode,\r\n    usernameAndEmailSettings\r\n} from \"../../../AdministratorFunctions\";\r\n\r\nclass UsernameAndEmailSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            NewUsername: \"\",\r\n\r\n            Email: \"\",\r\n            NewEmail: \"\",\r\n\r\n            Code: \"\",\r\n\r\n            ValidNewUsername: true,\r\n            ValidNewEmail: true,\r\n\r\n            ValidForm: false,\r\n            CodeConfirmationDialog: null,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                NewUsername: \"\",\r\n                NewEmail: \"\",\r\n            },\r\n\r\n            CodeConfirmation: \"\",\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Administrator\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Administrator found.\") {\r\n                    let administrator = response.Administrator;\r\n\r\n                    this.setState({\r\n                        Username: administrator.Username,\r\n                        NewUsername: administrator.Username,\r\n                        Email: administrator.Email,\r\n                        NewEmail: administrator.Email\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Username: \"\",\r\n                        NewUsername: \"\",\r\n                        Email: \"\",\r\n                        NewEmail: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewUsername = this.state.ValidNewUsername;\r\n        let ValidNewEmail = this.state.ValidNewEmail;\r\n\r\n        switch (field) {\r\n            case \"NewUsername\":\r\n                ValidNewUsername = (value !== \"\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is required.\";\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value.match(/^[a-z0-9]+$/i));\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is invalid.\";\r\n                break;\r\n            case \"NewEmail\":\r\n                ValidNewEmail = (value !== \"\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is required.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i));\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewUsername: ValidNewUsername,\r\n            ValidNewEmail: ValidNewEmail,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidNewUsername &&\r\n                    this.state.ValidNewEmail\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername === this.state.Username &&\r\n            this.state.NewEmail === this.state.Email) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername !== this.state.Username) {\r\n            const response = await validateUsername(this.state.NewUsername);\r\n\r\n            if (response.Message === \"Username is unavailable.\") {\r\n                let errors = this.state.Errors;\r\n                errors.NewUsername = response.Message;\r\n\r\n                this.setState({\r\n                    Errors: errors\r\n                });\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail !== this.state.Email) {\r\n            const response = await validateEmail(this.state.NewEmail);\r\n            if (response.Message === \"Email is already taken.\") {\r\n                let errors = this.state.Errors;\r\n                errors.NewEmail = response.Message;\r\n\r\n                this.setState({\r\n                    Errors: errors\r\n                });\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        if (this.state.NewEmail === this.state.Email) {\r\n            const updatedAdministrator = {\r\n                Token: localStorage.Token,\r\n                Username: this.state.NewUsername,\r\n                Email: this.state.NewEmail,\r\n            };\r\n\r\n            await usernameAndEmailSettings(updatedAdministrator).then(response => {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                if (response.Message === \"Administrator is updated.\") {\r\n                    this.props.OnSettingsSaved();\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            await sendCode(this.state.NewEmail).then(response => {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                if (response.Message === \"Code sent.\") {\r\n                    this.setState({\r\n                        CodeConfirmationDialog: <CodeConfirmationDialog\r\n                            Code={response.Code}\r\n                            Username={this.state.NewUsername}\r\n                            Email={this.state.NewEmail}\r\n                            OnCancel={() => {\r\n                                this.setState({\r\n                                    CodeConfirmationDialog: null,\r\n                                });\r\n                            }}\r\n                            OnOK={cancelButton => {\r\n                                cancelButton.click();\r\n                                this.props.OnSettingsSaved();\r\n                            }} />\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            NewUsername,\r\n            NewEmail,\r\n            ValidForm,\r\n            ShowPreloader,\r\n            CodeConfirmationDialog,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return (\r\n            <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Username and Emails</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-at\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"NewUsername\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={NewUsername} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Username</div>\r\n                                <div className=\"content-text-secondary text-danger\">{Errors.NewUsername}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-envelope\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"email\" name=\"NewEmail\" className=\"form-control\" placeholder=\"someone@example.com\" autocomplete=\"off\"\r\n                                        value={NewEmail} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Email</div>\r\n                                <div className=\"content-text-secondary text-danger\">{Errors.NewEmail}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                \r\n                {ShowPreloader ? <Preloader /> : null}\r\n                {CodeConfirmationDialog}\r\n            </section> \r\n        );\r\n    }\r\n};\r\n\r\nexport default UsernameAndEmailSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { validatePassword, passwordSettings } from \"../../../AdministratorFunctions\";\r\n\r\nclass PasswordSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            CurrentPassword: \"\",\r\n            NewPassword: \"\",\r\n            ConfirmPassword: \"\",\r\n\r\n            ValidCurrentPassword: false,\r\n            ValidNewPassword: false,\r\n            ValidConfirmPassword: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                CurrentPassword: \"\",\r\n                NewPassword: \"\",\r\n                ConfirmPassword: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    async validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCurrentPassword = this.state.ValidCurrentPassword;\r\n        let ValidNewPassword = this.state.ValidNewPassword;\r\n        let ValidConfirmPassword = this.state.ValidConfirmPassword;\r\n\r\n        switch (field) {\r\n            case \"CurrentPassword\":\r\n                ValidCurrentPassword = (value !== \"\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is required.\";\r\n                break;\r\n            case \"NewPassword\":\r\n                ValidNewPassword = value.length >= 6;\r\n                Errors.NewPassword = ValidNewPassword ? \"\" : \"Password is too short.\";\r\n\r\n                if (Errors.NewPassword !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidConfirmPassword = value === this.state.ConfirmPassword;\r\n                Errors.ConfirmPassword = ValidConfirmPassword ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                ValidConfirmPassword = value === this.state.NewPassword;\r\n                Errors.ConfirmPassword = ValidConfirmPassword ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCurrentPassword: ValidCurrentPassword,\r\n            ValidNewPassword: ValidNewPassword,\r\n            ValidConfirmPassword: ValidConfirmPassword,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidCurrentPassword &&\r\n                    this.state.ValidNewPassword &&\r\n                    this.state.ValidConfirmPassword\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        let passwordPackage = {\r\n            Token: localStorage.Token,\r\n            Password: this.state.CurrentPassword\r\n        };\r\n\r\n        await validatePassword(passwordPackage).then(async response => {\r\n            if (response.Message === \"Invalid password.\") {\r\n                this.validateField(\"CurrentPassword\", response.Message);\r\n                let errors = this.state.Errors;\r\n                errors.CurrentPassword = response.Message;\r\n\r\n                this.setState({\r\n                    Errors: errors\r\n                });\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: true\r\n                });\r\n\r\n                const updatedAdministrator = {\r\n                    Token: localStorage.Token,\r\n                    Password: this.state.NewPassword\r\n                };\r\n\r\n                await passwordSettings(updatedAdministrator).then(response => {\r\n                    this.setState({\r\n                        ShowPreloader: false,\r\n                        CurrentPassword: \"\",\r\n                        NewPassword: \"\",\r\n                        ConfirmPassword: \"\"\r\n                    });\r\n\r\n                    if (response.Message === \"Administrator is updated.\") {\r\n                        this.props.OnSettingsSaved();\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            CurrentPassword,\r\n            NewPassword,\r\n            ConfirmPassword,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\" }}>Change Password</div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n                <div className=\"entity-list entity-list-expandable\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" name=\"CurrentPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                    value={CurrentPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Current Password</div>\r\n                            <div className=\"text-danger\">{Errors.CurrentPassword}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" name=\"NewPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                    value={NewPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">New Password</div>\r\n                            <div className=\"text-danger\">{Errors.NewPassword}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" name=\"ConfirmPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                    value={ConfirmPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Confirm Password</div>\r\n                            <div className=\"text-danger\">{Errors.ConfirmPassword}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item active\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-save\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Save Changes?</div>\r\n                            <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                        </div>\r\n                        <div className=\"item-content-expanded\">\r\n                            <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            {ShowPreloader ? <Preloader /> : null}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PasswordSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { getData, updateNaqelSettings } from \"../../../AdministratorFunctions\";\r\n\r\nclass NaqelSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Street: \"\",\r\n            City: \"\",\r\n            Country: \"\",\r\n            ZIPCode: \"\",\r\n            PhoneNumber: \"\",\r\n            Website: \"\",\r\n            BusinessName: \"\",\r\n            BankName: \"\",\r\n            AccountNumber: \"\",\r\n\r\n            ValidStreet: true,\r\n            ValidCity: true,\r\n            ValidCountry: true,\r\n            ValidZIPCode: true,\r\n            ValidPhoneNumber: true,\r\n            ValidWebsite: true,\r\n            ValidBusinessName: true,\r\n            ValidBankName: true,\r\n            ValidAccountNumber: true,\r\n\r\n            ValidForm: false,\r\n            SettingsSaved: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Street: \"\",\r\n                City: \"\",\r\n                Country: \"\",\r\n                ZIPCode: \"\",\r\n                PhoneNumber: \"\",\r\n                Website: \"\",\r\n                BusinessName: \"\",\r\n                BankName: \"\",\r\n                AccountNumber: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"NaqelSettings\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Naqel settings found.\") {\r\n                    let naqelSettings = response.NaqelSettings;\r\n\r\n                    this.setState({\r\n                        Street: naqelSettings.Street,\r\n                        City: naqelSettings.City,\r\n                        Country: naqelSettings.Country,\r\n                        ZIPCode: naqelSettings.ZIPCode,\r\n                        PhoneNumber: naqelSettings.PhoneNumber,\r\n                        Website: naqelSettings.Website,\r\n                        BusinessName: naqelSettings.BusinessName,\r\n                        BankName: naqelSettings.BankName,\r\n                        AccountNumber: naqelSettings.AccountNumber,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Street: \"\",\r\n                        City: \"\",\r\n                        Country: \"\",\r\n                        ZIPCode: \"\",\r\n                        PhoneNumber: \"\",\r\n                        Website: \"\",\r\n                        BusinessName: \"\",\r\n                        BankName: \"\",\r\n                        AccountNumber: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidStreet,\r\n            ValidCity,\r\n            ValidCountry,\r\n            ValidZIPCode,\r\n            ValidPhoneNumber,\r\n            ValidWebsite,\r\n            ValidBusinessName,\r\n            ValidBankName,\r\n            ValidAccountNumber,\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"Street\":\r\n                ValidStreet = value !== \"\";\r\n                Errors.Street = ValidStreet ? \"\" : \"Street is required.\";\r\n                break;\r\n            case \"City\":\r\n                ValidCity = value !== \"\";\r\n                Errors.City = ValidCity ? \"\" : \"City is required.\";\r\n                break;\r\n            case \"Country\":\r\n                ValidCountry = value !== \"\";\r\n                Errors.Country = ValidCountry ? \"\" : \"Country is required.\";\r\n                break;\r\n            case \"ZIPCode\":\r\n                ValidZIPCode = value !== \"\";\r\n                Errors.ZIPCode = ValidZIPCode ? \"\" : \"ZIP code is required.\";\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = value !== \"\";\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is required.\";\r\n                break;\r\n            case \"Website\":\r\n                ValidWebsite = value !== \"\";\r\n                Errors.Website = ValidWebsite ? \"\" : \"Website is required.\";\r\n                break;\r\n            case \"BusinessName\":\r\n                ValidBusinessName = value !== \"\";\r\n                Errors.BusinessName = ValidBusinessName ? \"\" : \"Business name is required.\";\r\n                break;\r\n            case \"BankName\":\r\n                ValidBankName = value !== \"\";\r\n                Errors.BankName = ValidBankName ? \"\" : \"Bank name is required.\";\r\n                break;\r\n            case \"AccountNumber\":\r\n                ValidAccountNumber = value !== \"\";\r\n                Errors.AccountNumber = ValidAccountNumber ? \"\" : \"Account number is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidStreet: ValidStreet,\r\n            ValidCity: ValidCity,\r\n            ValidCountry: ValidCountry,\r\n            ValidZIPCode: ValidZIPCode,\r\n            ValidPhoneNumber: ValidPhoneNumber,\r\n            ValidWebsite: ValidWebsite,\r\n            ValidBusinessName: ValidBusinessName,\r\n            ValidBankName: ValidBankName,\r\n            ValidAccountNumber: ValidAccountNumber,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: ValidStreet &&\r\n                    ValidCity &&\r\n                    ValidCountry &&\r\n                    ValidZIPCode &&\r\n                    ValidPhoneNumber &&\r\n                    ValidWebsite &&\r\n                    ValidBusinessName &&\r\n                    ValidBankName &&\r\n                    ValidAccountNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedNaqelSettings = {\r\n            Token: localStorage.Token,\r\n            Street: this.state.Street,\r\n            City: this.state.City,\r\n            Country: this.state.Country,\r\n            ZIPCode: this.state.ZIPCode,\r\n            PhoneNumber: this.state.PhoneNumber,\r\n            Website: this.state.Website,\r\n            BusinessName: this.state.BusinessName,\r\n            BankName: this.state.BankName,\r\n            AccountNumber: this.state.AccountNumber,\r\n        };\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        await updateNaqelSettings(updatedNaqelSettings).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Street,\r\n            City,\r\n            Country,\r\n            ZIPCode,\r\n            PhoneNumber,\r\n            Website,\r\n            BusinessName,\r\n            BankName,\r\n            AccountNumber,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Naqel Settings</div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n                <div className=\"entity-list entity-list-expandable\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-map-marker-alt\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"Street\" autoComplete=\"off\"\r\n                                    value={Street} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Street</div>\r\n                            <div className=\"text-danger\">{Errors.Street}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-map-marker-alt\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"City\" autoComplete=\"off\"\r\n                                    value={City} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">City</div>\r\n                            <div className=\"text-danger\">{Errors.City}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-map-marker-alt\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"Country\" autoComplete=\"off\"\r\n                                    value={Country} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Country</div>\r\n                            <div className=\"text-danger\">{Errors.Country}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-map-marker-alt\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"ZIPCode\" autoComplete=\"off\"\r\n                                    value={ZIPCode} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">ZIP Code</div>\r\n                            <div className=\"text-danger\">{Errors.ZIPCode}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-phone\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autoComplete=\"off\"\r\n                                    value={PhoneNumber} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Phone Number</div>\r\n                            <div className=\"text-danger\">{Errors.PhoneNumber}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-globe\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"Website\" autoComplete=\"off\"\r\n                                    value={Website} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Website</div>\r\n                            <div className=\"text-danger\">{Errors.Website}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-cog\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"BusinessName\" autoComplete=\"off\"\r\n                                    value={BusinessName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Business Name</div>\r\n                            <div className=\"text-danger\">{Errors.BusinessName}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-cog\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"BankName\" autoComplete=\"off\"\r\n                                    value={BankName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Bank Name</div>\r\n                            <div className=\"text-danger\">{Errors.BankName}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-list\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"AccountNumber\" autoComplete=\"off\"\r\n                                    value={AccountNumber} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Account Number</div>\r\n                            <div className=\"text-danger\">{Errors.AccountNumber}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item active\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-save\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Save Changes?</div>\r\n                            <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                        </div>\r\n                        <div className=\"item-content-expanded\">\r\n                            <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            {ShowPreloader ? <Preloader /> : null}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default NaqelSettings;","import React, { Component } from \"react\";\r\nimport GeneralSettings from \"./GeneralSettings\";\r\nimport UsernameAndEmailSettings from \"./UsernameAndEmailSettings\";\r\nimport PasswordSettings from \"./PasswordSettings\";\r\nimport NaqelSettings from \"./NaqellSettings\";\r\n\r\nclass Settings extends Component {\r\n    render() {\r\n        return <section>\r\n            <GeneralSettings OnSettingsSaved={this.props.OnSettingsSaved} />\r\n            <UsernameAndEmailSettings OnSettingsSaved={this.props.OnSettingsSaved} />\r\n            <PasswordSettings OnSettingsSaved={this.props.OnSettingsSaved} />\r\n            <NaqelSettings />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Settings;","import React, { Component } from \"react\";\r\nimport ProfilePhoto from \"./ProfilePhoto\";\r\nimport { getData } from \"../../AdministratorFunctions\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport Settings from \"./settings/Settings\";\r\n\r\nclass Profile extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Email: \"\",\r\n            Username: \"\",\r\n            PhotoURL: \"./images/defaultProfilePhoto.png\"\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Administrator\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Administrator found.\") {\r\n                    let administrator = response.Administrator;\r\n\r\n                    this.setState({\r\n                        FirstName: administrator.FirstName,\r\n                        LastName: administrator.LastName,\r\n                        Email: administrator.Email,\r\n                        Username: administrator.Username,\r\n                        PhotoURL: administrator.PhotoURL\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        FirstName: \"\",\r\n                        LastName: \"\",\r\n                        Email: \"\",\r\n                        Username: \"\",\r\n                        PhotoURL: \"./images/defaultProfilePhoto.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            FirstName,\r\n            LastName,\r\n            Email,\r\n            Username,\r\n            PhotoURL\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <PageHeading Heading=\"PROFILE\" />\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <ProfilePhoto PhotoURL={PhotoURL}\r\n                                OnProfilePhotoUpdated={async () => { await this.componentDidMount(); }} />\r\n                        </div>\r\n                        <div className=\"col-md-18\">\r\n                            <div className=\"type-h3 color-default p-t-xxs\">{FirstName + \" \" + LastName}</div>\r\n                            <div className=\"type-sh3\">\r\n                                <span className=\"fas fa-user-shield m-r-xxs\" style={{ color: \"#606060\" }}></span>Administrator\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-24\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-at\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Username</div>\r\n                                                    <div className=\"content-text-secondary\">{Username}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-envelope\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Email</div>\r\n                                                <div className=\"content-text-secondary\">{Email}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Settings OnSettingsSaved={async () => { await this.componentDidMount(); }} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Profile;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { blockDriverAccount } from \"../../AdministratorFunctions\";\r\n\r\nclass BlockAccountDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            BlockDate: \"\",\r\n            Reason: \"\",\r\n\r\n            ValidBlockDate: false,\r\n            ValidReason: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                BlockDate: \"\",\r\n                Reason: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidBlockDate = this.state.ValidBlockDate;\r\n        let ValidReason = this.state.ValidReason;\r\n\r\n        switch (field) {\r\n            case \"BlockDate\":\r\n                ValidBlockDate = (value !== \"\");\r\n                Errors.BlockDate = ValidBlockDate ? \"\" : \"Date is required\";\r\n\r\n                if (Errors.BlockDate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidBlockDate = (new Date(value).getTime() >= new Date().getTime());\r\n                Errors.BlockDate = ValidBlockDate ? \"\" : \"Date must be later than yesterday.\";\r\n                break;\r\n            case \"Reason\":\r\n                ValidReason = (value !== \"\");\r\n                Errors.Reason = ValidReason ? \"\" : \"Reason is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidBlockDate: ValidBlockDate,\r\n            ValidReason: ValidReason,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidBlockDate &&\r\n                        this.state.ValidReason\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const blockedDriver = {\r\n            Token: localStorage.Token,\r\n            DriverID: this.props.Driver.DriverID,\r\n            BlockDate: this.state.BlockDate,\r\n            Reason: this.state.Reason\r\n        };\r\n\r\n        await blockDriverAccount(blockedDriver).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Driver account is blocked.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            BlockDate,\r\n            Reason,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            Driver\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`block-account-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Block Driver</div>\r\n                                                <div className=\"type-sh3 m-b-xxs\">You are going to block\r\n                                                    <span className=\"color-default\">{` ${Driver.FirstName} ${Driver.LastName}`}</span>.\r\n                                                    </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Block Till</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"date\" name=\"BlockDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={BlockDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.BlockDate}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">Reason</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <textarea rows=\"6\" class=\"form-control\" name=\"Reason\" style={{ maxWidth: \"100%\" }}\r\n                                                        value={Reason} onChange={this.onChange}></textarea>\r\n                                                    <span className=\"text-danger\">{Errors.Reason}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Block Now\" className=\"btn btn-danger\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default BlockAccountDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { unblockDriverAccount } from \"../../AdministratorFunctions\";\r\n\r\nclass UnblockAccountDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false,\r\n        };\r\n\r\n        this.onUnblock = this.onUnblock.bind(this);\r\n    }\r\n\r\n    onUnblock = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const unblockedDriver = {\r\n            Token: localStorage.Token,\r\n            DriverID: this.props.Driver.DriverID\r\n        };\r\n\r\n        await unblockDriverAccount(unblockedDriver).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Driver account is unblocked.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            Driver\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`unblock-account-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-h3 color-default p-t-n\">Unblock Driver</div>\r\n                                            <div className=\"type-sh3 m-b-xxs\">Are you sure you want to unblock\r\n                                                <span className=\"color-default\">{` ${Driver.FirstName} ${Driver.LastName}`}</span>.</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-right\">\r\n                                        <button className=\"btn btn-primary\" onClick={this.onUnblock}>Unblock</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default UnblockAccountDialog;","import React, { Component } from \"react\";\r\nimport DriverContainer from \"../../../../containers/driver/DriverContainer\";\r\nimport TruckContainer from \"../../../../containers/truck/TruckContainer\";\r\nimport ProgressRing from \"../../../../controls/ProgressRing\";\r\nimport BlockAccountDialog from \"./BlockAccountDialog\";\r\nimport UnblockAccountDialog from \"./UnblockAccountDialog\";\r\nimport { activateDriverAccount } from \"../../AdministratorFunctions\";\r\n\r\nclass DriverListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onActivateAccount = this.onActivateAccount.bind(this);\r\n    }\r\n\r\n    onActivateAccount = async () => {\r\n        this.setState({\r\n            Refreshing: true\r\n        });\r\n\r\n        const activatedDriver = {\r\n            Token: localStorage.Token,\r\n            DriverID: this.props.Driver.DriverID\r\n        };\r\n\r\n        await activateDriverAccount(activatedDriver).then(async response => {\r\n            this.setState({\r\n                Refreshing: false\r\n            });\r\n\r\n            if (response.Message === \"Driver account is activated.\") {\r\n                this.props.OnAccountActivated(this.props.Driver);\r\n                await this.RefreshDriverContainer();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            Driver\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default p-xxs\">\r\n                <div className=\"entity-list\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <img src={Driver.PhotoURL ? Driver.PhotoURL : \"./images/defaultProfilePhoto.png\"} alt=\"profile_photo.png\"\r\n                                height=\"34\"\r\n                                width=\"34\"\r\n                                style={{\r\n                                    height: \"100%\",\r\n                                    width: \"100%\",\r\n                                    margin: \"0px\",\r\n                                    border: \"3px solid #3A3A3C\"\r\n                                }}/>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"type-h5 color-default p-t-n\">{`${Index + 1}.`}\r\n                                {Refreshing ? <span className=\"m-l-xxxs\"><ProgressRing /></span> : null}\r\n                                {Driver.IsBlocked ? <span class=\"type-h8 badge back-color-danger m-l-xxxs\">BLOCKED</span> : null}\r\n                            </div>\r\n                            <div className=\"content-text-primary\">{`${Driver.FirstName} ${Driver.LastName}`}\r\n                                {Driver.Active ? <span className=\"fa fa-check-circle m-l-xxxs\" style={{ color: \"#25AE88\" }}></span> : null}\r\n                            </div>\r\n                            <div className=\"content-text-secondary color-default\">{Driver.Username}</div>\r\n                            <div className=\"content-text-secondary\">{Driver.Email}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                {Driver.Active ? null : <button className=\"btn btn-primary\"\r\n                    onClick={this.onActivateAccount}>Activate</button>}\r\n\r\n                {Driver.IsBlocked ?\r\n                    <button className=\"btn btn-secondary\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#unblock-account-dialog-${Index}`}>Unblock</button> : \r\n                    <button className=\"btn btn-danger\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#block-account-dialog-${Index}`}>Block</button>}\r\n            </div>\r\n\r\n            <div className=\"back-color-gray\" data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#driver-list-item-${Index}`}>\r\n                <div className=\"type-h4 color-default text-right p-xxxs\">Details\r\n                    <i className=\"fas fa-ellipsis-v\"></i>\r\n                    <i class=\"glyph glyph-add\"></i>\r\n                    <i class=\"glyph glyph-remove\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`driver-list-item-${Index}`}>\r\n                <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                    <li role=\"presentation\" className=\"active\">\r\n                        <a href={`#driver-${Index}`} aria-controls={`driver-${Index}`} role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={async () => { await this.RefreshDriverContainer(); }}>Driver</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href={`#truck-${Index}`} aria-controls={`truck-${Index}`} role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={async () => { await this.RefreshTruckContainer(); }}>Truck</a>\r\n                    </li>\r\n                </ul>\r\n                <div className=\"tab-content\">\r\n                    <div role=\"tabpanel\" className=\"tab-pane active\" id={`driver-${Index}`}>\r\n                        <DriverContainer Refresh={refresh => { this.RefreshDriverContainer = refresh; }} DriverID={Driver.DriverID} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id={`truck-${Index}`}>\r\n                        <TruckContainer Refresh={refresh => { this.RefreshTruckContainer = refresh; }} DriverID={Driver.DriverID} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {Driver.IsBlocked ?\r\n                <UnblockAccountDialog Index={Index}\r\n                    Driver={Driver}\r\n                    OnOK={() => {\r\n                        this.props.OnAccountBlocked(Driver, false);\r\n                    }} /> :\r\n                <BlockAccountDialog Index={Index}\r\n                    Driver={Driver}\r\n                    OnOK={() => {\r\n                        this.props.OnAccountBlocked(Driver, true);\r\n                    }} />}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DriverListItem;","import React, { Component } from \"react\";\r\nimport { getData } from \"../../AdministratorFunctions\";\r\nimport SearchingContainer from \"../../../../containers/searching/SearchingContainer\";\r\nimport ProgressRing from \"../../../../controls/ProgressRing\";\r\nimport DriverListItem from \"./DriverListItem\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass DriversList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllDrivers: [],\r\n            Drivers: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Drivers\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Drivers found.\") {\r\n                    this.setState({\r\n                        AllDrivers: response.Drivers,\r\n                        Drivers: response.Drivers,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllDrivers: [],\r\n                        Drivers: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                Drivers: this.state.AllDrivers\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allDrivers = this.state.AllDrivers;\r\n        let filteredDrivers = [];\r\n        let count = 0;\r\n\r\n        for (let driver of allDrivers) {\r\n            if (driver.FirstName.includes(searchString) ||\r\n                driver.LastName.includes(searchString) ||\r\n                driver.Email.includes(searchString) ||\r\n                driver.Username.includes(searchString)) {\r\n                filteredDrivers[count++] = driver;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Drivers: filteredDrivers\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Drivers,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <PageHeading Heading=\"DRIVERS\" />\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-car m-r-xxs\"></span>Drivers</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Naqel Drivers\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search Drivers\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            {(Drivers.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"drivers\" /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {Drivers.map((driver, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <DriverListItem Index={index}\r\n                                Driver={driver}\r\n                                OnAccountActivated={driver => {\r\n                                    let drivers = Drivers;\r\n\r\n                                    for (let driverItem of drivers) {\r\n                                        if (driverItem === driver) {\r\n                                            driverItem.Active = true;\r\n                                            break;\r\n                                        }\r\n                                    }\r\n\r\n                                    this.setState({\r\n                                        Drivers: drivers\r\n                                    });\r\n\r\n                                }}\r\n                                OnAccountBlocked={(driver, isBlocked) => {\r\n                                    let drivers = Drivers;\r\n\r\n                                    for (let driverItem of drivers) {\r\n                                        if (driverItem === driver) {\r\n                                            driverItem.IsBlocked = isBlocked;\r\n                                            break;\r\n                                        }\r\n                                    }\r\n\r\n                                    this.setState({\r\n                                        Drivers: drivers\r\n                                    });\r\n                                }} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DriversList;","import React, { Component } from \"react\";\r\nimport DriversList from \"./DriversList\";\r\n\r\nclass Drivers extends Component {\r\n    render() {\r\n        return <section>\r\n            <DriversList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Drivers;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { setRefundRate } from \"../../AdministratorFunctions\";\r\n\r\nclass SetRefundRateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            RefundRate: this.props.Trader.TraderRefundRate ? this.props.Trader.TraderRefundRate.RefundRate : 0,\r\n\r\n            ValidRefundRate: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                RefundRate: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidRefundRate = this.state.ValidRefundRate;\r\n\r\n        switch (field) {\r\n            case \"RefundRate\":\r\n                ValidRefundRate = (value !== \"\");\r\n                Errors.RefundRate = ValidRefundRate ? \"\" : \"Refund Rate is required\";\r\n\r\n                if (Errors.RefundRate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidRefundRate = (value >= 0 && value <= 100);\r\n                Errors.RefundRate = ValidRefundRate ? \"\" : \"Refund rate must be between 0 and 100\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidRefundRate: ValidRefundRate,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidRefundRate\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const traderRefundRate = {\r\n            Token: localStorage.Token,\r\n            TraderID: this.props.Trader.TraderID,\r\n            RefundRate: this.state.RefundRate\r\n        };\r\n\r\n        await setRefundRate(traderRefundRate).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Refund rate is set.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK(response.RefundRate);\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            RefundRate,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            Trader\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`set-refund-rate-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Refund Rate</div>\r\n                                                <div className=\"type-sh3 m-b-xxs\">This set refund percentage rate for \r\n                                                    <span className=\"color-default\">{` ${Trader.FirstName} ${Trader.LastName}`}</span>.\r\n                                                    </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Refund Rate (%)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"RefundRate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={RefundRate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.RefundRate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Set\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default SetRefundRateDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { chargeTrader } from \"../../AdministratorFunctions\";\r\n\r\nclass ChargeTraderDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false,\r\n        };\r\n\r\n        this.onCharge = this.onCharge.bind(this);\r\n    }\r\n\r\n    onCharge = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const chargedTrader = {\r\n            Token: localStorage.Token,\r\n            TraderID: this.props.Trader.TraderID\r\n        };\r\n\r\n        await chargeTrader(chargedTrader).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Trader is charged.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            Trader\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`charge-trader-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-h3 color-default p-t-n\">Charge Trader</div>\r\n                                            <div className=\"type-sh3 m-b-xxs\">Are you sure you want to charge\r\n                                                <span className=\"color-default\">{` ${Trader.FirstName} ${Trader.LastName}`}</span>? On charging will remove this trader from exonerated list.</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-right\">\r\n                                        <button className=\"btn btn-primary\" onClick={this.onCharge}>Charge</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ChargeTraderDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { exonerateTrader } from \"../../AdministratorFunctions\";\r\n\r\nclass ExonerateTraderDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ExonerateDate: \"\",\r\n            Reason: \"\",\r\n\r\n            ValidExonerateDate: false,\r\n            ValidReason: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                ExonerateDate: \"\",\r\n                Reason: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidExonerateDate,\r\n            ValidReason\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"ExonerateDate\":\r\n                ValidExonerateDate = (value !== \"\");\r\n                Errors.ExonerateDate = ValidExonerateDate ? \"\" : \"Date is required\";\r\n\r\n                if (Errors.ExonerateDate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidExonerateDate = (new Date(value).getTime() >= new Date().getTime());\r\n                Errors.ExonerateDate = ValidExonerateDate ? \"\" : \"Date must be later than yesterday.\";\r\n                break;\r\n            case \"Reason\":\r\n                ValidReason = (value !== \"\");\r\n                Errors.Reason = ValidReason ? \"\" : \"Reason is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidExonerateDate: ValidExonerateDate,\r\n            ValidReason: ValidReason,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: ValidExonerateDate &&\r\n                        this.state.ValidReason\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const exoneratedTrader = {\r\n            Token: localStorage.Token,\r\n            TraderID: this.props.Trader.TraderID,\r\n            ExonerateDate: this.state.ExonerateDate,\r\n            Reason: this.state.Reason\r\n        };\r\n\r\n        await exonerateTrader(exoneratedTrader).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Trader is exonerated.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ExonerateDate,\r\n            Reason,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            Trader\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`exonerate-trader-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Exonerate Trader</div>\r\n                                                <div className=\"type-sh3 m-b-xxs\">You are going to exonerate\r\n                                                    <span className=\"color-default\">{` ${Trader.FirstName} ${Trader.LastName}`}</span>.\r\n                                                    </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Exonerate Till</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"date\" name=\"ExonerateDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={ExonerateDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.ExonerateDate}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">Reason</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <textarea rows=\"6\" class=\"form-control\" name=\"Reason\" style={{ maxWidth: \"100%\" }}\r\n                                                        value={Reason} onChange={this.onChange}></textarea>\r\n                                                    <span className=\"text-danger\">{Errors.Reason}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Exonerate Now\" className=\"btn btn-danger\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ExonerateTraderDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../controls/ProgressRing\";\r\nimport TraderContainer from \"../../../../containers/trader/TraderContainer\";\r\nimport SetRefundRateDialog from \"./SetRefundRateDialog\";\r\nimport ChargeTraderDialog from \"./ChargeTraderDialog\";\r\nimport ExonerateTraderDialog from \"./ExonerateTraderDialog\";\r\n\r\nclass TraderListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Refreshing: false\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            Trader\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default p-xxs\">\r\n                <div className=\"entity-list\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <img src={Trader.PhotoURL ? Trader.PhotoURL : \"./images/defaultProfilePhoto.png\"} alt=\"profile_photo.png\"\r\n                                height=\"34\"\r\n                                width=\"34\"\r\n                                style={{\r\n                                    height: \"100%\",\r\n                                    width: \"100%\",\r\n                                    margin: \"0px\",\r\n                                    border: \"3px solid #3A3A3C\"\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"type-h5 color-default p-t-n\">{`${Index + 1}.`}\r\n                                {Refreshing ? <span className=\"m-l-xxxs\"><ProgressRing /></span> : null}\r\n                            </div>\r\n                            <div className=\"content-text-primary\">{`${Trader.FirstName} ${Trader.LastName}`}</div>\r\n                            <div className=\"content-text-secondary color-default\">{Trader.Username}</div>\r\n                            <div className=\"content-text-secondary\">{Trader.Email}</div>\r\n                            <div className=\"content-text-secondary\">{Trader.Type}</div>\r\n                            <div className=\"content-text-secondary\">\r\n                                {Trader.TraderRefundRate ?\r\n                                    `Refund Rate: ${Trader.TraderRefundRate.RefundRate}%` :\r\n                                    `Refund Rate: Not Set`}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                <button className=\"btn btn-primary\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#set-refund-rate-dialog-${Index}`}>Set Refund Rate</button>\r\n\r\n                {Trader.IsExonerated ?\r\n                    <button className=\"btn btn-secondary\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#charge-trader-dialog-${Index}`}>Charge</button> :\r\n                    <button className=\"btn btn-danger\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#exonerate-trader-dialog-${Index}`}>Exonerate</button>}\r\n            </div>\r\n\r\n            <div className=\"back-color-gray\" data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#trader-list-item-${Index}`}>\r\n                <div className=\"type-h4 color-default text-right p-xxxs\">Details\r\n                    <i className=\"fas fa-ellipsis-v\"></i>\r\n                    <i class=\"glyph glyph-add\"></i>\r\n                    <i class=\"glyph glyph-remove\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`trader-list-item-${Index}`}>\r\n                <TraderContainer Refresh={refresh => { this.RefreshTraderContainer = refresh; }} TraderID={Trader.TraderID} />\r\n            </div>\r\n\r\n            <SetRefundRateDialog Index={Index}\r\n                Trader={Trader}\r\n                OnOK={refundRate => {\r\n                    this.props.OnRefundRateSet(Trader, refundRate);\r\n                }} />\r\n\r\n            {Trader.IsExonerated ?\r\n                <ChargeTraderDialog Index={Index}\r\n                    Trader={Trader}\r\n                    OnOK={() => {\r\n                        this.props.OnTraderExonerated(Trader, false);\r\n                    }} /> :\r\n                <ExonerateTraderDialog Index={Index}\r\n                    Trader={Trader}\r\n                    OnOK={() => {\r\n                        this.props.OnTraderExonerated(Trader, true);\r\n                    }} />}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderListItem;","import React, { Component } from \"react\";\r\nimport { getData } from \"../../AdministratorFunctions\";\r\nimport SearchingContainer from \"../../../../containers/searching/SearchingContainer\";\r\nimport ProgressRing from \"../../../../controls/ProgressRing\";\r\nimport TraderListItem from \"./TraderListItem\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass TradersList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllTraders: [],\r\n            Traders: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Traders\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Traders found.\") {\r\n                    this.setState({\r\n                        AllTraders: response.Traders,\r\n                        Traders: response.Traders,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllTraders: [],\r\n                        Traders: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                Traders: this.state.AllTraders\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allTraders = this.state.AllTraders;\r\n        let filteredTraders = [];\r\n        let count = 0;\r\n\r\n        for (let trader of allTraders) {\r\n            if (trader.FirstName.includes(searchString) ||\r\n                trader.LastName.includes(searchString) ||\r\n                trader.Email.includes(searchString) ||\r\n                trader.Username.includes(searchString)) {\r\n                filteredTraders[count++] = trader;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Traders: filteredTraders\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Traders,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <PageHeading Heading=\"TRADERS\" />\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-briefcase m-r-xxs\"></span>Traders and Brokers</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Naqel Traders and Brokers\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(Traders.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"traders or brokers\" /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {Traders.map((trader, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <TraderListItem Index={index}\r\n                                Trader={trader}\r\n                                OnRefundRateSet={(trader, refundRate) => {\r\n                                    let traders = Traders;\r\n\r\n                                    for (let traderItem of traders) {\r\n                                        if (traderItem === trader) {\r\n                                            traderItem.TraderRefundRate = refundRate;\r\n                                            break;\r\n                                        }\r\n                                    }\r\n\r\n                                    this.setState({\r\n                                        Traders: traders\r\n                                    });\r\n                                }}\r\n                                OnTraderExonerated={(trader, isExonerated) => {\r\n                                    let traders = Traders;\r\n\r\n                                    for (let traderItem of traders) {\r\n                                        if (traderItem === trader) {\r\n                                            traderItem.IsExonerated = isExonerated;\r\n                                            break;\r\n                                        }\r\n                                    }\r\n\r\n                                    this.setState({\r\n                                        Traders: traders\r\n                                    });\r\n                                }} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TradersList;","import React, { Component } from \"react\";\r\nimport TradersList from \"./TradersList\";\r\n\r\nclass Traders extends Component {\r\n    render() {\r\n        return <section>\r\n            <TradersList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Traders;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { addTraderObjectionReason } from \"../../../../AdministratorFunctions\";\r\n\r\nclass AddObjectionReasonDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Reason: \"\",\r\n            ValidReason: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Reason: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidReason = this.state.ValidReason;\r\n\r\n        switch (field) {\r\n            case \"Reason\":\r\n                ValidReason = (value !== \"\");\r\n                Errors.Reason = ValidReason ? \"\" : \"Reason is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidReason: ValidReason,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidReason\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newTraderObjectionReason = {\r\n            Token: localStorage.Token,\r\n            Reason: this.state.Reason\r\n        };\r\n\r\n        await addTraderObjectionReason(newTraderObjectionReason).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Objection reason is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Reason,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`add-trader-objection-reason-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Add New Reason</div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">Reason</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <textarea rows=\"6\" class=\"form-control\" name=\"Reason\" style={{ maxWidth: \"100%\" }}\r\n                                                        value={Reason} onChange={this.onChange}></textarea>\r\n                                                    <span className=\"text-danger\">{Errors.Reason}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddObjectionReasonDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\n\r\nimport {\r\n    deleteTraderObjectionReason,\r\n    verifyTraderObjectionReason\r\n} from \"../../../../AdministratorFunctions\";\r\n\r\nclass ObjectionReasonListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowProgressRing: false\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onVerify = this.onVerify.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        let discardedTraderObjectionReason = {\r\n            Token: localStorage.Token,\r\n            DriverObjectionReasonID: this.props.ObjectionReason.DriverObjectionReasonID\r\n        };\r\n\r\n        await deleteTraderObjectionReason(discardedTraderObjectionReason).then(response => {\r\n            this.setState({\r\n                ShowProgressRing: false\r\n            });\r\n\r\n            if (response.Message === \"Objection reason is deleted.\") {\r\n                this.props.OnObjectionReasonUpdated();\r\n            }\r\n        });\r\n    };\r\n\r\n    onVerify = async () => {\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        let verifiedTraderObjectionReason = {\r\n            Token: localStorage.Token,\r\n            DriverObjectionReasonID: this.props.ObjectionReason.DriverObjectionReasonID\r\n        };\r\n\r\n        await verifyTraderObjectionReason(verifiedTraderObjectionReason).then(response => {\r\n            this.setState({\r\n                ShowProgressRing: false\r\n            });\r\n\r\n            if (response.Message === \"Objection reason is verified.\") {\r\n                this.props.OnObjectionReasonUpdated();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowProgressRing\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            ObjectionReason\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{Index + 1}</strong>\r\n                {ShowProgressRing ? \r\n                    <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </td>\r\n            <td>\r\n                {ObjectionReason.TraderID ?\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span> :\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span>}\r\n            </td>\r\n            <td>{ObjectionReason.Reason}</td>\r\n            <td className=\"text-right\">\r\n                {ObjectionReason.TraderID ?\r\n                    <button className=\"btn btn-primary\" onClick={this.onVerify}>Verify</button> : null}\r\n                <button className=\"btn btn-danger\" onClick={this.onDelete}>Delete</button>\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default ObjectionReasonListItem;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport AddObjectionReasonDialog from \"./AddObjectionReasonDialog\";\r\nimport { getData } from \"../../../../AdministratorFunctions\";\r\n\r\nimport ObjectionReasonListItem from \"./ObjectionReasonListItem\";\r\n\r\nclass ObjectionReasonsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllObjectionReasons: [],\r\n            ObjectionReasons: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderObjectionReasons\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader objection reasons found.\") {\r\n                    this.setState({\r\n                        AllObjectionReasons: response.ObjectionReasons,\r\n                        ObjectionReasons: response.ObjectionReasons,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllObjectionReasons: [],\r\n                        ObjectionReasons: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                ObjectionReasons: this.state.AllObjectionReasons\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allObjectionReasons = this.state.AllObjectionReasons;\r\n        let filteredObjectionReasons = [];\r\n        let count = 0;\r\n\r\n        for (let objectionReason of allObjectionReasons) {\r\n            if (objectionReason.Reason.includes(searchString)) {\r\n                filteredObjectionReasons[count++] = objectionReason;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            ObjectionReasons: filteredObjectionReasons\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ObjectionReasons,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-comment-dots m-r-xxs\"></span>Trader Objection Reasons</div>\r\n                            <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target={`#add-trader-objection-reason-dialog`}>Add New</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <AddObjectionReasonDialog OnOK={async () => { await this.onComponentUpdated(); }} />\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Objection Reasons\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(ObjectionReasons.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"objection reasons\" /> :\r\n                <div class=\"table-responsive back-color-gray\">\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>NUMBER</th>\r\n                                <th>VERIFIED</th>\r\n                                <th>REASON</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {ObjectionReasons.map((objectionReason, index) => {\r\n                                return <ObjectionReasonListItem key={index}\r\n                                    Index={index}\r\n                                    ObjectionReason={objectionReason}\r\n                                    OnObjectionReasonUpdated={async () => { await this.onComponentUpdated(); }} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ObjectionReasonsList;","import React, { Component } from \"react\";\r\nimport ObjectionReasonsList from \"./ObjectionReasonsList\";\r\n\r\nclass TraderObjectionReasons extends Component {\r\n    render() {\r\n        return <section>\r\n            <ObjectionReasonsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderObjectionReasons;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { addDriverObjectionReason } from \"../../../../AdministratorFunctions\";\r\n\r\nclass AddObjectionReasonDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Reason: \"\",\r\n            ValidReason: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Reason: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidReason = this.state.ValidReason;\r\n\r\n        switch (field) {\r\n            case \"Reason\":\r\n                ValidReason = (value !== \"\");\r\n                Errors.Reason = ValidReason ? \"\" : \"Reason is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidReason: ValidReason,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidReason\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newDriverObjectionReason = {\r\n            Token: localStorage.Token,\r\n            Reason: this.state.Reason\r\n        };\r\n\r\n        await addDriverObjectionReason(newDriverObjectionReason).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Objection reason is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Reason,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`add-driver-objection-reason-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Add New Reason</div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">Reason</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <textarea rows=\"6\" class=\"form-control\" name=\"Reason\" style={{ maxWidth: \"100%\" }}\r\n                                                        value={Reason} onChange={this.onChange}></textarea>\r\n                                                    <span className=\"text-danger\">{Errors.Reason}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddObjectionReasonDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\n\r\nimport {\r\n    deleteDriverObjectionReason,\r\n    verifyDriverObjectionReason\r\n} from \"../../../../AdministratorFunctions\";\r\n\r\nclass ObjectionReasonListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowProgressRing: false\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onVerify = this.onVerify.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        let discardedDriverObjectionReason = {\r\n            Token: localStorage.Token,\r\n            DriverObjectionReasonID: this.props.ObjectionReason.DriverObjectionReasonID\r\n        };\r\n\r\n        await deleteDriverObjectionReason(discardedDriverObjectionReason).then(response => {\r\n            this.setState({\r\n                ShowProgressRing: false\r\n            });\r\n\r\n            if (response.Message === \"Objection reason is deleted.\") {\r\n                this.props.OnObjectionReasonUpdated();\r\n            }\r\n        });\r\n    };\r\n\r\n    onVerify = async () => {\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        let verifiedDriverObjectionReason = {\r\n            Token: localStorage.Token,\r\n            DriverObjectionReasonID: this.props.ObjectionReason.DriverObjectionReasonID\r\n        };\r\n\r\n        await verifyDriverObjectionReason(verifiedDriverObjectionReason).then(response => {\r\n            this.setState({\r\n                ShowProgressRing: false\r\n            });\r\n\r\n            if (response.Message === \"Objection reason is verified.\") {\r\n                this.props.OnObjectionReasonUpdated();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowProgressRing\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            ObjectionReason\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{Index + 1}</strong>\r\n                {ShowProgressRing ? \r\n                    <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </td>\r\n            <td>\r\n                {ObjectionReason.DriverID ?\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span> :\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span>}\r\n            </td>\r\n            <td>{ObjectionReason.Reason}</td>\r\n            <td className=\"text-right\">\r\n                {ObjectionReason.DriverID ?\r\n                    <button className=\"btn btn-primary\" onClick={this.onVerify}>Verify</button> : null}\r\n                <button className=\"btn btn-danger\" onClick={this.onDelete}>Delete</button>\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default ObjectionReasonListItem;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport AddObjectionReasonDialog from \"./AddObjectionReasonDialog\";\r\nimport { getData } from \"../../../../AdministratorFunctions\";\r\n\r\nimport ObjectionReasonListItem from \"./ObjectionReasonListItem\";\r\n\r\nclass ObjectionReasonsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllObjectionReasons: [],\r\n            ObjectionReasons: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DriverObjectionReasons\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver objection reasons found.\") {\r\n                    this.setState({\r\n                        AllObjectionReasons: response.ObjectionReasons,\r\n                        ObjectionReasons: response.ObjectionReasons,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllObjectionReasons: [],\r\n                        ObjectionReasons: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                ObjectionReasons: this.state.AllObjectionReasons\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allObjectionReasons = this.state.AllObjectionReasons;\r\n        let filteredObjectionReasons = [];\r\n        let count = 0;\r\n\r\n        for (let objectionReason of allObjectionReasons) {\r\n            if (objectionReason.Reason.includes(searchString)) {\r\n                filteredObjectionReasons[count++] = objectionReason;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            ObjectionReasons: filteredObjectionReasons\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ObjectionReasons,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-comment-dots m-r-xxs\"></span>Driver Objection Reasons</div>\r\n                            <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target={`#add-driver-objection-reason-dialog`}>Add New</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <AddObjectionReasonDialog OnOK={async () => { await this.onComponentUpdated(); }} />\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Objection Reasons\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(ObjectionReasons.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"objection reasons\" /> :\r\n                <div class=\"table-responsive back-color-gray\">\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>NUMBER</th>\r\n                                <th>VERIFIED</th>\r\n                                <th>REASON</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {ObjectionReasons.map((objectionReason, index) => {\r\n                                return <ObjectionReasonListItem key={index}\r\n                                    Index={index}\r\n                                    ObjectionReason={objectionReason}\r\n                                    OnObjectionReasonUpdated={async () => { await this.onComponentUpdated(); }} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ObjectionReasonsList;","import React, { Component } from \"react\";\r\nimport ObjectionReasonsList from \"./ObjectionReasonsList\";\r\n\r\nclass DriverObjectionReasons extends Component {\r\n    render() {\r\n        return <section>\r\n            <ObjectionReasonsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DriverObjectionReasons;","import React, { Component } from \"react\";\r\nimport TraderObjectionReasons from \"./traderObjectionReasons/TraderObjectionReasons\";\r\nimport DriverObjectionReasons from \"./driverObjectionReasons/DriverObjectionReasons\";\r\n\r\nclass ObjectionReasons extends Component {\r\n    render() {\r\n        return <section>\r\n            <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#trader-objection-reasons\" aria-controls=\"job-tab\" role=\"tab\" data-toggle=\"tab\">Trader Objection Reasons</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#driver-objection-reasons\" aria-controls=\"trader-tab\" role=\"tab\" data-toggle=\"tab\">Driver Objection Reasons</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div className=\"tab-content\">\r\n                <div role=\"tabpanel\" className=\"tab-pane active\" id=\"trader-objection-reasons\">\r\n                    <TraderObjectionReasons />\r\n                </div>\r\n                <div role=\"tabpanel\" className=\"tab-pane\" id=\"driver-objection-reasons\">\r\n                    <DriverObjectionReasons />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ObjectionReasons;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport JobObjectionContainer from \"../../../../../../containers/onGoingJob/JobObjectionContainer\";\r\nimport { getData } from \"../../../../AdministratorFunctions\";\r\n\r\nclass Objections extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobObjections: [],\r\n            Searching: false,\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobObjections\",\r\n                Params: {\r\n                    OnGoingJobID: this.props.OnGoingJobID\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job objections found.\") {\r\n                    this.props.OnObjectionsFound(response.JobObjections.length);\r\n\r\n                    this.setState({\r\n                        JobObjections: response.JobObjections,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobObjections: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            JobObjections,\r\n            Searching\r\n        } = this.state;\r\n\r\n        return <section>\r\n            {(JobObjections.length === 0) ?\r\n                <SearchingContainer Searching={Searching}\r\n                    SearchingFor=\"job objctions\" /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {JobObjections.map((jobObjection, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <JobObjectionContainer Index={index} JobObjection={jobObjection} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default Objections;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { discardObjectionableJob } from \"../../../AdministratorFunctions\";\r\n\r\nclass DiscardObjectionableJobDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false,\r\n        };\r\n\r\n        this.onDiscard = this.onDiscard.bind(this);\r\n    }\r\n\r\n    onDiscard = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const discardedObjectionableJob = {\r\n            Token: localStorage.Token,\r\n            OnGoingJobID: this.props.OnGoingJobID\r\n        };\r\n\r\n        await discardObjectionableJob(discardedObjectionableJob).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Objectionable job is discarded.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            JobNumber\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`discard-objectionable-job-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-h3 color-default p-t-n\">{`Discard Objectionable Job ${JobNumber}`}</div>\r\n                                            <div className=\"type-sh3 m-b-xxs\">Make sure you have taken all the neccesary actions before discrding this job. Are you sure you want to proceed?</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-right\">\r\n                                        <button className=\"btn btn-danger\" onClick={this.onDiscard}>Discard</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DiscardObjectionableJobDialog;","import React, { Component } from \"react\";\r\nimport OnGoingJobContainer from \"../../../../../containers/onGoingJob/JobContainer\";\r\nimport Objections from \"./jobObjections/Objections\";\r\nimport DiscardObjectionableJobDialog from \"./DiscardObjectionableJobDialog\";\r\n\r\nclass ObjectionableJobListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Refreshing: false,\r\n            NumberOfObjections: 0\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            NumberOfObjections\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            ObjectionableJob\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <OnGoingJobContainer Index={Index} OnGoingJob={ObjectionableJob} />\r\n            <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                <button className=\"btn btn-danger m-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#discard-objectionable-job-dialog-${Index}`}>Discard</button>\r\n            </div>\r\n\r\n            <div className=\"back-color-gray\" data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#driver-list-item-${Index}`}>\r\n                <div className=\"type-h4 color-default text-right p-xxxs\">\r\n                    <span class=\"badge back-color-danger m-r-xxs\">{NumberOfObjections}</span>Objections\r\n                    <i className=\"fas fa-ellipsis-v\"></i>\r\n                    <i class=\"glyph glyph-add\"></i>\r\n                    <i class=\"glyph glyph-remove\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`driver-list-item-${Index}`}>\r\n                <Objections OnGoingJobID={ObjectionableJob.OnGoingJobID}\r\n                    OnObjectionsFound={numberOfObjections => {\r\n                        this.setState({\r\n                            NumberOfObjections: numberOfObjections\r\n                        });\r\n                    }} />\r\n            </div>\r\n\r\n            <DiscardObjectionableJobDialog Index={Index}\r\n                OnGoingJobID={ObjectionableJob.OnGoingJobID}\r\n                JobNumber={ObjectionableJob.JobNumber}\r\n                OnOK={this.props.OnJobDiscarded}/>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ObjectionableJobListItem;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport ObjectionableJobListItem from \"./ObjectionableJobListItem\";\r\nimport { getData } from \"../../../AdministratorFunctions\";\r\n\r\nclass ObjectionableJobsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllObjectionableJobs: [],\r\n            ObjectionableJobs: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"ObjectionableJobs\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Objectionable jobs found.\") {\r\n                    this.setState({\r\n                        AllObjectionableJobs: response.ObjectionableJobs,\r\n                        ObjectionableJobs: response.ObjectionableJobs,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllObjectionableJobs: [],\r\n                        ObjectionableJobs: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                ObjectionableJobs: this.state.AllObjectionableJobs\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allObjectionableJobs = this.state.AllObjectionableJobs;\r\n        let filteredObjectionableJobs = [];\r\n        let count = 0;\r\n\r\n        for (let objectionableJob of allObjectionableJobs) {\r\n            if (objectionableJob.JobNumber.includes(searchString)) {\r\n                filteredObjectionableJobs[count++] = objectionableJob;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            ObjectionableJobs: filteredObjectionableJobs\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ObjectionableJobs,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-thumbs-down m-r-xxs\"></span>Objectionable Jobs</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Objectionable Jobs\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search By Job Number\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            {(ObjectionableJobs.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"objectionable jobs\" /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {ObjectionableJobs.map((objectionableJob, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <ObjectionableJobListItem Index={index}\r\n                                ObjectionableJob={objectionableJob}\r\n                                OnJobDiscarded={async () => { await this.onComponentUpdated(); }} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ObjectionableJobsList;","import React, { Component } from \"react\";\r\nimport ObjectionableJobsList from \"./ObjectionableJobsList\";\r\n\r\nclass ObjectionableJobs extends Component {\r\n    render() {\r\n        return <section>\r\n            <ObjectionableJobsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ObjectionableJobs;","import React, { Component } from \"react\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport ObjectionReasons from \"./objectionReasons/ObjectionReasons\";\r\nimport ObjectionableJobs from \"./objectionableJobs/ObjectionableJobs\";\r\n\r\nclass Jobs extends Component {\r\n    render() {\r\n        return <section>\r\n            <PageHeading Heading=\"JOBS\" />\r\n            <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                padding: \"10px\",\r\n                backgroundColor: \"#3A3A3C\",\r\n                width: \"100%\",\r\n                margin: \"0px\",\r\n            }}>\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#objection-reasons\" aria-controls=\"objection-reasons\" role=\"tab\" data-toggle=\"tab\">Objection Reasons</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#objectionable-jobs\" aria-controls=\"objectionable-jobs\" role=\"tab\" data-toggle=\"tab\">Objectionable Jobs</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div class=\"tab-content\">\r\n                <div role=\"tabpanel\" class=\"tab-pane active\" id=\"objection-reasons\">\r\n                    <ObjectionReasons />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"objectionable-jobs\">\r\n                    <ObjectionableJobs />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Jobs;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { addDriverAnswer } from \"../../../AdministratorFunctions\";\r\n\r\nclass AnswerDriverQuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Answer: this.props.Answer,\r\n\r\n            ValidAnswer: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Answer: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidAnswer = this.state.ValidAnswer;\r\n\r\n        switch (field) {\r\n            case \"Answer\":\r\n                ValidAnswer = (value !== \"\");\r\n                Errors.Answer = ValidAnswer ? \"\" : \"Answer is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidAnswer: ValidAnswer,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidAnswer\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const driverAnswer = {\r\n            Token: localStorage.Token,\r\n            DriverQuestionID: this.props.DriverQuestionID,\r\n            Answer: this.state.Answer\r\n        };\r\n\r\n        await addDriverAnswer(driverAnswer).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Answer is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Answer,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            QuestionNumber\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`answer-driver-question-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Answer for Question ID:\r\n                                                    <span className=\"color-default m-l-xxxs\">{QuestionNumber}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">Answer</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <textarea rows=\"6\" class=\"form-control\" name=\"Answer\" style={{ maxWidth: \"100%\" }}\r\n                                                        value={Answer} onChange={this.onChange}></textarea>\r\n                                                    <span className=\"text-danger\">{Errors.Answer}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Share\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AnswerDriverQuestionDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport { getData, addDriverQuestionClass } from \"../../../AdministratorFunctions\";\r\n\r\nclass DriverQuestionClasses extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            QuestionClasses: [],\r\n            AddPressed: false,\r\n            NewClass: \"\",\r\n            ValidNewClass: false,\r\n\r\n            ValidForm: false,\r\n            ShowProgressRing: false,\r\n\r\n            Errors: {\r\n                NewClass: \"No error.\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DriverQuestionClasses\"\r\n            };\r\n\r\n            this.setState({\r\n                ShowProgressRing: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Question classes found.\") {\r\n                    this.setState({\r\n                        QuestionClasses: response.QuestionClasses,\r\n                        ShowProgressRing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        QuestionClasses: [],\r\n                        ShowProgressRing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewClass = this.state.ValidNewClass;\r\n\r\n        switch (field) {\r\n            case \"NewClass\":\r\n                ValidNewClass = (value != \"\");\r\n                Errors.NewClass = ValidNewClass ? \"No error.\" : \"New class in required\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewClass: ValidNewClass\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidNewClass\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        const newDriverQuestionClass = {\r\n            Token: localStorage.Token,\r\n            Class: this.state.NewClass\r\n        };\r\n\r\n        await addDriverQuestionClass(newDriverQuestionClass).then(response => {\r\n            this.setState({\r\n                ShowProgressRing: null\r\n            });\r\n\r\n            if (response.Message === \"Question class is added.\") {\r\n                let questionClasses = this.state.QuestionClasses;\r\n                let errors = this.state.Errors;\r\n\r\n                questionClasses.push(response.QuestionClass);\r\n                errors.NewClass = \"No error.\";\r\n\r\n                this.setState({\r\n                    AddPressed: false,\r\n                    QuestionClasses: questionClasses,\r\n                    Errors: errors,\r\n                    NewClass: \"\"\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            QuestionClasses,\r\n            ShowProgressRing,\r\n            AddPressed,\r\n            NewClass,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            {ShowProgressRing ? <ProgressRing /> : null}\r\n            <div class=\"entity-list entity-list-expandable\">\r\n                <div class=\"entity-list entity-list-add-item-button\">\r\n                    <a class={AddPressed ? \"entity-list-item active\" : \"entity-list-item\"}>\r\n                        <div class=\"item-icon\" onClick={() => {\r\n                            this.state.AddPressed ?\r\n                                this.setState({ AddPressed: false }) :\r\n                                this.setState({ AddPressed: true });\r\n                        }}>\r\n                            <span class=\"glyph glyph-add\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Add a Class</div>\r\n                            <div class=\"content-text-secondary\">{Errors.NewClass}</div>\r\n                        </div>\r\n                        <div class=\"item-content-expanded\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <input type=\"text\" className=\"form-control\" name=\"NewClass\" autoComplete=\"off\"\r\n                                    value={NewClass} onChange={this.onChange} />\r\n                                <input type=\"submit\" value=\"Add\" className=\"btn btn-secondary\" disabled={!ValidForm} />\r\n                            </form>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                {QuestionClasses.map((questionClass, index) => {\r\n                    return <div key={index} class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-cog\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <button type=\"button\" class=\"btn btn-secondary\" style={{ margin: \"0px\", minWidth: \"0px\" }}\r\n                                onClick={() => { this.props.OnClassSelected(questionClass.Class); }}>Select</button>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">{`${index + 1}.`}</div>\r\n                            <div class=\"content-text-secondary\">{questionClass.Class}</div>\r\n                        </div>\r\n                    </div>;\r\n                })}\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DriverQuestionClasses;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport DriverQuestionClasses from \"./DriverQuestionClasses\";\r\nimport { classifyDriverQuestion } from \"../../../AdministratorFunctions\";\r\n\r\nclass ClassifyDriverQuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false,\r\n        };\r\n\r\n        this.onClassSelected = this.onClassSelected.bind(this);\r\n    }\r\n\r\n    onClassSelected = async questionClass => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const classifiedDriverQuestion = {\r\n            Token: localStorage.Token,\r\n            DriverQuestionID: this.props.DriverQuestionID,\r\n            Class: questionClass\r\n        };\r\n\r\n        await classifyDriverQuestion(classifiedDriverQuestion).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Question is classified.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            Class,\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`classify-driver-question-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-h3 color-default p-t-n\">Classify the Question</div>\r\n                                            <div className=\"type-h7 p-t-xxxs\">{Class ? `Current Class: ${Class}` : `Current Class: Unclassified`}</div>\r\n                                            <div className=\"m-t-xxxs\">\r\n                                                <DriverQuestionClasses OnClassSelected={this.onClassSelected} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ClassifyDriverQuestionDialog;","import React, { Component } from \"react\";\r\nimport DriverQuestionContainer from \"../../../../../containers/driverQuestion/DriverQuestionContainer\";\r\nimport AnswerDriverQuestionDialog from \"./AnswerDriverQuestionDialog\";\r\nimport ClassifyDriberQuestionDialog from \"./ClassifyDriverQuestionDialog\";\r\n\r\nclass DriverQuestionListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Question\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <DriverQuestionContainer Index={Index}\r\n                Question={Question} />\r\n\r\n            <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                <button className=\"btn btn-secondary m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#classify-driver-question-dialog-${Index}`}>Classify</button>\r\n\r\n                <button className=\"btn btn-primary m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#answer-driver-question-dialog-${Index}`}>{Question.DriverAnswer ? \"Update Answer\" : \"Answer\"}</button>\r\n            </div>\r\n\r\n            <AnswerDriverQuestionDialog Index={Index}\r\n                DriverQuestionID={Question.DriverQuestionID}\r\n                QuestionNumber={Question.QuestionNumber}\r\n                Answer={Question.DriverAnswer ? Question.DriverAnswer.Answer : \"\"}\r\n                OnOK={this.props.OnQuestionUpdated} />\r\n\r\n            <ClassifyDriberQuestionDialog Index={Index}\r\n                DriverQuestionID={Question.DriverQuestionID}\r\n                Class={Question.Class}\r\n                OnOK={this.props.OnQuestionUpdated}/>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DriverQuestionListItem;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport DriverQuestionListItem from \"./DriverQuestionListItem\";\r\nimport { getData } from \"../../../AdministratorFunctions\";\r\n\r\nclass DriverQuestionsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllQuestions: [],\r\n            Questions: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DriverQuestions\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Questions found.\") {\r\n                    this.setState({\r\n                        AllQuestions: response.Questions,\r\n                        Questions: response.Questions,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllQuestions: [],\r\n                        Questions: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                Questions: this.state.AllQuestions\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allQuestions = this.state.AllQuestions;\r\n        let filteredQuestions = [];\r\n        let count = 0;\r\n\r\n        for (let question of allQuestions) {\r\n            if (question.Question.includes(searchString) ||\r\n                question.QuestionNumber.includes(searchString) ||\r\n                question.Class.includes(searchString)) {\r\n                filteredQuestions[count++] = question;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Questions: filteredQuestions\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Questions,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-question-circle m-r-xxs\"></span>Questions</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Drivers' Questions\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search a Question\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(Questions.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"questions\" /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {Questions.map((question, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <DriverQuestionListItem Index={index}\r\n                                Question={question}\r\n                                OnQuestionUpdated={this.onComponentUpdated} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DriverQuestionsList;","import React, { Component } from \"react\";\r\nimport DriverQuestionsList from \"./DriverQuestionsList\";\r\n\r\nclass DriverQuestions extends Component {\r\n    render() {\r\n        return <section>\r\n            <DriverQuestionsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DriverQuestions;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { addTraderAnswer } from \"../../../AdministratorFunctions\";\r\n\r\nclass AnswerTraderQuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Answer: this.props.Answer,\r\n\r\n            ValidAnswer: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Answer: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidAnswer = this.state.ValidAnswer;\r\n\r\n        switch (field) {\r\n            case \"Answer\":\r\n                ValidAnswer = (value !== \"\");\r\n                Errors.Answer = ValidAnswer ? \"\" : \"Answer is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidAnswer: ValidAnswer,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidAnswer\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const traderAnswer = {\r\n            Token: localStorage.Token,\r\n            TraderQuestionID: this.props.TraderQuestionID,\r\n            Answer: this.state.Answer\r\n        };\r\n\r\n        await addTraderAnswer(traderAnswer).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Answer is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Answer,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            QuestionNumber\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`answer-trader-question-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Answer for Question ID:\r\n                                                    <span className=\"color-default m-l-xxxs\">{QuestionNumber}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">Answer</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <textarea rows=\"6\" class=\"form-control\" name=\"Answer\" style={{ maxWidth: \"100%\" }}\r\n                                                        value={Answer} onChange={this.onChange}></textarea>\r\n                                                    <span className=\"text-danger\">{Errors.Answer}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Share\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AnswerTraderQuestionDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport { getData, addTraderQuestionClass } from \"../../../AdministratorFunctions\";\r\n\r\nclass TraderQuestionClasses extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            QuestionClasses: [],\r\n            AddPressed: false,\r\n            NewClass: \"\",\r\n            ValidNewClass: false,\r\n\r\n            ValidForm: false,\r\n            ShowProgressRing: false,\r\n\r\n            Errors: {\r\n                NewClass: \"No error.\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderQuestionClasses\"\r\n            };\r\n\r\n            this.setState({\r\n                ShowProgressRing: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Question classes found.\") {\r\n                    this.setState({\r\n                        QuestionClasses: response.QuestionClasses,\r\n                        ShowProgressRing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        QuestionClasses: [],\r\n                        ShowProgressRing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewClass = this.state.ValidNewClass;\r\n\r\n        switch (field) {\r\n            case \"NewClass\":\r\n                ValidNewClass = (value != \"\");\r\n                Errors.NewClass = ValidNewClass ? \"No error.\" : \"New class in required\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewClass: ValidNewClass\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidNewClass\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        const newTraderQuestionClass = {\r\n            Token: localStorage.Token,\r\n            Class: this.state.NewClass\r\n        };\r\n\r\n        await addTraderQuestionClass(newTraderQuestionClass).then(response => {\r\n            this.setState({\r\n                ShowProgressRing: null\r\n            });\r\n\r\n            if (response.Message === \"Question class is added.\") {\r\n                let questionClasses = this.state.QuestionClasses;\r\n                let errors = this.state.Errors;\r\n\r\n                questionClasses.push(response.QuestionClass);\r\n                errors.NewClass = \"No error.\";\r\n\r\n                this.setState({\r\n                    AddPressed: false,\r\n                    QuestionClasses: questionClasses,\r\n                    Errors: errors,\r\n                    NewClass: \"\"\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            QuestionClasses,\r\n            ShowProgressRing,\r\n            AddPressed,\r\n            NewClass,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            {ShowProgressRing ? <ProgressRing /> : null}\r\n            <div class=\"entity-list entity-list-expandable\">\r\n                <div class=\"entity-list entity-list-add-item-button\">\r\n                    <a class={AddPressed ? \"entity-list-item active\" : \"entity-list-item\"}>\r\n                        <div class=\"item-icon\" onClick={() => {\r\n                            this.state.AddPressed ?\r\n                                this.setState({ AddPressed: false }) :\r\n                                this.setState({ AddPressed: true });\r\n                        }}>\r\n                            <span class=\"glyph glyph-add\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Add a Class</div>\r\n                            <div class=\"content-text-secondary\">{Errors.NewClass}</div>\r\n                        </div>\r\n                        <div class=\"item-content-expanded\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <input type=\"text\" className=\"form-control\" name=\"NewClass\" autoComplete=\"off\"\r\n                                    value={NewClass} onChange={this.onChange} />\r\n                                <input type=\"submit\" value=\"Add\" className=\"btn btn-secondary\" disabled={!ValidForm} />\r\n                            </form>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                {QuestionClasses.map((questionClass, index) => {\r\n                    return <div key={index} class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-cog\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <button type=\"button\" class=\"btn btn-secondary\" style={{ margin: \"0px\", minWidth: \"0px\" }}\r\n                                onClick={() => { this.props.OnClassSelected(questionClass.Class); }}>Select</button>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">{`${index + 1}.`}</div>\r\n                            <div class=\"content-text-secondary\">{questionClass.Class}</div>\r\n                        </div>\r\n                    </div>;\r\n                })}\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderQuestionClasses;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport TraderQuestionClasses from \"./TraderQuestionClasses\";\r\nimport { classifyTraderQuestion } from \"../../../AdministratorFunctions\";\r\n\r\nclass ClassifyTraderQuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false,\r\n        };\r\n\r\n        this.onClassSelected = this.onClassSelected.bind(this);\r\n    }\r\n\r\n    onClassSelected = async questionClass => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const classifiedTraderQuestion = {\r\n            Token: localStorage.Token,\r\n            TraderQuestionID: this.props.TraderQuestionID,\r\n            Class: questionClass\r\n        };\r\n\r\n        await classifyTraderQuestion(classifiedTraderQuestion).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Question is classified.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            Class,\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`classify-trader-question-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-h3 color-default p-t-n\">Classify the Question</div>\r\n                                            <div className=\"type-h7 p-t-xxxs\">{Class ? `Current Class: ${Class}` : `Current Class: Unclassified`}</div>\r\n                                            <div className=\"m-t-xxxs\">\r\n                                                <TraderQuestionClasses OnClassSelected={this.onClassSelected} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ClassifyTraderQuestionDialog;","import React, { Component } from \"react\";\r\nimport TraderQuestionContainer from \"../../../../../containers/traderQuestion/TraderQuestionContainer\";\r\nimport AnswerTraderQuestionDialog from \"./AnswerTraderQuestionDialog\";\r\nimport ClassifyTraderQuestionDialog from \"./ClassifyTraderQuestionDialog\";\r\n\r\nclass TraderQuestionListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Question\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <TraderQuestionContainer Index={Index}\r\n                Question={Question} />\r\n\r\n            <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                <button className=\"btn btn-secondary m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#classify-trader-question-dialog-${Index}`}>Classify</button>\r\n\r\n                <button className=\"btn btn-primary m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#answer-trader-question-dialog-${Index}`}>{Question.TraderAnswer ? \"Update Answer\" : \"Answer\"}</button>\r\n            </div>\r\n\r\n            <AnswerTraderQuestionDialog Index={Index}\r\n                TraderQuestionID={Question.TraderQuestionID}\r\n                QuestionNumber={Question.QuestionNumber}\r\n                Answer={Question.TraderAnswer ? Question.TraderAnswer.Answer : \"\"}\r\n                OnOK={this.props.OnQuestionUpdated} />\r\n\r\n            <ClassifyTraderQuestionDialog Index={Index}\r\n                TraderQuestionID={Question.TraderQuestionID}\r\n                Class={Question.Class}\r\n                OnOK={this.props.OnQuestionUpdated}/>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderQuestionListItem;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport TraderQuestionListItem from \"./TraderQuestionListItem\";\r\nimport { getData } from \"../../../AdministratorFunctions\";\r\n\r\nclass TraderQuestionsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllQuestions: [],\r\n            Questions: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderQuestions\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Questions found.\") {\r\n                    this.setState({\r\n                        AllQuestions: response.Questions,\r\n                        Questions: response.Questions,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllQuestions: [],\r\n                        Questions: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                Questions: this.state.AllQuestions\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allQuestions = this.state.AllQuestions;\r\n        let filteredQuestions = [];\r\n        let count = 0;\r\n\r\n        for (let question of allQuestions) {\r\n            if (question.Question.includes(searchString) ||\r\n                question.QuestionNumber.includes(searchString) ||\r\n                question.Class.includes(searchString)) {\r\n                filteredQuestions[count++] = question;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Questions: filteredQuestions\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Questions,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-question-circle m-r-xxs\"></span>Questions</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Traders' Questions\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search a Question\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(Questions.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"questions\" /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {Questions.map((question, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <TraderQuestionListItem Index={index}\r\n                                Question={question}\r\n                                OnQuestionUpdated={this.onComponentUpdated} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderQuestionsList;","import React, { Component } from \"react\";\r\nimport TraderQuestionsList from \"./TraderQuestionsList\";\r\n\r\nclass TraderQuestions extends Component {\r\n    render() {\r\n        return <section>\r\n            <TraderQuestionsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderQuestions;","import React, { Component } from \"react\";\r\n\r\nclass ResponsibleQuestionContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Question\r\n        } = this.props;\r\n\r\n        const askedOn = new Date(Question.Created);\r\n        const askedBy = Question.AskedBy;\r\n        const responsibleAnswer = Question.ResponsibleAnswer;\r\n        const answeredOn = responsibleAnswer ? new Date(responsibleAnswer.Created) : null;\r\n        const answeredBy = responsibleAnswer ? responsibleAnswer.AnsweredBy : null;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"type-h5 color-default p-t-n\">{`${Index + 1}. Question ID: ${Question.QuestionNumber}`}</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-user\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">\r\n                                            <span className=\"fas fa-copyright m-r-xxxs\"></span>\r\n                                            {`${askedBy.Name}`}\r\n                                        </div>\r\n                                        <div className=\"content-text-secondary\">{`@${askedBy.Username}`}</div>\r\n                                        <div className=\"content-text-secondary\">{`${askedOn.toDateString()} at ${askedOn.toLocaleTimeString()}`}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-question\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">\r\n                                            <span className=\"m-r-xxxs\">Question</span>\r\n                                            {Question.Class ?\r\n                                                <span class=\"badge back-color-golden\">{Question.Class.toUpperCase()}</span> :\r\n                                                <span class=\"badge back-color-golden\">UNCLASSIFIED</span>}\r\n                                        </div>\r\n                                        <div className=\"content-text-secondary\">{Question.Question}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {responsibleAnswer ? \r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-user\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">\r\n                                                <span className=\"fas fa-user-shield m-r-xxxs\"></span>\r\n                                                {`${answeredBy.FirstName} ${answeredBy.LastName}`}\r\n                                            </div>\r\n                                            <div className=\"content-text-secondary\">{`@${answeredBy.Username}`}</div>\r\n                                            <div className=\"content-text-secondary\">{`${answeredOn.toDateString()} at ${answeredOn.toLocaleTimeString()}.`}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-comment\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">\r\n                                                <span className=\"m-r-xxxs\">Answer</span>\r\n                                                {responsibleAnswer.Edited ? <span className=\"color-default\">EDITED</span> : null}\r\n                                            </div>\r\n                                            <div className=\"content-text-secondary\">{responsibleAnswer.Answer}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div> : \r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-comment\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">\r\n                                                <span className=\"m-r-xxxs\">Answer</span>\r\n                                            </div>\r\n                                            <div className=\"content-text-secondary\">This question has not been answered yet.</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default ResponsibleQuestionContainer;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { addResponsibleAnswer } from \"../../../AdministratorFunctions\";\r\n\r\nclass AnswerResponsibleQuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Answer: this.props.Answer,\r\n\r\n            ValidAnswer: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Answer: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidAnswer = this.state.ValidAnswer;\r\n\r\n        switch (field) {\r\n            case \"Answer\":\r\n                ValidAnswer = (value !== \"\");\r\n                Errors.Answer = ValidAnswer ? \"\" : \"Answer is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidAnswer: ValidAnswer,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidAnswer\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const responsibleAnswer = {\r\n            Token: localStorage.Token,\r\n            ResponsibleQuestionID: this.props.ResponsibleQuestionID,\r\n            Answer: this.state.Answer\r\n        };\r\n\r\n        await addResponsibleAnswer(responsibleAnswer).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Answer is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Answer,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            QuestionNumber\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`answer-responsible-question-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Answer for Question ID:\r\n                                                    <span className=\"color-default m-l-xxxs\">{QuestionNumber}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">Answer</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <textarea rows=\"6\" class=\"form-control\" name=\"Answer\" style={{ maxWidth: \"100%\" }}\r\n                                                        value={Answer} onChange={this.onChange}></textarea>\r\n                                                    <span className=\"text-danger\">{Errors.Answer}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Share\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AnswerResponsibleQuestionDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport { getData, addResponsibleQuestionClass } from \"../../../AdministratorFunctions\";\r\n\r\nclass ResponsibleQuestionClasses extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            QuestionClasses: [],\r\n            AddPressed: false,\r\n            NewClass: \"\",\r\n            ValidNewClass: false,\r\n\r\n            ValidForm: false,\r\n            ShowProgressRing: false,\r\n\r\n            Errors: {\r\n                NewClass: \"No error.\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"ResponsibleQuestionClasses\"\r\n            };\r\n\r\n            this.setState({\r\n                ShowProgressRing: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Question classes found.\") {\r\n                    this.setState({\r\n                        QuestionClasses: response.QuestionClasses,\r\n                        ShowProgressRing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        QuestionClasses: [],\r\n                        ShowProgressRing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewClass = this.state.ValidNewClass;\r\n\r\n        switch (field) {\r\n            case \"NewClass\":\r\n                ValidNewClass = (value != \"\");\r\n                Errors.NewClass = ValidNewClass ? \"No error.\" : \"New class in required\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewClass: ValidNewClass\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidNewClass\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        const newResponsibleQuestionClass = {\r\n            Token: localStorage.Token,\r\n            Class: this.state.NewClass\r\n        };\r\n\r\n        await addResponsibleQuestionClass(newResponsibleQuestionClass).then(response => {\r\n            this.setState({\r\n                ShowProgressRing: null\r\n            });\r\n\r\n            if (response.Message === \"Question class is added.\") {\r\n                let questionClasses = this.state.QuestionClasses;\r\n                let errors = this.state.Errors;\r\n\r\n                questionClasses.push(response.QuestionClass);\r\n                errors.NewClass = \"No error.\";\r\n\r\n                this.setState({\r\n                    AddPressed: false,\r\n                    QuestionClasses: questionClasses,\r\n                    Errors: errors,\r\n                    NewClass: \"\"\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            QuestionClasses,\r\n            ShowProgressRing,\r\n            AddPressed,\r\n            NewClass,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            {ShowProgressRing ? <ProgressRing /> : null}\r\n            <div class=\"entity-list entity-list-expandable\">\r\n                <div class=\"entity-list entity-list-add-item-button\">\r\n                    <a class={AddPressed ? \"entity-list-item active\" : \"entity-list-item\"}>\r\n                        <div class=\"item-icon\" onClick={() => {\r\n                            this.state.AddPressed ?\r\n                                this.setState({ AddPressed: false }) :\r\n                                this.setState({ AddPressed: true });\r\n                        }}>\r\n                            <span class=\"glyph glyph-add\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Add a Class</div>\r\n                            <div class=\"content-text-secondary\">{Errors.NewClass}</div>\r\n                        </div>\r\n                        <div class=\"item-content-expanded\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <input type=\"text\" className=\"form-control\" name=\"NewClass\" autoComplete=\"off\"\r\n                                    value={NewClass} onChange={this.onChange} />\r\n                                <input type=\"submit\" value=\"Add\" className=\"btn btn-secondary\" disabled={!ValidForm} />\r\n                            </form>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                {QuestionClasses.map((questionClass, index) => {\r\n                    return <div key={index} class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-cog\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <button type=\"button\" class=\"btn btn-secondary\" style={{ margin: \"0px\", minWidth: \"0px\" }}\r\n                                onClick={() => { this.props.OnClassSelected(questionClass.Class); }}>Select</button>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">{`${index + 1}.`}</div>\r\n                            <div class=\"content-text-secondary\">{questionClass.Class}</div>\r\n                        </div>\r\n                    </div>;\r\n                })}\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ResponsibleQuestionClasses;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport ResponsibleQuestionClasses from \"./ResponsibleQuestionClasses\";\r\nimport { classifyResponsibleQuestion } from \"../../../AdministratorFunctions\";\r\n\r\nclass ClassifyResponsibleQuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false,\r\n        };\r\n\r\n        this.onClassSelected = this.onClassSelected.bind(this);\r\n    }\r\n\r\n    onClassSelected = async questionClass => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const classifiedResponsibleQuestion = {\r\n            Token: localStorage.Token,\r\n            ResponsibleQuestionID: this.props.ResponsibleQuestionID,\r\n            Class: questionClass\r\n        };\r\n\r\n        await classifyResponsibleQuestion(classifiedResponsibleQuestion).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Question is classified.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            Class,\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`classify-responsible-question-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-h3 color-default p-t-n\">Classify the Question</div>\r\n                                            <div className=\"type-h7 p-t-xxxs\">{Class ? `Current Class: ${Class}` : `Current Class: Unclassified`}</div>\r\n                                            <div className=\"m-t-xxxs\">\r\n                                                <ResponsibleQuestionClasses OnClassSelected={this.onClassSelected} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ClassifyResponsibleQuestionDialog;","import React, { Component } from \"react\";\r\nimport ResponsibleQuestionContainer from \"../../../../../containers/responsibleQuestion/ResponsibleQuestionContainer\";\r\nimport AnswerResponsibleQuestionDialog from \"./AnswerResponsibleQuestionDialog\";\r\nimport ClassifyResponsibleQuestionDialog from \"./ClassifyResponsibleQuestionDialog\";\r\n\r\nclass ResponsibleQuestionListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Question\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <ResponsibleQuestionContainer Index={Index}\r\n                Question={Question} />\r\n\r\n            <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                <button className=\"btn btn-secondary m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#classify-responsible-question-dialog-${Index}`}>Classify</button>\r\n\r\n                <button className=\"btn btn-primary m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#answer-responsible-question-dialog-${Index}`}>{Question.ResponsibleAnswer ? \"Update Answer\" : \"Answer\"}</button>\r\n            </div>\r\n\r\n            <AnswerResponsibleQuestionDialog Index={Index}\r\n                ResponsibleQuestionID={Question.ResponsibleQuestionID}\r\n                QuestionNumber={Question.QuestionNumber}\r\n                Answer={Question.ResponsibleAnswer ? Question.ResponsibleAnswer.Answer : \"\"}\r\n                OnOK={this.props.OnQuestionUpdated} />\r\n\r\n            <ClassifyResponsibleQuestionDialog Index={Index}\r\n                ResponsibleQuestionID={Question.ResponsibleQuestionID}\r\n                Class={Question.Class}\r\n                OnOK={this.props.OnQuestionUpdated} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ResponsibleQuestionListItem;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport ResponsibleQuestionListItem from \"./ResponsibleQuestionListItem\";\r\nimport { getData } from \"../../../AdministratorFunctions\";\r\n\r\nclass ResponsibleQuestionsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllQuestions: [],\r\n            Questions: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"ResponsibleQuestions\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Questions found.\") {\r\n                    this.setState({\r\n                        AllQuestions: response.Questions,\r\n                        Questions: response.Questions,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllQuestions: [],\r\n                        Questions: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                Questions: this.state.AllQuestions\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allQuestions = this.state.AllQuestions;\r\n        let filteredQuestions = [];\r\n        let count = 0;\r\n\r\n        for (let question of allQuestions) {\r\n            if (question.Question.includes(searchString) ||\r\n                question.QuestionNumber.includes(searchString) ||\r\n                question.Class.includes(searchString)) {\r\n                filteredQuestions[count++] = question;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Questions: filteredQuestions\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Questions,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-question-circle m-r-xxs\"></span>Questions</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>TC Responsibles' Questions\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search a Question\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(Questions.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"questions\" /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {Questions.map((question, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <ResponsibleQuestionListItem Index={index}\r\n                                Question={question}\r\n                                OnQuestionUpdated={this.onComponentUpdated} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ResponsibleQuestionsList;","import React, { Component } from \"react\";\r\nimport ResponsibleQuestionsList from \"./ResponsibleQuestionsList\";\r\n\r\nclass ResponsibleQuestions extends Component {\r\n    render() {\r\n        return <section>\r\n            <ResponsibleQuestionsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ResponsibleQuestions;","import React, { Component } from \"react\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport DriverQuestions from \"./driverQuestions/DriverQuestions\";\r\nimport TraderQuestions from \"./traderQuestions/TraderQuestions\";\r\nimport ResponsibleQuestions from \"./responsibleQuestions/ResponsibleQuestions\";\r\n\r\nclass Questions extends Component {\r\n    render() {\r\n        return <section>\r\n            <PageHeading Heading=\"QUESTIONS\" />\r\n            <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                padding: \"10px\",\r\n                backgroundColor: \"#3A3A3C\",\r\n                width: \"100%\",\r\n                margin: \"0px\",\r\n            }}>\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#driver-questions\" aria-controls=\"driver-questions\" role=\"tab\" data-toggle=\"tab\">Drivers' Questions</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#trader-questions\" aria-controls=\"trader-questions\" role=\"tab\" data-toggle=\"tab\">Traders' Questions</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#responsible-questions\" aria-controls=\"responsible-questions\" role=\"tab\" data-toggle=\"tab\">TC Responsibles' Questions</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div class=\"tab-content\">\r\n                <div role=\"tabpanel\" class=\"tab-pane active\" id=\"driver-questions\">\r\n                    <DriverQuestions />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"trader-questions\">\r\n                    <TraderQuestions />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"responsible-questions\">\r\n                    <ResponsibleQuestions />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Questions;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { setGlobalFeeRate } from \"../../../../AdministratorFunctions\";\r\n\r\nclass SetGlobalFeeRateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            FeeRate: \"\",\r\n\r\n            ValidFeeRate: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                FeeRate: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFeeRate = this.state.ValidFeeRate;\r\n\r\n        switch (field) {\r\n            case \"FeeRate\":\r\n                ValidFeeRate = (value !== \"\");\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : \"Fee rate is required\";\r\n\r\n                if (Errors.FeeRate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidFeeRate = (value >= 1 && value <= 100);\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : \"Fee Rate can be between 1 and 100.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFeeRate: ValidFeeRate,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidFeeRate\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const feeRate = {\r\n            Token: localStorage.Token,\r\n            FeeRate: this.state.FeeRate\r\n        };\r\n\r\n        await setGlobalFeeRate(feeRate).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Global fee rate is set.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            FeeRate,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`set-global-fee-rate-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Set Global Fee Rate</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Global Fee Rate (%)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"FeeRate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={FeeRate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.FeeRate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Set\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default SetGlobalFeeRateDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { setTemporaryFeeRate } from \"../../../../AdministratorFunctions\";\r\n\r\nclass SetTemporaryFeeRateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            FeeRate: \"\",\r\n            Date: \"\",\r\n\r\n            ValidFeeRate: false,\r\n            ValidDate: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                FeeRate: \"\",\r\n                Date: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFeeRate = this.state.ValidFeeRate;\r\n        let ValidDate = this.state.ValidDate;\r\n\r\n        switch (field) {\r\n            case \"FeeRate\":\r\n                ValidFeeRate = (value !== \"\");\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : \"Fee rate is required\";\r\n\r\n                if (Errors.FeeRate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidFeeRate = (value >= 1 && value <= 100);\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : \"Fee Rate can be between 1 and 100.\";\r\n                break;\r\n            case \"Date\":\r\n                ValidDate = (value !== \"\");\r\n                Errors.Date = ValidDate ? \"\" : \"Date is required\";\r\n\r\n                if (Errors.Date !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidDate = (new Date(value).getTime() >= new Date().getTime());\r\n                Errors.Date = ValidDate ? \"\" : \"Date must be later than yesterday.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFeeRate: ValidFeeRate,\r\n            ValidDate: ValidDate\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidFeeRate &&\r\n                        this.state.ValidDate\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const temporaryFeeRateData = {\r\n            Token: localStorage.Token,\r\n            FeeRate: this.state.FeeRate,\r\n            Date: this.state.Date\r\n        };\r\n\r\n        await setTemporaryFeeRate(temporaryFeeRateData).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Temporary fee rate is set.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            FeeRate,\r\n            Date,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`set-temporary-fee-rate-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Set Temporary Fee Rate</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Temporary Fee Rate (%)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"FeeRate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={FeeRate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.FeeRate}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Date Up To</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"date\" name=\"Date\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={Date} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.Date}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Set\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default SetTemporaryFeeRateDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { clearTemporaryFeeRate } from \"../../../../AdministratorFunctions\";\r\n\r\nclass ClearTemporaryFeeRateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false,\r\n        };\r\n\r\n        this.onClear = this.onClear.bind(this);\r\n    }\r\n\r\n    onClear = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const clearedTemporaryFeeRate = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        await clearTemporaryFeeRate(clearedTemporaryFeeRate).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Temporary fee rate is cleared.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`clear-temporary-fee-rate-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-h3 color-default p-t-n\">Clear Temporary Fee Rate</div>\r\n                                            <div className=\"type-sh3 m-b-xxs\">Are you sure you want to clear temporary fee rate before its due date?</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-right\">\r\n                                        <button className=\"btn btn-danger\" onClick={this.onClear}>Clear</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ClearTemporaryFeeRateDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"./../../../../../../controls/ProgressRing\";\r\nimport { getData } from \"../../../../AdministratorFunctions\";\r\nimport SetGlobalFeeRateDialog from \"./SetGlobalFeeRateDialog\";\r\nimport SetTemporaryFeeRateDialog from \"./SetTemporaryFeeRateDialog\";\r\nimport ClearTemporaryFeeRateDialog from \"./ClearTemporaryFeeRateDialog\";\r\n\r\nclass GlobalAndTemporaryRates extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            GlobalFeeRate: 0.00,\r\n            TemporaryFeeRateData: null, \r\n            Searching: false\r\n        }\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"GlobalAndTemporaryFeeRates\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Global and temporary fee rates found.\") {\r\n                    this.setState({\r\n                        GlobalFeeRate: response.GlobalFeeRate,\r\n                        TemporaryFeeRateData: response.TemporaryFeeRateData,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        GlobalFeeRate: 0.00,\r\n                        TemporaryFeeRateData: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            GlobalFeeRate,\r\n            TemporaryFeeRateData,\r\n            Searching\r\n        } = this.state;\r\n\r\n        const dateUpTo = TemporaryFeeRateData ? new Date(TemporaryFeeRateData.Date) : null;\r\n\r\n        return <section>\r\n            <div class=\"alert alert-info m-n\" style={{ backgroundColor: \"#E5E5E5\" }}>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <div className=\"entity-list\">\r\n                            <div className=\"entity-list-item\">\r\n                                <div className=\"item-icon\" style={{ backgroundColor: \"#E5E5E5\", color: \"#008575\" }}>\r\n                                    <span className=\"fas fa-tag\"></span>\r\n                                </div>\r\n                                <div className=\"item-content-primary\">\r\n                                    <div className=\"content-text-primary\">Global Fee Rate\r\n                                        {Searching ? <span className=\"m-l-xxxs\"><ProgressRing /></span> : null}\r\n                                    </div>\r\n                                    <div className=\"content-text-secondary\">{GlobalFeeRate ? `${GlobalFeeRate}%` : \"Not found.\"}</div>\r\n                                    <button className=\"btn btn-primary\"\r\n                                        data-toggle=\"modal\"\r\n                                        data-target={`#set-global-fee-rate-dialog`}>Set</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <div className=\"entity-list\">\r\n                            <div className=\"entity-list-item\">\r\n                                <div className=\"item-icon\" style={{ backgroundColor: \"#E5E5E5\", color: \"#008575\" }}>\r\n                                    <span className=\"fas fa-tag\"></span>\r\n                                </div>\r\n                                <div className=\"item-content-primary\">\r\n                                    <div className=\"content-text-primary\">Temporary Fee Rate\r\n                                        {Searching ? <span className=\"m-l-xxxs\"><ProgressRing /></span> : null}\r\n                                    </div>\r\n\r\n                                    {TemporaryFeeRateData ?\r\n                                        <section>\r\n                                            <div className=\"content-text-secondary\">{`${TemporaryFeeRateData.FeeRate}%`}</div>\r\n                                            <div className=\"content-text-secondary\">{`UP TO: ${dateUpTo.toDateString()}`}</div>\r\n                                            <button className=\"btn btn-danger\"\r\n                                                data-toggle=\"modal\"\r\n                                                data-target={`#clear-temporary-fee-rate-dialog`}>Clear</button>\r\n                                        </section> :\r\n                                        <section>\r\n                                            <div className=\"content-text-secondary\">Not found.</div>\r\n                                            <button className=\"btn btn-primary\"\r\n                                                data-toggle=\"modal\"\r\n                                                data-target={`#set-temporary-fee-rate-dialog`}>Set</button>\r\n                                        </section>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <SetGlobalFeeRateDialog OnOK={this.onComponentUpdated} />\r\n            <SetTemporaryFeeRateDialog OnOK={this.onComponentUpdated} />\r\n            <ClearTemporaryFeeRateDialog OnOK={this.onComponentUpdated} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default GlobalAndTemporaryRates;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { updatePriceRange } from \"../../../../AdministratorFunctions\";\r\n\r\nclass UpdatePriceRangeDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            FeeRate: this.props.FeeRate,\r\n\r\n            ValidFeeRate: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                FeeRate: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFeeRate = this.state.ValidFeeRate;\r\n\r\n        switch (field) {\r\n            case \"FeeRate\":\r\n                ValidFeeRate = (value !== \"\");\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : \"Fee rate is required\";\r\n\r\n                if (Errors.FeeRate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidFeeRate = (value >= 1 && value <= 100);\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : \"Fee Rate can be between 1 and 100.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFeeRate: ValidFeeRate,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidFeeRate\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const updatedPriceRange = {\r\n            Token: localStorage.Token,\r\n            PriceRangeID: this.props.PriceRangeID,\r\n            FeeRate: this.state.FeeRate\r\n        };\r\n\r\n        await updatePriceRange(updatedPriceRange).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Price range is updated.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK(this.state.FeeRate);\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            FeeRate,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        const {\r\n            Index\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`update-fee-rate-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Update Fee Rate</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Fee Rate (%)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"FeeRate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={FeeRate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.FeeRate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Set\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default UpdatePriceRangeDialog;","import React, { Component } from \"react\";\r\nimport UpdatePriceRangeDialog from \"./UpdatePriceRangeDialog\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\nimport { deletePriceRange } from \"../../../../AdministratorFunctions\";\r\n\r\nclass PriceRangeListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowProgressRing: false\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        let discardedPriceRange = {\r\n            Token: localStorage.Token,\r\n            PriceRangeID: this.props.PriceRange.PriceRangeID\r\n        };\r\n\r\n        await deletePriceRange(discardedPriceRange).then(response => {\r\n            this.setState({\r\n                ShowProgressRing: false\r\n            });\r\n\r\n            if (response.Message === \"Price range is deleted.\") {\r\n                this.props.OnPriceRangeDeleted(this.props.PriceRange);\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowProgressRing\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            PriceRange\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{Index + 1}</strong>\r\n                {ShowProgressRing ?\r\n                    <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </td>\r\n\r\n            <td>{`$${parseFloat(PriceRange.StartRange).toFixed(2)}`}</td>\r\n            <td>{`$${parseFloat(PriceRange.EndRange).toFixed(2)}`}</td>\r\n            <td>{`${PriceRange.FeeRate}%`}</td>\r\n\r\n            <td className=\"text-right\">\r\n                <button className=\"btn btn-secondary\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#update-fee-rate-dialog-${Index}`}>Edit Fee Rate</button>\r\n                <button className=\"btn btn-danger\" onClick={this.onDelete}>Delete</button>\r\n\r\n                <UpdatePriceRangeDialog Index={Index}\r\n                    FeeRate={PriceRange.FeeRate}\r\n                    PriceRangeID={PriceRange.PriceRangeID}\r\n                    OnOK={this.props.OnPriceRangeUpdated} />\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default PriceRangeListItem;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { addPriceRange } from \"../../../../AdministratorFunctions\";\r\n\r\nclass AddPriceRangeDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            StartRange: \"\",\r\n            EndRange: \"\",\r\n            FeeRate: \"\",\r\n\r\n            ValidStartRange: false,\r\n            ValidEndRange: false,\r\n            ValidFeeRate: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                StartRange: \"\",\r\n                EndRange: \"\",\r\n                FeeRate: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidStartRange = this.state.ValidStartRange;\r\n        let ValidEndRange = this.state.ValidEndRange;\r\n        let ValidFeeRate = this.state.ValidFeeRate;\r\n\r\n        switch (field) {\r\n            case \"StartRange\":\r\n                ValidStartRange = (value !== \"\");\r\n                Errors.StartRange = ValidStartRange ? \"\" : \"Starting price is required\";\r\n\r\n                if (Errors.StartRange !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                if (this.state.EndRange !== \"\") {\r\n                    ValidStartRange = (value <= parseFloat(this.state.EndRange));\r\n                    Errors.StartRange = ValidStartRange ? \"\" : \"Starting price must be less than Ending price.\";\r\n\r\n                    if (Errors.StartRange !== \"\") {\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n                ValidEndRange = (parseFloat(this.state.EndRange) >= value);\r\n                Errors.EndRange = ValidEndRange ? \"\" : \"Ending price must be greater than Starting price.\";\r\n                break;\r\n            case \"EndRange\":\r\n                ValidEndRange = (value !== \"\");\r\n                Errors.EndRange = ValidEndRange ? \"\" : \"Ending price is required\";\r\n\r\n                if (Errors.EndRange !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidEndRange = (value >= parseFloat(this.state.StartRange));\r\n                Errors.EndRange = ValidEndRange ? \"\" : \"Ending price must be greater than Starting price.\";\r\n\r\n                if (Errors.EndRange !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidStartRange = (parseFloat(this.state.StartRange) <= value);\r\n                Errors.StartRange = ValidStartRange ? \"\" : \"Starting price must be less than Ending price.\";\r\n                break;\r\n            case \"FeeRate\":\r\n                ValidFeeRate = (value !== \"\");\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : \"Fee rate is required\";\r\n\r\n                if (Errors.FeeRate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidFeeRate = (value >= 1 && value <= 100);\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : \"Fee Rate can be between 1 and 100.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidStartRange: ValidStartRange,\r\n            ValidEndRange: ValidEndRange,\r\n            ValidFeeRate: ValidFeeRate,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidStartRange &&\r\n                        this.state.ValidEndRange &&\r\n                        this.state.ValidFeeRate\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newPriceRange = {\r\n            Token: localStorage.Token,\r\n            StartRange: this.state.StartRange,\r\n            EndRange: this.state.EndRange,\r\n            FeeRate: this.state.FeeRate\r\n        };\r\n\r\n        await addPriceRange(newPriceRange).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Price range is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK(response.PriceRange);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            StartRange,\r\n            EndRange,\r\n            FeeRate,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`add-price-range-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n m-b-xxs\">Add Price Range</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Starting Price (USD)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" min=\"0.00\" step=\"0.01\" name=\"StartRange\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={StartRange} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.StartRange}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Ending Price (USD)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" min=\"0.00\" step=\"0.01\" name=\"EndRange\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={EndRange} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.EndRange}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Fee Rate (%)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"FeeRate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={FeeRate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.FeeRate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddPriceRangeDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport PriceRangeListItem from \"./PriceRangeListItem\";\r\nimport AddPriceRangeDialog from \"./AddPriceRangeDialog\";\r\nimport { getData } from \"../../../../AdministratorFunctions\";\r\n\r\nclass PriceRangesList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PriceRanges: [],\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"PriceRanges\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Price ranges found.\") {\r\n                    this.setState({\r\n                        PriceRanges: response.PriceRanges,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        PriceRanges: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            PriceRanges,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Price Ranges\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                <button className=\"btn btn-primary\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#add-price-range-dialog`}>Add New Range</button>\r\n            </div>\r\n\r\n            <AddPriceRangeDialog OnOK={priceRange => {\r\n                let priceRanges = PriceRanges;\r\n                priceRanges.push(priceRange);\r\n\r\n                this.setState({\r\n                    PriceRanges: priceRanges\r\n                });\r\n            }} />\r\n\r\n            {(PriceRanges.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"price ranges\" /> :\r\n                <div class=\"table-responsive back-color-gray\">\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>NUMBER</th>\r\n                                <th>STARTING PRICE</th>\r\n                                <th>ENDING PRICE</th>\r\n                                <th>FEE RATE</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {PriceRanges.map((priceRange, index) => {\r\n                                return <PriceRangeListItem key={index}\r\n                                    Index={index}\r\n                                    PriceRange={priceRange}\r\n                                    OnPriceRangeUpdated={feeRate => {\r\n                                        let priceRanges = PriceRanges;\r\n\r\n                                        for (let priceRangeItem of priceRanges) {\r\n                                            if (priceRangeItem === priceRange) {\r\n                                                priceRange.FeeRate = feeRate;\r\n                                                break;\r\n                                            }\r\n                                        }\r\n\r\n                                        this.setState({\r\n                                            PriceRanges: priceRanges\r\n                                        });\r\n                                    }}\r\n                                    OnPriceRangeDeleted={priceRange => {\r\n                                        let priceRanges = [];\r\n\r\n                                        for (let priceRangeItem of PriceRanges) {\r\n                                            if (priceRangeItem !== priceRange) {\r\n                                                priceRanges.push(priceRangeItem);\r\n                                            }\r\n                                        }\r\n\r\n                                        this.setState({\r\n                                            PriceRanges: priceRanges\r\n                                        });\r\n                                    }} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PriceRangesList;","import React, { Component } from \"react\";\r\nimport PriceRangesList from \"./PriceRangesList\";\r\n\r\nclass PriceRanges extends Component {\r\n    render() {\r\n        return <section>\r\n            <PriceRangesList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PriceRanges;","import React, { Component } from \"react\";\r\nimport GlobalAndTemporaryRates from \"./globalAndTemporayRates/GlobalAndTemporaryRates\";\r\nimport PriceRanges from \"./priceRanges/PriceRanges\";\r\n\r\nclass GeneralRates extends Component {\r\n    render() {\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-tag m-r-xxs\"></span>General Rates</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <GlobalAndTemporaryRates />\r\n            <PriceRanges />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default GeneralRates;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { updateTraderRate } from \"../../../AdministratorFunctions\";\r\n\r\nclass UpdateTraderRateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            FeeRate: this.props.FeeRate,\r\n\r\n            ValidFeeRate: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                FeeRate: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFeeRate = this.state.ValidFeeRate;\r\n\r\n        switch (field) {\r\n            case \"FeeRate\":\r\n                ValidFeeRate = (value !== \"\");\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : \"Fee rate is required\";\r\n\r\n                if (Errors.FeeRate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidFeeRate = (value >= 1 && value <= 100);\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : \"Fee Rate can be between 1 and 100.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFeeRate: ValidFeeRate,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidFeeRate\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const updatedTraderRate = {\r\n            Token: localStorage.Token,\r\n            TraderRateID: this.props.TraderRateID,\r\n            FeeRate: this.state.FeeRate\r\n        };\r\n\r\n        await updateTraderRate(updatedTraderRate).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Trader rate is updated.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK(this.state.FeeRate);\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            FeeRate,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        const {\r\n            Index\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`update-trader-rate-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Update Fee Rate</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Fee Rate (%)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"FeeRate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={FeeRate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.FeeRate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Set\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default UpdateTraderRateDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport UpdateTraderRateDialog from \"./UpdateTraderRateDialog\";\r\nimport { deleteTraderRate } from \"../../../AdministratorFunctions\";\r\n\r\nclass TraderRateListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowProgressRing: false\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        let discardedTraderRate = {\r\n            Token: localStorage.Token,\r\n            TraderRateID: this.props.TraderRate.TraderRateID\r\n        };\r\n\r\n        await deleteTraderRate(discardedTraderRate).then(response => {\r\n            this.setState({\r\n                ShowProgressRing: false\r\n            });\r\n\r\n            if (response.Message === \"Trader rate is deleted.\") {\r\n                this.props.OnTraderRateDeleted(this.props.TraderRate);\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowProgressRing\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            TraderRate\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{Index + 1}</strong>\r\n                {ShowProgressRing ? \r\n                    <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </td>\r\n\r\n            <td>{TraderRate.Username}</td>\r\n            <td>{`${TraderRate.FeeRate}%`}</td>\r\n\r\n            <td className=\"text-right\">\r\n                <button className=\"btn btn-secondary\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#update-trader-rate-dialog-${Index}`}>Edit Fee Rate</button>\r\n                <button className=\"btn btn-danger\" onClick={this.onDelete}>Delete</button>\r\n\r\n                <UpdateTraderRateDialog Index={Index}\r\n                    FeeRate={TraderRate.FeeRate}\r\n                    TraderRateID={TraderRate.TraderRateID}\r\n                    OnOK={this.props.OnTraderRateUpdated} />\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default TraderRateListItem;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { addTraderRate } from \"../../../AdministratorFunctions\";\r\n\r\nclass AddTraderRateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            FeeRate: \"\",\r\n\r\n            ValidUsername: false,\r\n            ValidFeeRate: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Username: \"\",\r\n                FeeRate: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidUsername = this.state.ValidUsername\r\n        let ValidFeeRate = this.state.ValidFeeRate;\r\n\r\n        switch (field) {\r\n            case \"Username\":\r\n                ValidUsername = (value !== \"\");\r\n                Errors.Username = ValidUsername ? \"\" : \"Username is required.\";\r\n\r\n                if (Errors.Username != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidUsername = (value.match(/^[a-z0-9]+$/i));\r\n                Errors.Username = ValidUsername ? \"\" : \"Username is invalid.\";\r\n                break;\r\n            case \"FeeRate\":\r\n                ValidFeeRate = (value !== \"\");\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : \"Fee rate is required\";\r\n\r\n                if (Errors.FeeRate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidFeeRate = (value >= 1 && value <= 100);\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : \"Fee Rate can be between 1 and 100.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidUsername: ValidUsername,\r\n            ValidFeeRate: ValidFeeRate,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidUsername &&\r\n                        this.state.ValidFeeRate\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newTraderRate = {\r\n            Token: localStorage.Token,\r\n            Username: this.state.Username,\r\n            FeeRate: this.state.FeeRate\r\n        };\r\n\r\n        await addTraderRate(newTraderRate).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Trader rate is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK(response.TraderRate);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Username,\r\n            FeeRate,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`add-trader-rate-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n m-b-xxs\">Add Trader Rate</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Trader's Username</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"Username\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={Username} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.Username}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Fee Rate (%)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"FeeRate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={FeeRate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.FeeRate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddTraderRateDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport TraderRateListItem from \"./TraderRateListItem\";\r\nimport AddTraderRateDialog from \"./AddTraderRateDialog\";\r\nimport { getData } from \"../../../AdministratorFunctions\";\r\n\r\nclass TraderRatesList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllTraderRates: [],\r\n            TraderRates: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderRates\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader rates found.\") {\r\n                    this.setState({\r\n                        AllTraderRates: response.TraderRates,\r\n                        TraderRates: response.TraderRates,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllTraderRates: [],\r\n                        TraderRates: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                TraderRates: this.state.AllTraderRates\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allTraderRates = this.state.AllTraderRates;\r\n        let filteredTraderRates = [];\r\n        let count = 0;\r\n\r\n        for (let traderRate of allTraderRates) {\r\n            if (traderRate.Username.includes(searchString)) {\r\n                filteredTraderRates[count++] = traderRate;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            TraderRates: filteredTraderRates\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            TraderRates,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-tag m-r-xxs\"></span>Trader Fee Rates</div>\r\n                            <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target={`#add-trader-rate-dialog`}>Add New</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <AddTraderRateDialog OnOK={traderRate => {\r\n                let traderRates = TraderRates;\r\n                traderRates.push(traderRate);\r\n\r\n                this.setState({\r\n                    TraderRates: traderRates\r\n                });\r\n            }} />\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Fee Rates\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(TraderRates.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"fee rates\" /> :\r\n                <div class=\"table-responsive back-color-gray\">\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>NUMBER</th>\r\n                                <th>TRADER OR BROKER</th>\r\n                                <th>FEE RATE</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {TraderRates.map((traderRate, index) => {\r\n                                return <TraderRateListItem key={index}\r\n                                    Index={index}\r\n                                    TraderRate={traderRate}\r\n                                    OnTraderRateUpdated={feeRate => {\r\n                                        let traderRates = TraderRates;\r\n\r\n                                        for (let traderRateItem of traderRates) {\r\n                                            if (traderRateItem === traderRate) {\r\n                                                traderRateItem.FeeRate = feeRate;\r\n                                                break;\r\n                                            }\r\n                                        }\r\n\r\n                                        this.setState({\r\n                                            TraderRates: traderRates\r\n                                        });\r\n                                    }}\r\n                                    OnTraderRateDeleted={traderRate => {\r\n                                        let traderRates = [];\r\n\r\n                                        for (let traderRateItem of TraderRates) {\r\n                                            if (traderRateItem !== traderRate) {\r\n                                                traderRates.push(traderRateItem);\r\n                                            }\r\n                                        }\r\n\r\n                                        this.setState({\r\n                                            TraderRates: traderRates\r\n                                        });\r\n                                    }}/>;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderRatesList;","import React, { Component } from \"react\";\r\nimport TraderRatesList from \"./TraderRatesList\";\r\n\r\nclass TraderRates extends Component {\r\n    render() {\r\n        return <section>\r\n            <TraderRatesList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderRates;","import React, { Component } from \"react\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport GeneralRates from \"./generalRates/GeneralRates\";\r\nimport TraderRates from \"./traderRates/TraderRates\";\r\n\r\nclass FeeRates extends Component {\r\n    render() {\r\n        return <section>\r\n            <PageHeading Heading=\"FEE RATES\" />\r\n            <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                padding: \"10px\",\r\n                backgroundColor: \"#3A3A3C\",\r\n                width: \"100%\",\r\n                margin: \"0px\",\r\n            }}>\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#general-rates\" aria-controls=\"general-rates\" role=\"tab\" data-toggle=\"tab\">General Rates</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#trader-rates\" aria-controls=\"trader-rates\" role=\"tab\" data-toggle=\"tab\">Trader Rates</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div class=\"tab-content\">\r\n                <div role=\"tabpanel\" class=\"tab-pane active\" id=\"general-rates\">\r\n                    <GeneralRates />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"trader-rates\">\r\n                    <TraderRates />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default FeeRates;","import React, { Component } from \"react\";\r\nimport PayProofContainer from \"../../../../../../containers/payProof/PayProofContainer\";\r\n\r\nclass PayProofDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            PayProof\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`trader-pay-proof-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <PayProofContainer PayProof={PayProof} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PayProofDialog;","import React, { Component } from \"react\";\r\nimport PayDetailsContainer from \"../../../../../../containers/payDetails/PayDetailsContainer\";\r\n\r\nclass PayDetailsDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            PayDetails\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`trader-pay-details-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <PayDetailsContainer PayDetails={PayDetails} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PayDetailsDialog;","import React, { Component } from \"react\";\r\nimport PayProofDialog from \"./PayProofDialog\";\r\nimport PayDetailsDialog from \"./PayDetailsDialog\";\r\n\r\nclass TradersBillListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Bill\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{Bill.BillNumber}</strong>\r\n            </td>\r\n\r\n            <td>\r\n                {Bill.Paid ?\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}\r\n            </td>\r\n\r\n            <td>{Bill.Username}</td>\r\n\r\n            <td>{`$${Bill.Amount.toFixed(2)}`}</td>\r\n\r\n            <td>{`$${Bill.FeeRate}%`}</td>\r\n\r\n            <td>{`${new Date(Bill.Created).toDateString()}`}</td>\r\n\r\n            <td className=\"text-right\">\r\n                {Bill.TraderPayProof ?\r\n                    <button className=\"btn btn-primary m-t-n\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#trader-pay-proof-dialog-${Index}`}>Pay Proof</button> : null}\r\n\r\n                {Bill.TraderPayDetails ?\r\n                    <button className=\"btn btn-primary m-t-n\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#trader-pay-details-dialog-${Index}`}>Pay Details</button> : null}\r\n\r\n                {Bill.TraderPayProof ? \r\n                    <PayProofDialog Index={Index}\r\n                        PayProof={Bill.TraderPayProof} /> : null}\r\n\r\n                {Bill.TraderPayDetails ?\r\n                    <PayDetailsDialog Index={Index}\r\n                        PayDetails={Bill.TraderPayDetails} /> : null}\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default TradersBillListItem;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport TradersBillListItem from \"./TradersBillListItem\";\r\nimport { getData } from \"../../../../AdministratorFunctions\";\r\n\r\nclass TradersBillsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllBills: [],\r\n            Bills: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TradersBills\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Bills found.\") {\r\n                    this.setState({\r\n                        AllBills: response.Bills,\r\n                        Bills: response.Bills,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllBills: [],\r\n                        Bills: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                Bills: this.state.AllBills\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allBills = this.state.AllBills;\r\n        let filteredBills = [];\r\n        let count = 0;\r\n\r\n        for (let bill of allBills) {\r\n            if (bill.BillNumber.includes(searchString)) {\r\n                filteredBills[count++] = bill;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Bills: filteredBills\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Bills,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-money-bill-wave m-r-xxs\"></span>Traders' Bills</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Bills\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(Bills.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"bills\" /> :\r\n                <div class=\"table-responsive back-color-gray\" style={{ height: \"100vh\" }}>\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>BILL NUMBER</th>\r\n                                <th>PAID?</th>\r\n                                <th>PAYEE</th>\r\n                                <th>AMOUNT</th>\r\n                                <th>FEE RATE</th>\r\n                                <th>GENERATED ON</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {Bills.map((bill, index) => {\r\n                                return <TradersBillListItem key={index}\r\n                                    Index={index}\r\n                                    Bill={bill} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TradersBillsList;","import React, { Component } from \"react\";\r\nimport TradersBillsList from \"./TradersBillsList\";\r\n\r\nclass TradersBills extends Component {\r\n    render() {\r\n        return <section>\r\n            <TradersBillsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TradersBills;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport PayProofContainer from \"../../../../../../containers/payProof/PayProofContainer\";\r\nimport { approveDriverPayProof } from \"../../../../AdministratorFunctions\";\r\n\r\nclass PayProofDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false\r\n        };\r\n\r\n        this.onApprove = this.onApprove.bind(this);\r\n    }\r\n\r\n    onApprove = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const approvedDriverPayProof = {\r\n            Token: localStorage.Token,\r\n            DriverPayProofID: this.props.PayProof.DriverPayProofID,\r\n        };\r\n\r\n        await approveDriverPayProof(approvedDriverPayProof).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Driver pay proof is approved.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            PayProof\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`driver-pay-proof-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <PayProofContainer PayProof={PayProof} />\r\n                            {PayProof.Approved ? null : \r\n                                <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                                    <button className=\"btn btn-primary m-t-n\" onClick={this.onApprove}>Approve</button>\r\n                                </div>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PayProofDialog;","import React, { Component } from \"react\";\r\nimport PayDetailsContainer from \"../../../../../../containers/payDetails/PayDetailsContainer\";\r\n\r\nclass PayDetailsDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            PayDetails\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`driver-pay-details-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <PayDetailsContainer PayDetails={PayDetails} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PayDetailsDialog;","import React, { Component } from \"react\";\r\nimport PayProofDialog from \"./PayProofDialog\";\r\nimport PayDetailsDialog from \"./PayDetailsDialog\";\r\n\r\nclass DriversBillListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Bill\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{Bill.BillNumber}</strong>\r\n            </td>\r\n\r\n            <td>\r\n                {Bill.Paid ?\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}\r\n            </td>\r\n\r\n            <td>{Bill.Username}</td>\r\n\r\n            <td>{`$${Bill.Amount.toFixed(2)}`}</td>\r\n\r\n            <td>{`${new Date(Bill.Created).toDateString()}`}</td>\r\n\r\n            <td className=\"text-right\">\r\n                {Bill.DriverPayProof ?\r\n                    <button className=\"btn btn-primary m-t-n\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#driver-pay-proof-dialog-${Index}`}>Pay Proof</button> : null}\r\n\r\n                {Bill.DriverPayDetails ?\r\n                    <button className=\"btn btn-primary m-t-n\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#driver-pay-details-dialog-${Index}`}>Pay Details</button> : null}\r\n\r\n                {Bill.DriverPayProof ?\r\n                    <PayProofDialog Index={Index}\r\n                        PayProof={Bill.DriverPayProof}\r\n                        OnOK={() => { this.props.OnPayProofApproved(Bill); }} /> : null}\r\n\r\n                {Bill.DriverPayDetails ?\r\n                    <PayDetailsDialog Index={Index}\r\n                        PayDetails={Bill.DriverPayDetails} /> : null}\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default DriversBillListItem;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport DriversBillListItem from \"./DriversBillListItem\";\r\nimport { getData } from \"../../../../AdministratorFunctions\";\r\n\r\nclass DriversBillsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllBills: [],\r\n            Bills: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DriversBills\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Bills found.\") {\r\n                    this.setState({\r\n                        AllBills: response.Bills,\r\n                        Bills: response.Bills,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllBills: [],\r\n                        Bills: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                Bills: this.state.AllBills\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allBills = this.state.AllBills;\r\n        let filteredBills = [];\r\n        let count = 0;\r\n\r\n        for (let bill of allBills) {\r\n            if (bill.BillNumber.includes(searchString)) {\r\n                filteredBills[count++] = bill;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Bills: filteredBills\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Bills,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-money-bill-wave m-r-xxs\"></span>Drivers' Bills</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Bills\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(Bills.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"bills\" /> :\r\n                <div class=\"table-responsive back-color-gray\" style={{ height: \"100vh\" }}>\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>BILL NUMBER</th>\r\n                                <th>PAID?</th>\r\n                                <th>PAYEE</th>\r\n                                <th>AMOUNT</th>\r\n                                <th>GENERATED ON</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {Bills.map((bill, index) => {\r\n                                return <DriversBillListItem key={index}\r\n                                    Index={index}\r\n                                    Bill={bill}\r\n                                    OnPayProofApproved={bill => {\r\n                                        let bills = Bills;\r\n\r\n                                        for (let billItem of bills) {\r\n                                            if (billItem === bill) {\r\n                                                billItem.Paid = true;\r\n                                                billItem.DriverPayProof.Approved = true;\r\n                                                break;\r\n                                            }\r\n                                        }\r\n\r\n                                        this.setState({\r\n                                            Bills: bills\r\n                                        });\r\n                                    }} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DriversBillsList;","import React, { Component } from \"react\";\r\nimport DriversBillsList from \"./DriversBillsList\";\r\n\r\nclass DriversBills extends Component {\r\n    render() {\r\n        return <section>\r\n            <DriversBillsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DriversBills;","import React, { Component } from \"react\";\r\nimport TradersBills from \"./tradersBills/TradersBills\";\r\nimport DriversBills from \"./driversBills/DriversBills\";\r\n\r\nclass Bills extends Component {\r\n    render() {\r\n        return <section>\r\n            <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#traders-bills\" aria-controls=\"traders-bills\" role=\"tab\" data-toggle=\"tab\">Traders' Bills</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#drivers-bills\" aria-controls=\"drivers-bills\" role=\"tab\" data-toggle=\"tab\">Drivers' Bills</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div className=\"tab-content\">\r\n                <div role=\"tabpanel\" className=\"tab-pane active\" id=\"traders-bills\">\r\n                    <TradersBills />\r\n                </div>\r\n                <div role=\"tabpanel\" className=\"tab-pane\" id=\"drivers-bills\">\r\n                    <DriversBills />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Bills;","import React, { Component } from \"react\";\r\n\r\nclass RowData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Bill\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{`${new Date(Bill.Created).toLocaleDateString()}`}</strong>\r\n            </td>\r\n\r\n            <td>{Bill.BillNumber}</td>\r\n\r\n            <td>\r\n                {Bill.Paid ?\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}\r\n            </td>\r\n\r\n            <td>{`${Bill.FeeRate}%`}</td>\r\n\r\n            <td>{Bill.PaymentMethod}</td>\r\n\r\n            <td>{`$${Bill.RecipientAmount.toFixed(2)}`}</td>\r\n\r\n            <td>{`$${Bill.ChargedAmount.toFixed(2)}`}</td>\r\n\r\n            <td>{`$${Bill.Amount.toFixed(2)}`}</td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default RowData;","import React, { Component } from \"react\";\r\nimport RowData from \"./RowData\";\r\n\r\nclass AccountStatementData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement\r\n        } = this.props;\r\n\r\n        const trader = AccountStatement.Trader;\r\n\r\n        return <section>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            {(AccountStatement.Bills.length === 0) ?\r\n                <section>\r\n                    <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }}>\r\n                        <div className=\"container\">\r\n                            <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4\">\r\n                                    <span className=\"fas fa-exclamation-triangle m-r-xxs\" style={{ color: \"#FFBF15\" }}></span>No billing details found.</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section> :\r\n                <section>\r\n                    <div className=\"jumbotron theme-default back-color-light\">\r\n                        <div className=\"container\">\r\n                            <div className=\"type-t3\" style={{ fontWeight: \"600\" }}><span className=\"fas fa-route m-r-xxxs\"></span>NAQEL</div>\r\n\r\n                            <div className=\"p-t-xxs\">\r\n                                <div className=\"type-t8\">{`${trader.FirstName} ${trader.LastName}`}</div>\r\n                                <div className=\"type-t9\">{`@${trader.Username}`}</div>\r\n                                <div className=\"type-t8\">{trader.Type}</div>\r\n                                <div className=\"type-t8\">{trader.Address}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"table-responsive back-color-gray\" style={{ borderTop: \"4px solid #CCCCCC\", height: \"100vh\" }}>\r\n                        <table class=\"table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>DATE</th>\r\n                                    <th>BILL NUMBER</th>\r\n                                    <th>PAID?</th>\r\n                                    <th>FEE RATE</th>\r\n                                    <th>PAY METHOD</th>\r\n                                    <th>RECIPIENT CHARGES</th>\r\n                                    <th>NAQEL CHARGES</th>\r\n                                    <th>AMOUNT</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {AccountStatement.Bills.map((bill, index) => {\r\n                                    return <RowData key={index}\r\n                                        Index={index}\r\n                                        Bill={bill} />;\r\n                                })}\r\n                                <tr style={{ backgroundColor: \"#DADADA\" }}>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td>TOTAL</td>\r\n                                    <td>{`$${AccountStatement.TotalRecipientAmount.toFixed(2)}`}</td>\r\n                                    <td>{`$${AccountStatement.TotalChargedAmount.toFixed(2)}`}</td>\r\n                                    <td>{`$${AccountStatement.TotalAmount.toFixed(2)}`}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </section>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AccountStatementData;","import React, { Component } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport ProgressBar from \"../../../../../../../controls/ProgressBar\";\r\nimport AccountStatementData from \"./AccountStatementData\";\r\nimport { getData } from \"../../../../../AdministratorFunctions\";\r\n\r\nclass AccountStatement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AccountStatement: null,\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.OnSearch(this.onSearch);\r\n    }\r\n\r\n    onSearch = async username => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderAccountStatement\",\r\n                Params: {\r\n                    Username: username\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Account statement found.\") {\r\n                    this.setState({\r\n                        AccountStatement: response.AccountStatement,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AccountStatement: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement,\r\n            Searching,\r\n        } = this.state;\r\n\r\n        return (Searching || !AccountStatement) ?\r\n            <section>\r\n                <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }}>\r\n                    <div className=\"container\">\r\n                        {Searching ? <div className=\"text-center p-xxs\">\r\n                            <div className=\"type-h4 color-default\">Searching</div>\r\n                            <ProgressBar />\r\n                        </div> : <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4\"><span className=\"fas fa-exclamation-triangle m-r-xxs\" style={{ color: \"#FFBF15\" }}></span>No account statement to display. Search the trader by username to view his account statement.</div>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            </section> :\r\n            <section>\r\n                <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                    <ReactToPrint\r\n                        trigger={() => <button className=\"btn btn-primary m-n\">Print</button>}\r\n                        content={() => this.TraderAccountStatement} />\r\n                </div>\r\n                <AccountStatementData AccountStatement={AccountStatement}\r\n                    ref={traderAccountStatement => (this.TraderAccountStatement = traderAccountStatement)} />\r\n                </section>;\r\n    }\r\n};\r\n\r\nexport default AccountStatement;","import React, { Component } from \"react\";\r\nimport AccountStatement from \"./accountStatement/AccountStatement\";\r\n\r\nclass TraderAccountStatementBrowser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            SearchString: \"\"\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n        this.SearchAccountStatement(this.state.SearchString);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            SearchString\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-university m-r-xxs\"></span>Trader Account Statements</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Account Statements</div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search Username\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            <AccountStatement OnSearch={onSearch => { this.SearchAccountStatement = onSearch; }} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderAccountStatementBrowser;","import React, { Component } from \"react\";\r\nimport TraderAccountStatementBrowser from \"./TraderAccountStatementBrowser\";\r\n\r\nclass TraderAccountStatements extends Component {\r\n    render() {\r\n        return <section>\r\n            <TraderAccountStatementBrowser />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderAccountStatements;","import React, { Component } from \"react\";\r\n\r\nclass RowData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Bill\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{`${new Date(Bill.Created).toLocaleDateString()}`}</strong>\r\n            </td>\r\n\r\n            <td>{Bill.JobNumber}</td>\r\n\r\n            <td>{`$${Bill.AmountEarned.toFixed(2)}`}</td>\r\n\r\n            <td>{Bill.BillNumber}</td>\r\n\r\n            <td>\r\n                {Bill.Paid ?\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}\r\n            </td>\r\n\r\n            <td>{Bill.PaymentMethod}</td>\r\n\r\n            <td>{`$${Bill.AmountCharged.toFixed(2)}`}</td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default RowData;","import React, { Component } from \"react\";\r\nimport RowData from \"./RowData\";\r\n\r\nclass AccountStatementData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement\r\n        } = this.props;\r\n\r\n        const driver = AccountStatement.Driver;\r\n\r\n        return <section>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            {(AccountStatement.Bills.length === 0) ?\r\n                <section>\r\n                    <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }}>\r\n                        <div className=\"container\">\r\n                            <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4\">\r\n                                    <span className=\"fas fa-exclamation-triangle m-r-xxs\" style={{ color: \"#FFBF15\" }}></span>No billing details found.</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section> :\r\n                <section>\r\n                    <div className=\"jumbotron theme-default back-color-light\">\r\n                        <div className=\"container\">\r\n                            <div className=\"type-t3\" style={{ fontWeight: \"600\" }}><span className=\"fas fa-route m-r-xxxs\"></span>NAQEL</div>\r\n\r\n                            <div className=\"p-t-xxs\">\r\n                                <div className=\"type-t8\">{`${driver.FirstName} ${driver.LastName}`}</div>\r\n                                <div className=\"type-t9\">{`@${driver.Username}`}</div>\r\n                                <div className=\"type-t8\">Driver</div>\r\n                                <div className=\"type-t8\">{driver.Address}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"table-responsive back-color-gray\" style={{ borderTop: \"4px solid #CCCCCC\", height: \"100vh\" }}>\r\n                        <table class=\"table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>DATE</th>\r\n                                    <th>JOB NUMBER</th>\r\n                                    <th>EARNED</th>\r\n                                    <th>BILL NUMBER</th>\r\n                                    <th>PAID?</th>\r\n                                    <th>PAY METHOD</th>\r\n                                    <th>AMOUNT CHARGED</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {AccountStatement.Bills.map((bill, index) => {\r\n                                    return <RowData key={index}\r\n                                        Index={index}\r\n                                        Bill={bill} />;\r\n                                })}\r\n                                <tr style={{ backgroundColor: \"#DADADA\" }}>\r\n                                    <td></td>\r\n                                    <td>NET EARNING</td>\r\n                                    <td>{`$${AccountStatement.NetEarning.toFixed(2)}`}</td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td>TOTAL</td>\r\n                                    <td>{`$${AccountStatement.NetAmount.toFixed(2)}`}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </section>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AccountStatementData;","import React, { Component } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport ProgressBar from \"../../../../../../../controls/ProgressBar\";\r\nimport AccountStatementData from \"./AccountStatementData\";\r\nimport { getData } from \"../../../../../AdministratorFunctions\";\r\n\r\nclass AccountStatement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AccountStatement: null,\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.OnSearch(this.onSearch);\r\n    }\r\n\r\n    onSearch = async username => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DriverAccountStatement\",\r\n                Params: {\r\n                    Username: username\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Account statement found.\") {\r\n                    this.setState({\r\n                        AccountStatement: response.AccountStatement,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AccountStatement: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement,\r\n            Searching,\r\n        } = this.state;\r\n\r\n        return (Searching || !AccountStatement) ?\r\n            <section>\r\n                <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }}>\r\n                    <div className=\"container\">\r\n                        {Searching ? <div className=\"text-center p-xxs\">\r\n                            <div className=\"type-h4 color-default\">Searching</div>\r\n                            <ProgressBar />\r\n                        </div> : <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4\"><span className=\"fas fa-exclamation-triangle m-r-xxs\" style={{ color: \"#FFBF15\" }}></span>No account statement to display. Search the driver by username to view his account statement.</div>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            </section> :\r\n            <section>\r\n                <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                    <ReactToPrint\r\n                        trigger={() => <button className=\"btn btn-primary m-n\">Print</button>}\r\n                        content={() => this.DriverAccountStatement} />\r\n                </div>\r\n                <AccountStatementData AccountStatement={AccountStatement}\r\n                    ref={driverAccountStatement => (this.DriverAccountStatement = driverAccountStatement)} />\r\n                </section>;\r\n    }\r\n};\r\n\r\nexport default AccountStatement;","import React, { Component } from \"react\";\r\nimport AccountStatement from \"./accountStatement/AccountStatement\";\r\n\r\nclass DriverAccountStatementBrowser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            SearchString: \"\"\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n        this.SearchAccountStatement(this.state.SearchString);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            SearchString\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-university m-r-xxs\"></span>Driver Account Statements</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Account Statements</div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search Username\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            <AccountStatement OnSearch={onSearch => { this.SearchAccountStatement = onSearch; }} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DriverAccountStatementBrowser;","import React, { Component } from \"react\";\r\nimport DriverAccountStatementBrowser from \"./DriverAccountStatementBrowser\";\r\n\r\nclass DriverAccountStatements extends Component {\r\n    render() {\r\n        return <section>\r\n            <DriverAccountStatementBrowser />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DriverAccountStatements;","import React, { Component } from \"react\";\r\n\r\nclass RowData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Transaction\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{`${new Date(Transaction.Date).toLocaleDateString()}`}</strong>\r\n            </td>\r\n\r\n            <td>{Transaction.TruckNumber}</td>\r\n\r\n            <td>{Transaction.JobNumber}</td>\r\n\r\n            <td>{Transaction.TraderBillNumber}</td>\r\n\r\n            <td>\r\n                {Transaction.TraderBillPaid ?\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}\r\n            </td>\r\n\r\n            <td>{Transaction.TraderPaymentMethod}</td>\r\n\r\n            <td>{Transaction.DriverBillNumber}</td>\r\n\r\n            <td>\r\n                {Transaction.DriverBillPaid ?\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}\r\n            </td>\r\n\r\n            <td>{Transaction.DriverPaymentMethod}</td>\r\n\r\n            <td>{`${Transaction.FeeRate}%`}</td>\r\n\r\n            <td>{`$${Transaction.Earned.toFixed(2)}`}</td>\r\n\r\n            <td>{`$${Transaction.Charged.toFixed(2)}`}</td>\r\n\r\n            <td>{`$${Transaction.Amount.toFixed(2)}`}</td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default RowData;","import React, { Component } from \"react\";\r\nimport RowData from \"./RowData\";\r\n\r\nclass AccountStatementData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement\r\n        } = this.props;\r\n\r\n        const transportCompany = AccountStatement.TransportCompany;\r\n\r\n        let netAmount = 0.0;\r\n        let netEarned = 0.0;\r\n        let netCharged = 0.0;\r\n\r\n        for (let transaction of AccountStatement.Transactions) {\r\n            netAmount += transaction.Amount;\r\n            netEarned += transaction.Earned;\r\n            netCharged += transaction.Charged;\r\n        }\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default back-color-light\">\r\n                <div className=\"container\">\r\n                    <div className=\"type-t3\" style={{ fontWeight: \"600\" }}><span className=\"fas fa-route m-r-xxxs\"></span>NAQEL</div>\r\n\r\n                    <div className=\"p-t-xxs\">\r\n                        <div className=\"type-t8 m-b-xxs\">TRANSPORT COMPANY DETAILS</div>\r\n                        <div className=\"type-t8\">{`Company Name: ${transportCompany.Name}`}</div>\r\n                        <div className=\"type-t8\">{`Username: ${transportCompany.Username}`}</div>\r\n                        <div className=\"type-t8\">{`Internal Number: ${transportCompany.InternalNumber}`}</div>\r\n                        <div className=\"type-t8\">{`Commercial Register Number: ${transportCompany.CommercialRegisterNumber}`}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {AccountStatement.Transactions.length === 0 ?\r\n                <section>\r\n                    <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }}>\r\n                        <div className=\"container\">\r\n                            <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4\"><span className=\"fas fa-exclamation-triangle m-r-xxs\"\r\n                                    style={{ color: \"#FFBF15\" }}></span>No transactions found.</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section> :\r\n                <div class=\"table-responsive back-color-gray\" style={{ borderTop: \"4px solid #CCCCCC\", height: \"100vh\" }}>\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>DATE</th>\r\n                                <th>TRUCK NUMBER</th>\r\n                                <th>JOB NUMBER</th>\r\n                                <th>TRADER BILL NUMBER</th>\r\n                                <th>TRADER BILL PAID?</th>\r\n                                <th>TRADER PAY METHOD</th>\r\n                                <th>DRIVER BILL NUMBER</th>\r\n                                <th>DRIVER BILL PAID?</th>\r\n                                <th>DRIVER PAY METHOD</th>\r\n                                <th>FEE RATE</th>\r\n                                <th>EARNED</th>\r\n                                <th>CHARGED</th>\r\n                                <th>TOTAL AMOUNT</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {AccountStatement.Transactions.map((transaction, index) => {\r\n                                return <RowData key={index}\r\n                                    Index={index}\r\n                                    Transaction={transaction} />;\r\n                            })}\r\n                            <tr style={{ backgroundColor: \"#DADADA\" }}>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td>TOTAL:</td>\r\n                                <td>{`$${netEarned.toFixed(2)}`}</td>\r\n                                <td>{`$${netCharged.toFixed(2)}`}</td>\r\n                                <td>{`$${netAmount.toFixed(2)}`}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AccountStatementData;","import React, { Component } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport ProgressBar from \"../../../../../../../controls/ProgressBar\";\r\nimport AccountStatementData from \"./AccountStatementData\";\r\nimport { getData } from \"../../../../../AdministratorFunctions\";\r\n\r\nclass AccountStatement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AccountStatement: null,\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.OnSearch(this.onSearch);\r\n    }\r\n\r\n    onSearch = async username => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"ResponsibleAccountStatement\",\r\n                Params: {\r\n                    Username: username\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Account statement found.\") {\r\n                    this.setState({\r\n                        AccountStatement: response.AccountStatement,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AccountStatement: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement,\r\n            Searching,\r\n        } = this.state;\r\n\r\n        return (Searching || !AccountStatement) ?\r\n            <section>\r\n                <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }}>\r\n                    <div className=\"container\">\r\n                        {Searching ? <div className=\"text-center p-xxs\">\r\n                            <div className=\"type-h4 color-default\">Searching</div>\r\n                            <ProgressBar />\r\n                        </div> : <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4\"><span className=\"fas fa-exclamation-triangle m-r-xxs\" style={{ color: \"#FFBF15\" }}></span>No account statement to display. Search the transport company by username to view its account statement.</div>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            </section> :\r\n            <section>\r\n                <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                    <ReactToPrint\r\n                        trigger={() => <button className=\"btn btn-primary m-t-n\">Print</button>}\r\n                        content={() => this.ResponsibleAccountStatement} />\r\n                </div>\r\n                <AccountStatementData AccountStatement={AccountStatement}\r\n                    ref={responsibleAccountStatement => (this.ResponsibleAccountStatement = responsibleAccountStatement)} />\r\n                </section>;\r\n    }\r\n};\r\n\r\nexport default AccountStatement;","import React, { Component } from \"react\";\r\nimport AccountStatement from \"./accountStatement/AccountStatement\";\r\n\r\nclass ResponsibleAccountStatementBrowser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            SearchString: \"\"\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n        this.SearchAccountStatement(this.state.SearchString);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            SearchString\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-university m-r-xxs\"></span>TC Responsible Account Statements</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Account Statement</div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search Username\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            <AccountStatement OnSearch={onSearch => { this.SearchAccountStatement = onSearch; }} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ResponsibleAccountStatementBrowser;","import React, { Component } from \"react\";\r\nimport ResponsibleAccountStatementBrowser from \"./ResponsibleAccountStatementBrowser\";\r\n\r\nclass ResponsibleAccountStatements extends Component {\r\n    render() {\r\n        return <section>\r\n            <ResponsibleAccountStatementBrowser />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ResponsibleAccountStatements;","import React, { Component } from \"react\";\r\nimport TraderAccountStatements from \"./traderAccountStatements/TraderAccountStatements\";\r\nimport DriverAccountStatements from \"./driverAccountStatements/DriverAccountStatements\";\r\nimport ResponsibleAccountStatements from \"./responsibleAccountStatements/ResponsibleAccountStatements\";\r\n\r\nclass UserAccountStatements extends Component {\r\n    render() {\r\n        return <section>\r\n            <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#trader-account-statements\" aria-controls=\"trader-account-statements\" role=\"tab\" data-toggle=\"tab\">Trader Account Statements</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#driver-account-statements\" aria-controls=\"driver-account-statements\" role=\"tab\" data-toggle=\"tab\">Driver Account Statements</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#responsible-account-statements\" aria-controls=\"responsible-account-statements\" role=\"tab\" data-toggle=\"tab\">TC Responsible Account Statements</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div className=\"tab-content\">\r\n                <div role=\"tabpanel\" className=\"tab-pane active\" id=\"trader-account-statements\">\r\n                    <TraderAccountStatements />\r\n                </div>\r\n                <div role=\"tabpanel\" className=\"tab-pane\" id=\"driver-account-statements\">\r\n                    <DriverAccountStatements />\r\n                </div>\r\n                <div role=\"tabpanel\" className=\"tab-pane\" id=\"responsible-account-statements\">\r\n                    <ResponsibleAccountStatements />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default UserAccountStatements;","import React, { Component } from \"react\";\r\n\r\nclass RowData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Transaction\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{`${new Date(Transaction.Created).toLocaleDateString()}`}</strong>\r\n            </td>\r\n\r\n            <td>{Transaction.BillNumber}</td>\r\n\r\n            <td>{Transaction.Payee}</td>\r\n\r\n            <td>{Transaction.PayeeType}</td>\r\n\r\n            <td>{Transaction.PaymentMethod}</td>\r\n\r\n            <td>{`$${Transaction.Amount.toFixed(2)}`}</td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default RowData;","import React, { Component } from \"react\";\r\nimport RowData from \"./RowData\";\r\n\r\nclass AccountStatementData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement\r\n        } = this.props;\r\n\r\n        const naqelSettings = AccountStatement.NaqelSettings;\r\n\r\n        return <section>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            {(AccountStatement.Transactions.length === 0) ?\r\n                <section>\r\n                    <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }}>\r\n                        <div className=\"container\">\r\n                            <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4\">\r\n                                    <span className=\"fas fa-exclamation-triangle m-r-xxs\" style={{ color: \"#FFBF15\" }}></span>No transactions found.</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section> :\r\n                <section>\r\n                    <div className=\"jumbotron theme-default back-color-light\">\r\n                        <div className=\"container\">\r\n                            <div className=\"type-t3\" style={{ fontWeight: \"600\" }}><span className=\"fas fa-route m-r-xxxs\"></span>NAQEL</div>\r\n\r\n                            <div className=\"p-t-xxs\">\r\n                                <div className=\"type-t8\">{naqelSettings.Street}</div>\r\n                                <div className=\"type-t8\">{`${naqelSettings.City}, ${naqelSettings.Country}.`}</div>\r\n                                <div className=\"type-t8\">{`ZIP ${naqelSettings.ZIPCode}`}</div>\r\n                            </div>\r\n\r\n                            <div className=\"p-t-xxs\">\r\n                                <div className=\"type-t8\">{naqelSettings.PhoneNumber}</div>\r\n                                <div className=\"type-t8\">{naqelSettings.Website}</div>\r\n                                <div className=\"type-t8\">{naqelSettings.BusinessName}</div>\r\n                            </div>\r\n\r\n                            <div className=\"p-t-xxs\">\r\n                                <div className=\"type-t8\">BANK NAME</div>\r\n                                <div className=\"type-t8\">{naqelSettings.BankName}</div>\r\n                                <div className=\"type-t8 p-t-xxxs\">ACCOUNT #</div>\r\n                                <div className=\"type-t8\">{naqelSettings.AccountNumber}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"table-responsive back-color-gray\" style={{ borderTop: \"4px solid #CCCCCC\", height: \"100vh\" }}>\r\n                        <table class=\"table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>DATE</th>\r\n                                    <th>BILL NUMBER</th>\r\n                                    <th>PAYEE</th>\r\n                                    <th>PAYEE TYPE</th>\r\n                                    <th>PAY METHOD</th>\r\n                                    <th>AMOUNT</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {AccountStatement.Transactions.map((transaction, index) => {\r\n                                    return <RowData key={index}\r\n                                        Index={index}\r\n                                        Transaction={transaction} />;\r\n                                })}\r\n                                <tr style={{ backgroundColor: \"#DADADA\" }}>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td>TOTAL</td>\r\n                                    <td>{`$${AccountStatement.NetAmount.toFixed(2)}`}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </section>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AccountStatementData;","import React, { Component } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport ProgressBar from \"../../../../../controls/ProgressBar\";\r\nimport AccountStatementData from \"./AccountStatementData\";\r\nimport { getData } from \"../../../AdministratorFunctions\";\r\n\r\nclass AccountStatement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AccountStatement: null,\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"AccountStatement\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Account statement found.\") {\r\n                    this.setState({\r\n                        AccountStatement: response.AccountStatement,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AccountStatement: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement,\r\n            Searching,\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-university m-r-xxs\"></span>Naqel Account Statement</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {(Searching || !AccountStatement) ?\r\n                <section>\r\n                    <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }}>\r\n                        <div className=\"container\">\r\n                            {Searching ? <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4 color-default\">Searching</div>\r\n                                <ProgressBar />\r\n                            </div> : <div className=\"text-center p-xxs\">\r\n                                    <div className=\"type-h4\"><span className=\"fas fa-exclamation-triangle m-r-xxs\" style={{ color: \"#FFBF15\" }}></span>No account statement to display.</div>\r\n                                </div>}\r\n                        </div>\r\n                    </div>\r\n                </section> :\r\n                <section>\r\n                    <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                        <ReactToPrint\r\n                            trigger={() => <button className=\"btn btn-primary m-n\">Print</button>}\r\n                            content={() => this.AccountStatement} />\r\n                    </div>\r\n                    <AccountStatementData AccountStatement={AccountStatement}\r\n                        ref={accountStatement => (this.AccountStatement = accountStatement)} />\r\n                </section>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AccountStatement;","import React, { Component } from \"react\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport Bills from \"./bills/Bills\";\r\nimport UserAccountStatements from \"./userAccountStatements/UserAccountStatements\";\r\nimport AccountStatement from \"./accountStatement/AccountStatement\";\r\n\r\nclass FinancialAccounts extends Component {\r\n    render() {\r\n        return <section>\r\n            <PageHeading Heading=\"FINANCIAL ACCOUNTS\" />\r\n\r\n            <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                padding: \"10px\",\r\n                backgroundColor: \"#3A3A3C\",\r\n                width: \"100%\",\r\n                margin: \"0px\",\r\n            }}>\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#account-statement\" aria-controls=\"account-statement\" role=\"tab\" data-toggle=\"tab\">Account Statement</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#bills\" aria-controls=\"bills\" role=\"tab\" data-toggle=\"tab\">Bills</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#user-account-statements\" aria-controls=\"user-account-statements\" role=\"tab\" data-toggle=\"tab\">User Account Statments</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div class=\"tab-content\">\r\n                <div role=\"tabpanel\" class=\"tab-pane active\" id=\"account-statement\">\r\n                    <AccountStatement />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"bills\">\r\n                    <Bills />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"user-account-statements\">\r\n                    <UserAccountStatements />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default FinancialAccounts;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Profile from \"./profile/Profile\";\r\nimport Drivers from \"./Drivers/Drivers\";\r\nimport Traders from \"./traders/Traders\";\r\nimport Jobs from \"./jobs/Jobs\";\r\nimport Questions from \"./questions/Questions\";\r\nimport FeeRates from \"./feeRates/FeeRates\";\r\nimport FinancialAccounts from \"./financialAccounts/financialAccounts\";\r\n\r\nclass AdministratorsDashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Left: -400\r\n        };\r\n\r\n        this.onCloseNavigation = this.onCloseNavigation.bind(this);\r\n    }\r\n\r\n    onCloseNavigation = () => {\r\n        this.setState({\r\n            Left: -400\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.Token) {\r\n            return <Redirect to={\"/login\"} />;\r\n        }\r\n        else {\r\n            return <section>\r\n                <div className=\"sidenav\" style={{ left: `${this.state.Left}px` }}>\r\n                    <a className=\"closebtn\" onClick={this.onCloseNavigation}>&times;</a>\r\n\r\n                    <div class=\"entity-list\" role=\"tablist\">\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#profile\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Profile</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#drivers\" aria-controls=\"drivers\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Drivers</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#traders\" aria-controls=\"traders\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Traders</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#jobs\" aria-controls=\"jobs\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Jobs</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#questions\" aria-controls=\"questions\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Questions</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#fee-rates\" aria-controls=\"fee-rates\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Fee Rates</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#financial-accounts\" aria-controls=\"settings\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Financial Accounts</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"tab-content\">\r\n                    <div role=\"tabpanel\" className=\"tab-pane active\" id=\"profile\">\r\n                        <Profile />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"drivers\">\r\n                        <Drivers />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"traders\">\r\n                        <Traders />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"jobs\">\r\n                        <Jobs />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"questions\">\r\n                        <Questions />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"fee-rates\">\r\n                        <FeeRates />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"financial-accounts\">\r\n                        <FinancialAccounts />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"side-nav-btn\" onClick={() => {\r\n                    this.setState({\r\n                        Left: 0\r\n                    });\r\n                }}><div className=\"fas fa-bars\" style={{ fontSize: \"x-large\" }}></div>\r\n                </div>\r\n            </section>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default AdministratorsDashboard;","import React, { Component } from \"react\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { addCommercialRegisterCertificate } from \"../../../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass AddCommercialRegisterCertificateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PhotoURL: \"./images/default_image.png\",\r\n            Type: \"\",\r\n\r\n            ValidPhotoURL: false,\r\n            ValidType: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                PhotoURL: \"\",\r\n                Type: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidType,\r\n            ValidPhotoURL\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Certificate type is required.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidType: ValidType,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: ValidType &&\r\n                    ValidPhotoURL\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newCommercialRegisterCertificate = {\r\n            Token: localStorage.Token,\r\n            Type: this.state.Type,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        await addCommercialRegisterCertificate(newCommercialRegisterCertificate).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            console.log(response);\r\n\r\n            if (response.Message === \"Commercial register certificate is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK(response.CommercialRegisterCertificate);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Type,\r\n            PhotoURL,\r\n            ValidForm,\r\n            ShowPreloader,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`add-commercial-register-certificate-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <ImageUploader\r\n                                                    Source={PhotoURL}\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }} />\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"type-h3 color-default p-t-xxs\">Add Commercial Register Certificate</div>\r\n                                                <div className=\"type-sh4 text-danger\">{Errors.PhotoURL}</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Certificate Type</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddCommercialRegisterCertificateDialog;","import React, { Component } from \"react\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { updateCommercialRegisterCertificate } from \"../../../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass EditCommercialRegisterCertificateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const {\r\n            CommercialRegisterCertificate\r\n        } = this.props;\r\n\r\n        this.state = {\r\n            PhotoURL: CommercialRegisterCertificate.PhotoURL,\r\n            Type: CommercialRegisterCertificate.Type,\r\n\r\n            ValidPhotoURL: true,\r\n            ValidType: true,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                PhotoURL: \"\",\r\n                Type: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidType,\r\n            ValidPhotoURL\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Certificate type is required.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidType: ValidType,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: ValidType &&\r\n                    ValidPhotoURL\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const updatedCommercialRegisterCertificate = {\r\n            Token: localStorage.Token,\r\n            Type: this.state.Type,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        await updateCommercialRegisterCertificate(updatedCommercialRegisterCertificate).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            console.log(response);\r\n\r\n            if (response.Message === \"Commercial register certificate is updated.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK(updateCommercialRegisterCertificate);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Type,\r\n            PhotoURL,\r\n            ValidForm,\r\n            ShowPreloader,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`edit-commercial-register-certificate-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <ImageUploader\r\n                                                    Source={PhotoURL}\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }} />\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"type-h3 color-default p-t-xxs\">Edit Commercial Register Certificate</div>\r\n                                                <div className=\"type-sh4 text-danger\">{Errors.PhotoURL}</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Certificate Type</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default EditCommercialRegisterCertificateDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport EditCommercialRegisterCertificateDialog from \"./EditCommercialRegisterCertificateDialog\";\r\nimport { deleteCommercialRegisterCertificate } from \"../../../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass CommercialRegisterCertificateListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        let discardedCommercialRegisterCertificate = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        await deleteCommercialRegisterCertificate(discardedCommercialRegisterCertificate).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Commercial register certificate is deleted.\") {\r\n                this.props.OnCertificateDeleted();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        const {\r\n            CommercialRegisterCertificate\r\n        } = this.props;\r\n\r\n        return <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n            <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#commercial-register-certificate-list-item`}>\r\n                <div className=\"entity-list\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\" style={{ borderRadius: \"50%\" }}>\r\n                            <span className=\"glyph glyph-add\"></span>\r\n                            <span className=\"glyph glyph-remove\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>1.</span>\r\n                            </div>\r\n                            <div className=\"content-text-secondary\">\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>COMMERCIAL REGISTER CERTIFICATE</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`commercial-register-certificate-list-item`}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={CommercialRegisterCertificate.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3 color-default p-t-xxs\">Commercial Register Certificate</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Certificate Number</div>\r\n                                                    <div className=\"content-text-secondary\">{CommercialRegisterCertificate.Number}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-cog\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Certificate Type</div>\r\n                                                    <div className=\"content-text-secondary\">{CommercialRegisterCertificate.Type}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"text-right back-color-gray p-xxs\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#edit-commercial-register-certificate-dialog\">Edit</button>\r\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={this.onDelete}>Delete</button>\r\n                </div>\r\n            </div>\r\n            {ShowPreloader ? <Preloader /> : null}\r\n            <EditCommercialRegisterCertificateDialog CommercialRegisterCertificate={CommercialRegisterCertificate}\r\n                OnOK={this.props.OnCertificateUpdated} />\r\n        </li>;\r\n    }\r\n};\r\n\r\nexport default CommercialRegisterCertificateListItem;","import React, { Component } from \"react\";\r\nimport AddCommercialRegisterCertifcateDialog from \"./commercialRegisterCertificate/AddCommercialRegisterCertificateDialog\";\r\nimport CommercialRegisterCertificateListItem from \"./commercialRegisterCertificate/CommercialRegisterCertificateListItem\";\r\nimport { getData } from \"../../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass DocumentsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            CommercialRegisterCertificate: null,\r\n            Searching: false,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"CommercialRegisterCertificate\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Commercial register certificate found.\") {\r\n                    this.setState({\r\n                        CommercialRegisterCertificate: response.CommercialRegisterCertificate,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        CommercialRegisterCertificate: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            CommercialRegisterCertificate,\r\n            Searching\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 back-color-gray m-n p-xxs\">Documents</div>\r\n\r\n            {Searching ? null : <section>\r\n                <div className=\"text-right back-color-gray p-xxs\">\r\n                    {CommercialRegisterCertificate ?\r\n                        null :\r\n                        <section>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#add-commercial-register-certificate-dialog\">Add CR Certificate</button>\r\n                            <AddCommercialRegisterCertifcateDialog\r\n                                OnOK={commercialRegisterCertificate => {\r\n                                    this.setState({\r\n                                        CommercialRegisterCertificate: commercialRegisterCertificate\r\n                                    });\r\n                                }} />\r\n                        </section>}\r\n                </div>\r\n\r\n                <ol className=\"list-items m-n\">\r\n                    {CommercialRegisterCertificate ?\r\n                        <CommercialRegisterCertificateListItem\r\n                            CommercialRegisterCertificate={CommercialRegisterCertificate}\r\n                            OnCertificateDeleted={() => {\r\n                                this.setState({\r\n                                    CommercialRegisterCertificate: null\r\n                                });\r\n                            }}\r\n                            OnCertificateUpdated={updatedCertificate => {\r\n                                let {\r\n                                    CommercialRegisterCertificate\r\n                                } = this.state;\r\n\r\n                                CommercialRegisterCertificate.Type = updatedCertificate.Type;\r\n                                CommercialRegisterCertificate.PhotoURL = updatedCertificate.PhotoURL;\r\n\r\n                                this.setState({\r\n                                    CommercialRegisterCertificate: CommercialRegisterCertificate\r\n                                });\r\n                            }} /> : null}\r\n                </ol>\r\n            </section>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DocumentsList;","import React, { Component } from \"react\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport DocumentsList from \"./documents/DocumentsList\";\r\nimport { getData } from \"../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass Profile extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            Name: \"\",\r\n            Email: \"\",\r\n            Username: \"\",\r\n            InternalNumber: \"\", \r\n            CommercialRegisterNumber: \"\",\r\n            Active: false,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TransportCompanyResponsible\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Transport company responsible found.\") {\r\n                    let transportCompanyResponsible = response.TransportCompanyResponsible;\r\n\r\n                    this.setState({\r\n                        Name: transportCompanyResponsible.Name,\r\n                        Email: transportCompanyResponsible.Email,\r\n                        Username: transportCompanyResponsible.Username,\r\n                        InternalNumber: transportCompanyResponsible.InternalNumber,\r\n                        CommercialRegisterNumber: transportCompanyResponsible.CommercialRegisterNumber,\r\n                        Active: transportCompanyResponsible.Active,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Name: \"\",\r\n                        Email: \"\",\r\n                        Username: \"\",\r\n                        InternalNumber: \"\",\r\n                        CommercialRegisterNumber: \"\",\r\n                        Active: false,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Name,\r\n            Email,\r\n            Username,\r\n            InternalNumber,\r\n            CommercialRegisterNumber,\r\n            Active\r\n        } = this.state;\r\n        \r\n        return <section>\r\n            <PageHeading Heading=\"PROFILE\" />\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"type-h3 color-default p-t-xxs\">{Name}</div>\r\n                    <div className=\"type-sh3\">\r\n                        <span className=\"fas fa-copyright m-r-xxxs\" style={{ color: \"#606060\" }}></span>Transport Company</div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-at\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Username</div>\r\n                                        <div className=\"content-text-secondary\">{Username}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-envelope\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Email</div>\r\n                                        <div className=\"content-text-secondary\">{Email}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-hashtag\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Internal Number</div>\r\n                                            <div className=\"content-text-secondary\">{InternalNumber}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-hashtag\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Commercial Register Number</div>\r\n                                            <div className=\"content-text-secondary\">{CommercialRegisterNumber}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-globe-asia\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Active</div>\r\n                                        <div className=\"content-text-secondary\">{Active ?\r\n                                            <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                            <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <DocumentsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Profile;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { getData, generalSettings } from \"../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass GeneralSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Name: \"\",\r\n            PhoneNumber: \"\",\r\n\r\n            ValidName: true,\r\n            ValidPhoneNumber: true,\r\n\r\n            ValidForm: false,\r\n            SettingsSaved: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TransportCompanyResponsible\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Transport company responsible found.\") {\r\n                    let transportCompanyResponsible = response.TransportCompanyResponsible;\r\n\r\n                    this.setState({\r\n                        Name: transportCompanyResponsible.Name,\r\n                        PhoneNumber: transportCompanyResponsible.PhoneNumber\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Name: \"\",\r\n                        PhoneNumber: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidName,\r\n            ValidPhoneNumber\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"Name\":\r\n                ValidName = (value !== \"\");\r\n                Errors.Name = ValidName ? \"\" : \"Company name is required.\";\r\n\r\n                if (Errors.Name !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidName = (value.match(/^[a-zA-Z ]+$/));\r\n                Errors.Name = ValidName ? \"\" : \"Company name is invalid.\";\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = (value !== \"\");\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is required.\";\r\n\r\n                if (Errors.PhoneNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPhoneNumber = value.match(/^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/);\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidName: ValidName,\r\n            ValidPhoneNumber: ValidPhoneNumber\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: ValidName &&\r\n                    ValidPhoneNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedTransportCompanyResponsible = {\r\n            Token: localStorage.Token,\r\n            Name: this.state.Name,\r\n            PhoneNumber: this.state.PhoneNumber\r\n        };\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        await generalSettings(updatedTransportCompanyResponsible).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Transport company responsible is updated.\") {\r\n                this.props.OnSettingsSaved();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Name,\r\n            PhoneNumber,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>General Settings</div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n                <div className=\"entity-list entity-list-expandable\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-comment\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"Name\" autoComplete=\"off\"\r\n                                    value={Name} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Company Name</div>\r\n                            <div className=\"text-danger\">{Errors.Name}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-phone\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autocomplete=\"off\"\r\n                                    placeholder=\"+XXXXXXXXXXXX\" value={this.state.PhoneNumber} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Phone Number</div>\r\n                            <div className=\"text-danger\">{Errors.PhoneNumber}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item active\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-save\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Save Changes?</div>\r\n                            <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                        </div>\r\n                        <div className=\"item-content-expanded\">\r\n                            <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            {ShowPreloader ? <Preloader /> : null}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default GeneralSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { usernameAndEmailSettings } from \"../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass CodeConfirmationDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ConfirmCode: \"\",\r\n\r\n            ValidConfirmCode: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                ConfirmCode: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidConfirmCode\r\n        } = this.state;\r\n\r\n        ValidConfirmCode = value === \"12345\";\r\n        Errors.ConfirmCode = ValidConfirmCode ? \"\" : \"Invalid code.\";\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidConfirmCode: ValidConfirmCode,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: ValidConfirmCode\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const updatedTransportCompanyResponsible = {\r\n            Token: localStorage.Token,\r\n            Username: this.props.Username,\r\n            Email: this.props.Email,\r\n        };\r\n\r\n        await usernameAndEmailSettings(updatedTransportCompanyResponsible).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Transport company responsible is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ConfirmCode,\r\n            ValidForm,\r\n            ShowPreloader,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal in\" id=\"code-confirmation-dialog\" tabIndex=\"-1\"\r\n                role=\"dialog\" aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\"\r\n                style={{ display: \"block\" }}>\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Email Confirmation</div>\r\n                                                <div className=\"type-sh3 m-b-xxs\">We delivered a confirmation code to your email.</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Confirmation Code</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"ConfirmCode\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={ConfirmCode} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.ConfirmCode}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Confirm\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default CodeConfirmationDialog;","import React, { Component } from \"react\";\r\nimport CodeConfirmationDialog from \"./CodeConfirmationDialog\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\n\r\nimport {\r\n    getData,\r\n    validateUsername,\r\n    validateEmail,\r\n    sendCode,\r\n    usernameAndEmailSettings\r\n} from \"../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass UsernameAndEmailSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            NewUsername: \"\",\r\n\r\n            Email: \"\",\r\n            NewEmail: \"\",\r\n\r\n            Code: \"\",\r\n\r\n            ValidNewUsername: true,\r\n            ValidNewEmail: true,\r\n\r\n            ValidForm: false,\r\n            CodeConfirmationDialog: null,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                NewUsername: \"\",\r\n                NewEmail: \"\",\r\n            },\r\n\r\n            CodeConfirmation: \"\",\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TransportCompanyResponsible\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Transport company responsible found.\") {\r\n                    let transportCompanyResponsible = response.TransportCompanyResponsible;\r\n\r\n                    this.setState({\r\n                        Username: transportCompanyResponsible.Username,\r\n                        NewUsername: transportCompanyResponsible.Username,\r\n                        Email: transportCompanyResponsible.Email,\r\n                        NewEmail: transportCompanyResponsible.Email\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Username: \"\",\r\n                        NewUsername: \"\",\r\n                        Email: \"\",\r\n                        NewEmail: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidNewUsername,\r\n            ValidNewEmail\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"NewUsername\":\r\n                ValidNewUsername = (value !== \"\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is required.\";\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value.match(/^[a-z0-9]+$/i));\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is invalid.\";\r\n                break;\r\n            case \"NewEmail\":\r\n                ValidNewEmail = (value !== \"\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is required.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i));\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewUsername: ValidNewUsername,\r\n            ValidNewEmail: ValidNewEmail,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: ValidNewUsername &&\r\n                    ValidNewEmail\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername === this.state.Username &&\r\n            this.state.NewEmail === this.state.Email) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername !== this.state.Username) {\r\n            const response = await validateUsername(this.state.NewUsername);\r\n\r\n            if (response.Message === \"Username is unavailable.\") {\r\n                let errors = this.state.Errors;\r\n                errors.NewUsername = response.Message;\r\n\r\n                this.setState({\r\n                    Errors: errors\r\n                });\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail !== this.state.Email) {\r\n            const response = await validateEmail(this.state.NewEmail);\r\n            if (response.Message === \"Email is already taken.\") {\r\n                let errors = this.state.Errors;\r\n                errors.NewEmail = response.Message;\r\n\r\n                this.setState({\r\n                    Errors: errors\r\n                });\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        if (this.state.NewEmail === this.state.Email) {\r\n            const updatedTransportCompanyResponsible = {\r\n                Token: localStorage.Token,\r\n                Username: this.state.NewUsername,\r\n                Email: this.state.NewEmail,\r\n            };\r\n\r\n            await usernameAndEmailSettings(updatedTransportCompanyResponsible).then(response => {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                if (response.Message === \"Transport company responsible is updated.\") {\r\n                    this.props.OnSettingsSaved();\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            await sendCode(this.state.NewEmail).then(response => {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                if (response.Message === \"Code sent.\") {\r\n                    this.setState({\r\n                        CodeConfirmationDialog: <CodeConfirmationDialog\r\n                            Code={response.Code}\r\n                            Username={this.state.NewUsername}\r\n                            Email={this.state.NewEmail}\r\n                            OnCancel={() => {\r\n                                this.setState({\r\n                                    CodeConfirmationDialog: null,\r\n                                });\r\n                            }}\r\n                            OnOK={cancelButton => {\r\n                                cancelButton.click();\r\n                                this.props.OnSettingsSaved();\r\n                            }} />\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            NewUsername,\r\n            NewEmail,\r\n            ValidForm,\r\n            ShowPreloader,\r\n            CodeConfirmationDialog,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return (\r\n            <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Username and Emails</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-at\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"NewUsername\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={NewUsername} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Username</div>\r\n                                <div className=\"content-text-secondary text-danger\">{Errors.NewUsername}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-envelope\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"email\" name=\"NewEmail\" className=\"form-control\" placeholder=\"someone@example.com\" autocomplete=\"off\"\r\n                                        value={NewEmail} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Email</div>\r\n                                <div className=\"content-text-secondary text-danger\">{Errors.NewEmail}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                \r\n                {ShowPreloader ? <Preloader /> : null}\r\n                {CodeConfirmationDialog}\r\n            </section> \r\n        );\r\n    }\r\n};\r\n\r\nexport default UsernameAndEmailSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { validatePassword, passwordSettings } from \"../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass PasswordSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            CurrentPassword: \"\",\r\n            NewPassword: \"\",\r\n            ConfirmPassword: \"\",\r\n\r\n            ValidCurrentPassword: false,\r\n            ValidNewPassword: false,\r\n            ValidConfirmPassword: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                CurrentPassword: \"\",\r\n                NewPassword: \"\",\r\n                ConfirmPassword: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    async validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidCurrentPassword,\r\n            ValidNewPassword,\r\n            ValidConfirmPassword\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"CurrentPassword\":\r\n                ValidCurrentPassword = (value !== \"\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is required.\";\r\n                break;\r\n            case \"NewPassword\":\r\n                ValidNewPassword = value.length >= 6;\r\n                Errors.NewPassword = ValidNewPassword ? \"\" : \"Password is too short.\";\r\n\r\n                if (Errors.NewPassword !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidConfirmPassword = value === this.state.ConfirmPassword;\r\n                Errors.ConfirmPassword = ValidConfirmPassword ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                ValidConfirmPassword = value === this.state.NewPassword;\r\n                Errors.ConfirmPassword = ValidConfirmPassword ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCurrentPassword: ValidCurrentPassword,\r\n            ValidNewPassword: ValidNewPassword,\r\n            ValidConfirmPassword: ValidConfirmPassword,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: ValidCurrentPassword &&\r\n                    ValidNewPassword &&\r\n                    ValidConfirmPassword\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        let passwordPackage = {\r\n            Token: localStorage.Token,\r\n            Password: this.state.CurrentPassword\r\n        };\r\n\r\n        await validatePassword(passwordPackage).then(async response => {\r\n            if (response.Message === \"Invalid password.\") {\r\n                this.validateField(\"CurrentPassword\", response.Message);\r\n                let errors = this.state.Errors;\r\n                errors.CurrentPassword = response.Message;\r\n\r\n                this.setState({\r\n                    Errors: errors\r\n                });\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: true\r\n                });\r\n\r\n                const updatedTransportCompanyResponsible = {\r\n                    Token: localStorage.Token,\r\n                    Password: this.state.NewPassword\r\n                };\r\n\r\n                await passwordSettings(updatedTransportCompanyResponsible).then(response => {\r\n                    this.setState({\r\n                        ShowPreloader: false,\r\n                        CurrentPassword: \"\",\r\n                        NewPassword: \"\",\r\n                        ConfirmPassword: \"\"\r\n                    });\r\n\r\n                    if (response.Message === \"Transport company responsible is updated.\") {\r\n                        this.props.OnSettingsSaved();\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            CurrentPassword,\r\n            NewPassword,\r\n            ConfirmPassword,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\" }}>Change Password</div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n                <div className=\"entity-list entity-list-expandable\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" name=\"CurrentPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                    value={CurrentPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Current Password</div>\r\n                            <div className=\"text-danger\">{Errors.CurrentPassword}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" name=\"NewPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                    value={NewPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">New Password</div>\r\n                            <div className=\"text-danger\">{Errors.NewPassword}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" name=\"ConfirmPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                    value={ConfirmPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Confirm Password</div>\r\n                            <div className=\"text-danger\">{Errors.ConfirmPassword}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item active\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-save\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Save Changes?</div>\r\n                            <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                        </div>\r\n                        <div className=\"item-content-expanded\">\r\n                            <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            {ShowPreloader ? <Preloader /> : null}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PasswordSettings;","import React, { Component } from \"react\";\r\nimport GeneralSettings from \"./GeneralSettings\";\r\nimport UsernameAndEmailSettings from \"./UsernameAndEmailSettings\";\r\nimport PasswordSettings from \"./PasswordSettings\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Settings extends Component {\r\n    render() {\r\n        return <section>\r\n            <PageHeading Heading=\"SETTINGS\" />\r\n            <GeneralSettings />\r\n            <UsernameAndEmailSettings />\r\n            <PasswordSettings />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Settings;","import React, { Component } from \"react\";\r\nimport TruckContainer from \"../../../../../containers/truck/TruckContainer\";\r\nimport TrailersContainer from \"../../../../../containers/truck/TrailersContainer\";\r\n\r\nclass TruckDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Trailers: []\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Trailers\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            DriverID\r\n        } = this.props;\r\n\r\n        const index = this.props.Index;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`truck-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <section>\r\n                                <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                                    <li role=\"presentation\" className=\"active\">\r\n                                        <a href={`#truck-tab-${Index}`} aria-controls={`truck-tab-${Index}`} role=\"tab\" data-toggle=\"tab\">Truck</a>\r\n                                    </li>\r\n                                    <li role=\"presentation\">\r\n                                        <a href={`#trailers-tab-${Index}`} aria-controls={`trailers-tab-${Index}`} role=\"tab\" data-toggle=\"tab\">Trailers</a>\r\n                                    </li>\r\n                                </ul>\r\n                                <div className=\"tab-content\">\r\n                                    <div role=\"tabpanel\" className=\"tab-pane active\" id={`truck-tab-${index}`}>\r\n                                        <TruckContainer Refresh={this.props.Refresh}\r\n                                            DriverID={DriverID}\r\n                                            OnTrailersFound={trailers => {\r\n                                                this.setState({\r\n                                                    Trailers: trailers\r\n                                                });\r\n                                            }}\r\n                                            TabView={true} />\r\n                                    </div>\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id={`trailers-tab-${index}`}>\r\n                                        <TrailersContainer Trailers={Trailers} />\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TruckDialog;","import React, { Component } from \"react\";\r\nimport DriverContainer from \"../../../../../containers/driver/DriverContainer\";\r\nimport DocumentsContainer from \"../../../../../containers/driver/documents/DocumentsContainer\";\r\n\r\nclass ProfileDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            DriverID,\r\n            RefreshDocuments,\r\n            RefreshDriver\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`driver-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <section>\r\n                                <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                                    <li role=\"presentation\" className=\"active\">\r\n                                        <a href={`#driver-tab-${Index}`} aria-controls={`driver-tab-${Index}`} role=\"tab\" data-toggle=\"tab\">Driver</a>\r\n                                    </li>\r\n                                    <li role=\"presentation\">\r\n                                        <a href={`#documents-tab-${Index}`} aria-controls={`documents-tab-${Index}`} role=\"tab\" data-toggle=\"tab\">Documents</a>\r\n                                    </li>\r\n                                </ul>\r\n                                <div className=\"tab-content\">\r\n                                    <div role=\"tabpanel\" className=\"tab-pane active\" id={`driver-tab-${Index}`}>\r\n                                        <DriverContainer Refresh={RefreshDriver} DriverID={DriverID} TabView={true} />\r\n                                    </div>\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id={`documents-tab-${Index}`}>\r\n                                        <DocumentsContainer Refresh={RefreshDocuments} DriverID={DriverID} />\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ProfileDialog;","import React from \"react\";\r\nimport { withGoogleMap, withScriptjs, GoogleMap, Marker, } from \"react-google-maps\";\r\nconst Key = \"AIzaSyD_U_2NzdPIL7TWb8ECBHWO1eROR2yrebI\";\r\n\r\nconst Map = props => {\r\n    const {\r\n        DriverLocation\r\n    } = props;\r\n\r\n    return <GoogleMap\r\n        defaultZoom={10}\r\n        defaultCenter={{ lat: DriverLocation.Lat, lng: DriverLocation.Lng }}>\r\n\r\n        <Marker key={1} position={{ lat: DriverLocation.Lat, lng: DriverLocation.Lng }}\r\n            icon={{\r\n                url: \"./images/truck_marker.svg\",\r\n                scaledSize: new window.google.maps.Size(40, 40)\r\n            }} />\r\n    </GoogleMap>;\r\n}\r\n\r\nconst MapWrapped = withScriptjs(withGoogleMap(Map));\r\n\r\nconst TruckMap = props => {\r\n    return <div style={{ width: \"100%\", height: \"400px\" }}>\r\n        <MapWrapped\r\n            googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${Key}`}\r\n            loadingElement={<div style={{ height: `100%` }} />}\r\n            containerElement={<div style={{ height: `100%` }} />}\r\n            mapElement={<div style={{ height: `100%` }} />}\r\n            DriverLocation={props.DriverLocation} />\r\n    </div>;\r\n}\r\n\r\nexport default TruckMap;","import React, { Component } from \"react\";\r\nimport FirebaseApp from \"../../../../../res/FirebaseApp\";\r\nimport TruckMap from \"./TruckMap\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\n\r\nclass LocateTruckDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.Database = FirebaseApp.database().ref().child(`${this.props.DriverID}`);\r\n\r\n        this.state = {\r\n            DriverLocation: null,\r\n            Searching: false\r\n        };\r\n\r\n        this.locateTruck = this.locateTruck.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.LocateTruck(this.locateTruck);\r\n    }\r\n\r\n    locateTruck = () => {\r\n        this.setState({\r\n            Searching: true\r\n        });\r\n\r\n        this.Database.on(\"value\", snapshot => {\r\n            let driverLocation = null;\r\n            const value = snapshot.val();\r\n\r\n            if (value) {\r\n                const locationCoordinates = value[\"latlong\"].split(\",\");\r\n\r\n                driverLocation = {\r\n                    Lat: parseFloat(locationCoordinates[0]),\r\n                    Lng: parseFloat(locationCoordinates[1])\r\n                };\r\n            }\r\n\r\n            this.setState({\r\n                DriverLocation: driverLocation,\r\n                Searching: false\r\n            });\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            DriverLocation,\r\n            Searching\r\n        } = this.state;\r\n\r\n        const {\r\n            Index\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`locate-truck-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {Searching || !DriverLocation ?\r\n                                <SearchingContainer Searching={Searching}\r\n                                    SearchingFor=\"truck location\" /> :\r\n                                <TruckMap DriverLocation={DriverLocation} />}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default LocateTruckDialog;","import React, { Component } from \"react\";\r\nimport TruckDialog from \"./TruckDialog\";\r\nimport DriverDialog from \"./DriverDialog\";\r\nimport LocateTruckDialog from \"./LocateTruckDialog\";\r\n\r\nclass TruckListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Truck\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{Index + 1}</strong>\r\n            </td>\r\n\r\n            <td>{Truck.TruckNumber}</td>\r\n\r\n            <td>{Truck.Brand}</td>\r\n\r\n            <td>{Truck.Model}</td>\r\n\r\n            <td className=\"text-right\">\r\n                <button className=\"btn btn-secondary m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#truck-dialog-${Index}`}>Details</button>\r\n\r\n                <button className=\"btn btn-secondary m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#driver-dialog-${Index}`}\r\n                    onClick={async () => {\r\n                        await this.RefreshDriverContainer();\r\n                        await this.RefreshDocumentsContainer();\r\n                    }}>Driver</button>\r\n\r\n                <button className=\"btn btn-primary m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#locate-truck-dialog-${Index}`}\r\n                    onClick={() => { this.LocateTruck(); }}>Locate</button>\r\n\r\n                <TruckDialog Index={Index}\r\n                    DriverID={Truck.DriverID}\r\n                    Refresh={refresh => { this.RefreshTruckContainer = refresh; }} />\r\n\r\n                <DriverDialog Index={Index}\r\n                    DriverID={Truck.DriverID}\r\n                    RefreshDriver={refresh => { this.RefreshDriverContainer = refresh; }}\r\n                    RefreshDocuments={refresh => { this.RefreshDocumentsContainer = refresh; }} />\r\n\r\n                <LocateTruckDialog Index={Index}\r\n                    DriverID={Truck.DriverID}\r\n                    LocateTruck={locateTruck => { this.LocateTruck = locateTruck; }}/>\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default TruckListItem;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport TruckListItem from \"./TruckListItem\";\r\nimport { getData } from \"../../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass TrucksList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Trucks: [],\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Trucks\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trucks found.\") {\r\n                    this.setState({\r\n                        Trucks: response.Trucks,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Trucks: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            Trucks,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-truck-moving m-r-xxs\"></span>Trucks</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Your Trucks\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            {(Trucks.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"trucks\" /> :\r\n                <div class=\"table-responsive back-color-gray\" style={{ height: \"100vh\" }}>\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>NUMBER</th>\r\n                                <th>TRUCK NUMBER</th>\r\n                                <th>BRAND</th>\r\n                                <th>MODEL</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {Trucks.map((truck, index) => {\r\n                                return <TruckListItem key={index}\r\n                                    Index={index}\r\n                                    Truck={truck} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TrucksList;","import React, { Component } from \"react\";\r\nimport TrucksList from \"./TrucksList\";\r\n\r\nclass TruckList extends Component {\r\n    render() {\r\n        return <section>\r\n            <TrucksList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TruckList;","import React, { Component } from \"react\";\r\nimport Rating from \"../../../../../../../controls/Rating\";\r\n\r\nclass DriverReviewContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            DriverReview\r\n        } = this.props;\r\n\r\n        return DriverReview ?\r\n            <div class=\"alert alert-info m-n\" style={{ backgroundColor: \"#E5E5E5\", borderTop: \"2px solid #CCCCCC\" }}>\r\n                <div className=\"type-h4 color-default p-t-xxxs\">Driver's Review</div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-24\">\r\n                        <div className=\"entity-list\">\r\n                            <div className=\"entity-list-item\">\r\n                                <div className=\"item-icon\">\r\n                                    <span className=\"fas fa-star\"></span>\r\n                                </div>\r\n                                <div className=\"item-content-primary\">\r\n                                    <div className=\"content-text-primary\">Rating</div>\r\n                                    <div className=\"content-text-secondary\"><Rating Rating={DriverReview.Rating} Color=\"\" Size=\"rating-small\" /></div>\r\n                                    <div className=\"content-text-primary\">Review</div>\r\n                                    <div className=\"content-text-secondary\">{DriverReview.Review}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div > :\r\n            <div class=\"alert alert-info m-n\" style={{ backgroundColor: \"#E5E5E5\", borderTop: \"2px solid #CCCCCC\" }}>\r\n                <div className=\"type-h4 color-default p-t-xxxs\">Driver's Review</div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-24\">\r\n                        <div className=\"entity-list\">\r\n                            <div className=\"entity-list-item\">\r\n                                <div className=\"item-icon\">\r\n                                    <span className=\"fas fa-star\"></span>\r\n                                </div>\r\n                                <div className=\"item-content-primary\">\r\n                                    <div className=\"content-text-primary\">No Rating Found</div>\r\n                                    <div className=\"content-text-secondary\">Driver's rating and review appears here.</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n\r\n    }\r\n};\r\n\r\nexport default DriverReviewContainer;","import React, { Component } from \"react\";\r\n\r\nclass UserDetailsContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Driver,\r\n            Trader,\r\n        } = this.props;\r\n\r\n        return <div class=\"alert alert-info m-n\" style={{ backgroundColor: \"#E5E5E5\", borderTop: \"2px solid #CCCCCC\" }}>\r\n            <div className=\"type-h4 color-default p-t-xxxs\">Participants</div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"entity-list\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <img src={Driver.PhotoURL ? Driver.PhotoURL : \"./images/defaultProfilePhoto.png\"} alt=\"profile_photo.png\"\r\n                                    height=\"34\"\r\n                                    width=\"34\"\r\n                                    style={{\r\n                                        height: \"100%\",\r\n                                        width: \"100%\",\r\n                                        margin: \"0px\",\r\n                                        border: \"3px solid #3A3A3C\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">{`${Driver.FirstName} ${Driver.LastName}`}</div>\r\n                                <div className=\"content-text-secondary color-default\">{`@${Driver.Username}`}</div>\r\n                                <div className=\"content-text-secondary\">DRIVER</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"entity-list\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <img src={Trader.PhotoURL ? Trader.PhotoURL : \"./images/defaultProfilePhoto.png\"} alt=\"profile_photo.png\"\r\n                                    height=\"34\"\r\n                                    width=\"34\"\r\n                                    style={{\r\n                                        height: \"100%\",\r\n                                        width: \"100%\",\r\n                                        margin: \"0px\",\r\n                                        border: \"3px solid #3A3A3C\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">{`${Trader.FirstName} ${Trader.LastName}`}</div>\r\n                                <div className=\"content-text-secondary color-default\">{`@${Trader.Username}`}</div>\r\n                                <div className=\"content-text-secondary\">{Trader.Type.toUpperCase()}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n};\r\n\r\nexport default UserDetailsContainer;","import React, { Component } from \"react\";\r\nimport CompletedJobContainer from \"../../../../../../../containers/completedJob/CompletedJobContainer\";\r\nimport DriverReviewContainer from \"./DriverReviewContainer\";\r\nimport UserDetailsContainer from \"./UserDetailsContainer\";\r\n\r\nclass TruckJobDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            JobDetails\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <CompletedJobContainer CompletedJob={JobDetails} />\r\n            <DriverReviewContainer DriverReview={JobDetails.DriverReview} />\r\n            <UserDetailsContainer Driver={JobDetails.Driver} Trader={JobDetails.Trader} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TruckJobDetails;","import React, { Component } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport TruckJobDetailsContainer from \"./truckJobDetails/TruckJobDetails\";\r\nimport { getData } from \"../../../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass TruckJobDetailsDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TruckJobDetails: null,\r\n            Searching: false\r\n        };\r\n\r\n        this.searchTruckJobDetails = this.searchTruckJobDetails.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.SearchTruckJobDetails(this.searchTruckJobDetails);\r\n    }\r\n\r\n    searchTruckJobDetails = async completedJobID => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TruckJobDetails\",\r\n                Params: {\r\n                    CompletedJobID: completedJobID\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Truck job details found.\") {\r\n                    this.setState({\r\n                        TruckJobDetails: response.TruckJobDetails,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TruckJobDetails: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            TruckJobDetails,\r\n            Searching\r\n        } = this.state;\r\n\r\n        const {\r\n            Index\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`truck-job-details-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {Searching || !TruckJobDetails ?\r\n                                <SearchingContainer Searching={Searching}\r\n                                    SearchingFor=\"job details\" /> :\r\n                                <section>\r\n                                    <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                                        <ReactToPrint\r\n                                            trigger={() => <button className=\"btn btn-primary m-t-n\">Print</button>}\r\n                                            content={() => this.JobDetails} />\r\n                                    </div>\r\n                                    <TruckJobDetailsContainer JobDetails={TruckJobDetails}\r\n                                        ref={jobDetails => (this.JobDetails = jobDetails)}/>\r\n                                </section>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TruckJobDetailsDialog;","import React, { Component } from \"react\";\r\nimport TruckJobDetailsDialog from \"./TruckJobDetailsDialog\";\r\n\r\nclass TruckJobsRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            TruckJob\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{`${Index + 1}.`}</strong>\r\n            </td>\r\n\r\n            <td>{TruckJob.JobNumber}</td>\r\n\r\n            <td>{TruckJob.LoadingPlace}</td>\r\n\r\n            <td>{TruckJob.UnloadingPlace}</td>\r\n\r\n            <td>{`$${TruckJob.Price.toFixed(2)}`}</td>\r\n\r\n            <td>{TruckJob.TruckNumber}</td>\r\n\r\n            <td>{new Date(TruckJob.Created).toDateString()}</td>\r\n\r\n            <td className=\"text-right\">\r\n                <button className=\"btn btn-primary m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#truck-job-details-dialog-${Index}`}\r\n                    onClick={async () => { await this.SearchTruckJobDetails(TruckJob.CompletedJobID); }}>Details</button>\r\n\r\n                <TruckJobDetailsDialog Index={Index}\r\n                    SearchTruckJobDetails={searchTruckJobDetails => { this.SearchTruckJobDetails = searchTruckJobDetails }} />\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default TruckJobsRow;","import React, { Component } from \"react\";\r\nimport TruckJobsRow from \"./TruckJobsRow\";\r\n\r\nclass TruckJobsTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            TruckJobs\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div class=\"table-responsive back-color-gray\" style={{ borderTop: \"4px solid #CCCCCC\", height: \"100vh\" }}>\r\n                <table class=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>NUMBER</th>\r\n                            <th>JOB NUMBER</th>\r\n                            <th>SOURCE</th>\r\n                            <th>DESTINATION</th>\r\n                            <th>PRICE</th>\r\n                            <th>TRUCK NUMBER</th>\r\n                            <th>DATE</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {TruckJobs.map((truckJob, index) => {\r\n                            return <TruckJobsRow key={index}\r\n                                Index={index}\r\n                                TruckJob={truckJob} />;\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TruckJobsTable;","import React, { Component } from \"react\";\r\n\r\nclass SearchTruckJobsDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobNumber: \"\",\r\n            StartDate: \"\",\r\n            EndDate: \"\",\r\n            StartPrice: 0.00,\r\n            EndPrice: 0.00\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        const {\r\n            JobNumber,\r\n            StartDate,\r\n            EndDate,\r\n            StartPrice,\r\n            EndPrice\r\n        } = this.state;\r\n\r\n        console.log(JobNumber);\r\n        console.log(StartDate);\r\n        console.log(EndDate);\r\n        console.log(StartPrice);\r\n        console.log(EndPrice);\r\n\r\n        const {\r\n            TruckJobs\r\n        } = this.props;\r\n\r\n        let filteredTruckJobs;\r\n        let count;\r\n\r\n        if (JobNumber !== \"\") {\r\n            filteredTruckJobs = [];\r\n            count = 0;\r\n\r\n            for (let truckJob of TruckJobs) {\r\n                if (truckJob.JobNumber.includes(JobNumber)) {\r\n                    filteredTruckJobs[count++] = truckJob;\r\n                }\r\n            }\r\n\r\n            this.cancelButton.click();\r\n            this.props.OnOK(filteredTruckJobs);\r\n            return;\r\n        }\r\n        else {\r\n            filteredTruckJobs = TruckJobs.slice();\r\n            let indicesToRemove;\r\n\r\n            if (StartDate !== \"\") {\r\n                console.log(\"Hllo\");\r\n                indicesToRemove = []\r\n                count = 0;\r\n\r\n                for (let truckJob of filteredTruckJobs) {\r\n                    const created = new Date(truckJob.Created);\r\n                    const startDate = new Date(StartDate);\r\n\r\n                    if (created < startDate) {\r\n                        indicesToRemove.push(count);\r\n                    }\r\n\r\n                    count++;\r\n                }\r\n\r\n                for (let index of indicesToRemove) {\r\n                    filteredTruckJobs.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            if (EndDate !== \"\") {\r\n                indicesToRemove = [];\r\n                count = 0;\r\n\r\n                for (let truckJob of filteredTruckJobs) {\r\n                    const created = new Date(truckJob.Created);\r\n                    const endDate = new Date(EndDate);\r\n\r\n                    if (created > endDate) {\r\n                        indicesToRemove.push(count);\r\n                    }\r\n\r\n                    count++;\r\n                }\r\n\r\n                for (let index of indicesToRemove) {\r\n                    filteredTruckJobs.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            if (StartPrice !== \"\" ||\r\n                StartPrice !== 0) {\r\n                indicesToRemove = [];\r\n                count = 0;\r\n\r\n                for (let truckJob of filteredTruckJobs) {\r\n                    if (parseFloat(truckJob.Price) < parseFloat(StartPrice)) {\r\n                        indicesToRemove.push(count);\r\n                    }\r\n\r\n                    count++;\r\n                }\r\n\r\n                for (let index of indicesToRemove) {\r\n                    filteredTruckJobs.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            if (EndPrice !== \"\" ||\r\n                parseFloat(EndPrice) !== 0) {\r\n                indicesToRemove = [];\r\n                count = 0;\r\n\r\n                for (let truckJob of filteredTruckJobs) {\r\n                    if (parseFloat(truckJob.Price) > parseFloat(EndPrice)) {\r\n                        indicesToRemove.push(count);\r\n                    }\r\n\r\n                    count++;\r\n                }\r\n\r\n                for (let index of indicesToRemove) {\r\n                    filteredTruckJobs.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            this.cancelButton.click();\r\n            this.props.OnOK(filteredTruckJobs);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            JobNumber,\r\n            StartDate,\r\n            EndDate,\r\n            StartPrice,\r\n            EndPrice\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"search-truck-jobs-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"type-h3 color-default p-t-xxs\">Search Truck Jobs</div>\r\n                                        <div className=\"row p-t-xxs\">\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Job Number</label>\r\n                                                    <input type=\"text\" name=\"JobNumber\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={JobNumber} onChange={this.onChange} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Starting Date</label>\r\n                                                    <input type=\"date\" name=\"StartDate\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={StartDate} onChange={this.onChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Ending Date</label>\r\n                                                    <input type=\"date\" name=\"EndDate\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={EndDate} onChange={this.onChange} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Staring Price (USD)</label>\r\n                                                    <input type=\"number\" min=\"0.00\" step=\"0.01\" name=\"StartPrice\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={StartPrice} onChange={this.onChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Ending Price (USD)</label>\r\n                                                    <input type=\"number\" min=\"0.00\" step=\"0.01\" name=\"EndPrice\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={EndPrice} onChange={this.onChange} />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Search Now\" className=\"btn btn-primary\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default SearchTruckJobsDialog;","import React, { Component } from \"react\";\r\nimport ProgressBar from \"../../../../../../controls/ProgressBar\";\r\nimport TruckJobsTable from \"./TruckJobsTable\";\r\nimport SearchTruckJobsDialog from \"./SearchTruckJobsDialog\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport { getData } from \"../../../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass TruckJobs extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllTruckJobs: [],\r\n            TruckJobs: [],\r\n            Searching: false,\r\n            ShowingSearchResults: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.searchTruckJobs = this.searchTruckJobs.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.SearchTruckJobs(this.searchTruckJobs);\r\n    }\r\n\r\n    searchTruckJobs = async truckNumber => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TruckJobs\",\r\n                Params: {\r\n                    TruckNumber: truckNumber\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Truck jobs found.\") {\r\n                    this.setState({\r\n                        AllTruckJobs: response.TruckJobs,\r\n                        TruckJobs: response.TruckJobs,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllTruckJobs: [],\r\n                        TruckJobs: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            AllTruckJobs,\r\n            TruckJobs,\r\n            Searching,\r\n            ShowingSearchResults\r\n        } = this.state;\r\n\r\n        return (Searching || AllTruckJobs.length === 0) ?\r\n            <section>\r\n                <div className=\"jumbotron theme-default\" style={{ width: \"100%\", height: \"100vh\" }}>\r\n                    <div className=\"container\">\r\n                        {Searching ? <div className=\"text-center p-xxs\">\r\n                            <div className=\"type-h4 color-default\">Searching</div>\r\n                            <ProgressBar />\r\n                        </div> : <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4\"><span className=\"fas fa-exclamation-triangle m-r-xxs\"\r\n                                    style={{ color: \"#FFBF15\" }}></span>No truck jobs to display. Search the truck by number to view its jobs.</div>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            </section> :\r\n            <section>\r\n                <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                    {ShowingSearchResults ? \r\n                        <button className=\"btn btn-secondary m-t-n\"\r\n                            onClick={() => {\r\n                                this.setState({\r\n                                    TruckJobs: AllTruckJobs,\r\n                                    ShowingSearchResults: false\r\n                                });\r\n                            }}>Cancel Search</button> : \r\n                        <button className=\"btn btn-secondary m-t-n\"\r\n                            data-toggle=\"modal\"\r\n                            data-target={`#search-truck-jobs-dialog`}>Search Jobs</button>}\r\n                </div>\r\n\r\n                <SearchTruckJobsDialog TruckJobs={AllTruckJobs}\r\n                    OnOK={truckJobs => {\r\n                        this.setState({\r\n                            TruckJobs: truckJobs,\r\n                            ShowingSearchResults: true\r\n                        });\r\n                    }} />\r\n\r\n                {TruckJobs.length === 0 ?\r\n                    <SearchingContainer Searching={false}\r\n                        SearchingFor=\"truck jobs\" /> :\r\n                    <TruckJobsTable TruckJobs={TruckJobs} />}\r\n            </section>;\r\n    }\r\n};\r\n\r\nexport default TruckJobs;","import React, { Component } from \"react\";\r\nimport TruckJobs from \"./truckJobsTable/TruckJobs\";\r\n\r\nclass TruckJobsBrowser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            SearchString: \"\"\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n        this.SearchTruckJobs(this.state.SearchString);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            SearchString\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-briefcase m-r-xxs\"></span>Truck Jobs</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Truck Jobs</div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search Truck Number\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            <TruckJobs SearchTruckJobs={onSearch => { this.SearchTruckJobs = onSearch; }} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TruckJobsBrowser;","import React, { Component } from \"react\";\r\nimport TruckJobsBrowser from \"./TruckJobsBrowser\";\r\n\r\nclass TruckJobs extends Component {\r\n    render() {\r\n        return <section>\r\n            <TruckJobsBrowser />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TruckJobs;","import React, { Component } from \"react\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport TruckList from \"./truckList/TruckList\";\r\nimport TruckJobs from \"./truckJobs/TruckJobs\";\r\n\r\nclass Trucks extends Component {\r\n    render() {\r\n        return <section>\r\n            <PageHeading Heading=\"TRUCKS\" />\r\n            <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                padding: \"10px\",\r\n                backgroundColor: \"#3A3A3C\",\r\n                width: \"100%\",\r\n                margin: \"0px\",\r\n            }}>\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#truck-list\" aria-controls=\"truck-list\" role=\"tab\" data-toggle=\"tab\">Truck List</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#truck-jobs\" aria-controls=\"truck-jobs\" role=\"tab\" data-toggle=\"tab\">Truck Jobs</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div class=\"tab-content\">\r\n                <div role=\"tabpanel\" class=\"tab-pane active\" id=\"truck-list\">\r\n                    <TruckList />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"truck-jobs\">\r\n                    <TruckJobs />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Trucks;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { addQuestion } from \"../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass AskQuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Question: \"\",\r\n\r\n            ValidQuestion: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Question: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidQuestion = this.state.ValidQuestion;\r\n\r\n        switch (field) {\r\n            case \"Question\":\r\n                ValidQuestion = (value !== \"\");\r\n                Errors.Question = ValidQuestion ? \"\" : \"Question is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidQuestion: ValidQuestion,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidQuestion\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newQuestion = {\r\n            Token: localStorage.Token,\r\n            Question: this.state.Question\r\n        };\r\n\r\n        await addQuestion(newQuestion).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Question is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Question,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`ask-question-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Ask a New Question</div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">Question</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <textarea rows=\"6\" class=\"form-control\" name=\"Question\" style={{ maxWidth: \"100%\" }}\r\n                                                        value={Question} onChange={this.onChange}></textarea>\r\n                                                    <span className=\"text-danger\">{Errors.Question}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Post\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AskQuestionDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { deleteQuestion } from \"../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass DeleteQuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false,\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const discardedQuestion = {\r\n            Token: localStorage.Token,\r\n            ResponsibleQuestionID: this.props.ResponsibleQuestionID\r\n        };\r\n\r\n        await deleteQuestion(discardedQuestion).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Question is deleted.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            QuestionNumber\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`delete-responsible-question-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-h3 color-default p-t-n\">Delete Question</div>\r\n                                            <div className=\"type-sh3 m-b-xxs\">Are you sure you want to delete question with ID\r\n                                                <span className=\"color-default\">{` ${QuestionNumber}.`}</span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-right\">\r\n                                        <button className=\"btn btn-primary\" onClick={this.onDelete}>Delete</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DeleteQuestionDialog;","import React, { Component } from \"react\";\r\nimport ResponsibleQuestionContainer from \"../../../../containers/responsibleQuestion/ResponsibleQuestionContainer\";\r\nimport DeleteQuestionDialog from \"./DeleteQuestionDialog\";\r\n\r\nclass QuestionListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Question\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <ResponsibleQuestionContainer Index={Index}\r\n                Question={Question} />\r\n\r\n            <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                <button className=\"btn btn-danger m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#delete-responsible-question-dialog-${Index}`}>Delete</button>\r\n            </div>\r\n\r\n            <DeleteQuestionDialog Index={Index}\r\n                ResponsibleQuestionID={Question.ResponsibleQuestionID}\r\n                QuestionNumber={Question.QuestionNumber}\r\n                OnOK={this.props.OnQuestionDeleted}/>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default QuestionListItem;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../containers/searching/SearchingContainer\";\r\nimport ProgressRing from \"../../../../controls/ProgressRing\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport AskQuestionDialog from \"./AskQuestionDialog\";\r\nimport QuestionListItem from \"./QuestionListItem\";\r\nimport { getData } from \"../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass QuestionsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllQuestions: [],\r\n            Questions: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Questions\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Questions found.\") {\r\n                    this.setState({\r\n                        AllQuestions: response.Questions,\r\n                        Questions: response.Questions,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllQuestions: [],\r\n                        Questions: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                Questions: this.state.AllQuestions\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allQuestions = this.state.AllQuestions;\r\n        let filteredQuestions = [];\r\n        let count = 0;\r\n\r\n        for (let question of allQuestions) {\r\n            if (question.Question.includes(searchString) ||\r\n                question.QuestionNumber.includes(searchString) ||\r\n                question.Class.includes(searchString)) {\r\n                filteredQuestions[count++] = question;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Questions: filteredQuestions\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Questions,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <PageHeading Heading=\"QUESTIONS\" />\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-question-circle m-r-xxs\"></span>Questions</div>\r\n                            <p className=\"color-light\">If you are facing any issues, then post a question. Naqel team will answer them as soon as possible.</p>\r\n                            <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target={`#ask-question-dialog`}>Ask a Question</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <AskQuestionDialog OnOK={async () => { await this.onComponentUpdated(); }} />\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Your Questions\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search Questions\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(Questions.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"questions\" /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {Questions.map((question, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <QuestionListItem Index={index}\r\n                                Question={question}\r\n                                OnQuestionDeleted={this.onComponentUpdated} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default QuestionsList;","import React, { Component } from \"react\";\r\nimport QuestionsList from \"./QuestionsList\";\r\n\r\nclass Questions extends Component {\r\n    render() {\r\n        return <section>\r\n            <QuestionsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Questions;","import React, { Component } from \"react\";\r\n\r\nclass AccountStatementRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Transaction\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{`${new Date(Transaction.Date).toLocaleDateString()}`}</strong>\r\n            </td>\r\n\r\n            <td>{Transaction.TruckNumber}</td>\r\n\r\n            <td>{Transaction.JobNumber}</td>\r\n\r\n            <td>{Transaction.TraderBillNumber}</td>\r\n\r\n            <td>\r\n                {Transaction.TraderBillPaid ?\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}\r\n            </td>\r\n\r\n            <td>{Transaction.TraderPaymentMethod}</td>\r\n\r\n            <td>{Transaction.DriverBillNumber}</td>\r\n\r\n            <td>\r\n                {Transaction.DriverBillPaid ?\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}\r\n            </td>\r\n\r\n            <td>{Transaction.DriverPaymentMethod}</td>\r\n\r\n            <td>{`${Transaction.FeeRate}%`}</td>\r\n\r\n            <td>{`$${Transaction.Earned.toFixed(2)}`}</td>\r\n\r\n            <td>{`$${Transaction.Charged.toFixed(2)}`}</td>\r\n\r\n            <td>{`$${Transaction.Amount.toFixed(2)}`}</td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default AccountStatementRow;","import React, { Component } from \"react\";\r\nimport AccountStatementRow from \"./AccountStatementRow\";\r\n\r\nclass AccountStatementTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement\r\n        } = this.props;\r\n\r\n        const transportCompany = AccountStatement.TransportCompany;\r\n\r\n        let netAmount = 0.0;\r\n        let netEarned = 0.0;\r\n        let netCharged = 0.0;\r\n\r\n        for (let transaction of AccountStatement.Transactions) {\r\n            netAmount += transaction.Amount;\r\n            netEarned += transaction.Earned;\r\n            netCharged += transaction.Charged;\r\n        }\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default back-color-light\">\r\n                <div className=\"container\">\r\n                    <div className=\"type-t3\" style={{ fontWeight: \"600\" }}><span className=\"fas fa-route m-r-xxxs\"></span>NAQEL</div>\r\n\r\n                    <div className=\"p-t-xxs\">\r\n                        <div className=\"type-t8 m-b-xxs\">TRANSPORT COMPANY DETAILS</div>\r\n                        <div className=\"type-t8\">{`Company Name: ${transportCompany.Name}`}</div>\r\n                        <div className=\"type-t8\">{`Username: ${transportCompany.Username}`}</div>\r\n                        <div className=\"type-t8\">{`Internal Number: ${transportCompany.InternalNumber}`}</div>\r\n                        <div className=\"type-t8\">{`Commercial Register Number: ${transportCompany.CommercialRegisterNumber}`}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {AccountStatement.Transactions.length === 0 ? \r\n                <section>\r\n                    <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }}>\r\n                        <div className=\"container\">\r\n                            <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4\"><span className=\"fas fa-exclamation-triangle m-r-xxs\"\r\n                                    style={{ color: \"#FFBF15\" }}></span>No transactions found.</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section> : \r\n                <div class=\"table-responsive back-color-gray\" style={{ borderTop: \"4px solid #CCCCCC\", height: \"100vh\" }}>\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>DATE</th>\r\n                                <th>TRUCK NUMBER</th>\r\n                                <th>JOB NUMBER</th>\r\n                                <th>TRADER BILL NUMBER</th>\r\n                                <th>TRADER BILL PAID?</th>\r\n                                <th>TRADER PAY METHOD</th>\r\n                                <th>DRIVER BILL NUMBER</th>\r\n                                <th>DRIVER BILL PAID?</th>\r\n                                <th>DRIVER PAY METHOD</th>\r\n                                <th>FEE RATE</th>\r\n                                <th>EARNED</th>\r\n                                <th>CHARGED</th>\r\n                                <th>TOTAL AMOUNT</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {AccountStatement.Transactions.map((transaction, index) => {\r\n                                return <AccountStatementRow key={index}\r\n                                    Index={index}\r\n                                    Transaction={transaction} />;\r\n                            })}\r\n                            <tr style={{ backgroundColor: \"#DADADA\" }}>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td>TOTAL:</td>\r\n                                <td>{`$${netEarned.toFixed(2)}`}</td>\r\n                                <td>{`$${netCharged.toFixed(2)}`}</td>\r\n                                <td>{`$${netAmount.toFixed(2)}`}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AccountStatementTable;","import React, { Component } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport ProgressBar from \"../../../../../controls/ProgressBar\";\r\nimport AccountStatementTable from \"./AccountStatementTable\";\r\nimport { getData } from \"../../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass AccountStatement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AccountStatement: null,\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"AccountStatement\",\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Account statement found.\") {\r\n                    this.setState({\r\n                        AccountStatement: response.AccountStatement,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AccountStatement: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement,\r\n            Searching\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-university m-r-xxs\"></span>Transport Company's Account Statements</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Account Statement</div>\r\n\r\n            {Searching || !AccountStatement ?\r\n                <section>\r\n                    <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }}>\r\n                        <div className=\"container\">\r\n                            {Searching ? <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4 color-default\">Searching</div>\r\n                                <ProgressBar />\r\n                            </div> : <div className=\"text-center p-xxs\">\r\n                                    <div className=\"type-h4\"><span className=\"fas fa-exclamation-triangle m-r-xxs\"\r\n                                        style={{ color: \"#FFBF15\" }}></span>No account statement to display.</div>\r\n                                </div>}\r\n                        </div>\r\n                    </div>\r\n                </section> :\r\n                <section>\r\n                    <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                        <ReactToPrint\r\n                            trigger={() => <button className=\"btn btn-primary m-t-n\">Print</button>}\r\n                            content={() => this.TCResponsibleAccountStatement} />\r\n                    </div>\r\n\r\n                    <AccountStatementTable AccountStatement={AccountStatement}\r\n                        ref={tCResponsibleAccountStatement => (this.TCResponsibleAccountStatement = tCResponsibleAccountStatement)} />\r\n                </section>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AccountStatement;","import React, { Component } from \"react\";\r\n\r\nclass AccountStatementRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Transaction\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{`${new Date(Transaction.Date).toLocaleDateString()}`}</strong>\r\n            </td>\r\n\r\n            <td>{Transaction.JobNumber}</td>\r\n\r\n            <td>{Transaction.TraderBillNumber}</td>\r\n\r\n            <td>\r\n                {Transaction.TraderBillPaid ?\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}\r\n            </td>\r\n\r\n            <td>{Transaction.TraderPaymentMethod}</td>\r\n\r\n            <td>{Transaction.DriverBillNumber}</td>\r\n\r\n            <td>\r\n                {Transaction.DriverBillPaid ?\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}\r\n            </td>\r\n\r\n            <td>{Transaction.DriverPaymentMethod}</td>\r\n\r\n            <td>{`${Transaction.FeeRate}%`}</td>\r\n\r\n            <td>{`$${Transaction.Earned.toFixed(2)}`}</td>\r\n\r\n            <td>{`$${Transaction.Charged.toFixed(2)}`}</td>\r\n\r\n            <td>{`$${Transaction.Amount.toFixed(2)}`}</td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default AccountStatementRow;","import React, { Component } from \"react\";\r\nimport AccountStatementRow from \"./AccountStatementRow\";\r\n\r\nclass AccountStatementTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement\r\n        } = this.props;\r\n\r\n        const truck = AccountStatement.Truck;\r\n\r\n        let netAmount = 0.0;\r\n        let netEarned = 0.0;\r\n        let netCharged = 0.0;\r\n\r\n        for (let transaction of AccountStatement.Transactions) {\r\n            netAmount += transaction.Amount;\r\n            netEarned += transaction.Earned;\r\n            netCharged += transaction.Charged;\r\n        }\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default back-color-light\">\r\n                <div className=\"container\">\r\n                    <div className=\"type-t3\" style={{ fontWeight: \"600\" }}><span className=\"fas fa-route m-r-xxxs\"></span>NAQEL</div>\r\n\r\n                    <div className=\"p-t-xxs\">\r\n                        <div className=\"type-t8 m-b-xxs\">TRUCK DETAILS</div>\r\n                        <div className=\"type-t8\">{`Make and Model: ${truck.Brand} ${truck.Model}`}</div>\r\n                        <div className=\"type-t8\">{`Production Year: ${truck.ProductionYear}`}</div>\r\n                        <div className=\"type-t8\">{`Truck Type: ${truck.Type}`}</div>\r\n                        <div className=\"type-t8\">{`Truck Number: ${truck.TruckNumber}`}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {AccountStatement.Transactions.length === 0 ? \r\n                <section>\r\n                    <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }}>\r\n                        <div className=\"container\">\r\n                            <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4\"><span className=\"fas fa-exclamation-triangle m-r-xxs\"\r\n                                    style={{ color: \"#FFBF15\" }}></span>No transactions found.</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section> : \r\n                <div class=\"table-responsive back-color-gray\" style={{ borderTop: \"4px solid #CCCCCC\", height: \"100vh\" }}>\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>DATE</th>\r\n                                <th>JOB NUMBER</th>\r\n                                <th>TRADER BILL NUMBER</th>\r\n                                <th>TRADER BILL PAID?</th>\r\n                                <th>TRADER PAY METHOD</th>\r\n                                <th>DRIVER BILL NUMBER</th>\r\n                                <th>DRIVER BILL PAID?</th>\r\n                                <th>DRIVER PAY METHOD</th>\r\n                                <th>FEE RATE</th>\r\n                                <th>EARNED</th>\r\n                                <th>CHARGED</th>\r\n                                <th>TOTAL AMOUNT</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {AccountStatement.Transactions.map((transaction, index) => {\r\n                                return <AccountStatementRow key={index}\r\n                                    Index={index}\r\n                                    Transaction={transaction} />;\r\n                            })}\r\n                            <tr style={{ backgroundColor: \"#DADADA\" }}>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td>TOTAL:</td>\r\n                                <td>{`$${netEarned.toFixed(2)}`}</td>\r\n                                <td>{`$${netCharged.toFixed(2)}`}</td>\r\n                                <td>{`$${netAmount.toFixed(2)}`}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AccountStatementTable;","import React, { Component } from \"react\";\r\n\r\nclass SearchTransactionsDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobNumber: \"\",\r\n            StartDate: \"\",\r\n            EndDate: \"\",\r\n            StartPrice: 0.00,\r\n            EndPrice: 0.00\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        const {\r\n            JobNumber,\r\n            StartDate,\r\n            EndDate,\r\n            StartPrice,\r\n            EndPrice\r\n        } = this.state;\r\n\r\n        console.log(JobNumber);\r\n        console.log(StartDate);\r\n        console.log(EndDate);\r\n        console.log(StartPrice);\r\n        console.log(EndPrice);\r\n\r\n        const {\r\n            Transactions\r\n        } = this.props;\r\n\r\n        let filteredTransactions;\r\n        let count;\r\n\r\n        if (JobNumber !== \"\") {\r\n            filteredTransactions = [];\r\n            count = 0;\r\n\r\n            for (let transaction of Transactions) {\r\n                if (transaction.JobNumber.includes(JobNumber)) {\r\n                    filteredTransactions[count++] = transaction;\r\n                }\r\n            }\r\n\r\n            this.cancelButton.click();\r\n            this.props.OnOK(filteredTransactions);\r\n            return;\r\n        }\r\n        else {\r\n            filteredTransactions = Transactions.slice();\r\n            let indicesToRemove;\r\n\r\n            if (StartDate !== \"\") {\r\n                console.log(\"Hllo\");\r\n                indicesToRemove = []\r\n                count = 0;\r\n\r\n                for (let transaction of filteredTransactions) {\r\n                    const created = new Date(transaction.Date);\r\n                    const startDate = new Date(StartDate);\r\n\r\n                    if (created < startDate) {\r\n                        indicesToRemove.push(count);\r\n                    }\r\n\r\n                    count++;\r\n                }\r\n\r\n                for (let index of indicesToRemove) {\r\n                    filteredTransactions.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            if (EndDate !== \"\") {\r\n                indicesToRemove = [];\r\n                count = 0;\r\n\r\n                for (let transaction of filteredTransactions) {\r\n                    const created = new Date(transaction.Date);\r\n                    const endDate = new Date(EndDate);\r\n\r\n                    if (created > endDate) {\r\n                        indicesToRemove.push(count);\r\n                    }\r\n\r\n                    count++;\r\n                }\r\n\r\n                for (let index of indicesToRemove) {\r\n                    filteredTransactions.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            if (StartPrice !== \"\" ||\r\n                StartPrice !== 0) {\r\n                indicesToRemove = [];\r\n                count = 0;\r\n\r\n                for (let transaction of filteredTransactions) {\r\n                    if (parseFloat(transaction.Amount) < parseFloat(StartPrice)) {\r\n                        indicesToRemove.push(count);\r\n                    }\r\n\r\n                    count++;\r\n                }\r\n\r\n                for (let index of indicesToRemove) {\r\n                    filteredTransactions.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            if (EndPrice !== \"\" ||\r\n                parseFloat(EndPrice) !== 0) {\r\n                indicesToRemove = [];\r\n                count = 0;\r\n\r\n                for (let transaction of filteredTransactions) {\r\n                    if (parseFloat(transaction.Amount) > parseFloat(EndPrice)) {\r\n                        indicesToRemove.push(count);\r\n                    }\r\n\r\n                    count++;\r\n                }\r\n\r\n                for (let index of indicesToRemove) {\r\n                    filteredTransactions.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            this.cancelButton.click();\r\n            this.props.OnOK(filteredTransactions);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            JobNumber,\r\n            StartDate,\r\n            EndDate,\r\n            StartPrice,\r\n            EndPrice\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"search-transactions-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"type-h3 color-default p-t-xxs\">Search Transactions</div>\r\n                                        <div className=\"row p-t-xxs\">\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Job Number</label>\r\n                                                    <input type=\"text\" name=\"JobNumber\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={JobNumber} onChange={this.onChange} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Starting Date</label>\r\n                                                    <input type=\"date\" name=\"StartDate\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={StartDate} onChange={this.onChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Ending Date</label>\r\n                                                    <input type=\"date\" name=\"EndDate\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={EndDate} onChange={this.onChange} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Staring Amount (USD)</label>\r\n                                                    <input type=\"number\" min=\"0.00\" step=\"0.01\" name=\"StartPrice\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={StartPrice} onChange={this.onChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Ending Amount (USD)</label>\r\n                                                    <input type=\"number\" min=\"0.00\" step=\"0.01\" name=\"EndPrice\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={EndPrice} onChange={this.onChange} />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Search Now\" className=\"btn btn-primary\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default SearchTransactionsDialog;","import React, { Component } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport ProgressBar from \"../../../../../../controls/ProgressBar\";\r\nimport AccountStatementTable from \"./AccountStatementTable\";\r\nimport SearchTransactionsDialog from \"./SearchTransactionsDialog\";\r\nimport { getData } from \"../../../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass AccountStatement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AccountStatement: null,\r\n            AllTransactions: [],\r\n            Searching: false,\r\n            ShowingSearchResults: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.searchTruckAccountStatement = this.searchTruckAccountStatement.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.SearchTruckAccountStatement(this.searchTruckAccountStatement);\r\n    }\r\n\r\n    searchTruckAccountStatement = async truckNumber => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TruckAccountStatement\",\r\n                Params: {\r\n                    TruckNumber: truckNumber\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Account statement found.\") {\r\n                    this.setState({\r\n                        AccountStatement: response.AccountStatement,\r\n                        AllTransactions: response.AccountStatement.Transactions,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AccountStatement: null,\r\n                        AllTransactions: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement,\r\n            AllTransactions,\r\n            Searching,\r\n            ShowingSearchResults\r\n        } = this.state;\r\n\r\n        return (Searching || !AccountStatement) ?\r\n            <section>\r\n                <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }}>\r\n                    <div className=\"container\">\r\n                        {Searching ? <div className=\"text-center p-xxs\">\r\n                            <div className=\"type-h4 color-default\">Searching</div>\r\n                            <ProgressBar />\r\n                        </div> : <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4\"><span className=\"fas fa-exclamation-triangle m-r-xxs\"\r\n                                    style={{ color: \"#FFBF15\" }}></span>No account statement to display. Search the truck by number to view its account statement.</div>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            </section> :\r\n            <section>\r\n                <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                    <ReactToPrint\r\n                        trigger={() => <button className=\"btn btn-primary m-t-n\">Print</button>}\r\n                        content={() => this.TruckAccountStatement} />\r\n\r\n                    {ShowingSearchResults ?\r\n                        <button className=\"btn btn-secondary m-t-n\"\r\n                            onClick={() => {\r\n                                let {\r\n                                    AccountStatement,\r\n                                    AllTransactions\r\n                                } = this.state;\r\n\r\n                                AccountStatement.Transactions = AllTransactions;\r\n\r\n                                this.setState({\r\n                                    AccountStatement: AccountStatement,\r\n                                    ShowingSearchResults: false\r\n                                });\r\n                            }}>Cancel Search</button> :\r\n                        <button className=\"btn btn-secondary m-t-n\"\r\n                            data-toggle=\"modal\"\r\n                            data-target={`#search-transactions-dialog`}>Search Transactions</button>}\r\n                </div>\r\n\r\n                {ShowingSearchResults ? \r\n                    null :\r\n                    <SearchTransactionsDialog Transactions={AllTransactions}\r\n                        OnOK={transactions => {\r\n                            let {\r\n                                AccountStatement\r\n                            } = this.state;\r\n\r\n                            AccountStatement.Transactions = transactions;\r\n\r\n                            this.setState({\r\n                                AccountStatement: AccountStatement,\r\n                                ShowingSearchResults: true\r\n                            });\r\n                        }} />}\r\n\r\n                <AccountStatementTable AccountStatement={AccountStatement}\r\n                    ref={truckAccountStatement => (this.TruckAccountStatement = truckAccountStatement)} />\r\n            </section>;\r\n    }\r\n};\r\n\r\nexport default AccountStatement;","import React, { Component } from \"react\";\r\nimport AccountStatement from \"./accountStatement/AccountStatement\";\r\n\r\nclass TruckAccountStatementBrowser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            SearchString: \"\"\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n        this.SearchTruckAccountStatement(this.state.SearchString);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            SearchString\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-university m-r-xxs\"></span>Trucks' Account Statements</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Account Statement</div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search Truck Number\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            <AccountStatement SearchTruckAccountStatement={searchTruckAccountStatement => {\r\n                this.SearchTruckAccountStatement = searchTruckAccountStatement;\r\n            }} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TruckAccountStatementBrowser;","import React, { Component } from \"react\";\r\nimport TruckAccountStatementBrowser from \"./TruckAccountStatementBrowser\";\r\n\r\nclass TrucksAccountStatements extends Component {\r\n    render() {\r\n        return <section>\r\n            <TruckAccountStatementBrowser />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TrucksAccountStatements;","import React, { Component } from \"react\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport AccountStatement from \"./accountStatement/AccountStatement\";\r\nimport TrucksAccountStatements from \"./trucksAccountStatement/TrucksAccountStatements\";\r\n\r\nclass FinancialAccounts extends Component {\r\n    render() {\r\n        return <section>\r\n            <PageHeading Heading=\"FINANCIAL ACCOUNTS\" />\r\n            <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                padding: \"10px\",\r\n                backgroundColor: \"#3A3A3C\",\r\n                width: \"100%\",\r\n                margin: \"0px\",\r\n            }}>\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#account-statement\" aria-controls=\"account-statement\" role=\"tab\" data-toggle=\"tab\">Account Statement</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#trucks-account-statement\" aria-controls=\"trucks-account-statement\" role=\"tab\" data-toggle=\"tab\">Trucks' Account Statement</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div class=\"tab-content\">\r\n                <div role=\"tabpanel\" class=\"tab-pane active\" id=\"account-statement\">\r\n                    <AccountStatement />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"trucks-account-statement\">\r\n                    <TrucksAccountStatements />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default FinancialAccounts;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Profile from \"./profile/Profile\";\r\nimport Settings from \"./settings/Settings\";\r\nimport Trucks from \"./trucks/Trucks\";\r\nimport Questions from \"./questions/Questions\";\r\nimport FinancialAccounts from \"./financialAccounts/FinancialAccounts\";\r\n\r\nclass TransportCompanyResponsiblesDashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Left: -400\r\n        };\r\n\r\n        this.onCloseNavigation = this.onCloseNavigation.bind(this);\r\n    }\r\n\r\n    onCloseNavigation = () => {\r\n        this.setState({\r\n            Left: -400\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.Token) {\r\n            return <Redirect to={\"/login\"} />;\r\n        }\r\n        else {\r\n            return <section>\r\n                <div className=\"sidenav\" style={{ left: `${this.state.Left}px` }}>\r\n                    <a className=\"closebtn\" onClick={this.onCloseNavigation}>&times;</a>\r\n\r\n                    <div class=\"entity-list\" role=\"tablist\">\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#profile\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Profile</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#trucks\" aria-controls=\"trucks\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Trucks</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#financial-accounts\" aria-controls=\"financial-accounts\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Financial Accounts</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#questions\" aria-controls=\"questions\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Questions</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#settings\" aria-controls=\"settings\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Settings</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"tab-content\">\r\n                    <div role=\"tabpanel\" className=\"tab-pane active\" id=\"profile\">\r\n                        <Profile />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"trucks\">\r\n                        <Trucks />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"financial-accounts\">\r\n                        <FinancialAccounts />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"questions\">\r\n                        <Questions />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"settings\">\r\n                        <Settings />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"side-nav-btn\" onClick={() => {\r\n                    this.setState({\r\n                        Left: 0\r\n                    });\r\n                }}><div className=\"fas fa-bars\" style={{ fontSize: \"x-large\" }}></div>\r\n                </div>\r\n            </section>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default TransportCompanyResponsiblesDashboard;","import React, { Component } from \"react\";\r\n\r\nclass BackToTop extends Component {\r\n    render() {\r\n        return (\r\n            <a id=\"up\" href=\"#top\" className=\"back-to-top\" style={{ position: \"fixed\", right: \"20px\", bottom: \"20px\", }}>\r\n                <i className=\"glyph glyph-up\" style={{ color: \"#008575\", }}></i>\r\n                <span className=\"sr-only\">Back to top</span>\r\n            </a>\r\n        );\r\n    }\r\n};\r\n\r\nexport default BackToTop;","import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <footer className=\"border-top footer theme-default color-bg-light-neutral-high text-light\">\r\n                <div className=\"container\">\r\n                    &copy; {new Date().getFullYear()} - Core Infinite - <a asp-area=\"\" asp-controller=\"Home\" asp-action=\"Privacy\">Privacy</a>\r\n                </div>\r\n            </footer>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Header from \"./components/shared/Header\";\r\nimport Landing from \"./components/landing/Landing\";\r\nimport Login from \"./components/login/Login\";\r\nimport Register from \"./components/register/Register\";\r\nimport EmailConfirmation from \"./components/register/EmailConfirmation\";\r\nimport AccountSetup from \"./components/register/AccountSetup\";\r\nimport SetupAdministratorAccount from \"./components/register/SetupAdministratorAccount\";\r\nimport SetupTransportCompanyResponsibleAccount from \"./components/register/SetupTransportCompanyResponsibleAccount\";\r\nimport Congratulations from \"./components/register/Congratulations\";\r\nimport DriversDashboard from \"./components/drivers/dashboard/DriversDashboard\";\r\nimport TradersDashboard from \"./components/traders/dashboard/TradersDashboard\";\r\nimport AdministratorsDashboard from \"./components/administrators/dashboard/AdministratorsDashboard\";\r\nimport TransportCompanyResponsiblesDashboard from \"./components/transportCompanyResponsibles/dashboard/TransportComapanyResponsiblesDashboard\";\r\nimport BackToTop from \"./controls/BackToTop\";\r\nimport Footer from \"./components/shared/Footer\";\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Router basename=\"/\">\r\n                <div className=\"App\">\r\n                    <Header />\r\n                    <Route exact path=\"/\" component={Landing} />\r\n                    <Route exact path=\"/register\" component={Register} />\r\n                    <Route exact path=\"/emailConfirmation\" component={EmailConfirmation} />\r\n                    <Route exact path=\"/setupAccount\" component={AccountSetup} />\r\n                    <Route exact path=\"/setupAdministratorAccount\" component={SetupAdministratorAccount} />\r\n                    <Route exact path=\"/setupTransportCompanyResponsibleAccount\" component={SetupTransportCompanyResponsibleAccount} />\r\n                    <Route exact path=\"/congratulations\" component={Congratulations} />\r\n                    <Route exact path=\"/login\" component={Login} />\r\n                    <Route exact path=\"/drivers\" component={DriversDashboard} />\r\n                    <Route exact path=\"/traders\" component={TradersDashboard} />\r\n                    <Route exact path=\"/administrators\" component={AdministratorsDashboard} />\r\n                    <Route exact path=\"/transportCompanyResponsibles\" component={TransportCompanyResponsiblesDashboard} />\r\n                    <BackToTop />\r\n                    <Footer />\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = {\r\n    APP_NAME: \"Naqel\",\r\n    USER_TOKEN: \"userToken\",\r\n    USER_NOT_FOUND: \"Username not found.\",\r\n    INVALID_PASSWORD: \"Invalid password.\",\r\n    USERNAME_OR_EMAIL_TAKEN: \"Username or email is already taken.\",\r\n    NAQEL_SERVER: \"https://naqel-server.azurewebsites.net/\",\r\n    IMAGE_UPLOADER: \"https://us-central1-naqel-transport-jobs.cloudfunctions.net/uploadImage\",\r\n    STRIPE_PUBLISHABLE_KEY: \"pk_test_Wjc5dIC6ytMmH3g1roSUOYcm00FaTN1yBn\",\r\n    STRIPE_SECRET_KEY: \"sk_test_RVhdSfOgg0jQHCYLYH8Z05JM00bkPnPBVg\",\r\n};"],"sourceRoot":""}
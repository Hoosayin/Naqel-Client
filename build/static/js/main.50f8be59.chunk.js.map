{"version":3,"sources":["components/shared/Header.js","components/landing/Landing.js","components/drivers/DriverFunctions.js","components/traders/TraderFunctions.js","styles/MiscellaneousStyles.js","controls/Preloader.js","styles/CardStyles.js","components/login/Login.js","components/register/Register.js","components/register/EmailConfirmation.js","components/register/AccountSetup.js","components/register/Congratulations.js","components/drivers/dashboard/profile/ProfilePhoto.js","controls/ImageUploader.js","components/drivers/dashboard/profile/documents/drivingLicence/AddDrivingLicenceDialog.js","components/drivers/dashboard/profile/documents/drivingLicence/AddDrivingLicenceButton.js","components/drivers/dashboard/profile/documents/entryExitCard/AddEntryExitCardDialog.js","components/drivers/dashboard/profile/documents/entryExitCard/AddEntryExitCardButton.js","components/drivers/dashboard/profile/documents/identityCard/AddIdentityCardDialog.js","components/drivers/dashboard/profile/documents/identityCard/AddIdentityCardButton.js","components/drivers/dashboard/profile/documents/drivingLicence/EditDrivingLicenceDialog.js","components/drivers/dashboard/profile/documents/drivingLicence/DrivingLicenceListItem.js","components/drivers/dashboard/profile/documents/entryExitCard/EditEntryExitCardDialog.js","components/drivers/dashboard/profile/documents/entryExitCard/EntryExitCardListItem.js","components/drivers/dashboard/profile/documents/identityCard/EditIdentityCardDialog.js","components/drivers/dashboard/profile/documents/identityCard/IdentityCardListItem.js","components/drivers/dashboard/profile/documents/DocumentsList.js","controls/Rating.js","controls/PageHeading.js","components/drivers/dashboard/profile/Profile.js","components/drivers/dashboard/trucks/TruckSettings.js","components/drivers/dashboard/trucks/AddTruckDialog.js","components/drivers/dashboard/trucks/trailers/AddTrailerDialog.js","components/drivers/dashboard/trucks/trailers/AddTrailer.js","components/drivers/dashboard/trucks/trailers/EditTrailerDialog.js","components/drivers/dashboard/trucks/trailers/TrailersList.js","components/drivers/dashboard/trucks/trailers/Trailers.js","components/drivers/dashboard/trucks/Truck.js","components/drivers/dashboard/permits/AddPermitLicenceDialog.js","components/drivers/dashboard/permits/EditPermitLicenceDialog.js","components/drivers/dashboard/permits/PermitLicencesListItem.js","controls/ProgressBar.js","components/drivers/dashboard/permits/PermitLicencesList.js","components/drivers/dashboard/permits/Permits.js","components/drivers/dashboard/financial_affairs/FinancialAffairs.js","containers/searching/SearchingContainer.js","containers/trader/documents/IdentityCardContainer.js","containers/trader/documents/CommercialRegisterCertificateContainer.js","containers/trader/documents/DocumentsDialog.js","containers/trader/TraderContainer.js","containers/trader/documents/DocumentsContainer.js","components/drivers/dashboard/jobs/jobRequests/ProfileDialog.js","containers/traderRequest/TraderRequestContainer.js","components/drivers/dashboard/jobs/jobRequests/RequestDialog.js","components/drivers/dashboard/jobs/jobRequests/TraderRequestRow.js","components/drivers/dashboard/jobs/jobRequests/TraderRequestsTable.js","components/drivers/dashboard/jobs/jobRequests/EditJobRequestDialog.js","containers/jobReqeust/JobRequestContainer.js","components/drivers/dashboard/jobs/jobRequests/JobRequestPackageItem.js","components/drivers/dashboard/jobs/jobRequests/AddJobRequestDialog.js","components/drivers/dashboard/jobs/jobRequests/JobRequestsList.js","components/drivers/dashboard/jobs/jobRequests/JobRequests.js","containers/jobOffer/JobOfferContainer.js","components/drivers/dashboard/jobs/jobOffers/BidJobOfferDialog.js","components/drivers/dashboard/jobs/jobOffers/JobOfferPostListItem.js","components/drivers/dashboard/jobs/jobOffers/JobOfferPostsList.js","components/drivers/dashboard/jobs/jobOffers/JobOffers.js","controls/Map.js","components/drivers/dashboard/jobs/onGoingJob/MapTab.js","controls/ProgressRing.js","components/drivers/dashboard/jobs/onGoingJob/objectionsTab/ReasonsList.js","components/drivers/dashboard/jobs/onGoingJob/objectionsTab/AddObjectionDialog.js","containers/onGoingJob/JobObjectionContainer.js","components/drivers/dashboard/jobs/onGoingJob/objectionsTab/Objections.js","containers/onGoingJob/JobContainer.js","components/drivers/dashboard/jobs/onGoingJob/Job.js","components/drivers/dashboard/jobs/onGoingJob/FinishJobDialog.js","components/drivers/dashboard/jobs/onGoingJob/OnGoingJobOptions.js","controls/Alert.js","components/drivers/dashboard/jobs/onGoingJob/OnGoingJob.js","containers/completedJob/CompletedJobContainer.js","components/drivers/dashboard/jobs/completedJobs/CompletedJobPackageListItem.js","components/drivers/dashboard/jobs/completedJobs/CompletedJobsList.js","components/drivers/dashboard/jobs/completedJobs/CompletedJobs.js","components/drivers/dashboard/jobs/Jobs.js","components/drivers/dashboard/payments/Payments.js","components/drivers/dashboard/settings/GeneralSettings.js","components/drivers/dashboard/settings/CodeConfirmationDialog.js","components/drivers/dashboard/settings/UsernameAndEmailSettings.js","components/drivers/dashboard/settings/PasswordSettings.js","components/drivers/dashboard/settings/Settings.js","components/drivers/dashboard/DriversDashboard.js","components/traders/dashboard/profile/ProfilePhoto.js","components/traders/dashboard/profile/documents/identityCard/AddIdentityCardDialog.js","components/traders/dashboard/profile/documents/identityCard/AddIdentityCardButton.js","components/traders/dashboard/profile/documents/commercialRegisterCertificate/AddCommercialRegisterCertificateDialog.js","components/traders/dashboard/profile/documents/commercialRegisterCertificate/AddCommercialRegisterCertificateButton.js","components/traders/dashboard/profile/documents/identityCard/EditIdentityCardDialog.js","components/traders/dashboard/profile/documents/identityCard/IdentityCardListItem.js","components/traders/dashboard/profile/documents/commercialRegisterCertificate/EditCommercialRegisterCertificateDialog.js","components/traders/dashboard/profile/documents/commercialRegisterCertificate/CommercialRegisterCertificateListItem.js","components/traders/dashboard/profile/documents/DocumentsList.js","components/traders/dashboard/profile/Profile.js","containers/driver/documents/DrivingLicenceContainer.js","containers/driver/documents/EntryExitCardContainer.js","containers/driver/documents/IdentityCardContainer.js","containers/driver/documents/DocumentsDialog.js","containers/driver/DriverContainer.js","containers/truck/TrailerContainer.js","containers/truck/TrailersDialog.js","containers/truck/TruckContainer.js","components/traders/dashboard/jobs/jobRequests/SendTraderRequestDialog.js","components/traders/dashboard/jobs/jobRequests/TraderRequestDialog.js","components/traders/dashboard/jobs/jobRequests/AssignJobDialog.js","components/traders/dashboard/jobs/jobRequests/JobRequestPostListItem.js","components/traders/dashboard/jobs/jobRequests/JobRequestPostsList.js","components/traders/dashboard/jobs/jobRequests/JobRequests.js","containers/driver/documents/DocumentsContainer.js","components/traders/dashboard/jobs/jobOffers/ProfileDialog.js","containers/truck/TrailersContainer.js","components/traders/dashboard/jobs/jobOffers/TruckDialog.js","components/traders/dashboard/jobs/jobOffers/AssignJobDialog.js","components/traders/dashboard/jobs/jobOffers/DriverRequestRow.js","components/traders/dashboard/jobs/jobOffers/DriverRequestsTable.js","components/traders/dashboard/jobs/jobOffers/EditJobOfferDialog.js","components/traders/dashboard/jobs/jobOffers/JobOfferPackageItem.js","components/traders/dashboard/jobs/jobOffers/AddJobOfferDialog.js","components/traders/dashboard/jobs/jobOffers/JobOffersList.js","components/traders/dashboard/jobs/jobOffers/JobOffers.js","components/traders/dashboard/jobs/onGoingJob/Job.js","components/traders/dashboard/jobs/onGoingJob/MapTab.js","components/traders/dashboard/jobs/onGoingJob/objections/ReasonsList.js","components/traders/dashboard/jobs/onGoingJob/objections/AddObjectionDialog.js","components/traders/dashboard/jobs/onGoingJob/objections/Objections.js","components/traders/dashboard/jobs/onGoingJob/ApproveJobDialog.js","components/traders/dashboard/jobs/onGoingJob/OnGoingJobOptions.js","components/traders/dashboard/jobs/onGoingJob/OnGoingJob.js","controls/InteractiveRating.js","components/traders/dashboard/jobs/completedJobs/ReviewDialog.js","components/traders/dashboard/jobs/completedJobs/CompletedJobPackageListItem.js","components/traders/dashboard/jobs/completedJobs/CompletedJobsList.js","components/traders/dashboard/jobs/completedJobs/CompletedJobs.js","components/traders/dashboard/jobs/Jobs.js","components/traders/dashboard/settings/GeneralSettings.js","components/traders/dashboard/payments/Payments.js","components/traders/dashboard/settings/CodeConfirmationDialog.js","components/traders/dashboard/settings/UsernameAndEmailSettings.js","components/traders/dashboard/settings/PasswordSettings.js","components/traders/dashboard/settings/Settings.js","components/traders/dashboard/TradersDashboard.js","controls/BackToTop.js","components/shared/Footer.js","App.js","index.js","res/strings.js"],"names":["Header","props","logOut","event","preventDefault","localStorage","userToken","removeItem","Token","history","push","state","DriverLoggedIn","bind","token","jwt_decode","loginRegisterLinks","className","to","userLinks","DriverID","onClick","this","type","data-toggle","data-target","Strings","APP_NAME","toUpperCase","id","Component","withRouter","Landing","class","style","width","backgroundColor","alt","src","data-source-index","color","fontWeight","href","textDecoration","registerDriver","newCredentials","a","async","axios","post","NAQEL_SERVER","Username","Email","Password","RegisterAs","then","response","data","localeCompare","USERNAME_OR_EMAIL_TAKEN","setItem","setupDriverAccount","newDriver","FirstName","LastName","DateOfBirth","Gender","Address","PhoneNumber","Nationality","console","log","loginDriver","driver","EmailOrUsername","SignInAs","getData","request","Get","get","params","Params","headers","Authorization","uploadDriverProfilePhoto","driverProfilePhoto","PhotoURL","FileName","generalSettings","updatedDriver","validateUsername","username","validateEmail","email","sendCode","usernameAndEmailSettings","validatePassword","passwordPackage","passwordSettings","addTruck","newTruck","PlateNumber","Owner","ProductionYear","Brand","Model","Type","MaximumWeight","updateTruckPhoto","updatedTruck","updateTruck","addTrailer","newTrailer","deleteTrailer","discardedTrailer","delete","TrailerID","addDrivingLicence","newDrivingLicence","LicenceNumber","ReleaseDate","ExpiryDate","updateDrivingLicence","updatedDrivingLicence","deleteDrivingLicence","discardedDrivingLicence","addEntryExitCard","newEntryExitCard","EntryExitNumber","NumberOfMonths","updateEntryExitCard","updatedEntryExitCard","deleteEntryExitCard","discardedEntryExitCard","addIdentityCard","newIdentityCard","IDNumber","updateIdentityCard","updatedIdentityCard","deleteIdentityCard","discardedIdentityCard","addPermitLicence","newPermitLicence","PermitNumber","Code","Place","deletePermitLicence","discardedPermitLicence","PermitLicenceID","updatePermitLicence","updatedPermitLicence","addJobRequest","newJobRequest","LoadingPlace","UnloadingPlace","TripType","Price","updateJobRequest","updatedJobRequest","JobRequestID","deleteJobRequest","discardedJobRequest","addDriverRequest","newDriverRequest","JobOfferID","deleteDriverRequest","discardedDriverRequest","addObjectionReason","newObjectionReason","Reason","addJobObjection","newJobObjection","OnGoingJobID","Comment","finishJob","finishedJob","toggleSelectTraderRequest","toggleSelectedTraderRequest","TraderRequestID","Selected","registerTrader","res","setupTraderAccount","newTrader","loginTrader","trader","catch","error","uploadTraderProfilePhoto","traderProfilePhoto","updatedTrader","addJobOffer","newJobOffer","CargoType","CargoWeight","LoadingDate","LoadingTime","EntryExit","AcceptedDelay","JobOfferType","updateJobOffer","updatedJobOffer","deleteJobOffer","discardedJobOffer","addTraderRequest","newTraderReqeust","deleteTraderRequest","discardedTraderRequest","approveJob","approvedJob","addDriverReview","newDriverReview","CompletedJobID","Rating","Review","addOnGoingJobFromJobOffer","newOnGoingJob","DriverRequestID","addOnGoingJobFromJobRequest","Required","paddingLeft","PreloaderScreen","background","position","zIndex","top","display","alignItems","justifyContent","height","Preloader","textAlign","LoginCardBack","backgroundImage","backgroundAttachment","backgroundRepeat","backgroundSize","RegisterCardBack","EmailConfirmationCardBack","AccountSetupCardBack","CongratulationsCardBack","Card","padding","alignContent","boxShadow","CardLarge","CardXLarge","margin","CardChild","CardTitle","paddingTop","Login","onChange","name","target","value","setState","validateField","onSubmit","ValidForm","user","Message","LoggedInAsDriver","LoginError","LoggedInAsTrader","ValidEmailOrUsername","ValidPassword","Errors","field","noValidate","htmlFor","placeholder","aria-haspopup","role","aria-expanded","aria-labelledby","e","disabled","Register","ConfirmPassword","NullError","UsernameOrEmailTaken","newCredentialsToken","PasswordsMatched","ValidEmail","Agreed","fieldValidationErrors","match","length","refs","agreementCheckBox","checked","validateForm","autocomplete","required","maxWidth","ref","AgreementError","tabindex","aria-hidden","String","data-dismiss","EmailConfirmation","code","ConfirmationCode","InvalidCodeError","AccountSetup","verifiedCredentialsToken","decoded","newUser","ValidFirstName","ValidLastName","ValidDateOfBirth","ValidNationality","ValidAddress","ValidPhoneNumber","Date","atl","rows","IsCreatedSuccessfully","ProfilePhoto","onImageUpload","Image","files","formData","FormData","append","IMAGE_UPLOADER","onUploadProgress","UploadProgress","message","imageUrl","filename","photoURL","ImageURL","profilePhoto","fileInput","click","border","ImageUploader","startsWith","OnInvalidImageSelected","exception","OnImageUploaded","Source","AddDrivingLicenceDialog","OnOK","cancelButton","ValidLicenceNumber","ValidType","ValidReleaseDate","ValidExpiryDate","ValidPhotoURL","getTime","tabIndex","Height","Width","ImageCategory","autoComplete","OnCancel","AddDrivingLicenceButton","minWidth","onMouseDown","OnDocumentsUpdated","AddEntryExitCardDialog","ValidEntryExitNumber","ValidNumberOfMonths","releaseDate","expiryDate","setMonth","getMonth","toLocaleString","AddEntryExitCardButton","AddIdentityCardDialog","ValidIDNumber","min","max","AddIdentityCardButton","EditDrivingLicenceDialog","drivingLicence","DrivingLicence","DrivingLicenceID","DrivingLicenceListItem","onDelete","onComponentUpdated","borderTop","borderRadius","Index","overflow","EditEntryExitCardDialog","entryExitCard","EntryExitCard","EntryExitCardListItem","EntryExitCardID","EditIdentityCardDialog","identityCard","IdentityCard","IdentityCardListItem","IdentityCardID","DocumentsList","onDocumentsUpdated","index","undefined","marginTop","Size","Color","Label","PageHeading","Heading","Profile","Active","RatingAndReviews","WarningAlert","Driver","ratingAndReviews","Reviews","TruckSettings","OnTruckSettingsUpdated","ValidPlateNumber","ValidOwner","ValidProductionYear","ValidBrand","ValidModel","ValidMaximumWeight","truck","Truck","currentYear","getFullYear","AddTruckDialog","AddTrailerDialog","AddTrailer","paddingBottom","marginBottom","OnTrailerAdded","EditTrailerDialog","updatedTrailer","Trailer","updateTrailer","dialogID","TrailersList","Trailers","OnTrailersUpdated","EditTrailerDialogs","map","key","editTrailerDialogs","TruckFound","AddPermitLicenceDialog","ValidPermitNumber","ValidCode","ValidPlace","EditPermitLicenceDialog","PermitLicence","DialogID","PermitLicenceListItem","permitLicenceID","OnPermitLicenceUpdated","AllPermitLicences","PermitLicences","EditPermitLicenceDialogs","SearchString","permitLicence","ProgressBar","PermitLicencesList","Searching","onSearch","allPermitLicences","filteredPermitLicences","i","includes","permitLicences","paddingRight","Permits","onPermitLicencesUpdated","permitLicencesList","FinancialAffairs","SearchingContainer","searching","searchingFor","SearchingFor","IdentityCardContainer","CommercialRegisterCertificateContainer","commercialRegisterCertificate","CommercialRegisterCertificate","Number","DocumentsDialog","TraderID","TraderDocuments","traderDocuments","TraderContainer","TraderProfile","refresh","Refresh","traderProfile","Trader","onJob","OnJob","UUID","substring","TabView","DocumentsContainer","ProfileDialog","aria-controls","RefreshTrader","RefreshDocuments","TraderRequestContainer","traderRequest","TraderRequest","toDateString","Created","toTimeString","RequestDialog","TraderRequestRow","onToggleSelect","traderRequestID","isSelected","ShowPreloader","selectedTraderRequest","OnTraderRequestUpdated","traderRequestPackage","TraderRequestPackage","traderOnJob","TraderOnJob","requestSelected","profileIndex","requestIndex","RefreshTraderContainer","RefreshDocumentsContainer","TraderRequestsTable","OnRequestsFound","TraderRequestPackages","RequestSelected","traderRequestPackages","EditJobRequestDialog","CanEdit","JobRequest","ValidLoadingPlace","ValidUnloadingPlace","ValidPrice","step","JobRequestContainer","jobRequest","createdHoursAgo","Math","abs","TimeCreated","WaitingTime","JobRequestPackageItem","jobRequestID","OnJobRequestUpdated","NumberOfRequests","JobRequestPackage","RefreshTraderRequestsTable","number","AddJobRequestDialog","JobRequestsList","AllJobRequestPackages","JobRequestPackages","allJobRequestPackages","filteredJobRequestPackages","count","jobRequestPackage","jobRequestPackages","JobRequests","JobOfferContainer","jobOffer","JobOffer","BidJobOfferDialog","IsRequestSent","DriverRequest","JobOfferPostsList","onCancelRequest","OnRequestUpdated","onSendRequest","JobOfferPost","RequestSent","RequestButton","driverRequest","JobOfferPosts","jobOfferPost","JobOfferPostListItem","jobOfferPosts","JobOffers","Geocode","setApiKey","enableDebug","Map","NoState","AsyncMap","withScriptjs","withGoogleMap","googleMapURL","defaultZoom","defaultCenter","lat","lng","loadingElement","containerElement","mapElement","MapTab","ProgressRing","ReasonsList","ObjectionReasons","NewReason","objectionReasons","errors","ObjectionReason","AddPressed","ValidNewReason","objectionReason","OnReasonSelected","AddObjectionDialog","ValidReason","ValidComment","readonly","reason","JobObjectionContainer","jobObjectionPackage","JobObjectionPackage","jobObjection","JobObjection","firstName","lastName","createdOn","Objections","JobObjectionPackages","jobObjectionPackages","JobContainer","onGoingJob","OnGoingJob","loadingDate","setHours","parseInt","setMinutes","setSeconds","Job","JumbotronContent","hasObjections","HasObjections","CompletedByDriver","dateDifference","days","floor","hours","minutes","round","dayString","hourString","minuteString","remainingTime","FinishJobDialog","onYes","Progress","completedByDriver","OnGoingJobOptions","completedByTrader","CompletedByTrader","OnJobFinished","Alert","aria-label","Loading","clearInterval","interval","setInterval","OnObjectionAdded","CompletedJobContainer","completedJob","CompletedJob","CompletedJobPackageListItem","CompletedJobPackage","driverReview","DriverReview","CompletedJobsList","onLoad","AllCompletedJobPackages","CompletedJobPackages","SearchDate","allCompletedJobPackages","filteredCompletedJobPackages","searchDate","completedJobPackage","completedJobPackages","CompletedJobs","Jobs","Payments","GeneralSettings","OnSettingsSaved","SettingsSaved","CodeConfirmationDialog","ConfirmCode","ValidConfirmCode","UsernameAndEmailSettings","NewUsername","NewEmail","ValidNewUsername","ValidNewEmail","CodeConfirmation","PasswordSettings","CurrentPassword","NewPassword","ValidCurrentPassword","ValidNewPassword","ValidConfirmPassword","Settings","componentDidMount","forceUpdate","DriversDashboard","onCloseNavigation","Left","left","fontSize","AddCommercialRegisterCertificateDialog","newCommercialRegisterCertificate","addCommercialRegisterCertificate","readOnly","AddCommercialRegisterCertificateButton","onRefresh","Key","random","EditCommercialRegisterCertificateDialog","updatedCommercialRegisterCertificate","updateCommercialRegisterCertificate","CommercialRegisterCertificateListItem","discardedCommercialRegisterCertificate","deleteCommercialRegisterCertificate","ID","DrivingLicenceContainer","EntryExitCardContainer","DriverDocuments","driverDocuments","DriverContainer","DriverProfile","driverProfile","TrailerContainer","trailer","TrailersDialog","trailers","TruckContainer","OnTrailersFound","TruckProfile","truckProfile","SendTraderRequestDialog","newTraderRequest","ValidCargoType","ValidCargoWeight","ValidLoadingDate","ValidLoadingTime","ValidAcceptedDelay","TraderRequestDialog","AssignJobDialog","onAssignNow","CanAssign","price","JobRequestPostListItem","Badge","JobRequestPost","driverOnJob","DriverOnJob","canAssign","assignJobIndex","OnJobAssigned","RefreshDriverContainer","RefreshTruckContainer","JobRequestPostsList","JobRequestPosts","Refreshing","jobRequestPost","jobRequestPosts","RefreshDriver","TrailersContainer","DriverRequestRow","driverRequestPackage","DriverRequestPackage","truckIndex","TruckDialog","DriverRequestsTable","DriverRequestPackages","DriverRequests","jobOfferType","driverRequestPackages","EditJobOfferDialog","aria-pressed","defaultChecked","JobOfferPackageItem","jobOfferID","OnJobOfferUpdated","JobOfferPackage","hasDriverRequests","HasDriverRequests","RefreshDriverRequestsTable","AddJobOfferDialog","JobOffersList","AllJobOfferPackages","JobOfferPackages","allJobOfferPackages","filteredJobOfferPackages","jobOfferPackage","jobOfferPackages","ApproveJobDialog","onApprove","OnJobApproved","HasObjection","InteractiveRating","onRate","rating","OnRated","title","ReviewDialog","ValidRating","ValidReview","OnReviewAdded","jobPackage","RefreshJobRequests","TradersDashboard","BackToTop","right","bottom","Footer","asp-area","asp-controller","asp-action","App","basename","exact","path","component","Congratulations","ReactDOM","render","document","getElementById","module","exports","USER_TOKEN","USER_NOT_FOUND","INVALID_PASSWORD"],"mappings":"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","file":"static/js/main.50f8be59.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Strings from \"../../res/strings\"\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DriverLoggedIn: false\r\n        };\r\n\r\n        this.logOut = this.logOut.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    logOut = event => {\r\n        event.preventDefault();\r\n\r\n        if (localStorage.userToken) {\r\n            localStorage.removeItem(\"userToken\");\r\n        }\r\n        else if (localStorage.Token) {\r\n            localStorage.removeItem(\"Token\");\r\n        }\r\n\r\n        this.props.history.push(`/login`);\r\n    }\r\n\r\n    render() {\r\n        let token;\r\n\r\n        if (localStorage.Token) {\r\n            token = jwt_decode(localStorage.Token);\r\n        }\r\n\r\n        const loginRegisterLinks = <ul className=\"nav navbar-nav navbar-right\">\r\n            <li>\r\n                <Link to=\"/register\">Register</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/login\">Login</Link>\r\n            </li>\r\n        </ul>;\r\n\r\n        const userLinks = <ul className=\"nav navbar-nav navbar-right\">\r\n            <li>\r\n                <Link to={(token && token.DriverID) ? \"/drivers\" : \"/traders\"}>Dashboard</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"\" onClick={this.logOut.bind(this)}>Logout</Link>\r\n            </li>\r\n        </ul>;\r\n\r\n        return (\r\n            <header>\r\n                <nav className=\"navbar navbar-default\">\r\n                    <div className=\"navbar-local color-accent theme-dark\">\r\n                        <div className=\"container\">\r\n                            <div className=\"navbar-header\">\r\n                                <button type=\"button\" className=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-2\">\r\n                                    <span className=\"sr-only\">Toggle navigation</span>\r\n                                    <i className=\"glyph glyph-hamburger\"></i>\r\n                                </button>\r\n                                <Link to=\"/\" className=\"navbar-brand\">{Strings.APP_NAME.toUpperCase()}</Link>\r\n                            </div>\r\n                            <div className=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-2\">\r\n                                <ul className=\"nav navbar-nav\"></ul>\r\n                                {localStorage.Token ? userLinks : loginRegisterLinks}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n        );\r\n    }\r\n};\r\n\r\nexport default withRouter(Header);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n        return <section>\r\n            <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                            <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                alt=\"truck.png\" src=\"./images/truck.png\" data-source-index=\"2\" />\r\n                        </div>\r\n                        <div class=\"col-md-12 col-md-pull-12\">\r\n                            <div class=\"type-h3\" style={{ color: \"#008575\", }}>Weclome to Naqel</div>\r\n                            <div class=\"type-sh3\" style={{ color: \"#949496\", }}>Transport Services On-The-Go</div>\r\n                            <p style={{ color: \"#D1D2D4\", }}>Welcome to Naqel! If you are a trader or a broker, and you want to publish job opportunities for drivers nearby, well, you are on the right place. Naqel is a mediator among traders, brokers and drivers, and provides intuitive and secure way to get transport services.</p>\r\n                            <p style={{ color: \"#D1D2D4\", }}>Not a Trader or a Broker? No worries! Naqel provides services for drivers too. If you are a driver, and you are searching for job opportunities, you are just one step away. Create your account on our Web Service, and we will notify you job oppprtunities on your personal account.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#16171F\" }}>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                            <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                alt=\"oath.png\" src=\"./images/oath.png\" data-source-index=\"2\" />\r\n                        </div>\r\n                        <div class=\"col-md-12 col-md-pull-12\">\r\n                            <div class=\"type-h3\" style={{ color: \"#008575\", }}>Privacy</div>\r\n                            <div class=\"type-sh3\" style={{ color: \"#949496\", }}>Your Privacy is Important to Us</div>\r\n                            <p style={{ color: \"#D1D2D4\", }}>Naqel's Privacy Statement describes the types of data we collect from you, how we use your data, and the legal bases we have to process your data. The Privacy Statement also describes how Naqel uses your content, which is information submitted by you to Naqel via the Services.</p>\r\n                            <p style={{ color: \"#D1D2D4\", }}>Where processing is based on consent and to the extent permitted by law, by agreeing to these Terms, you consent to Naqel's collection, use and disclosure of your content and data as described in the privacy statement.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#00201C\" }}>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                            <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                alt=\"account.png\" src=\"./images/account.png\" data-source-index=\"2\" />\r\n                        </div>\r\n                        <div class=\"col-md-12 col-md-pull-12\">\r\n                            <div class=\"type-h3\" style={{ color: \"#008575\", }}>User Accounts</div>\r\n                            <div class=\"type-sh3\" style={{ color: \"#949496\", }}>Signup and/or Login</div>\r\n                            <p style={{ color: \"#D1D2D4\", }}>Do you want to use our services right now? No Worries! Just signup by filling up precise forms and/or login to your profile. Drivers can view job opprotunities on their dashboards. Traders and/or Brokers can post job requests for freight from thier accounts.</p>\r\n                            <div class=\"btn-group\">\r\n                                <Link to=\"/register\" class=\"btn btn-secondary\">Signup</Link>\r\n                                <Link to=\"/login\" class=\"btn btn-primary\">Login</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"jumbotron theme-dark\" style={{ backgroundColor: \"#202020\", }}>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-24 text-center\">\r\n                            <div class=\"row section-gallery\">\r\n                                <div class=\"col-md-8\">\r\n                                    <h4 style={{ fontWeight: \"bold\", }}>LOCATION</h4>\r\n                                    <div class=\"type-p1 text-center\">\r\n                                        Wah\r\n                                            <br />\r\n                                            Punjab, Pakistan\r\n                                            </div>\r\n                                </div>\r\n                                <div class=\"col-md-8\">\r\n                                    <h4 style={{ fontWeight: \"bold\", }}>AROUND THE GLOBE</h4>\r\n                                    <div class=\"type-p1 text-center text-light\" style={{ color: \"#25AAE1\", }}>\r\n                                        <a class=\"fa\" href=\"#\">\r\n                                            <i class=\"fab fa-fw fa-facebook-f\"></i>\r\n                                        </a>\r\n                                        <a class=\"fa\" href=\"#\">\r\n                                            <i class=\"fab fa-fw fa-instagram\"></i>\r\n                                        </a>\r\n                                        <a class=\"fa\" href=\"#\">\r\n                                            <i class=\"fab fa-fw fa-twitter\"></i>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-8\">\r\n                                    <h4 style={{ fontWeight: \"bold\", }}>CONTACT US</h4>\r\n                                    <div class=\"type-p1 text-center\">Naqel is created by Core Infinite. For more information, visit <a style={{ textDecoration: \"none\", color: \"#008575\", }} href=\"#\" class=\"color-type-accent\">coreinfinte.com</a></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Landing;","import axios from \"axios\";\r\nimport Strings from \"../../res/strings\";\r\n\r\n// POST: Register\r\nexport const registerDriver = async newCredentials => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/register`, {\r\n        Username: newCredentials.Username,\r\n        Email: newCredentials.Email,\r\n        Password: newCredentials.Password,\r\n        RegisterAs: newCredentials.RegisterAs,\r\n    }).then(response => {\r\n        if (response.data.localeCompare(Strings.USERNAME_OR_EMAIL_TAKEN) === 0) {\r\n            return response.data;\r\n        }\r\n        else {\r\n            localStorage.setItem(\"newCredentialsToken\", response.data);\r\n            return response.data;\r\n        }\r\n    });\r\n};\r\n\r\n// POST: AccountSetup\r\nexport const setupDriverAccount = async newDriver => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/accountSetup`, {\r\n        Username: newDriver.Username,\r\n        Email: newDriver.Email,\r\n        Password: newDriver.Password,\r\n        RegisterAs: newDriver.RegisterAs,\r\n        FirstName: newDriver.FirstName,\r\n        LastName: newDriver.LastName,\r\n        DateOfBirth: newDriver.DateOfBirth,\r\n        Gender: newDriver.Gender,\r\n        Address: newDriver.Address,\r\n        PhoneNumber: newDriver.PhoneNumber,\r\n        Nationality: newDriver.Nationality,\r\n    }).then(response => {\r\n        console.log(response.data);\r\n    });\r\n};\r\n\r\n// POST: Login\r\nexport const loginDriver = async driver => {\r\n    console.log(`Sending HTTP POST request on ${Strings.NAQEL_SERVER}drivers/login`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/login`, {\r\n        EmailOrUsername: driver.EmailOrUsername,\r\n        Password: driver.Password,\r\n        SignInAs: driver.SignInAs,\r\n    }).then(response => {\r\n        return response.data;\r\n    })\r\n};\r\n\r\n// GET: GetData\r\nexport const getData = async request => {\r\n    console.log(`Sending GET request to ${Strings.NAQEL_SERVER}drivers/get${request.Get}...`);\r\n    return await axios.get(`${Strings.NAQEL_SERVER}drivers/get${request.Get}`, {\r\n        params: request.Params,\r\n        headers: { Authorization: `JWT ${request.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UploadDriverProfilePhoto\r\nexport const uploadDriverProfilePhoto = async driverProfilePhoto => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/uploadDriverProfilePhoto`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/uploadDriverProfilePhoto`, {\r\n        PhotoURL: driverProfilePhoto.PhotoURL,\r\n        FileName: driverProfilePhoto.FileName\r\n    }, {\r\n        headers: { Authorization: `JWT ${driverProfilePhoto.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: GeneralSettings\r\nexport const generalSettings = async updatedDriver => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/generalSettings`, {\r\n        FirstName: updatedDriver.FirstName,\r\n        LastName: updatedDriver.LastName,\r\n        Address: updatedDriver.Address,\r\n        PhoneNumber: updatedDriver.PhoneNumber,\r\n        Gender: updatedDriver.Gender,\r\n        Nationality: updatedDriver.Nationality,\r\n        DateOfBirth: updatedDriver.DateOfBirth,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedDriver.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateUsername\r\nexport const validateUsername = async username => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/validateUsername`, {\r\n        Username: username\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateEmail\r\nexport const validateEmail = async email => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/validateEmail`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POSTL SendCode\r\nexport const sendCode = async email => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}users/sendCode...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/sendCode`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UsernameAndEmailSettings\r\nexport const usernameAndEmailSettings = async updatedDriver => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/usernameAndEmailSettings...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/usernameAndEmailSettings`, {\r\n        Username: updatedDriver.Username,\r\n        Email: updatedDriver.Email\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedDriver.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidatePassword\r\nexport const validatePassword = async passwordPackage => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/validatePassword`, {\r\n        Password: passwordPackage.Password\r\n    }, {\r\n        headers: { Authorization: `JWT ${passwordPackage.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: PasswordSettings\r\nexport const passwordSettings = async updatedDriver => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/passwordSettings`, {\r\n        Password: updatedDriver.Password,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedDriver.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddTruck\r\nexport const addTruck = async newTruck => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addTruck...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addTruck`, {\r\n        PlateNumber: newTruck.PlateNumber,\r\n        Owner: newTruck.Owner,\r\n        ProductionYear: newTruck.ProductionYear,\r\n        Brand: newTruck.Brand,\r\n        Model: newTruck.Model,\r\n        Type: newTruck.Type,\r\n        MaximumWeight: newTruck.MaximumWeight,\r\n        PhotoURL: newTruck.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTruck.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UpdateTruckPhoto\r\nexport const updateTruckPhoto = async updatedTruck => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateTruckPhoto...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateTruckPhoto`, {\r\n        PhotoURL: updatedTruck.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTruck.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UpdateTruck\r\nexport const updateTruck = async updatedTruck => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateTruck...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateTruck`, {\r\n        PlateNumber: updatedTruck.PlateNumber,\r\n        Owner: updatedTruck.Owner,\r\n        ProductionYear: updatedTruck.ProductionYear,\r\n        Brand: updatedTruck.Brand,\r\n        Model: updatedTruck.Model,\r\n        Type: updatedTruck.Type,\r\n        MaximumWeight: updatedTruck.MaximumWeight\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTruck.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddTrailer\r\nexport const addTrailer = async newTrailer => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addTrailer...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addTrailer`, {\r\n        MaximumWeight: newTrailer.MaximumWeight,\r\n        PhotoURL: newTrailer.PhotoURL,\r\n        Type: newTrailer.Type\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTrailer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteTrailer\r\nexport const deleteTrailer = async discardedTrailer => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteTrailer...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteTrailer`, {\r\n        headers: { Authorization: `JWT ${discardedTrailer.Token}` },\r\n        data: { TrailerID: discardedTrailer.TrailerID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateTrailer\r\nexport const updateTrailer = updatedTrailer => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateTrailer...`);\r\n    return axios.post(`${Strings.NAQEL_SERVER}drivers/updateTrailer`, {\r\n        TrailerID: updatedTrailer.TrailerID,\r\n        MaximumWeight: updatedTrailer.MaximumWeight,\r\n        PhotoURL: updatedTrailer.PhotoURL,\r\n        Type: updatedTrailer.Type\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTrailer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addDrivingLicence\r\nexport const addDrivingLicence = async newDrivingLicence => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addDrivingLicence...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addDrivingLicence`, {\r\n        LicenceNumber: newDrivingLicence.LicenceNumber,\r\n        Type: newDrivingLicence.Type,\r\n        ReleaseDate: newDrivingLicence.ReleaseDate,\r\n        ExpiryDate: newDrivingLicence.ExpiryDate,\r\n        PhotoURL: newDrivingLicence.PhotoURL,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newDrivingLicence.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateDrivingLicence\r\nexport const updateDrivingLicence = async updatedDrivingLicence => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateDrivingLicence...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateDrivingLicence`, {\r\n        LicenceNumber: updatedDrivingLicence.LicenceNumber,\r\n        Type: updatedDrivingLicence.Type,\r\n        ReleaseDate: updatedDrivingLicence.ReleaseDate,\r\n        ExpiryDate: updatedDrivingLicence.ExpiryDate,\r\n        PhotoURL: updatedDrivingLicence.PhotoURL,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedDrivingLicence.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteDrivingLicence\r\nexport const deleteDrivingLicence = async discardedDrivingLicence => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteDrivingLicence...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteDrivingLicence`, {\r\n            headers: { Authorization: `JWT ${discardedDrivingLicence.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addEntryExitCard\r\nexport const addEntryExitCard = async newEntryExitCard => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addEntryExitCard...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addEntryExitCard`, {\r\n        EntryExitNumber: newEntryExitCard.EntryExitNumber,\r\n        Type: newEntryExitCard.Type,\r\n        ReleaseDate: newEntryExitCard.ReleaseDate,\r\n        NumberOfMonths: newEntryExitCard.NumberOfMonths,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newEntryExitCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateEntryExiCard\r\nexport const updateEntryExitCard = async updatedEntryExitCard => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateEntryExitCard...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateEntryExitCard`, {\r\n        EntryExitNumber: updatedEntryExitCard.EntryExitNumber,\r\n        Type: updatedEntryExitCard.Type,\r\n        ReleaseDate: updatedEntryExitCard.ReleaseDate,\r\n        NumberOfMonths: updatedEntryExitCard.NumberOfMonths,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedEntryExitCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteEntryExitCard\r\nexport const deleteEntryExitCard = async discardedEntryExitCard => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteEntryExitCard...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteEntryExitCard`, {\r\n        headers: { Authorization: `JWT ${discardedEntryExitCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addIdentityCard\r\nexport const addIdentityCard = async newIdentityCard => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addIdentityCard...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addIdentityCard`, {\r\n        Token: newIdentityCard.Token,\r\n        IDNumber: newIdentityCard.IDNumber,\r\n        PhotoURL: newIdentityCard.PhotoURL,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateIdentityCard\r\nexport const updateIdentityCard = async updatedIdentityCard => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateIdentityCard...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateIdentityCard`, {\r\n        Token: updatedIdentityCard.Token,\r\n        IDNumber: updatedIdentityCard.IDNumber,\r\n        PhotoURL: updatedIdentityCard.PhotoURL,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteIdentityCard\r\nexport const deleteIdentityCard = async discardedIdentityCard => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteIdentityCard...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteIdentityCard`, {\r\n        headers: { Authorization: `JWT ${discardedIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addPermitLicence\r\nexport const addPermitLicence = async newPermitLicence => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addPermitLicence...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addPermitLicence`, {\r\n        PermitNumber: newPermitLicence.PermitNumber,\r\n        ExpiryDate: newPermitLicence.ExpiryDate,\r\n        PhotoURL: newPermitLicence.PhotoURL,\r\n        Code: newPermitLicence.Code,\r\n        Place: newPermitLicence.Place\r\n    }, {\r\n        headers: { Authorization: `JWT ${newPermitLicence.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deletePermitLicence\r\nexport const deletePermitLicence = async discardedPermitLicence => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deletePermitLicence...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deletePermitLicence`, {\r\n        headers: { Authorization: `JWT ${discardedPermitLicence.Token}` },\r\n        data: { PermitLicenceID: discardedPermitLicence.PermitLicenceID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updatePermitLicence\r\nexport const updatePermitLicence = async updatedPermitLicence => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updatePermitLicence...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updatePermitLicence`, {\r\n        PermitLicenceID: updatedPermitLicence.PermitLicenceID,\r\n        PermitNumber: updatedPermitLicence.PermitNumber,\r\n        ExpiryDate: updatedPermitLicence.ExpiryDate,\r\n        PhotoURL: updatedPermitLicence.PhotoURL,\r\n        Code: updatedPermitLicence.Code,\r\n        Place: updatedPermitLicence.Place\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedPermitLicence.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addJobRequest\r\nexport const addJobRequest = async newJobRequest => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addJobRequest...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addJobRequest`, {\r\n        LoadingPlace: newJobRequest.LoadingPlace,\r\n        UnloadingPlace: newJobRequest.UnloadingPlace,\r\n        TripType: newJobRequest.TripType,\r\n        Price: newJobRequest.Price,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newJobRequest.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateJobRequest\r\nexport const updateJobRequest = async updatedJobRequest => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateJobRequest...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateJobRequest`, {\r\n        JobRequestID: updatedJobRequest.JobRequestID,\r\n        LoadingPlace: updatedJobRequest.LoadingPlace,\r\n        UnloadingPlace: updatedJobRequest.UnloadingPlace,\r\n        TripType: updatedJobRequest.TripType,\r\n        Price: updatedJobRequest.Price,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedJobRequest.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteJobRequest\r\nexport const deleteJobRequest = async discardedJobRequest => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteJobRequest...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteJobRequest`, {\r\n        headers: { Authorization: `JWT ${discardedJobRequest.Token}` },\r\n        data: { JobRequestID: discardedJobRequest.JobRequestID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addDriverRequest\r\nexport const addDriverRequest = async newDriverRequest => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addDriverRequest...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addDriverRequest`, {\r\n        JobOfferID: newDriverRequest.JobOfferID,\r\n        Price: newDriverRequest.Price\r\n    }, {\r\n        headers: { Authorization: `JWT ${newDriverRequest.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deleteDriverRequest\r\nexport const deleteDriverRequest = async discardedDriverRequest => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteDriverRequest...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteDriverRequest`, {\r\n        headers: { Authorization: `JWT ${discardedDriverRequest.Token}` },\r\n        data: { JobOfferID: discardedDriverRequest.JobOfferID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addOnGoingJob\r\nexport const addOnGoingJob = async newOnGoingJob => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addOnGoingJob...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addOnGoingJob`, {\r\n        TraderRequestID: newOnGoingJob.TraderRequestID\r\n    }, {\r\n        headers: { Authorization: `JWT ${newOnGoingJob.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addObjectionReason\r\nexport const addObjectionReason = async newObjectionReason => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addObjectionReason...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addObjectionReason`, {\r\n        Reason: newObjectionReason.Reason\r\n    }, {\r\n        headers: { Authorization: `JWT ${newObjectionReason.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addJobObjection\r\nexport const addJobObjection = async newJobObjection => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addJobObjection...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addJobObjection`, {\r\n        OnGoingJobID: newJobObjection.OnGoingJobID,\r\n        Reason: newJobObjection.Reason,\r\n        Comment: newJobObjection.Comment\r\n    }, {\r\n        headers: { Authorization: `JWT ${newJobObjection.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: finishJob\r\nexport const finishJob = async finishedJob => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/finishJob...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/finishJob`, {}, {\r\n        headers: { Authorization: `JWT ${finishedJob.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: toggleSelectTraderRequest\r\nexport const toggleSelectTraderRequest = async toggleSelectedTraderRequest => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/toggleSelectTraderRequest...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/toggleSelectTraderRequest`, {\r\n        TraderRequestID: toggleSelectedTraderRequest.TraderRequestID,\r\n        Selected: toggleSelectedTraderRequest.Selected\r\n    }, {\r\n        headers: { Authorization: `JWT ${toggleSelectedTraderRequest.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};","import axios from \"axios\";\r\nimport Strings from \"../../res/strings\";\r\n\r\n// POST: Register\r\nexport const registerTrader = async newCredentials => {\r\n    console.log(\"I'm in registerTrader axios...\");\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/register`, {\r\n        Username: newCredentials.Username,\r\n        Email: newCredentials.Email,\r\n        Password: newCredentials.Password,\r\n        RegisterAs: newCredentials.RegisterAs,\r\n    }).then(res => {\r\n        if (res.data.localeCompare(Strings.USERNAME_OR_EMAIL_TAKEN) === 0) {\r\n            return res.data;\r\n        }\r\n        else {\r\n            localStorage.setItem(\"newCredentialsToken\", res.data);\r\n            return res.data;\r\n        }\r\n    });\r\n};\r\n\r\n// POST: AccountSetup\r\nexport const setupTraderAccount = async newTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/accountSetup`, {\r\n        Username: newTrader.Username,\r\n        Email: newTrader.Email,\r\n        Password: newTrader.Password,\r\n        RegisterAs: newTrader.RegisterAs,\r\n        FirstName: newTrader.FirstName,\r\n        LastName: newTrader.LastName,\r\n        DateOfBirth: newTrader.DateOfBirth,\r\n        Gender: newTrader.Gender,\r\n        Address: newTrader.Address,\r\n        PhoneNumber: newTrader.PhoneNumber,\r\n        Nationality: newTrader.Nationality,\r\n    }).then(res => {\r\n        console.log(res.data);\r\n    });\r\n};\r\n\r\n// POST: Login\r\nexport const loginTrader = async trader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/login`, {\r\n        EmailOrUsername: trader.EmailOrUsername,\r\n        Password: trader.Password\r\n    }).then(response => {\r\n        return response.data;\r\n    }).catch(error => {\r\n        console.log(error);\r\n    });\r\n};\r\n\r\n// GET: GetData\r\nexport const getData = async request => {\r\n    console.log(`Sending GET request to ${Strings.NAQEL_SERVER}traders/get${request.Get}...`);\r\n    return await axios.get(`${Strings.NAQEL_SERVER}traders/get${request.Get}`, {\r\n        params: request.Params,\r\n        headers: { Authorization: `JWT ${request.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UploadDriverProfilePhoto\r\nexport const uploadTraderProfilePhoto = async traderProfilePhoto => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/uploadTraderProfilePhoto`, {\r\n        PhotoURL: traderProfilePhoto.PhotoURL,\r\n        FileName: traderProfilePhoto.FileName\r\n    }, {\r\n        headers: { Authorization: `JWT ${traderProfilePhoto.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: GeneralSettings\r\nexport const generalSettings = async updatedTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/generalSettings`, {\r\n        FirstName: updatedTrader.FirstName,\r\n        LastName: updatedTrader.LastName,\r\n        Address: updatedTrader.Address,\r\n        PhoneNumber: updatedTrader.PhoneNumber,\r\n        Gender: updatedTrader.Gender,\r\n        Nationality: updatedTrader.Nationality,\r\n        DateOfBirth: updatedTrader.DateOfBirth,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTrader.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateUsername\r\nexport const validateUsername = async username => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/validateUsername`, {\r\n        Username: username\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateEmail\r\nexport const validateEmail = async email => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/validateEmail`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: SendCode\r\nexport const sendCode = async email => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/sendCode`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UsernameAndEmailSettings\r\nexport const usernameAndEmailSettings = async updatedTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/usernameAndEmailSettings`, {\r\n        Username: updatedTrader.Username,\r\n        Email: updatedTrader.Email\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTrader.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidatePassword\r\nexport const validatePassword = async passwordPackage => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/validatePassword`, {\r\n        Password: passwordPackage.Password\r\n    }, {\r\n        headers: { Authorization: `JWT ${passwordPackage.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: PasswordSettings\r\nexport const passwordSettings = async updatedTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/passwordSettings`, {\r\n        Password: updatedTrader.Password,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTrader.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addIdentityCard\r\nexport const addIdentityCard = newIdentityCard => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/addIdentityCard`, {\r\n        IDNumber: newIdentityCard.IDNumber,\r\n        PhotoURL: newIdentityCard.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${newIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateIdentityCard\r\nexport const updateIdentityCard = updatedIdentityCard => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/updateIdentityCard`, {\r\n        IDNumber: updatedIdentityCard.IDNumber,\r\n        PhotoURL: updatedIdentityCard.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteIdentityCard\r\nexport const deleteIdentityCard = discardedIdentityCard => {\r\n    return axios.delete(`${Strings.NAQEL_SERVER}traders/deleteIdentityCard`, {\r\n        headers: { Authorization: `JWT ${discardedIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addCommercialRegisterCertificate\r\nexport const addCommercialRegisterCertificate = newCommercialRegisterCertificate => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/addCommercialRegisterCertificate`, {\r\n        Number: newCommercialRegisterCertificate.Number,\r\n        Type: newCommercialRegisterCertificate.Type,\r\n        PhotoURL: newCommercialRegisterCertificate.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${newCommercialRegisterCertificate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateCommercialRegisterCertificate\r\nexport const updateCommercialRegisterCertificate = updatedCommercialRegisterCertificate => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/updateCommercialRegisterCertificate`, {\r\n        Number: updatedCommercialRegisterCertificate.Number,\r\n        Type: updatedCommercialRegisterCertificate.Type,\r\n        PhotoURL: updatedCommercialRegisterCertificate.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedCommercialRegisterCertificate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteCommercialRegisterCertificate\r\nexport const deleteCommercialRegisterCertificate = discardedCommercialRegisterCertificate => {\r\n    return axios.delete(`${Strings.NAQEL_SERVER}traders/deleteCommercialRegisterCertificate`, {\r\n        headers: { Authorization: `JWT ${discardedCommercialRegisterCertificate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addJobOffer\r\nexport const addJobOffer = async newJobOffer => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addJobOffer`, {\r\n        TripType: newJobOffer.TripType,\r\n        CargoType: newJobOffer.CargoType,\r\n        CargoWeight: newJobOffer.CargoWeight,\r\n        LoadingPlace: newJobOffer.LoadingPlace,\r\n        UnloadingPlace: newJobOffer.UnloadingPlace,\r\n        LoadingDate: newJobOffer.LoadingDate,\r\n        LoadingTime: newJobOffer.LoadingTime,\r\n        EntryExit: newJobOffer.EntryExit,\r\n        Price: newJobOffer.Price,\r\n        AcceptedDelay: newJobOffer.AcceptedDelay,\r\n        JobOfferType: newJobOffer.JobOfferType\r\n    }, {\r\n        headers: { Authorization: `JWT ${newJobOffer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateJobOffer\r\nexport const updateJobOffer = async updatedJobOffer => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/updateJobOffer`, {\r\n        JobOfferID: updatedJobOffer.JobOfferID,\r\n        TripType: updatedJobOffer.TripType,\r\n        CargoType: updatedJobOffer.CargoType,\r\n        CargoWeight: updatedJobOffer.CargoWeight,\r\n        LoadingPlace: updatedJobOffer.LoadingPlace,\r\n        UnloadingPlace: updatedJobOffer.UnloadingPlace,\r\n        LoadingDate: updatedJobOffer.LoadingDate,\r\n        LoadingTime: updatedJobOffer.LoadingTime,\r\n        EntryExit: updatedJobOffer.EntryExit,\r\n        Price: updatedJobOffer.Price,\r\n        AcceptedDelay: updatedJobOffer.AcceptedDelay,\r\n        JobOfferType: updatedJobOffer.JobOfferType\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedJobOffer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deleteJobOffer\r\nexport const deleteJobOffer = async discardedJobOffer => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}traders/deleteJobOffer...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}traders/deleteJobOffer`, {\r\n        headers: { Authorization: `JWT ${discardedJobOffer.Token}` },\r\n        data: { JobOfferID: discardedJobOffer.JobOfferID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addATraderRequest\r\nexport const addTraderRequest = async newTraderReqeust => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/addTraderRequest...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addTraderRequest`, {\r\n        JobRequestID: newTraderReqeust.JobRequestID,\r\n        CargoType: newTraderReqeust.CargoType,\r\n        CargoWeight: newTraderReqeust.CargoWeight,\r\n        LoadingDate: newTraderReqeust.LoadingDate,\r\n        LoadingTime: newTraderReqeust.LoadingTime,\r\n        EntryExit: newTraderReqeust.EntryExit,\r\n        AcceptedDelay: newTraderReqeust.AcceptedDelay\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTraderReqeust.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deleteTraderRequest\r\nexport const deleteTraderRequest = async discardedTraderRequest => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}traders/deleteTraderRequest...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}traders/deleteTraderRequest`, {\r\n        headers: { Authorization: `JWT ${discardedTraderRequest.Token}` },\r\n        data: { JobRequestID: discardedTraderRequest.JobRequestID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addObjectionReason\r\nexport const addObjectionReason = async newObjectionReason => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/addObjectionReason...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addObjectionReason`, {\r\n        Reason: newObjectionReason.Reason\r\n    }, {\r\n        headers: { Authorization: `JWT ${newObjectionReason.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addJobObjection\r\nexport const addJobObjection = async newJobObjection => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/addJobObjection...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addJobObjection`, {\r\n        OnGoingJobID: newJobObjection.OnGoingJobID,\r\n        Reason: newJobObjection.Reason,\r\n        Comment: newJobObjection.Comment\r\n    }, {\r\n        headers: { Authorization: `JWT ${newJobObjection.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: approveJob\r\nexport const approveJob = async approvedJob => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/approveJob...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/approveJob`, {}, {\r\n        headers: { Authorization: `JWT ${approvedJob.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addDriverReview\r\nexport const addDriverReview = async newDriverReview => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/addDriverReview...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addDriverReview`, {\r\n        CompletedJobID: newDriverReview.CompletedJobID,\r\n        Rating: newDriverReview.Rating,\r\n        Review: newDriverReview.Review\r\n    }, {\r\n        headers: { Authorization: `JWT ${newDriverReview.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addOnGoingJobFromJobOffer\r\nexport const addOnGoingJobFromJobOffer = async newOnGoingJob => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/addOnGoingJobFromJobOffer...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addOnGoingJobFromJobOffer`, {\r\n        DriverRequestID: newOnGoingJob.DriverRequestID,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newOnGoingJob.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addOnGoingJobFromJobRequest\r\nexport const addOnGoingJobFromJobRequest = async newOnGoingJob => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/addOnGoingJobFromJobRequest...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addOnGoingJobFromJobRequest`, {\r\n        TraderRequestID: newOnGoingJob.TraderRequestID,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newOnGoingJob.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};","export const Required = {\r\n    paddingLeft: \"5px\",\r\n    fontWeight: \"bold\",\r\n};\r\n\r\nexport const SelectOptionStyle = {\r\n    maxWidth: \"296px\",\r\n};\r\n\r\nexport const PreloaderScreen = {\r\n    background: \"rgba(0, 0, 0, 0.8)\",\r\n    position: \"fixed\",\r\n    zIndex: \"10\",\r\n    top: \"0px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n    height: \"100%\"\r\n};\r\n\r\nexport default {\r\n    Required,\r\n    SelectOptionStyle,\r\n    PreloaderScreen\r\n};","import React, { Component } from \"react\";\r\nimport { PreloaderScreen } from \"../styles/MiscellaneousStyles\";\r\n\r\nclass Preloader extends Component {\r\n    render() {\r\n        return (\r\n            <div style={PreloaderScreen}>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                    {/*<img src=\"./images/preloader.gif\" alt=\"preloader.gif\" height=\"200\" />*/}\r\n                    <div class=\"progress-ring progress-large\">\r\n                        <div class=\"progress-circle\"></div>\r\n                        <div class=\"progress-circle\"></div>\r\n                        <div class=\"progress-circle\"></div>\r\n                        <div class=\"progress-circle\"></div>\r\n                        <div class=\"progress-circle\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Preloader;","export const LoginCardBack = {\r\n    backgroundImage: \"url(/images/login_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n};\r\n\r\nexport const RegisterCardBack = {\r\n    backgroundImage: \"url(/images/signup_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n};\r\n\r\nexport const EmailConfirmationCardBack = {\r\n    backgroundImage: \"url(/images/passcode_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n};\r\n\r\nexport const AccountSetupCardBack = {\r\n    backgroundImage: \"url(/images/create_account_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n};\r\n\r\nexport const CongratulationsCardBack = {\r\n    backgroundImage: \"url(/images/congrats_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n};\r\n\r\nexport const Card = {\r\n    backgroundColor: \"rgba(229, 229, 229, 0.8)\",\r\n    height: \"auto\",\r\n    width: \"350px\",\r\n    padding: \"30px\",\r\n    alignContent: \"center\",\r\n    boxShadow: \"0 6px 6px rgba(0, 0, 0, 0.6)\",\r\n};\r\n\r\nexport const CardLarge = {\r\n    backgroundColor: \"rgba(229, 229, 229, 0.8)\",\r\n    height: \"auto\",\r\n    padding: \"30px\",\r\n    alignContent: \"center\",\r\n    boxShadow: \"0 6px 6px rgba(0, 0, 0, 0.6)\",\r\n};\r\n\r\nexport const CardXLarge = {\r\n    backgroundColor: \"rgba(229, 229, 229, 0.8)\",\r\n    height: \"auto\",\r\n    width: \"60%\",\r\n    margin: \"50px\",\r\n    boxShadow: \"0 6px 6px rgba(0, 0, 0, 0.6)\",\r\n};\r\n\r\nexport const CardChild = {\r\n    width: \"100%\",\r\n};\r\n\r\nexport const CardTitle = {\r\n    paddingTop: \"10px\",\r\n};\r\n\r\nexport default {\r\n    LoginCardBack,\r\n    RegisterCardBack,\r\n    EmailConfirmationCardBack,\r\n    AccountSetupCardBack,\r\n    CongratulationsCardBack,\r\n    Card,\r\n    CardLarge,\r\n    CardXLarge,\r\n    CardChild,\r\n    CardTitle,\r\n};","import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { loginDriver } from \"../drivers/DriverFunctions\";\r\nimport { loginTrader } from \"../traders/TraderFunctions\";\r\nimport Preloader from \"../../controls/Preloader\";\r\n\r\nimport {\r\n    LoginCardBack,\r\n    Card,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            EmailOrUsername: \"\",\r\n            Password: \"\",\r\n            SignInAs: \"Driver\",\r\n\r\n            ValidEmailOrUsername: false,\r\n            ValidPassword: false,\r\n\r\n            ValidForm: false,\r\n            LoggedInAsDriver: false,\r\n            LoggedInAsTrader: false,\r\n            LoginError: null,\r\n\r\n            Errors: {\r\n                EmailOrUsername: \"\",\r\n                Password: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value }, () => {\r\n            this.validateField(name, value)\r\n        });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidEmailOrUsername = this.state.ValidEmailOrUsername;\r\n        let ValidPassword = this.state.ValidPassword;\r\n\r\n        switch (field) {\r\n            case \"EmailOrUsername\":\r\n                ValidEmailOrUsername = (value !== \"\");\r\n                Errors.EmailOrUsername = ValidEmailOrUsername ? \"\" : \"Email or username is required.\";\r\n                break;\r\n            case \"Password\":\r\n                ValidPassword = (value != \"\");\r\n                Errors.Password = ValidPassword ? \"\" : \"Password is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidEmailOrUsername: ValidEmailOrUsername,\r\n            ValidPassword: ValidPassword\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidEmailOrUsername &&\r\n                    this.state.ValidPassword\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        await event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const user = {\r\n            EmailOrUsername: this.state.EmailOrUsername,\r\n            Password: this.state.Password,\r\n            SignInAs: this.state.SignInAs,\r\n        };\r\n\r\n        if (this.state.SignInAs === \"Driver\") {\r\n            console.log(\"logging in as Driver...\");\r\n\r\n            await loginDriver(user).then(response => {\r\n                console.log(response);\r\n                if (response.Message === \"Login successful.\") {\r\n                    localStorage.setItem(\"Token\", response.Token);\r\n\r\n                    this.setState({\r\n                        LoggedInAsDriver: true,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        LoginError: <div>\r\n                            <label className=\"control-label text-danger\">{response.Message}</label>\r\n                            <br />\r\n                        </div>,\r\n                        Preloader: null,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            console.log(\"Logging in as Trader or Broker...\");\r\n\r\n            await loginTrader(user).then(response => {\r\n                if (response.Message === \"Login successful.\") {\r\n                    localStorage.setItem(\"Token\", response.Token);\r\n\r\n                    this.setState({\r\n                        LoggedInAsTrader: true,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        LoginError: <div>\r\n                            <label className=\"control-label text-danger\">{response.Message}</label>\r\n                            <br />\r\n                        </div>,\r\n                        Preloader: null,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.LoggedInAsDriver) {\r\n            return <Redirect to={\"/drivers\"} />;\r\n        }\r\n        else if (this.state.LoggedInAsTrader) {\r\n            return <Redirect to={\"/traders\"} />;\r\n        }\r\n        else {\r\n            return <div>\r\n                <div className=\"middle\" style={LoginCardBack}>\r\n                    <div className=\"theme-default animated fadeIn\" style={Card} >\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/login.png\" alt=\"Login.png\" height=\"60\" />\r\n                            <div className=\"type-h3\" style={CardTitle}>Sign In</div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"EmailOrUsername\" className=\"control-label\">Email or Username</label>\r\n                                    <input type=\"email\" className=\"form-control\" name=\"EmailOrUsername\" placeholder=\"someone@provider.com\"\r\n                                        value={this.state.EmailOrUsername} onChange={this.onChange} />\r\n                                    <span className=\"text-danger\">{this.state.Errors.EmailOrUsername}</span>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"Password\" className=\"control-label\">Password</label>\r\n                                    <input type=\"password\" className=\"form-control\" name=\"Password\" placeholder=\"Password\"\r\n                                        value={this.state.Password} onChange={this.onChange} />\r\n                                    <span className=\"text-danger\">{this.state.Errors.Password}</span>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"control-label\">Sign In As</label>\r\n                                    <div className=\"dropdown\" style={{ width: \"100%\" }}>\r\n                                        <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                            <span>{this.state.SignInAs}</span>\r\n                                            <span className=\"caret\"></span>\r\n                                        </button>\r\n                                        <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                            <li><Link onClick={e => { this.state.SignInAs = \"Driver\" }} onChange={this.onChange}>Driver</Link></li>\r\n                                            <li><Link onClick={e => { this.state.SignInAs = \"Trader\" }} onChange={this.onChange}>Trader</Link></li>\r\n                                            <li><Link onClick={e => { this.state.SignInAs = \"Broker\" }} onChange={this.onChange}>Broker</Link></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    {this.state.LoginError}\r\n                                    <label className=\"control-label\"><Link to=\"/\">Forgot password</Link></label>\r\n                                    <br />\r\n                                    <label className=\"control-label\">No account? <span><Link to=\"/register\">Register now</Link></span></label>\r\n                                </div>\r\n                                <div>\r\n                                    <input type=\"submit\" value=\"Sign In\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.Preloader}\r\n            </div>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default Login;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { registerDriver } from \"../drivers/DriverFunctions\";\r\nimport { registerTrader } from \"../traders/TraderFunctions\"\r\nimport Strings from \"../../res/strings\";\r\nimport { Required } from \"../../styles/MiscellaneousStyles\";\r\n\r\nimport {\r\n    RegisterCardBack,\r\n    Card,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            Email: \"\",\r\n            Password: \"\",\r\n            ConfirmPassword: \"\",\r\n            RegisterAs: \"Driver\",\r\n            NullError: false,\r\n\r\n            PasswordsMatched: false,\r\n            UsernameOrEmailTaken: false,\r\n            ValidEmail: false,\r\n            ValidPassword: false,\r\n            ValidForm: false,\r\n            Agreed: false,\r\n\r\n            Errors: {\r\n                Email: \"\",\r\n                Password: \"\",\r\n                ConfirmPassword: \"\",\r\n                Agreed: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let fieldValidationErrors = this.state.Errors;\r\n        let ValidEmail = this.state.ValidEmail;\r\n        let ValidPassword = this.state.ValidPassword;\r\n        let PasswordsMatched = this.state.PasswordsMatched;\r\n        let Agreed = this.state.Agreed;\r\n\r\n        switch (field) {\r\n            case \"Email\":\r\n                ValidEmail = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n                fieldValidationErrors.Email = ValidEmail ? \"\" : \"Email is invalid.\";\r\n                break;\r\n            case \"Password\":\r\n                ValidPassword = value.length >= 6;\r\n                fieldValidationErrors.Password = ValidPassword ? \"\" : \"Password is too short.\";\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                PasswordsMatched = this.state.Password === value;\r\n                fieldValidationErrors.ConfirmPassword = PasswordsMatched ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n            case \"IsAgree\":\r\n                Agreed = this.refs.agreementCheckBox.checked;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: fieldValidationErrors,\r\n            ValidEmail: ValidEmail,\r\n            ValidPassword: ValidPassword,\r\n            PasswordsMatched: PasswordsMatched,\r\n            Agreed: Agreed,\r\n        }, this.validateForm);\r\n    }\r\n\r\n    validateForm() {\r\n        this.setState({\r\n            ValidForm: this.state.ValidEmail &&\r\n                this.state.ValidPassword &&\r\n                this.state.PasswordsMatched &&\r\n                this.state.Agreed\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.Username === \"\" ||\r\n            this.state.Email === \"\" ||\r\n            this.state.Password === \"\" ||\r\n            this.state.ConfirmPassword === \"\") {\r\n\r\n            this.setState({\r\n                NullError: true,\r\n                UsernameOrEmailTaken: false,\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const newCredentials = {\r\n            Username: this.state.Username,\r\n            Password: this.state.Password,\r\n            Email: this.state.Email,\r\n            RegisterAs: this.state.RegisterAs,\r\n        }\r\n\r\n        if (newCredentials.RegisterAs == \"Driver\") {\r\n            await registerDriver(newCredentials).then(response => {\r\n                if (response && localStorage.newCredentialsToken) {\r\n                    this.props.history.push(\"/emailConfirmation\");\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        NullError: false,\r\n                        UsernameOrEmailTaken: true,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else if (newCredentials.RegisterAs == \"Trader\" || newCredentials.RegisterAs == \"Broker\") {\r\n            console.log(\"Seting up resources for new trader or broker...\");\r\n            await registerTrader(newCredentials).then(response => {\r\n                if (response && localStorage.newCredentialsToken) {\r\n                    this.props.history.push(\"/emailConfirmation\");\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        NullError: false,\r\n                        UsernameOrEmailTaken: true,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"middle\" style={RegisterCardBack}>\r\n                    <div class=\"theme-default animated fadeIn\" style={Card}>\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/signup.png\" alt=\"signup.png\" height=\"60\" />\r\n                            <div class=\"type-h3\" style={CardTitle}>Sign Up</div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"Username\" class=\"control-label\">Username</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"Username\" type=\"text\" name=\"Username\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Username} onChange={this.onChange} required />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"Email\" class=\"control-label\">Email</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"Email\" type=\"email\" name=\"Email\" class=\"form-control\" placeholder=\"someone@example.com\" autocomplete=\"off\"\r\n                                        value={this.state.Email} onChange={this.onChange} />\r\n                                    <span class=\"text-danger\">{this.state.Errors[\"Email\"]}</span>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"Password\" class=\"control-label\">Password</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"Password\" type=\"password\" name=\"Password\" class=\"form-control\"\r\n                                        value={this.state.Password} onChange={this.onChange} />\r\n                                    <span class=\"text-danger\">{this.state.Errors[\"Password\"]}</span>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"ConfirmPassword\" class=\"control-label\">Confirm Password</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"ConfirmPassword\" type=\"password\" name=\"ConfirmPassword\" class=\"form-control\"\r\n                                        value={this.state.ConfirmPassword} onChange={this.onChange} />\r\n                                    <span class=\"text-danger\">{this.state.Errors[\"ConfirmPassword\"]}</span>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"control-label\">Register As</label>\r\n                                    <div class=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                        <button id=\"example-dropdown\" class=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                            <span>{this.state.RegisterAs}</span>\r\n                                            <span class=\"caret\"></span>\r\n                                        </button>\r\n                                        <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                            <li><Link onClick={e => { this.state.RegisterAs = \"Driver\" }} onChange={this.onChange}>Driver</Link></li>\r\n                                            <li><Link onClick={e => { this.state.RegisterAs = \"Trader\" }} onChange={this.onChange}>Trader</Link></li>\r\n                                            <li><Link onClick={e => { this.state.RegisterAs = \"Broker\" }} onChange={this.onChange}>Broker</Link></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div class=\"checkbox\">\r\n                                        <label class=\"control-label\">\r\n                                            <input ref=\"agreementCheckBox\" type=\"checkbox\" name=\"IsAgree\" value=\"\" onChange={this.onChange}></input>\r\n                                            <span>Agree with our </span>\r\n                                            <span>\r\n                                                <Link data-toggle=\"modal\" data-target=\"#terms\">Terms and Conditions</Link>\r\n                                            </span>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    {this.state.NullError &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">All fields are required.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                    {this.state.UsernameOrEmailTaken &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">Username or email is already taken.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                    {this.state.AgreementError &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">You must agree to our terms and conditions.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n\r\n                                    <label class=\"control-label\">Have an account? <span><Link to=\"/login\">Sign In Now!</Link></span></label>\r\n                                </div>\r\n                                <input type=\"submit\" value=\"Next\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"modal\" id=\"terms\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content animated fadeIn\">\r\n                            <div class=\"modal-header\">\r\n                                <h4 class=\"modal-title\" id=\"modal-sample-label\">Terms of Use</h4>\r\n                            </div>\r\n                            <div class=\"modal-body text-justify\">\r\n                                Your privacy is important to us. <span>{Strings.APP_NAME}</span>'s Privacy Statement describes the types of data we collect from you, how we use your Data, and the legal bases we have to process your Data. The Privacy Statement also describes how {String.APP_NAME} uses your content, which is information submitted by you to {Strings.APP_NAME} via the Services. Where processing is based on consent and to the extent permitted by law, by agreeing to these Terms, you consent to {Strings.APP_NAME}� collection, use and disclosure of your content and data as described in the privacy statement. In some cases, we will provide separate notice and request your consent as referenced in the privacy statement.\r\n                                </div>\r\n                            <div class=\"modal-footer\">\r\n                                <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Ok</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Register;","import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\"; \r\nimport { Required } from \"../../styles/MiscellaneousStyles\";\r\n\r\nimport {\r\n    EmailConfirmationCardBack,\r\n    Card,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass EmailConfirmation extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            ConfirmationCode: 0,\r\n            NullError: false,\r\n            InvalidCodeError: false,\r\n            Errors: {}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        const code = jwt_decode(localStorage.newCredentialsToken).Code; \r\n\r\n        if (this.state.ConfirmationCode === \"\") {\r\n\r\n            this.setState({\r\n                NullError: true,\r\n                InvalidCodeError: false,\r\n            });\r\n\r\n            return;\r\n        }\r\n        else if (this.state.ConfirmationCode != code) {\r\n\r\n            this.setState({\r\n                NullError: false,\r\n                InvalidCodeError: true,\r\n            });\r\n\r\n            return;\r\n        }\r\n        else {\r\n            localStorage.setItem(\"verifiedCredentialsToken\", localStorage.newCredentialsToken);\r\n            localStorage.removeItem(\"newCredentialsToken\");\r\n            this.props.history.push(\"/setupAccount\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.newCredentialsToken) {\r\n            this.props.history.push(\"/register\");\r\n            return <a />\r\n        }\r\n        else {\r\n            return (\r\n                <div class=\"middle\" style={EmailConfirmationCardBack}>\r\n                    <div class=\"theme-default animated fadeIn\" style={Card}>\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/passcode.png\" alt=\"passcode.png\" height=\"60\" />\r\n                            <div class=\"type-h3\" style={CardTitle}>Email Confirmation</div>\r\n                            <div class=\"type-sh3\">We delivered a confirmation code to your email.</div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"ConfirmationCode\" class=\"control-label\">Confirmation Code</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"ConfirmationCode\" type=\"text\" name=\"ConfirmationCode\" class=\"form-control\"\r\n                                        value={this.state.ConfirmationCode} onChange={this.onChange} />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    {this.state.NullError &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">Confirmation code is required.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                    {this.state.InvalidCodeError &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">Invalid code.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <input type=\"submit\" value=\"Next\" class=\"btn btn-primary\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport default EmailConfirmation;","import React, { Component } from \"react\";\r\nimport { setupDriverAccount } from \"../drivers/DriverFunctions\";\r\nimport { setupTraderAccount } from \"../traders/TraderFunctions\";\r\nimport { Required } from \"../../styles/MiscellaneousStyles\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport {\r\n    AccountSetupCardBack,\r\n    CardLarge,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass AccountSetup extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            Email: \"\",\r\n            Password: \"\",\r\n            RegisterAs: \"\",\r\n\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            DateOfBirth: \"\",\r\n            Gender: \"Male\",\r\n            Nationality: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n\r\n            ValidFirstName: false,\r\n            ValidLastName: false,\r\n            ValidDateOfBirth: false,\r\n            ValidNationality: false,\r\n            ValidAddress: false,\r\n            ValidPhoneNumber: false,\r\n\r\n            ValidForm: false,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                DateOfBirth: \"\",\r\n                Nationality: \"\",\r\n                Address: \"\",\r\n                PhoneNumber: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFirstName = this.state.ValidFirstName;\r\n        let ValidLastName = this.state.ValidLastName;\r\n        let ValidDateOfBirth = this.state.ValidDateOfBirth;\r\n        let ValidNationality = this.state.ValidNationality;\r\n        let ValidAddress = this.state.ValidAddress;\r\n        let ValidPhoneNumber = this.state.ValidPhoneNumber;\r\n\r\n        switch (field) {\r\n            case \"FirstName\":\r\n                ValidFirstName = ((value !== \"\") &&\r\n                    (value.match(/^[a-zA-Z ]+$/)));\r\n                Errors.FirstName = ValidFirstName ? \"\" : \"First name is invalid.\";\r\n                break;\r\n            case \"LastName\":\r\n                ValidLastName = ((value !== \"\") &&\r\n                    (value.match(/^[a-zA-Z ]+$/)));\r\n                Errors.LastName = ValidLastName ? \"\" : \"Last name is invalid.\";\r\n                break;\r\n            case \"DateOfBirth\":\r\n                ValidDateOfBirth = (new Date(value) < new Date());\r\n                Errors.DateOfBirth = ValidDateOfBirth ? \"\" : \"Your Birthday must be earlier than today.\";\r\n                break;\r\n            case \"Nationality\":\r\n                ValidNationality = ((value !== \"\") &&\r\n                    (value.match(/^[a-zA-Z ]+$/)));\r\n                Errors.Nationality = ValidNationality ? \"\" : \"Nationality is invalid.\";\r\n                break;\r\n            case \"Address\":\r\n                ValidAddress = (value !== \"\");\r\n                Errors.Address = ValidAddress ? \"\" : \"Address is required.\";\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = value.match(/^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/);\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFirstName: ValidFirstName,\r\n            ValidLastName: ValidLastName,\r\n            ValidDateOfBirth: ValidDateOfBirth,\r\n            ValidNationality: ValidNationality,\r\n            ValidAddress: ValidAddress,\r\n            ValidPhoneNumber: ValidPhoneNumber\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidFirstName &&\r\n                    this.state.ValidLastName &&\r\n                    this.state.ValidDateOfBirth &&\r\n                    this.state.ValidNationality &&\r\n                    this.state.ValidAddress &&\r\n                    this.state.ValidPhoneNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (localStorage.verifiedCredentialsToken) {\r\n            const decoded = jwt_decode(localStorage.verifiedCredentialsToken);\r\n            this.state.Username = decoded.Username;\r\n            this.state.Email = decoded.Email;\r\n            this.state.Password = decoded.Password;\r\n            this.state.RegisterAs = decoded.RegisterAs;\r\n        }\r\n\r\n        const newUser = {\r\n            Username: this.state.Username,\r\n            Email: this.state.Email,\r\n            Password: this.state.Password,\r\n            RegisterAs: this.state.RegisterAs,\r\n            FirstName: this.state.FirstName,\r\n            LastName: this.state.LastName,\r\n            DateOfBirth: this.state.DateOfBirth,\r\n            Gender: this.state.Gender,\r\n            Address: this.state.Address,\r\n            PhoneNumber: this.state.PhoneNumber,\r\n            Nationality: this.state.Nationality,\r\n        }\r\n\r\n        if (newUser.RegisterAs == \"Driver\") {\r\n            await setupDriverAccount(newUser).then(response => {\r\n                localStorage.removeItem(\"verifiedCredentialsToken\");\r\n                localStorage.setItem(\"IsCreatedSuccessfully\", true);\r\n                this.props.history.push(\"/congratulations\");\r\n            });\r\n        }\r\n        if (newUser.RegisterAs == \"Trader\" || newUser.RegisterAs == \"Broker\") {\r\n            await setupTraderAccount(newUser).then(response => {\r\n                localStorage.removeItem(\"verifiedCredentialsToken\");\r\n                localStorage.setItem(\"IsCreatedSuccessfully\", true);\r\n                this.props.history.push(\"/congratulations\");\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.verifiedCredentialsToken) {\r\n            this.props.history.push(\"/register\");\r\n            return <a />\r\n        }\r\n        else {\r\n            return (\r\n                <div class=\"middle\" style={AccountSetupCardBack}>\r\n                    <div class=\"theme-default animated fadeIn\" style={CardLarge}>\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/create_account.png\" atl=\"create_account.png\" height=\"60\" />\r\n                            <div class=\"type-h3\" style={CardTitle}>\r\n                                Create Account\r\n                                </div>\r\n                            <div class=\"type-sh3\">\r\n                                Just one more step, and you're done!\r\n                                </div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-8\">\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"FirstName\" class=\"control-label\">First Name</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"FirstName\" autocomplete=\"off\"\r\n                                                value={this.state.FirstName} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.FirstName}</span>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"LastName\" class=\"control-label\">Last Name</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"LastName\" autocomplete=\"off\"\r\n                                                value={this.state.LastName} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.LastName}</span>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"DateOfBirth\" class=\"control-label\">Date of Birth</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"date\" class=\"form-control\" name=\"DateOfBirth\" autocomplete=\"off\"\r\n                                                value={this.state.DateOfBirth} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.DateOfBirth}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-8\">\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"Gender\" class=\"control-label\">Gender</label>\r\n                                            <div class=\"dropdown\" style={{ width: \"193px\", maxWidth: \"296px\", }}>\r\n                                                <button id=\"example-dropdown\" class=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                    aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                    <span>{this.state.Gender}</span>\r\n                                                    <span class=\"caret\"></span>\r\n                                                </button>\r\n                                                <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                    <li><a onClick={() => { this.setState({ Gender: \"Male\" }); }}>Male</a></li>\r\n                                                    <li><a onClick={() => { this.setState({ Gender: \"Female\" }); }}>Female</a></li>\r\n                                                </ul>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"Nationality\" class=\"control-label\">Nationality</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"Nationality\" autocomplete=\"off\"\r\n                                                value={this.state.Nationality} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.Nationality}</span>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"PhoneNumber\" class=\"control-label\">Phone Number</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autocomplete=\"off\"\r\n                                                placeholder=\"+XXXXXXXXXXXX\" value={this.state.PhoneNumber} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.PhoneNumber}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-8\">\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"Address\" class=\"control-label\">Address</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <textarea class=\"form-control\" rows=\"5\" name=\"Address\" autocomplete=\"off\"\r\n                                                value={this.state.Address} onChange={this.onChange}></textarea>\r\n                                            <span class=\"text-danger\">{this.state.Errors.Address}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"submit\" value=\"Create\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport default AccountSetup;","import React, { Component } from \"react\";\r\nimport { CongratulationsCardBack, CardXLarge } from \"../../styles/CardStyles\";\r\n\r\nclass EmailConfirmation extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n        localStorage.removeItem(\"IsCreatedSuccessfully\");\r\n        this.props.history.push(\"/login\");\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.IsCreatedSuccessfully) {\r\n            this.props.history.push(\"/register\");\r\n            return <a />\r\n        }\r\n        else {\r\n            return (\r\n                <div class=\"middle\" style={CongratulationsCardBack}>\r\n                    <div class=\"jumbotron theme-default animated fadeIn\" style={CardXLarge}>\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                    <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        alt=\"congrats.png\" src=\"./images/congrats.png\" data-source-index=\"2\" />\r\n                                </div>\r\n                                <div class=\"col-md-12 col-md-pull-12\">\r\n                                    <div class=\"type-h3\">Congratulations</div>\r\n                                    <div class=\"type-sh3\">Your account has been created successfully.</div>\r\n                                    <br />\r\n                                    <form noValidate onSubmit={this.onSubmit}>\r\n                                        <input type=\"submit\" value=\"Sign In\" class=\"btn btn-primary\" />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>);\r\n        }\r\n    }\r\n};\r\n\r\nexport default EmailConfirmation;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { getData, uploadDriverProfilePhoto } from \"../../DriverFunctions\";\r\nimport Strings from \"../../../../res/strings\";\r\n\r\nclass ProfilePhoto extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Image: null,\r\n            PhotoURL: \"./images/defaultProfilePhoto.png\",\r\n            UploadProgress: null\r\n        };\r\n\r\n        this.onImageUpload = this.onImageUpload.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"ProfilePhoto\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Profile photo found.\") {\r\n                    let profilePhoto = response.ProfilePhoto;\r\n\r\n                    this.setState({\r\n                        PhotoURL: profilePhoto.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.state({\r\n                        PhotoURL: \"./images/defaultProfilePhoto.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onImageUpload = async event => {\r\n        this.state.Image = event.target.files[0];\r\n        const formData = new FormData();\r\n\r\n        try {\r\n            formData.append(\"Image\", this.state.Image, this.state.Image.name);\r\n\r\n            await axios.post(Strings.IMAGE_UPLOADER, formData, {\r\n                onUploadProgress: event => {\r\n                    this.setState({\r\n                        UploadProgress: <div className=\"progress-bar\">\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                        </div>\r\n                    });\r\n                }\r\n            }).then(async response => {\r\n                response = response.data;\r\n\r\n                if (response.message === \"Image uploaded successfully.\") {\r\n                    const driverProfilePhoto = {\r\n                        Token: localStorage.Token,\r\n                        PhotoURL: response.imageUrl,\r\n                        FileName: response.filename\r\n                    };\r\n\r\n                    let photoURL = response.imageUrl;\r\n\r\n                    await uploadDriverProfilePhoto(driverProfilePhoto).then(response => {\r\n                        if (response.Message === \"Profile photo is updated.\" ||\r\n                            response.Message === \"Profile photo is added.\") {\r\n\r\n                            this.setState({\r\n                                PhotoURL: photoURL,\r\n                                UploadProgress: null\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }).catch(() => {\r\n                this.setState({\r\n                    ImageURL: \"./images/defaultProfilePhoto.png\",\r\n                    UploadProgress: null\r\n                });\r\n            });\r\n        }\r\n        catch (exception) {\r\n            this.setState({\r\n                UploadProgress: null\r\n            });\r\n\r\n            return;\r\n        }\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <input type=\"file\" onChange={this.onImageUpload} style={{ display: \"none\", }} ref={fileInput => this.fileInput = fileInput} />\r\n            <figure className=\"media\">\r\n                <div className=\"media-img media-img-has-play ratio-1-1\">\r\n                    <a href=\"#\" onClick={() => this.fileInput.click()}>\r\n                        <img style={{\r\n                            border: \"5px solid #3A3A3C\"\r\n                        }}\r\n                            src={this.state.PhotoURL} alt=\"ProfilePhoto.png\" />\r\n                        <i className=\"glyph glyph-edit\"></i>\r\n                    </a>\r\n                </div>\r\n            </figure>\r\n            {this.state.UploadProgress}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ProfilePhoto;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Strings from \"../res/strings\";\r\n\r\nclass ImageUploader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Image: null,\r\n            UploadProgress: null,\r\n        };\r\n\r\n        this.onImageUpload = this.onImageUpload.bind(this);\r\n    }\r\n\r\n    onImageUpload = event => {\r\n        this.state.Image = event.target.files[0];\r\n\r\n        if (this.state.Image) {\r\n            let mimeType = this.state.Image.type;\r\n\r\n            if (!mimeType.startsWith(\"image\")) {\r\n                this.props.OnInvalidImageSelected();\r\n                return;\r\n            }\r\n        }\r\n\r\n        const formData = new FormData();\r\n\r\n        try {\r\n            formData.append(\"Image\", this.state.Image, this.state.Image.name);\r\n        }\r\n        catch (exception) {\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        axios.post(Strings.IMAGE_UPLOADER, formData, {\r\n            onUploadProgress: event => {\r\n                this.setState({\r\n                    UploadProgress: (\r\n                        <div className=\"progress-bar\">\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                        </div>\r\n                    ),\r\n                });\r\n            }\r\n        }).then(async response => {\r\n            this.props.OnImageUploaded(response.data);\r\n\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n        }).catch((error) => {\r\n            this.props.OnImageUploaded(error);\r\n\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async e => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"file\" onChange={this.onImageUpload} style={{ display: \"none\", }} ref={fileInput => this.fileInput = fileInput} />\r\n                <figure className=\"media\">\r\n                    <div className=\"media-img media-img-has-play ratio-1-1\">\r\n                        <a href=\"#\" onClick={() => this.fileInput.click()}>\r\n                            <img src={this.props.Source} alt=\"ProfilePhoto.png\"\r\n                                style={{\r\n                                    border: \"5px solid #3A3A3C\"\r\n                                }} />\r\n                            <i className=\"glyph glyph-edit\"></i>\r\n                        </a>\r\n                    </div>\r\n                </figure>\r\n                {/*<figure className=\"media\">\r\n                    <div className=\"media-img media-img-has-play ratio-movie\" style={{\r\n                        width: this.props.Width,\r\n                        height: this.props.Height,\r\n                        border: \"0px\",\r\n                        padding: \"0px\",\r\n                        border: \"5px solid #3A3A3C\"\r\n                    }}>\r\n                        <a onClick={() => this.fileInput.click()}>\r\n                            <img src={this.props.Source} alt=\"dafault-image.png\" />\r\n                            <i className=\"glyph glyph-edit\"></i>\r\n                        </a>\r\n                    </div>\r\n                </figure>*/}\r\n                {this.state.UploadProgress}\r\n            </div>\r\n                \r\n        );\r\n    }\r\n};\r\n\r\nexport default ImageUploader;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addDrivingLicence } from \"../../../../DriverFunctions.js\";\r\n\r\nclass AddDrivingLicenceDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LicenceNumber: \"\",\r\n            Type: \"\",\r\n            ReleaseDate: new Date(),\r\n            ExpiryDate: new Date(),\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidLicenceNumber: false,\r\n            ValidType: false,\r\n            ValidReleaseDate: false,\r\n            ValidExpiryDate: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                LicenceNumber: \"\",\r\n                Type: \"\",\r\n                ReleaseDate: \"\",\r\n                ExpiryDate: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidLicenceNumber = this.state.ValidLicenceNumber;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidReleaseDate = this.state.ValidReleaseDate;\r\n        let ValidExpiryDate = this.state.ValidExpiryDate;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"LicenceNumber\":\r\n                ValidLicenceNumber = (value !== \"\");\r\n                Errors.LicenceNumber = ValidLicenceNumber ? \"\" : \"Licence number is required.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Licence type is required\";\r\n                break;\r\n            case \"ReleaseDate\":\r\n                ValidReleaseDate = (new Date(value).getTime() < new Date(this.state.ExpiryDate).getTime());\r\n                Errors.ReleaseDate = ValidReleaseDate ? \"\" : \"Release date must be earlier than Expiry date.\";\r\n                break;\r\n            case \"ExpiryDate\":\r\n                ValidExpiryDate = (new Date(value).getTime() > new Date().getTime());\r\n                Errors.ExpiryDate = ValidExpiryDate ? \"\" : \"Expiry Date must be later than today.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidLicenceNumber: ValidLicenceNumber,\r\n            ValidType: ValidType,\r\n            ValidReleaseDate: ValidReleaseDate,\r\n            ValidExpiryDate: ValidExpiryDate,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidLicenceNumber &&\r\n                        this.state.ValidType &&\r\n                        this.state.ValidReleaseDate &&\r\n                        this.state.ValidExpiryDate &&\r\n                        this.state.ValidPhotoURL,\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newDrivingLicence = {\r\n            Token: localStorage.Token,\r\n            LicenceNumber: this.state.LicenceNumber,\r\n            Type: this.state.Type,\r\n            ReleaseDate: this.state.ReleaseDate,\r\n            ExpiryDate: this.state.ExpiryDate,\r\n            PhotoURL: this.state.PhotoURL,\r\n        }\r\n\r\n        console.log(\"Going to add the Driving Licence.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addDrivingLicence(newDrivingLicence).then(response => {\r\n            if (response.Message === \"Driving Licence is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div className=\"modal\" id=\"add-driving-licence-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Add Driving Licence</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"DrivingLicence\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Licence Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"LicenceNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LicenceNumber} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LicenceNumber}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Licence Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Release Date</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"ReleaseDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ReleaseDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ReleaseDate}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Expiry Date</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"ExpiryDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ExpiryDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ExpiryDate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddDrivingLicenceDialog;","import React, { Component } from \"react\";\r\nimport AddDrivingLicenceDialog from \"./AddDrivingLicenceDialog.js\";\r\n\r\nclass AddDrivingLicenceButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddDrivingLicenceDialog: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-driving-licence-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddDrivingLicenceDialog: (<AddDrivingLicenceDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddDrivingLicenceDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />),\r\n                        });\r\n                    }}>\r\n                    <span className=\"fas fa-plus\" aria-hidden=\"true\"></span> Driving Licence\r\n                </button>\r\n                {this.state.AddDrivingLicenceDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddDrivingLicenceButton;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addEntryExitCard } from \"../../../../DriverFunctions.js\";\r\n\r\nclass AddEntryExitCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            EntryExitNumber: \"\",\r\n            Type: \"Simple\",\r\n            ReleaseDate: new Date(),\r\n            NumberOfMonths: \"\",\r\n\r\n            ValidEntryExitNumber: false,\r\n            ValidReleaseDate: false,\r\n            ValidNumberOfMonths: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                EntryExitNumber: \"\",\r\n                ReleaseDate: \"\",\r\n                NumberOfMonths: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidEntryExitNumber = this.state.ValidEntryExitNumber;\r\n        let ValidReleaseDate = this.state.ValidReleaseDate;\r\n        let ValidNumberOfMonths = this.state.ValidNumberOfMonths;\r\n\r\n        switch (field) {\r\n            case \"EntryExitNumber\":\r\n                ValidEntryExitNumber = (value !== \"\");\r\n                Errors.EntryExitNumber = ValidEntryExitNumber ? \"\" : \"Entry/exit number is required.\";\r\n                break;\r\n            case \"ReleaseDate\":\r\n                ValidReleaseDate = (new Date(value).getTime() <= new Date());\r\n                Errors.ReleaseDate = ValidReleaseDate ? \"\" : \"Release date must not be later than today.\";\r\n                break;\r\n            case \"NumberOfMonths\":\r\n                ValidNumberOfMonths = (value !== \"\");\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : \"Number of months is required.\";\r\n\r\n                if (Errors.NumberOfMonths !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNumberOfMonths = (value > 0)\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : \"Number of months must be greater than 0.\";\r\n\r\n                if (Errors.NumberOfMonths !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                let releaseDate = new Date(this.state.ReleaseDate);\r\n                let expiryDate = new Date(releaseDate.setMonth(releaseDate.getMonth() + value));\r\n\r\n                ValidNumberOfMonths = (expiryDate > new Date());\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : `Your card is expired if it is for ${value} months. Your card might be expired on ${expiryDate.toLocaleString()}`;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidEntryExitNumber: ValidEntryExitNumber,\r\n            ValidReleaseDate: ValidReleaseDate,\r\n            ValidNumberOfMonths: ValidNumberOfMonths,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidEntryExitNumber &&\r\n                        this.state.ValidReleaseDate &&\r\n                        this.state.ValidNumberOfMonths\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newEntryExitCard = {\r\n            Token: localStorage.Token,\r\n            EntryExitNumber: this.state.EntryExitNumber,\r\n            Type: this.state.Type,\r\n            ReleaseDate: this.state.ReleaseDate,\r\n            NumberOfMonths: this.state.NumberOfMonths\r\n        };\r\n\r\n        console.log(\"Going to add Entry/Exit Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addEntryExitCard(newEntryExitCard).then(response => {\r\n            if (response.Message === \"Entry/Exit card is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div className=\"modal\" id=\"add-entry-exit-card-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Add Entry/Exit Card</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Entry/Exit Number</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"EntryExitNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.EntryExitNumber} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.EntryExitNumber}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Card Type</label><br />\r\n                                                <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                    <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                        aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                        <span>{this.state.Type}</span>\r\n                                                        <span className=\"caret\"></span>\r\n                                                    </button>\r\n                                                    <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                        <li><a onClick={() => { this.setState({ Type: \"Simple\" }); }}>Simple</a></li>\r\n                                                        <li><a onClick={() => { this.setState({ Type: \"Multiple\" }); }}>Multiple</a></li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Release Date</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"date\" name=\"ReleaseDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.ReleaseDate} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.ReleaseDate}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Number of Months</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"NumberOfMonths\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.NumberOfMonths} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.NumberOfMonths}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddEntryExitCardDialog;","import React, { Component } from \"react\";\r\nimport AddEntryExitCardDialog from \"./AddEntryExitCardDialog.js\";\r\n\r\nclass AddEntryExitCardButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddEntryExitCardDialog: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-entry-exit-card-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddEntryExitCardDialog: <AddEntryExitCardDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddEntryExitCardDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />\r\n                        });\r\n                    }}>\r\n                    <span className=\"fas fa-plus\" aria-hidden=\"true\"></span> Entry/Exit Card</button>\r\n                {this.state.AddEntryExitCardDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddEntryExitCardButton;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addIdentityCard } from \"../../../../DriverFunctions.js\";\r\n\r\nclass AddIdentityCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidIDNumber: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                IDNumber: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidIDNumber = this.state.ValidIDNumber;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"IDNumber\":\r\n                ValidIDNumber = (value !== \"\");\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidIDNumber = (value >= 1000000000 && value <= 9999999999);\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number must be 10-digits long.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidIDNumber: ValidIDNumber,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidIDNumber &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newIdentityCard = {\r\n            Token: localStorage.Token,\r\n            IDNumber: this.state.IDNumber,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to add Identity Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addIdentityCard(newIdentityCard).then(response => {\r\n            if (response.Message === \"Identity card is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div className=\"modal\" id=\"add-identity-card-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Add Identity Card</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    Height=\"220px\"\r\n                                                    Width=\"220px\"\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }}\r\n                                                    ImageCategory=\"IdentityCard\" />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">ID Number</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"IDNumber\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                    value={this.state.IDNumber} onChange={this.onChange} min=\"1000000000\" max=\"9999999999\" />\r\n                                                <span className=\"text-danger\">{this.state.Errors.IDNumber}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddIdentityCardDialog;","import React, { Component } from \"react\";\r\nimport AddIdentityCardDialog from \"./AddIdentityCardDialog.js\";\r\n\r\nclass AddIdentityCardButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddIdentityCardDialog: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-identity-card-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddIdentityCardDialog: <AddIdentityCardDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddIdentityCardDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />,\r\n                        });\r\n                    }}>\r\n                    <span className=\"fas fa-plus\" aria-hidden=\"true\"></span> Identity Card</button>\r\n                {this.state.AddIdentityCardDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddIdentityCardButton;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateDrivingLicence } from \"../../../../DriverFunctions.js\";\r\n\r\nclass EditDrivingLicenceDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LicenceNumber: \"\",\r\n            Type: \"\",\r\n            ReleaseDate: new Date(),\r\n            ExpiryDate: new Date(),\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidLicenceNumber: true,\r\n            ValidType: true,\r\n            ValidReleaseDate: true,\r\n            ValidExpiryDate: true,\r\n            ValidPhotoURL: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                LicenceNumber: \"\",\r\n                Type: \"\",\r\n                ReleaseDate: \"\",\r\n                ExpiryDate: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DrivingLicence\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Driving licence found.\") {\r\n                    let drivingLicence = response.DrivingLicence;\r\n\r\n                    this.setState({\r\n                        DrivingLicenceID: drivingLicence.DrivingLicenceID,\r\n                        LicenceNumber: drivingLicence.LicenceNumber,\r\n                        Type: drivingLicence.Type,\r\n                        ReleaseDate: drivingLicence.ReleaseDate,\r\n                        ExpiryDate: drivingLicence.ExpiryDate,\r\n                        PhotoURL: drivingLicence.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DrivingLicenceID: \"\",\r\n                        LicenceNumber: \"\",\r\n                        Type: \"\",\r\n                        ReleaseDate: new Date(),\r\n                        ExpiryDate: new Date(),\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidLicenceNumber = this.state.ValidLicenceNumber;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidReleaseDate = this.state.ValidReleaseDate;\r\n        let ValidExpiryDate = this.state.ValidExpiryDate;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"LicenceNumber\":\r\n                ValidLicenceNumber = (value !== \"\");\r\n                Errors.LicenceNumber = ValidLicenceNumber ? \"\" : \"Licence number is required.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Licence type is required\";\r\n                break;\r\n            case \"ReleaseDate\":\r\n                ValidReleaseDate = (new Date(value).getTime() < new Date(this.state.ExpiryDate).getTime());\r\n                Errors.ReleaseDate = ValidReleaseDate ? \"\" : \"Release date must be earlier than Expiry date.\";\r\n                break;\r\n            case \"ExpiryDate\":\r\n                ValidExpiryDate = (new Date(value).getTime() > new Date().getTime());\r\n                Errors.ExpiryDate = ValidExpiryDate ? \"\" : \"Expiry Date must be later than today.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidLicenceNumber: ValidLicenceNumber,\r\n            ValidType: ValidType,\r\n            ValidReleaseDate: ValidReleaseDate,\r\n            ValidExpiryDate: ValidExpiryDate,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidLicenceNumber &&\r\n                        this.state.ValidType &&\r\n                        this.state.ValidReleaseDate &&\r\n                        this.state.ValidExpiryDate &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedDrivingLicence = {\r\n            Token: localStorage.Token,\r\n            LicenceNumber: this.state.LicenceNumber,\r\n            Type: this.state.Type,\r\n            ReleaseDate: this.state.ReleaseDate,\r\n            ExpiryDate: this.state.ExpiryDate,\r\n            PhotoURL: this.state.PhotoURL,\r\n        }\r\n\r\n        console.log(\"Going to update the Driving Licence.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateDrivingLicence(updatedDrivingLicence).then(response => {\r\n            if (response.Message === \"Driving Licence is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id=\"edit-driving-licence-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Driving Licence</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"DrivingLicence\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Licence Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"LicenceNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LicenceNumber} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LicenceNumber}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Licence Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Release Date</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"ReleaseDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ReleaseDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ReleaseDate}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Expiry Date</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"ExpiryDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ExpiryDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ExpiryDate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default EditDrivingLicenceDialog;","import React, { Component } from \"react\";\r\nimport EditDriverLicenceDialog from \"./EditDrivingLicenceDialog.js\";\r\nimport { getData, deleteDrivingLicence } from \"../../../../DriverFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass DrivingLicenceListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DrivingLicenceID: \"\",\r\n            LicenceNumber: \"\",\r\n            Type: \"\",\r\n            ReleaseDate: \"\",\r\n            ExpiryDate: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n            EditDrivingLicenceDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedDrivingLicence = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete Driving Licence...`);\r\n\r\n        await deleteDrivingLicence(discardedDrivingLicence).then(response => {\r\n            if (response.Message === \"Driving Licence is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DrivingLicence\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Driving licence found.\") {\r\n                    let drivingLicence = response.DrivingLicence;\r\n\r\n                    this.setState({\r\n                        DrivingLicenceID: drivingLicence.DrivingLicenceID,\r\n                        LicenceNumber: drivingLicence.LicenceNumber,\r\n                        Type: drivingLicence.Type,\r\n                        ReleaseDate: drivingLicence.ReleaseDate,\r\n                        ExpiryDate: drivingLicence.ExpiryDate,\r\n                        PhotoURL: drivingLicence.PhotoURL\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DrivingLicenceID: \"\",\r\n                        LicenceNumber: \"\",\r\n                        Type: \"\",\r\n                        ReleaseDate: \"\",\r\n                        ExpiryDate: \"\",\r\n                        PhotoURL: \"./images/default_image.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#driving-licence-${this.state.DrivingLicenceID}`}>\r\n                    <div className=\"entity-list\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\" style={{ borderRadius: \"50%\" }}>\r\n                                <span className=\"glyph glyph-add\"></span>\r\n                                <span className=\"glyph glyph-remove\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">\r\n                                    <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>{`${this.props.Index}.`}</span>\r\n                                </div>\r\n                                <div className=\"content-text-secondary\">\r\n                                    <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>DRIVING LICENCE</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"collapse\" id={`driving-licence-${this.state.DrivingLicenceID}`}>\r\n                    <div className=\"jumbotron theme-default\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        src={this.state.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                            overflow: \"hidden\",\r\n                                            border: \"5px solid #3A3A3C\",\r\n                                            margin: \"5px\"\r\n                                        }} />\r\n                                </div>\r\n                                <div className=\"col-md-18\">\r\n                                    <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Driving Licence</div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-hashtag\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Licence Number</div>\r\n                                                        <div className=\"content-text-secondary\">{this.state.LicenceNumber}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-star-of-life\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Licence Type</div>\r\n                                                        <div className=\"content-text-secondary\">{this.state.Type}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-calendar\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Release Date</div>\r\n                                                        <div className=\"content-text-secondary\">{this.state.ReleaseDate}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-calendar\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Expiry Date</div>\r\n                                                        <div className=\"content-text-secondary\">{this.state.ExpiryDate}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary\"\r\n                            data-toggle=\"modal\"\r\n                            data-target=\"#edit-driving-licence-dialog\"\r\n                            onMouseDown={() => {\r\n                                this.setState({\r\n                                    EditDrivingLicenceDialog: <EditDriverLicenceDialog\r\n                                        OnCancel={() => {\r\n                                            this.setState({\r\n                                                EditDrivingLicenceDialog: null\r\n                                            });\r\n                                        }}\r\n                                        OnOK={cancelButton => {\r\n                                            cancelButton.click();\r\n                                            this.onComponentUpdated();\r\n                                        }} />\r\n                                });\r\n                            }}>Edit</button>\r\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                    </div>\r\n                </div>             \r\n                {this.state.Preloader}\r\n                {this.state.EditDrivingLicenceDialog}\r\n            </li>        \r\n        );\r\n    }\r\n};\r\n\r\nexport default DrivingLicenceListItem;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateEntryExitCard } from \"../../../../DriverFunctions.js\";\r\n\r\nclass EditEntryExitCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            EntryExitNumber: \"\",\r\n            Type: \"Simple\",\r\n            ReleaseDate: new Date(),\r\n            NumberOfMonths: \"\",\r\n\r\n            ValidEntryExitNumber: true,\r\n            ValidReleaseDate: true,\r\n            ValidNumberOfMonths: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                EntryExitNumber: \"\",\r\n                ReleaseDate: \"\",\r\n                NumberOfMonths: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"EntryExitCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Entry/exit card found.\") {\r\n                    let entryExitCard = response.EntryExitCard;\r\n\r\n                    this.setState({\r\n                        EntryExitNumber: entryExitCard.EntryExitNumber,\r\n                        Type: entryExitCard.Type,\r\n                        ReleaseDate: entryExitCard.ReleaseDate,\r\n                        NumberOfMonths: entryExitCard.NumberOfMonths\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        EntryExitNumber: \"\",\r\n                        Type: \"Simple\",\r\n                        ReleaseDate: new Date(),\r\n                        NumberOfMonths: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidEntryExitNumber = this.state.ValidEntryExitNumber;\r\n        let ValidReleaseDate = this.state.ValidReleaseDate;\r\n        let ValidNumberOfMonths = this.state.ValidNumberOfMonths;\r\n\r\n        switch (field) {\r\n            case \"EntryExitNumber\":\r\n                ValidEntryExitNumber = (value !== \"\");\r\n                Errors.EntryExitNumber = ValidEntryExitNumber ? \"\" : \"Entry/exit number is required.\";\r\n                break;\r\n            case \"ReleaseDate\":\r\n                ValidReleaseDate = (new Date(value).getTime() <= new Date());\r\n                Errors.ReleaseDate = ValidReleaseDate ? \"\" : \"Release date must not be later than today.\";\r\n                break;\r\n            case \"NumberOfMonths\":\r\n                ValidNumberOfMonths = (value !== \"\");\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : \"Number of months is required.\";\r\n\r\n                if (Errors.NumberOfMonths !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNumberOfMonths = (value > 0)\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : \"Number of months must be greater than 0.\";\r\n\r\n                if (Errors.NumberOfMonths !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                let releaseDate = new Date(this.state.ReleaseDate);\r\n                let expiryDate = new Date(releaseDate.setMonth(releaseDate.getMonth() + value));\r\n\r\n                ValidNumberOfMonths = (expiryDate > new Date());\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : `Your card is expired if it is for ${value} months. Your card might be expired on ${expiryDate.toLocaleString()}`;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidEntryExitNumber: ValidEntryExitNumber,\r\n            ValidReleaseDate: ValidReleaseDate,\r\n            ValidNumberOfMonths: ValidNumberOfMonths,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidEntryExitNumber &&\r\n                    this.state.ValidReleaseDate &&\r\n                    this.state.ValidNumberOfMonths\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedEntryExitCard = {\r\n            Token: localStorage.Token,\r\n            EntryExitNumber: this.state.EntryExitNumber,\r\n            Type: this.state.Type,\r\n            ReleaseDate: this.state.ReleaseDate,\r\n            NumberOfMonths: this.state.NumberOfMonths\r\n        };\r\n\r\n        console.log(\"Going to update Entry/Exit Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateEntryExitCard(updatedEntryExitCard).then(response => {\r\n            if (response.Message === \"Entry/Exit card is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal\" id=\"edit-entry-exit-card-dialog\"\r\n                tabindex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Edit Entry/Exit Card</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Entry/Exit Number</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"EntryExitNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.EntryExitNumber} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.EntryExitNumber}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Card Type</label><br />\r\n                                                <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                    <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                        aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                        <span>{this.state.Type}</span>\r\n                                                        <span className=\"caret\"></span>\r\n                                                    </button>\r\n                                                    <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                        <li><a onClick={() => {\r\n                                                            this.setState({ Type: \"Simple\" });\r\n                                                            this.validateField(\"\", \"\");\r\n                                                        }}>Simple</a></li>\r\n                                                        <li><a onClick={() => {\r\n                                                            this.setState({ Type: \"Multiple\" });\r\n                                                            this.validateField(\"\", \"\");\r\n                                                        }}>Multiple</a></li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Release Date</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"date\" name=\"ReleaseDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.ReleaseDate} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.ReleaseDate}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Number of Months</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"NumberOfMonths\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.NumberOfMonths} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.NumberOfMonths}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default EditEntryExitCardDialog;","import React, { Component } from \"react\";\r\nimport EditEntryExitCardDialog from \"./EditEntryExitCardDialog.js\";\r\nimport { getData, deleteEntryExitCard } from \"../../../../DriverFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass EntryExitCardListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            EntryExitCardID: \"\",\r\n            EntryExitNumber: \"\",\r\n            Type: \"Simple\",\r\n            ReleaseDate: \"\",\r\n            NumberOfMonths: \"\",\r\n\r\n            EditEntryExitCardDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedEntryExitCard = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete Exit/Entry card.`);\r\n\r\n        await deleteEntryExitCard(discardedEntryExitCard).then(response => {\r\n            if (response.Message === \"Entry/Exit card is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"EntryExitCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Entry/exit card found.\") {\r\n                    let entryExitCard = response.EntryExitCard;\r\n\r\n                    this.setState({\r\n                        EntryExitCardID: entryExitCard.EntryExitCardID,\r\n                        EntryExitNumber: entryExitCard.EntryExitNumber,\r\n                        Type: entryExitCard.Type,\r\n                        ReleaseDate: entryExitCard.ReleaseDate,\r\n                        NumberOfMonths: entryExitCard.NumberOfMonths,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        EntryExitCardID: \"\",\r\n                        EntryExitNumber: \"\",\r\n                        Type: \"Simple\",\r\n                        ReleaseDate: \"\",\r\n                        NumberOfMonths: \"\",\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n            <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#entry-exit-card-${this.state.EntryExitCardID}`}>\r\n                <div className=\"entity-list\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\" style={{ borderRadius: \"50%\" }}>\r\n                            <span className=\"glyph glyph-add\"></span>\r\n                            <span className=\"glyph glyph-remove\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>{`${this.props.Index}.`}</span>\r\n                            </div>\r\n                            <div className=\"content-text-secondary\">\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>ENTRY/EXIT CARD</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`entry-exit-card-${this.state.EntryExitCardID}`}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-24\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Entry/Exit Card</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Entry/Exit Number</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.EntryExitNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-star-of-life\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Entry/Exit Type</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.Type}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-calendar\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Release Date</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.ReleaseDate}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-calendar\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Number of Months</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.NumberOfMonths}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#edit-entry-exit-card-dialog\"\r\n                        onMouseDown={() => {\r\n                            this.setState({\r\n                                EditEntryExitCardDialog: <EditEntryExitCardDialog\r\n                                    OnCancel={() => {\r\n                                        this.setState({\r\n                                            EditEntryExitCardDialog: null\r\n                                        });\r\n                                    }}\r\n                                    OnOK={cancelButton => {\r\n                                        cancelButton.click();\r\n                                        this.onComponentUpdated();\r\n                                    }} />\r\n                            });\r\n                        }}>Edit</button>\r\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                </div>\r\n            </div>\r\n            {this.state.Preloader}\r\n            {this.state.EditEntryExitCardDialog}\r\n        </li>;\r\n    }\r\n};\r\n\r\nexport default EntryExitCardListItem;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateIdentityCard } from \"../../../../DriverFunctions.js\";\r\n\r\nclass EditIdentityCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidIDNumber: true,\r\n            ValidPhotoURL: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                IDNumber: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Identity card found.\") {\r\n                    let identityCard = response.IdentityCard;\r\n\r\n                    this.setState({\r\n                        IDNumber: identityCard.IDNumber,\r\n                        PhotoURL: identityCard.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        IDNumber: \"\",\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidIDNumber = this.state.ValidIDNumber;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"IDNumber\":\r\n                ValidIDNumber = (value !== \"\");\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidIDNumber = (value >= 1000000000 && value <= 9999999999);\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number must be 10-digits long.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidIDNumber: ValidIDNumber,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidIDNumber &&\r\n                    this.state.ValidPhotoURL\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedIdentityCard = {\r\n            Token: localStorage.Token,\r\n            IDNumber: this.state.IDNumber,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to update Identity Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateIdentityCard(updatedIdentityCard).then(response => {\r\n            if (response.Message === \"Identity card is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id=\"edit-identity-card-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Identity Card</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"IdentityCard\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">ID Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"IDNumber\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.IDNumber} onChange={this.onChange} min=\"1000000000\" max=\"99999999999\" />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.IDNumber}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default EditIdentityCardDialog;","import React, { Component } from \"react\";\r\nimport EditIdentityCardDialog from \"./EditIdentityCardDialog.js\";\r\nimport { getData, deleteIdentityCard } from \"../../../../DriverFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass IdentityCardListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IdentityCardID: \"\",\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            EditIdentityCardDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedIdentityCard = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete Identity Card.`);\r\n\r\n        await deleteIdentityCard(discardedIdentityCard).then(response => {\r\n            if (response.Message === \"Identity card is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Identity card found.\") {\r\n                    let identityCard = response.IdentityCard;\r\n\r\n                    this.setState({\r\n                        IdentityCardID: identityCard.IdentityCardID,\r\n                        IDNumber: identityCard.IDNumber,\r\n                        PhotoURL: identityCard.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        IdentityCardID: \"\",\r\n                        IDNumber: \"\",\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n            <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#identity-card-${this.state.IdentityCardID}`}>\r\n                <div className=\"entity-list\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\" style={{ borderRadius: \"50%\" }}>\r\n                            <span className=\"glyph glyph-add\"></span>\r\n                            <span className=\"glyph glyph-remove\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>{`${this.props.Index}.`}</span>\r\n                            </div>\r\n                            <div className=\"content-text-secondary\">\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>IDENTITY CARD</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`identity-card-${this.state.IdentityCardID}`}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={this.state.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Identity Card</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">ID Number</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.IDNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#edit-identity-card-dialog\"\r\n                        onMouseDown={() => {\r\n                            this.setState({\r\n                                EditIdentityCardDialog: (<EditIdentityCardDialog\r\n                                    OnCancel={() => {\r\n                                        this.setState({\r\n                                            EditIdentityCardDialog: null\r\n                                        });\r\n                                    }}\r\n                                    OnOK={cancelButton => {\r\n                                        cancelButton.click();\r\n                                        this.onComponentUpdated();\r\n                                    }} />)\r\n                            });\r\n                        }}>Edit</button>\r\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                </div>\r\n            </div> \r\n            {this.state.Preloader}\r\n            {this.state.EditIdentityCardDialog}\r\n        </li>;\r\n    }\r\n};\r\n\r\nexport default IdentityCardListItem;","import React, { Component } from \"react\";\r\nimport AddDrivingLicenceButton from \"./drivingLicence/AddDrivingLicenceButton.js\";\r\nimport AddEntryExitCardButton from \"./entryExitCard/AddEntryExitCardButton.js\";\r\nimport AddIdentityCardButton from \"./identityCard/AddIdentityCardButton.js\";\r\nimport DrivingLicenceListItem from \"./drivingLicence/DrivingLicenceListItem.js\"; \r\nimport EntryExitCardListItem from \"./entryExitCard/EntryExitCardListItem.js\";\r\nimport IdentityCardListItem from \"./identityCard/IdentityCardListItem.js\";\r\nimport { getData } from \"../../../DriverFunctions\";\r\n\r\nclass DocumentsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddDrivingLicenceButton: null,\r\n            AddEntryExitCardButton: null,\r\n            AddIdentityCardButton: null, \r\n            DrivingLicenceListItem: null,\r\n            EntryExitCardListItem: null,\r\n            IdentityCardListItem: null,\r\n        };\r\n\r\n        this.onDocumentsUpdated = this.onDocumentsUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onDocumentsUpdated();\r\n    }\r\n\r\n    onDocumentsUpdated = () => {\r\n        let index = 0;\r\n        let drivingLicence;\r\n        let entryExitCard;\r\n        let identityCard;\r\n\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DrivingLicence\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Driving licence found.\") {\r\n                    drivingLicence = response.DrivingLicence;\r\n                }\r\n                else {\r\n                    drivingLicence = undefined;\r\n                }\r\n\r\n                request = {\r\n                    Token: localStorage.Token,\r\n                    Get: \"EntryExitCard\"\r\n                };\r\n\r\n                getData(request).then(response => {\r\n                    if (response.Message === \"Entry/exit card found.\") {\r\n                        entryExitCard = response.EntryExitCard;\r\n                    }\r\n                    else {\r\n                        entryExitCard = undefined;\r\n                    }\r\n\r\n                    request = {\r\n                        Token: localStorage.Token,\r\n                        Get: \"IdentityCard\"\r\n                    };\r\n\r\n                    getData(request).then(response => {\r\n                        if (response.Message === \"Identity card found.\") {\r\n                            identityCard = response.IdentityCard;\r\n                        }\r\n                        else {\r\n                            identityCard = undefined;\r\n                        }\r\n\r\n                        (drivingLicence) ? this.setState({\r\n                            AddDrivingLicenceButton: null,\r\n                            DrivingLicenceListItem: <DrivingLicenceListItem\r\n                                Index={++index}\r\n                                OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                        }) : this.setState({\r\n                            AddDrivingLicenceButton: <AddDrivingLicenceButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                            DrivingLicenceListItem: null\r\n                        });\r\n\r\n                        (entryExitCard) ? this.setState({\r\n                            AddEntryExitCardButton: null,\r\n                            EntryExitCardListItem: <EntryExitCardListItem\r\n                                Index={++index}\r\n                                OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                        }) : this.setState({\r\n                            AddEntryExitCardButton: <AddEntryExitCardButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                            EntryExitCardListItem: null\r\n                        });\r\n\r\n                        (identityCard) ? this.setState({\r\n                            AddIdentityCardButton: null,\r\n                            IdentityCardListItem: <IdentityCardListItem\r\n                                Index={++index}\r\n                                OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                        }) : this.setState({\r\n                            AddIdentityCardButton: <AddIdentityCardButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                            IdentityCardListItem: null\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Documents</div>\r\n                <div style={{ padding: \"10px\", backgroundColor: \"#E5E5E5\" }}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-18 col-md-offset-2\"></div>\r\n                        <div className=\"col-md-4 text-right\">\r\n                            {this.state.AddDrivingLicenceButton}\r\n                            {this.state.AddEntryExitCardButton}\r\n                            {this.state.AddIdentityCardButton}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ol className=\"list-items\" style={{ marginTop: \"0px\" }}>\r\n                    {this.state.DrivingLicenceListItem}\r\n                    {this.state.EntryExitCardListItem}\r\n                    {this.state.IdentityCardListItem}\r\n                </ol>\r\n            </section>         \r\n        );\r\n    }\r\n};\r\n\r\nexport default DocumentsList;","import React, { Component } from \"react\";\r\n\r\nclass Rating extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div class={`rating ${this.props.Size} ${this.props.Color}`}>\r\n                <div class=\"rating-stars\">\r\n            <ul class=\"rating-stars-background\">\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                    </ul>\r\n                    <ul class=\"rating-stars-value\" style={{ width: `${this.props.Rating}%` }}>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                    </ul>\r\n                </div>\r\n                {this.props.Label ? <div class=\"rating-label rating-label-right\">{this.props.Label}</div> : null}\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Rating;","import React, { Component } from \"react\";\r\n\r\nclass PageHeading extends Component {\r\n    render() {\r\n        return <section>\r\n            <div style={{ backgroundColor: \"#1C6D6E\", padding: \"5px 5px 5px 20px\" }}>\r\n                <div className=\"sh1 color-light\" style={{ fontWeight: \"bold\" }}>{`/ ${this.props.Heading}`}</div>\r\n            </div>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#26525F\" }}></div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PageHeading;","import React, { Component } from \"react\";\r\nimport ProfilePhoto from \"./ProfilePhoto\";\r\nimport DocumentsList from \"./documents/DocumentsList.js\";\r\nimport Rating from \"../../../../controls/Rating\";\r\nimport { getData } from \"../../DriverFunctions.js\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Profile extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            Username: \"\",\r\n            Password: \"\",\r\n            Email: \"\",\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\",\r\n            Active: null,\r\n            RatingAndReviews: {},\r\n\r\n            WarningAlert: null,\r\n            Errors: {}\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Driver\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver found.\") {\r\n                    let driver = response.Driver;\r\n\r\n                    this.setState({\r\n                        Username: driver.Username,\r\n                        Password: driver.Password,\r\n                        Email: driver.Email,\r\n                        FirstName: driver.FirstName,\r\n                        LastName: driver.LastName,\r\n                        DateOfBirth: driver.DateOfBirth,\r\n                        Gender: driver.Gender,\r\n                        Address: driver.Address,\r\n                        PhoneNumber: driver.PhoneNumber,\r\n                        Nationality: driver.Nationality,\r\n                        Active: driver.Active,\r\n                        RatingAndReviews: response.RatingAndReviews\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Username: \"\",\r\n                        Password: \"\",\r\n                        Email: \"\",\r\n                        FirstName: \"\",\r\n                        LastName: \"\",\r\n                        Address: \"\",\r\n                        PhoneNumber: \"\",\r\n                        Gender: \"\",\r\n                        Nationality: \"\",\r\n                        DateOfBirth: \"\",\r\n                        Active: null,\r\n                        RatingAndReviews: {}\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const ratingAndReviews = this.state.RatingAndReviews;\r\n\r\n        return <section>\r\n            <PageHeading Heading=\"PROFILE\" />\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <ProfilePhoto />\r\n                        </div>\r\n                        <div className=\"col-md-18\">\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                {this.state.FirstName + \" \" + this.state.LastName}\r\n                            </div>\r\n                            <div className=\"type-sh3\">\r\n                                <span className=\"fas fa-briefcase m-r-xxxs\" style={{ color: \"#606060\" }}></span>Driver\r\n                            </div>\r\n                            <div className=\"type-sh3\">\r\n                                <span><Rating Rating={ratingAndReviews.Rating}\r\n                                    Color=\"\" Size=\"rating-small\"\r\n                                    Label={ratingAndReviews.Reviews > 0 ?\r\n                                        `(${ratingAndReviews.Reviews} Review(s))` : `No Reviews`} /></span>\r\n                            </div>\r\n                            \r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-globe-asia\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Active</div>\r\n                                                <div className=\"content-text-secondary\">{(this.state.Active === 1) ?\r\n                                                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-phone\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Phone Number</div>\r\n                                                <div className=\"content-text-secondary\">{this.state.PhoneNumber}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-at\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Username</div>\r\n                                                <div className=\"content-text-secondary\">{this.state.Username}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-envelope\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Email</div>\r\n                                                <div className=\"content-text-secondary\">{this.state.Email}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\" }}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-24\">\r\n                            <div className=\"type-h3\" style={{ paddingTop: \"0px\" }}>Details</div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list theme-alt\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                <span className=\"fas fa-birthday-cake color-default\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Birthday</div>\r\n                                                <div className=\"content-text-secondary\">{this.state.DateOfBirth}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list theme-alt\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                <span className={(this.state.Gender === \"Male\") ? \"fas fa-male color-default\" : \"fas fa-female color-default\"}></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Gender</div>\r\n                                                <div className=\"content-text-secondary\">{this.state.Gender}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list theme-alt\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                <span className=\"fas fa-flag color-default\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Nationality</div>\r\n                                                <div className=\"content-text-secondary\">{this.state.Nationality}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list theme-alt\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                <span className=\"fas fa-map-marker-alt color-default\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Address</div>\r\n                                                <div className=\"content-text-secondary\">{this.state.Address}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <DocumentsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Profile;","import React, { Component } from \"react\";\r\nimport { getData, updateTruck } from \"../../DriverFunctions\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\n\r\nclass TruckSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            PlateNumber: \"\",\r\n            Owner: \"\",\r\n            ProductionYear: \"\",\r\n            Brand: \"\",\r\n            Model: \"\",\r\n            Type: \"\",\r\n            MaximumWeight: \"\",\r\n\r\n            ValidPlateNumber: true,\r\n            ValidOwner: true,\r\n            ValidProductionYear: true,\r\n            ValidBrand: true,\r\n            ValidModel: true,\r\n            ValidType: true,\r\n            ValidMaximumWeight: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                PlateNumber: \"\",\r\n                Owner: \"\",\r\n                ProductionYear: \"\",\r\n                Brand: \"\",\r\n                Model: \"\",\r\n                Type: \"\",\r\n                MaximumWeight: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Truck\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Truck found.\") {\r\n                    let truck = response.Truck;\r\n\r\n                    this.setState({\r\n                        PlateNumber: truck.PlateNumber,\r\n                        Owner: truck.Owner,\r\n                        ProductionYear: truck.ProductionYear,\r\n                        Brand: truck.Brand,\r\n                        Model: truck.Model,\r\n                        Type: truck.Type,\r\n                        MaximumWeight: truck.MaximumWeight\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        PlateNumber: \"\",\r\n                        Owner: \"\",\r\n                        ProductionYear: \"\",\r\n                        Brand: \"\",\r\n                        Model: \"\",\r\n                        Type: \"\",\r\n                        MaximumWeight: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidPlateNumber = this.state.ValidPlateNumber;\r\n        let ValidOwner = this.state.ValidOwner;\r\n        let ValidProductionYear = this.state.ValidProductionYear;\r\n        let ValidBrand = this.state.ValidBrand;\r\n        let ValidModel = this.state.ValidModel;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidMaximumWeight = this.state.MaximumWeight;\r\n\r\n        switch (field) {\r\n            case \"PlateNumber\":\r\n                ValidPlateNumber = ((value !== \"\") && (value >= 1 && value <= 999));\r\n                Errors.PlateNumber = ValidPlateNumber ? \"\" : \"Plate Number must be between 001 and 999.\";\r\n                break;\r\n            case \"Owner\":\r\n                ValidOwner = (value !== \"\");\r\n                Errors.Owner = ValidOwner ? \"\" : \"Owner is required.\";\r\n                break;\r\n            case \"ProductionYear\":\r\n                let currentYear = new Date().getFullYear();\r\n                ValidProductionYear = ((value !== \"\") && (value >= 2000 && value <= currentYear));\r\n                Errors.ProductionYear = ValidProductionYear ? \"\" : `Production Year must be between 2000 and ${currentYear}`;\r\n                break;\r\n            case \"Brand\":\r\n                ValidBrand = (value !== \"\");\r\n                Errors.Brand = ValidBrand ? \"\" : \"Brand is required.\";\r\n                break;\r\n            case \"Model\":\r\n                ValidModel = (value !== \"\");\r\n                Errors.Model = ValidModel ? \"\" : \"Model is required.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required\";\r\n                break;\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n\r\n                if (Errors.MaximumWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidMaximumWeight = (value >= 700);\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum weight must be greater than 699.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPlateNumber: ValidPlateNumber,\r\n            ValidOwner: ValidOwner,\r\n            ValidProductionYear: ValidProductionYear,\r\n            ValidBrand: ValidBrand,\r\n            ValidModel: ValidModel,\r\n            ValidType: ValidType,\r\n            ValidMaximumWeight: ValidMaximumWeight\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidPlateNumber &&\r\n                    this.state.ValidOwner &&\r\n                    this.state.ValidProductionYear &&\r\n                    this.state.ValidBrand &&\r\n                    this.state.ValidModel &&\r\n                    this.state.ValidType &&\r\n                    this.state.MaximumWeight\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedTruck = {\r\n            Token: localStorage.Token,\r\n            PlateNumber: this.state.PlateNumber,\r\n            Owner: this.state.Owner,\r\n            ProductionYear: this.state.ProductionYear,\r\n            Brand: this.state.Brand,\r\n            Model: this.state.Model,\r\n            Type: this.state.Type,\r\n            MaximumWeight: this.state.MaximumWeight\r\n        };\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateTruck(updatedTruck).then(response => {\r\n            if (response.Message === \"Truck is updated.\") {\r\n                this.setState({\r\n                    Preloader: null,\r\n                    ValidForm: false\r\n                });\r\n\r\n                this.props.OnTruckSettingsUpdated();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Truck Settings</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-list-ol\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"number\" name=\"PlateNumber\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.PlateNumber} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Plate Number</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.PlateNumber}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-user\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"Owner\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Owner} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Owner</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.Owner}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-calendar-day\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"number\" name=\"ProductionYear\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.ProductionYear} onChange={this.onChange} placeholder=\"XXXX\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Production Year</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"ProductionYear\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-copyright\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"Brand\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Brand} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Brand</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.Brand}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-list-ol\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"Model\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Model} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Truck Model</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.Model}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-cog\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Type} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Truck Type</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.Type}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-weight\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"number\" name=\"MaximumWeight\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Maximum Weight (GVW)</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.MaximumWeight}</div>\r\n                            </div>\r\n                        </div>                      \r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default TruckSettings;","import React, { Component } from \"react\";\r\nimport { addTruck } from \"../../DriverFunctions\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { Required } from \"../../../../styles/MiscellaneousStyles\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader\";\r\n\r\nclass AddTruckDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PlateNumber: \"\",\r\n            Owner: \"\",\r\n            ProductionYear: \"\",\r\n            Brand: \"\",\r\n            Model: \"\",\r\n            Type: \"\",\r\n            MaximumWeight: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidPlateNumber: false,\r\n            ValidOwner: false,\r\n            ValidProductionYear: false,\r\n            ValidBrand: false,\r\n            ValidModel: false,\r\n            ValidType: false,\r\n            ValidMaximumWeight: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                PlateNumber: \"\",\r\n                Owner: \"\",\r\n                ProductionYear: \"\",\r\n                Brand: \"\",\r\n                Model: \"\",\r\n                Type: \"\",\r\n                MaximumWeight: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidPlateNumber = this.state.ValidPlateNumber;\r\n        let ValidOwner = this.state.ValidOwner;\r\n        let ValidProductionYear = this.state.ValidProductionYear;\r\n        let ValidBrand = this.state.ValidBrand;\r\n        let ValidModel = this.state.ValidModel;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidMaximumWeight = this.state.ValidMaximumWeight;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"PlateNumber\":\r\n                ValidPlateNumber = (value !== \"\");\r\n                Errors.PlateNumber = ValidPlateNumber ? \"\" : \"Plate number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPlateNumber = (value >= 100 && value <= 999);\r\n                Errors.PlateNumber = ValidPlateNumber ? \"\" : \"Plate number must be 3-digits long.\";\r\n                break;\r\n            case \"Owner\":\r\n                ValidOwner = (value !== \"\");\r\n                Errors.Owner = ValidOwner ? \"\" : \"Owner is required.\";\r\n                break;\r\n            case \"ProductionYear\":\r\n                let currentYear = new Date().getFullYear();\r\n                ValidProductionYear = ((value !== \"\") && (value >= 2000 && value <= currentYear));\r\n                Errors.ProductionYear = ValidProductionYear ? \"\" : `Production Year must be between 2000 and ${currentYear}`;\r\n                break;\r\n            case \"Brand\":\r\n                ValidBrand = (value !== \"\");\r\n                Errors.Brand = ValidBrand ? \"\" : \"Brand is required.\";\r\n                break;\r\n            case \"Model\":\r\n                ValidModel = (value !== \"\");\r\n                Errors.Model = ValidModel ? \"\" : \"Model is required.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required\";\r\n                break;\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n\r\n                if (Errors.MaximumWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidMaximumWeight = (value >= 700);\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum weight must be greater than 699.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPlateNumber: ValidPlateNumber,\r\n            ValidOwner: ValidOwner,\r\n            ValidProductionYear: ValidProductionYear,\r\n            ValidBrand: ValidBrand,\r\n            ValidModel: ValidModel,\r\n            ValidType: ValidType,\r\n            ValidMaximumWeight: ValidMaximumWeight,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidPlateNumber &&\r\n                        this.state.ValidOwner &&\r\n                        this.state.ValidProductionYear &&\r\n                        this.state.ValidBrand &&\r\n                        this.state.ValidModel &&\r\n                        this.state.ValidType &&\r\n                        this.state.ValidMaximumWeight &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newTruck = {\r\n            Token: localStorage.Token,\r\n            PlateNumber: this.state.PlateNumber,\r\n            Owner: this.state.Owner,\r\n            ProductionYear: this.state.ProductionYear,\r\n            Brand: this.state.Brand,\r\n            Model: this.state.Model,\r\n            Type: this.state.Type,\r\n            MaximumWeight: this.state.MaximumWeight,\r\n            PhotoURL: this.state.PhotoURL\r\n        }\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addTruck(newTruck).then(response => {\r\n            if (response.Message === \"Truck is added.\") {\r\n                this.props.OnOK();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal\" id=\"add-truck-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <p>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">New Truck</div>\r\n                                    <div className=\"type-sh3\">These detials will be displayed on your profile.</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <ImageUploader Source={this.state.PhotoURL}\r\n                                                    Height=\"220px\" Width=\"220px\"\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }}\r\n                                                    ImageCategory=\"Truck\" />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">                                          \r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Plate Number</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"PlateNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.PlateNumber} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.PlateNumber}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Owner</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Owner\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Owner} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Owner}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Production Year</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"ProductionYear\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.ProductionYear} onChange={this.onChange} placeholder=\"XXXX\" />\r\n                                                <span className=\"text-danger\">{this.state.Errors.ProductionYear}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Brand</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Brand\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Brand} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Brand}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Truck Model</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Model\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Model} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Model}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Truck Type</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Type} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Maximum Weight (GVW)</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"MaximumWeight\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.MaximumWeight}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\"  disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>             \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddTruckDialog;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles\";\r\nimport ImageUploader from \"../../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { addTrailer } from \"../../../DriverFunctions.js\";\r\n\r\nclass AddTrailerDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            MaximumWeight: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n            Type: \"\",\r\n\r\n            ValidMaximumWeight: false,\r\n            ValidPhotoURL: false,\r\n            ValidType: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                MaximumWeight: \"\",\r\n                PhotoURL: \"\",\r\n                Type: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidMaximumWeight = this.state.ValidMaximumWeight;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n        let ValidType = this.state.ValidType;\r\n\r\n        switch (field) {\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n\r\n                if (Errors.MaximumWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidMaximumWeight = (value >= 700);\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum weight must be greater than 699.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidMaximumWeight: ValidMaximumWeight,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n            ValidType: ValidType\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidMaximumWeight &&\r\n                        this.state.ValidPhotoURL &&\r\n                        this.state.ValidType\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newTrailer = {\r\n            Token: localStorage.Token,\r\n            MaximumWeight: this.state.MaximumWeight,\r\n            PhotoURL: this.state.PhotoURL,\r\n            Type: this.state.Type\r\n        }\r\n\r\n        console.log(\"Going to add the trailer...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addTrailer(newTrailer).then(response => {\r\n            if (response.Message === \"Trailer is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id=\"add-trailer-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">New Trailer</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\" Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Maximum Weight (GVW)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"MaximumWeight\" className=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.MaximumWeight}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Trailer Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddTrailerDialog;","import React, { Component } from \"react\";\r\nimport AddTrailerDialog from \"./AddTrailerDialog\";\r\n\r\nclass AddTrailer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddTrailerDialog: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-truck-pickup\"></span>   Trailers</div>\r\n                            <p className=\"color-light\">RECOMMENDED: Since your truck is all set up, you're good to go for adding up to TWO trailers to it.</p>\r\n                            <div className=\"btn-group\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-primary\"\r\n                                    style={{ minWidth: \"152px\" }}\r\n                                    data-toggle=\"modal\"\r\n                                    data-target=\"#add-trailer-dialog\"\r\n                                    onMouseDown={() => {\r\n                                        this.setState({\r\n                                            AddTrailerDialog: <AddTrailerDialog\r\n                                                OnCancel={() => {\r\n                                                    this.setState({\r\n                                                        AddTrailerDialog: null\r\n                                                    });\r\n                                                }}\r\n                                                OnOK={cancelButton => {\r\n                                                    cancelButton.click();\r\n                                                    this.props.OnTrailerAdded();\r\n                                                }} />\r\n                                        });\r\n                                    }}>Add Trailer</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {this.state.AddTrailerDialog} \r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddTrailer;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles\";\r\nimport ImageUploader from \"../../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { updateTrailer } from \"../../../DriverFunctions.js\";\r\n\r\nclass EditTrailerDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            MaximumWeight: this.props.Trailer.MaximumWeight,\r\n            PhotoURL: this.props.Trailer.PhotoURL,\r\n            Type: this.props.Trailer.Type,\r\n\r\n            ValidMaximumWeight: true,\r\n            ValidPhotoURL: true,\r\n            ValidType: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                MaximumWeight: \"\",\r\n                PhotoURL: \"\",\r\n                Type: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidMaximumWeight = this.state.ValidMaximumWeight;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n        let ValidType = this.state.ValidType;\r\n\r\n        switch (field) {\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n\r\n                if (Errors.MaximumWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidMaximumWeight = (value >= 700);\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum weight must be greater than 699.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidMaximumWeight: ValidMaximumWeight,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n            ValidType: ValidType\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidMaximumWeight &&\r\n                        this.state.ValidPhotoURL &&\r\n                        this.state.ValidType\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedTrailer = {\r\n            Token: localStorage.Token,\r\n            TrailerID: this.props.Trailer.TrailerID,\r\n            MaximumWeight: this.state.MaximumWeight,\r\n            PhotoURL: this.state.PhotoURL,\r\n            Type: this.state.Type\r\n        }\r\n\r\n        console.log(\"Going to update trailer...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        updateTrailer(updatedTrailer).then(response => {\r\n            if (response.Message === \"Trailer is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id={`edit-trailer-dialog${this.props.dialogID}`}\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Trailer</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\" Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory={this.state.ImageCategory} />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Maximum Weight (GVW)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"MaximumWeight\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.MaximumWeight}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Trailer Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default EditTrailerDialog;","import React, { Component } from \"react\";\r\nimport { deleteTrailer } from \"../../../DriverFunctions.js\";\r\nimport EditTrailerDialog from \"./EditTrailerDialog.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\n\r\nclass TrailersList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Trailers: this.props.Trailers,\r\n            EditTrailerDialogs: [],\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async index => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedTrailer = {\r\n            Token: localStorage.Token,\r\n            TrailerID: this.state.Trailers[index].TrailerID \r\n        };\r\n\r\n        console.log(`Going to delete Trailers[${index}]...`);\r\n\r\n        await deleteTrailer(discardedTrailer).then(response => {\r\n            if (response.Message === \"Trailer is deleted.\") {\r\n                this.props.OnTrailersUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Trailers</div>\r\n            <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                {this.state.Trailers.map((value, index) => {\r\n                    return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                        <div className=\"jumbotron theme-default\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-6\">\r\n                                        <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                            src={value.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                                overflow: \"hidden\",\r\n                                                border: \"5px solid #3A3A3C\",\r\n                                                margin: \"5px\"\r\n                                            }} />\r\n                                    </div>\r\n                                    <div className=\"col-md-18\">\r\n                                        <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>{`Trailer # ${index + 1}.`}</div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"entity-list\">\r\n                                                    <div className=\"entity-list-item\">\r\n                                                        <div className=\"item-icon\">\r\n                                                            <span className=\"fas fa-weight\"></span>\r\n                                                        </div>\r\n                                                        <div className=\"item-content-primary\">\r\n                                                            <div className=\"content-text-primary\">Maximum Weight</div>\r\n                                                            <div className=\"content-text-secondary\">{`${value.MaximumWeight} GVM`}</div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"entity-list\">\r\n                                                    <div className=\"entity-list-item\">\r\n                                                        <div className=\"item-icon\">\r\n                                                            <span className=\"fas fa-star-of-life\"></span>\r\n                                                        </div>\r\n                                                        <div className=\"item-content-primary\">\r\n                                                            <div className=\"content-text-primary\">Trailer Type</div>\r\n                                                            <div className=\"content-text-secondary\">{value.Type}</div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target={`#edit-trailer-dialog${index}`}\r\n                                onMouseDown={() => {\r\n                                    let editTrailerDialogs = this.state.EditTrailerDialogs;\r\n\r\n                                    editTrailerDialogs[index] = <EditTrailerDialog\r\n                                        dialogID={index}\r\n                                        Trailer={value}\r\n                                        OnCancel={() => {\r\n                                            let editTrailerDialogs = this.state.EditTrailerDialogs\r\n                                            editTrailerDialogs[index] = null;\r\n\r\n                                            this.setState({\r\n                                                EditTrailerDialogs: editTrailerDialogs,\r\n                                            });\r\n\r\n                                        }}\r\n                                        OnOK={cancelButton => {\r\n                                            cancelButton.click();\r\n                                            this.props.OnTrailersUpdated();\r\n                                        }} />;\r\n\r\n                                    this.setState({\r\n                                        EditTrailerDialogs: editTrailerDialogs,\r\n                                    });\r\n                                }}>Edit</button>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(index); }}>Delete</button>\r\n                        </div>\r\n                        {this.state.EditTrailerDialogs[index]}\r\n                    </li>\r\n                })}\r\n            </ol>\r\n            {this.state.Preloader}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TrailersList;","import React, { Component } from \"react\";\r\nimport AddTrailer from \"./AddTrailer\";\r\nimport TrailersList from \"./TrailersList\"\r\nimport { getData } from \"../../../DriverFunctions\";\r\n\r\nclass Trailers extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddTrailer: null,\r\n            TrailersList: null\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Trailers\"\r\n            };\r\n\r\n            this.setState({\r\n                AddTrailer: null,\r\n                TrailersList: null\r\n            });\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Trailers found.\") {\r\n\r\n                    if (response.Trailers.length < 2) {\r\n                        this.setState({\r\n                            AddTrailer: <AddTrailer OnTrailerAdded={this.onComponentUpdated} />,\r\n                            TrailersList: <TrailersList Trailers={response.Trailers}\r\n                                OnTrailersUpdated={this.onComponentUpdated} />\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            AddTrailer: null,\r\n                            TrailersList: <TrailersList Trailers={response.Trailers}\r\n                                OnTrailersUpdated={this.onComponentUpdated} />\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AddTrailer: <AddTrailer OnTrailerAdded={this.onComponentUpdated} />,\r\n                        TrailersList: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            {this.state.AddTrailer}\r\n            {this.state.TrailersList}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Trailers;","import React, { Component } from \"react\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader\";\r\nimport { getData, updateTruckPhoto } from \"../../DriverFunctions\";\r\nimport TruckSettings from \"./TruckSettings\";\r\nimport AddTruckDialog from \"./AddTruckDialog\";\r\nimport Trailers from \"./trailers/Trailers\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Truck extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            PlateNumber: \"\",\r\n            Owner: \"\",\r\n            ProductionYear: \"\",\r\n            Brand: \"\",\r\n            Model: \"\",\r\n            Type: \"\",\r\n            MaximumWeight: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n            TruckFound: false,\r\n            AddTruckDialog: null,\r\n            AddTrailer: null,\r\n            TrailersList: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Truck\"\r\n            };\r\n\r\n            this.setState({\r\n                Preloader: <Preloader />\r\n            });\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Truck found.\") {\r\n                    let truck = response.Truck;\r\n\r\n                    this.setState({\r\n                        PlateNumber: truck.PlateNumber,\r\n                        Owner: truck.Owner,\r\n                        ProductionYear: truck.ProductionYear,\r\n                        Brand: truck.Brand,\r\n                        Model: truck.Model,\r\n                        Type: truck.Type,\r\n                        MaximumWeight: truck.MaximumWeight,\r\n                        PhotoURL: truck.PhotoURL,\r\n                        TruckFound: true,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        PlateNumber: \"\",\r\n                        Owner: \"\",\r\n                        ProductionYear: \"\",\r\n                        Brand: \"\",\r\n                        Model: \"\",\r\n                        Type: \"\",\r\n                        MaximumWeight: \"\",\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                        TruckFound: false,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return <section>\r\n            <PageHeading Heading=\"TRUCKS\" />\r\n            {this.state.TruckFound ? \r\n                <section>\r\n                    <div className=\"jumbotron theme-default\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <ImageUploader Source={this.state.PhotoURL}\r\n                                        Height=\"200px\" Width=\"200px\"\r\n                                        OnImageUploaded={async response => {\r\n                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                const updatedTruck = {\r\n                                                    Token: localStorage.Token,\r\n                                                    PhotoURL: response.imageUrl\r\n                                                };\r\n\r\n                                                await updateTruckPhoto(updatedTruck).then(response => {\r\n                                                    if (response.Message === \"Truck photo updated.\") {\r\n                                                        this.setState({\r\n                                                            PhotoURL: updatedTruck.PhotoURL\r\n                                                        });\r\n                                                    }\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        OnInvalidImageSelected={() => {\r\n                                            return;\r\n                                        }}\r\n                                        ImageCategory=\"Truck\" />\r\n                                </div>\r\n                                <div className=\"col-md-18\">\r\n                                    <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                        {`${this.state.Brand} ${this.state.Model}`}\r\n                                    </div>\r\n                                    <div className=\"type-sh3\">\r\n                                        <span className=\"fas fa-truck\" style={{ color: \"#606060\" }}></span>   {this.state.Type}\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-list-ol\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Plate Number</div>\r\n                                                        <div className=\"content-text-secondary\">{this.state.PlateNumber}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-calendar-day\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Production Year</div>\r\n                                                        <div className=\"content-text-secondary\">{this.state.ProductionYear}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-weight\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Maximum Weight</div>\r\n                                                        <div className=\"content-text-secondary\">{`${this.state.MaximumWeight} GVW`}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <button type=\"button\" className=\"btn btn-danger\">Delete Truck</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <TruckSettings OnTruckSettingsUpdated={this.onComponentUpdated} />\r\n                    <Trailers />\r\n                    {this.state.Preloader}\r\n                </section> :\r\n                <section>\r\n                    <div className=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        alt=\"add_truck.png\" src=\"./images/add_truck.png\" data-source-index=\"2\" />\r\n                                </div>\r\n                                <div className=\"col-md-12 col-md-pull-12\">\r\n                                    <div className=\"type-h3\">Truck</div>\r\n                                    <div className=\"type-sh3\">You have not added any truck yet.</div>\r\n                                    <p>Adding your truck will let the Traders or Brokers see details about your it. Valid and complete details of your truck make more chances for you to receive job requests.</p>\r\n                                    <div className=\"btn-group\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-primary\"\r\n                                            style={{ minWidth: \"152px\" }}\r\n                                            data-toggle=\"modal\"\r\n                                            data-target=\"#add-truck-dialog\"\r\n                                            onMouseDown={() => {\r\n                                                this.setState({\r\n                                                    AddTruckDialog: <AddTruckDialog\r\n                                                        OnCancel={() => {\r\n                                                            this.setState({\r\n                                                                AddTruckDialog: null,\r\n                                                            });\r\n                                                        }}\r\n                                                        OnOK={cancelButton => {\r\n                                                            cancelButton.click();\r\n                                                            this.onComponentUpdated();\r\n                                                        }} />\r\n                                                });\r\n                                            }}>\r\n                                            <span className=\"fas fa-plus\" aria-hidden=\"true\"></span>Add Now</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {this.state.AddTruckDialog}\r\n                    {this.state.Preloader}\r\n                </section>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Truck;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { addPermitLicence } from \"../../DriverFunctions.js\";\r\n\r\nclass AddPermitLicenceDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PermitNumber: \"\",\r\n            ExpiryDate: new Date(),\r\n            PhotoURL: \"./images/default_image.png\",\r\n            Code: \"\",\r\n            Place: \"\",\r\n\r\n            ValidPermitNumber: false,\r\n            ValidExpiryDate: false,\r\n            ValidPhotoURL: false,\r\n            ValidCode: false,\r\n            ValidPlace: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                PermitNumber: \"\",\r\n                ExpiryDate: \"\",\r\n                PhotoURL: \"\",\r\n                Code: \"\",\r\n                Place: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidPermitNumber = this.state.ValidPermitNumber;\r\n        let ValidExpiryDate = this.state.ValidExpiryDate;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n        let ValidCode = this.state.ValidCode;\r\n        let ValidPlace = this.state.ValidPlace;\r\n\r\n        switch (field) {\r\n            case \"PermitNumber\":\r\n                ValidPermitNumber = (value !== \"\");\r\n                Errors.PermitNumber = ValidPermitNumber ? \"\" : \"Permit number is required.\";\r\n\r\n                if (Errors.PermitNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPermitNumber = (value !== \"\");\r\n                Errors.PermitNumber = ValidPermitNumber ? \"\" : \"Permit number is required.\";\r\n\r\n                break;\r\n            case \"ExpiryDate\":\r\n                ValidExpiryDate = (new Date(value).getTime() >= new Date().getTime());\r\n                Errors.ExpiryDate = ValidExpiryDate ? \"\" : \"Expiry Date must be later than yesterday.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            case \"Code\":\r\n                ValidCode = (value !== \"\");\r\n                Errors.Code = ValidCode ? \"\" : \"Permit code is required.\";\r\n                break;\r\n            case \"Place\":\r\n                ValidPlace = (value !== \"\");\r\n                Errors.Place = ValidPlace ? \"\" : \"Permit place is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPermitNumber: ValidPermitNumber,\r\n            ValidExpiryDate: ValidExpiryDate,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n            ValidCode: ValidCode,\r\n            ValidPlace: ValidPlace,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidPermitNumber &&\r\n                        this.state.ValidExpiryDate &&\r\n                        this.state.ValidPhotoURL &&\r\n                        this.state.ValidCode &&\r\n                        this.state.ValidPlace\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newPermitLicence = {\r\n            Token: localStorage.Token,\r\n            PermitNumber: this.state.PermitNumber,\r\n            ExpiryDate: this.state.ExpiryDate,\r\n            PhotoURL: this.state.PhotoURL,\r\n            Code: this.state.Code,\r\n            Place: this.state.Place\r\n        }\r\n\r\n        console.log(\"Going to add Permit Licence.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addPermitLicence(newPermitLicence).then(response => {\r\n            if (response.Message === \"Permit Licence is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div className=\"modal\" id=\"add-permit-licence-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Add Permit Licence</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    Height=\"220px\"\r\n                                                    Width=\"220px\"\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }} />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Permit Number</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"PermitNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.PermitNumber} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.PermitNumber}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Expiry Date</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"date\" name=\"ExpiryDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.ExpiryDate} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.ExpiryDate}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Permit Code</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Code\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Code} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Code}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Permit Place</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Place\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Place} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Place}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddPermitLicenceDialog;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../styles/MiscellaneousStyles\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { updatePermitLicence } from \"../../DriverFunctions.js\";\r\n\r\nclass EditPermitLicenceDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PermitNumber: this.props.PermitLicence.PermitNumber,\r\n            ExpiryDate: this.props.PermitLicence.ExpiryDate,\r\n            PhotoURL: this.props.PermitLicence.PhotoURL,\r\n            Code: this.props.PermitLicence.Code,\r\n            Place: this.props.PermitLicence.Place,\r\n\r\n            ValidPermitNumber: true,\r\n            ValidExpiryDate: true,\r\n            ValidPhotoURL: true,\r\n            ValidCode: true,\r\n            ValidPlace: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                PermitNumber: \"\",\r\n                ExpiryDate: \"\",\r\n                PhotoURL: \"\",\r\n                Code: \"\",\r\n                Place: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidPermitNumber = this.state.ValidPermitNumber;\r\n        let ValidExpiryDate = this.state.ValidExpiryDate;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n        let ValidCode = this.state.ValidCode;\r\n        let ValidPlace = this.state.ValidPlace;\r\n\r\n        switch (field) {\r\n            case \"PermitNumber\":\r\n                ValidPermitNumber = (value !== \"\");\r\n                Errors.PermitNumber = ValidPermitNumber ? \"\" : \"Permit number is required.\";\r\n                break;\r\n            case \"ExpiryDate\":\r\n                ValidExpiryDate = (new Date(value).getTime() >= new Date().getTime());\r\n                Errors.ExpiryDate = ValidExpiryDate ? \"\" : \"Expiry Date must be later than yesterday.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            case \"Code\":\r\n                ValidCode = (value !== \"\");\r\n                Errors.Code = ValidCode ? \"\" : \"Permit code is required.\";\r\n                break;\r\n            case \"Place\":\r\n                ValidPlace = (value !== \"\");\r\n                Errors.Place = ValidPlace ? \"\" : \"Permit place is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPermitNumber: ValidPermitNumber,\r\n            ValidExpiryDate: ValidExpiryDate,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n            ValidCode: ValidCode,\r\n            ValidPlace: ValidPlace,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidPermitNumber &&\r\n                    this.state.ValidExpiryDate &&\r\n                    this.state.ValidPhotoURL &&\r\n                    this.state.ValidCode &&\r\n                    this.state.ValidPlace\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedPermitLicence = {\r\n            Token: localStorage.Token,\r\n            PermitLicenceID: this.props.PermitLicence.PermitLicenceID,\r\n            PermitNumber: this.state.PermitNumber,\r\n            ExpiryDate: this.state.ExpiryDate,\r\n            PhotoURL: this.state.PhotoURL,\r\n            Code: this.state.Code,\r\n            Place: this.state.Place\r\n        }\r\n\r\n        console.log(\"Going to update Permit Licence.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updatePermitLicence(updatedPermitLicence).then(async response => {\r\n            if (response.Message === \"Permit Licence is updated.\") {\r\n                this.cancelButton.click();\r\n                await this.props.OnOK();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div className=\"modal\" id={`edit-permit-dialog${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Add Permit Licence</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    Height=\"220px\"\r\n                                                    Width=\"220px\"\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }} />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Permit Number</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"PermitNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.PermitNumber} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.PermitNumber}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Expiry Date</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"date\" name=\"ExpiryDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.ExpiryDate} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.ExpiryDate}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Permit Code</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Code\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Code} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Code}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Permit Place</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"Place\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.Place} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Place}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\"\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default EditPermitLicenceDialog;","import React, { Component } from \"react\";\r\nimport { deletePermitLicence } from \"../../DriverFunctions.js\";\r\nimport EditPermitLicenceDialog from \"./EditPermitLicenceDialog.js\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\n\r\nclass PermitLicenceListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllPermitLicences: [],\r\n            PermitLicences: [],\r\n            EditPermitLicenceDialogs: [],\r\n            SearchString: \"\",\r\n            Preloader: null,\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async permitLicenceID => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedPermitLicence = {\r\n            Token: localStorage.Token,\r\n            PermitLicenceID: permitLicenceID\r\n        };\r\n\r\n        console.log(\"Going to delete Permit licence...\");\r\n\r\n        await deletePermitLicence(discardedPermitLicence).then(async response => {\r\n            if (response.Message === \"Permit Licence is deleted.\") {\r\n                await this.props.OnPermitLicenceUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const permitLicence = this.props.PermitLicence;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                src={permitLicence.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"col-md-18\">\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>{`${index + 1}.`}</div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-hashtag\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Permit Number</div>\r\n                                                <div className=\"content-text-secondary\">{permitLicence.PermitNumber}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-calendar\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Expiry Date</div>\r\n                                                <div className=\"content-text-secondary\">{permitLicence.ExpiryDate}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-asterisk\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Permit Code</div>\r\n                                                <div className=\"content-text-secondary\">{permitLicence.Code}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-map-marker-alt\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Permit Place</div>\r\n                                                <div className=\"content-text-secondary\">{permitLicence.Place}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#edit-permit-dialog${index}`}>Edit</button>\r\n                <button type=\"button\" className=\"btn btn-danger\" onClick={async () => { await this.onDelete(permitLicence.PermitLicenceID); }}>Delete</button>\r\n            </div>\r\n            <EditPermitLicenceDialog\r\n                DialogID={index}\r\n                PermitLicence={permitLicence}\r\n                OnOK={async () => { await this.props.OnPermitLicenceUpdated(); }} />\r\n            {this.state.Preloader}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PermitLicenceListItem;","import React, { Component } from \"react\";\r\n\r\nclass ProgressBar extends Component {\r\n    render() {\r\n        return <div className=\"progress-bar\">\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n        </div>;\r\n    }\r\n};\r\n\r\nexport default ProgressBar","import React, { Component } from \"react\";\r\nimport { getData } from \"../../DriverFunctions.js\";\r\nimport PermitLicenceListItem from \"./PermitLicencesListItem\";\r\nimport ProgressBar from \"../../../../controls/ProgressBar\";\r\n\r\nclass PermitLicencesList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllPermitLicences: [],\r\n            PermitLicences: [],\r\n            SearchString: \"\",\r\n            Searching: null,\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"PermitLicences\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true,\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Permit licences found.\") {\r\n                    this.setState({\r\n                        AllPermitLicences: response.PermitLicences,\r\n                        PermitLicences: response.PermitLicences,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllPermitLicences: [],\r\n                        PermitLicences: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.SearchString === \"\") {\r\n            this.setState({\r\n                PermitLicences: this.state.AllPermitLicences\r\n            });\r\n        }\r\n\r\n        const allPermitLicences = this.state.AllPermitLicences;\r\n        let filteredPermitLicences = [];\r\n\r\n        for (var i = 0; i < allPermitLicences.length; i++) {\r\n            if (allPermitLicences[i].Place.includes(this.state.SearchString)) {\r\n                filteredPermitLicences[i] = allPermitLicences[i];\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            PermitLicences: filteredPermitLicences\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const permitLicences = this.state.PermitLicences;\r\n\r\n        return (\r\n            <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Permit Licences</div>\r\n                <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                    <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                        <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                            <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                                <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search by Permit Place\"\r\n                                            style={{ maxWidth: \"500px\", width: \"100%\" }} autoComplete=\"off\"\r\n                                            value={this.state.SearchString} onChange={this.onChange} />\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                {(permitLicences.length === 0) ?\r\n                    <div className=\"jumbotron theme-default\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                {this.state.Searching ? <div className=\"col-md-24 text-center\">\r\n                                    <div>\r\n                                        <div className=\"type-h3\" style={{ color: \"#008575\" }}>Searching</div>\r\n                                        <ProgressBar />\r\n                                    </div>\r\n                                </div> : <div className=\"col-md-24 text-center\">\r\n                                        <h3><span className=\"fas fa-exclamation-triangle\" style={{ color: \"#FFBF15\" }}></span> No licences found.</h3>\r\n                                    </div>}\r\n                            </div>\r\n                        </div>\r\n                    </div> : <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                        {this.state.PermitLicences.map((permitLicence, index) => {\r\n                            return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                                <PermitLicenceListItem Index={index}\r\n                                    PermitLicence={permitLicence}\r\n                                    OnPermitLicenceUpdated={async () => { await this.onComponentUpdated() }} />\r\n                            </li>\r\n                        })}\r\n                    </ol>}\r\n                {this.state.Preloader}\r\n            </section>         \r\n        );\r\n    }\r\n};\r\n\r\nexport default PermitLicencesList;","import React, { Component } from \"react\";\r\nimport AddPermitLicenceDialog from \"./AddPermitLicenceDialog.js\";\r\nimport PermitLicencesList from \"./PermitLicencesList.js\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Permits extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddPermitLicenceDialog: null\r\n        };\r\n\r\n        this.onPermitLicencesUpdated = this.onPermitLicencesUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onPermitLicencesUpdated();\r\n    }\r\n\r\n    onPermitLicencesUpdated = () => {\r\n        this.PermitLicencesList.onComponentUpdated();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <PageHeading Heading=\"PERMITS\" />\r\n                <div class=\"page-header\" style={{\r\n                    backgroundImage: \"url(/images/teal.jpg)\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundColor: \"#215761\"\r\n                }}>\r\n                    <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xs-18\">\r\n                                <div className=\"type-h3 color-light\"><span className=\"fas fa-id-badge\"></span>   Permit Licences</div>\r\n                                <p className=\"color-light\">If you are a non-Saudi driver, then you must have at least one permit licence.</p>\r\n                                <div className=\"btn-group\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-primary\"\r\n                                        data-toggle=\"modal\"\r\n                                        data-target=\"#add-permit-licence-dialog\"\r\n                                        onMouseDown={() => {\r\n                                            this.setState({\r\n                                                AddPermitLicenceDialog: (<AddPermitLicenceDialog\r\n                                                    OnCancel={() => {\r\n                                                        this.setState({\r\n                                                            AddPermitLicenceDialog: null,\r\n                                                        });\r\n                                                    }}\r\n                                                    OnOK={cancelButton => {\r\n                                                        cancelButton.click();\r\n                                                        this.onPermitLicencesUpdated();\r\n                                                    }} />),\r\n                                            });\r\n                                        }}>New Permit Licence</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <PermitLicencesList ref={permitLicencesList => this.PermitLicencesList = permitLicencesList} />\r\n                {this.state.AddPermitLicenceDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Permits;","import React, { Component } from \"react\";\r\n\r\nclass FinancialAffairs extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"jumbotron\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"tools.png\" src=\"./images/tools.png\" style={{ borderRadius: \"50%\" }} data-source-index=\"1\" />\r\n                            </div>\r\n                            <div class=\"col-md-12 col-md-pull-12\">\r\n                                <div class=\"type-h3\" style={{ color: \"#008575\", }}>\r\n                                    Financial Affairs\r\n                    </div>\r\n                                <div class=\"type-sh3\" style={{ color: \"#949496\", }}>\r\n                                    Under-Construction\r\n                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default FinancialAffairs;","import React, { Component } from \"react\";\r\nimport ProgressBar from \"../../controls/ProgressBar\";\r\n\r\nclass SearchingContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const searching = this.props.Searching;\r\n        const searchingFor = this.props.SearchingFor;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {searching ? <div className=\"col-md-24 text-center\">\r\n                            <div>\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\" }}>Searching</div>\r\n                                <ProgressBar />\r\n                            </div>\r\n                        </div> : <div className=\"col-md-24 text-center\">\r\n                                <h3><span className=\"fas fa-exclamation-triangle\" style={{ color: \"#FFBF15\" }}></span>{` No ${searchingFor} found.`}</h3>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            </div> \r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default SearchingContainer;","import React, { Component } from \"react\";\r\n\r\nclass IdentityCardContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const identityCard = this.props.IdentityCard;\r\n\r\n        return identityCard ? <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={identityCard.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-16\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Identity Card</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-24\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">ID Number</div>\r\n                                                    <div className=\"content-text-secondary\">{identityCard.IDNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </section> : null;\r\n    }\r\n};\r\n\r\nexport default IdentityCardContainer;","import React, { Component } from \"react\";\r\n\r\nclass CommercialRegisterCertificateContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const commercialRegisterCertificate = this.props.CommercialRegisterCertificate;\r\n\r\n        return commercialRegisterCertificate ? <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={commercialRegisterCertificate.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-16\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Commercial Register Certificate</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-24\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Certificate Number</div>\r\n                                                    <div className=\"content-text-secondary\">{commercialRegisterCertificate.Number}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-cog\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Certificate Type</div>\r\n                                                    <div className=\"content-text-secondary\">{commercialRegisterCertificate.Type}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </section> : null;\r\n    }\r\n};\r\n\r\nexport default CommercialRegisterCertificateContainer;","import React, { Component } from \"react\";\r\nimport IdentityCardContainer from \"./IdentityCardContainer\";\r\nimport CommercialRegisterCertificateContainer from \"./CommercialRegisterCertificateContainer\";\r\nimport SearchingContainer from \"../../searching/SearchingContainer\";\r\nimport { getData } from \"../../../components/drivers/DriverFunctions\";\r\n\r\nclass DocumentsDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TraderDocuments: null,\r\n            Searching: false,\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderDocuments\",\r\n                Params: {\r\n                    TraderID: this.props.TraderID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader documents found.\") {\r\n                    this.setState({\r\n                        TraderDocuments: response.TraderDocuments,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TraderDocuments: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const traderDocuments = this.state.TraderDocuments;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`documents-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h2\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Documents</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {(this.state.Searching || !traderDocuments) ?\r\n                                <SearchingContainer Searching={this.state.Searching}\r\n                                    SearchingFor=\"documents\" /> :\r\n                                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                                    <IdentityCardContainer IdentityCard={traderDocuments.IdentityCard} />\r\n                                    <CommercialRegisterCertificateContainer CommercialRegisterCertificate={traderDocuments.CommercialRegisterCertificate} />\r\n                                </ol>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DocumentsDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport SearchingContainer from \"../searching/SearchingContainer\";\r\nimport DocumentsDialog from \"./documents/DocumentsDialog\";\r\nimport { getData } from \"../../components/drivers/DriverFunctions\";\r\n\r\nclass TraderContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TraderProfile: null,\r\n            Searching: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.refresh.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.props.Refresh) {\r\n            this.props.Refresh(this.refresh);\r\n        }\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderProfile\",\r\n                Params: {\r\n                    TraderID: this.props.TraderID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader profile found.\") {\r\n                    this.setState({\r\n                        TraderProfile: response.TraderProfile,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TraderProfile: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderProfile\",\r\n                Params: {\r\n                    TraderID: this.props.TraderID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader profile found.\") {\r\n                    this.setState({\r\n                        TraderProfile: response.TraderProfile\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TraderProfile: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Searching || !this.state.TraderProfile) {\r\n            return <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor=\"trader\" />;\r\n        }\r\n        else {\r\n            const traderProfile = this.state.TraderProfile;\r\n            const trader = traderProfile.Trader;\r\n            const onJob = traderProfile.OnJob;\r\n            const profilePhoto = traderProfile.ProfilePhoto ?\r\n                traderProfile.ProfilePhoto :\r\n                \"./images/defaultProfilePhoto.png\";\r\n\r\n            const dialogID = UUID().substring(0, 7).toUpperCase();\r\n\r\n            return <section>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={profilePhoto} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                    {`${trader.FirstName} ${trader.LastName}`}\r\n                                    {onJob ? <span class=\"badge back-color-golden m-l-xxs\">ON JOB</span> : null}\r\n                                </div>\r\n                                <div className=\"type-sh3\">\r\n                                    <span className=\"fas fa-briefcase\" style={{ color: \"#606060\" }}></span>   {trader.Type}\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-globe-asia\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Active</div>\r\n                                                    <div className=\"content-text-secondary\">{(trader.Active === 1) ?\r\n                                                        <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                        <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className={(trader.Gender === \"Male\") ? \"fas fa-male\" : \"fas fa-female\"}></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Gender</div>\r\n                                                    <div className=\"content-text-secondary\">{trader.Gender}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-birthday-cake\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Birthday</div>\r\n                                                    <div className=\"content-text-secondary\">{trader.DateOfBirth}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-flag\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Nationality</div>\r\n                                                    <div className=\"content-text-secondary\">{trader.Nationality}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-envelope\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Email</div>\r\n                                                    <div className=\"content-text-secondary\">{trader.Email}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-phone\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Phone Number</div>\r\n                                                    <div className=\"content-text-secondary\">{trader.PhoneNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {this.props.TabView ? \r\n                                    null :\r\n                                    <button type=\"button\" className=\"btn btn-default\"\r\n                                        style={{ minWidth: \"152px\" }} data-toggle=\"modal\"\r\n                                        data-target={`#documents-dialog-${dialogID}`}>Documents</button>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.props.TabView ?\r\n                    null : \r\n                    <DocumentsDialog DialogID={dialogID}\r\n                        TraderID={this.props.TraderID} />}\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default TraderContainer;","import React, { Component } from \"react\";\r\nimport IdentityCardContainer from \"./IdentityCardContainer\";\r\nimport CommercialRegisterCertificateContainer from \"./CommercialRegisterCertificateContainer\";\r\nimport SearchingContainer from \"../../searching/SearchingContainer\";\r\nimport { getData } from \"../../../components/drivers/DriverFunctions\";\r\n\r\nclass DocumentsContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TraderDocuments: null,\r\n            Searching: false,\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderDocuments\",\r\n                Params: {\r\n                    TraderID: this.props.TraderID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader documents found.\") {\r\n                    this.setState({\r\n                        TraderDocuments: response.TraderDocuments,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TraderDocuments: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderDocuments\",\r\n                Params: {\r\n                    TraderID: this.props.TraderID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader documents found.\") {\r\n                    this.setState({\r\n                        TraderDocuments: response.TraderDocuments\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TraderDocuments: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const traderDocuments = this.state.TraderDocuments;\r\n\r\n        return (this.state.Searching || !traderDocuments) ?\r\n            <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor=\"documents\" /> :\r\n            <section>\r\n                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    <IdentityCardContainer IdentityCard={traderDocuments.IdentityCard} />\r\n                    <CommercialRegisterCertificateContainer CommercialRegisterCertificate={traderDocuments.CommercialRegisterCertificate} />\r\n                </ol>\r\n            </section>;\r\n    }\r\n};\r\n\r\nexport default DocumentsContainer;","import React, { Component } from \"react\";\r\nimport TraderContainer from \"../../../../../containers/trader/TraderContainer\";\r\nimport DocumentsContainer from \"../../../../../containers/trader/documents/DocumentsContainer\";\r\n\r\nclass ProfileDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`profile-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <section>\r\n                                <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                                    <li role=\"presentation\" className=\"active\">\r\n                                        <a href={`#trader-tab-${index}`} aria-controls={`trader-tab-${index}`} role=\"tab\" data-toggle=\"tab\">Trader</a>\r\n                                    </li>\r\n                                    <li role=\"presentation\">\r\n                                        <a href={`#documents-tab-${index}`} aria-controls={`documents-tab-${index}`} role=\"tab\" data-toggle=\"tab\">Documents</a>\r\n                                    </li>\r\n                                </ul>\r\n                                <div className=\"tab-content\">\r\n                                    <div role=\"tabpanel\" className=\"tab-pane active\" id={`trader-tab-${index}`}>\r\n                                        <TraderContainer Refresh={this.props.RefreshTrader} TraderID={this.props.TraderID} TabView={true} />\r\n                                    </div>\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id={`documents-tab-${index}`}>\r\n                                        <DocumentsContainer Refresh={this.props.RefreshDocuments} TraderID={this.props.TraderID} />\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ProfileDialog;","import React, { Component } from \"react\";\r\n\r\nclass TraderRequestContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const traderRequest = this.props.TraderRequest;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron\">\r\n                <div className=\"container\">\r\n                    <div className=\"col-md-24\">\r\n                        <div className=\"type-h3 color-default p-t-n\">Trader Request</div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-box\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Cargo Type</div>\r\n                                        <div className=\"content-text-secondary\">{traderRequest.CargoType}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-weight\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Cargo Weight</div>\r\n                                        <div className=\"content-text-secondary\">{`${traderRequest.CargoWeight} lbs.`}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-id-badge\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Entry/Exit</div>\r\n                                        <div className=\"content-text-secondary\">{(traderRequest.EntryExit === 1) ?\r\n                                            <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                            <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Date</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(traderRequest.LoadingDate).toDateString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Time</div>\r\n                                        <div className=\"content-text-secondary\">{traderRequest.LoadingTime}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Accpeted Delay</div>\r\n                                        <div className=\"content-text-secondary\">{`${traderRequest.AcceptedDelay} Hour(s)`}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Requested on</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(traderRequest.Created).toDateString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Requested at</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(traderRequest.Created).toTimeString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderRequestContainer;","import React, { Component } from \"react\";\r\nimport TraderRequestContainer from \"../../../../../containers/traderRequest/TraderRequestContainer\";\r\n\r\nclass RequestDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const traderRequest = this.props.TraderRequest;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`request-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <TraderRequestContainer TraderRequest={traderRequest} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default RequestDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport ProfileDialog from \"./ProfileDialog\";\r\nimport RequestDialog from \"./RequestDialog\";\r\nimport { toggleSelectTraderRequest } from \"../../../DriverFunctions\";\r\n\r\nclass TraderRequestRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false\r\n        };\r\n\r\n        this.onToggleSelect = this.onToggleSelect.bind(this);\r\n    }\r\n\r\n    onToggleSelect = async (traderRequestID, isSelected) => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const selectedTraderRequest = {\r\n            Token: localStorage.Token,\r\n            TraderRequestID: traderRequestID,\r\n            Selected: isSelected\r\n        };\r\n\r\n        console.log(`Going to select Trader request...`);\r\n\r\n        await toggleSelectTraderRequest(selectedTraderRequest).then(async response => {\r\n            if (response.Message === \"Trader request is toggled.\") {\r\n\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                await this.props.OnTraderRequestUpdated();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const traderRequestPackage = this.props.TraderRequestPackage;\r\n        const traderRequest = traderRequestPackage.TraderRequest;\r\n        const trader = traderRequestPackage.Trader;\r\n        const traderOnJob = traderRequestPackage.TraderOnJob;\r\n        const requestSelected = this.props.requestSelected;\r\n\r\n        const profileIndex = UUID();\r\n        const requestIndex = UUID();\r\n\r\n        return <tr>\r\n            {this.state.ShowPreloader ? <Preloader /> : null}\r\n            <td>\r\n                <strong>{index + 1}</strong>\r\n            </td>\r\n\r\n            <td>\r\n                {`${trader.FirstName} ${trader.LastName}`}\r\n                {index === 0 ? <span class=\"badge back-color-golden m-l-xxxs\">NEW</span> : null}\r\n                {traderOnJob ? <span class=\"badge back-color-golden m-l-xxxs\">ON JOB</span> : null}\r\n            </td>\r\n\r\n            <td>{new Date(traderRequest.Created).toDateString()}</td>\r\n\r\n            <td class=\"text-right\">\r\n                <div>\r\n                    <button className=\"btn btn-secondary m-xxxs\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#profile-dialog-${profileIndex}`}\r\n                        onMouseDown={async () => {\r\n                            await this.RefreshTraderContainer();\r\n                            await this.RefreshDocumentsContainer();\r\n                        }}>Profile</button>\r\n\r\n                    <button className=\"btn btn-secondary m-xxxs\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#request-dialog-${requestIndex}`}>Trader Request</button>\r\n\r\n                    {traderRequest.Selected ?\r\n                        <button className=\"btn btn-danger m-xxxs\"\r\n                            onClick={async () => { await this.onToggleSelect(traderRequest.TraderRequestID, false); }}>Deselect</button> :\r\n                        <button className=\"btn btn-primary m-xxxs\" disabled={requestSelected}\r\n                            onClick={async () => { await this.onToggleSelect(traderRequest.TraderRequestID, true); }}>Select</button>}\r\n\r\n                    <ProfileDialog Index={profileIndex}\r\n                        TraderID={traderRequest.TraderID}\r\n                        RefreshTrader={refresh => { this.RefreshTraderContainer = refresh; }}\r\n                        RefreshDocuments={refresh => { this.RefreshDocumentsContainer = refresh; }} />\r\n\r\n                    <RequestDialog Index={requestIndex}\r\n                        TraderRequest={traderRequest} />\r\n                </div>\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default TraderRequestRow;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport TraderRequestRow from \"./TraderRequestRow\";\r\nimport { getData } from \"../../../DriverFunctions\";\r\n\r\nclass TraderRequestsTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TraderRequestPackages: [],\r\n            RequestSelected: false,\r\n            Searching: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderRequestPackages\",\r\n                Params: {\r\n                    JobRequestID: this.props.JobRequestID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader request packages found.\") {\r\n                    this.props.OnRequestsFound(response.TraderRequestPackages.length);\r\n\r\n                    this.setState({\r\n                        TraderRequestPackages: response.TraderRequestPackages,\r\n                        RequestSelected: response.RequestSelected,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.props.OnRequestsFound(0);\r\n                    this.setState({\r\n                        TraderRequestPackages: [],\r\n                        RequestSelected: false,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderRequestPackages\",\r\n                Params: {\r\n                    JobRequestID: this.props.JobRequestID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader request packages found.\") {\r\n                    this.props.OnRequestsFound(response.TraderRequestPackages.length);\r\n\r\n                    this.setState({\r\n                        TraderRequestPackages: response.TraderRequestPackages,\r\n                        RequestSelected: response.RequestSelected\r\n                    });\r\n                }\r\n                else {\r\n                    this.props.OnRequestsFound(0);\r\n\r\n                    this.setState({\r\n                        TraderRequestPackages: [],\r\n                        RequestSelected: false,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Searching || this.state.TraderRequestPackages.length === 0) {\r\n            return <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor=\"requests\" />;\r\n        }\r\n        else {\r\n            const traderRequestPackages = this.state.TraderRequestPackages;\r\n            const requestSelected = this.state.RequestSelected;\r\n\r\n            return <section>\r\n                <div class=\"table-responsive back-color-gray\">\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>NUMBER</th>\r\n                                <th>TRADER</th>\r\n                                <th>REQUESTED ON</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {traderRequestPackages.map((traderRequestPackage, index) => {\r\n                                return <TraderRequestRow key={index}\r\n                                    Index={index}\r\n                                    TraderRequestPackage={traderRequestPackage}\r\n                                    RequestSelected={requestSelected}\r\n                                    OnTraderRequestUpdated={this.onComponentUpdated} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default TraderRequestsTable;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { updateJobRequest } from \"../../../DriverFunctions.js\";\r\n\r\nclass EditJobRequestDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LoadingPlace: this.props.JobRequest.LoadingPlace,\r\n            UnloadingPlace: this.props.JobRequest.UnloadingPlace,\r\n            TripType: this.props.JobRequest.TripType,\r\n            Price: this.props.JobRequest.Price,\r\n\r\n            ValidLoadingPlace: true,\r\n            ValidUnloadingPlace: true,\r\n            ValidPrice: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                LoadingPlace: \"\",\r\n                UnloadingPlace: \"\",\r\n                Price: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidLoadingPlace = this.state.ValidLoadingPlace;\r\n        let ValidUnloadingPlace = this.state.ValidUnloadingPlace;\r\n        let ValidPrice = this.state.ValidPrice;\r\n\r\n        switch (field) {\r\n            case \"LoadingPlace\":\r\n                ValidLoadingPlace = (value !== \"\");\r\n                Errors.LoadingPlace = ValidLoadingPlace ? \"\" : \"Loading place is required.\";\r\n                break;\r\n            case \"UnloadingPlace\":\r\n                ValidUnloadingPlace = (value !== \"\");\r\n                Errors.UnloadingPlace = ValidUnloadingPlace ? \"\" : \"Unloading place is required.\";\r\n                break;\r\n            case \"Price\":\r\n                ValidPrice = (value > 0.00);\r\n                Errors.Price = ValidPrice ? \"\" : \"Price must be more than $0.00.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidLoadingPlace: ValidLoadingPlace,\r\n            ValidUnloadingPlace: ValidUnloadingPlace,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.LoadingPlace &&\r\n                    this.state.ValidUnloadingPlace &&\r\n                    this.state.ValidPrice\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (!this.props.CanEdit()) {\r\n            return;\r\n        }\r\n\r\n        const updatedJobRequest = {\r\n            Token: localStorage.Token,\r\n            JobRequestID: this.props.JobRequest.JobRequestID,\r\n            LoadingPlace: this.state.LoadingPlace,\r\n            UnloadingPlace: this.state.UnloadingPlace,\r\n            TripType: this.state.TripType,\r\n            Price: this.state.Price\r\n        };\r\n\r\n        console.log(\"Going to update Job Request.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateJobRequest(updatedJobRequest).then(response => {\r\n            if (response.Message === \"Job request is updated.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div className=\"modal\" id={`edit-job-request-dialog-${this.props.DialogID}`}\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Job Request</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"control-label\">Loading Place</label>\r\n                                                        <span className=\"text-danger\" style={Required}>*</span>\r\n                                                        <input type=\"text\" name=\"LoadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                            value={this.state.LoadingPlace} onChange={this.onChange} />\r\n                                                        <span className=\"text-danger\">{this.state.Errors.LoadingPlace}</span>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"control-label\">Unloading Place</label>\r\n                                                        <span className=\"text-danger\" style={Required}>*</span>\r\n                                                        <input type=\"text\" name=\"UnloadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                            value={this.state.UnloadingPlace} onChange={this.onChange} />\r\n                                                        <span className=\"text-danger\">{this.state.Errors.UnloadingPlace}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"control-label\">Trip Type</label><br />\r\n                                                        <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                            <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                                aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                                <span>{this.state.TripType}</span>\r\n                                                                <span className=\"caret\"></span>\r\n                                                            </button>\r\n                                                            <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                                <li><a onClick={() => {\r\n                                                                    this.setState({ TripType: \"One Way\" });\r\n                                                                    this.validateField(\"\", \"\");\r\n                                                                }}>One Way</a></li>\r\n                                                                <li><a onClick={() => {\r\n                                                                    this.setState({ TripType: \"Two Way\" });\r\n                                                                    this.validateField(\"\", \"\");\r\n                                                                }}>Two Way</a></li>\r\n                                                            </ul>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"control-label\">Price (USD)</label>\r\n                                                        <span className=\"text-danger\" style={Required}>*</span>\r\n                                                        <input type=\"number\" min=\"0.00\" step=\"0.01\" max=\"100.00\" name=\"Price\"\r\n                                                            className=\"form-control\" autoComplete=\"off\" value={this.state.Price} onChange={this.onChange} />\r\n                                                        <span className=\"text-danger\">{this.state.Errors.Price}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\"\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default EditJobRequestDialog;","import React, { Component } from \"react\";\r\n\r\nclass JobRequestContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const jobRequest = this.props.JobRequest;\r\n        const createdHoursAgo = Math.abs(new Date() - new Date(jobRequest.TimeCreated)) / 36e5;\r\n\r\n       return <section>\r\n           <div className=\"jumbotron theme-default\">\r\n               <div className=\"container\">\r\n                   <div className=\"col-md-24\">\r\n                       <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>{index ? `${index + 1}.` : \"Job Request\"}</div>\r\n                       <div className=\"type-sh3\">\r\n                           <span className=\"fas fa-tag\" style={{ color: \"#606060\" }}></span>   {`$${jobRequest.Price}`}\r\n                       </div>\r\n                   </div>\r\n                   <div className=\"row\">\r\n                       <div className=\"col-md-12\">\r\n                           <div class=\"entity-list\">\r\n                               <div class=\"entity-list-item\">\r\n                                   <div class=\"item-icon\">\r\n                                       <span class=\"fas fa-map-marker-alt\"></span>\r\n                                   </div>\r\n                                   <div class=\"item-content-primary\">\r\n                                       <div class=\"content-text-primary\">Loading Place</div>\r\n                                       <div class=\"content-text-secondary\">{jobRequest.LoadingPlace}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div class=\"entity-list\">\r\n                               <div class=\"entity-list-item\">\r\n                                   <div class=\"item-icon\">\r\n                                       <span class=\"fas fa-map-marker-alt\"></span>\r\n                                   </div>\r\n                                   <div class=\"item-content-primary\">\r\n                                       <div class=\"content-text-primary\">Unloading Place</div>\r\n                                       <div class=\"content-text-secondary\">{jobRequest.UnloadingPlace}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div class=\"entity-list\">\r\n                               <div class=\"entity-list-item\">\r\n                                   <div class=\"item-icon\">\r\n                                       <span class=\"fas fa-map-signs\"></span>\r\n                                   </div>\r\n                                   <div class=\"item-content-primary\">\r\n                                       <div class=\"content-text-primary\">Trip Type</div>\r\n                                       <div class=\"content-text-secondary\">{jobRequest.TripType}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                       <div className=\"col-md-12\">\r\n                           <div class=\"entity-list\">\r\n                               <div class=\"entity-list-item\">\r\n                                   <div class=\"item-icon\">\r\n                                       <span class=\"fas fa-plug\"></span>\r\n                                   </div>\r\n                                   <div class=\"item-content-primary\">\r\n                                       <div class=\"content-text-primary\">Available</div>\r\n                                       <div class=\"content-text-secondary\">{(createdHoursAgo < jobRequest.WaitingTime) ? \r\n                                           <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                           <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div class=\"entity-list\">\r\n                               <div class=\"entity-list-item\">\r\n                                   <div class=\"item-icon\">\r\n                                       <span class=\"fas fa-calendar\"></span>\r\n                                   </div>\r\n                                   <div class=\"item-content-primary\">\r\n                                       <div class=\"content-text-primary\">Posted on</div>\r\n                                       <div class=\"content-text-secondary\">{new Date(jobRequest.TimeCreated).toDateString()}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div class=\"entity-list\">\r\n                               <div class=\"entity-list-item\">\r\n                                   <div class=\"item-icon\">\r\n                                       <span class=\"fas fa-clock\"></span>\r\n                                   </div>\r\n                                   <div class=\"item-content-primary\">\r\n                                       <div class=\"content-text-primary\">Posted at</div>\r\n                                       <div class=\"content-text-secondary\">{new Date(jobRequest.TimeCreated).toTimeString()}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobRequestContainer;","import React, { Component } from \"react\";\r\nimport TraderRequestsTable from \"./TraderRequestsTable.js\";\r\nimport EditJobRequestDialog from \"./EditJobRequestDialog\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { deleteJobRequest } from \"../../../DriverFunctions\";\r\nimport JobRequestContainer from \"../../../../../containers/jobReqeust/JobRequestContainer\";\r\n\r\nclass JobRequestPackageItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            NumberOfRequests: 0,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async jobRequestID => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedJobRequest = {\r\n            Token: localStorage.Token,\r\n            JobRequestID: jobRequestID\r\n        };\r\n\r\n        console.log(`Going to delete Job request...`);\r\n\r\n        await deleteJobRequest(discardedJobRequest).then(response => {\r\n            if (response.Message === \"Job request is deleted.\") {\r\n                this.props.OnJobRequestUpdated();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const jobRequest = this.props.JobRequestPackage.JobRequest;\r\n        const index = this.props.Index;\r\n\r\n        return <section>\r\n            <JobRequestContainer Index={index} JobRequest={jobRequest} />\r\n\r\n            <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                <button type=\"button\" className=\"btn btn-default\"\r\n                    data-toggle=\"modal\"\r\n                    disabled={(this.state.NumberOfRequests !== 0)}\r\n                    data-target={`#edit-job-request-dialog-${index}`}>Edit</button>\r\n                <button className=\"btn btn-danger\" onClick={async () => { await this.onDelete(jobRequest.JobRequestID); }}>Delete</button>\r\n            </div>\r\n\r\n            <EditJobRequestDialog\r\n                DialogID={index}\r\n                JobRequest={jobRequest}\r\n                CanEdit={() => { return this.state.NumberOfRequests === 0 ? true : false }}\r\n                OnOK={() => { this.props.OnJobRequestUpdated(); }} />\r\n\r\n            <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#job-request-package-${index}`}\r\n                onMouseDown={async () => { await this.RefreshTraderRequestsTable(); }}>\r\n                <div className=\"type-h4 text-right color-default p-xxxs\">\r\n                    <span class=\"badge back-color-danger m-r-xxs\">{this.state.NumberOfRequests}</span>Trader Requests\r\n                    <i className=\"fas fa-ellipsis-v\"></i>\r\n                    <i class=\"glyph glyph-add\"></i>\r\n                    <i class=\"glyph glyph-remove\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`job-request-package-${index}`}>\r\n\r\n                <TraderRequestsTable\r\n                    Refresh={refresh => { this.RefreshTraderRequestsTable = refresh; }}\r\n                    OnRequestsFound={number => {\r\n                        this.setState({\r\n                            NumberOfRequests: number\r\n                        });\r\n                    }}\r\n                    JobRequestID={jobRequest.JobRequestID} />\r\n\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            </div>\r\n\r\n            {this.state.Preloader}\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobRequestPackageItem;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { addJobRequest } from \"../../../DriverFunctions.js\";\r\n\r\nclass AddJobRequestDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LoadingPlace: \"\",\r\n            UnloadingPlace: \"\",\r\n            TripType: \"One Way\",\r\n            Price: 0.00,\r\n\r\n            ValidLoadingPlace: false,\r\n            ValidUnloadingPlace: false,\r\n            ValidPrice: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                LoadingPlace: \"\",\r\n                UnloadingPlace: \"\",\r\n                Price: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidLoadingPlace = this.state.ValidLoadingPlace;\r\n        let ValidUnloadingPlace = this.state.ValidUnloadingPlace;\r\n        let ValidPrice = this.state.ValidPrice;\r\n\r\n        switch (field) {\r\n            case \"LoadingPlace\":\r\n                ValidLoadingPlace = (value !== \"\");\r\n                Errors.LoadingPlace = ValidLoadingPlace ? \"\" : \"Loading place is required.\";\r\n                break;\r\n            case \"UnloadingPlace\":\r\n                ValidUnloadingPlace = (value !== \"\");\r\n                Errors.UnloadingPlace = ValidUnloadingPlace ? \"\" : \"Unloading place is required.\";\r\n                break;\r\n            case \"Price\":\r\n                ValidPrice = (value > 0.00);\r\n                Errors.Price = ValidPrice ? \"\" : \"Price must be more than $0.00.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidLoadingPlace: ValidLoadingPlace,\r\n            ValidUnloadingPlace: ValidUnloadingPlace,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidLoadingPlace &&\r\n                        this.state.ValidUnloadingPlace &&\r\n                        this.state.ValidPrice\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newJobRequest = {\r\n            Token: localStorage.Token,\r\n            LoadingPlace: this.state.LoadingPlace,\r\n            UnloadingPlace: this.state.UnloadingPlace,\r\n            TripType: this.state.TripType,\r\n            Price: this.state.Price\r\n        };\r\n\r\n        console.log(\"Going to add Job Request.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addJobRequest(newJobRequest).then(response => {\r\n            if (response.Message === \"Job request is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div className=\"modal\" id=\"add-job-request-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Add Job Request</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"control-label\">Loading Place</label>\r\n                                                        <span className=\"text-danger\" style={Required}>*</span>\r\n                                                        <input type=\"text\" name=\"LoadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                            value={this.state.LoadingPlace} onChange={this.onChange} />\r\n                                                        <span className=\"text-danger\">{this.state.Errors.LoadingPlace}</span>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"control-label\">Unloading Place</label>\r\n                                                        <span className=\"text-danger\" style={Required}>*</span>\r\n                                                        <input type=\"text\" name=\"UnloadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                            value={this.state.UnloadingPlace} onChange={this.onChange} />\r\n                                                        <span className=\"text-danger\">{this.state.Errors.UnloadingPlace}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"control-label\">Trip Type</label><br />\r\n                                                        <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                            <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                                aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                                <span>{this.state.TripType}</span>\r\n                                                                <span className=\"caret\"></span>\r\n                                                            </button>\r\n                                                            <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                                <li><a onClick={() => { this.setState({ TripType: \"One Way\" }); }}>One Way</a></li>\r\n                                                                <li><a onClick={() => { this.setState({ TripType: \"Two Way\" }); }}>Two Way</a></li>\r\n                                                            </ul>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"control-label\">Price (USD)</label>\r\n                                                        <span className=\"text-danger\" style={Required}>*</span>\r\n                                                        <input type=\"number\" min=\"0.00\" step=\"0.01\" max=\"100.00\" name=\"Price\"\r\n                                                            className=\"form-control\" autoComplete=\"off\" value={this.state.Price} onChange={this.onChange} />\r\n                                                        <span className=\"text-danger\">{this.state.Errors.Price}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\"\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddJobRequestDialog;","import React, { Component } from \"react\";\r\nimport { getData } from \"../../../DriverFunctions\";\r\nimport JobRequestPackageItem from \"./JobRequestPackageItem\";\r\nimport AddJobRequestDialog from \"./AddJobRequestDialog\";\r\nimport ProgressBar from \"../../../../../controls/ProgressBar\";\r\n\r\nclass JobRequestsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllJobRequestPackages: [],\r\n            JobRequestPackages: [],\r\n            SearchString: \"\",\r\n            Searching: null\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobRequestPackages\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job request packages found.\") {\r\n                    this.setState({\r\n                        AllJobRequestPackages: response.JobRequestPackages,\r\n                        JobRequestPackages: response.JobRequestPackages,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllJobRequestPackages: [],\r\n                        JobRequestPackages: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.SearchString === \"\") {\r\n            this.setState({\r\n                JobRequestPackages: this.state.AllJobRequestPackages\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allJobRequestPackages = this.state.AllJobRequestPackages;\r\n        let filteredJobRequestPackages = [];\r\n        let count = 0;\r\n\r\n        for (let jobRequestPackage of allJobRequestPackages) {\r\n            let jobRequest = jobRequestPackage.JobRequest;\r\n\r\n            if (jobRequest.LoadingPlace.includes(this.state.SearchString) ||\r\n                jobRequest.UnloadingPlace.includes(this.state.SearchString)) {\r\n                filteredJobRequestPackages[count++] = jobRequestPackage;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            JobRequestPackages: filteredJobRequestPackages\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const jobRequestPackages = this.state.JobRequestPackages;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container\" style={{paddingBottom: \"10px\", marginBottom: \"12px\"}}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-briefcase\"></span>   Job Requests</div>\r\n                            <p className=\"color-light\">Create new job requests for your current and/or near-by locations to get a chance to increase your revenue.</p>\r\n                            <div className=\"btn-group\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-primary\"\r\n                                    data-toggle=\"modal\"\r\n                                    data-target=\"#add-job-request-dialog\">New Job Request</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <AddJobRequestDialog\r\n                OnOK={() => {\r\n                    this.onComponentUpdated();\r\n                }} />\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Your Job Requests</div>\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search by Places\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={this.state.SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            {(jobRequestPackages.length === 0) ?\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            {this.state.Searching ? <div className=\"col-md-24 text-center\">\r\n                                <div>\r\n                                    <div className=\"type-h3\" style={{ color: \"#008575\" }}>Searching</div>\r\n                                    <ProgressBar />\r\n                                </div>\r\n                            </div> : <div className=\"col-md-24 text-center\">\r\n                                    <h3><span className=\"fas fa-exclamation-triangle\" style={{ color: \"#FFBF15\" }}></span> No job requests found.</h3>\r\n                                </div>}\r\n                        </div>\r\n                    </div>\r\n                </div> : <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {this.state.JobRequestPackages.map((jobRequestPackage, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <JobRequestPackageItem Index={index}\r\n                                JobRequestPackage={jobRequestPackage} \r\n                                OnJobRequestUpdated={this.onComponentUpdated} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobRequestsList;","import React, { Component } from \"react\";\r\nimport JobRequestsList from \"./JobRequestsList.js\";\r\n\r\nclass JobRequests extends Component {\r\n    render() {\r\n        return <section>\r\n            <JobRequestsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobRequests;","import React, { Component } from \"react\";\r\n\r\nclass JobOfferContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const jobOffer = this.props.JobOffer;\r\n        const createdHoursAgo = Math.abs(new Date() - new Date(jobOffer.TimeCreated)) / 36e5;\r\n\r\n       return <section>\r\n           <div className=\"jumbotron theme-default\">\r\n               <div className=\"container\">\r\n                   <div className=\"col-md-24\">\r\n                       <div className=\"type-h3 color-default p-t-n\">{(index ?\r\n                           `${index + 1}. ${jobOffer.JobOfferType} Job Offer` :\r\n                           `${jobOffer.JobOfferType} Job Offer`)}</div>\r\n                       <div className=\"type-sh3\">\r\n                           <span className=\"fas fa-tag\" style={{ color: \"#606060\" }}></span>   {`$${jobOffer.Price}`}\r\n                       </div>\r\n                   </div>\r\n                   <div className=\"row\">\r\n                       <div className=\"col-md-8\">\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-map-marker-alt\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Loading Place</div>\r\n                                       <div className=\"content-text-secondary\">{jobOffer.LoadingPlace}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-map-marker-alt\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Unloading Place</div>\r\n                                       <div className=\"content-text-secondary\">{jobOffer.UnloadingPlace}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-map-signs\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Trip Type</div>\r\n                                       <div className=\"content-text-secondary\">{jobOffer.TripType}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-clock\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Accpeted Delay</div>\r\n                                       <div className=\"content-text-secondary\">{`${jobOffer.AcceptedDelay} Hour(s)`}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                       <div className=\"col-md-8\">\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-box\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Cargo Type</div>\r\n                                       <div className=\"content-text-secondary\">{jobOffer.CargoType}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-weight\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Cargo Weight</div>\r\n                                       <div className=\"content-text-secondary\">{`${jobOffer.CargoWeight} lbs.`}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-calendar\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Loading Date</div>\r\n                                       <div className=\"content-text-secondary\">{new Date(jobOffer.LoadingDate).toDateString()}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-clock\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Loading Time</div>\r\n                                       <div className=\"content-text-secondary\">{jobOffer.LoadingTime}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                       <div className=\"col-md-8\">\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-id-badge\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Entry/Exit</div>\r\n                                       <div className=\"content-text-secondary\">{(jobOffer.EntryExit === 1) ?\r\n                                           <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                           <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-plug\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Availabe</div>\r\n                                       <div className=\"content-text-secondary\">{(createdHoursAgo < jobOffer.WaitingTime) ? \r\n                                           <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                           <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-calendar\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Posted on</div>\r\n                                       <div className=\"content-text-secondary\">{new Date(jobOffer.TimeCreated).toDateString()}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-clock\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Posted at</div>\r\n                                       <div className=\"content-text-secondary\">{new Date(jobOffer.TimeCreated).toTimeString()}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobOfferContainer;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { addDriverRequest } from \"../../../DriverFunctions\";\r\n\r\nclass BidJobOfferDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Price: 0,\r\n\r\n            ValidPrice: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                Price: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidPrice = this.state.ValidPrice;\r\n\r\n        switch (field) {\r\n            case \"Price\":\r\n                ValidPrice = (value !== \"\");\r\n                Errors.Price = ValidPrice ? \"\" : \"Bidding price is required.\";\r\n\r\n                if (Errors.Price !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPrice = (value <= this.props.JobOffer.Price);\r\n                Errors.Price = ValidPrice ? \"\" : \"You cannot bid more than maximum accepted price.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidPrice\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (this.props.IsRequestSent()) {\r\n            return;\r\n        }\r\n\r\n        const newDriverRequest = {\r\n            Token: localStorage.Token,\r\n            JobOfferID: this.props.JobOffer.JobOfferID,\r\n            Price: this.state.Price\r\n        };\r\n\r\n        console.log(\"Going to add driver request...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addDriverRequest(newDriverRequest).then(response => {\r\n            if (response.Message === \"Driver request is added.\") {\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n\r\n                this.cancelButton.click();\r\n                this.props.OnOK(response.DriverRequest);\r\n            }\r\n            else {\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div className=\"modal\" id={`bid-job-offer-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"bid.png\" src=\"./images/bid.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Bid on Price</div>\r\n                                    <div className=\"type-sh3\">{`Maximum Accepted Price is $${this.props.JobOffer.Price}.`}</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Price (USD)</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" min=\"0.00\" step=\"0.01\" max=\"100.00\" name=\"Price\"\r\n                                                    className=\"form-control\" autoComplete=\"off\" value={this.state.Price} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Price}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\"\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Bid\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default BidJobOfferDialog;","import React, { Component } from \"react\";\r\nimport { addDriverRequest, deleteDriverRequest } from \"../../../DriverFunctions\";\r\nimport TraderContainer from \"../../../../../containers/trader/TraderContainer\";\r\nimport JobOfferContainer from \"../../../../../containers/jobOffer/JobOfferContainer\";\r\nimport BidJobOfferDialog from \"./BidJobOfferDialog\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\n\r\nclass JobOfferPostsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Preloader: null\r\n        };\r\n\r\n        this.onSendRequest = this.onSendRequest.bind(this);\r\n        this.onCancelRequest = this.onCancelRequest.bind(this);\r\n    }\r\n\r\n    onCancelRequest = async jobOffer => {\r\n        const discardedDriverRequest = {\r\n            Token: localStorage.Token,\r\n            JobOfferID: jobOffer.JobOfferID\r\n        };\r\n\r\n        console.log(\"Going to delete driver request...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await deleteDriverRequest(discardedDriverRequest).then(response => {\r\n            if (response.Message === \"Driver request is deleted.\") {\r\n                this.props.OnRequestUpdated(jobOffer, null);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    };\r\n\r\n    onSendRequest = async jobOffer => {\r\n        if (this.props.JobOfferPost.RequestSent) {\r\n            return;\r\n        }\r\n\r\n        const newDriverRequest = {\r\n            Token: localStorage.Token,\r\n            JobOfferID: jobOffer.JobOfferID,\r\n            Price: null\r\n        };\r\n\r\n        console.log(\"Going to add driver request...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addDriverRequest(newDriverRequest).then(response => {\r\n            if (response.Message === \"Driver request is added.\") {\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n\r\n                this.props.OnRequestUpdated(jobOffer, response.DriverRequest);\r\n            }\r\n            else {\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const jobOffer = this.props.JobOfferPost.JobOffer;\r\n        const trader = this.props.JobOfferPost.Trader;\r\n        const driverRequest = this.props.JobOfferPost.DriverRequest;\r\n\r\n        let RequestButton;\r\n\r\n        if (driverRequest) {\r\n            RequestButton = <button className=\"btn btn-secondary\"\r\n                onClick={async () => { \r\n                    await this.onCancelRequest(jobOffer); }}>{(jobOffer.JobOfferType === \"Fixed-Price\") ?\r\n                    \"Cancel Request\" :\r\n                    \"Cancel Bid\"}\r\n            </button>;\r\n        }\r\n        else {\r\n            RequestButton = (jobOffer.JobOfferType === \"Fixed-Price\") ?\r\n                <button className=\"btn btn-primary\"\r\n                    onClick={async () => { await this.onSendRequest(jobOffer); }}>Send Request</button> :\r\n                <button className=\"btn btn-primary\"\r\n                    data-toggle=\"modal\"\r\n                    disabled={driverRequest}\r\n                    data-target={`#bid-job-offer-dialog-${index}`}>Bid</button>;\r\n        }\r\n\r\n        return <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron p-xxxs back-color-gray\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"type-h5 color-default p-t-n\">\r\n                                {`${index + 1}.`}\r\n                                {driverRequest ? <span class=\"badge back-color-default m-l-xxs\">{(jobOffer.JobOfferType === \"Fixed-Price\") ?\r\n                                    \"REQUEST SENT\" : \"ALREADY BADE\"}</span> : null}\r\n                            </div>\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-user\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Posted By</div>\r\n                                            <div className=\"content-text-secondary\">{`${trader.FirstName} ${trader.LastName}`}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-clock\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Posted On</div>\r\n                                            <div className=\"content-text-secondary\">{new Date(jobOffer.TimeCreated).toDateString()}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {driverRequest && driverRequest.Price ?\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-tag\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Your Bid Price</div>\r\n                                                <div className=\"content-text-secondary\">{`$${driverRequest.Price}`}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> : \r\n                                    null}\r\n                            </div>\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-tag\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Price</div>\r\n                                            <div className=\"content-text-secondary\">{`$${jobOffer.Price}`}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas  fa-map-marker-alt\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">From </div>\r\n                                            <div className=\"content-text-secondary\">{jobOffer.LoadingPlace}</div>\r\n                                            <div className=\"content-text-primary\">To</div>\r\n                                            <div className=\"content-text-secondary\">{jobOffer.UnloadingPlace}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"text-right\">\r\n                                {RequestButton}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"back-color-gray\" data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#job-offer-post-${index}`}>\r\n                    <div className=\"type-h4 text-right color-default p-xxs\">\r\n                        {\"   More Details\"} <i className=\"fas fa-ellipsis-v\"></i>\r\n                        <i class=\"glyph glyph-add\"></i>\r\n                        <i class=\"glyph glyph-remove\"></i>\r\n                    </div>\r\n                </div>\r\n                <div className=\"collapse\" id={`job-offer-post-${index}`}>\r\n                    <ul className=\"nav nav-tabs\" role=\"tablist\"\r\n                        style={{\r\n                            padding: \"10px\",\r\n                            backgroundColor: \"#EFEFEF\",\r\n                            width: \"100%\",\r\n                            margin: \"0px\"\r\n                        }}>\r\n                        <li role=\"presentation\" className=\"active\">\r\n                            <a href={`#job-offer-${index}`} aria-controls={`job-offer-${index}`} role=\"tab\" data-toggle=\"tab\">Job Offer</a>\r\n                        </li>\r\n                        <li role=\"presentation\">\r\n                            <a href={`#trader-${index}`} aria-controls={`trader-${index}`} role=\"tab\" data-toggle=\"tab\">Trader</a>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"tab-content\">\r\n                        <div role=\"tabpanel\" className=\"tab-pane active\" id={`job-offer-${index}`}>\r\n                            <JobOfferContainer JobOffer={jobOffer} />\r\n                        </div>\r\n                        <div role=\"tabpanel\" className=\"tab-pane\" id={`trader-${index}`}>\r\n                            <TraderContainer TraderID={jobOffer.TraderID} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <BidJobOfferDialog\r\n                    DialogID={index}\r\n                    JobOffer={jobOffer}\r\n                    IsRequestSent={() => { return driverRequest ? true : false; }}\r\n                    OnOK={driverRequest => { this.props.OnRequestUpdated(jobOffer, driverRequest); }} />\r\n            </li>\r\n            {this.state.Preloader}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobOfferPostsList;","import React, { Component } from \"react\";\r\nimport ProgressBar from \"../../../../../controls/ProgressBar\";\r\nimport { getData } from \"../../../DriverFunctions\";\r\nimport JobOfferPostListItem from \"./JobOfferPostListItem\";\r\n\r\nclass JobOfferPostsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobOfferPosts: [],\r\n            Preloader: null,\r\n            Searching: false,\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobOfferPosts\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Job offer posts found.\") {\r\n                    this.setState({\r\n                        JobOfferPosts: response.JobOfferPosts,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobOfferPosts: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Searching) {\r\n            return <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#202020\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"job_offers.png\" src=\"./images/job_offers.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div className=\"col-md-12 col-md-pull-12\">\r\n                                <div className=\"type-h3\">Job Offers</div>\r\n                                <p>Job opportunities from Traders and Brokers are displayed here.</p>\r\n                                <div class=\"type-sh3\" style={{ color: \"#008575\" }}>Searhcing</div>\r\n                                <ProgressBar />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n        else if (this.state.JobOfferPosts.length === 0) {\r\n            return <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#202020\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"job_offers.png\" src=\"./images/job_offers.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div className=\"col-md-12 col-md-pull-12\">\r\n                                <div className=\"type-h3\">Job Offers</div>\r\n                                <div className=\"type-sh3\">No Job Offers Found...</div>\r\n                                <p>Job opportunities from Traders and Brokers are displayed here.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n        else {\r\n            return <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Job Offers</div>\r\n                <ol className=\"list-items\" style={{ marginTop: \"0px\" }}>\r\n                    {this.state.JobOfferPosts.map((jobOfferPost, index) => {\r\n                        return <JobOfferPostListItem\r\n                            key={index}\r\n                            Index={index}\r\n                            JobOfferPost={jobOfferPost}\r\n                            OnRequestUpdated={(jobOffer, driverRequest) => {\r\n                                let jobOfferPosts = this.state.JobOfferPosts;\r\n\r\n                                for (let jobOfferPost of jobOfferPosts) {\r\n                                    if (jobOfferPost.JobOffer.JobOfferID === jobOffer.JobOfferID) {\r\n                                        jobOfferPost.DriverRequest = driverRequest;\r\n                                        break;\r\n                                    }\r\n                                }\r\n\r\n                                this.setState({\r\n                                    JobOfferPosts: jobOfferPosts\r\n                                });\r\n                            }} />;\r\n                    })}\r\n                </ol>\r\n            </section>;\r\n        }\r\n       \r\n    }\r\n};\r\n\r\nexport default JobOfferPostsList;","import React, { Component } from \"react\";\r\nimport JobOfferPostsList from \"./JobOfferPostsList\";\r\n\r\nclass JobOffers extends Component {\r\n   render() {\r\n       return <section>\r\n           <JobOfferPostsList />\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobOffers;","import React, { Component } from \"react\";\r\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\r\nimport Geocode from \"react-geocode\";\r\nimport Autocomplete from 'react-google-autocomplete';\r\nGeocode.setApiKey(\"AIzaSyC3YT8gMjGGdzQpHBNcayZYF4rvbGTL8IM\");\r\nGeocode.enableDebug();\r\n\r\nclass Map extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            NoState: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const AsyncMap = withScriptjs(\r\n            withGoogleMap(\r\n                props => (\r\n                    <GoogleMap\r\n                        googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyC3YT8gMjGGdzQpHBNcayZYF4rvbGTL8IM&libraries=places\"\r\n                        defaultZoom={10}\r\n                        defaultCenter={{ lat: 33.784310, lng: 72.738780 }}>                   \r\n                    </GoogleMap>\r\n                )\r\n            )\r\n        );\r\n        return (\r\n            <div>\r\n                <AsyncMap\r\n                    googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyC3YT8gMjGGdzQpHBNcayZYF4rvbGTL8IM&libraries=places\"\r\n                    loadingElement={ <div style={{ height: `100%` }} /> }\r\n                    containerElement={ <div style={{ height: \"400px\" }} /> }\r\n                    mapElement={ <div style={{ height: `100%` }} /> } />\r\n            </div>              \r\n        );\r\n    }\r\n};\r\n\r\nexport default Map;","import React, { Component } from \"react\";\r\nimport Map from \"../../../../../controls/Map\";\r\n\r\nclass MapTab extends Component {\r\n    render() {\r\n        return <section>\r\n            <div>\r\n                <Map />\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default MapTab;","import React, { Component } from \"react\";\r\n\r\nclass ProgressRing extends Component {\r\n    render() {\r\n        return <div className=\"progress-ring\">\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n        </div>;\r\n    }\r\n};\r\n\r\nexport default ProgressRing;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\nimport { getData, addObjectionReason } from \"../../../../DriverFunctions\";\r\n\r\nclass ReasonsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ObjectionReasons: [],\r\n            AddPressed: false,\r\n            NewReason: \"\",\r\n            ValidNewReason: false,\r\n\r\n            ValidForm: false,\r\n            ProgressRing: null,\r\n\r\n            Errors: {\r\n                NewReason: \"0\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"ObjectionReasons\"\r\n            };\r\n\r\n            this.setState({\r\n                ProgressRing: <ProgressRing />\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Objection reasons found.\") {\r\n                    this.setState({\r\n                        ObjectionReasons: response.ObjectionReasons,\r\n                        ProgressRing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        ObjectionReasons: [],\r\n                        ProgressRing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewReason = this.state.ValidNewReason;\r\n\r\n        switch (field) {\r\n            case \"NewReason\":\r\n                ValidNewReason = (value.length > 0 && value.length <= 50);\r\n                Errors.NewReason = ValidNewReason ? value.length : \"Too long...\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewReason: ValidNewReason\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidNewReason\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ProgressRing: <ProgressRing />\r\n        });\r\n\r\n        const newObjectionReason = {\r\n            Token: localStorage.Token,\r\n            Reason: this.state.NewReason\r\n        };\r\n\r\n        console.log(\"Going to add Objection reason...\");\r\n\r\n        await addObjectionReason(newObjectionReason).then(response => {\r\n            if (response.Message === \"Objection reason is added.\") {\r\n                let objectionReasons = this.state.ObjectionReasons;\r\n                let errors = this.state.Errors;\r\n\r\n                objectionReasons.push(response.ObjectionReason);\r\n                errors.NewReason = \"0\";\r\n\r\n                this.setState({\r\n                    AddPressed: false,\r\n                    ObjectionReasons: objectionReasons,\r\n                    Errors: errors,\r\n                    NewReason: \"\"\r\n                });\r\n            }\r\n\r\n            this.setState({\r\n                ProgressRing: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const objectionReasons = this.state.ObjectionReasons;\r\n\r\n        return <section>\r\n            {this.state.ProgressRing}\r\n            <div class=\"entity-list entity-list-expandable\">\r\n                <div class=\"entity-list entity-list-add-item-button\">\r\n                    <a class={this.state.AddPressed ? \"entity-list-item active\" : \"entity-list-item\"}>\r\n                        <div class=\"item-icon\" onClick={() => {\r\n                            this.state.AddPressed ?\r\n                                this.setState({ AddPressed: false }) :\r\n                                this.setState({ AddPressed: true });\r\n                        }}>\r\n                            <span class=\"glyph glyph-add\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Add a Reason</div>\r\n                            <div class=\"content-text-secondary\" style={(this.state.Errors.NewReason === \"Too long...\") ? { color: \"#D75A4A\" } : null}>{this.state.Errors.NewReason}</div>\r\n                        </div>\r\n                        <div class=\"item-content-expanded\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <input type=\"text\" className=\"form-control\" name=\"NewReason\" autocomplete=\"off\"\r\n                                    value={this.state.NewReason} onChange={this.onChange} />\r\n                                <input type=\"submit\" value=\"Add\" className=\"btn btn-secondary\" disabled={!this.state.ValidForm} />\r\n                            </form>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                {objectionReasons.map((objectionReason, index) => {\r\n                    return <div key={index} class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-thumbs-down\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <button type=\"button\" class=\"btn btn-secondary\" style={{ margin: \"0px\", minWidth: \"0px\" }}\r\n                                onClick={() => { this.props.OnReasonSelected(objectionReason.Reason); }}>Select</button>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">{`${index + 1}.`}</div>\r\n                            <div class=\"content-text-secondary\">{objectionReason.Reason}</div>\r\n                        </div>\r\n                    </div>;\r\n                })}\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ReasonsList;","import React, { Component } from \"react\";\r\nimport ReasonsList from \"./ReasonsList\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { addJobObjection } from \"../../../../DriverFunctions\";\r\n\r\nclass AddObjectionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Reason: \"Select from the list.\",\r\n            Comment: \"\",\r\n\r\n            ValidReason: false,\r\n            ValidComment: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                Comment: \"0\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidComment = this.state.ValidComment;\r\n\r\n        switch (field) {\r\n            case \"Comment\":\r\n                ValidComment = (value !== \"\");\r\n                Errors.Comment = ValidComment ? \"\" : \"Comment is required\";\r\n\r\n                if (Errors.Comment !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidComment = (value.length <= 200);\r\n                Errors.Comment = ValidComment ? value.length : \"Too long...\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidComment: ValidComment\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidReason && this.state.ValidComment\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const newJobObjection = {\r\n            Token: localStorage.Token,\r\n            OnGoingJobID: this.props.OnGoingJobID,\r\n            Reason: this.state.Reason,\r\n            Comment: this.state.Comment\r\n        };\r\n\r\n        console.log(\"Going to add job objection...\");\r\n\r\n        await addJobObjection(newJobObjection).then(response => {\r\n            if (response.Message === \"Job objection is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"add-objection-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}\r\n                                    style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Add an Objection</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label>Reason</label>\r\n                                    <input type=\"text\" class=\"form-control\" name=\"Reason\" style={{ maxWidth: \"100%\" }} readonly\r\n                                        value={this.state.Reason} />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label>Comment</label>\r\n                                    <textarea rows=\"4\" class=\"form-control\" style={{ maxWidth: \"100%\" }} name=\"Comment\"\r\n                                        value={this.state.Comment} onChange={this.onChange}></textarea>\r\n                                    <span>{this.state.Errors.Comment}</span>\r\n                                </div>\r\n                                <div style={{ textAlign: \"right\" }}>\r\n                                    <input type=\"submit\" value=\"Add Objection\" className=\"btn btn-primary\" style={{ margin: \"0px\" }} disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                            <br/>\r\n                            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                            <div className=\"type-h4\" style={{ color: \"#008575\", padding: \"10px\", textAlign: \"right\" }}>{\"   Reasons\"}\r\n                                <i className=\"fas fa-ellipsis-v\"></i>\r\n                            </div>\r\n                            <ReasonsList ObjectionReasons={this.props.ObjectionReasons} OnReasonSelected={reason => {\r\n                                this.setState({\r\n                                    Reason: reason,\r\n                                    ValidReason: true\r\n                                }, () => {\r\n                                    this.setState({\r\n                                        ValidForm: this.state.ValidReason && this.state.ValidComment\r\n                                    });\r\n                                });\r\n                            }} />                           \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddObjectionDialog;","import React, { Component } from \"react\";\r\n\r\nclass JobObjectionContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const jobObjectionPackage = this.props.JobObjectionPackage;\r\n        const jobObjection = jobObjectionPackage.JobObjection;\r\n        const firstName = jobObjectionPackage.FirstName;\r\n        const lastName = jobObjectionPackage.LastName;\r\n\r\n        let createdOn = new Date(jobObjection.Created);\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-24\">\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                {`${index + 1}. Objection By ${firstName} ${lastName}`}\r\n                            </div>\r\n                            <div className=\"type-sh3\">\r\n                                <span className=\"fas fa-clock\" style={{ color: \"#606060\" }}></span>   {`Posted on ${createdOn.toDateString()}.`}\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-24\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-exclamation\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Reason</div>\r\n                                                <div className=\"content-text-secondary\">{jobObjection.Reason}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-comment\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Comment</div>\r\n                                                <div className=\"content-text-secondary\">{jobObjection.Comment}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobObjectionContainer;","import React, { Component } from \"react\";\r\nimport AddObjectionDialog from \"./AddObjectionDialog\";\r\nimport { getData } from \"../../../../DriverFunctions\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport JobObjectionContainer from \"../../../../../../containers/onGoingJob/JobObjectionContainer\";\r\n\r\nclass Objections extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobObjectionPackages: [],\r\n            Searching: false,\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobObjectionPackages\",\r\n                Params: {\r\n                    OnGoingJobID: this.props.OnGoingJobID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job objection packages found.\") {\r\n                    this.setState({\r\n                        JobObjectionPackages: response.JobObjectionPackages,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobObjectionPackages: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const jobObjectionPackages = this.state.JobObjectionPackages;\r\n\r\n        return <section>\r\n            <div class=\"page-header back-color-gradient\">\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-thumbs-down\"></span>   Job Objections</div>\r\n                            <p className=\"color-light\">Objections on this job, either by you or your customer, will terminate the job.</p>\r\n                            <div className=\"btn-group\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-primary\"\r\n                                    data-toggle=\"modal\"\r\n                                    data-target=\"#add-objection-dialog\">Add Objection</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <AddObjectionDialog OnGoingJobID={this.props.OnGoingJobID}\r\n                OnOK={this.onComponentUpdated} />\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Job Objections</div>\r\n            {(jobObjectionPackages.length === 0) ?\r\n                <SearchingContainer Searching={this.state.Searching}\r\n                    SearchingFor=\"job objctions\" /> : <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {jobObjectionPackages.map((jobObjectionPackage, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <JobObjectionContainer Index={index}\r\n                                JobObjectionPackage={jobObjectionPackage} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default Objections;","import React, { Component } from \"react\";\r\n\r\nclass JobContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const onGoingJob = this.props.OnGoingJob;\r\n\r\n        let loadingDate = new Date(onGoingJob.LoadingDate);\r\n        loadingDate.setHours((parseInt(onGoingJob.LoadingTime.substring(0, 2))));\r\n        loadingDate.setMinutes(parseInt(onGoingJob.LoadingTime.substring(3, 5)));\r\n        loadingDate.setSeconds(parseInt(onGoingJob.LoadingTime.substring(6)));\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"col-md-24\">\r\n                        <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Job Details</div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-map-marker-alt\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Place</div>\r\n                                        <div className=\"content-text-secondary\">{onGoingJob.LoadingPlace}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-map-marker-alt\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Unloading Place</div>\r\n                                        <div className=\"content-text-secondary\">{onGoingJob.UnloadingPlace}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-map-signs\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Trip Type</div>\r\n                                        <div className=\"content-text-secondary\">{onGoingJob.TripType}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Accpeted Delay</div>\r\n                                        <div className=\"content-text-secondary\">{`${onGoingJob.AcceptedDelay} Hour(s)`}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-box\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Cargo Type</div>\r\n                                        <div className=\"content-text-secondary\">{onGoingJob.CargoType}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-weight\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Cargo Weight</div>\r\n                                        <div className=\"content-text-secondary\">{`${onGoingJob.CargoWeight} lbs.`}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Date</div>\r\n                                        <div className=\"content-text-secondary\">{loadingDate.toDateString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Time</div>\r\n                                        <div className=\"content-text-secondary\">{loadingDate.toTimeString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-id-badge\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Entry/Exit</div>\r\n                                        <div className=\"content-text-secondary\">{(onGoingJob.EntryExit === 1) ?\r\n                                            <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                            <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Started on</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(onGoingJob.Created).toDateString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Started at</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(onGoingJob.Created).toTimeString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobContainer;","import React, { Component } from \"react\";\r\nimport JobContainer from \"../../../../../containers/onGoingJob/JobContainer\";\r\n\r\nclass Job extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const onGoingJob = this.props.OnGoingJob;\r\n        const hasObjections = this.props.HasObjections;\r\n\r\n        let loadingDate = new Date(onGoingJob.LoadingDate);\r\n        loadingDate.setHours((parseInt(onGoingJob.LoadingTime.substring(0, 2))));\r\n        loadingDate.setMinutes(parseInt(onGoingJob.LoadingTime.substring(3, 5)));\r\n        loadingDate.setSeconds(parseInt(onGoingJob.LoadingTime.substring(6)));\r\n\r\n        let JumbotronContent;\r\n\r\n        if (onGoingJob.CompletedByDriver) {\r\n            JumbotronContent = <section>\r\n                <h3><span className=\"fas fa-smile p-r-xxxs\"></span>This Job is Completed.</h3>\r\n                <div class=\"type-sh3\">Waiting for Trader's Approval</div>\r\n            </section>;\r\n        }\r\n        else if (hasObjections) {\r\n            JumbotronContent = <h3><span className=\"fas fa-exclamation p-r-xxxs\"></span>This Job is Terminated.</h3>;\r\n        }\r\n        else {\r\n            let dateDifference = Math.abs(new Date() - loadingDate);\r\n            const days = Math.floor(dateDifference / 86400000);\r\n            const hours = Math.floor((dateDifference % 86400000) / 3600000);\r\n            const minutes = Math.round(((dateDifference % 86400000) % 3600000) / 60000);\r\n\r\n            let dayString = (days > 0) ? `${days} Days ` : \"\";\r\n            let hourString = (hours > 0) ? `${hours} Hours ` : \"\";\r\n            let minuteString = (minutes > 0) ? `${minutes} Minutes ` : \"\";\r\n\r\n            let remainingTime = `${dayString}${hourString}${minuteString}Left To Load Cargo`;\r\n\r\n            if (days === 0 && hours === 0 && minutes === 0) {\r\n                remainingTime = \"Loading Time has Passed\";\r\n            }\r\n\r\n            JumbotronContent = <section>\r\n                <h3><span className=\"fas fa-clock\"></span>   {remainingTime}</h3>\r\n                <div class=\"type-sh3\">\r\n                    <span className=\"fas fa-tag\"></span>{`   $${onGoingJob.Price} AMOUNT IS ON YOUR WAY`}</div>\r\n                <div class=\"col-md-12 col-md-offset-6\">\r\n                    <div class=\"type-p3\">{(onGoingJob.AcceptedDelay > 0) ?\r\n                        <span>\r\n                            <span className=\"fas fa-leaf\"></span>\r\n                            <span>{` You have a relaxation of ${onGoingJob.AcceptedDelay} Hours.`}</span>\r\n                        </span> :\r\n                        <span>\"You must reach on time to load the cargo.\"</span>}\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n\r\n        return <section>\r\n            <div class=\"jumbotron theme-dark\" style={{ background: \"linear-gradient(to right bottom, #008575, #005162)\" }}>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-24 text-center\">\r\n                            {JumbotronContent}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <JobContainer OnGoingJob={onGoingJob} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Job;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport { finishJob } from \"../../../DriverFunctions\";\r\n\r\nclass FinishJobDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Progress: null\r\n        };\r\n\r\n        this.onYes = this.onYes.bind(this);\r\n    }\r\n\r\n    onYes = async () => {\r\n        this.setState({\r\n            Progress: true\r\n        });\r\n\r\n        const finishedJob = {\r\n            Token: localStorage.Token,\r\n        }\r\n\r\n        console.log(\"Going to finish the job...\");\r\n\r\n        await finishJob(finishedJob).then(response => {\r\n            if (response.Message === \"Job is finished.\") {\r\n                this.props.OnOK();\r\n            }\r\n\r\n            this.setState({\r\n                Progress: false\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const completedByDriver = this.props.CompletedByDriver;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"finish-job-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            {this.state.Progress ? <ProgressRing /> : null}\r\n                            <div className=\"type-h2\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Finish Job</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div class=\"jumbotron\">\r\n                                <div class=\"container\">\r\n                                    <div class=\"row\">\r\n                                        {completedByDriver ? \r\n                                            <div class=\"col-md-24\">\r\n                                                <img alt=\"confetti.png\" src=\"./images/confetti.png\" height=\"100\" />\r\n                                                <div class=\"type-h3\">Congratulations! You Have Completed Your Job</div>\r\n                                                <div class=\"type-sh3\">The Trader's Approval is Pending at the Moment</div>\r\n                                                <p><span class=\"color-default\">Important Note:</span> You can view this job in <span class=\"color-default\">Completed Jobs</span> tab, once the trader approves job completion.</p>\r\n                                            </div> : \r\n                                            <div class=\"col-md-24\">\r\n                                                <p>Are you sure you want to finish this job? Your trader will approve job completion afterwards!</p>\r\n                                                <div class=\"text-right\">\r\n                                                    <button class=\"btn btn-primary\" onClick={this.onYes}>Yes</button>\r\n                                                </div>\r\n                                            </div>}\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default FinishJobDialog;","import React, { Component } from \"react\";\r\nimport FinishJobDialog from \"./FinishJobDialog\";\r\n\r\nclass OnGoingJobOptions extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const hasObjections = this.props.HasObjections;\r\n        const completedByDriver = this.props.CompletedByDriver;\r\n        const completedByTrader = this.props.CompletedByTrader;\r\n\r\n        let jumbotronContent;\r\n\r\n        return hasObjections ?\r\n            <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"col-md-24\">\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Discard the Job?</div>\r\n                            <div className=\"type-sh3\">This will refund Trader's amount. You can take other jobs afterwards.</div>\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                            <button className=\"btn btn-danger\">Discard</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section> :\r\n            <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"col-md-24\">\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Job Completion Status</div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-24\">\r\n                                <div className=\"entity-list theme-alt\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-certificate\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Completion By You</div>\r\n                                            <div className=\"content-text-secondary\">{completedByDriver ?\r\n                                                <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-certificate\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Completion By Trader</div>\r\n                                            <div className=\"content-text-secondary\">{completedByTrader ?\r\n                                                <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                            <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#finish-job-dialog\">Finish Job</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <FinishJobDialog CompletedByDriver={completedByDriver}\r\n                    OnOK={() => { this.props.OnJobFinished(); }} />\r\n            </section>;\r\n             \r\n    }\r\n};\r\n\r\nexport default OnGoingJobOptions;","import React, { Component } from \"react\";\r\n\r\nclass Alert extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const message = this.props.Message;\r\n        const type = this.props.Type;\r\n\r\n        return <div class=\"alert-stack\">\r\n            <div class={`alert alert-${type} alert-dismissible fade in`} role=\"alert\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\"><i class=\"fas fa-times\"></i></span>\r\n                </button>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-24\">\r\n                            <p>{this.props.Message}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n};\r\n\r\nexport default Alert;","import React, { Component } from \"react\";\r\nimport { getData } from \"../../../DriverFunctions\";\r\nimport ProgressBar from \"../../../../../controls/ProgressBar\";\r\nimport TraderContainer from \"../../../../../containers/trader/TraderContainer\";\r\nimport MapTab from \"./MapTab\";\r\nimport Objections from \"./objectionsTab/Objections\";\r\nimport Job from \"./Job\";\r\nimport OnGoingJobOptions from \"./OnGoingJobOptions\";\r\nimport Alert from \"../../../../../controls/Alert\";\r\n\r\nclass OnGoingJob extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            OnGoingJob: null,\r\n            HasObjections: false,\r\n            Loading: false\r\n        };\r\n\r\n        this.interval = 0;\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n\r\n        this.interval = setInterval(async () => {\r\n            if (localStorage.Token) {\r\n                let request = {\r\n                    Token: localStorage.Token,\r\n                    Get: \"OnGoingJob\"\r\n                };\r\n\r\n                await getData(request).then(response => {\r\n                    if (response.Message === \"On-going job found.\") {\r\n                        console.log(response);\r\n                        this.setState({\r\n                            OnGoingJob: response.OnGoingJob,\r\n                            HasObjections: response.HasObjections\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            OnGoingJob: null,\r\n                            HasObjections: false\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        }, 15000);\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"OnGoingJob\"\r\n            };\r\n\r\n            this.setState({\r\n                Loading: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"On-going job found.\") {\r\n                    console.log(response);\r\n                    this.setState({\r\n                        OnGoingJob: response.OnGoingJob,\r\n                        HasObjections: response.HasObjections,\r\n                        Loading: false\r\n                    });\r\n                }\r\n                else {\r\n                    clearInterval(this.interval);\r\n\r\n                    this.setState({\r\n                        OnGoingJob: null,\r\n                        HasObjections: false,\r\n                        Loading: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    UNSAFE_componentWillMount() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.Loading || !this.state.OnGoingJob) {\r\n            return <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#202020\" }}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                alt=\"on_going_jobs.png\" src=\"./images/on_going_jobs.png\" data-source-index=\"2\" />\r\n                        </div>\r\n                        <div className=\"col-md-12 col-md-pull-12\">\r\n                            <div className=\"type-h3\">On-Going Job</div>\r\n                            {this.state.Loading ?\r\n                                <div>\r\n                                    <div class=\"type-sh3\" style={{ color: \"#008575\" }}>Searhcing</div>\r\n                                    <ProgressBar />\r\n                                </div> :\r\n                                <div className=\"type-sh3\">Couldn't Find Your Job...</div>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n        }\r\n        else {\r\n            const onGoingJob = this.state.OnGoingJob;\r\n            const hasObjections = this.state.HasObjections;\r\n\r\n            return <section>\r\n                <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                    <li role=\"presentation\" className=\"active\">\r\n                        <a href=\"#job-tab\" aria-controls=\"job-tab\" role=\"tab\" data-toggle=\"tab\">Job</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#trader-tab\" aria-controls=\"trader-tab\" role=\"tab\" data-toggle=\"tab\">Trader</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#map-tab\" aria-controls=\"map-tab\" role=\"tab\" data-toggle=\"tab\">Map</a>\r\n                    </li>\r\n                    {onGoingJob.CompletedByDriver ? \r\n                        null :\r\n                        <li role=\"presentation\">\r\n                            <a href=\"#objections-tab\" aria-controls=\"objections-tab\" role=\"tab\" data-toggle=\"tab\">Objections</a>\r\n                        </li>}\r\n                </ul>\r\n\r\n                {hasObjections ?\r\n                    <Alert Type=\"danger\"\r\n                        Message=\"This job has objections, and it cannot be completed now. For more information, please tap on Objections tab.\" /> :\r\n                    null}\r\n\r\n                <div className=\"tab-content\">\r\n                    <div role=\"tabpanel\" className=\"tab-pane active\" id=\"job-tab\">\r\n                        <Job OnGoingJob={onGoingJob} HasObjections={hasObjections} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"trader-tab\">\r\n                        <TraderContainer TraderID={onGoingJob.TraderID} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"map-tab\">\r\n                        <MapTab />\r\n                    </div>\r\n                    {onGoingJob.CompletedByDriver ? \r\n                        null :\r\n                        <div role=\"tabpanel\" className=\"tab-pane\" id=\"objections-tab\">\r\n                            <Objections OnGoingJobID={onGoingJob.OnGoingJobID} OnObjectionAdded={this.onComponentUpdated} />\r\n                        </div>}\r\n                </div>\r\n                <OnGoingJobOptions HasObjections={hasObjections}\r\n                    CompletedByDriver={onGoingJob.CompletedByDriver}\r\n                    CompletedByTrader={onGoingJob.CompletedByTrader}\r\n                    OnJobFinished={() => {\r\n                        let onGoingJob = this.state.OnGoingJob;\r\n                        onGoingJob.CompletedByDriver = true;\r\n\r\n                        this.setState({\r\n                            OnGoingJob: onGoingJob\r\n                        });\r\n                    }} />\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default OnGoingJob;","import React, { Component } from \"react\";\r\n\r\nclass CompletedJobContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const completedJob = this.props.CompletedJob;\r\n\r\n        let loadingDate = new Date(completedJob.LoadingDate);\r\n        loadingDate.setHours((parseInt(completedJob.LoadingTime.substring(0, 2))));\r\n        loadingDate.setMinutes(parseInt(completedJob.LoadingTime.substring(3, 5)));\r\n        loadingDate.setSeconds(parseInt(completedJob.LoadingTime.substring(6)));\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"col-md-24\">\r\n                        <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                            {`${index + 1}.`}\r\n                        </div>\r\n                        <div className=\"type-h4\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                            <span className=\"fas fa-check m-r-xxxs\"></span>\r\n                            {`Cargo Items were Delivered at ${completedJob.UnloadingPlace} from ${completedJob.LoadingPlace}.`}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-map-signs\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Trip Type</div>\r\n                                        <div className=\"content-text-secondary\">{completedJob.TripType}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Accpeted Delay</div>\r\n                                        <div className=\"content-text-secondary\">{`${completedJob.AcceptedDelay} Hour(s)`}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-id-badge\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Entry/Exit</div>\r\n                                        <div className=\"content-text-secondary\">{completedJob.EntryExit ?\r\n                                            <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                            <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-box\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Cargo Type</div>\r\n                                        <div className=\"content-text-secondary\">{completedJob.CargoType}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-weight\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Cargo Weight</div>\r\n                                        <div className=\"content-text-secondary\">{`${completedJob.CargoWeight} lbs.`}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Date</div>\r\n                                        <div className=\"content-text-secondary\">{loadingDate.toDateString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Time</div>\r\n                                        <div className=\"content-text-secondary\">{loadingDate.toTimeString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Completed on</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(completedJob.Created).toDateString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Completed at</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(completedJob.Created).toTimeString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default CompletedJobContainer;","import React, { Component } from \"react\";\r\nimport CompletedJobContainer from \"../../../../../containers/completedJob/CompletedJobContainer\";\r\nimport TraderContainer from \"../../../../../containers/trader/TraderContainer\";\r\nimport Rating from \"../../../../../controls/Rating\";\r\n\r\nclass CompletedJobPackageListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const completedJob = this.props.CompletedJobPackage.CompletedJob;\r\n        const driverReview = this.props.CompletedJobPackage.DriverReview;\r\n\r\n        return <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n            <CompletedJobContainer Index={index} CompletedJob={completedJob} />\r\n\r\n            {driverReview ?\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"col-md-24\">\r\n                            <div className=\"type-h3 color-default p-t-n\">Trader's Review</div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-24\">\r\n                                <div className=\"entity-list theme-alt\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-star\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Rating</div>\r\n                                            <div className=\"content-text-secondary\"><Rating Rating={driverReview.Rating} Color=\"color-alt\" Size=\"rating-small\" /></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-pencil-alt\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Review</div>\r\n                                            <div className=\"content-text-secondary\">{driverReview.Review}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> :\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"col-md-24\">\r\n                            <div className=\"type-h3 color-default p-t-n\">\r\n                                <span className=\"fas fa-star m-r-xxs\"></span>No Rating Found</div>\r\n                            <div className=\"type-sh3\">Your rating and review appears here.</div>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n\r\n            <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#completed-job-${index}`}>\r\n                <div className=\"type-h4\" style={{ color: \"#008575\", padding: \"10px\", textAlign: \"right\" }}>Trader Details\r\n                    <i className=\"fas fa-ellipsis-v\"></i>\r\n                    <i class=\"glyph glyph-add\"></i>\r\n                    <i class=\"glyph glyph-remove\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`completed-job-${index}`}>\r\n                <TraderContainer TraderID={completedJob.TraderID} />\r\n            </div>\r\n        </li>;\r\n    }\r\n};\r\n\r\nexport default CompletedJobPackageListItem;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport CompletedJobPackageListItem from \"./CompletedJobPackageListItem\";\r\nimport { getData } from \"../../../DriverFunctions\";\r\n\r\nclass CompletedJobsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllCompletedJobPackages: [],\r\n            CompletedJobPackages: [],\r\n            SearchDate: \"\",\r\n            Searching: false,\r\n        }\r\n\r\n        this.onLoad = this.onLoad.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onLoad();\r\n    }\r\n\r\n    onLoad = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"CompletedJobPackages\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Completed job packages found.\") {\r\n                    this.setState({\r\n                        AllCompletedJobPackages: response.CompletedJobPackages,\r\n                        CompletedJobPackages: response.CompletedJobPackages,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllCompletedJobPackages: [],\r\n                        CompletedJobPackages: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.SearchDate === \"\") {\r\n            this.setState({\r\n                CompletedJobPackages: this.state.AllCompletedJobPackages\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allCompletedJobPackages = this.state.AllCompletedJobPackages;\r\n        let filteredCompletedJobPackages = [];\r\n        let count = 0;\r\n        let searchDate = this.state.SearchDate;\r\n\r\n        for (let completedJobPackage of allCompletedJobPackages) {\r\n            let completedJob = completedJobPackage.CompletedJob;\r\n\r\n            if ((new Date(completedJob.LoadingDate).getTime() === new Date(searchDate).getTime()) ||\r\n                (new Date(completedJob.Created).getTime() === new Date(searchDate).getTime())) {\r\n                filteredCompletedJobPackages[count++] = completedJobPackage;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            CompletedJobPackages: filteredCompletedJobPackages\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const completedJobPackages = this.state.CompletedJobPackages;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-check m-r-xxs\"></span>Completed Jobs</div>\r\n                            <p className=\"color-light\">{`You have completed ${this.state.AllCompletedJobPackages.length} jobs.`}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Your Completed Offers</div>\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\" name=\"SearchDate\" className=\"form-control\" placeholder=\"Search by Date\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={this.state.SearchDate} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div> \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            {(completedJobPackages.length === 0) ?\r\n                <SearchingContainer Searching={this.state.Searching}\r\n                    SearchingFor=\"completed jobs\" /> :\r\n                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {completedJobPackages.map((completedJobPackage, index) => {\r\n                        return <CompletedJobPackageListItem key={index}\r\n                            Index={index} CompletedJobPackage={completedJobPackage} />;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default CompletedJobsList;","import React, { Component } from \"react\";\r\nimport CompletedJobsList from \"./CompletedJobsList\";\r\n\r\nclass CompletedJobs extends Component {\r\n   render() {\r\n       return <section>\r\n           <CompletedJobsList />\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default CompletedJobs;","import React, { Component } from \"react\";\r\nimport JobRequests from \"./jobRequests/JobRequests\"; \r\nimport JobOffers from \"./jobOffers/JobOffers\";\r\nimport OnGoingJob from \"./onGoingJob/OnGoingJob\";\r\nimport CompletedJobs from \"./completedJobs/CompletedJobs\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Jobs extends Component {\r\n    render() {\r\n        return <section>\r\n            <PageHeading Heading=\"JOBS\" />\r\n            <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                padding: \"10px\",\r\n                backgroundColor: \"#3A3A3C\",\r\n                width: \"100%\",\r\n                margin: \"0px\",\r\n            }}>\r\n                <li role=\"presentation\" className=\"active\"><a href=\"#job-requests\" aria-controls=\"job-requests\" role=\"tab\" data-toggle=\"tab\">Job Requests</a></li>\r\n                <li role=\"presentation\"><a href=\"#job-offers\" aria-controls=\"job-offers\" role=\"tab\" data-toggle=\"tab\">Job Offers</a></li>\r\n                <li role=\"presentation\"><a href=\"#on-going-job\" aria-controls=\"on-going-job\" role=\"tab\" data-toggle=\"tab\">On-Going Job</a></li>\r\n                <li role=\"presentation\"><a href=\"#completed-jobs\" aria-controls=\"completed-jobs\" role=\"tab\" data-toggle=\"tab\">Completed Jobs</a></li>\r\n            </ul>\r\n\r\n            <div class=\"tab-content\">\r\n                <div role=\"tabpanel\" class=\"tab-pane active\" id=\"job-requests\">\r\n                    <JobRequests />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"job-offers\">\r\n                    <JobOffers />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"on-going-job\">\r\n                    <OnGoingJob />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"completed-jobs\">\r\n                    <CompletedJobs />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Jobs;","import React, { Component } from \"react\";\r\n\r\nclass Payments extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"jumbotron\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"tools.png\" src=\"./images/tools.png\" style={{ borderRadius: \"50%\" }} data-source-index=\"1\" />\r\n                            </div>\r\n                            <div class=\"col-md-12 col-md-pull-12\">\r\n                                <div class=\"type-h3\" style={{ color: \"#008575\", }}>\r\n                                    Payments\r\n                    </div>\r\n                                <div class=\"type-sh3\" style={{ color: \"#949496\", }}>\r\n                                    Under-Construction\r\n                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Payments;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { getData, generalSettings } from \"../../DriverFunctions\";\r\n\r\nclass GeneralSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\",\r\n\r\n            ValidFirstName: true,\r\n            ValidLastName: true,\r\n            ValidPhoneNumber: true,\r\n\r\n            ValidForm: false,\r\n            SettingsSaved: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                PhoneNumber: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Driver\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver found.\") {\r\n                    let driver = response.Driver;\r\n\r\n                    this.setState({\r\n                        FirstName: driver.FirstName,\r\n                        LastName: driver.LastName,\r\n                        Address: driver.Address,\r\n                        PhoneNumber: driver.PhoneNumber,\r\n                        Gender: driver.Gender,\r\n                        Nationality: driver.Nationality,\r\n                        DateOfBirth: driver.DateOfBirth\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        FirstName: \"\",\r\n                        LastName: \"\",\r\n                        Address: \"\",\r\n                        PhoneNumber: \"\",\r\n                        Gender: \"\",\r\n                        Nationality: \"\",\r\n                        DateOfBirth: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFirstName = this.state.ValidFirstName;\r\n        let ValidLastName = this.state.ValidLastName;\r\n        let ValidPhoneNumber = this.state.ValidPhoneNumber;\r\n\r\n        switch (field) {\r\n            case \"FirstName\":\r\n                ValidFirstName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.FirstName = ValidFirstName ? \"\" : \"First name is invalid.\";\r\n                break;\r\n            case \"LastName\":\r\n                ValidLastName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.LastName = ValidLastName ? \"\" : \"Last name is invalid.\";\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = value.match(/^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/);\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFirstName: ValidFirstName,\r\n            ValidLastName: ValidLastName,\r\n            ValidPhoneNumber: ValidPhoneNumber,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidFirstName &&\r\n                    this.state.ValidLastName &&\r\n                    this.state.ValidPhoneNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedDriver = {\r\n            Token: localStorage.Token,\r\n            FirstName: this.state.FirstName,\r\n            LastName: this.state.LastName,\r\n            Address: this.state.Address,\r\n            PhoneNumber: this.state.PhoneNumber,\r\n            Gender: this.state.Gender,\r\n            Nationality: this.state.Nationality,\r\n            DateOfBirth: this.state.DateOfBirth\r\n        };\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await generalSettings(updatedDriver).then(response => {\r\n            if (response.Message === \"Driver is updated.\") {\r\n                this.props.OnSettingsSaved();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>General Settings</div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n                <div className=\"entity-list entity-list-expandable\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-comment\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"FirstName\" autoComplete=\"off\"\r\n                                    value={this.state.FirstName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">First Name</div>\r\n                            <div className=\"text-danger\">{this.state.Errors.FirstName}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-comment\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"LastName\" autoComplete=\"off\"\r\n                                    value={this.state.LastName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Last Name</div>\r\n                            <div className=\"text-danger\">{this.state.Errors.LastName}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-birthday-cake\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"date\" className=\"form-control\" name=\"DateOfBirth\" autoComplete=\"off\"\r\n                                    value={this.state.DateOfBirth} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Date of Birth</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className={this.state.Gender === \"Male\" ? \"fas fa-male\" : \"fas fa-female\"}></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"dropdown\" style={{ width: \"193px\", maxWidth: \"296px\", }}>\r\n                                <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                    aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                    <span>{this.state.Gender}</span>\r\n                                    <span className=\"caret\"></span>\r\n                                </button>\r\n                                <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                    <li><a onClick={() => { this.setState({ Gender: \"Male\" }); }}>Male</a></li>\r\n                                    <li><a onClick={() => { this.setState({ Gender: \"Female\" }); }}>Female</a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Gender</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-flag\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"Nationality\" autoComplete=\"off\"\r\n                                    value={this.state.Nationality} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Nationality</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-phone\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autoComplete=\"off\"\r\n                                    placeholder=\"+XXXXXXXXXXXX\" value={this.state.PhoneNumber} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Phone Number</div>\r\n                            <div className=\"text-danger\">{this.state.Errors.PhoneNumber}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-location-arrow\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"Address\" autoComplete=\"off\"\r\n                                    value={this.state.Address} onChange={this.onChange} style={{ width: \"393px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Address</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item active\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-save\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Save Changes?</div>\r\n                            <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                        </div>\r\n                        <div className=\"item-content-expanded\">\r\n                            <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            {this.state.Preloader}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default GeneralSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { usernameAndEmailSettings } from \"../../DriverFunctions.js\";\r\n\r\nclass CodeConfirmationDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ConfirmCode: \"\",\r\n\r\n            ValidConfirmCode: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                ConfirmCode: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidConfirmCode = this.state.ValidConfirmCode;\r\n\r\n        ValidConfirmCode = value === this.props.Code;\r\n        Errors.ConfirmCode = ValidConfirmCode ? \"\" : \"Invalid code.\";\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidConfirmCode: ValidConfirmCode,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidConfirmCode\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedDriver = {\r\n            Token: localStorage.Token,\r\n            Username: this.props.Username,\r\n            Email: this.props.Email,\r\n        };\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await usernameAndEmailSettings(updatedDriver).then(response => {\r\n            if (response.Message === \"Driver is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div\r\n                className=\"modal in\" id=\"code-confirmation-dialog\" tabIndex=\"-1\"\r\n                role=\"dialog\" aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\"\r\n                style={{ display: \"block\" }}>\r\n                <div className=\"modal-dialog\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"passcode.png\" src=\"./images/passcode.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Email Confirmation</div>\r\n                                        <div className=\"type-sh3\">We delivered a confirmation code to your email.</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Confirmation Code</label>\r\n                                                    <input type=\"text\" name=\"ConfirmCode\" className=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.ConfirmCode} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ConfirmCode}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Confirm\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default CodeConfirmationDialog;","import React, { Component } from \"react\";\r\nimport CodeConfirmationDialog from \"./CodeConfirmationDialog.js\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport {\r\n    getData,\r\n    validateUsername,\r\n    validateEmail,\r\n    sendCode,\r\n    usernameAndEmailSettings\r\n} from \"../../DriverFunctions.js\";\r\n\r\nclass UsernameAndEmailSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            NewUsername: \"\",\r\n\r\n            Email: \"\",\r\n            NewEmail: \"\",\r\n\r\n            Code: \"\",\r\n\r\n            ValidNewUsername: true,\r\n            ValidNewEmail: true,\r\n\r\n            ValidForm: false,\r\n            CodeConfirmationDialog: null,\r\n\r\n            Errors: {\r\n                NewUsername: \"\",\r\n                NewEmail: \"\",\r\n            },\r\n\r\n            CodeConfirmation: \"\",\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Driver\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver found.\") {\r\n                    let driver = response.Driver;\r\n\r\n                    this.setState({\r\n                        Username: driver.Username,\r\n                        NewUsername: driver.Username,\r\n                        Email: driver.Email,\r\n                        NewEmail: driver.Email\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Username: \"\",\r\n                        NewUsername: \"\",\r\n                        Email: \"\",\r\n                        NewEmail: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewUsername = this.state.ValidNewUsername;\r\n        let ValidNewEmail = this.state.ValidNewEmail;\r\n\r\n        switch (field) {\r\n            case \"NewUsername\":\r\n                ValidNewUsername = (value !== \"\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is required.\";\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value.match(/^[a-z0-9]+$/i));\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is invalid.\";\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value !== \"Username is unavailable.\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is unavailable.\";\r\n                break;\r\n            case \"NewEmail\":\r\n                ValidNewEmail = (value !== \"\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is required.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i));\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is invalid.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value !== \"Email is already taken.\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is already taken.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewUsername: ValidNewUsername,\r\n            ValidNewEmail: ValidNewEmail,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidNewUsername &&\r\n                    this.state.ValidNewEmail\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername === this.state.Username &&\r\n            this.state.NewEmail === this.state.Email) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername !== this.state.Username) {\r\n            const response = await validateUsername(this.state.NewUsername);\r\n\r\n            if (response.Message === \"Username is unavailable.\") {\r\n                this.validateField(\"NewUsername\", response.Message);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail !== this.state.Email) {\r\n            const response = await validateEmail(this.state.NewEmail);\r\n            if (response.Message === \"Email is already taken.\") {\r\n                this.validateField(\"NewEmail\", response.Message);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail === this.state.Email) {\r\n            const updatedDriver = {\r\n                Token: localStorage.Token,\r\n                Username: this.state.NewUsername,\r\n                Email: this.state.NewEmail,\r\n            };\r\n\r\n            this.setState({\r\n                Preloader: <Preloader />\r\n            });\r\n\r\n            console.log(\"Going to update username...\");\r\n            await usernameAndEmailSettings(updatedDriver).then(response => {\r\n                if (response.Message === \"Driver is updated.\") {\r\n                    this.props.OnSettingsSaved();\r\n                }\r\n\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            console.log(\"Going to send code...\");\r\n            await sendCode(this.state.NewEmail).then(response => {\r\n                if (response.Message === \"Code sent.\") {\r\n                    this.setState({\r\n                        CodeConfirmationDialog: <CodeConfirmationDialog\r\n                            Code={response.Code}\r\n                            Username={this.state.NewUsername}\r\n                            Email={this.state.NewEmail}\r\n                            OnCancel={() => {\r\n                                this.setState({\r\n                                    CodeConfirmationDialog: null,\r\n                                });\r\n                            }}\r\n                            OnOK={cancelButton => {\r\n                                cancelButton.click();\r\n                                this.props.OnSettingsSaved();\r\n                            }} />\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Username and Emails</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div class=\"entity-list entity-list-expandable\">\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-at\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" name=\"NewUsername\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.NewUsername} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Username</div>\r\n                                <div class=\"content-text-secondary text-danger\">{this.state.Errors.NewUsername}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-envelope\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"email\" name=\"NewEmail\" class=\"form-control\" placeholder=\"someone@example.com\" autocomplete=\"off\"\r\n                                        value={this.state.NewEmail} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Email</div>\r\n                                <div class=\"content-text-secondary text-danger\">{this.state.Errors.NewEmail}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item active\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Save Changes?</div>\r\n                                <div class=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div class=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n                {this.state.CodeConfirmationDialog}\r\n            </div> \r\n        );\r\n    }\r\n};\r\n\r\nexport default UsernameAndEmailSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { validatePassword, passwordSettings } from \"../../DriverFunctions.js\";\r\n\r\nclass PasswordSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            CurrentPassword: \"\",\r\n            NewPassword: \"\",\r\n            ConfirmPassword: \"\",\r\n\r\n            ValidCurrentPassword: false,\r\n            ValidNewPassword: false,\r\n            ValidConfirmPassword: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                CurrentPassword: \"\",\r\n                NewPassword: \"\",\r\n                ConfirmPassword: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    async validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCurrentPassword = this.state.ValidCurrentPassword;\r\n        let ValidNewPassword = this.state.ValidNewPassword;\r\n        let ValidConfirmPassword = this.state.ValidConfirmPassword;\r\n\r\n        switch (field) {\r\n            case \"CurrentPassword\":\r\n                ValidCurrentPassword = (value !== \"\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is required.\";\r\n\r\n                if (Errors.CurrentPassword !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCurrentPassword = (value !== \"Invalid password.\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is invalid.\";\r\n                break;\r\n            case \"NewPassword\":\r\n                ValidNewPassword = value.length >= 6;\r\n                Errors.NewPassword = ValidNewPassword ? \"\" : \"Password is too short.\";\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                ValidConfirmPassword = value === this.state.NewPassword;\r\n                Errors.ConfirmPassword = ValidConfirmPassword ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCurrentPassword: ValidCurrentPassword,\r\n            ValidNewPassword: ValidNewPassword,\r\n            ValidConfirmPassword: ValidConfirmPassword,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidCurrentPassword &&\r\n                    this.state.ValidNewPassword &&\r\n                    this.state.ValidConfirmPassword\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        let passwordPackage = {\r\n            Token: localStorage.Token,\r\n            Password: this.state.CurrentPassword\r\n        };\r\n\r\n        await validatePassword(passwordPackage).then(async response => {\r\n            if (response.Message === \"Invalid password.\") {\r\n                this.validateField(\"CurrentPassword\", response.Message);\r\n            }\r\n            else {\r\n                const updatedDriver = {\r\n                    Token: localStorage.Token,\r\n                    Password: this.state.NewPassword\r\n                };\r\n\r\n                this.setState({\r\n                    Preloader: <Preloader />\r\n                });\r\n\r\n                await passwordSettings(updatedDriver).then(response => {\r\n                    if (response.Message === \"Driver is updated.\") {\r\n                        this.props.OnSettingsSaved();\r\n                    }\r\n\r\n                    this.setState({\r\n                        Preloader: null\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div class=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\" }}>Change Password</div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n                <div class=\"entity-list entity-list-expandable\">\r\n                    <div class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <div class=\"form-group\">\r\n                                <input type=\"password\" name=\"CurrentPassword\" class=\"form-control\" autoComplete=\"off\"\r\n                                    value={this.state.CurrentPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Current Password</div>\r\n                            <div class=\"text-danger\">{this.state.Errors[\"CurrentPassword\"]}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <div class=\"form-group\">\r\n                                <input type=\"password\" name=\"NewPassword\" class=\"form-control\" autoComplete=\"off\"\r\n                                    value={this.state.NewPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">New Password</div>\r\n                            <div class=\"text-danger\">{this.state.Errors[\"NewPassword\"]}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <div class=\"form-group\">\r\n                                <input type=\"password\" name=\"ConfirmPassword\" class=\"form-control\" autoComplete=\"off\"\r\n                                    value={this.state.ConfirmPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Confirm Password</div>\r\n                            <div class=\"text-danger\">{this.state.Errors[\"ConfirmPassword\"]}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"entity-list-item active\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-save\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Save Changes?</div>\r\n                            <div class=\"content-text-secondary\">This cannot be undone.</div>\r\n                        </div>\r\n                        <div class=\"item-content-expanded\">\r\n                            <input type=\"submit\" value=\"Save\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            {this.state.Preloader}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PasswordSettings;","import React, { Component } from \"react\";\r\nimport GeneralSettings from \"./GeneralSettings\";\r\nimport UsernameAndEmailSettings from \"./UsernameAndEmailSettings\";\r\nimport PasswordSettings from \"./PasswordSettings\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Settings extends Component {\r\n    render() {\r\n        return <section>\r\n            <PageHeading Heading=\"SETTINGS\" />\r\n            <GeneralSettings ref=\"GeneralSettings\" OnSettingsSaved={() => { this.refs.GeneralSettings.componentDidMount(); }} />\r\n            <UsernameAndEmailSettings ref=\"UsernameAndEmailSettings\" OnSettingsSaved={() => { this.refs.UsernameAndEmailSettings.componentDidMount(); }} />\r\n            <PasswordSettings ref=\"PasswordSettings\" OnSettingsSaved={() => { this.refs.PasswordSettings.forceUpdate(); }} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Settings;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Profile from \"./profile/Profile\";\r\nimport Truck from \"./trucks/Truck\";\r\nimport Permits from \"./permits/Permits\";\r\nimport FinancialAffairs from \"./financial_affairs/FinancialAffairs\";\r\nimport Jobs from \"./jobs/Jobs\";\r\nimport Payments from \"./payments/Payments\";\r\nimport Settings from \"./settings/Settings\";\r\n\r\nclass DriversDashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Left: -400\r\n        };\r\n\r\n        this.onCloseNavigation = this.onCloseNavigation.bind(this);\r\n    }\r\n\r\n    onCloseNavigation = () => {\r\n        this.setState({\r\n            Left: -400\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.Token) {\r\n            return <Redirect to={\"/login\"} />;\r\n        }\r\n        else {\r\n            return <section>  \r\n                <div className=\"sidenav\" style={{ left: `${this.state.Left}px` }}>\r\n                    <a className=\"closebtn\" onClick={this.onCloseNavigation}>&times;</a>\r\n\r\n                    <div class=\"entity-list\" role=\"tablist\">\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#profile\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Profile</a>                           \r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#trucks\" aria-controls=\"trucks\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Trucks</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#permits\" aria-controls=\"permits\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Permits</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#financialAffairs\" aria-controls=\"financialAffairs\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Financial Affairs</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#jobs\" aria-controls=\"jobs\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Jobs</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#payments\" aria-controls=\"payments\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Payments</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#settings\" aria-controls=\"settings\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Settings</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"tab-content\">\r\n                    <div role=\"tabpanel\" className=\"tab-pane active\" id=\"profile\">\r\n                        <Profile />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"trucks\">\r\n                        <Truck />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"permits\">\r\n                        <Permits />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"financialAffairs\">\r\n                        <FinancialAffairs />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"jobs\">\r\n                        <Jobs />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"payments\">\r\n                        <Payments />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"settings\">\r\n                        <Settings />\r\n                    </div>\r\n                </div>\r\n                <div className=\"side-nav-btn\" onClick={() => {\r\n                    this.setState({\r\n                        Left: 0\r\n                    });\r\n                }}><div className=\"fas fa-bars\" style={{ fontSize: \"x-large\" }}></div>\r\n                </div>\r\n            </section>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default DriversDashboard;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { getData, uploadTraderProfilePhoto } from \"../../TraderFunctions\";\r\nimport Strings from \"../../../../res/strings\";\r\n\r\nclass ProfilePhoto extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Image: null,\r\n            PhotoURL: \"./images/defaultProfilePhoto.png\",\r\n            UploadProgress: null,\r\n        };\r\n\r\n        this.onImageUpload = this.onImageUpload.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"ProfilePhoto\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Profile photo found.\") {\r\n                    let profilePhoto = response.ProfilePhoto;\r\n\r\n                    this.setState({\r\n                        PhotoURL: profilePhoto.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.state({\r\n                        PhotoURL: \"./images/defaultProfilePhoto.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onImageUpload = async event => {\r\n        this.state.Image = event.target.files[0];\r\n        const formData = new FormData();\r\n\r\n        try {\r\n            formData.append(\"Image\", this.state.Image, this.state.Image.name);\r\n\r\n            await axios.post(Strings.IMAGE_UPLOADER, formData, {\r\n                onUploadProgress: event => {\r\n                    this.setState({\r\n                        UploadProgress: <div className=\"progress-bar\">\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                        </div>\r\n                    });\r\n                }\r\n            }).then(async response => {\r\n                response = response.data;\r\n\r\n                if (response.message === \"Image uploaded successfully.\") {\r\n                    const traderProfilePhoto = {\r\n                        Token: localStorage.Token,\r\n                        PhotoURL: response.imageUrl,\r\n                        FileName: response.filename\r\n                    }\r\n\r\n                    let photoURL = response.imageUrl;\r\n\r\n                    await uploadTraderProfilePhoto(traderProfilePhoto).then(response => {\r\n                        if (response.Message === \"Profile photo is updated.\" ||\r\n                            response.Message === \"Profile photo is added.\") {\r\n\r\n                            this.setState({\r\n                                PhotoURL: photoURL,\r\n                                UploadProgress: null,\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }).catch(() => {\r\n                this.props.OnImageUploaded(\"Invalid Image.\");\r\n                this.setState({\r\n                    ImageURL: \"./images/defaultProfilePhoto.png\",\r\n                    UploadProgress: null,\r\n                });\r\n            });\r\n        }\r\n        catch (exception) {\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n\r\n            return;\r\n        }\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <input type=\"file\" onChange={this.onImageUpload} style={{ display: \"none\", }} ref={fileInput => this.fileInput = fileInput} />\r\n                <figure className=\"media\">\r\n                    <div className=\"media-img media-img-has-play ratio-1-1\">\r\n                        <a href=\"#\" onClick={() => this.fileInput.click()}>\r\n                            <img style={{\r\n                                border: \"5px solid #3A3A3C\"\r\n                            }}\r\n                                src={this.state.PhotoURL} alt=\"ProfilePhoto.png\" />\r\n                            <i className=\"glyph glyph-edit\"></i>\r\n                        </a>\r\n                    </div>\r\n                </figure>\r\n                {this.state.UploadProgress}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ProfilePhoto;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addIdentityCard } from \"../../../../TraderFunctions.js\";\r\n\r\nclass AddIdentityCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidIDNumber: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                IDNumber: \"\",\r\n                PhotoURL: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidIDNumber = this.state.ValidIDNumber;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"IDNumber\":\r\n                ValidIDNumber = (value !== \"\");\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidIDNumber = (value >= 1000000000 && value <= 9999999999);\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number must be 10-digits long.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidIDNumber: ValidIDNumber,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidIDNumber &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newIdentityCard = {\r\n            Token: localStorage.Token,\r\n            IDNumber: this.state.IDNumber,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to add Identity Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        addIdentityCard(newIdentityCard).then(response => {\r\n            if (response.Message === \"Identity card is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div className=\"modal\" id=\"add-identity-card-dialog\"\r\n                    tabindex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Add Identity Card</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => { \r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"IdentityCard\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">ID Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"IDNumber\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.IDNumber} onChange={this.onChange} min=\"1000000000\" max=\"9999999999\"/>\r\n                                                    <span className=\"text-danger\">{this.state.Errors.IDNumber}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddIdentityCardDialog;","import React, { Component } from \"react\";\r\nimport AddIdentityCardDialog from \"./AddIdentityCardDialog.js\";\r\n\r\nclass AddIdentityCardButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddIdentityCardDialog: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-identity-card-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddIdentityCardDialog: <AddIdentityCardDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddIdentityCardDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />,\r\n                        });\r\n                    }}>\r\n                    <span className=\"fas fa-plus\" aria-hidden=\"true\"></span> Identity Card\r\n                </button>\r\n                {this.state.AddIdentityCardDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddIdentityCardButton;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addCommercialRegisterCertificate } from \"../../../../TraderFunctions.js\";\r\n\r\nclass AddCommercialRegisterCertificateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Number: UUID().substring(0, 7).toUpperCase(),\r\n            Type: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidType: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                Type: \"\",\r\n                PhotoURL: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Certificate type is required.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidType: ValidType,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidType &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newCommercialRegisterCertificate = {\r\n            Token: localStorage.Token,\r\n            Number: this.state.Number,\r\n            Type: this.state.Type,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to add commercial register certificate.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        addCommercialRegisterCertificate(newCommercialRegisterCertificate).then(response => {\r\n            if (response.Message === \"Commercial register certificate is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div className=\"modal\" id=\"add-commercial-register-certificate-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Add Commercial Register Certificate</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => { \r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"CommercialRegisterCertificate\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Certificate Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Number\" className=\"form-control\" autoComplete=\"off\" readOnly\r\n                                                        value={this.state.Number} onChange={this.onChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Certificate Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>            \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddCommercialRegisterCertificateDialog;","import React, { Component } from \"react\";\r\nimport AddCommercialRegisterCertificateDialog from \"./AddCommercialRegisterCertificateDialog.js\";\r\n\r\nclass AddCommercialRegisterCertificateButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddCommercialRegisterCertificateDialog: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-commercial-register-certificate-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddCommercialRegisterCertificateDialog: <AddCommercialRegisterCertificateDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddCommercialRegisterCertificateDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />\r\n                        });\r\n                    }}>\r\n                    <span className=\"fas fa-plus\" aria-hidden=\"true\"></span> CR Certificate\r\n                </button>\r\n                {this.state.AddCommercialRegisterCertificateDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddCommercialRegisterCertificateButton;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateIdentityCard } from \"../../../../TraderFunctions.js\";\r\n\r\nclass EditIdentityCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidIDNumber: true,\r\n            ValidPhotoURL: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                IDNumber: \"\",\r\n                PhotoURL: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            this.setState({\r\n                Preloader: <Preloader />\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Identity card found.\") {\r\n                    let identityCard = response.IdentityCard;\r\n\r\n                    this.setState({\r\n                        IDNumber: identityCard.IDNumber,\r\n                        PhotoURL: identityCard.PhotoURL,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        IDNumber: \"\",\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                        Preloader: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidIDNumber = this.state.ValidIDNumber;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"IDNumber\":\r\n                ValidIDNumber = (value !== \"\");\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidIDNumber = (value >= 1000000000 && value <= 9999999999);\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number must be 10-digits long.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidIDNumber: ValidIDNumber,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidIDNumber &&\r\n                    this.state.ValidPhotoURL\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedIdentityCard = {\r\n            Token: localStorage.Token,\r\n            IDNumber: this.state.IDNumber,\r\n            PhotoURL: this.state.PhotoURL,\r\n        }\r\n\r\n        console.log(\"Going to update Identity Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        updateIdentityCard(updatedIdentityCard).then(response => {\r\n            if (response.Message === \"Identity card is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id=\"edit-identity-card-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Identity Card</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"IdentityCard\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">ID Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"IDNumber\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.IDNumber} onChange={this.onChange} min=\"1000000000\" max=\"99999999999\" />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.IDNumber}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default EditIdentityCardDialog;","import React, { Component } from \"react\";\r\nimport EditIdentityCardDialog from \"./EditIdentityCardDialog.js\";\r\nimport { getData, deleteIdentityCard } from \"../../../../TraderFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass IdentityCardListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Key: Math.floor(Math.random() * 100),\r\n            IdentityCardID: \"\",\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            EditIdentityCardDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onRefresh = this.onRefresh.bind(this);\r\n    }\r\n\r\n    onDelete = () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        let discardedIdentityCard = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete Identity Card.`);\r\n\r\n        deleteIdentityCard(discardedIdentityCard).then(response => {\r\n            console.log(response);\r\n            if (response.Message === \"Identity card is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onRefresh();\r\n    }\r\n\r\n    onRefresh = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Identity card found.\") {\r\n                    let identityCard = response.IdentityCard;\r\n\r\n                    this.setState({\r\n                        IdentityCardID: identityCard.IdentityCardID,\r\n                        IDNumber: identityCard.IDNumber,\r\n                        PhotoURL: identityCard.PhotoURL\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        IdentityCardID: \"\",\r\n                        IDNumber: \"\",\r\n                        PhotoURL: \"./images/default_image.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#identity-card-${this.state.IdentityCardID}`}>\r\n                    <div className=\"entity-list\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\" style={{ borderRadius: \"50%\" }}>\r\n                                <span className=\"glyph glyph-add\"></span>\r\n                                <span className=\"glyph glyph-remove\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">\r\n                                    <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>{`${this.props.Index}.`}</span>\r\n                                </div>\r\n                                <div className=\"content-text-secondary\">\r\n                                    <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>IDENTITY CARD</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"collapse\" id={`identity-card-${this.state.IdentityCardID}`}>\r\n                    <div className=\"jumbotron theme-default\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        src={this.state.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                            overflow: \"hidden\",\r\n                                            border: \"5px solid #3A3A3C\",\r\n                                            margin: \"5px\"\r\n                                        }} />\r\n                                </div>\r\n                                <div className=\"col-md-18\">\r\n                                    <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                        Identity Card\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-hashtag\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">ID Number</div>\r\n                                                        <div className=\"content-text-secondary\">{this.state.IDNumber}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary\"\r\n                            data-toggle=\"modal\"\r\n                            data-target=\"#edit-identity-card-dialog\"\r\n                            onMouseDown={() => {\r\n                                this.setState({\r\n                                    EditIdentityCardDialog: <EditIdentityCardDialog\r\n                                        OnCancel={() => {\r\n                                            this.setState({\r\n                                                EditIdentityCardDialog: null\r\n                                            });\r\n                                        }}\r\n                                        OnOK={cancelButton => {\r\n                                            cancelButton.click();\r\n                                            this.onRefresh();\r\n                                        }} />\r\n                                });\r\n                            }}>Edit</button>\r\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                    </div>\r\n                </div>               \r\n                {this.state.Preloader}\r\n                {this.state.EditIdentityCardDialog}\r\n            </li>        \r\n        );\r\n    }\r\n};\r\n\r\nexport default IdentityCardListItem;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateCommercialRegisterCertificate } from \"../../../../TraderFunctions.js\";\r\n\r\nclass EditCommercialRegisterCertificateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Number: \"\",\r\n            Type: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidType: true,\r\n            ValidPhotoURL: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                Type: \"\",\r\n                PhotoURL: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onRefresh = this.onRefresh.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onRefresh();\r\n    }\r\n\r\n    onRefresh = () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"CommercialRegisterCertificate\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Commercial register certificate found.\") {\r\n                    let commercialRegisterCertificate = response.CommercialRegisterCertificate;\r\n\r\n                    this.setState({\r\n                        Number: commercialRegisterCertificate.Number,\r\n                        Type: commercialRegisterCertificate.Type,\r\n                        PhotoURL: commercialRegisterCertificate.PhotoURL,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Number: \"\",\r\n                        Type: \"\",\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                        Preloader: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Certificate type is required.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidType: ValidType,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidType &&\r\n                    this.state.ValidPhotoURL\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedCommercialRegisterCertificate = {\r\n            Token: localStorage.Token,\r\n            Number: this.state.Number,\r\n            Type: this.state.Type,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to update commercial register certificate.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        updateCommercialRegisterCertificate(updatedCommercialRegisterCertificate).then(response => {\r\n            if (response.Message === \"Commercial register certificate is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\" id=\"edit-commercial-register-certificate-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Edit Commercial Register Certificate</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ImageUploader\r\n                                                        Source={this.state.PhotoURL}\r\n                                                        Height=\"220px\"\r\n                                                        Width=\"220px\"\r\n                                                        OnImageUploaded={response => {\r\n                                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                                this.setState({\r\n                                                                    PhotoURL: response.imageUrl\r\n                                                                });\r\n\r\n                                                                this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                            }\r\n                                                            else {\r\n                                                                this.validateField(\"PhotoURL\", null);\r\n                                                            }\r\n                                                        }}\r\n                                                        OnInvalidImageSelected={() => {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }}\r\n                                                        ImageCategory=\"IdentityCard\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Certificate Number</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Number\" className=\"form-control\" autoComplete=\"off\" readOnly\r\n                                                        value={this.state.Number} onChange={this.onChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Certificate Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default EditCommercialRegisterCertificateDialog;","import React, { Component } from \"react\";\r\nimport EditCommercialRegisterCertificateDialog from \"./EditCommercialRegisterCertificateDialog.js\";\r\nimport { getData, deleteCommercialRegisterCertificate } from \"../../../../TraderFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass CommercialRegisterCertificateListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ID: \"\",\r\n            Number: \"\",\r\n            Type: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            EditCommercialRegisterCertificateDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onRefresh = this.onRefresh.bind(this);\r\n    }\r\n\r\n    onDelete = () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        let discardedCommercialRegisterCertificate = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete commercial register certificate.`);\r\n\r\n        deleteCommercialRegisterCertificate(discardedCommercialRegisterCertificate).then(response => {\r\n            if (response.Message === \"Commercial register certificate is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onRefresh();\r\n    }\r\n\r\n    onRefresh = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"CommercialRegisterCertificate\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Commercial register certificate found.\") {\r\n                    let commercialRegisterCertificate = response.CommercialRegisterCertificate;\r\n\r\n                    this.setState({\r\n                        ID: commercialRegisterCertificate.ID,\r\n                        Number: commercialRegisterCertificate.Number,\r\n                        Type: commercialRegisterCertificate.Type,\r\n                        PhotoURL: commercialRegisterCertificate.PhotoURL\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        ID: \"\",\r\n                        Number: \"\",\r\n                        Type: \"\",\r\n                        PhotoURL: \"./images/default_image.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#commercial-register-certificate-${this.state.ID}`}>\r\n                    <div className=\"entity-list\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\" style={{ borderRadius: \"50%\" }}>\r\n                                <span className=\"glyph glyph-add\"></span>\r\n                                <span className=\"glyph glyph-remove\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">\r\n                                    <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>{`${this.props.Index}.`}</span>\r\n                                </div>\r\n                                <div className=\"content-text-secondary\">\r\n                                    <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>COMMERCIAL REGISTER CERTIFICATE</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"collapse\" id={`commercial-register-certificate-${this.state.ID}`}>\r\n                    <div className=\"jumbotron theme-default\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        src={this.state.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                            overflow: \"hidden\",\r\n                                            border: \"5px solid #3A3A3C\",\r\n                                            margin: \"5px\"\r\n                                        }} />\r\n                                </div>\r\n                                <div className=\"col-md-18\">\r\n                                    <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                        Commercial Register Certificate\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-hashtag\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Certificate Number</div>\r\n                                                        <div className=\"content-text-secondary\">{this.state.Number}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-cog\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Certificate Type</div>\r\n                                                        <div className=\"content-text-secondary\">{this.state.Type}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary\"\r\n                            data-toggle=\"modal\"\r\n                            data-target=\"#edit-commercial-register-certificate-dialog\"\r\n                            onMouseDown={() => {\r\n                                this.setState({\r\n                                    EditCommercialRegisterCertificateDialog: <EditCommercialRegisterCertificateDialog\r\n                                        OnCancel={() => {\r\n                                            this.setState({\r\n                                                EditCommercialRegisterCertificateDialog: null\r\n                                            });\r\n                                        }}\r\n                                        OnOK={cancelButton => {\r\n                                            cancelButton.click();\r\n                                            this.onRefresh();\r\n                                        }} />\r\n                                });\r\n                            }}>Edit</button>\r\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                    </div>\r\n                </div>               \r\n                {this.state.Preloader}\r\n                {this.state.EditCommercialRegisterCertificateDialog}\r\n            </li>        \r\n        );\r\n    }\r\n};\r\n\r\nexport default CommercialRegisterCertificateListItem;","import React, { Component } from \"react\";\r\nimport AddIdentityCardButton from \"./identityCard/AddIdentityCardButton.js\";\r\nimport AddCommercialRegisterCertificateButton from \"./commercialRegisterCertificate/AddCommercialRegisterCertificateButton.js\";\r\nimport IdentityCardListItem from \"./identityCard/IdentityCardListItem.js\";\r\nimport CommercialRegisterCertificateListItem from \"./commercialRegisterCertificate/CommercialRegisterCertificateListItem.js\";\r\nimport { getData } from \"../../../TraderFunctions\";\r\n\r\nclass DocumentsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddIdentityCardButton: null, \r\n            AddCommercialRegisterCertificateButton: null,\r\n            IdentityCardListItem: null,\r\n            CommercialRegisterCertificateListItem: null\r\n        };\r\n\r\n        this.onDocumentsUpdated = this.onDocumentsUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"I'm Here.. Going to update documents...\");\r\n        this.onDocumentsUpdated();\r\n    }\r\n\r\n    onDocumentsUpdated = () => {\r\n        let index = 0;\r\n        let identityCard;\r\n        let commercialRegisterCertificate;\r\n\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response =>\r\n            {\r\n                console.log(response);\r\n                if (response.Message === \"Identity card found.\") {\r\n                    identityCard = response.IdentityCard;\r\n                }\r\n                else {\r\n                    identityCard = undefined;\r\n                }\r\n\r\n                request = {\r\n                    Token: localStorage.Token,\r\n                    Get: \"CommercialRegisterCertificate\"\r\n                };\r\n\r\n                getData(request).then(response => {\r\n                    if (response.Message === \"Commercial register certificate found.\") {\r\n                        commercialRegisterCertificate = response.CommercialRegisterCertificate;\r\n                    }\r\n                    else {\r\n                        commercialRegisterCertificate = undefined;\r\n                    }\r\n\r\n                    (identityCard) ? this.setState({\r\n                        AddIdentityCardButton: null,\r\n                        IdentityCardListItem: <IdentityCardListItem\r\n                            Index={++index}\r\n                            OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                    }) : this.setState({\r\n                        AddIdentityCardButton: <AddIdentityCardButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                        IdentityCardListItem: null\r\n                    });\r\n\r\n                    (commercialRegisterCertificate) ? this.setState({\r\n                        AddCommercialRegisterCertificateButton: null,\r\n                        CommercialRegisterCertificateListItem: <CommercialRegisterCertificateListItem\r\n                            Index={++index}\r\n                            OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                    }) : this.setState({\r\n                        AddCommercialRegisterCertificateButton: <AddCommercialRegisterCertificateButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                        CommercialRegisterCertificateListItem: null\r\n                    });\r\n                });\r\n            });         \r\n        }      \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3 back-color-gray m-n p-xxs\">Documents</div>\r\n                <div className= \"text-right back-color-gray p-xxs\">\r\n                    {this.state.AddIdentityCardButton}\r\n                    {this.state.AddCommercialRegisterCertificateButton}\r\n                </div>\r\n                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {this.state.IdentityCardListItem}\r\n                    {this.state.CommercialRegisterCertificateListItem}\r\n                </ol>\r\n            </section>         \r\n        );\r\n    }\r\n};\r\n\r\nexport default DocumentsList;","import React, { Component } from \"react\";\r\nimport { getData } from \"../../TraderFunctions\";\r\nimport ProfilePhoto from \"./ProfilePhoto\";\r\nimport DocumentsList from \"./documents/DocumentsList\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            Email: \"\",\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\",\r\n            Type: \"\",\r\n            Active: null\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Trader\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader found.\") {\r\n                    let trader = response.Trader;\r\n\r\n                    this.setState({\r\n                        Username: trader.Username,\r\n                        Email: trader.Email,\r\n                        FirstName: trader.FirstName,\r\n                        LastName: trader.LastName,\r\n                        Address: trader.Address,\r\n                        PhoneNumber: trader.PhoneNumber,\r\n                        Gender: trader.Gender,\r\n                        Nationality: trader.Nationality,\r\n                        DateOfBirth: trader.DateOfBirth,\r\n                        Type: trader.Type,\r\n                        Active: trader.Active\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <PageHeading Heading=\"PROFILE\" />\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <ProfilePhoto />\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3 color-default p-t-n\">\r\n                                    {`${this.state.FirstName} ${this.state.LastName}`}\r\n                                </div>\r\n                                <div className=\"type-sh3\">\r\n                                    <span className=\"fas fa-briefcase m-r-xxxs\" style={{ color: \"#606060\" }}></span>{this.state.Type}\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-globe-asia\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Active</div>\r\n                                                    <div className=\"content-text-secondary\">{(this.state.Active === 1) ?\r\n                                                        <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                        <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-phone\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Phone Number</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.PhoneNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-at\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Username</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.Username}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-envelope\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Email</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.Email}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-24\">\r\n                                <div className=\"type-h3\" style={{ paddingTop: \"0px\" }}>Details</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list theme-alt\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                    <span className=\"fas fa-birthday-cake color-default\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Birthday</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.DateOfBirth}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list theme-alt\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                    <span className={(this.state.Gender === \"Male\") ? \"fas fa-male color-default\" : \"fas fa-female color-default\"}></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Gender</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.Gender}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list theme-alt\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                    <span className=\"fas fa-flag color-default\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Nationality</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.Nationality}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list theme-alt\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                    <span className=\"fas fa-map-marker-alt color-default\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Address</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.Address}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <DocumentsList />\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Profile;","import React, { Component } from \"react\";\r\n\r\nclass DrivingLicenceContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const drivingLicence = this.props.DrivingLicence;\r\n\r\n        return drivingLicence ? <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={drivingLicence.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-16\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Driving Licence</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-24\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Licence Number</div>\r\n                                                    <div class=\"content-text-secondary\">{drivingLicence.LicenceNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-cog\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Licence Type</div>\r\n                                                    <div class=\"content-text-secondary\">{drivingLicence.Type}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-calendar\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Release Date</div>\r\n                                                    <div class=\"content-text-secondary\">{new Date(drivingLicence.ReleaseDate).toDateString()}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-calendar\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Expiry Date</div>\r\n                                                    <div class=\"content-text-secondary\">{new Date(drivingLicence.ExpiryDate).toDateString()}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </section> : null;\r\n    }\r\n};\r\n\r\nexport default DrivingLicenceContainer;","import React, { Component } from \"react\";\r\n\r\nclass EntryExitCardContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const entryExitCard = this.props.EntryExitCard;\r\n\r\n        return entryExitCard ? <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-24\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Entry/Exit Card</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-24\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Entry/Exit Number</div>\r\n                                                    <div class=\"content-text-secondary\">{entryExitCard.EntryExitNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-cog\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Card Type</div>\r\n                                                    <div class=\"content-text-secondary\">{entryExitCard.Type}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-calendar\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Release Date</div>\r\n                                                    <div class=\"content-text-secondary\">{new Date(entryExitCard.ReleaseDate).toDateString()}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Number of Months</div>\r\n                                                    <div class=\"content-text-secondary\">{entryExitCard.NumberOfMonths}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </section> : null;\r\n    }\r\n};\r\n\r\nexport default EntryExitCardContainer;","import React, { Component } from \"react\";\r\n\r\nclass IdentityCardContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const identityCard = this.props.IdentityCard;\r\n\r\n        return identityCard ? <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={identityCard.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-16\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Identity Card</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-24\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">ID Number</div>\r\n                                                    <div class=\"content-text-secondary\">{identityCard.IDNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </section> : null;\r\n    }\r\n};\r\n\r\nexport default IdentityCardContainer;","import React, { Component } from \"react\";\r\nimport { getData } from \"../../../components/traders/TraderFunctions\";\r\nimport SearchingContainer from \"../../searching/SearchingContainer\"; \r\nimport DrivingLicenceContainer from \"./DrivingLicenceContainer\";\r\nimport EntryExitCardContianer from \"./EntryExitCardContainer\";\r\nimport IdentityCardContainer from \"./IdentityCardContainer\";\r\n\r\nclass DocumentsDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DriverDocuments: null,\r\n            Searching: false,\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DriverDocuments\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver documents found.\") {\r\n                    this.setState({\r\n                        DriverDocuments: response.DriverDocuments,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DriverDocuments: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const driverDocuments = this.state.DriverDocuments;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`documents-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h2\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Documents</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {(this.state.Searching || !driverDocuments) ?\r\n                                <SearchingContainer Searching={this.state.Searching}\r\n                                    SearchingFor=\"documents\" /> :\r\n                                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                                    <IdentityCardContainer IdentityCard={driverDocuments.IdentityCard} />\r\n                                    <DrivingLicenceContainer DrivingLicence={driverDocuments.DrivingLicence} />\r\n                                    <EntryExitCardContianer EntryExitCard={driverDocuments.EntryExitCard} />\r\n                                </ol>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DocumentsDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport SearchingContainer from \"../searching/SearchingContainer\";\r\nimport DocumentsDialog from \"./documents/DocumentsDialog\";\r\nimport { getData } from \"../../components/traders/TraderFunctions\";\r\n\r\nclass DriverContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DriverProfile: null,\r\n            Searching: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DriverProfile\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver profile found.\") {\r\n                    this.setState({\r\n                        DriverProfile: response.DriverProfile,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DriverProfile: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DriverProfile\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver profile found.\") {\r\n                    this.setState({\r\n                        DriverProfile: response.DriverProfile\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DriverProfile: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Searching || !this.state.DriverProfile) {\r\n            return <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor=\"driver\" />;\r\n        }\r\n        else {\r\n            const driverProfile = this.state.DriverProfile;\r\n            const driver = driverProfile.Driver;\r\n            const onJob = driverProfile.OnJob;\r\n            const profilePhoto = driverProfile.ProfilePhoto ?\r\n                driverProfile.ProfilePhoto :\r\n                \"./images/defaultProfilePhoto.png\";\r\n\r\n            const dialogID = UUID().substring(0, 7).toUpperCase();\r\n\r\n            return <section>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={profilePhoto} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                    {`${driver.FirstName} ${driver.LastName} `}\r\n                                    {onJob ? <span class=\"badge back-color-golden\">ON JOB</span> : null}\r\n                                </div>\r\n                                <div className=\"type-sh3\">\r\n                                    <span className=\"fas fa-car\" style={{ color: \"#606060\" }}></span>   Driver\r\n                            </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-globe-asia\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Active</div>\r\n                                                    <div className=\"content-text-secondary\">{(driver.Active === 1) ?\r\n                                                        <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                        <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class={(driver.Gender === \"Male\") ? \"fas fa-male\" : \"fas fa-female\"}></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Gender</div>\r\n                                                    <div class=\"content-text-secondary\">{driver.Gender}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-birthday-cake\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Birthday</div>\r\n                                                    <div class=\"content-text-secondary\">{driver.DateOfBirth}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-envelope\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Email</div>\r\n                                                    <div class=\"content-text-secondary\">{driver.Email}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-phone\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Phone Number</div>\r\n                                                    <div class=\"content-text-secondary\">{driver.PhoneNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-flag\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Nationality</div>\r\n                                                    <div class=\"content-text-secondary\">{driver.Nationality}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {this.props.TabView ?\r\n                                    null : \r\n                                    <button type=\"button\" className=\"btn btn-default\"\r\n                                        style={{ minWidth: \"152px\" }} data-toggle=\"modal\"\r\n                                        data-target={`#documents-dialog-${dialogID}`}>Documents</button>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.props.TabView ?\r\n                    null :\r\n                    <DocumentsDialog DialogID={dialogID}\r\n                        DriverID={this.props.DriverID} />}\r\n            </section>;\r\n        } \r\n    }\r\n};\r\n\r\nexport default DriverContainer;","import React, { Component } from \"react\";\r\n\r\nclass TrailerContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const trailer = this.props.Trailer;\r\n\r\n        return <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={trailer.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-16\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>{`${index + 1}.`}</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-24\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-weight\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Maximum Weight</div>\r\n                                                    <div class=\"content-text-secondary\">{`${trailer.MaximumWeight} GVM`}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-cog\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Trailer Type</div>\r\n                                                    <div class=\"content-text-secondary\">{trailer.Type}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TrailerContainer;","import React, { Component } from \"react\";\r\nimport TrailerContainer from \"./TrailerContainer\";\r\nimport SearchingContainer from \"../searching/SearchingContainer\";\r\n\r\nclass TrailersDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const trailers = this.props.Trailers;\r\n\r\n        let Trailers = (trailers.length > 0) ?\r\n            <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                {trailers.map((trailer, index) => {\r\n                    return <TrailerContainer key={index} Index={index} Trailer={trailer} />;\r\n                })}\r\n            </ol> : null;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`trailers-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h2\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Trailers</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {(trailers.length === 0) ?\r\n                                <SearchingContainer Searching={false}\r\n                                    SearchingFor=\"trailers\" /> : Trailers}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TrailersDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport SearchingContainer from \"../searching/SearchingContainer\";\r\nimport TrailersDialog from \"./TrailersDialog\";\r\nimport { getData } from \"../../components/traders/TraderFunctions\";\r\n\r\nclass TruckContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TruckProfile: null,\r\n            Searching: false\r\n        }\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n   onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TruckProfile\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Truck profile found.\") {\r\n\r\n                    if (this.props.OnTrailersFound) {\r\n                        this.props.OnTrailersFound(response.TruckProfile.Trailers);\r\n                    }\r\n\r\n                    this.setState({\r\n                        TruckProfile: response.TruckProfile,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TruckProfile: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TruckProfile\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Truck profile found.\") {\r\n\r\n                    if (this.props.OnTrailersFound) {\r\n                        this.props.OnTrailersFound(response.TruckProfile.Trailers);\r\n                    }\r\n\r\n                    this.setState({\r\n                        TruckProfile: response.TruckProfile\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TruckProfile: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Searching || !this.state.TruckProfile) {\r\n            return <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor=\"truck\" />;\r\n        }\r\n        else {\r\n            const truckProfile = this.state.TruckProfile;\r\n            const truck = truckProfile.Truck;\r\n            const dialogID = UUID().substring(0, 7).toUpperCase();\r\n\r\n            return <section>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={truck.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                    {`${truck.Brand} ${truck.Model}`}\r\n                                </div>\r\n                                <div className=\"type-sh3\">\r\n                                    <span className=\"fas fa-truck\" style={{ color: \"#606060\" }}></span>   {truck.Type}\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-list-ol\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Plate Number</div>\r\n                                                    <div class=\"content-text-secondary\">{truck.PlateNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-user\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Owner</div>\r\n                                                    <div class=\"content-text-secondary\">{truck.Owner}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-calendar-day\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Production Year</div>\r\n                                                    <div class=\"content-text-secondary\">{truck.ProductionYear}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-weight\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Maximum Weight</div>\r\n                                                    <div class=\"content-text-secondary\">{`${truck.MaximumWeight} GVW`}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {this.props.TabView ?\r\n                                    null :\r\n                                    <button type=\"button\" className=\"btn btn-default\"\r\n                                        style={{ minWidth: \"152px\" }} data-toggle=\"modal\"\r\n                                        data-target={`#trailers-dialog-${dialogID}`}>Trailers</button>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.props.TabView ?\r\n                    null :\r\n                    <TrailersDialog Trailers={truckProfile.Trailers} DialogID={dialogID} />}\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default TruckContainer;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { addTraderRequest } from \"../../../TraderFunctions.js\";\r\n\r\nclass SendTraderRequestDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            CargoType: \"\",\r\n            CargoWeight: 0,          \r\n            LoadingDate: new Date(),\r\n            LoadingTime: new Date().getTime(),\r\n            AcceptedDelay: 0,\r\n            EntryExit: 0,\r\n\r\n            ValidCargoType: false,\r\n            ValidCargoWeight: false,\r\n            ValidLoadingDate: false,\r\n            ValidLoadingTime: false,\r\n            ValidAcceptedDelay: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                CargoType: \"\",\r\n                CargoWeight: \"\",\r\n                LoadingDate: \"\",\r\n                LoadingTime: \"\",\r\n                AcceptedDelay: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCargoType = this.state.ValidCargoType;\r\n        let ValidCargoWeight = this.state.ValidCargoWeight;\r\n        let ValidLoadingDate = this.state.ValidLoadingDate;\r\n        let ValidLoadingTime = this.state.ValidLoadingTime;\r\n        let ValidAcceptedDelay = this.state.ValidAcceptedDelay;\r\n\r\n        switch (field) {\r\n            case \"CargoType\":\r\n                ValidCargoType = (value !== \"\");\r\n                Errors.CargoType = ValidCargoType ? \"\" : \"Cargo type is required.\";\r\n                break;\r\n            case \"CargoWeight\":\r\n                ValidCargoWeight = (value !== \"\");\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight is required.\"; \r\n\r\n                if (Errors.CargoWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCargoWeight = (value >= 100);\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight must be greater than 100 lbs.\";\r\n                break;\r\n            case \"LoadingDate\":\r\n                ValidLoadingDate = (value !== \"\");\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date is required.\";\r\n\r\n                if (Errors.LoadingDate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidLoadingDate = (new Date(value) >= new Date());\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date must be later than yesterday.\";\r\n                break;\r\n            case \"LoadingTime\":\r\n                ValidLoadingTime = (value !== \"\");\r\n                Errors.LoadingTime = ValidLoadingTime ? \"\" : \"Loading time is required.\";\r\n                break;\r\n            case \"AcceptedDelay\":\r\n                ValidAcceptedDelay = (value !== \"\");\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay is required.\";\r\n\r\n                if (Errors.AcceptedDelay !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidAcceptedDelay = (value >= 0 && value <= 48);\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay can be in the range of 0 to 48 hours.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCargoType: ValidCargoType,\r\n            ValidCargoWeight: ValidCargoWeight,\r\n            ValidLoadingDate: ValidLoadingDate,\r\n            ValidLoadingTime: ValidLoadingTime,\r\n            ValidAcceptedDelay: ValidAcceptedDelay\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidCargoType &&\r\n                        this.state.ValidCargoWeight &&\r\n                        this.state.ValidLoadingDate &&\r\n                        this.state.ValidLoadingTime &&\r\n                        this.state.AcceptedDelay\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (this.props.IsRequestSent()) {\r\n            return;\r\n        }\r\n\r\n        const newTraderRequest = {\r\n            Token: localStorage.Token,\r\n            JobRequestID: this.props.JobRequest.JobRequestID,\r\n            CargoType: this.state.CargoType,\r\n            CargoWeight: this.state.CargoWeight,\r\n            LoadingDate: this.state.LoadingDate,\r\n            LoadingTime: this.state.LoadingTime,\r\n            EntryExit: this.state.EntryExit,\r\n            AcceptedDelay: this.state.AcceptedDelay\r\n        };\r\n\r\n        console.log(\"Going to add trader request...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addTraderRequest(newTraderRequest).then(response => {\r\n            if (response.Message === \"Trader request is added.\") {\r\n\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n\r\n                this.cancelButton.click();\r\n                this.props.OnOK(response.TraderRequest);\r\n            }\r\n            else {\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div className=\"modal\" id={`send-trader-reqeust-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"send.png\" src=\"./images/send.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Send Request</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Cargo Type</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"CargoType\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.CargoType} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.CargoType}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Cargo Weight (lbs)</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"CargoWeight\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.CargoWeight} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.CargoWeight}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Accepted Delay (Hours)</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"AcceptedDelay\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.AcceptedDelay} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.AcceptedDelay}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Loading Date</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"date\" name=\"LoadingDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.LoadingDate} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.LoadingDate}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Loading Time</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"time\" name=\"LoadingTime\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.LoadingTime} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.LoadingTime}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"checkbox\">\r\n                                                    <label className=\"control-label\">\r\n                                                        <input type=\"checkbox\" name=\"EntryExit\"\r\n                                                            value={this.state.EntryExit} onChange={() => {\r\n                                                                this.state.EntryExit = this.state.EntryExit ? 0 : 1;\r\n                                                            }}></input>\r\n                                                        <span>Entry/Exit</span>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\"\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Send\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default SendTraderRequestDialog;","import React, { Component } from \"react\";\r\nimport TraderRequestContainer from \"../../../../../containers/traderRequest/TraderRequestContainer\";\r\n\r\nclass TraderRequestDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`trader-request-dialog-${this.props.Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <TraderRequestContainer TraderRequest={this.props.TraderRequest} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderRequestDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { addOnGoingJobFromJobRequest } from \"../../../TraderFunctions\";\r\n\r\nclass AssignJobDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false\r\n        };\r\n\r\n        this.onAssignNow = this.onAssignNow.bind(this);\r\n    }\r\n\r\n    onAssignNow = async () => {\r\n        if (!this.props.CanAssign()) {\r\n            return;\r\n        }\r\n\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newOnGoingJob = {\r\n            Token: localStorage.Token,\r\n            TraderRequestID: this.props.TraderRequestID\r\n        };\r\n\r\n        console.log(\"Going to add on-going job...\");\r\n\r\n        await addOnGoingJobFromJobRequest(newOnGoingJob).then(async response => {\r\n            if (response.Message === \"On-going job is added.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.cancelButton.click();\r\n                await this.props.OnOK();\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n\r\n            \r\n        });\r\n    };\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const driver = this.props.Driver;\r\n        const price = this.props.Price;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`assign-from-request-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div class=\"jumbotron\">\r\n                                <div class=\"container\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-24\">\r\n                                            <img alt=\"dollar.png\" src=\"./images/dollar.png\" height=\"100\" />\r\n                                            <div class=\"type-h4 p-t-n\">You are About to Start a New Job with <span class=\"color-default\">{`${driver.FirstName} ${driver.LastName}`}</span>.</div>\r\n                                            <div class=\"type-sh3\">Your Payment Amount is <span class=\"color-default\">{`$${price}`}</span>.</div>\r\n                                            <p><span class=\"color-default\">Important Note:</span> After this step. you'll be engaged in an On-Going Job. Your amount will not be given to the driver without your approval for Job's completion. On cancelling an On-Going Job, your amount will be refunded with a deduction of <span className=\"color-default\">10%.</span></p>\r\n                                            <div class=\"text-right\">\r\n                                                <button class=\"btn btn-primary\" onClick={this.onAssignNow}>Assign Now</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AssignJobDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport DriverContainer from \"../../../../../containers/driver/DriverContainer\";\r\nimport TruckContainer from \"../../../../../containers/truck/TruckContainer\";\r\nimport JobRequestContainer from \"../../../../../containers/jobReqeust/JobRequestContainer\";\r\nimport SendTraderRequestDialog from \"./SendTraderRequestDialog\";\r\nimport TraderRequestDialog from \"./TraderRequestDialog\";\r\nimport AssignJobDialog from \"./AssignJobDialog\";\r\nimport { deleteTraderRequest } from \"../../../TraderFunctions\";\r\n\r\nclass JobRequestPostListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Preloader: null\r\n        };\r\n\r\n        this.onCancelRequest = this.onCancelRequest.bind(this);\r\n    }\r\n\r\n    onCancelRequest = async jobRequest => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedTraderRequest = {\r\n            Token: localStorage.Token,\r\n            JobRequestID: jobRequest.JobRequestID\r\n        };\r\n\r\n        console.log(`Going to delete Trader request...`);\r\n\r\n        await deleteTraderRequest(discardedTraderRequest).then(response => {\r\n            if (response.Message === \"Trader request is deleted.\") {\r\n                this.props.OnRequestUpdated(jobRequest, null);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const jobRequest = this.props.JobRequestPost.JobRequest;\r\n        const driver = this.props.JobRequestPost.Driver;\r\n        const driverOnJob = this.props.JobRequestPost.DriverOnJob;\r\n        const traderOnJob = this.props.TraderOnJob;\r\n        const traderRequest = this.props.JobRequestPost.TraderRequest;\r\n        const canAssign = !driverOnJob && !traderOnJob;\r\n\r\n        const assignJobIndex = UUID();\r\n\r\n        let Badge;\r\n\r\n        if (traderRequest) {\r\n            Badge = traderRequest.Selected ?\r\n                <span class=\"badge back-color-golden m-l-xxs\">REQUEST ACCEPTED</span> :\r\n                <span class=\"badge back-color-default m-l-xxs\">REQUEST SENT</span>;\r\n        }\r\n        else {\r\n            Badge = null;\r\n        }\r\n\r\n        return <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron p-xxxs back-color-gray\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"type-h5 color-default p-t-n\">\r\n                                {`${index + 1}.`}\r\n                                {Badge}\r\n                            </div>\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-user\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Posted By</div>\r\n                                            <div className=\"content-text-secondary\">{`${driver.FirstName} ${driver.LastName}`}\r\n                                                <span class=\"badge back-color-danger m-l-xxs\">ON JOB</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-clock\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Posted On</div>\r\n                                            <div className=\"content-text-secondary\">{new Date(jobRequest.TimeCreated).toDateString()}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-tag\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Price</div>\r\n                                            <div className=\"content-text-secondary\">{`$${jobRequest.Price}`}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas  fa-map-marker-alt\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">From </div>\r\n                                            <div className=\"content-text-secondary\">{jobRequest.LoadingPlace}</div>\r\n                                            <div className=\"content-text-primary\">To</div>\r\n                                            <div className=\"content-text-secondary\">{jobRequest.UnloadingPlace}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"text-right\">\r\n                                {traderRequest ?\r\n                                    <section>\r\n                                        <button className=\"btn btn-secondary\"\r\n                                            onClick={async () => { await this.onCancelRequest(jobRequest); }}>Cancel Request</button>\r\n                                        <button className=\"btn btn-primary\"\r\n                                            data-toggle=\"modal\"\r\n                                            data-target={`#trader-request-dialog-${index}`}>View Request</button>\r\n                                        <button className=\"btn btn-primary\"\r\n                                            disabled={!canAssign}\r\n                                            data-toggle=\"modal\"\r\n                                            data-target={`#assign-from-request-dialog-${assignJobIndex}`}>Assign Job</button>\r\n                                    </section> :\r\n                                    <button className=\"btn btn-primary\"\r\n                                        data-toggle=\"modal\"\r\n                                        data-target={`#send-trader-reqeust-dialog-${index}`}>Send Request</button>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {traderRequest ? \r\n                    <TraderRequestDialog Index={index} TraderRequest={traderRequest} /> : \r\n                    null}\r\n\r\n                {traderRequest && traderRequest.Selected ? \r\n                    <AssignJobDialog Index={assignJobIndex}\r\n                        TraderRequestID={traderRequest.TraderRequestID}\r\n                        Driver={driver}\r\n                        Price={jobRequest.Price}\r\n                        CanAssign={() => { return canAssign; }}\r\n                        OnOK={this.props.OnJobAssigned} /> : \r\n                    null}\r\n\r\n                <div className=\"back-color-gray\" data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#job-request-post-${index}`}>\r\n                    <div className=\"type-h4\" style={{ color: \"#008575\", padding: \"10px\", textAlign: \"right\" }}>\r\n                        {\"   More Details\"} <i className=\"fas fa-ellipsis-v\"></i>\r\n                        <i class=\"glyph glyph-add\"></i>\r\n                        <i class=\"glyph glyph-remove\"></i>\r\n                    </div>\r\n                </div>\r\n                <div className=\"collapse\" id={`job-request-post-${index}`}>\r\n                    <ul className=\"nav nav-tabs\" role=\"tablist\"\r\n                        style={{\r\n                            padding: \"10px\",\r\n                            backgroundColor: \"#EFEFEF\",\r\n                            width: \"100%\",\r\n                            margin: \"0px\"\r\n                        }}>\r\n                        <li role=\"presentation\" className=\"active\"><a href={`#job-request-${index}`} aria-controls={`job-request-${index}`} role=\"tab\" data-toggle=\"tab\">Job Request</a></li>\r\n                        <li role=\"presentation\">\r\n                            <a href={`#driver-${index}`} aria-controls={`driver-${index}`} role=\"tab\" data-toggle=\"tab\"\r\n                                onClick={async () => { await this.RefreshDriverContainer(); }}>Driver</a>\r\n                        </li>\r\n                        <li role=\"presentation\">\r\n                            <a href={`#truck-${index}`} aria-controls={`truck-${index}`} role=\"tab\" data-toggle=\"tab\"\r\n                                onClick={async () => { await this.RefreshTruckContainer(); }}>Truck</a>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"tab-content\">\r\n                        <div role=\"tabpanel\" className=\"tab-pane active\" id={`job-request-${index}`}>\r\n                            <JobRequestContainer JobRequest={jobRequest} />\r\n                        </div>\r\n                        <div role=\"tabpanel\" className=\"tab-pane\" id={`driver-${index}`}>\r\n                            <DriverContainer Refresh={refresh => { this.RefreshDriverContainer = refresh; }} DriverID={jobRequest.DriverID} />\r\n                        </div>\r\n                        <div role=\"tabpanel\" className=\"tab-pane\" id={`truck-${index}`}>\r\n                            <TruckContainer Refresh={refresh => { this.RefreshTruckContainer = refresh; }} DriverID={jobRequest.DriverID} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <SendTraderRequestDialog\r\n                    DialogID={index}\r\n                    JobRequest={jobRequest}\r\n                    IsRequestSent={() => { return traderRequest ? true : false; }}\r\n                    OnOK={traderRequest => { this.props.OnRequestUpdated(jobRequest, traderRequest); }} />\r\n            </li>\r\n            {this.state.Preloader}\r\n        </section>;     \r\n    }\r\n};\r\n\r\nexport default JobRequestPostListItem;","import React, { Component } from \"react\";\r\nimport ProgressBar from \"../../../../../controls/ProgressBar\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport { getData } from \"../../../TraderFunctions\";\r\nimport JobRequestPostListItem from \"./JobRequestPostListItem\";\r\n\r\nclass JobRequestPostsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobRequestPosts: [],\r\n            TraderOnJob: false,\r\n            Searching: true,\r\n            Refreshing: false,\r\n            Preloader: null,\r\n            Message: null,\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        this.props.Refresh(this.refresh);\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobRequestPosts\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job request posts found.\") {\r\n                    this.setState({\r\n                        JobRequestPosts: response.JobRequestPosts,\r\n                        TraderOnJob: response.TraderOnJob,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobRequestPosts: [],\r\n                        TraderOnJob: false,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Refreshing: true\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobRequestPosts\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job request posts found.\") {\r\n                    this.setState({\r\n                        JobRequestPosts: response.JobRequestPosts,\r\n                        TraderOnJob: response.TraderOnJob,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobRequestPosts: [],\r\n                        TraderOnJob: false,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Searching) {\r\n            return <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#202020\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"job_requests.png\" src=\"./images/job_requests.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div className=\"col-md-12 col-md-pull-12\">\r\n                                <div className=\"type-h3\">Job Requests</div>\r\n                                <p>Job requests from Drivers are dispalyed here.</p>\r\n                                <div class=\"type-sh3\" style={{ color: \"#008575\" }}>Searhcing</div>\r\n                                <ProgressBar />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n        else if (this.state.JobRequestPosts.length === 0) {\r\n            return <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#202020\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"job_requests.png\" src=\"./images/job_requests.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div className=\"col-md-12 col-md-pull-12\">\r\n                                <div className=\"type-h3\">Job Requests</div>\r\n                                <div className=\"type-sh3\">No Job Requests Found...</div>\r\n                                <p>Job requests from Drivers are dispalyed here.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n        else {\r\n            return <section>\r\n                {this.state.TraderOnJob ?\r\n                    <div class=\"alert alert-danger m-n\">\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xs-24\">\r\n                                    <p><span className=\"fas fa-exclamation-circle m-r-xxxs\"></span>While you are engaged in an On-Going Job, you cannot assign more jobs to drivers. View details in <span className=\"color-default\">On-Going Job</span> tab.</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div> :\r\n                    null}\r\n           <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Job Requests\r\n                    {this.state.Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n                </div>\r\n                <ol className=\"list-items\" style={{ marginTop: \"0px\" }}>\r\n                    {this.state.JobRequestPosts.map((jobRequestPost, index) => {\r\n                        return <JobRequestPostListItem key={index} Index={index}\r\n                            JobRequestPost={jobRequestPost}\r\n                            OnRequestUpdated={(jobRequest, traderRequest) => {\r\n                                let jobRequestPosts = this.state.JobRequestPosts;\r\n\r\n                                for (let jobRequestPost of jobRequestPosts) {\r\n                                    if (jobRequestPost.JobRequest.JobRequestID === jobRequest.JobRequestID) {\r\n                                        jobRequestPost.TraderRequest = traderRequest;\r\n                                        break;\r\n                                    }\r\n                                }\r\n\r\n                                this.setState({\r\n                                    JobRequestPosts: jobRequestPosts\r\n                                });\r\n                            }}\r\n                            TraderOnJob={this.state.TraderOnJob}\r\n                            OnJobAssigned={this.refresh} />;\r\n                    })} \r\n                </ol>\r\n       </section>;\r\n        }      \r\n    }\r\n};\r\n\r\nexport default JobRequestPostsList;","import React, { Component } from \"react\";\r\nimport JobRequestPostsList from \"./JobRequestPostsList\";\r\n\r\nclass JobOffers extends Component {\r\n   render() {\r\n       return <section>\r\n           <JobRequestPostsList Refresh={this.props.Refresh} />\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobOffers;","import React, { Component } from \"react\";\r\nimport { getData } from \"../../../components/traders/TraderFunctions\";\r\nimport SearchingContainer from \"../../searching/SearchingContainer\"; \r\nimport DrivingLicenceContainer from \"./DrivingLicenceContainer\";\r\nimport EntryExitCardContianer from \"./EntryExitCardContainer\";\r\nimport IdentityCardContainer from \"./IdentityCardContainer\";\r\n\r\nclass DocumentsContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DriverDocuments: null,\r\n            Searching: false,\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DriverDocuments\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver documents found.\") {\r\n                    this.setState({\r\n                        DriverDocuments: response.DriverDocuments,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DriverDocuments: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DriverDocuments\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver documents found.\") {\r\n                    this.setState({\r\n                        DriverDocuments: response.DriverDocuments\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DriverDocuments: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const driverDocuments = this.state.DriverDocuments;\r\n\r\n        return (this.state.Searching || !driverDocuments) ?\r\n            <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor=\"documents\" /> :\r\n            <section>\r\n                <ol className=\"list-items m-n\">\r\n                    <IdentityCardContainer IdentityCard={driverDocuments.IdentityCard} />\r\n                    <DrivingLicenceContainer DrivingLicence={driverDocuments.DrivingLicence} />\r\n                    <EntryExitCardContianer EntryExitCard={driverDocuments.EntryExitCard} />\r\n                </ol>\r\n            </section>;\r\n    }\r\n};\r\n\r\nexport default DocumentsContainer;","import React, { Component } from \"react\";\r\nimport DriverContainer from \"../../../../../containers/driver/DriverContainer\";\r\nimport DocumentsContainer from \"../../../../../containers/driver/documents/DocumentsContainer\";\r\n\r\nclass ProfileDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`profile-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h2\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Driver's Profile</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <section>\r\n                                <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                                    <li role=\"presentation\" className=\"active\">\r\n                                        <a href={`#driver-tab-${index}`} aria-controls={`driver-tab-${index}`} role=\"tab\" data-toggle=\"tab\">Driver</a>\r\n                                    </li>\r\n                                    <li role=\"presentation\">\r\n                                        <a href={`#documents-tab-${index}`} aria-controls={`documents-tab-${index}`} role=\"tab\" data-toggle=\"tab\">Documents</a>\r\n                                    </li>\r\n                                </ul>\r\n                                <div className=\"tab-content\">\r\n                                    <div role=\"tabpanel\" className=\"tab-pane active\" id={`driver-tab-${index}`}>\r\n                                        <DriverContainer Refresh={this.props.RefreshDriver} DriverID={this.props.DriverID} TabView={true} />\r\n                                    </div>\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id={`documents-tab-${index}`}>\r\n                                        <DocumentsContainer Refresh={this.props.RefreshDocuments} DriverID={this.props.DriverID} />\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ProfileDialog;","import React, { Component } from \"react\";\r\nimport TrailerContainer from \"./TrailerContainer\";\r\nimport SearchingContainer from \"../searching/SearchingContainer\";\r\n\r\nclass TrailersDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const trailers = this.props.Trailers;\r\n\r\n        return (trailers.length === 0) ?\r\n            <SearchingContainer Searching={false}\r\n                SearchingFor=\"trailers\" /> : \r\n            <section>\r\n                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {trailers.map((trailer, index) => {\r\n                        return <TrailerContainer key={index} Index={index} Trailer={trailer} />;\r\n                    })}\r\n                </ol>\r\n            </section>;\r\n    }\r\n};\r\n\r\nexport default TrailersDialog;","import React, { Component } from \"react\";\r\nimport TruckContainer from \"../../../../../containers/truck/TruckContainer\";\r\nimport TrailersContainer from \"../../../../../containers/truck/TrailersContainer\";\r\n\r\nclass ProfileDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Trailers: []\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`truck-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h2\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Driver's Profile</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <section>\r\n                                <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                                    <li role=\"presentation\" className=\"active\">\r\n                                        <a href={`#truck-tab-${index}`} aria-controls={`truck-tab-${index}`} role=\"tab\" data-toggle=\"tab\">Truck</a>\r\n                                    </li>\r\n                                    <li role=\"presentation\">\r\n                                        <a href={`#trailers-tab-${index}`} aria-controls={`trailers-tab-${index}`} role=\"tab\" data-toggle=\"tab\">Trailers</a>\r\n                                    </li>\r\n                                </ul>\r\n                                <div className=\"tab-content\">\r\n                                    <div role=\"tabpanel\" className=\"tab-pane active\" id={`truck-tab-${index}`}>\r\n                                        <TruckContainer Refresh={this.props.Refresh}\r\n                                            DriverID={this.props.DriverID}\r\n                                            OnTrailersFound={trailers => {\r\n                                                this.setState({\r\n                                                    Trailers: trailers\r\n                                                });\r\n                                            }}\r\n                                            TabView={true} />\r\n                                    </div>\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id={`trailers-tab-${index}`}>\r\n                                        <TrailersContainer Trailers={this.state.Trailers} />\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ProfileDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { addOnGoingJobFromJobOffer } from \"../../../TraderFunctions\";\r\n\r\nclass ProfileDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false\r\n        };\r\n\r\n        this.onAssignNow = this.onAssignNow.bind(this);\r\n    }\r\n\r\n    onAssignNow = async () => {\r\n        if (!this.props.CanAssign()) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newOnGoingJob = {\r\n            Token: localStorage.Token,\r\n            DriverRequestID: this.props.DriverRequestID\r\n        };\r\n\r\n        console.log(\"Going to add on-going job...\");\r\n\r\n        await addOnGoingJobFromJobOffer(newOnGoingJob).then(response => {\r\n            if (response.Message === \"On-going job is added.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.cancelButton.click();\r\n\r\n                this.props.OnOK();\r\n                return;\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n\r\n            \r\n        });\r\n    };\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const driver = this.props.Driver;\r\n        const price = this.props.Price;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`assign-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h2\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Assigning a New Job</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div class=\"jumbotron\">\r\n                                <div class=\"container\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-24\">\r\n                                            <img alt=\"dollar.png\" src=\"./images/dollar.png\" height=\"100\" />\r\n                                            <div class=\"type-h4\">You are About to Start a New Job with <span class=\"color-default\">{`${driver.FirstName} ${driver.LastName}`}</span>.</div>\r\n                                            <div class=\"type-sh3\">Your Payment Amount is <span class=\"color-default\">{`$${price}`}</span>.</div>\r\n                                            <p><span class=\"color-default\">Important Note:</span> After this step. you'll be engaged in an On-Going Job. Your amount will not be given to the driver without your approval for Job's completion. On cancelling an On-Going Job, your amount will be refunded with a deduction of <span className=\"color-default\">10%.</span></p>\r\n                                            <div class=\"text-right\">\r\n                                                <button class=\"btn btn-primary\" onClick={this.onAssignNow}>Assign Now</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ProfileDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport ProfileDialog from \"./ProfileDialog\";\r\nimport TruckDialog from \"./TruckDialog\";\r\nimport AssignJobDialog from \"./AssignJobDialog\";\r\n\r\nclass DriverRequestRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const price = this.props.Price;\r\n        const driverRequestPackage = this.props.DriverRequestPackage;\r\n        const driverRequest = driverRequestPackage.DriverRequest;\r\n        const driver = driverRequestPackage.Driver;\r\n        const driverOnJob = driverRequestPackage.DriverOnJob;\r\n        const traderOnJob = driverRequestPackage.TraderOnJob;\r\n        const canAssign = (!driverOnJob && !traderOnJob);\r\n\r\n        const profileIndex = UUID();\r\n        const truckIndex = UUID();\r\n        const assignJobIndex = UUID();\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{index + 1}</strong>\r\n            </td>\r\n\r\n            <td>\r\n                {`${driver.FirstName} ${driver.LastName}`}\r\n                {index === 0 ? <span class=\"badge back-color-golden m-l-xxxs\">NEW</span> : null}\r\n                {driverOnJob ? <span class=\"badge back-color-danger m-l-xxxs\">ON JOB</span> : null}\r\n            </td>\r\n\r\n            <td>{new Date(driverRequest.Created).toDateString()}</td>\r\n\r\n            {driverRequest.Price ? <td>{`$${driverRequest.Price}`}</td> : null}\r\n\r\n            <td class=\"text-right\">\r\n                <div>\r\n                    <button className=\"btn btn-secondary m-xxxs\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#profile-dialog-${profileIndex}`}\r\n                        onClick={async () => {\r\n                            await this.RefreshDriverContainer();\r\n                            await this.RefreshDocumentsContainer();\r\n                        }}>Profile</button>\r\n\r\n                    <button className=\"btn btn-secondary m-xxxs\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#truck-dialog-${truckIndex}`}\r\n                        onClick={async () => {\r\n                            await this.RefreshTruckContainer();\r\n                        }}>Truck</button>\r\n\r\n                    <button className=\"btn btn-primary m-xxxs\"\r\n                        disabled={!canAssign}\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#assign-dialog-${assignJobIndex}`}>Assign Job</button>\r\n\r\n                    <ProfileDialog Index={profileIndex}\r\n                        DriverID={driverRequest.DriverID}\r\n                        RefreshDriver={refresh => { this.RefreshDriverContainer = refresh; }}\r\n                        RefreshDocuments={refresh => { this.RefreshDocumentsContainer = refresh; }} />\r\n\r\n                    <TruckDialog Index={truckIndex}\r\n                        DriverID={driverRequest.DriverID}\r\n                        Refresh={refresh => { this.RefreshTruckContainer = refresh; }} />\r\n\r\n                    <AssignJobDialog Index={assignJobIndex}\r\n                        DriverRequestID={driverRequest.DriverRequestID}\r\n                        Driver={driver}\r\n                        Price={driverRequest.Price ? driverRequest.Price : price}\r\n                        CanAssign={() => { return canAssign; }}\r\n                        OnOK={this.props.OnJobAssigned} />\r\n                </div>\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default DriverRequestRow;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport DriverRequestRow from \"./DriverRequestRow\";\r\nimport { getData } from \"../../../TraderFunctions\";\r\n\r\nclass DriverRequestsTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DriverRequestPackages: [],\r\n            Searching: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DriverRequestPackages\",\r\n                Params: {\r\n                    JobOfferID: this.props.JobOfferID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver request packages found.\") {\r\n                    this.props.OnRequestsFound(response.DriverRequestPackages.length);\r\n                    this.setState({\r\n                        DriverRequestPackages: response.DriverRequestPackages,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.props.OnRequestsFound(0);\r\n                    this.setState({\r\n                        DriverRequestPackages: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DriverRequests\",\r\n                Params: {\r\n                    JobOfferID: this.props.JobOfferID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver requests found.\") {\r\n                    this.setState({\r\n                        DriverRequests: response.DriverRequests\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DriverRequests: []\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const jobOfferType = this.props.JobOfferType;\r\n\r\n        if (this.state.Searching || this.state.DriverRequestPackages.length === 0) {\r\n            return <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor={jobOfferType === \"Fixed-Price\" ? \"requests\" : \"bids\"} />;\r\n        }\r\n        else {\r\n            const driverRequestPackages = this.state.DriverRequestPackages;\r\n\r\n            return <section>\r\n                <div class=\"table-responsive back-color-gray\">\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>NUMBER</th>\r\n                                <th>DRIVER</th>\r\n                                <th>REQUESTED ON</th>\r\n                                {jobOfferType === \"Auctionable\" ? <th>BID PRICE</th> : null}\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {driverRequestPackages.map((driverRequestPackage, index) => {\r\n                                return <DriverRequestRow key={index}\r\n                                    Index={index}\r\n                                    Price={this.props.Price}\r\n                                    TraderOnJob={this.props.TraderOnJob}\r\n                                    DriverRequestPackage={driverRequestPackage}\r\n                                    OnJobAssigned={this.props.OnJobAssigned} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default DriverRequestsTable;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { updateJobOffer } from \"../../../TraderFunctions.js\";\r\n\r\nclass EditJobOfferDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobOfferID: this.props.JobOffer.JobOfferID,\r\n            LoadingPlace: this.props.JobOffer.LoadingPlace,\r\n            UnloadingPlace: this.props.JobOffer.UnloadingPlace,\r\n            TripType: this.props.JobOffer.TripType,\r\n            CargoType: this.props.JobOffer.CargoType,\r\n            CargoWeight: this.props.JobOffer.CargoWeight,\r\n            LoadingDate: this.props.JobOffer.LoadingDate,\r\n            LoadingTime: this.props.JobOffer.LoadingTime,\r\n            AcceptedDelay: this.props.JobOffer.AcceptedDelay,\r\n            Price: this.props.JobOffer.Price,\r\n            JobOfferType: this.props.JobOffer.JobOfferType,\r\n            EntryExit: this.props.JobOffer.EntryExit,\r\n\r\n            ValidCargoType: true,\r\n            ValidCargoWeight: true,\r\n            ValidLoadingPlace: true,\r\n            ValidUnloadingPlace: true,\r\n            ValidLoadingDate: true,\r\n            ValidLoadingTime: true,\r\n            ValidAcceptedDelay: true,\r\n            ValidPrice: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                CargoType: \"\",\r\n                CargoWeight: \"\",\r\n                LoadingPlace: \"\",\r\n                UnloadingPlace: \"\",\r\n                LoadingDate: \"\",\r\n                LoadingTime: \"\",\r\n                AcceptedDelay: \"\",\r\n                Price: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCargoType = this.state.ValidCargoType;\r\n        let ValidCargoWeight = this.state.ValidCargoWeight;\r\n        let ValidLoadingPlace = this.state.ValidLoadingPlace;\r\n        let ValidUnloadingPlace = this.state.ValidUnloadingPlace;\r\n        let ValidLoadingDate = this.state.ValidLoadingDate;\r\n        let ValidLoadingTime = this.state.ValidLoadingTime;\r\n        let ValidAcceptedDelay = this.state.ValidAcceptedDelay;\r\n        let ValidPrice = this.state.ValidPrice;\r\n\r\n        switch (field) {\r\n            case \"CargoType\":\r\n                ValidCargoType = (value !== \"\");\r\n                Errors.CargoType = ValidCargoType ? \"\" : \"Cargo type is required.\";\r\n                break;\r\n            case \"CargoWeight\":\r\n                ValidCargoWeight = (value !== \"\");\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight is required.\";\r\n\r\n                if (Errors.CargoWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCargoWeight = (value >= 100);\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight must be greater than 100 lbs.\";\r\n                break;\r\n            case \"LoadingPlace\":\r\n                ValidLoadingPlace = (value !== \"\");\r\n                Errors.LoadingPlace = ValidLoadingPlace ? \"\" : \"Loading place is required.\";\r\n                break;\r\n            case \"UnloadingPlace\":\r\n                ValidUnloadingPlace = (value !== \"\");\r\n                Errors.UnloadingPlace = ValidUnloadingPlace ? \"\" : \"Unloading place is required.\";\r\n                break;\r\n            case \"LoadingDate\":\r\n                ValidLoadingDate = (value !== \"\");\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date is required.\";\r\n\r\n                if (Errors.LoadingDate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidLoadingDate = (new Date(value) >= new Date());\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date must be later than yesterday.\";\r\n                break;\r\n            case \"LoadingTime\":\r\n                break;\r\n            case \"AcceptedDelay\":\r\n                ValidAcceptedDelay = (value !== \"\");\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay is required.\";\r\n\r\n                if (Errors.AcceptedDelay !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidAcceptedDelay = (value >= 0 && value <= 48);\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay can be in the range of 0 to 48 hours.\";\r\n                break;\r\n            case \"Price\":\r\n                ValidPrice = (value !== \"\");\r\n                Errors.Price = ValidPrice ? \"\" : \"Price is required.\";\r\n\r\n                if (Errors.Price !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPrice = (value > 0.00);\r\n                Errors.Price = ValidPrice ? \"\" : \"Price must be more than $0.00.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCargoType: ValidCargoType,\r\n            ValidCargoWeight: ValidCargoWeight,\r\n            ValidLoadingPlace: ValidLoadingPlace,\r\n            ValidUnloadingPlace: ValidUnloadingPlace,\r\n            ValidLoadingDate: ValidLoadingDate,\r\n            ValidLoadingTime: ValidLoadingTime,\r\n            ValidAcceptedDelay: ValidAcceptedDelay,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidCargoType &&\r\n                    this.state.ValidCargoWeight &&\r\n                    this.state.ValidLoadingPlace &&\r\n                    this.state.ValidUnloadingPlace &&\r\n                    this.state.ValidLoadingDate &&\r\n                    this.state.ValidLoadingTime &&\r\n                    this.state.AcceptedDelay &&\r\n                    this.state.ValidPrice\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedJobOffer = {\r\n            Token: localStorage.Token,\r\n            JobOfferID: this.state.JobOfferID,\r\n            TripType: this.state.TripType,\r\n            CargoType: this.state.CargoType,\r\n            CargoWeight: this.state.CargoWeight,\r\n            LoadingPlace: this.state.LoadingPlace,\r\n            UnloadingPlace: this.state.UnloadingPlace,\r\n            LoadingDate: this.state.LoadingDate,\r\n            LoadingTime: this.state.LoadingTime,\r\n            EntryExit: this.state.EntryExit,\r\n            Price: this.state.Price,\r\n            AcceptedDelay: this.state.AcceptedDelay,\r\n            JobOfferType: this.state.JobOfferType\r\n        };\r\n\r\n        console.log(\"Going to update Job offer.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateJobOffer(updatedJobOffer).then(response => {\r\n            if (response.Message === \"Job offer is updated.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div className=\"modal\" id={`edit-job-offer-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <section>\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"modal-header\">\r\n                                    <img alt=\"pencil.png\" src=\"./images/pencil.png\" height=\"60\" />\r\n                                    <div className=\"type-h3\">Edit Job Offer</div>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                                    alt=\"job_offfers.png\" src=\"./images/job_offers.png\" data-source-index=\"2\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Loading Place</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"LoadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.LoadingPlace} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.LoadingPlace}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Unloading Place</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"UnloadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.UnloadingPlace} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.UnloadingPlace}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Trip Type</label><br />\r\n                                                <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                    <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                        aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                        <span>{this.state.TripType}</span>\r\n                                                        <span className=\"caret\"></span>\r\n                                                    </button>\r\n                                                    <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                        <li><a onClick={() => { this.setState({ TripType: \"One Way\" }); }}>One Way</a></li>\r\n                                                        <li><a onClick={() => { this.setState({ TripType: \"Two Way\" }); }}>Two Way</a></li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Cargo Type</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"text\" name=\"CargoType\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.CargoType} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.CargoType}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Cargo Weight (lbs)</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"CargoWeight\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.CargoWeight} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.CargoWeight}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Loading Date</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"date\" name=\"LoadingDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.LoadingDate} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.LoadingDate}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Loading Time</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"time\" name=\"LoadingTime\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.LoadingTime} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.LoadingTime}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Accepted Delay (Hours)</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" name=\"AcceptedDelay\" className=\"form-control\" autoComplete=\"off\"\r\n                                                    value={this.state.AcceptedDelay} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.AcceptedDelay}</span>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"control-label\">Price (USD)</label>\r\n                                                <span className=\"text-danger\" style={Required}>*</span>\r\n                                                <input type=\"number\" min=\"0.00\" step=\"0.01\" max=\"100.00\" name=\"Price\"\r\n                                                    className=\"form-control\" autoComplete=\"off\" value={this.state.Price} onChange={this.onChange} />\r\n                                                <span className=\"text-danger\">{this.state.Errors.Price}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <button type=\"button\" data-toggle=\"button\" className={(this.state.JobOfferType === \"Auctionable\") ? \"btn btn-toggle-switch active\" : \"btn btn-toggle-switch\"}\r\n                                                    autocomplete=\"off\" aria-pressed={(this.state.JobOfferType === \"Auctionable\") ? \"true\" : \"false\"}\r\n                                                    onClick={() => {\r\n                                                        this.state.JobOfferType = (this.state.JobOfferType === \"Fixed-Price\") ?\r\n                                                            \"Auctionable\" : \"Fixed-Price\";\r\n                                                        this.validateField(\"\", \"\");\r\n                                                    }}>\r\n                                                    <span className=\"stateLabel stateLabel-on\">Auctionable Job Offer</span>\r\n                                                    <span className=\"stateLabel stateLabel-off\">Fixed-Price Job Offer</span>\r\n                                                </button>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"checkbox\">\r\n                                                    <label className=\"control-label\">\r\n                                                        <input type=\"checkbox\" name=\"EntryExit\" defaultChecked={(this.state.EntryExit === 1) ? \"checked\" : \"\"}\r\n                                                            value={this.state.EntryExit} onChange={() => {\r\n                                                                this.state.EntryExit = (this.state.EntryExit === 1) ? 0 : 1;\r\n                                                                this.validateField(\"\", \"\");\r\n                                                            }}></input>\r\n                                                        <span>Entry/Exit</span>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button className=\"btn btn-default\" data-dismiss=\"modal\"\r\n                                        ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default EditJobOfferDialog;","import React, { Component } from \"react\";\r\nimport DriverRequestsTable from \"./DriverRequestsTable\";\r\nimport EditJobOfferDialog from \"./EditJobOfferDialog\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { deleteJobOffer } from \"../../../TraderFunctions\";\r\nimport JobOfferContainer from \"../../../../../containers/jobOffer/JobOfferContainer\";\r\n\r\nclass JobOfferPackageItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Preloader: null,\r\n            NumberOfRequests: 0\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async jobOfferID => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedJobOffer = {\r\n            Token: localStorage.Token,\r\n            JobOfferID: jobOfferID\r\n        };\r\n\r\n        console.log(`Going to delete Job offer...`);\r\n\r\n        await deleteJobOffer(discardedJobOffer).then(response => {\r\n            if (response.Message === \"Job offer is deleted.\") {\r\n                this.props.OnJobOfferUpdated();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const jobOffer = this.props.JobOfferPackage.JobOffer;\r\n        const hasDriverRequests = this.props.JobOfferPackage.HasDriverRequests;\r\n\r\n        return <section>\r\n            <JobOfferContainer Index={index} JobOffer={jobOffer} />\r\n\r\n            <div className=\"text-right p-xxs back-color-gray\">\r\n                <button type=\"button\" className=\"btn btn-default\"\r\n                    data-toggle=\"modal\"\r\n                    disabled={hasDriverRequests}\r\n                    data-target={`#edit-job-offer-dialog-${index}`}>Edit</button>\r\n                <button className=\"btn btn-danger\" onClick={async () => { await this.onDelete(jobOffer.JobOfferID); }}>Delete</button>\r\n            </div>\r\n\r\n            <EditJobOfferDialog\r\n                DialogID={index}\r\n                JobOffer={jobOffer}\r\n                CanEdit={() => { return (this.state.NumberOfRequests === 0) ? true : false }}\r\n                OnOK={() => { this.props.OnJobOfferUpdated(); }} />\r\n\r\n            <div data-toggle=\"collapse\" aria-expanded=\"false\"\r\n                data-target={`#job-offer-package-${index}`}\r\n                onMouseDown={async () => { await this.RefreshDriverRequestsTable(); }}>\r\n\r\n                <div className=\"type-h4 text-right color-default p-xxs\">\r\n                    <span class=\"badge back-color-danger m-r-xxxs\">{this.state.NumberOfRequests}</span>\r\n                    {(jobOffer.JobOfferType === \"Fixed-Price\") ? \"Driver Requests\" : \"Driver Bids\"}\r\n                    <i className=\"fas fa-ellipsis-v\"></i>\r\n                    <i class=\"glyph glyph-add\"></i>\r\n                    <i class=\"glyph glyph-remove\"></i>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`job-offer-package-${index}`}>\r\n\r\n                <DriverRequestsTable\r\n                    Refresh={refresh => { this.RefreshDriverRequestsTable = refresh; }}\r\n                    OnRequestsFound={number => {\r\n                        this.setState({\r\n                            NumberOfRequests: number\r\n                        });\r\n                    }}\r\n                    JobOfferID={jobOffer.JobOfferID}\r\n                    JobOfferType={jobOffer.JobOfferType}\r\n                    Price={jobOffer.Price}\r\n                    TraderOnJob={this.props.TraderOnJob}\r\n                    OnJobAssigned={this.props.OnJobOfferUpdated} />\r\n\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            </div>\r\n\r\n            {this.state.Preloader}\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobOfferPackageItem;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { addJobOffer } from \"../../../TraderFunctions.js\";\r\n\r\nclass AddJobOfferDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LoadingPlace: \"\",\r\n            UnloadingPlace: \"\",\r\n            TripType: \"One Way\",\r\n            CargoType: \"\",\r\n            CargoWeight: 0,          \r\n            LoadingDate: new Date(),\r\n            LoadingTime: new Date().getTime(),\r\n            AcceptedDelay: 0,\r\n            Price: 0.00,\r\n            JobOfferType: \"Fixed-Price\",\r\n            EntryExit: 0,\r\n\r\n            ValidCargoType: false,\r\n            ValidCargoWeight: false,\r\n            ValidLoadingPlace: false,\r\n            ValidUnloadingPlace: false,\r\n            ValidLoadingDate: false,\r\n            ValidLoadingTime: false,\r\n            ValidAcceptedDelay: false,\r\n            ValidPrice: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                CargoType: \"\",\r\n                CargoWeight: \"\",\r\n                LoadingPlace: \"\",\r\n                UnloadingPlace: \"\",\r\n                LoadingDate: \"\",\r\n                LoadingTime: \"\",\r\n                AcceptedDelay: \"\",\r\n                Price: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        if (name === \"EntryExit\" ||\r\n            name === \"JobOfferType\") {\r\n            console.log(`Value of ${name} is ${value}`);\r\n        }\r\n        \r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCargoType = this.state.ValidCargoType;\r\n        let ValidCargoWeight = this.state.ValidCargoWeight;\r\n        let ValidLoadingPlace = this.state.ValidLoadingPlace;\r\n        let ValidUnloadingPlace = this.state.ValidUnloadingPlace;\r\n        let ValidLoadingDate = this.state.ValidLoadingDate;\r\n        let ValidLoadingTime = this.state.ValidLoadingTime;\r\n        let ValidAcceptedDelay = this.state.ValidAcceptedDelay;\r\n        let ValidPrice = this.state.ValidPrice;\r\n\r\n        switch (field) {\r\n            case \"CargoType\":\r\n                ValidCargoType = (value !== \"\");\r\n                Errors.CargoType = ValidCargoType ? \"\" : \"Cargo type is required.\";\r\n                break;\r\n            case \"CargoWeight\":\r\n                ValidCargoWeight = (value !== \"\");\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight is required.\"; \r\n\r\n                if (Errors.CargoWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCargoWeight = (value >= 100);\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight must be greater than 100 lbs.\";\r\n                break;\r\n            case \"LoadingPlace\":\r\n                ValidLoadingPlace = (value !== \"\");\r\n                Errors.LoadingPlace = ValidLoadingPlace ? \"\" : \"Loading place is required.\";\r\n                break;\r\n            case \"UnloadingPlace\":\r\n                ValidUnloadingPlace = (value !== \"\");\r\n                Errors.UnloadingPlace = ValidUnloadingPlace ? \"\" : \"Unloading place is required.\";\r\n                break;\r\n            case \"LoadingDate\":\r\n                ValidLoadingDate = (value !== \"\");\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date is required.\";\r\n\r\n                if (Errors.LoadingDate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidLoadingDate = (new Date(value) >= new Date());\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date must be later than yesterday.\";\r\n                break;\r\n            case \"LoadingTime\":\r\n                ValidLoadingTime = (value !== \"\");\r\n                Errors.LoadingTime = ValidLoadingTime ? \"\" : \"Loading time is required.\";\r\n                break;\r\n            case \"AcceptedDelay\":\r\n                ValidAcceptedDelay = (value !== \"\");\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay is required.\";\r\n\r\n                if (Errors.AcceptedDelay !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidAcceptedDelay = (value >= 0 && value <= 48);\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay can be in the range of 0 to 48 hours.\";\r\n                break;\r\n            case \"Price\":\r\n                ValidPrice = (value !== \"\");\r\n                Errors.Price = ValidPrice ? \"\" : \"Price is required.\";\r\n\r\n                if (Errors.Price !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPrice = (value > 0.00);\r\n                Errors.Price = ValidPrice ? \"\" : \"Price must be more than $0.00.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCargoType: ValidCargoType,\r\n            ValidCargoWeight: ValidCargoWeight,\r\n            ValidLoadingPlace: ValidLoadingPlace,\r\n            ValidUnloadingPlace: ValidUnloadingPlace,\r\n            ValidLoadingDate: ValidLoadingDate,\r\n            ValidLoadingTime: ValidLoadingTime,\r\n            ValidAcceptedDelay: ValidAcceptedDelay,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidCargoType &&\r\n                        this.state.ValidCargoWeight &&\r\n                        this.state.ValidLoadingPlace &&\r\n                        this.state.ValidUnloadingPlace &&\r\n                        this.state.ValidLoadingDate &&\r\n                        this.state.ValidLoadingTime &&\r\n                        this.state.AcceptedDelay &&\r\n                        this.state.ValidPrice\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newJobOffer = {\r\n            Token: localStorage.Token,\r\n            TripType: this.state.TripType,\r\n            CargoType: this.state.CargoType,\r\n            CargoWeight: this.state.CargoWeight,\r\n            LoadingPlace: this.state.LoadingPlace,\r\n            UnloadingPlace: this.state.UnloadingPlace,\r\n            LoadingDate: this.state.LoadingDate,\r\n            LoadingTime: this.state.LoadingTime,\r\n            EntryExit: this.state.EntryExit,\r\n            Price: this.state.Price,\r\n            AcceptedDelay: this.state.AcceptedDelay,\r\n            JobOfferType: this.state.JobOfferType\r\n        };\r\n\r\n        console.log(\"Going to add Job offer.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addJobOffer(newJobOffer).then(response => {\r\n            if (response.Message === \"Job offer is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div className=\"modal\" id=\"add-job-offer-dialog\"\r\n                    tabIndex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"add.png\" src=\"./images/add.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Add Job Offer</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                                        alt=\"job_offfers.png\" src=\"./images/job_offers.png\" data-source-index=\"2\" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Place</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"LoadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LoadingPlace} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LoadingPlace}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Unloading Place</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"UnloadingPlace\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.UnloadingPlace} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.UnloadingPlace}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Trip Type</label><br />\r\n                                                    <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                        <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                            <span>{this.state.TripType}</span>\r\n                                                            <span className=\"caret\"></span>\r\n                                                        </button>\r\n                                                        <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                            <li><a onClick={() => { this.setState({ TripType: \"One Way\" }); }}>One Way</a></li>\r\n                                                            <li><a onClick={() => { this.setState({ TripType: \"Two Way\" }); }}>Two Way</a></li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Cargo Type</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"text\" name=\"CargoType\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.CargoType} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.CargoType}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Cargo Weight (lbs)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"CargoWeight\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.CargoWeight} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.CargoWeight}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Date</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"LoadingDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LoadingDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LoadingDate}</span>\r\n                                                </div>                                   \r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Time</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"time\" name=\"LoadingTime\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LoadingTime} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LoadingTime}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Accepted Delay (Hours)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" name=\"AcceptedDelay\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.AcceptedDelay} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.AcceptedDelay}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Price (USD)</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"number\" min=\"0.00\" step=\"0.01\" max=\"100.00\" name=\"Price\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={this.state.Price} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Price}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <button type=\"button\" data-toggle=\"button\" className=\"btn btn-toggle-switch\"\r\n                                                        autocomplete=\"off\" aria-pressed=\"false\"\r\n                                                        onClick={() => {\r\n                                                            this.state.JobOfferType = (this.state.JobOfferType === \"Fixed-Price\") ?\r\n                                                                \"Auctionable\" : \"Fixed-Price\";\r\n                                                        }}>\r\n                                                        <span className=\"stateLabel stateLabel-on\">Auctionable Job Offer</span>\r\n                                                        <span className=\"stateLabel stateLabel-off\">Fixed-Price Job Offer</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"checkbox\">\r\n                                                        <label className=\"control-label\">\r\n                                                            <input type=\"checkbox\" name=\"EntryExit\"\r\n                                                                value={this.state.EntryExit} onChange={() => {\r\n                                                                    this.state.EntryExit = this.state.EntryExit ? 0 : 1;\r\n                                                                }}></input>\r\n                                                            <span>Entry/Exit</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>   \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\"\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddJobOfferDialog;","import React, { Component } from \"react\";\r\nimport { getData } from \"../../../TraderFunctions\";\r\nimport JobOfferPackageItem from \"./JobOfferPackageItem\";\r\nimport AddJobOfferDialog from \"./AddJobOfferDialog\";\r\nimport ProgressBar from \"../../../../../controls/ProgressBar\";\r\n\r\nclass JobOffersList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllJobOfferPackages: [],\r\n            JobOfferPackages: [],\r\n            TraderOnJob: false,\r\n            SearchString: \"\",\r\n            Searching: null,\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobOfferPackages\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Job offer packages found.\") {\r\n                    this.setState({\r\n                        AllJobOfferPackages: response.JobOfferPackages,\r\n                        JobOfferPackages: response.JobOfferPackages,\r\n                        TraderOnJob: response.TraderOnJob,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllJobOfferPackages: [],\r\n                        JobOfferPackages: [],\r\n                        TraderOnJob: false,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.SearchString === \"\") {\r\n            this.setState({\r\n                JobOfferPackages: this.state.AllJobOfferPackages\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allJobOfferPackages = this.state.AllJobOfferPackages;\r\n        let filteredJobOfferPackages = [];\r\n        let count = 0;\r\n\r\n        for (let jobOfferPackage of allJobOfferPackages) {\r\n            let jobOffer = jobOfferPackage.JobOffer;\r\n\r\n            if (jobOffer.LoadingPlace.includes(this.state.SearchString) ||\r\n                jobOffer.UnloadingPlace.includes(this.state.SearchString)) {\r\n                filteredJobOfferPackages[count++] = jobOfferPackage;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            JobOfferPackages: filteredJobOfferPackages\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const jobOfferPackages = this.state.JobOfferPackages;\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-hand-holding-usd\"></span>   Job Offers</div>\r\n                            <p className=\"color-light\">Hi There! Want to transport your freight somewhere? Why not create a new job offer now!</p>\r\n                            <div className=\"btn-group\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-primary\"\r\n                                    data-toggle=\"modal\"\r\n                                    data-target=\"#add-job-offer-dialog\">New Job Offer</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <AddJobOfferDialog\r\n                OnOK={() => {\r\n                    this.onComponentUpdated();\r\n                }} />\r\n            {this.state.TraderOnJob ?\r\n                <div class=\"alert alert-danger m-n\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xs-24\">\r\n                                <p><span className=\"fas fa-exclamation-circle m-r-xxxs\"></span>While you are engaged in an On-Going Job, you cannot assign more jobs to drivers. View details in <span className=\"color-default\">On-Going Job</span> tab.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> :\r\n                null}\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Your Job Offers</div>\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search by Places\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={this.state.SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            {(jobOfferPackages.length === 0) ?\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            {this.state.Searching ? <div className=\"col-md-24 text-center\">\r\n                                <div>\r\n                                    <div className=\"type-h3\" style={{ color: \"#008575\" }}>Searching</div>\r\n                                    <ProgressBar />\r\n                                </div>\r\n                            </div> : <div className=\"col-md-24 text-center\">\r\n                                    <h3><span className=\"fas fa-exclamation-triangle\" style={{ color: \"#FFBF15\" }}></span> No job offers found.</h3>\r\n                                </div>}\r\n                        </div>\r\n                    </div>\r\n                </div> : <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {jobOfferPackages.map((jobOfferPackage, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <JobOfferPackageItem Index={index}\r\n                                JobOfferPackage={jobOfferPackage}\r\n                                OnJobOfferUpdated={this.onComponentUpdated}\r\n                                TraderOnJob={this.state.TraderOnJob} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n            \r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobOffersList;","import React, { Component } from \"react\";\r\nimport JobOffersList from \"./JobOffersList.js\";\r\n\r\nclass JobOffers extends Component {\r\n    render() {\r\n        return <section>\r\n            <JobOffersList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobOffers;","import React, { Component } from \"react\";\r\nimport JobContainer from \"../../../../../containers/onGoingJob/JobContainer\";\r\n\r\nclass Job extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const onGoingJob = this.props.OnGoingJob;\r\n        const hasObjections = this.props.HasObjections;\r\n\r\n        let loadingDate = new Date(onGoingJob.LoadingDate);\r\n        loadingDate.setHours((parseInt(onGoingJob.LoadingTime.substring(0, 2))));\r\n        loadingDate.setMinutes(parseInt(onGoingJob.LoadingTime.substring(3, 5)));\r\n        loadingDate.setSeconds(parseInt(onGoingJob.LoadingTime.substring(6)));\r\n\r\n        let JumbotronContent;\r\n\r\n        if (onGoingJob.CompletedByDriver) {\r\n            JumbotronContent = <section>\r\n                <h3><span className=\"fas fa-smile p-r-xxxs\"></span>Driver has Completed the Job</h3>\r\n                <div class=\"type-sh3\">Your Approval is Still Required</div>\r\n            </section>;\r\n        }\r\n        else if (hasObjections) {\r\n            JumbotronContent = <h3><span className=\"fas fa-exclamation p-r-xxxs\"></span>This Job is Terminated.</h3>;\r\n        }\r\n        else {\r\n            let dateDifference = loadingDate - new Date();\r\n            const days = Math.floor(dateDifference / 86400000);\r\n            const hours = Math.floor((dateDifference % 86400000) / 3600000);\r\n            const minutes = Math.round(((dateDifference % 86400000) % 3600000) / 60000);\r\n\r\n            let dayString = (days > 0) ? `${days} Days ` : \"\";\r\n            let hourString = (hours > 0) ? `${hours} Hours ` : \"\";\r\n            let minuteString = (minutes > 0) ? `${minutes} Minutes ` : \"\";\r\n\r\n            let remainingTime = `${dayString}${hourString}${minuteString} Left for Your Driver to Arrive`;\r\n\r\n            if (dateDifference < 0) {\r\n                remainingTime = \"Loading Time has Passed\";\r\n            }\r\n\r\n            JumbotronContent = <section>\r\n                <h3><span className=\"fas fa-clock\"></span>   {remainingTime}</h3>\r\n                <div class=\"type-sh3\">\r\n                    <span className=\"fas fa-tag\"></span>{`   YOU PAID $${onGoingJob.Price}`}</div>\r\n                <div class=\"col-md-12 col-md-offset-6\">\r\n                    <div class=\"type-p3\">{(onGoingJob.AcceptedDelay > 0) ?\r\n                        <span>\r\n                            <span className=\"fas fa-leaf\"></span>\r\n                            <span>{` Driver has a relaxation of ${onGoingJob.AcceptedDelay} Hours.`}</span>\r\n                        </span> :\r\n                        <span>{\"Hoping for the driver to be on time.\"}</span>}\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n\r\n        return <section>\r\n            <div class=\"jumbotron theme-dark\" style={{ background: \"linear-gradient(to right bottom, #008575, #005162)\" }}>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-24 text-center\">\r\n                            {JumbotronContent}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <JobContainer OnGoingJob={onGoingJob} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Job;","import React, { Component } from \"react\";\r\nimport Map from \"../../../../../controls/Map\";\r\n\r\nclass MapTab extends Component {\r\n    render() {\r\n        return <section>\r\n            <div>\r\n                <Map />\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default MapTab;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\nimport { getData, addObjectionReason } from \"../../../../TraderFunctions\";\r\n\r\nclass ReasonsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ObjectionReasons: [],\r\n            AddPressed: false,\r\n            NewReason: \"\",\r\n            ValidNewReason: false,\r\n\r\n            ValidForm: false,\r\n            ProgressRing: null,\r\n\r\n            Errors: {\r\n                NewReason: \"0\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"ObjectionReasons\"\r\n            };\r\n\r\n            this.setState({\r\n                ProgressRing: <ProgressRing />\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Objection reasons found.\") {\r\n                    this.setState({\r\n                        ObjectionReasons: response.ObjectionReasons,\r\n                        ProgressRing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        ObjectionReasons: [],\r\n                        ProgressRing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewReason = this.state.ValidNewReason;\r\n\r\n        switch (field) {\r\n            case \"NewReason\":\r\n                ValidNewReason = (value.length > 0 && value.length <= 50);\r\n                Errors.NewReason = ValidNewReason ? value.length : \"Too long...\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewReason: ValidNewReason\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidNewReason\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ProgressRing: <ProgressRing />\r\n        });\r\n\r\n        const newObjectionReason = {\r\n            Token: localStorage.Token,\r\n            Reason: this.state.NewReason\r\n        };\r\n\r\n        console.log(\"Going to add Objection reason...\");\r\n\r\n        await addObjectionReason(newObjectionReason).then(response => {\r\n            if (response.Message === \"Objection reason is added.\") {\r\n                let objectionReasons = this.state.ObjectionReasons;\r\n                let errors = this.state.Errors;\r\n\r\n                objectionReasons.push(response.ObjectionReason);\r\n                errors.NewReason = \"0\";\r\n\r\n                this.setState({\r\n                    AddPressed: false,\r\n                    ObjectionReasons: objectionReasons,\r\n                    Errors: errors,\r\n                    NewReason: \"\"\r\n                });\r\n            }\r\n\r\n            this.setState({\r\n                ProgressRing: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const objectionReasons = this.state.ObjectionReasons;\r\n\r\n        return <section>\r\n            {this.state.ProgressRing}\r\n            <div class=\"entity-list entity-list-expandable\">\r\n                <div class=\"entity-list entity-list-add-item-button\">\r\n                    <a class={this.state.AddPressed ? \"entity-list-item active\" : \"entity-list-item\"}>\r\n                        <div class=\"item-icon\" onClick={() => {\r\n                            this.state.AddPressed ?\r\n                                this.setState({ AddPressed: false }) :\r\n                                this.setState({ AddPressed: true });\r\n                        }}>\r\n                            <span class=\"glyph glyph-add\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Add a Reason</div>\r\n                            <div class=\"content-text-secondary\" style={(this.state.Errors.NewReason === \"Too long...\") ? { color: \"#D75A4A\" } : null}>{this.state.Errors.NewReason}</div>\r\n                        </div>\r\n                        <div class=\"item-content-expanded\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <input type=\"text\" className=\"form-control\" name=\"NewReason\" autocomplete=\"off\"\r\n                                    value={this.state.NewReason} onChange={this.onChange} />\r\n                                <input type=\"submit\" value=\"Add\" className=\"btn btn-secondary\" disabled={!this.state.ValidForm} />\r\n                            </form>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                {objectionReasons.map((objectionReason, index) => {\r\n                    return <div key={index} class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-thumbs-down\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <button type=\"button\" class=\"btn btn-secondary\" style={{ margin: \"0px\", minWidth: \"0px\" }}\r\n                                onClick={() => { this.props.OnReasonSelected(objectionReason.Reason); }}>Select</button>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">{`${index + 1}.`}</div>\r\n                            <div class=\"content-text-secondary\">{objectionReason.Reason}</div>\r\n                        </div>\r\n                    </div>;\r\n                })}\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ReasonsList;","import React, { Component } from \"react\";\r\nimport ReasonsList from \"./ReasonsList\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { addJobObjection } from \"../../../../TraderFunctions\";\r\n\r\nclass AddObjectionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Reason: \"Select from the list.\",\r\n            Comment: \"\",\r\n\r\n            ValidReason: false,\r\n            ValidComment: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                Comment: \"0\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidComment = this.state.ValidComment;\r\n\r\n        switch (field) {\r\n            case \"Comment\":\r\n                ValidComment = (value !== \"\");\r\n                Errors.Comment = ValidComment ? \"\" : \"Comment is required\";\r\n\r\n                if (Errors.Comment !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidComment = (value.length <= 200);\r\n                Errors.Comment = ValidComment ? value.length : \"Too long...\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidComment: ValidComment\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidReason && this.state.ValidComment\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const newJobObjection = {\r\n            Token: localStorage.Token,\r\n            OnGoingJobID: this.props.OnGoingJobID,\r\n            Reason: this.state.Reason,\r\n            Comment: this.state.Comment\r\n        };\r\n\r\n        console.log(\"Going to add job objection...\");\r\n\r\n        await addJobObjection(newJobObjection).then(response => {\r\n            if (response.Message === \"Job objection is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"add-objection-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}\r\n                                    style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Add an Objection</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label>Reason</label>\r\n                                    <input type=\"text\" class=\"form-control\" name=\"Reason\" style={{ maxWidth: \"100%\" }} readonly\r\n                                        value={this.state.Reason} />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label>Comment</label>\r\n                                    <textarea rows=\"4\" class=\"form-control\" style={{ maxWidth: \"100%\" }} name=\"Comment\"\r\n                                        value={this.state.Comment} onChange={this.onChange}></textarea>\r\n                                    <span className=\"text-danger\">{this.state.Errors.Comment}</span>\r\n                                </div>\r\n                                <div style={{ textAlign: \"right\" }}>\r\n                                    <input type=\"submit\" value=\"Add Objection\" className=\"btn btn-primary\" style={{ margin: \"0px\" }} disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                            <br/>\r\n                            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                            <div className=\"type-h4\" style={{ color: \"#008575\", padding: \"10px\", textAlign: \"right\" }}>{\"   Reasons\"}\r\n                                <i className=\"fas fa-ellipsis-v\"></i>\r\n                            </div>\r\n                            <ReasonsList ObjectionReasons={this.props.ObjectionReasons} OnReasonSelected={reason => {\r\n                                this.setState({\r\n                                    Reason: reason,\r\n                                    ValidReason: true\r\n                                }, () => {\r\n                                    this.setState({\r\n                                        ValidForm: this.state.ValidReason && this.state.ValidComment\r\n                                    });\r\n                                });\r\n                            }} />                           \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddObjectionDialog;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport AddObjectionDialog from \"./AddObjectionDialog\";\r\nimport { getData } from \"../../../../TraderFunctions\";\r\nimport JobObjectionContainer from \"../../../../../../containers/onGoingJob/JobObjectionContainer\";\r\n\r\nclass Objections extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobObjectionPackages: [],\r\n            Searching: false,\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobObjectionPackages\",\r\n                Params: {\r\n                    OnGoingJobID: this.props.OnGoingJobID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job objection packages found.\") {\r\n                    this.setState({\r\n                        JobObjectionPackages: response.JobObjectionPackages,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobObjectionPackages: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const jobObjectionPackages = this.state.JobObjectionPackages;\r\n\r\n        return <section>\r\n            <div class=\"page-header back-color-gradient\">\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-thumbs-down\"></span>   Job Objections</div>\r\n                            <p className=\"color-light\">Objections on this job, either by you or your driver, will terminate the job.</p>\r\n                            <div className=\"btn-group\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-primary\"\r\n                                    data-toggle=\"modal\"\r\n                                    data-target=\"#add-objection-dialog\">Add Objection</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <AddObjectionDialog OnGoingJobID={this.props.OnGoingJobID}\r\n                OnOK={async () => { await this.onComponentUpdated() }} />\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Job Objections</div>\r\n            {(jobObjectionPackages.length === 0) ?\r\n                <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor=\"job objctions\" /> : <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {jobObjectionPackages.map((jobObjectionPackage, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <JobObjectionContainer Index={index}\r\n                                JobObjectionPackage={jobObjectionPackage} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default Objections;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { approveJob } from \"../../../TraderFunctions\";\r\n\r\nclass ApproveJobDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false\r\n        };\r\n\r\n        this.onApprove = this.onApprove.bind(this);\r\n    }\r\n\r\n    onApprove = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const approvedJob = {\r\n            Token: localStorage.Token,\r\n        }\r\n\r\n        console.log(\"Going to approve the job...\");\r\n\r\n        await approveJob(approvedJob).then(response => {\r\n            if (response.Message === \"Job is approved.\") {\r\n                this.props.OnOK();\r\n                return;\r\n            }\r\n\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n        });\r\n\r\n    };\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"approve-job-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h2\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Approve Completion</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div class=\"jumbotron\">\r\n                                <div class=\"container\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-24\">\r\n                                            <img alt=\"stamp.png\" src=\"./images/stamp.png\" height=\"100\" />\r\n                                            <div class=\"type-h3\">Your Driver has Finished the Job</div>\r\n                                            <div class=\"type-sh3\">We Hope Your Cargo is Delivered</div>\r\n                                            <p><span class=\"color-default\">Note:</span> Report or Approve the Completion! After approving completion, you can view this job in your <span class=\"color-default\">Completed Jobs</span> tab. You'll also be able to rate and review this driver from there.</p>\r\n                                            <div class=\"text-right\">\r\n                                                <button class=\"btn btn-primary\" onClick={this.onApprove}>Approve</button>\r\n                                                <button class=\"btn btn-secondary\">Report</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ApproveJobDialog;","import React, { Component } from \"react\";\r\nimport ApproveJobDialog from \"./ApproveJobDialog\";\r\n\r\nclass OnGoingJobOptions extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const hasObjections = this.props.HasObjections;\r\n        const completedByDriver = this.props.CompletedByDriver;\r\n        const completedByTrader = this.props.CompletedByTrader;\r\n\r\n        return hasObjections ?\r\n            <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"col-md-24\">\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Discard the Job?</div>\r\n                            <div className=\"type-sh3\">This will refund your amount, But a fraction of it will be deducted.</div>\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                            <button className=\"btn btn-danger\">Discard</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section> :\r\n            <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"col-md-24\">\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Job Completion Status</div>\r\n                            <div className=\"type-sh4\">You'll be able to approve this job after your driver completes the job.</div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-24\">\r\n                                <div className=\"entity-list theme-alt\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-certificate\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Completed By Driver?</div>\r\n                                            <div className=\"content-text-secondary\">{completedByDriver ?\r\n                                                <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-certificate\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Approved By You?</div>\r\n                                            <div className=\"content-text-secondary\">{completedByTrader ?\r\n                                                <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                            {completedByDriver ? <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#approve-job-dialog\">Approve</button> : null}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ApproveJobDialog OnOK={this.props.OnJobApproved} />\r\n            </section>;\r\n             \r\n    }\r\n};\r\n\r\nexport default OnGoingJobOptions;","import React, { Component } from \"react\";\r\nimport { getData } from \"../../../TraderFunctions\";\r\nimport ProgressBar from \"../../../../../controls/ProgressBar\";\r\nimport Job from \"./Job\";\r\nimport DriverContainer from \"../../../../../containers/driver/DriverContainer\";\r\nimport TruckContainer from \"../../../../../containers/truck/TruckContainer\";\r\nimport MapTab from \"./MapTab\";\r\nimport Objections from \"./objections/Objections\";\r\nimport Alert from \"../../../../../controls/Alert\";\r\nimport OnGoingJobOptions from \"./OnGoingJobOptions\";\r\n\r\nclass OnGoingJob extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            OnGoingJob: null,\r\n            HasObjections: false,\r\n            Loading: false\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n\r\n        this.interval = setInterval(async () => {\r\n            if (localStorage.Token) {\r\n                let request = {\r\n                    Token: localStorage.Token,\r\n                    Get: \"OnGoingJob\"\r\n                };\r\n\r\n                await getData(request).then(response => {\r\n                    if (response.Message === \"On-going job found.\") {\r\n                        console.log(response);\r\n                        this.setState({\r\n                            OnGoingJob: response.OnGoingJob,\r\n                            HasObjections: response.HasObjection,\r\n                            Loading: false,\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            OnGoingJob: null,\r\n                            HasObjections: false,\r\n                            Loading: false\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        }, 15000);\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"OnGoingJob\"\r\n            };\r\n\r\n            this.setState({\r\n                Loading: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"On-going job found.\") {\r\n                    this.setState({\r\n                        OnGoingJob: response.OnGoingJob,\r\n                        HasObjections: response.HasObjections,\r\n                        Loading: false\r\n                    });\r\n                }\r\n                else {\r\n                    clearInterval(this.interval);\r\n\r\n                    this.setState({\r\n                        OnGoingJob: null,\r\n                        HasObjections: false,\r\n                        Loading: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    UNSAFE_componentWillMount() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.Loading || !this.state.OnGoingJob) {\r\n            return <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#202020\" }}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                alt=\"on_going_jobs.png\" src=\"./images/on_going_jobs.png\" data-source-index=\"2\" />\r\n                        </div>\r\n                        <div className=\"col-md-12 col-md-pull-12\">\r\n                            <div className=\"type-h3\">On-Going Job</div>\r\n                            {this.state.Loading ?\r\n                                <div>\r\n                                    <div class=\"type-sh3\" style={{ color: \"#008575\" }}>Searhcing</div>\r\n                                    <ProgressBar />\r\n                                </div> :\r\n                                <div className=\"type-sh3\">Couldn't Find Your Job...</div>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n        }\r\n        else {\r\n            const onGoingJob = this.state.OnGoingJob;\r\n            const hasObjections = this.state.HasObjections;\r\n\r\n            return <section>\r\n                <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                    <li role=\"presentation\" className=\"active\">\r\n                        <a href=\"#job-tab\" aria-controls=\"job-tab\" role=\"tab\" data-toggle=\"tab\">Job</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#driver-tab\" aria-controls=\"driver-tab\" role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={async () => { await this.RefreshDriverContainer(); }}>Driver</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#truck-tab\" aria-controls=\"truck-tab\" role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={async () => { await this.RefreshTruckContainer(); }}>Truck</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#map-tab\" aria-controls=\"map-tab\" role=\"tab\" data-toggle=\"tab\">Map</a>\r\n                    </li>\r\n                    {onGoingJob.CompletedByDriver ?\r\n                        null :\r\n                        <li role=\"presentation\">\r\n                            <a href=\"#objections-tab\" aria-controls=\"objections-tab\" role=\"tab\" data-toggle=\"tab\">Objections</a>\r\n                        </li>}\r\n                </ul>\r\n\r\n                {hasObjections ?\r\n                    <Alert Type=\"danger\"\r\n                        Message=\"This job has objections, and it cannot be completed now. For more information, please tap on Objections tab.\" /> :\r\n                    null}\r\n                <div className=\"tab-content\">\r\n\r\n                    <div role=\"tabpanel\" className=\"tab-pane active\" id=\"job-tab\">\r\n                        <Job OnGoingJob={onGoingJob} HasObjections={hasObjections} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"driver-tab\">\r\n                        <DriverContainer Refresh={refresh => { this.RefreshDriverContainer = refresh; }} DriverID={onGoingJob.DriverID} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"truck-tab\">\r\n                        <TruckContainer Refresh={refresh => { this.RefreshTruckContainer = refresh; }} DriverID={onGoingJob.DriverID} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"map-tab\">\r\n                        <MapTab />\r\n                    </div>\r\n                    {onGoingJob.CompletedByDriver ? \r\n                        null :\r\n                        <div role=\"tabpanel\" className=\"tab-pane\" id=\"objections-tab\">\r\n                            <Objections OnGoingJobID={onGoingJob.OnGoingJobID} />\r\n                        </div>}\r\n                </div>\r\n                <OnGoingJobOptions HasObjections={hasObjections}\r\n                    CompletedByDriver={onGoingJob.CompletedByDriver}\r\n                    CompletedByTrader={onGoingJob.CompletedByTrader}\r\n                    OnJobApproved={this.onComponentUpdated} />\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default OnGoingJob;","import React, { Component } from \"react\";\r\n\r\nclass InteractiveRating extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Rating: 0\r\n        };\r\n\r\n        this.onRate = this.onRate.bind(this);\r\n    }\r\n\r\n    onRate = rating => {\r\n        this.props.OnRated(rating);\r\n\r\n        this.setState({\r\n            Rating: rating\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return <section>\r\n            <div class=\"rating\">\r\n                <div class=\"rating-stars\">\r\n                    <ul class=\"rating-stars-background\">\r\n                        <li><i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li>\r\n                    </ul>\r\n                    <ul class=\"rating-stars-value\" style={{ width: `${this.state.Rating}%` }}>\r\n                        <li><i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li>\r\n                    </ul>\r\n                    <div class=\"rating-stars-input\">\r\n                        <button class=\"rating-btn\" title=\"1\" onClick={() => { this.onRate(20); }}><i class=\"glyph glyph-star\"></i></button>\r\n                        <button class=\"rating-btn\" title=\"2\" onClick={() => { this.onRate(40); }}><i class=\"glyph glyph-star\"></i></button>\r\n                        <button class=\"rating-btn\" title=\"3\" onClick={() => { this.onRate(60); }}><i class=\"glyph glyph-star\"></i></button>\r\n                        <button class=\"rating-btn\" title=\"4\" onClick={() => { this.onRate(80); }}><i class=\"glyph glyph-star\"></i></button>\r\n                        <button class=\"rating-btn\" title=\"5\" onClick={() => { this.onRate(100); }}><i class=\"glyph glyph-star\"></i></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default InteractiveRating;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport InteractiveRating from \"../../../../../controls/InteractiveRating\";\r\nimport { addDriverReview } from \"../../../TraderFunctions\";\r\n\r\nclass ReviewDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Rating: 0,\r\n            Review: \"\",\r\n\r\n            ValidRating: false,\r\n            ValidReview: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Review: \"0\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidReview = this.state.ValidReview;\r\n\r\n        switch (field) {\r\n            case \"Review\":\r\n                ValidReview = (value !== \"\");\r\n                Errors.Review = ValidReview ? \"\" : \"Review is required\";\r\n\r\n                if (Errors.Review !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidReview = (value.length <= 200);\r\n                Errors.Review = ValidReview ? value.length : \"Too long...\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidReview: ValidReview\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidRating && this.state.ValidReview\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newDriverReview = {\r\n            Token: localStorage.Token,\r\n            CompletedJobID: this.props.CompletedJobID,\r\n            Rating: this.state.Rating,\r\n            Review: this.state.Review\r\n        };\r\n\r\n        console.log(\"Going to add driver review...\");\r\n\r\n        await addDriverReview(newDriverReview).then(response => {\r\n            if (response.Message === \"Driver review is added.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.cancelButton.click();\r\n                this.props.OnOK(response.DriverReview);\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`review-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}\r\n                                    style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h3 color-default p-t-n\">Rate and Review</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label>Rate this Driver</label>\r\n                                    <InteractiveRating OnRated={rating => {\r\n                                        this.setState({\r\n                                            Rating: rating,\r\n                                            ValidRating: true\r\n                                        }, () => {\r\n                                            this.setState({\r\n                                                ValidForm: this.state.ValidRating && this.state.ValidReview\r\n                                            });\r\n                                        });\r\n                                    }} />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label>Review</label>\r\n                                    <textarea rows=\"6\" class=\"form-control\" name=\"Review\" style={{  }}\r\n                                        value={this.state.Review} onChange={this.onChange}></textarea>\r\n                                    <span className={(this.state.Errors.Review === \"Too long...\" ||\r\n                                        this.state.Errors.Review === \"Review is required\") ? \"text-danger\" : \"text-accent\"}>{this.state.Errors.Review}</span>\r\n                                </div>\r\n                                <div className=\"text-right\">\r\n                                    <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary m-n\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>                        \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ReviewDialog;","import React, { Component } from \"react\";\r\nimport CompletedJobContainer from \"../../../../../containers/completedJob/CompletedJobContainer\";\r\nimport DriverContainer from \"../../../../../containers/driver/DriverContainer\";\r\nimport ReviewDialog from \"./ReviewDialog\";\r\nimport Rating from \"../../../../../controls/Rating\";\r\n\r\nclass CompletedJobPackageListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const completedJob = this.props.CompletedJobPackage.CompletedJob;\r\n        const driverReview = this.props.CompletedJobPackage.DriverReview;\r\n\r\n        return <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n            <CompletedJobContainer Index={index} CompletedJob={completedJob} />\r\n\r\n            {driverReview ?\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"col-md-24\">\r\n                            <div className=\"type-h3 color-default p-t-n\">Your Given Ratings</div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-24\">\r\n                                <div className=\"entity-list theme-alt\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-star\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Rating</div>\r\n                                            <div className=\"content-text-secondary\"><Rating Rating={driverReview.Rating} Color=\"color-alt\" Size=\"rating-small\" /></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-pencil-alt\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Review</div>\r\n                                            <div className=\"content-text-secondary\">{driverReview.Review}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> :\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"col-md-24\">\r\n                            <div className=\"type-h3 color-default p-t-n\">\r\n                                <span className=\"fas fa-star m-r-xxs\"></span>Rate and Review the Driver</div>\r\n                            <div className=\"type-sh3\">Your reviews means a lot to us and the driver too.</div>\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                            <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target={`#review-dialog-${index}`}>Write a Review</button>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n\r\n            <ReviewDialog DialogID={index}\r\n                CompletedJobID={completedJob.CompletedJobID}\r\n                OnOK={this.props.OnReviewAdded}/>\r\n\r\n            <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#completed-job-${index}`}\r\n                onClick={async () => { await this.RefreshDriverContainer(); }}>\r\n                <div className=\"type-h4\" style={{ color: \"#008575\", padding: \"10px\", textAlign: \"right\" }}>Driver Details\r\n                    <i className=\"fas fa-ellipsis-v\"></i>\r\n                    <i class=\"glyph glyph-add\"></i>\r\n                    <i class=\"glyph glyph-remove\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`completed-job-${index}`}>\r\n                <DriverContainer Refresh={refresh => { this.RefreshDriverContainer = refresh; }} DriverID={completedJob.DriverID} />\r\n            </div>\r\n        </li>;\r\n    }\r\n};\r\n\r\nexport default CompletedJobPackageListItem;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport CompletedJobPackageListItem from \"./CompletedJobPackageListItem\";\r\nimport { getData } from \"../../../TraderFunctions\";\r\n\r\nclass CompletedJobsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllCompletedJobPackages: [],\r\n            CompletedJobPackages: [],\r\n            SearchDate: \"\",\r\n            Searching: false,\r\n        }\r\n\r\n        this.onLoad = this.onLoad.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onLoad();\r\n    }\r\n\r\n    onLoad = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"CompletedJobPackages\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Completed job packages found.\") {\r\n                    this.setState({\r\n                        AllCompletedJobPackages: response.CompletedJobPackages,\r\n                        CompletedJobPackages: response.CompletedJobPackages,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllCompletedJobPackages: [],\r\n                        CompletedJobPackages: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.SearchDate === \"\") {\r\n            this.setState({\r\n                CompletedJobPackages: this.state.AllCompletedJobPackages\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allCompletedJobPackages = this.state.AllCompletedJobPackages;\r\n        let filteredCompletedJobPackages = [];\r\n        let count = 0;\r\n        let searchDate = this.state.SearchDate;\r\n\r\n        for (let completedJobPackage of allCompletedJobPackages) {\r\n            let completedJob = completedJobPackage.CompletedJob;\r\n\r\n            if ((new Date(completedJob.LoadingDate).getTime() === new Date(searchDate).getTime()) ||\r\n                (new Date(completedJob.Created).getTime() === new Date(searchDate).getTime())) {\r\n                filteredCompletedJobPackages[count++] = completedJobPackage;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            CompletedJobPackages: filteredCompletedJobPackages\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const completedJobPackages = this.state.CompletedJobPackages;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-check m-r-xxs\"></span>Completed Jobs</div>\r\n                            <p className=\"color-light\">Hi There! Want to transport your freight somewhere? Why not create a new job offer now!</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Your Completed Offers</div>\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\" name=\"SearchDate\" className=\"form-control\" placeholder=\"Search by Date\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={this.state.SearchDate} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div> \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            {(completedJobPackages.length === 0) ?\r\n                <SearchingContainer Searching={this.state.Searching}\r\n                    SearchingFor=\"completed jobs\" /> :\r\n                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {completedJobPackages.map((completedJobPackage, index) => {\r\n                        return <CompletedJobPackageListItem key={index}\r\n                            Index={index} CompletedJobPackage={completedJobPackage}\r\n                            OnReviewAdded={driverReview => {\r\n                                let completedJobPackages = this.state.CompletedJobPackages;\r\n\r\n                                for (let jobPackage of completedJobPackages) {\r\n                                    if (jobPackage === completedJobPackage) {\r\n                                        jobPackage.DriverReview = driverReview;\r\n                                        break;\r\n                                    }\r\n                                }\r\n\r\n                                this.setState({\r\n                                    CompletedJobPackages: completedJobPackages\r\n                                });\r\n                            }} />;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default CompletedJobsList;","import React, { Component } from \"react\";\r\nimport CompletedJobsList from \"./CompletedJobsList\";\r\n\r\nclass CompletedJobs extends Component {\r\n   render() {\r\n       return <section>\r\n           <CompletedJobsList />\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default CompletedJobs;","import React, { Component } from \"react\";\r\nimport JobRequests from \"./jobRequests/JobRequests.js\"; \r\nimport JobOffers from \"./jobOffers/JobOffers.js\";\r\nimport OnGoingJob from \"./onGoingJob/OnGoingJob.js\";\r\nimport CompletedJobs from \"./completedJobs/CompletedJobs\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Jobs extends Component {\r\n    render() {\r\n        return (\r\n            <section>\r\n                <PageHeading Heading=\"JOBS\" />\r\n                <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                    padding: \"10px\",\r\n                    backgroundColor: \"#3A3A3C\",\r\n                    width: \"100%\",\r\n                    margin: \"0px\",\r\n                }}>\r\n                    <li role=\"presentation\" className=\"active\">\r\n                        <a href=\"#job-requests\" aria-controls=\"job-requests\" role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={async () => { await this.RefreshJobRequests(); }}>Job Requests</a>\r\n                    </li>\r\n                    <li role=\"presentation\"><a href=\"#job-offers\" aria-controls=\"job-offers\" role=\"tab\" data-toggle=\"tab\">Job Offers</a></li>\r\n                    <li role=\"presentation\"><a href=\"#on-going-job\" aria-controls=\"on-going-job\" role=\"tab\" data-toggle=\"tab\">On-Going Job</a></li>\r\n                    <li role=\"presentation\"><a href=\"#completed-jobs\" aria-controls=\"completed-jobs\" role=\"tab\" data-toggle=\"tab\">Completed Jobs</a></li>\r\n                </ul>\r\n                <div className=\"tab-content\">\r\n                    <div role=\"tabpanel\" className=\"tab-pane active\" id=\"job-requests\">\r\n                        <JobRequests Refresh={refresh => { this.RefreshJobRequests = refresh; }} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"job-offers\">\r\n                        <JobOffers />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"on-going-job\">\r\n                        <OnGoingJob />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"completed-jobs\">\r\n                        <CompletedJobs />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Jobs;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { getData, generalSettings } from \"../../TraderFunctions\";\r\n\r\nclass GeneralSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\",\r\n\r\n            ValidFirstName: true,\r\n            ValidLastName: true,\r\n            ValidPhoneNumber: true,\r\n\r\n            ValidForm: false,\r\n            SettingsSaved: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                PhoneNumber: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Trader\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader found.\") {\r\n                    let trader = response.Trader;\r\n\r\n                    this.setState({\r\n                        FirstName: trader.FirstName,\r\n                        LastName: trader.LastName,\r\n                        Address: trader.Address,\r\n                        PhoneNumber: trader.PhoneNumber,\r\n                        Gender: trader.Gender,\r\n                        Nationality: trader.Nationality,\r\n                        DateOfBirth: trader.DateOfBirth\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        FirstName: \"\",\r\n                        LastName: \"\",\r\n                        Address: \"\",\r\n                        PhoneNumber: \"\",\r\n                        Gender: \"\",\r\n                        Nationality: \"\",\r\n                        DateOfBirth: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFirstName = this.state.ValidFirstName;\r\n        let ValidLastName = this.state.ValidLastName;\r\n        let ValidPhoneNumber = this.state.ValidPhoneNumber;\r\n\r\n        switch (field) {\r\n            case \"FirstName\":\r\n                ValidFirstName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.FirstName = ValidFirstName ? \"\" : \"First name is invalid.\";\r\n                break;\r\n            case \"LastName\":\r\n                ValidLastName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.LastName = ValidLastName ? \"\" : \"Last name is invalid.\";\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = value.match(/^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/);\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFirstName: ValidFirstName,\r\n            ValidLastName: ValidLastName,\r\n            ValidPhoneNumber: ValidPhoneNumber,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidFirstName &&\r\n                    this.state.ValidLastName &&\r\n                    this.state.ValidPhoneNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedTrader = {\r\n            Token: localStorage.Token,\r\n            FirstName: this.state.FirstName,\r\n            LastName: this.state.LastName,\r\n            Address: this.state.Address,\r\n            PhoneNumber: this.state.PhoneNumber,\r\n            Gender: this.state.Gender,\r\n            Nationality: this.state.Nationality,\r\n            DateOfBirth: this.state.DateOfBirth,\r\n        }\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await generalSettings(updatedTrader).then(response => {\r\n            if (response.Message === \"Trader is updated.\") {\r\n                this.forceUpdate();\r\n                this.props.OnSettingsSaved();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>General Settings</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-comment\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"FirstName\" autoComplete=\"off\"\r\n                                        value={this.state.FirstName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">First Name</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"FirstName\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-comment\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"LastName\" autoComplete=\"off\"\r\n                                        value={this.state.LastName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Last Name</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"LastName\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-birthday-cake\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\" className=\"form-control\" name=\"DateOfBirth\" autoComplete=\"off\"\r\n                                        value={this.state.DateOfBirth} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Date of Birth</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className={this.state.Gender === \"Male\" ? \"fas fa-male\" : \"fas fa-female\"}></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"dropdown\" style={{ width: \"193px\", maxWidth: \"296px\", }}>\r\n                                    <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                        aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                        <span>{this.state.Gender}</span>\r\n                                        <span className=\"caret\"></span>\r\n                                    </button>\r\n                                    <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                        <li><a onClick={() => { this.setState({ Gender: \"Male\" }); this.validateField(\"\", \"\"); }}>Male</a></li>\r\n                                        <li><a onClick={() => { this.setState({ Gender: \"Female\" }); this.validateField(\"\", \"\"); }}>Female</a></li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Gender</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-flag\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"Nationality\" autoComplete=\"off\"\r\n                                        value={this.state.Nationality} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Nationality</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-phone\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autoComplete=\"off\"\r\n                                        placeholder=\"+XXXXXXXXXXXX\" value={this.state.PhoneNumber} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Phone Number</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"PhoneNumber\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-location-arrow\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"Address\" autoComplete=\"off\"\r\n                                        value={this.state.Address} onChange={this.onChange} style={{ width: \"393px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Address</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default GeneralSettings;","import React, { Component } from \"react\";\r\n\r\nclass Payments extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"jumbotron\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"tools.png\" src=\"./images/tools.png\" style={{ borderRadius: \"50%\" }} data-source-index=\"1\" />\r\n                            </div>\r\n                            <div class=\"col-md-12 col-md-pull-12\">\r\n                                <div class=\"type-h3\" style={{ color: \"#008575\", }}>\r\n                                    Payments\r\n                    </div>\r\n                                <div class=\"type-sh3\" style={{ color: \"#949496\", }}>\r\n                                    Under-Construction\r\n                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Payments;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { usernameAndEmailSettings } from \"../../TraderFunctions.js\";\r\n\r\nclass CodeConfirmationDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ConfirmCode: \"\",\r\n\r\n            ValidConfirmCode: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                ConfirmCode: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidConfirmCode = this.state.ValidConfirmCode;\r\n\r\n        ValidConfirmCode = value === this.props.Code;\r\n        Errors.ConfirmCode = ValidConfirmCode ? \"\" : \"Invalid code.\";\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidConfirmCode: ValidConfirmCode,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidConfirmCode\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedTrader = {\r\n            Token: localStorage.Token,\r\n            Username: this.props.Username,\r\n            Email: this.props.Email,\r\n        };\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await usernameAndEmailSettings(updatedTrader).then(response => {\r\n            if (response.Message === \"Trader is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div\r\n                    className=\"modal in\" id=\"code-confirmation-dialog\" tabIndex=\"-1\"\r\n                    role=\"dialog\" aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\"\r\n                    style={{ display: \"block\" }}>\r\n                    <div className=\"modal-dialog\">\r\n                        {this.state.Preloader}\r\n                        <div className=\"modal-dialog\">\r\n                            <div className=\"modal-content\">\r\n                                <section>\r\n                                    <form noValidate onSubmit={this.onSubmit}>\r\n                                        <div className=\"modal-header\">\r\n                                            <img alt=\"passcode.png\" src=\"./images/passcode.png\" height=\"60\" />\r\n                                            <div className=\"type-h3\">Email Confirmation</div>\r\n                                            <div className=\"type-sh3\">We delivered a confirmation code to your email.</div>\r\n                                        </div>\r\n                                        <div className=\"modal-body\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-12\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"control-label\">Confirmation Code</label>\r\n                                                        <input type=\"text\" name=\"ConfirmCode\" className=\"form-control\" autocomplete=\"off\"\r\n                                                            value={this.state.ConfirmCode} onChange={this.onChange} />\r\n                                                        <span className=\"text-danger\">{this.state.Errors.ConfirmCode}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"modal-footer\">\r\n                                            <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                                ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                            <input type=\"submit\" value=\"Confirm\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </form>\r\n                                </section>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default CodeConfirmationDialog;","import React, { Component } from \"react\";\r\nimport CodeConfirmationDialog from \"./CodeConfirmationDialog.js\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport {\r\n    getData,\r\n    validateUsername,\r\n    validateEmail,\r\n    sendCode,\r\n    usernameAndEmailSettings\r\n} from \"../../TraderFunctions\";\r\n\r\nclass UsernameAndEmailSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            NewUsername: \"\",\r\n\r\n            Email: \"\",\r\n            NewEmail: \"\",\r\n\r\n            Code: \"\",\r\n\r\n            ValidNewUsername: true,\r\n            ValidNewEmail: true,\r\n\r\n            ValidForm: false,\r\n            CodeConfirmationDialog: null,\r\n\r\n            Errors: {\r\n                NewUsername: \"\",\r\n                NewEmail: \"\",\r\n            },\r\n\r\n            CodeConfirmation: \"\",\r\n            Preloader: null\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Trader\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader found.\") {\r\n                    let trader = response.Trader;\r\n\r\n                    this.setState({\r\n                        Username: trader.Username,\r\n                        NewUsername: trader.Username,\r\n                        Email: trader.Email,\r\n                        NewEmail: trader.Email\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Username: \"\",\r\n                        NewUsername: \"\",\r\n                        Email: \"\",\r\n                        NewEmail: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewUsername = this.state.ValidNewUsername;\r\n        let ValidNewEmail = this.state.ValidNewEmail;\r\n        \r\n        switch (field) {\r\n            case \"NewUsername\":\r\n                ValidNewUsername = (value !== \"\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is required.\";\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value.match(/^[a-z0-9]+$/i));\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is invalid.\";\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value !== \"Username is unavailable.\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is unavailable.\";\r\n                break;\r\n            case \"NewEmail\":\r\n                ValidNewEmail = (value !== \"\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is required.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i));\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is invalid.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value !== \"Email is already taken.\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is already taken.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewUsername: ValidNewUsername,\r\n            ValidNewEmail: ValidNewEmail,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidNewUsername &&\r\n                    this.state.ValidNewEmail\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername === this.state.Username &&\r\n            this.state.NewEmail === this.state.Email) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername !== this.state.Username) {\r\n            const response = await validateUsername(this.state.NewUsername);\r\n\r\n            if (response.Message === \"Username is unavailable.\") {\r\n                this.validateField(\"NewUsername\", response.Message);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail !== this.state.Email) {\r\n            const response = await validateEmail(this.state.NewEmail);\r\n            if (response.Message === \"Email is already taken.\") {\r\n                this.validateField(\"NewEmail\", response.Message);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail === this.state.Email) {\r\n            const updatedTrader = {\r\n                Token: localStorage.Token,\r\n                Username: this.state.NewUsername,\r\n                Email: this.state.NewEmail,\r\n            };\r\n\r\n            this.setState({\r\n                Preloader: <Preloader />\r\n            });\r\n\r\n            console.log(\"Going to update username.\");\r\n            await usernameAndEmailSettings(updatedTrader).then(response => {  \r\n                console.log(response);\r\n                if (response.Message === \"Trader is updated.\") {\r\n                    \r\n                    this.props.OnSettingsSaved();\r\n                }\r\n\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            console.log(\"Going to send code...\");\r\n            await sendCode(this.state.NewEmail).then(response => {\r\n                console.log(response);\r\n                if (response.Message === \"Code sent.\") {\r\n                    this.setState({\r\n                        CodeConfirmationDialog: <CodeConfirmationDialog\r\n                            Code={response.Code}\r\n                            Username={this.state.NewUsername}\r\n                            Email={this.state.NewEmail}\r\n                            OnCancel={() => {\r\n                                this.setState({\r\n                                    CodeConfirmationDialog: null,\r\n                                });\r\n                            }}\r\n                            OnOK={cancelButton => {\r\n                                cancelButton.click();\r\n                                this.props.OnSettingsSaved();\r\n                            }} />\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Username and Emails</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-at\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"NewUsername\" className=\"form-control\" autoComplete=\"off\"\r\n                                        value={this.state.NewUsername} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Username</div>\r\n                                <div className=\"content-text-secondary text-danger\">{this.state.Errors[\"NewUsername\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-envelope\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"email\" name=\"NewEmail\" className=\"form-control\" placeholder=\"someone@example.com\" autoComplete=\"off\"\r\n                                        value={this.state.NewEmail} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Email</div>\r\n                                <div className=\"content-text-secondary text-danger\">{this.state.Errors[\"NewEmail\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n                {this.state.CodeConfirmationDialog}\r\n            </div> \r\n        );\r\n    }\r\n};\r\n\r\nexport default UsernameAndEmailSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { validatePassword, passwordSettings } from \"../../TraderFunctions\";\r\n\r\nclass PasswordSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            CurrentPassword: \"\",\r\n            NewPassword: \"\",\r\n            ConfirmPassword: \"\",\r\n\r\n            ValidCurrentPassword: false,\r\n            ValidNewPassword: false,\r\n            ValidConfirmPassword: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                CurrentPassword: \"\",\r\n                NewPassword: \"\",\r\n                ConfirmPassword: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    async validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCurrentPassword = this.state.ValidCurrentPassword;\r\n        let ValidNewPassword = this.state.ValidNewPassword;\r\n        let ValidConfirmPassword = this.state.ValidConfirmPassword;\r\n\r\n        switch (field) {\r\n            case \"CurrentPassword\":\r\n                ValidCurrentPassword = (value !== \"\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is required.\";\r\n\r\n                if (Errors.CurrentPassword !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCurrentPassword = (value !== \"Invalid password.\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is invalid.\";\r\n                break;\r\n            case \"NewPassword\":\r\n                ValidNewPassword = value.length >= 6;\r\n                Errors.NewPassword = ValidNewPassword ? \"\" : \"Password is too short.\";\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                ValidConfirmPassword = value === this.state.NewPassword;\r\n                Errors.ConfirmPassword = ValidConfirmPassword ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCurrentPassword: ValidCurrentPassword,\r\n            ValidNewPassword: ValidNewPassword,\r\n            ValidConfirmPassword: ValidConfirmPassword,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidCurrentPassword &&\r\n                    this.state.ValidNewPassword &&\r\n                    this.state.ValidConfirmPassword\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        let passwordPackage = {\r\n            Token: localStorage.Token,\r\n            Password: this.state.CurrentPassword\r\n        };\r\n\r\n        await validatePassword(passwordPackage).then(async response => {\r\n            if (response.Message === \"Invalid password.\") {\r\n                this.validateField(\"CurrentPassword\", response.Message);\r\n            }\r\n            else {\r\n                const updatedTrader = {\r\n                    Token: localStorage.Token,\r\n                    Password: this.state.NewPassword\r\n                };\r\n\r\n                this.setState({\r\n                    Preloader: <Preloader />\r\n                });\r\n\r\n                await passwordSettings(updatedTrader).then(response => {\r\n                    if (response.Message === \"Trader is updated.\") {\r\n                        this.props.OnSettingsSaved();\r\n                    }\r\n\r\n                    this.setState({\r\n                        Preloader: null\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\" }}>Change Password</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-key\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" name=\"CurrentPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                        value={this.state.CurrentPassword} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Current Password</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"CurrentPassword\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-key\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" name=\"NewPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                        value={this.state.NewPassword} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">New Password</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"NewPassword\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-key\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" name=\"ConfirmPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                        value={this.state.ConfirmPassword} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Confirm Password</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"ConfirmPassword\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default PasswordSettings;","import React, { Component } from \"react\";\r\nimport GeneralSettings from \"./GeneralSettings\";\r\nimport UsernameAndEmailSettings from \"./UsernameAndEmailSettings\";\r\nimport PasswordSettings from \"./PasswordSettings\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Settings extends Component {\r\n    render() {\r\n        return <section>\r\n            <PageHeading Heading=\"SETTINGS\" />\r\n            <GeneralSettings ref=\"GeneralSettings\" OnSettingsSaved={() => { this.refs.GeneralSettings.componentDidMount(); }} />\r\n            <UsernameAndEmailSettings ref=\"UsernameAndEmailSettings\" OnSettingsSaved={() => { this.refs.UsernameAndEmailSettings.componentDidMount(); }} />\r\n            <PasswordSettings ref=\"PasswordSettings\" OnSettingsSaved={() => { this.refs.PasswordSettings.forceUpdate(); }} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Settings;","import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport Profile from \"./profile/Profile\";\r\nimport Jobs from \"./jobs/Jobs\";\r\nimport Payments from \"./payments/Payments\";\r\nimport Settings from \"./settings/Settings\";\r\n\r\nclass TradersDashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Left: -400\r\n        };\r\n\r\n        this.onCloseNavigation = this.onCloseNavigation.bind(this);\r\n    }\r\n\r\n    onCloseNavigation = () => {\r\n        this.setState({\r\n            Left: -400\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.Token) {\r\n            return <Redirect to=\"/login\" />;\r\n        }\r\n        else {\r\n            return <section>\r\n                <div className=\"sidenav\" style={{ left: `${this.state.Left}px` }}>\r\n                    <a className=\"closebtn\" onClick={this.onCloseNavigation}>&times;</a>\r\n\r\n                    <div class=\"entity-list\" role=\"tablist\">\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#profile\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Profile</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#jobs\" aria-controls=\"jobs\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Jobs</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#payments\" aria-controls=\"payments\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Payments</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#settings\" aria-controls=\"settings\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Settings</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"tab-content\">\r\n                    <div role=\"tabpanel\" className=\"tab-pane active\" id=\"profile\">\r\n                        <Profile ref=\"Profile\" />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"jobs\">\r\n                        <Jobs />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"payments\">\r\n                        </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"settings\">\r\n                        <Settings />\r\n                    </div>\r\n                </div>\r\n                <div className=\"side-nav-btn\" onClick={() => {\r\n                    this.setState({\r\n                        Left: 0\r\n                    });\r\n                }}><div className=\"fas fa-bars\" style={{ fontSize: \"x-large\" }}></div>\r\n                </div>\r\n            </section>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default TradersDashboard;","import React, { Component } from \"react\";\r\n\r\nclass BackToTop extends Component {\r\n    render() {\r\n        return (\r\n            <a id=\"up\" href=\"#top\" className=\"back-to-top\" style={{ position: \"fixed\", right: \"20px\", bottom: \"20px\", }}>\r\n                <i className=\"glyph glyph-up\" style={{ color: \"#008575\", }}></i>\r\n                <span className=\"sr-only\">Back to top</span>\r\n            </a>\r\n        );\r\n    }\r\n};\r\n\r\nexport default BackToTop;","import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <footer className=\"border-top footer theme-default color-bg-light-neutral-high text-light\">\r\n                <div className=\"container\">\r\n                    &copy; {new Date().getFullYear()} - Core Infinite - <a asp-area=\"\" asp-controller=\"Home\" asp-action=\"Privacy\">Privacy</a>\r\n                </div>\r\n            </footer>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Header from \"./components/shared/Header\";\r\nimport Landing from \"./components/landing/Landing\";\r\nimport Login from \"./components/login/Login\";\r\nimport Register from \"./components/register/Register\";\r\nimport EmailConfirmation from \"./components/register/EmailConfirmation\";\r\nimport AccountSetup from \"./components/register/AccountSetup\";\r\nimport Congratulations from \"./components/register/Congratulations\";\r\nimport DriversDashboard from \"./components/drivers/dashboard/DriversDashboard\"\r\nimport TradersDashboard from \"./components/traders/dashboard/TradersDashboard\"\r\nimport BackToTop from \"./controls/BackToTop\";\r\nimport Footer from \"./components/shared/Footer\";\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Router basename=\"/\">\r\n                <div className=\"App\">\r\n                    <Header />\r\n                    <Route exact path=\"/\" component={Landing} />\r\n                    <Route exact path=\"/register\" component={Register} />\r\n                    <Route exact path=\"/emailConfirmation\" component={EmailConfirmation} />\r\n                    <Route exact path=\"/setupAccount\" component={AccountSetup} />\r\n                    <Route exact path=\"/congratulations\" component={Congratulations} />\r\n                    <Route exact path=\"/login\" component={Login} />\r\n                    <Route exact path=\"/drivers\" component={DriversDashboard} />\r\n                    <Route exact path=\"/traders\" component={TradersDashboard} />\r\n                    <BackToTop />\r\n                    <Footer />\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = {\r\n    APP_NAME: \"Naqel\",\r\n    USER_TOKEN: \"userToken\",\r\n    USER_NOT_FOUND: \"Username not found.\",\r\n    INVALID_PASSWORD: \"Invalid password.\",\r\n    USERNAME_OR_EMAIL_TAKEN: \"Username or email is already taken.\",\r\n    NAQEL_SERVER: \"http://localhost:1337/\",\r\n    IMAGE_UPLOADER: \"https://us-central1-naqel-transport-jobs.cloudfunctions.net/uploadImage\"\r\n};"],"sourceRoot":""}
{"version":3,"sources":["components/shared/Header.js","components/landing/Landing.js","components/drivers/DriverFunctions.js","components/traders/TraderFunctions.js","components/administrators/AdministratorFunctions.js","components/transportCompanyResponsibles/TransportCompanyResponsiblesFunctions.js","styles/MiscellaneousStyles.js","controls/Preloader.js","styles/CardStyles.js","components/login/Login.js","components/register/Register.js","components/register/EmailConfirmation.js","res/FirebaseApp.js","containers/phoneConfirmationDialog/PhoneConfirmationDialog.js","components/register/AccountSetup.js","components/register/SetupAdministratorAccount.js","components/register/SetupTransportCompanyResponsibleAccount.js","components/register/Congratulations.js","components/drivers/dashboard/profile/ProfilePhoto.js","controls/ImageUploader.js","components/drivers/dashboard/profile/documents/drivingLicence/AddDrivingLicenceDialog.js","components/drivers/dashboard/profile/documents/drivingLicence/AddDrivingLicenceButton.js","components/drivers/dashboard/profile/documents/entryExitCard/AddEntryExitCardDialog.js","components/drivers/dashboard/profile/documents/entryExitCard/AddEntryExitCardButton.js","components/drivers/dashboard/profile/documents/identityCard/AddIdentityCardDialog.js","components/drivers/dashboard/profile/documents/identityCard/AddIdentityCardButton.js","components/drivers/dashboard/profile/documents/drivingLicence/EditDrivingLicenceDialog.js","components/drivers/dashboard/profile/documents/drivingLicence/DrivingLicenceListItem.js","components/drivers/dashboard/profile/documents/entryExitCard/EditEntryExitCardDialog.js","components/drivers/dashboard/profile/documents/entryExitCard/EntryExitCardListItem.js","components/drivers/dashboard/profile/documents/identityCard/EditIdentityCardDialog.js","components/drivers/dashboard/profile/documents/identityCard/IdentityCardListItem.js","components/drivers/dashboard/profile/documents/DocumentsList.js","controls/Rating.js","components/drivers/dashboard/profile/Profile.js","controls/PageHeading.js","components/drivers/dashboard/trucks/TruckSettings.js","components/drivers/dashboard/trucks/AddTruckDialog.js","components/drivers/dashboard/trucks/trailers/AddTrailerDialog.js","components/drivers/dashboard/trucks/trailers/AddTrailer.js","components/drivers/dashboard/trucks/trailers/EditTrailerDialog.js","components/drivers/dashboard/trucks/trailers/TrailersList.js","components/drivers/dashboard/trucks/trailers/Trailers.js","components/drivers/dashboard/trucks/Truck.js","components/drivers/dashboard/permits/AddPermitLicenceDialog.js","components/drivers/dashboard/permits/EditPermitLicenceDialog.js","components/drivers/dashboard/permits/PermitLicencesListItem.js","controls/ProgressBar.js","components/drivers/dashboard/permits/PermitLicencesList.js","components/drivers/dashboard/permits/Permits.js","containers/searching/SearchingContainer.js","controls/ProgressRing.js","components/drivers/dashboard/earnings/EarningListItem.js","components/drivers/dashboard/earnings/EarningsList.js","components/drivers/dashboard/earnings/Earnings.js","containers/trader/documents/IdentityCardContainer.js","containers/trader/documents/CommercialRegisterCertificateContainer.js","components/shared/UserFunctions.js","containers/trader/documents/DocumentsDialog.js","containers/trader/TraderContainer.js","containers/trader/documents/DocumentsContainer.js","components/drivers/dashboard/jobs/jobRequests/ProfileDialog.js","containers/traderRequest/TraderRequestContainer.js","components/drivers/dashboard/jobs/jobRequests/RequestDialog.js","components/drivers/dashboard/jobs/jobRequests/TraderRequestRow.js","components/drivers/dashboard/jobs/jobRequests/TraderRequestsTable.js","controls/PlaceInput.js","components/drivers/dashboard/jobs/jobRequests/EditJobRequestDialog.js","containers/jobReqeust/JobRequestContainer.js","components/drivers/dashboard/jobs/jobRequests/JobRequestPackageItem.js","components/drivers/dashboard/jobs/jobRequests/AddJobRequestDialog.js","components/drivers/dashboard/jobs/jobRequests/JobRequestsList.js","components/drivers/dashboard/jobs/jobRequests/JobRequests.js","containers/jobOffer/JobOfferContainer.js","components/drivers/dashboard/jobs/jobOffers/list/BidJobOfferDialog.js","components/drivers/dashboard/jobs/jobOffers/list/JobOfferPostListItem.js","components/drivers/dashboard/jobs/jobOffers/list/JobOfferPostsList.js","components/drivers/dashboard/jobs/jobOffers/list/List.js","components/drivers/dashboard/jobs/jobOffers/map/JobOffersGoogleMap.js","components/drivers/dashboard/jobs/jobOffers/map/JobOffersMap.js","components/drivers/dashboard/jobs/jobOffers/map/Map.js","components/drivers/dashboard/jobs/jobOffers/JobOffers.js","components/drivers/dashboard/jobs/onGoingJob/OnGoingJobMap.js","components/drivers/dashboard/jobs/onGoingJob/objectionsTab/ReasonsList.js","components/drivers/dashboard/jobs/onGoingJob/objectionsTab/AddObjectionDialog.js","containers/onGoingJob/JobObjectionContainer.js","components/drivers/dashboard/jobs/onGoingJob/objectionsTab/Objections.js","containers/onGoingJob/JobContainer.js","components/drivers/dashboard/jobs/onGoingJob/Job.js","components/drivers/dashboard/jobs/onGoingJob/FinishJobDialog.js","components/drivers/dashboard/jobs/onGoingJob/OnGoingJobOptions.js","components/drivers/dashboard/jobs/onGoingJob/OnGoingJob.js","containers/completedJob/CompletedJobContainer.js","containers/payProof/PayProofContainer.js","components/drivers/dashboard/jobs/completedJobs/moreDetails/PayProofDetails.js","containers/payDetails/PayDetailsContainer.js","components/drivers/dashboard/jobs/completedJobs/moreDetails/PaymentDetails.js","components/drivers/dashboard/jobs/completedJobs/moreDetails/MoreDetails.js","components/drivers/dashboard/jobs/completedJobs/CompletedJobPackageListItem.js","components/drivers/dashboard/jobs/completedJobs/CompletedJobsList.js","components/drivers/dashboard/jobs/completedJobs/CompletedJobs.js","components/drivers/dashboard/jobs/Jobs.js","containers/bill/BillContainer.js","components/drivers/dashboard/payments/Bill.js","components/drivers/dashboard/payments/PrintBillDialog.js","components/drivers/dashboard/payments/AddPayProofDialog.js","components/drivers/dashboard/payments/PayProofDetails.js","components/drivers/dashboard/payments/PaymentDetails.js","components/drivers/dashboard/payments/PayOnlineDialog.js","components/drivers/dashboard/payments/BillListItem.js","components/drivers/dashboard/payments/BillsList.js","components/drivers/dashboard/payments/Payments.js","components/drivers/dashboard/questions/AskQuestionDialog.js","containers/driverQuestion/DriverQuestionContainer.js","components/drivers/dashboard/questions/DeleteQuestionDialog.js","components/drivers/dashboard/questions/QuestionListItem.js","components/drivers/dashboard/questions/QuestionsList.js","components/drivers/dashboard/questions/Questions.js","components/drivers/dashboard/settings/GeneralSettings.js","components/drivers/dashboard/settings/CodeConfirmationDialog.js","components/drivers/dashboard/settings/UsernameAndEmailSettings.js","components/drivers/dashboard/settings/PasswordSettings.js","components/drivers/dashboard/settings/Settings.js","containers/blockedUser/BlockedUserContainer.js","components/drivers/dashboard/DriversDashboard.js","components/traders/dashboard/profile/ProfilePhoto.js","components/traders/dashboard/profile/documents/identityCard/AddIdentityCardDialog.js","components/traders/dashboard/profile/documents/identityCard/AddIdentityCardButton.js","components/traders/dashboard/profile/documents/commercialRegisterCertificate/AddCommercialRegisterCertificateDialog.js","components/traders/dashboard/profile/documents/commercialRegisterCertificate/AddCommercialRegisterCertificateButton.js","components/traders/dashboard/profile/documents/identityCard/EditIdentityCardDialog.js","components/traders/dashboard/profile/documents/identityCard/IdentityCardListItem.js","components/traders/dashboard/profile/documents/commercialRegisterCertificate/EditCommercialRegisterCertificateDialog.js","components/traders/dashboard/profile/documents/commercialRegisterCertificate/CommercialRegisterCertificateListItem.js","components/traders/dashboard/profile/documents/DocumentsList.js","components/traders/dashboard/profile/Profile.js","containers/driver/documents/DrivingLicenceContainer.js","containers/driver/documents/EntryExitCardContainer.js","containers/driver/documents/IdentityCardContainer.js","containers/driver/documents/DocumentsDialog.js","containers/driver/DriverContainer.js","containers/truck/TrailerContainer.js","containers/truck/TrailersDialog.js","containers/truck/TruckContainer.js","components/traders/dashboard/jobs/jobRequests/list/SendTraderRequestDialog.js","components/traders/dashboard/jobs/jobRequests/list/TraderRequestDialog.js","components/traders/dashboard/jobs/jobRequests/list/AssignJobDialog.js","components/traders/dashboard/jobs/jobRequests/list/JobRequestPostListItem.js","components/traders/dashboard/jobs/jobRequests/list/JobRequestPostsList.js","components/traders/dashboard/jobs/jobRequests/list/List.js","components/traders/dashboard/jobs/jobRequests/map/JobRequestsGoogleMap.js","components/traders/dashboard/jobs/jobRequests/map/JobRequestsMap.js","components/traders/dashboard/jobs/jobRequests/map/Map.js","components/traders/dashboard/jobs/jobRequests/JobRequests.js","containers/driver/documents/DocumentsContainer.js","components/traders/dashboard/jobs/jobOffers/ProfileDialog.js","containers/truck/TrailersContainer.js","components/traders/dashboard/jobs/jobOffers/TruckDialog.js","components/traders/dashboard/jobs/jobOffers/AssignJobDialog.js","components/traders/dashboard/jobs/jobOffers/DriverRequestRow.js","components/traders/dashboard/jobs/jobOffers/DriverRequestsTable.js","components/traders/dashboard/jobs/jobOffers/EditJobOfferDialog.js","components/traders/dashboard/jobs/jobOffers/JobOfferPackageItem.js","components/traders/dashboard/jobs/jobOffers/AddJobOfferDialog.js","components/traders/dashboard/jobs/jobOffers/JobOffersList.js","components/traders/dashboard/jobs/jobOffers/JobOffers.js","components/traders/dashboard/jobs/onGoingJob/Job.js","components/traders/dashboard/jobs/onGoingJob/OnGoingJobMap.js","components/traders/dashboard/jobs/onGoingJob/objections/ReasonsList.js","components/traders/dashboard/jobs/onGoingJob/objections/AddObjectionDialog.js","components/traders/dashboard/jobs/onGoingJob/objections/Objections.js","components/traders/dashboard/jobs/onGoingJob/ApproveJobDialog.js","controls/InteractiveRating.js","components/traders/dashboard/jobs/onGoingJob/ReviewDialog.js","components/traders/dashboard/jobs/onGoingJob/OnGoingJobOptions.js","components/traders/dashboard/jobs/onGoingJob/OnGoingJob.js","components/traders/dashboard/jobs/completedJobs/ReviewDialog.js","components/traders/dashboard/jobs/completedJobs/CompletedJobPackageListItem.js","components/traders/dashboard/jobs/completedJobs/CompletedJobsList.js","components/traders/dashboard/jobs/completedJobs/CompletedJobs.js","components/traders/dashboard/jobs/Jobs.js","components/traders/dashboard/payments/Bill.js","components/traders/dashboard/payments/PrintBillDialog.js","components/traders/dashboard/payments/SpecialBill.js","components/traders/dashboard/payments/PrintSpecialBillDialog.js","components/traders/dashboard/payments/AddPayProofDialog.js","components/traders/dashboard/payments/PayProofDetails.js","components/traders/dashboard/payments/PaymentDetails.js","components/traders/dashboard/payments/PayOnlineDialog.js","components/traders/dashboard/payments/RequestSpecialBillDialog.js","components/traders/dashboard/payments/BillListItem.js","components/traders/dashboard/payments/BillsList.js","components/traders/dashboard/payments/Payments.js","components/traders/dashboard/questions/AskQuestionDialog.js","containers/traderQuestion/TraderQuestionContainer.js","components/traders/dashboard/questions/DeleteQuestionDialog.js","components/traders/dashboard/questions/QuestionListItem.js","components/traders/dashboard/questions/QuestionsList.js","components/traders/dashboard/questions/Questions.js","components/traders/dashboard/settings/GeneralSettings.js","components/traders/dashboard/settings/CodeConfirmationDialog.js","components/traders/dashboard/settings/UsernameAndEmailSettings.js","components/traders/dashboard/settings/PasswordSettings.js","components/traders/dashboard/settings/Settings.js","containers/exoneratedTrader/ExoneratedTraderContainer.js","components/traders/dashboard/TradersDashboard.js","components/administrators/dashboard/profile/ProfilePhoto.js","components/administrators/dashboard/profile/settings/GeneralSettings.js","components/administrators/dashboard/profile/settings/CodeConfirmationDialog.js","components/administrators/dashboard/profile/settings/UsernameAndEmailSettings.js","components/administrators/dashboard/profile/settings/PasswordSettings.js","components/administrators/dashboard/profile/settings/NaqellSettings.js","components/administrators/dashboard/profile/settings/Settings.js","components/administrators/dashboard/profile/Profile.js","components/administrators/dashboard/Drivers/BlockAccountDialog.js","components/administrators/dashboard/Drivers/UnblockAccountDialog.js","components/administrators/dashboard/Drivers/DriverListItem.js","components/administrators/dashboard/Drivers/DriversList.js","components/administrators/dashboard/Drivers/Drivers.js","components/administrators/dashboard/traders/SetRefundRateDialog.js","components/administrators/dashboard/traders/ChargeTraderDialog.js","components/administrators/dashboard/traders/ExonerateTraderDialog.js","components/administrators/dashboard/traders/TraderListItem.js","components/administrators/dashboard/traders/TradersList.js","components/administrators/dashboard/traders/Traders.js","components/administrators/dashboard/jobs/objectionReasons/traderObjectionReasons/AddObjectionReasonDialog.js","components/administrators/dashboard/jobs/objectionReasons/traderObjectionReasons/ObjectionReasonListItem.js","components/administrators/dashboard/jobs/objectionReasons/traderObjectionReasons/ObjectionReasonsList.js","components/administrators/dashboard/jobs/objectionReasons/traderObjectionReasons/TraderObjectionReasons.js","components/administrators/dashboard/jobs/objectionReasons/driverObjectionReasons/AddObjectionReasonDialog.js","components/administrators/dashboard/jobs/objectionReasons/driverObjectionReasons/ObjectionReasonListItem.js","components/administrators/dashboard/jobs/objectionReasons/driverObjectionReasons/ObjectionReasonsList.js","components/administrators/dashboard/jobs/objectionReasons/driverObjectionReasons/DriverObjectionReasons.js","components/administrators/dashboard/jobs/objectionReasons/ObjectionReasons.js","components/administrators/dashboard/jobs/objectionableJobs/jobObjections/Objections.js","components/administrators/dashboard/jobs/objectionableJobs/DiscardObjectionableJobDialog.js","components/administrators/dashboard/jobs/objectionableJobs/ObjectionableJobListItem.js","components/administrators/dashboard/jobs/objectionableJobs/ObjectionableJobsList.js","components/administrators/dashboard/jobs/objectionableJobs/ObjectionableJobs.js","components/administrators/dashboard/jobs/Jobs.js","components/administrators/dashboard/questions/driverQuestions/AnswerDriverQuestionDialog.js","components/administrators/dashboard/questions/driverQuestions/DriverQuestionClasses.js","components/administrators/dashboard/questions/driverQuestions/ClassifyDriverQuestionDialog.js","components/administrators/dashboard/questions/driverQuestions/DriverQuestionListItem.js","components/administrators/dashboard/questions/driverQuestions/DriverQuestionsList.js","components/administrators/dashboard/questions/driverQuestions/DriverQuestions.js","components/administrators/dashboard/questions/traderQuestions/AnswerTraderQuestionDialog.js","components/administrators/dashboard/questions/traderQuestions/TraderQuestionClasses.js","components/administrators/dashboard/questions/traderQuestions/ClassifyTraderQuestionDialog.js","components/administrators/dashboard/questions/traderQuestions/TraderQuestionListItem.js","components/administrators/dashboard/questions/traderQuestions/TraderQuestionsList.js","components/administrators/dashboard/questions/traderQuestions/TraderQuestions.js","containers/responsibleQuestion/ResponsibleQuestionContainer.js","components/administrators/dashboard/questions/responsibleQuestions/AnswerResponsibleQuestionDialog.js","components/administrators/dashboard/questions/responsibleQuestions/ResponsibleQuestionClasses.js","components/administrators/dashboard/questions/responsibleQuestions/ClassifyResponsibleQuestionDialog.js","components/administrators/dashboard/questions/responsibleQuestions/ResponsibleQuestionListItem.js","components/administrators/dashboard/questions/responsibleQuestions/ResponsibleQuestionsList.js","components/administrators/dashboard/questions/responsibleQuestions/ResponsibleQuestions.js","components/administrators/dashboard/questions/Questions.js","components/administrators/dashboard/feeRates/generalRates/globalAndTemporayRates/SetGlobalFeeRateDialog.js","components/administrators/dashboard/feeRates/generalRates/globalAndTemporayRates/SetTemporaryFeeRateDialog.js","components/administrators/dashboard/feeRates/generalRates/globalAndTemporayRates/ClearTemporaryFeeRateDialog.js","components/administrators/dashboard/feeRates/generalRates/globalAndTemporayRates/GlobalAndTemporaryRates.js","components/administrators/dashboard/feeRates/generalRates/priceRanges/UpdatePriceRangeDialog.js","components/administrators/dashboard/feeRates/generalRates/priceRanges/PriceRangeListItem.js","components/administrators/dashboard/feeRates/generalRates/priceRanges/AddPriceRangeDialog.js","components/administrators/dashboard/feeRates/generalRates/priceRanges/PriceRangesList.js","components/administrators/dashboard/feeRates/generalRates/priceRanges/PriceRanges.js","components/administrators/dashboard/feeRates/generalRates/GeneralRates.js","components/administrators/dashboard/feeRates/traderRates/UpdateTraderRateDialog.js","components/administrators/dashboard/feeRates/traderRates/TraderRateListItem.js","components/administrators/dashboard/feeRates/traderRates/AddTraderRateDialog.js","components/administrators/dashboard/feeRates/traderRates/TraderRatesList.js","components/administrators/dashboard/feeRates/traderRates/TraderRates.js","components/administrators/dashboard/feeRates/FeeRates.js","components/administrators/dashboard/financialAccounts/bills/tradersBills/PayProofDialog.js","components/administrators/dashboard/financialAccounts/bills/tradersBills/PayDetailsDialog.js","components/administrators/dashboard/financialAccounts/bills/tradersBills/TradersBillListItem.js","components/administrators/dashboard/financialAccounts/bills/tradersBills/TradersBillsList.js","components/administrators/dashboard/financialAccounts/bills/tradersBills/TradersBills.js","components/administrators/dashboard/financialAccounts/bills/driversBills/PayProofDialog.js","components/administrators/dashboard/financialAccounts/bills/driversBills/PayDetailsDialog.js","components/administrators/dashboard/financialAccounts/bills/driversBills/DriversBillListItem.js","components/administrators/dashboard/financialAccounts/bills/driversBills/DriversBillsList.js","components/administrators/dashboard/financialAccounts/bills/driversBills/DriversBills.js","components/administrators/dashboard/financialAccounts/bills/Bills.js","components/administrators/dashboard/financialAccounts/userAccountStatements/traderAccountStatements/accountStatement/RowData.js","components/administrators/dashboard/financialAccounts/userAccountStatements/traderAccountStatements/accountStatement/AccountStatementData.js","components/administrators/dashboard/financialAccounts/userAccountStatements/traderAccountStatements/accountStatement/AccountStatement.js","components/administrators/dashboard/financialAccounts/userAccountStatements/traderAccountStatements/TraderAccountStatementBrowser.js","components/administrators/dashboard/financialAccounts/userAccountStatements/traderAccountStatements/TraderAccountStatements.js","components/administrators/dashboard/financialAccounts/userAccountStatements/driverAccountStatements/accountStatement/RowData.js","components/administrators/dashboard/financialAccounts/userAccountStatements/driverAccountStatements/accountStatement/AccountStatementData.js","components/administrators/dashboard/financialAccounts/userAccountStatements/driverAccountStatements/accountStatement/AccountStatement.js","components/administrators/dashboard/financialAccounts/userAccountStatements/driverAccountStatements/DriverAccountStatementBrowser.js","components/administrators/dashboard/financialAccounts/userAccountStatements/driverAccountStatements/DriverAccountStatements.js","components/administrators/dashboard/financialAccounts/userAccountStatements/responsibleAccountStatements/accountStatement/RowData.js","components/administrators/dashboard/financialAccounts/userAccountStatements/responsibleAccountStatements/accountStatement/AccountStatementData.js","components/administrators/dashboard/financialAccounts/userAccountStatements/responsibleAccountStatements/accountStatement/AccountStatement.js","components/administrators/dashboard/financialAccounts/userAccountStatements/responsibleAccountStatements/ResponsibleAccountStatementBrowser.js","components/administrators/dashboard/financialAccounts/userAccountStatements/responsibleAccountStatements/ResponsibleAccountStatements.js","components/administrators/dashboard/financialAccounts/userAccountStatements/UserAccountStatements.js","components/administrators/dashboard/financialAccounts/accountStatement/RowData.js","components/administrators/dashboard/financialAccounts/accountStatement/AccountStatementData.js","components/administrators/dashboard/financialAccounts/accountStatement/AccountStatement.js","components/administrators/dashboard/financialAccounts/financialAccounts.js","components/administrators/dashboard/AdministratorsDashboard.js","components/transportCompanyResponsibles/dashboard/profile/documents/commercialRegisterCertificate/AddCommercialRegisterCertificateDialog.js","components/transportCompanyResponsibles/dashboard/profile/documents/commercialRegisterCertificate/EditCommercialRegisterCertificateDialog.js","components/transportCompanyResponsibles/dashboard/profile/documents/commercialRegisterCertificate/CommercialRegisterCertificateListItem.js","components/transportCompanyResponsibles/dashboard/profile/documents/DocumentsList.js","components/transportCompanyResponsibles/dashboard/profile/Profile.js","components/transportCompanyResponsibles/dashboard/settings/GeneralSettings.js","components/transportCompanyResponsibles/dashboard/settings/CodeConfirmationDialog.js","components/transportCompanyResponsibles/dashboard/settings/UsernameAndEmailSettings.js","components/transportCompanyResponsibles/dashboard/settings/PasswordSettings.js","components/transportCompanyResponsibles/dashboard/settings/Settings.js","components/transportCompanyResponsibles/dashboard/trucks/truckList/TruckDialog.js","components/transportCompanyResponsibles/dashboard/trucks/truckList/DriverDialog.js","components/transportCompanyResponsibles/dashboard/trucks/truckList/TruckMap.js","components/transportCompanyResponsibles/dashboard/trucks/truckList/LocateTruckDialog.js","components/transportCompanyResponsibles/dashboard/trucks/truckList/TruckListItem.js","components/transportCompanyResponsibles/dashboard/trucks/truckList/TrucksList.js","components/transportCompanyResponsibles/dashboard/trucks/truckList/TruckList.js","components/transportCompanyResponsibles/dashboard/trucks/truckJobs/truckJobsTable/truckJobDetails/DriverReviewContainer.js","components/transportCompanyResponsibles/dashboard/trucks/truckJobs/truckJobsTable/truckJobDetails/UserDetailsContainer.js","components/transportCompanyResponsibles/dashboard/trucks/truckJobs/truckJobsTable/truckJobDetails/TruckJobDetails.js","components/transportCompanyResponsibles/dashboard/trucks/truckJobs/truckJobsTable/TruckJobDetailsDialog.js","components/transportCompanyResponsibles/dashboard/trucks/truckJobs/truckJobsTable/TruckJobsRow.js","components/transportCompanyResponsibles/dashboard/trucks/truckJobs/truckJobsTable/TruckJobsTable.js","components/transportCompanyResponsibles/dashboard/trucks/truckJobs/truckJobsTable/SearchTruckJobsDialog.js","components/transportCompanyResponsibles/dashboard/trucks/truckJobs/truckJobsTable/TruckJobs.js","components/transportCompanyResponsibles/dashboard/trucks/truckJobs/TruckJobsBrowser.js","components/transportCompanyResponsibles/dashboard/trucks/truckJobs/TruckJobs.js","components/transportCompanyResponsibles/dashboard/trucks/Trucks.js","components/transportCompanyResponsibles/dashboard/questions/AskQuestionDialog.js","components/transportCompanyResponsibles/dashboard/questions/DeleteQuestionDialog.js","components/transportCompanyResponsibles/dashboard/questions/QuestionListItem.js","components/transportCompanyResponsibles/dashboard/questions/QuestionsList.js","components/transportCompanyResponsibles/dashboard/questions/Questions.js","components/transportCompanyResponsibles/dashboard/financialAccounts/accountStatement/AccountStatementRow.js","components/transportCompanyResponsibles/dashboard/financialAccounts/accountStatement/AccountStatementTable.js","components/transportCompanyResponsibles/dashboard/financialAccounts/accountStatement/AccountStatement.js","components/transportCompanyResponsibles/dashboard/financialAccounts/trucksAccountStatement/accountStatement/AccountStatementRow.js","components/transportCompanyResponsibles/dashboard/financialAccounts/trucksAccountStatement/accountStatement/AccountStatementTable.js","components/transportCompanyResponsibles/dashboard/financialAccounts/trucksAccountStatement/accountStatement/SearchTransactionsDialog.js","components/transportCompanyResponsibles/dashboard/financialAccounts/trucksAccountStatement/accountStatement/AccountStatement.js","components/transportCompanyResponsibles/dashboard/financialAccounts/trucksAccountStatement/TruckAccountStatementBrowser.js","components/transportCompanyResponsibles/dashboard/financialAccounts/trucksAccountStatement/TrucksAccountStatements.js","components/transportCompanyResponsibles/dashboard/financialAccounts/FinancialAccounts.js","components/transportCompanyResponsibles/dashboard/TransportComapanyResponsiblesDashboard.js","controls/BackToTop.js","components/shared/Footer.js","App.js","index.js","res/strings.js"],"names":["Header","props","logOut","event","preventDefault","localStorage","userToken","removeItem","Token","history","push","state","DriverLoggedIn","ShowDashboardButton","bind","token","dashboardRoute","jwt_decode","DriverID","TraderID","AdministratorID","TransportCompanyResponsibleID","loginRegisterLinks","className","to","onClick","setState","userLinks","this","type","data-toggle","data-target","Strings","APP_NAME","toUpperCase","id","Component","withRouter","Landing","class","style","width","backgroundColor","alt","src","data-source-index","color","height","fontWeight","href","textDecoration","registerDriver","newCredentials","a","async","axios","post","NAQEL_SERVER","Username","Email","Password","RegisterAs","then","response","data","localeCompare","USERNAME_OR_EMAIL_TAKEN","setItem","setupDriverAccount","newDriver","FirstName","LastName","DateOfBirth","Gender","Address","PhoneNumber","Nationality","console","log","loginDriver","driver","EmailOrUsername","SignInAs","getData","request","Get","get","params","Params","headers","Authorization","uploadDriverProfilePhoto","driverProfilePhoto","PhotoURL","FileName","generalSettings","updatedDriver","validateUsername","username","validateEmail","email","sendCode","usernameAndEmailSettings","validatePassword","passwordPackage","passwordSettings","addTruck","newTruck","PlateNumber","Owner","ProductionYear","Brand","Model","Type","MaximumWeight","updateTruckPhoto","updatedTruck","updateTruck","deleteTruck","discardedTruck","delete","addTrailer","newTrailer","deleteTrailer","discardedTrailer","TrailerID","addDrivingLicence","newDrivingLicence","LicenceNumber","ReleaseDate","ExpiryDate","updateDrivingLicence","updatedDrivingLicence","deleteDrivingLicence","discardedDrivingLicence","addEntryExitCard","newEntryExitCard","EntryExitNumber","NumberOfMonths","updateEntryExitCard","updatedEntryExitCard","deleteEntryExitCard","discardedEntryExitCard","addIdentityCard","newIdentityCard","IDNumber","updateIdentityCard","updatedIdentityCard","deleteIdentityCard","discardedIdentityCard","addPermitLicence","newPermitLicence","PermitNumber","Code","Place","deletePermitLicence","discardedPermitLicence","PermitLicenceID","updatePermitLicence","updatedPermitLicence","addJobRequest","newJobRequest","LoadingPlace","LoadingLat","LoadingLng","UnloadingPlace","UnloadingLat","UnloadingLng","TripType","Price","updateJobRequest","updatedJobRequest","JobRequestID","deleteJobRequest","discardedJobRequest","addDriverRequest","newDriverRequest","JobOfferID","deleteDriverRequest","discardedDriverRequest","addObjectionReason","newObjectionReason","Reason","addJobObjection","newJobObjection","OnGoingJobID","Comment","finishJob","finishedJob","toggleSelectTraderRequest","toggleSelectedTraderRequest","TraderRequestID","Selected","approveTraderPayProof","approvedTraderPayProof","TraderPayProofID","addDriverPayProof","newDriverPayProof","DriverBillID","deleteDriverPayProof","discardedDriverPayProof","DriverPayProofID","addQuestion","newQuestion","Question","deleteQuestion","discardedQuestion","DriverQuestionID","getClientSecret","newClientSecret","Amount","addDriverPayDetails","newDriverPayDetails","OwnerName","OwnerEmail","CardType","registerTrader","res","setupTraderAccount","newTrader","loginTrader","trader","catch","error","uploadTraderProfilePhoto","traderProfilePhoto","updatedTrader","addJobOffer","newJobOffer","CargoType","CargoWeight","LoadingDate","LoadingTime","EntryExit","AcceptedDelay","JobOfferType","updateJobOffer","updatedJobOffer","deleteJobOffer","discardedJobOffer","addTraderRequest","newTraderReqeust","deleteTraderRequest","discardedTraderRequest","approveJob","approvedJob","addDriverReview","newDriverReview","CompletedJobID","Rating","Review","addOnGoingJobFromJobOffer","newOnGoingJob","DriverRequestID","addOnGoingJobFromJobRequest","addDriverReviewFromOnGoingJob","addTraderPayProof","newTraderPayProof","TraderBillID","deleteTraderPayProof","discardedTraderPayProof","requestSpecialBill","requestedSpecialBill","TraderQuestionID","addTraderPayDetails","newTraderPayDetails","registerAdministrator","setupAdministratorAccount","newAdministrator","AdministratorSecret","loginAdministrator","administrator","uploadProfilePhoto","profilePhoto","updatedAdministrator","updateNaqelSettings","updatedNaqelSettings","Street","City","Country","ZIPCode","Website","BusinessName","BankName","AccountNumber","activateDriverAccount","activatedDriver","blockDriverAccount","blockedDriver","BlockDate","unblockDriverAccount","unblockedDriver","setRefundRate","traderRefundRate","RefundRate","exonerateTrader","exoneratedTrader","ExonerateDate","chargeTrader","chargedTrader","addTraderObjectionReason","newTraderObjectionReason","deleteTraderObjectionReason","discardedTraderObjectionReason","DriverObjectionReasonID","verifyTraderObjectionReason","verifiedTraderObjectionReason","addDriverObjectionReason","newDriverObjectionReason","deleteDriverObjectionReason","discardedDriverObjectionReason","verifyDriverObjectionReason","verifiedDriverObjectionReason","discardObjectionableJob","discardedObjectionableJob","addDriverAnswer","driverAnswer","Answer","addDriverQuestionClass","newDriverQuestionClass","Class","classifyDriverQuestion","classifiedDriverQuestion","addTraderAnswer","traderAnswer","addTraderQuestionClass","newTraderQuestionClass","classifyTraderQuestion","classifiedTraderQuestion","addResponsibleAnswer","responsibleAnswer","ResponsibleQuestionID","addResponsibleQuestionClass","newResponsibleQuestionClass","classifyResponsibleQuestion","classifiedResponsibleQuestion","setGlobalFeeRate","feeRate","FeeRate","setTemporaryFeeRate","temporaryFeeRateDate","Date","clearTemporaryFeeRate","clearedtemporaryFeeRate","addPriceRange","newPriceRange","StartRange","EndRange","updatePriceRange","updatedPriceRange","PriceRangeID","deletePriceRange","discardedPriceRange","addTraderRate","newTraderRate","updateTraderRate","updatedTraderRate","TraderRateID","deleteTraderRate","discardedTraderRate","approveDriverPayProof","approvedDriverPayProof","registerTransportCompanyResponsible","setupTransportCompanyResponsibleAccount","newTransportCompanyResponsible","Name","loginTransportCompanyResponsible","transportCompanyResponsible","addCommercialRegisterCertificate","newCommercialRegisterCertificate","updateCommercialRegisterCertificate","updatedCommercialRegisterCertificate","deleteCommercialRegisterCertificate","discardedCommercialRegisterCertificate","updatedTransportCompanyResponsible","Required","paddingLeft","PreloaderScreen","background","position","zIndex","top","display","alignItems","justifyContent","Preloader","textAlign","LoginCardBack","backgroundImage","backgroundAttachment","backgroundRepeat","backgroundSize","RegisterCardBack","EmailConfirmationCardBack","AccountSetupCardBack","CongratulationsCardBack","Card","padding","alignContent","boxShadow","CardLarge","CardXLarge","margin","CardChild","CardTitle","paddingTop","Login","onChange","name","target","value","validateField","onSubmit","ValidForm","user","Message","LoggedInAsDriver","LoginError","LoggedInAsAdministrator","LoggedInAsTCResponsible","LoggedInAsTrader","ValidEmailOrUsername","ValidPassword","Errors","field","noValidate","htmlFor","placeholder","aria-haspopup","role","aria-expanded","aria-labelledby","e","disabled","Register","ConfirmPassword","NullError","UsernameOrEmailTaken","ShowPreloader","newCredentialsToken","PasswordsMatched","ValidEmail","Agreed","fieldValidationErrors","match","length","refs","agreementCheckBox","checked","validateForm","autocomplete","required","maxWidth","ref","AgreementError","tabindex","aria-hidden","String","data-dismiss","EmailConfirmation","NewCredentials","ConfirmationCode","ValidConfirmationCode","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","PhoneConfirmationDialog","ConfirmationResult","OnOK","confirm","result","ValidCode","cancelButton","click","tabIndex","minWidth","autoComplete","AccountSetup","verifiedCredentialsToken","PhoneCodeVerified","decoded","newUser","appVerifier","window","recaptchaVerifier","FirebaseApp","auth","languageCode","signInWithPhoneNumber","confirmationResult","SendCodeButton","FormError","message","ValidFirstName","ValidLastName","ValidDateOfBirth","ValidNationality","ValidAddress","ValidPhoneNumber","RecaptchaVerifier","atl","rows","sendCodeButton","phoneCodeVerified","SetupAdministratorAccount","verifiedCredentials","errors","ValidAdministratorSecret","SetupTransportCompanyResponsibleAccount","ValidName","IsCreatedSuccessfully","ProfilePhoto","onImageUpload","Image","files","formData","FormData","append","IMAGE_UPLOADER","onUploadProgress","UploadProgress","imageUrl","filename","photoURL","ImageURL","fileInput","border","ImageUploader","startsWith","OnInvalidImageSelected","exception","OnImageUploaded","Source","AddDrivingLicenceDialog","ValidLicenceNumber","ValidType","ValidReleaseDate","ValidExpiryDate","ValidPhotoURL","getTime","ImageCategory","AddDrivingLicenceButton","onMouseDown","OnCancel","OnDocumentsUpdated","AddEntryExitCardDialog","ValidEntryExitNumber","ValidNumberOfMonths","releaseDate","expiryDate","setMonth","getMonth","toLocaleString","AddEntryExitCardButton","AddIdentityCardDialog","ValidIDNumber","min","max","AddIdentityCardButton","EditDrivingLicenceDialog","drivingLicence","DrivingLicence","DrivingLicenceID","DrivingLicenceListItem","onDelete","onComponentUpdated","borderTop","borderRadius","Index","overflow","EditEntryExitCardDialog","entryExitCard","EntryExitCard","EntryExitCardListItem","EntryExitCardID","EditIdentityCardDialog","identityCard","IdentityCard","IdentityCardListItem","IdentityCardID","DocumentsList","onDocumentsUpdated","index","undefined","marginTop","Size","Color","Label","Profile","Active","RatingAndReviews","WarningAlert","Driver","ratingAndReviews","Reviews","TruckSettings","OnTruckSettingsUpdated","ValidOwner","ValidPlateNumber","ValidProductionYear","ValidBrand","ValidModel","ValidMaximumWeight","truck","Truck","currentYear","getFullYear","AddTruckDialog","AddTrailerDialog","AddTrailer","paddingBottom","marginBottom","OnTrailerAdded","EditTrailerDialog","updatedTrailer","Trailer","updateTrailer","dialogID","TrailersList","Trailers","OnTrailersUpdated","EditTrailerDialogs","map","key","editTrailerDialogs","showPreloader","Height","Width","AddPermitLicenceDialog","ValidPermitNumber","ValidPlace","EditPermitLicenceDialog","PermitLicence","DialogID","PermitLicenceListItem","permitLicenceID","OnPermitLicenceUpdated","AllPermitLicences","PermitLicences","EditPermitLicenceDialogs","SearchString","permitLicence","ProgressBar","PermitLicencesList","Searching","onSearch","allPermitLicences","filteredPermitLicences","i","includes","permitLicences","paddingRight","Permits","onPermitLicencesUpdated","permitLicencesList","SearchingContainer","searching","searchingFor","SearchingFor","ProgressRing","EarningListItem","earning","Earning","created","Created","toFixed","SAUDI_RIYAL","JobNumber","DuesPaid","toDateString","toLocaleTimeString","EarningsList","Earnings","NetEarning","refresh","Refreshing","Refresh","earnings","netEarning","FinancialAffairs","IdentityCardContainer","CommercialRegisterCertificateContainer","commercialRegisterCertificate","CommercialRegisterCertificate","Number","getPublicData","DocumentsDialog","TraderDocuments","traderDocuments","TraderContainer","TraderProfile","traderProfile","Trader","onJob","OnJob","UUID","substring","TabView","DocumentsContainer","ProfileDialog","aria-controls","RefreshTrader","RefreshDocuments","TraderRequestContainer","traderRequest","TraderRequest","toTimeString","RequestDialog","TraderRequestRow","onToggleSelect","traderRequestID","isSelected","selectedTraderRequest","OnTraderRequestUpdated","traderRequestPackage","TraderRequestPackage","traderOnJob","TraderOnJob","requestSelected","profileIndex","requestIndex","RefreshTraderContainer","RefreshDocumentsContainer","TraderRequestsTable","OnRequestsFound","TraderRequestPackages","RequestSelected","traderRequestPackages","PlaceInput","address","onSelect","geocodeByAddress","results","location","geometry","lat","lng","place","Lat","Lng","OnPlaceSelected","getInputProps","suggestions","getSuggestionItemProps","loading","suggestion","active","cursor","description","EditJobRequestDialog","JobRequest","ValidLoadingPlace","ValidUnloadingPlace","ValidPrice","step","JobRequestContainer","jobRequest","createdHoursAgo","Math","abs","TimeCreated","WaitingTime","JobRequestPackageItem","jobRequestID","OnJobRequestUpdated","NumberOfRequests","JobRequestPackage","CanEdit","RefreshTraderRequestsTable","number","AddJobRequestDialog","JobRequestsList","AllJobRequestPackages","JobRequests","JobRequestPackages","allJobRequestPackages","filteredJobRequestPackages","count","jobRequestPackage","jobRequestPackages","JobOfferContainer","jobOffer","JobOffer","loadingDate","setHours","parseInt","setMinutes","setSeconds","BidJobOfferDialog","IsRequestSent","DriverRequest","JobOfferPostsList","onCancelRequest","OnRequestUpdated","onSendRequest","JobOfferPost","RequestSent","RequestButton","driverRequest","JobOfferPosts","jobOfferPost","JobOfferPostListItem","jobOfferPosts","List","JobOfferInfoWindow","MapWrapped","withScriptjs","withGoogleMap","useState","SelectedJobOffer","SetSelectedJobOffer","defaultZoom","defaultCenter","center","options","streetViewControl","icon","url","scaledSize","google","maps","onCloseClick","JobOffersGoogleMap","googleMapURL","GOOGLE_API_KEY","loadingElement","containerElement","mapElement","JobOffersMap","Map","JobOffers","RefreshMap","Directions","SetDirections","OnGoingJob","directionsService","DirectionsService","origin","destination","route","travelMode","TravelMode","DRIVING","status","DirectionsStatus","OK","directions","suppressMarkers","DriverLocation","OnGoingJobMap","ReasonsList","ObjectionReasons","NewReason","objectionReasons","ObjectionReason","AddPressed","ValidNewReason","objectionReason","OnReasonSelected","AddObjectionDialog","ValidReason","ValidComment","readonly","reason","JobObjectionContainer","JobObjection","createdOn","objectionBy","ObjectionBy","Objections","JobObjections","jobObjections","jobObjection","JobContainer","onGoingJob","Job","JumbotronContent","hasObjections","HasObjections","CompletedByDriver","dateDifference","days","floor","hours","minutes","round","dayString","hourString","minuteString","remainingTime","FinishJobDialog","onYes","Progress","completedByDriver","OnGoingJobOptions","completedByTrader","CompletedByTrader","OnJobFinished","Loading","Database","database","child","on","snapshot","driverLocation","val","locationCoordinates","split","parseFloat","RefreshObjections","OnObjectionAdded","OnJobRemoved","CompletedJobContainer","completedJob","CompletedJob","PayProofContainer","payProof","PayProof","Approved","PayProofDetails","onApprovePayment","OnPayProofApproved","PayDetailsContainer","PayDetails","PaymentDetails","TraderPaymentDetails","IsOnlinePayment","MoreDetails","traderID","completedJobID","RefreshPaymentDetails","CompletedJobPackageListItem","CompletedJobPackage","billPaid","BillPaid","driverReview","DriverReview","CompletedJobsList","AllCompletedJobPackages","CompletedJobPackages","SearchDate","allCompletedJobPackages","filteredCompletedJobPackages","searchString","completedJobPackage","completedJobPackages","completedJobPackageItem","CompletedJobs","Jobs","RefreshJobRequests","RefreshJobOffers","RefreshOnGoingJob","RefreshCompletedJobs","BillContainer","bill","Bill","BillNumber","Paid","BillData","billData","naqelSettings","NaqelSettings","PrintBillDialog","trigger","content","AddPayProofDialog","OnPayProofDeleted","PayOnlineDialog","onCardInputChange","CheckOut","toggleCard","toggle","ShowCard","billingDetails","stripe","Stripe","elements","Elements","cardElement","getElement","CardElement","clientSecret","ClientSecret","createPaymentMethod","card","billing_details","paymentMethodRequest","paymentMethod","brand","confirmCardPayment","payment_method","ToggleCard","Error","NewEmail","cardElementOpts","iconStyle","base","fontSize","fontFamily","iconColor","invalid","complete","hidePostalCode","borderColor","BillListItem","HasPayProof","HasPayDetails","OnPayProofUpdated","OnPayDetailsAdded","BillsList","Bills","NumberOfPaidBills","NumberOfUnpaidBills","bills","numberOfPaidBills","numberOfUnpaidBills","hasPayProof","billItem","stripePromise","loadStripe","STRIPE_PUBLISHABLE_KEY","Payments","AskQuestionDialog","ValidQuestion","DriverQuestionContainer","askedOn","askedBy","AskedBy","DriverAnswer","answeredOn","answeredBy","AnsweredBy","QuestionNumber","Edited","DeleteQuestionDialog","QuestionListItem","OnQuestionDeleted","QuestionsList","AllQuestions","Questions","allQuestions","filteredQuestions","question","GeneralSettings","OnSettingsSaved","SettingsSaved","CodeConfirmationDialog","ConfirmCode","ValidConfirmCode","UsernameAndEmailSettings","NewUsername","ValidNewUsername","ValidNewEmail","CodeConfirmation","PasswordSettings","CurrentPassword","NewPassword","ValidCurrentPassword","ValidNewPassword","ValidConfirmPassword","Settings","componentDidMount","forceUpdate","BlockedUserContainer","BlockedUser","DriversDashboard","Left","DashboardData","IsActiveAccount","RefreshEarnings","AddCommercialRegisterCertificateDialog","AddCommercialRegisterCertificateButton","onRefresh","Key","random","EditCommercialRegisterCertificateDialog","CommercialRegisterCertificateListItem","ID","DrivingLicenceContainer","EntryExitCardContainer","DriverDocuments","driverDocuments","DriverContainer","DriverProfile","driverProfile","TrailerContainer","trailer","TrailersDialog","trailers","TruckContainer","OnTrailersFound","TruckProfile","truckProfile","SendTraderRequestDialog","newTraderRequest","ValidCargoType","ValidCargoWeight","ValidLoadingDate","ValidLoadingTime","ValidAcceptedDelay","TraderRequestDialog","AssignJobDialog","onAssignNow","CanAssign","price","JobRequestPostListItem","Badge","JobRequestPost","driverOnJob","DriverOnJob","canAssign","assignJobIndex","OnJobAssigned","RefreshDriverContainer","RefreshTruckContainer","JobRequestPostsList","JobRequestPosts","jobRequestPost","jobRequestPosts","JobRequestWindow","SelectedJobRequest","SetSelectedJobRequest","JobRequestsGoogleMap","JobRequestsMap","RefreshDriver","TruckDialog","TrailersContainer","DriverRequestRow","driverRequestPackage","DriverRequestPackage","truckIndex","DriverRequestsTable","DriverRequestPackages","DriverRequests","jobOfferType","driverRequestPackages","EditJobOfferDialog","aria-pressed","JobOfferPackageItem","jobOfferID","OnJobOfferUpdated","JobOfferPackage","hasDriverRequests","HasDriverRequests","RefreshDriverRequestsTable","AddJobOfferDialog","JobOffersList","AllJobOfferPackages","JobOfferPackages","allJobOfferPackages","filteredJobOfferPackages","jobOfferPackage","jobOfferPackages","ApproveJobDialog","onApprove","InteractiveRating","onRate","rating","OnRated","title","ReviewDialog","ValidRating","ValidReview","DriverRated","onGoingJobID","driverRated","OnReviewAdded","jobPackage","SpecialBill","SpecialTraderBill","PrintSpecialBillDialog","jobNumber","RequestSpecialBillDialog","TraderBill","canRequestSpecialBills","CanRequestSpecialBills","specialBill","OnSpecialBillRequested","TraderQuestionContainer","TraderAnswer","ExoneratedTrader","TradersDashboard","ExoneratedTraderContainer","OnProfilePhotoUpdated","Administrator","ValidStreet","ValidCity","ValidCountry","ValidZIPCode","ValidWebsite","ValidBusinessName","ValidBankName","ValidAccountNumber","BlockAccountDialog","ValidBlockDate","UnblockAccountDialog","onUnblock","DriverListItem","onActivateAccount","OnAccountActivated","IsBlocked","OnAccountBlocked","DriversList","AllDrivers","Drivers","allDrivers","filteredDrivers","drivers","driverItem","isBlocked","SetRefundRateDialog","TraderRefundRate","ValidRefundRate","ChargeTraderDialog","onCharge","ExonerateTraderDialog","ValidExonerateDate","TraderListItem","IsExonerated","refundRate","OnRefundRateSet","OnTraderExonerated","TradersList","AllTraders","Traders","allTraders","filteredTraders","traders","traderItem","isExonerated","AddObjectionReasonDialog","ObjectionReasonListItem","ShowProgressRing","OnObjectionReasonUpdated","onVerify","ObjectionReasonsList","AllObjectionReasons","allObjectionReasons","filteredObjectionReasons","TraderObjectionReasons","DriverObjectionReasons","OnObjectionsFound","DiscardObjectionableJobDialog","onDiscard","ObjectionableJobListItem","NumberOfObjections","ObjectionableJob","numberOfObjections","OnJobDiscarded","ObjectionableJobsList","AllObjectionableJobs","ObjectionableJobs","allObjectionableJobs","filteredObjectionableJobs","objectionableJob","AnswerDriverQuestionDialog","ValidAnswer","DriverQuestionClasses","QuestionClasses","NewClass","questionClasses","QuestionClass","ValidNewClass","questionClass","OnClassSelected","ClassifyDriverQuestionDialog","onClassSelected","DriverQuestionListItem","OnQuestionUpdated","DriverQuestionsList","DriverQuestions","AnswerTraderQuestionDialog","TraderQuestionClasses","ClassifyTraderQuestionDialog","TraderQuestionListItem","TraderQuestionsList","TraderQuestions","ResponsibleQuestionContainer","ResponsibleAnswer","AnswerResponsibleQuestionDialog","ResponsibleQuestionClasses","ClassifyResponsibleQuestionDialog","ResponsibleQuestionListItem","ResponsibleQuestionsList","ResponsibleQuestions","SetGlobalFeeRateDialog","ValidFeeRate","SetTemporaryFeeRateDialog","temporaryFeeRateData","ValidDate","ClearTemporaryFeeRateDialog","onClear","clearedTemporaryFeeRate","GlobalAndTemporaryRates","GlobalFeeRate","TemporaryFeeRateData","dateUpTo","UpdatePriceRangeDialog","PriceRangeListItem","PriceRange","OnPriceRangeDeleted","OnPriceRangeUpdated","AddPriceRangeDialog","ValidStartRange","ValidEndRange","PriceRangesList","PriceRanges","priceRange","priceRanges","priceRangeItem","GeneralRates","UpdateTraderRateDialog","TraderRateListItem","TraderRate","OnTraderRateDeleted","OnTraderRateUpdated","AddTraderRateDialog","ValidUsername","TraderRatesList","AllTraderRates","TraderRates","allTraderRates","filteredTraderRates","traderRate","traderRates","traderRateItem","FeeRates","PayProofDialog","PayDetailsDialog","TradersBillListItem","TraderPayProof","TraderPayDetails","TradersBillsList","AllBills","allBills","filteredBills","TradersBills","DriversBillListItem","DriverPayProof","DriverPayDetails","DriversBillsList","DriversBills","RowData","toLocaleDateString","PaymentMethod","RecipientAmount","ChargedAmount","AccountStatementData","AccountStatement","TotalRecipientAmount","TotalChargedAmount","TotalAmount","OnSearch","TraderAccountStatement","traderAccountStatement","TraderAccountStatementBrowser","SearchAccountStatement","TraderAccountStatements","AmountEarned","AmountCharged","NetAmount","DriverAccountStatement","driverAccountStatement","DriverAccountStatementBrowser","DriverAccountStatements","Transaction","TruckNumber","TraderBillNumber","TraderBillPaid","TraderPaymentMethod","DriverBillNumber","DriverBillPaid","DriverPaymentMethod","Earned","Charged","transportCompany","TransportCompany","netAmount","netEarned","netCharged","Transactions","transaction","InternalNumber","CommercialRegisterNumber","ResponsibleAccountStatement","responsibleAccountStatement","ResponsibleAccountStatementBrowser","ResponsibleAccountStatements","UserAccountStatements","Payee","PayeeType","accountStatement","FinancialAccounts","AdministratorsDashboard","OnCertificateDeleted","OnCertificateUpdated","updatedCertificate","TransportCompanyResponsible","TruckMap","LocateTruckDialog","locateTruck","LocateTruck","TruckListItem","DriverDialog","TrucksList","Trucks","TruckList","DriverReviewContainer","UserDetailsContainer","TruckJobDetails","JobDetails","TruckJobDetailsDialog","searchTruckJobDetails","SearchTruckJobDetails","jobDetails","TruckJobsRow","TruckJob","TruckJobsTable","TruckJobs","truckJob","SearchTruckJobsDialog","StartDate","EndDate","StartPrice","EndPrice","filteredTruckJobs","slice","indicesToRemove","startDate","splice","endDate","searchTruckJobs","truckNumber","AllTruckJobs","ShowingSearchResults","SearchTruckJobs","truckJobs","TruckJobsBrowser","AccountStatementRow","AccountStatementTable","TCResponsibleAccountStatement","tCResponsibleAccountStatement","SearchTransactionsDialog","filteredTransactions","searchTruckAccountStatement","AllTransactions","SearchTruckAccountStatement","TruckAccountStatement","transactions","truckAccountStatement","TruckAccountStatementBrowser","TrucksAccountStatements","TransportCompanyResponsiblesDashboard","BackToTop","right","bottom","Footer","asp-area","asp-controller","asp-action","App","basename","exact","path","component","Congratulations","ReactDOM","render","document","getElementById","module","exports","USER_TOKEN","USER_NOT_FOUND","INVALID_PASSWORD","STRIPE_SECRET_KEY"],"mappings":"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","file":"static/js/main.7eade15b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Strings from \"../../res/strings\"\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DriverLoggedIn: false,\r\n            ShowDashboardButton: false\r\n        };\r\n\r\n        this.logOut = this.logOut.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    logOut = event => {\r\n        event.preventDefault();\r\n\r\n        if (localStorage.userToken) {\r\n            localStorage.removeItem(\"userToken\");\r\n        }\r\n        else if (localStorage.Token) {\r\n            localStorage.removeItem(\"Token\");\r\n        }\r\n\r\n        this.props.history.push(`/login`);\r\n    }\r\n\r\n    render() {\r\n        let token;\r\n        let dashboardRoute;\r\n\r\n        if (localStorage.Token) {\r\n            token = jwt_decode(localStorage.Token);\r\n\r\n            if (token.DriverID) {\r\n                dashboardRoute = \"/drivers\";\r\n            }\r\n            else if (token.TraderID) {\r\n                dashboardRoute = \"/traders\";\r\n            }\r\n            else if (token.AdministratorID) {\r\n                dashboardRoute = \"/administrators\";\r\n            }\r\n            else if (token.TransportCompanyResponsibleID) {\r\n                dashboardRoute = \"/transportCompanyResponsibles\";\r\n            }\r\n            else {\r\n                dashboardRoute = \"/login\";\r\n            }\r\n        }\r\n\r\n        const loginRegisterLinks = <ul className=\"nav navbar-nav navbar-right\">\r\n            <li>\r\n                <Link to=\"/register\">Register</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/login\"\r\n                    onClick={() => {\r\n                        this.setState({\r\n                            ShowDashboardButton: false\r\n                        });\r\n                    }}>Login</Link>\r\n            </li>\r\n        </ul>;\r\n\r\n        const userLinks = <ul className=\"nav navbar-nav navbar-right\">\r\n            {this.state.ShowDashboardButton && \r\n                <li>\r\n                <Link to={dashboardRoute}\r\n                    onClick={() => {\r\n                        this.setState({\r\n                            ShowDashboardButton: false\r\n                        });\r\n                    }}>Dashboard</Link>\r\n                </li>}\r\n            <li>\r\n                <Link to=\"\" onClick={this.logOut.bind(this)}>Logout</Link>\r\n            </li>\r\n        </ul>;\r\n\r\n        return (\r\n            <header>\r\n                <nav className=\"navbar navbar-default\">\r\n                    <div className=\"navbar-local color-accent theme-dark\">\r\n                        <div className=\"container\">\r\n                            <div className=\"navbar-header\">\r\n                                <button type=\"button\" className=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-2\">\r\n                                    <span className=\"sr-only\">Toggle navigation</span>\r\n                                    <i className=\"glyph glyph-hamburger\"></i>\r\n                                </button>\r\n                                <Link to=\"/\" className=\"navbar-brand\"\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            ShowDashboardButton: true\r\n                                        });\r\n                                    }}>{Strings.APP_NAME.toUpperCase()}</Link>\r\n                            </div>\r\n                            <div className=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-2\">\r\n                                <ul className=\"nav navbar-nav\"></ul>\r\n                                {localStorage.Token ? userLinks : loginRegisterLinks}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n        );\r\n    }\r\n};\r\n\r\nexport default withRouter(Header);","/// <reference path=\".js\" />\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n        return <section>\r\n            <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#202020\" }}>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                            <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                alt=\"truck.png\" src=\"./images/truck.png\" data-source-index=\"2\" />\r\n                        </div>\r\n                        <div class=\"col-md-12 col-md-pull-12\">\r\n                            <div class=\"type-h3\" style={{ color: \"#008575\", }}>Weclome to Naqel</div>\r\n                            <div class=\"type-sh3\" style={{ color: \"#949496\", }}>Transport Services On-The-Go</div>\r\n                            <p style={{ color: \"#D1D2D4\", }}>Welcome to Naqel! If you are a trader or a broker, and you want to publish job opportunities for drivers nearby, well, you are on the right place. Naqel is a mediator among traders, brokers and drivers, and provides intuitive and secure way to get transport services.</p>\r\n                            <p style={{ color: \"#D1D2D4\", }}>Not a Trader or a Broker? No worries! Naqel provides services for drivers too. If you are a driver, and you are searching for job opportunities, you are just one step away. Create your account on our Web Service, and we will notify you job oppprtunities on your personal account.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#16171F\" }}>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                            <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                alt=\"oath.png\" src=\"./images/oath.png\" data-source-index=\"2\" />\r\n                        </div>\r\n                        <div class=\"col-md-12 col-md-pull-12\">\r\n                            <div class=\"type-h3\" style={{ color: \"#008575\", }}>Privacy</div>\r\n                            <div class=\"type-sh3\" style={{ color: \"#949496\", }}>Your Privacy is Important to Us</div>\r\n                            <p style={{ color: \"#D1D2D4\", }}>Naqel's Privacy Statement describes the types of data we collect from you, how we use your data, and the legal bases we have to process your data. The Privacy Statement also describes how Naqel uses your content, which is information submitted by you to Naqel via the Services.</p>\r\n                            <p style={{ color: \"#D1D2D4\", }}>Where processing is based on consent and to the extent permitted by law, by agreeing to these Terms, you consent to Naqel's collection, use and disclosure of your content and data as described in the privacy statement.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"jumbotron theme-alt\" style={{ width: \"100%\", backgroundColor: \"#00201C\" }}>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                            <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                alt=\"account.png\" src=\"./images/account.png\" data-source-index=\"2\" />\r\n                        </div>\r\n                        <div class=\"col-md-12 col-md-pull-12\">\r\n                            <div class=\"type-h3\" style={{ color: \"#008575\", }}>User Accounts</div>\r\n                            <div class=\"type-sh3\" style={{ color: \"#949496\", }}>Signup and/or Login</div>\r\n                            <p style={{ color: \"#D1D2D4\", }}>Do you want to use our services right now? No Worries! Just signup by filling up precise forms and/or login to your profile. Drivers can view job opprotunities on their dashboards. Traders and/or Brokers can post job requests for freight from thier accounts.</p>\r\n                            <div class=\"btn-group\">\r\n                                <Link to=\"/register\" class=\"btn btn-secondary\">Signup</Link>\r\n                                <Link to=\"/login\" class=\"btn btn-primary\">Login</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"jumbotron theme-dark\" style={{ backgroundColor: \"#202020\", height: \"100vh\" }}>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-24 text-center\">\r\n                            <div class=\"row section-gallery\">\r\n                                <div class=\"col-md-8\">\r\n                                    <h4 style={{ fontWeight: \"bold\", }}>LOCATION</h4>\r\n                                    <div class=\"type-p1 text-center\">\r\n                                        Wah\r\n                                            <br />\r\n                                            Punjab, Pakistan\r\n                                            </div>\r\n                                </div>\r\n                                <div class=\"col-md-8\">\r\n                                    <h4 style={{ fontWeight: \"bold\", }}>AROUND THE GLOBE</h4>\r\n                                    <div class=\"type-p1 text-center text-light\" style={{ color: \"#25AAE1\", }}>\r\n                                        <a class=\"fa\" href=\"#\">\r\n                                            <i class=\"fab fa-fw fa-facebook-f\"></i>\r\n                                        </a>\r\n                                        <a class=\"fa\" href=\"#\">\r\n                                            <i class=\"fab fa-fw fa-instagram\"></i>\r\n                                        </a>\r\n                                        <a class=\"fa\" href=\"#\">\r\n                                            <i class=\"fab fa-fw fa-twitter\"></i>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-8\">\r\n                                    <h4 style={{ fontWeight: \"bold\", }}>CONTACT US</h4>\r\n                                    <div class=\"type-p1 text-center\">Naqel is created by Core Infinite. For more information, visit <a style={{ textDecoration: \"none\", color: \"#008575\", }} href=\"#\" class=\"color-type-accent\">coreinfinte.com</a></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Landing;","import axios from \"axios\";\r\nimport Strings from \"../../res/strings\";\r\n\r\n// POST: Register\r\nexport const registerDriver = async newCredentials => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/register`, {\r\n        Username: newCredentials.Username,\r\n        Email: newCredentials.Email,\r\n        Password: newCredentials.Password,\r\n        RegisterAs: newCredentials.RegisterAs,\r\n    }).then(response => {\r\n        if (response.data.localeCompare(Strings.USERNAME_OR_EMAIL_TAKEN) === 0) {\r\n            return response.data;\r\n        }\r\n        else {\r\n            localStorage.setItem(\"newCredentialsToken\", response.data);\r\n            return response.data;\r\n        }\r\n    });\r\n};\r\n\r\n// POST: AccountSetup\r\nexport const setupDriverAccount = async newDriver => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/accountSetup`, {\r\n        Username: newDriver.Username,\r\n        Email: newDriver.Email,\r\n        Password: newDriver.Password,\r\n        RegisterAs: newDriver.RegisterAs,\r\n        FirstName: newDriver.FirstName,\r\n        LastName: newDriver.LastName,\r\n        DateOfBirth: newDriver.DateOfBirth,\r\n        Gender: newDriver.Gender,\r\n        Address: newDriver.Address,\r\n        PhoneNumber: newDriver.PhoneNumber,\r\n        Nationality: newDriver.Nationality,\r\n    }).then(response => {\r\n        console.log(response.data);\r\n    });\r\n};\r\n\r\n// POST: Login\r\nexport const loginDriver = async driver => {\r\n    console.log(`Sending HTTP POST request on ${Strings.NAQEL_SERVER}drivers/login`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/login`, {\r\n        EmailOrUsername: driver.EmailOrUsername,\r\n        Password: driver.Password,\r\n        SignInAs: driver.SignInAs,\r\n    }).then(response => {\r\n        return response.data;\r\n    })\r\n};\r\n\r\n// GET: GetData\r\nexport const getData = async request => {\r\n    console.log(`Sending GET request to ${Strings.NAQEL_SERVER}drivers/get${request.Get}...`);\r\n    return await axios.get(`${Strings.NAQEL_SERVER}drivers/get${request.Get}`, {\r\n        params: request.Params,\r\n        headers: { Authorization: `JWT ${request.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UploadDriverProfilePhoto\r\nexport const uploadDriverProfilePhoto = async driverProfilePhoto => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/uploadDriverProfilePhoto`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/uploadDriverProfilePhoto`, {\r\n        PhotoURL: driverProfilePhoto.PhotoURL,\r\n        FileName: driverProfilePhoto.FileName\r\n    }, {\r\n        headers: { Authorization: `JWT ${driverProfilePhoto.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: GeneralSettings\r\nexport const generalSettings = async updatedDriver => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/generalSettings`, {\r\n        FirstName: updatedDriver.FirstName,\r\n        LastName: updatedDriver.LastName,\r\n        Address: updatedDriver.Address,\r\n        PhoneNumber: updatedDriver.PhoneNumber,\r\n        Gender: updatedDriver.Gender,\r\n        Nationality: updatedDriver.Nationality,\r\n        DateOfBirth: updatedDriver.DateOfBirth,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedDriver.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateUsername\r\nexport const validateUsername = async username => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/validateUsername`, {\r\n        Username: username\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateEmail\r\nexport const validateEmail = async email => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/validateEmail`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POSTL SendCode\r\nexport const sendCode = async email => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}users/sendCode...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/sendCode`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UsernameAndEmailSettings\r\nexport const usernameAndEmailSettings = async updatedDriver => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/usernameAndEmailSettings...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/usernameAndEmailSettings`, {\r\n        Username: updatedDriver.Username,\r\n        Email: updatedDriver.Email\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedDriver.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidatePassword\r\nexport const validatePassword = async passwordPackage => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/validatePassword`, {\r\n        Password: passwordPackage.Password\r\n    }, {\r\n        headers: { Authorization: `JWT ${passwordPackage.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: PasswordSettings\r\nexport const passwordSettings = async updatedDriver => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/passwordSettings`, {\r\n        Password: updatedDriver.Password,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedDriver.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddTruck\r\nexport const addTruck = async newTruck => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addTruck...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addTruck`, {\r\n        TransportCompanyResponsibleID: newTruck.TransportCompanyResponsibleID,\r\n        PlateNumber: newTruck.PlateNumber,\r\n        Owner: newTruck.Owner,\r\n        ProductionYear: newTruck.ProductionYear,\r\n        Brand: newTruck.Brand,\r\n        Model: newTruck.Model,\r\n        Type: newTruck.Type,\r\n        MaximumWeight: newTruck.MaximumWeight,\r\n        PhotoURL: newTruck.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTruck.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UpdateTruckPhoto\r\nexport const updateTruckPhoto = async updatedTruck => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateTruckPhoto...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateTruckPhoto`, {\r\n        PhotoURL: updatedTruck.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTruck.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UpdateTruck\r\nexport const updateTruck = async updatedTruck => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateTruck...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateTruck`, {\r\n        TransportCompanyResponsibleID: updatedTruck.TransportCompanyResponsibleID,\r\n        PlateNumber: updatedTruck.PlateNumber,\r\n        Owner: updatedTruck.Owner,\r\n        ProductionYear: updatedTruck.ProductionYear,\r\n        Brand: updatedTruck.Brand,\r\n        Model: updatedTruck.Model,\r\n        Type: updatedTruck.Type,\r\n        MaximumWeight: updatedTruck.MaximumWeight\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTruck.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deleteTruck\r\nexport const deleteTruck = async discardedTruck => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteTruck...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteTruck`, {\r\n        headers: { Authorization: `JWT ${discardedTruck.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddTrailer\r\nexport const addTrailer = async newTrailer => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addTrailer...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addTrailer`, {\r\n        MaximumWeight: newTrailer.MaximumWeight,\r\n        PhotoURL: newTrailer.PhotoURL,\r\n        Type: newTrailer.Type\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTrailer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteTrailer\r\nexport const deleteTrailer = async discardedTrailer => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteTrailer...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteTrailer`, {\r\n        headers: { Authorization: `JWT ${discardedTrailer.Token}` },\r\n        data: { TrailerID: discardedTrailer.TrailerID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateTrailer\r\nexport const updateTrailer = updatedTrailer => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateTrailer...`);\r\n    return axios.post(`${Strings.NAQEL_SERVER}drivers/updateTrailer`, {\r\n        TrailerID: updatedTrailer.TrailerID,\r\n        MaximumWeight: updatedTrailer.MaximumWeight,\r\n        PhotoURL: updatedTrailer.PhotoURL,\r\n        Type: updatedTrailer.Type\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTrailer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addDrivingLicence\r\nexport const addDrivingLicence = async newDrivingLicence => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addDrivingLicence...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addDrivingLicence`, {\r\n        LicenceNumber: newDrivingLicence.LicenceNumber,\r\n        Type: newDrivingLicence.Type,\r\n        ReleaseDate: newDrivingLicence.ReleaseDate,\r\n        ExpiryDate: newDrivingLicence.ExpiryDate,\r\n        PhotoURL: newDrivingLicence.PhotoURL,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newDrivingLicence.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateDrivingLicence\r\nexport const updateDrivingLicence = async updatedDrivingLicence => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateDrivingLicence...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateDrivingLicence`, {\r\n        LicenceNumber: updatedDrivingLicence.LicenceNumber,\r\n        Type: updatedDrivingLicence.Type,\r\n        ReleaseDate: updatedDrivingLicence.ReleaseDate,\r\n        ExpiryDate: updatedDrivingLicence.ExpiryDate,\r\n        PhotoURL: updatedDrivingLicence.PhotoURL,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedDrivingLicence.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteDrivingLicence\r\nexport const deleteDrivingLicence = async discardedDrivingLicence => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteDrivingLicence...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteDrivingLicence`, {\r\n            headers: { Authorization: `JWT ${discardedDrivingLicence.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addEntryExitCard\r\nexport const addEntryExitCard = async newEntryExitCard => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addEntryExitCard...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addEntryExitCard`, {\r\n        EntryExitNumber: newEntryExitCard.EntryExitNumber,\r\n        Type: newEntryExitCard.Type,\r\n        ReleaseDate: newEntryExitCard.ReleaseDate,\r\n        NumberOfMonths: newEntryExitCard.NumberOfMonths,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newEntryExitCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateEntryExiCard\r\nexport const updateEntryExitCard = async updatedEntryExitCard => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateEntryExitCard...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateEntryExitCard`, {\r\n        EntryExitNumber: updatedEntryExitCard.EntryExitNumber,\r\n        Type: updatedEntryExitCard.Type,\r\n        ReleaseDate: updatedEntryExitCard.ReleaseDate,\r\n        NumberOfMonths: updatedEntryExitCard.NumberOfMonths,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedEntryExitCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteEntryExitCard\r\nexport const deleteEntryExitCard = async discardedEntryExitCard => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteEntryExitCard...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteEntryExitCard`, {\r\n        headers: { Authorization: `JWT ${discardedEntryExitCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addIdentityCard\r\nexport const addIdentityCard = async newIdentityCard => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addIdentityCard...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addIdentityCard`, {\r\n        Token: newIdentityCard.Token,\r\n        IDNumber: newIdentityCard.IDNumber,\r\n        PhotoURL: newIdentityCard.PhotoURL,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateIdentityCard\r\nexport const updateIdentityCard = async updatedIdentityCard => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateIdentityCard...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateIdentityCard`, {\r\n        Token: updatedIdentityCard.Token,\r\n        IDNumber: updatedIdentityCard.IDNumber,\r\n        PhotoURL: updatedIdentityCard.PhotoURL,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteIdentityCard\r\nexport const deleteIdentityCard = async discardedIdentityCard => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteIdentityCard...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteIdentityCard`, {\r\n        headers: { Authorization: `JWT ${discardedIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addPermitLicence\r\nexport const addPermitLicence = async newPermitLicence => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addPermitLicence...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addPermitLicence`, {\r\n        PermitNumber: newPermitLicence.PermitNumber,\r\n        ExpiryDate: newPermitLicence.ExpiryDate,\r\n        PhotoURL: newPermitLicence.PhotoURL,\r\n        Code: newPermitLicence.Code,\r\n        Place: newPermitLicence.Place\r\n    }, {\r\n        headers: { Authorization: `JWT ${newPermitLicence.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deletePermitLicence\r\nexport const deletePermitLicence = async discardedPermitLicence => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deletePermitLicence...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deletePermitLicence`, {\r\n        headers: { Authorization: `JWT ${discardedPermitLicence.Token}` },\r\n        data: { PermitLicenceID: discardedPermitLicence.PermitLicenceID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updatePermitLicence\r\nexport const updatePermitLicence = async updatedPermitLicence => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updatePermitLicence...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updatePermitLicence`, {\r\n        PermitLicenceID: updatedPermitLicence.PermitLicenceID,\r\n        PermitNumber: updatedPermitLicence.PermitNumber,\r\n        ExpiryDate: updatedPermitLicence.ExpiryDate,\r\n        PhotoURL: updatedPermitLicence.PhotoURL,\r\n        Code: updatedPermitLicence.Code,\r\n        Place: updatedPermitLicence.Place\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedPermitLicence.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addJobRequest\r\nexport const addJobRequest = async newJobRequest => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addJobRequest...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addJobRequest`, {\r\n        LoadingPlace: newJobRequest.LoadingPlace,\r\n        LoadingLat: newJobRequest.LoadingLat,\r\n        LoadingLng: newJobRequest.LoadingLng,\r\n        UnloadingPlace: newJobRequest.UnloadingPlace,\r\n        UnloadingLat: newJobRequest.UnloadingLat,\r\n        UnloadingLng: newJobRequest.UnloadingLng,\r\n        TripType: newJobRequest.TripType,\r\n        Price: newJobRequest.Price,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newJobRequest.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateJobRequest\r\nexport const updateJobRequest = async updatedJobRequest => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/updateJobRequest...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/updateJobRequest`, {\r\n        JobRequestID: updatedJobRequest.JobRequestID,\r\n        LoadingPlace: updatedJobRequest.LoadingPlace,\r\n        LoadingLat: updatedJobRequest.LoadingLat,\r\n        LoadingLng: updatedJobRequest.LoadingLng,\r\n        UnloadingPlace: updatedJobRequest.UnloadingPlace,\r\n        UnloadingLat: updatedJobRequest.UnloadingLat,\r\n        UnloadingLng: updatedJobRequest.UnloadingLng,\r\n        TripType: updatedJobRequest.TripType,\r\n        Price: updatedJobRequest.Price,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedJobRequest.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteJobRequest\r\nexport const deleteJobRequest = async discardedJobRequest => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteJobRequest...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteJobRequest`, {\r\n        headers: { Authorization: `JWT ${discardedJobRequest.Token}` },\r\n        data: { JobRequestID: discardedJobRequest.JobRequestID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addDriverRequest\r\nexport const addDriverRequest = async newDriverRequest => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addDriverRequest...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addDriverRequest`, {\r\n        JobOfferID: newDriverRequest.JobOfferID,\r\n        Price: newDriverRequest.Price\r\n    }, {\r\n        headers: { Authorization: `JWT ${newDriverRequest.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deleteDriverRequest\r\nexport const deleteDriverRequest = async discardedDriverRequest => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteDriverRequest...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteDriverRequest`, {\r\n        headers: { Authorization: `JWT ${discardedDriverRequest.Token}` },\r\n        data: { JobOfferID: discardedDriverRequest.JobOfferID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addOnGoingJob\r\nexport const addOnGoingJob = async newOnGoingJob => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addOnGoingJob...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addOnGoingJob`, {\r\n        TraderRequestID: newOnGoingJob.TraderRequestID\r\n    }, {\r\n        headers: { Authorization: `JWT ${newOnGoingJob.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addObjectionReason\r\nexport const addObjectionReason = async newObjectionReason => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addObjectionReason...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addObjectionReason`, {\r\n        Reason: newObjectionReason.Reason\r\n    }, {\r\n        headers: { Authorization: `JWT ${newObjectionReason.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addJobObjection\r\nexport const addJobObjection = async newJobObjection => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/addJobObjection...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/addJobObjection`, {\r\n        OnGoingJobID: newJobObjection.OnGoingJobID,\r\n        Reason: newJobObjection.Reason,\r\n        Comment: newJobObjection.Comment\r\n    }, {\r\n        headers: { Authorization: `JWT ${newJobObjection.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: finishJob\r\nexport const finishJob = async finishedJob => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/finishJob...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/finishJob`, {}, {\r\n        headers: { Authorization: `JWT ${finishedJob.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: toggleSelectTraderRequest\r\nexport const toggleSelectTraderRequest = async toggleSelectedTraderRequest => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/toggleSelectTraderRequest...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/toggleSelectTraderRequest`, {\r\n        TraderRequestID: toggleSelectedTraderRequest.TraderRequestID,\r\n        Selected: toggleSelectedTraderRequest.Selected\r\n    }, {\r\n        headers: { Authorization: `JWT ${toggleSelectedTraderRequest.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: approveTraderPayProof\r\nexport const approveTraderPayProof = async approvedTraderPayProof => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}drivers/approveTraderPayProof...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}drivers/approveTraderPayProof`, {\r\n        TraderPayProofID: approvedTraderPayProof.TraderPayProofID\r\n    }, {\r\n        headers: { Authorization: `JWT ${approvedTraderPayProof.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addDriverPayProof\r\nexport const addDriverPayProof = newDriverPayProof => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}drivers/addDriverPayProof`, {\r\n        DriverBillID: newDriverPayProof.DriverBillID,\r\n        PhotoURL: newDriverPayProof.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${newDriverPayProof.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deleteDriverPayProof\r\nexport const deleteDriverPayProof = async discardedDriverPayProof => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteDriverPayProof...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteDriverPayProof`, {\r\n        headers: { Authorization: `JWT ${discardedDriverPayProof.Token}` },\r\n        data: { DriverPayProofID: discardedDriverPayProof.DriverPayProofID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addQuestion\r\nexport const addQuestion = newQuestion => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}drivers/addQuestion`, {\r\n        Question: newQuestion.Question\r\n    }, {\r\n        headers: { Authorization: `JWT ${newQuestion.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deleteQuestion\r\nexport const deleteQuestion = async discardedQuestion => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}drivers/deleteQuestion...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}drivers/deleteQuestion`, {\r\n        headers: { Authorization: `JWT ${discardedQuestion.Token}` },\r\n        data: { DriverQuestionID: discardedQuestion.DriverQuestionID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: getClientSecret\r\nexport const getClientSecret = newClientSecret => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}drivers/getClientSecret`, {\r\n        Amount: newClientSecret.Amount\r\n    }, {\r\n        headers: { Authorization: `JWT ${newClientSecret.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addDriverPayDetails\r\nexport const addDriverPayDetails = newDriverPayDetails => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}drivers/addDriverPayDetails`, {\r\n        DriverBillID: newDriverPayDetails.DriverBillID,\r\n        OwnerName: newDriverPayDetails.OwnerName,\r\n        OwnerEmail: newDriverPayDetails.OwnerEmail,\r\n        CardType: newDriverPayDetails.CardType\r\n    }, {\r\n        headers: { Authorization: `JWT ${newDriverPayDetails.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};","import axios from \"axios\";\r\nimport Strings from \"../../res/strings\";\r\n\r\n// POST: Register\r\nexport const registerTrader = async newCredentials => {\r\n    console.log(\"I'm in registerTrader axios...\");\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/register`, {\r\n        Username: newCredentials.Username,\r\n        Email: newCredentials.Email,\r\n        Password: newCredentials.Password,\r\n        RegisterAs: newCredentials.RegisterAs,\r\n    }).then(res => {\r\n        if (res.data.localeCompare(Strings.USERNAME_OR_EMAIL_TAKEN) === 0) {\r\n            return res.data;\r\n        }\r\n        else {\r\n            localStorage.setItem(\"newCredentialsToken\", res.data);\r\n            return res.data;\r\n        }\r\n    });\r\n};\r\n\r\n// POST: AccountSetup\r\nexport const setupTraderAccount = async newTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/accountSetup`, {\r\n        Username: newTrader.Username,\r\n        Email: newTrader.Email,\r\n        Password: newTrader.Password,\r\n        RegisterAs: newTrader.RegisterAs,\r\n        FirstName: newTrader.FirstName,\r\n        LastName: newTrader.LastName,\r\n        DateOfBirth: newTrader.DateOfBirth,\r\n        Gender: newTrader.Gender,\r\n        Address: newTrader.Address,\r\n        PhoneNumber: newTrader.PhoneNumber,\r\n        Nationality: newTrader.Nationality,\r\n    }).then(res => {\r\n        console.log(res.data);\r\n    });\r\n};\r\n\r\n// POST: Login\r\nexport const loginTrader = async trader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/login`, {\r\n        EmailOrUsername: trader.EmailOrUsername,\r\n        Password: trader.Password\r\n    }).then(response => {\r\n        return response.data;\r\n    }).catch(error => {\r\n        console.log(error);\r\n    });\r\n};\r\n\r\n// GET: GetData\r\nexport const getData = async request => {\r\n    console.log(`Sending GET request to ${Strings.NAQEL_SERVER}traders/get${request.Get}...`);\r\n    return await axios.get(`${Strings.NAQEL_SERVER}traders/get${request.Get}`, {\r\n        params: request.Params,\r\n        headers: { Authorization: `JWT ${request.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// GET: GetPublicData\r\nexport const getPublicData = async request => {\r\n    console.log(`Sending GET request to ${Strings.NAQEL_SERVER}users/get${request.Get}...`);\r\n    return await axios.get(`${Strings.NAQEL_SERVER}users/get${request.Get}`, {\r\n        params: request.Params\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UploadDriverProfilePhoto\r\nexport const uploadTraderProfilePhoto = async traderProfilePhoto => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/uploadTraderProfilePhoto`, {\r\n        PhotoURL: traderProfilePhoto.PhotoURL,\r\n        FileName: traderProfilePhoto.FileName\r\n    }, {\r\n        headers: { Authorization: `JWT ${traderProfilePhoto.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: GeneralSettings\r\nexport const generalSettings = async updatedTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/generalSettings`, {\r\n        FirstName: updatedTrader.FirstName,\r\n        LastName: updatedTrader.LastName,\r\n        Address: updatedTrader.Address,\r\n        PhoneNumber: updatedTrader.PhoneNumber,\r\n        Gender: updatedTrader.Gender,\r\n        Nationality: updatedTrader.Nationality,\r\n        DateOfBirth: updatedTrader.DateOfBirth,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTrader.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateUsername\r\nexport const validateUsername = async username => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/validateUsername`, {\r\n        Username: username\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateEmail\r\nexport const validateEmail = async email => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/validateEmail`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: SendCode\r\nexport const sendCode = async email => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/sendCode`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UsernameAndEmailSettings\r\nexport const usernameAndEmailSettings = async updatedTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/usernameAndEmailSettings`, {\r\n        Username: updatedTrader.Username,\r\n        Email: updatedTrader.Email\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTrader.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidatePassword\r\nexport const validatePassword = async passwordPackage => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/validatePassword`, {\r\n        Password: passwordPackage.Password\r\n    }, {\r\n        headers: { Authorization: `JWT ${passwordPackage.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: PasswordSettings\r\nexport const passwordSettings = async updatedTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/passwordSettings`, {\r\n        Password: updatedTrader.Password,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTrader.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addIdentityCard\r\nexport const addIdentityCard = newIdentityCard => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/addIdentityCard`, {\r\n        IDNumber: newIdentityCard.IDNumber,\r\n        PhotoURL: newIdentityCard.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${newIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateIdentityCard\r\nexport const updateIdentityCard = updatedIdentityCard => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/updateIdentityCard`, {\r\n        IDNumber: updatedIdentityCard.IDNumber,\r\n        PhotoURL: updatedIdentityCard.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteIdentityCard\r\nexport const deleteIdentityCard = discardedIdentityCard => {\r\n    return axios.delete(`${Strings.NAQEL_SERVER}traders/deleteIdentityCard`, {\r\n        headers: { Authorization: `JWT ${discardedIdentityCard.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addCommercialRegisterCertificate\r\nexport const addCommercialRegisterCertificate = newCommercialRegisterCertificate => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/addCommercialRegisterCertificate`, {\r\n        Type: newCommercialRegisterCertificate.Type,\r\n        PhotoURL: newCommercialRegisterCertificate.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${newCommercialRegisterCertificate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateCommercialRegisterCertificate\r\nexport const updateCommercialRegisterCertificate = updatedCommercialRegisterCertificate => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/updateCommercialRegisterCertificate`, {\r\n        Number: updatedCommercialRegisterCertificate.Number,\r\n        Type: updatedCommercialRegisterCertificate.Type,\r\n        PhotoURL: updatedCommercialRegisterCertificate.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedCommercialRegisterCertificate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteCommercialRegisterCertificate\r\nexport const deleteCommercialRegisterCertificate = discardedCommercialRegisterCertificate => {\r\n    return axios.delete(`${Strings.NAQEL_SERVER}traders/deleteCommercialRegisterCertificate`, {\r\n        headers: { Authorization: `JWT ${discardedCommercialRegisterCertificate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addJobOffer\r\nexport const addJobOffer = async newJobOffer => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addJobOffer`, {\r\n        TripType: newJobOffer.TripType,\r\n        CargoType: newJobOffer.CargoType,\r\n        CargoWeight: newJobOffer.CargoWeight,\r\n        LoadingPlace: newJobOffer.LoadingPlace,\r\n        LoadingLat: newJobOffer.LoadingLat,\r\n        LoadingLng: newJobOffer.LoadingLng,\r\n        UnloadingPlace: newJobOffer.UnloadingPlace,\r\n        UnloadingLat: newJobOffer.UnloadingLat,\r\n        UnloadingLng: newJobOffer.UnloadingLng,\r\n        LoadingDate: newJobOffer.LoadingDate,\r\n        LoadingTime: newJobOffer.LoadingTime,\r\n        EntryExit: newJobOffer.EntryExit,\r\n        Price: newJobOffer.Price,\r\n        AcceptedDelay: newJobOffer.AcceptedDelay,\r\n        JobOfferType: newJobOffer.JobOfferType\r\n    }, {\r\n        headers: { Authorization: `JWT ${newJobOffer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateJobOffer\r\nexport const updateJobOffer = async updatedJobOffer => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/updateJobOffer`, {\r\n        JobOfferID: updatedJobOffer.JobOfferID,\r\n        TripType: updatedJobOffer.TripType,\r\n        CargoType: updatedJobOffer.CargoType,\r\n        CargoWeight: updatedJobOffer.CargoWeight,\r\n        LoadingPlace: updatedJobOffer.LoadingPlace,\r\n        LoadingLat: updatedJobOffer.LoadingLat,\r\n        LoadingLng: updatedJobOffer.LoadingLng,\r\n        UnloadingPlace: updatedJobOffer.UnloadingPlace,\r\n        UnloadingLat: updatedJobOffer.UnloadingLat,\r\n        UnloadingLng: updatedJobOffer.UnloadingLng,\r\n        LoadingDate: updatedJobOffer.LoadingDate,\r\n        LoadingTime: updatedJobOffer.LoadingTime,\r\n        EntryExit: updatedJobOffer.EntryExit,\r\n        Price: updatedJobOffer.Price,\r\n        AcceptedDelay: updatedJobOffer.AcceptedDelay,\r\n        JobOfferType: updatedJobOffer.JobOfferType\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedJobOffer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deleteJobOffer\r\nexport const deleteJobOffer = async discardedJobOffer => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}traders/deleteJobOffer...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}traders/deleteJobOffer`, {\r\n        headers: { Authorization: `JWT ${discardedJobOffer.Token}` },\r\n        data: { JobOfferID: discardedJobOffer.JobOfferID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addATraderRequest\r\nexport const addTraderRequest = async newTraderReqeust => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/addTraderRequest...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addTraderRequest`, {\r\n        JobRequestID: newTraderReqeust.JobRequestID,\r\n        CargoType: newTraderReqeust.CargoType,\r\n        CargoWeight: newTraderReqeust.CargoWeight,\r\n        LoadingDate: newTraderReqeust.LoadingDate,\r\n        LoadingTime: newTraderReqeust.LoadingTime,\r\n        EntryExit: newTraderReqeust.EntryExit,\r\n        AcceptedDelay: newTraderReqeust.AcceptedDelay\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTraderReqeust.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deleteTraderRequest\r\nexport const deleteTraderRequest = async discardedTraderRequest => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}traders/deleteTraderRequest...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}traders/deleteTraderRequest`, {\r\n        headers: { Authorization: `JWT ${discardedTraderRequest.Token}` },\r\n        data: { JobRequestID: discardedTraderRequest.JobRequestID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addObjectionReason\r\nexport const addObjectionReason = async newObjectionReason => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/addObjectionReason...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addObjectionReason`, {\r\n        Reason: newObjectionReason.Reason\r\n    }, {\r\n        headers: { Authorization: `JWT ${newObjectionReason.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addJobObjection\r\nexport const addJobObjection = async newJobObjection => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/addJobObjection...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addJobObjection`, {\r\n        OnGoingJobID: newJobObjection.OnGoingJobID,\r\n        Reason: newJobObjection.Reason,\r\n        Comment: newJobObjection.Comment\r\n    }, {\r\n        headers: { Authorization: `JWT ${newJobObjection.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: approveJob\r\nexport const approveJob = async approvedJob => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/approveJob...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/approveJob`, {}, {\r\n        headers: { Authorization: `JWT ${approvedJob.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addDriverReview\r\nexport const addDriverReview = async newDriverReview => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/addDriverReview...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addDriverReview`, {\r\n        CompletedJobID: newDriverReview.CompletedJobID,\r\n        Rating: newDriverReview.Rating,\r\n        Review: newDriverReview.Review\r\n    }, {\r\n        headers: { Authorization: `JWT ${newDriverReview.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addOnGoingJobFromJobOffer\r\nexport const addOnGoingJobFromJobOffer = async newOnGoingJob => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/addOnGoingJobFromJobOffer...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addOnGoingJobFromJobOffer`, {\r\n        DriverRequestID: newOnGoingJob.DriverRequestID,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newOnGoingJob.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addOnGoingJobFromJobRequest\r\nexport const addOnGoingJobFromJobRequest = async newOnGoingJob => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/addOnGoingJobFromJobRequest...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addOnGoingJobFromJobRequest`, {\r\n        TraderRequestID: newOnGoingJob.TraderRequestID,\r\n    }, {\r\n        headers: { Authorization: `JWT ${newOnGoingJob.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addDriverReviewFromOnGoingJob\r\nexport const addDriverReviewFromOnGoingJob = async newDriverReview => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}traders/addDriverReviewFromOnGoingJob...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}traders/addDriverReviewFromOnGoingJob`, {\r\n        OnGoingJobID: newDriverReview.OnGoingJobID,\r\n        Rating: newDriverReview.Rating,\r\n        Review: newDriverReview.Review\r\n    }, {\r\n        headers: { Authorization: `JWT ${newDriverReview.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addTraderPayProof\r\nexport const addTraderPayProof = newTraderPayProof => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/addTraderPayProof`, {\r\n        TraderBillID: newTraderPayProof.TraderBillID,\r\n        PhotoURL: newTraderPayProof.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTraderPayProof.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deleteTraderPayProof\r\nexport const deleteTraderPayProof = async discardedTraderPayProof => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}traders/deleteTraderPayProof...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}traders/deleteTraderPayProof`, {\r\n        headers: { Authorization: `JWT ${discardedTraderPayProof.Token}` },\r\n        data: { TraderPayProofID: discardedTraderPayProof.TraderPayProofID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: getClientSecret\r\nexport const getClientSecret = newClientSecret => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/getClientSecret`, {\r\n        Amount: newClientSecret.Amount\r\n    }, {\r\n        headers: { Authorization: `JWT ${newClientSecret.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: requestSpecialBill\r\nexport const requestSpecialBill = requestedSpecialBill => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/requestSpecialBill`, {\r\n        TraderBillID: requestedSpecialBill.TraderBillID,\r\n        Amount: requestedSpecialBill.Amount\r\n    }, {\r\n        headers: { Authorization: `JWT ${requestedSpecialBill.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addQuestion\r\nexport const addQuestion = newQuestion => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/addQuestion`, {\r\n        Question: newQuestion.Question\r\n    }, {\r\n        headers: { Authorization: `JWT ${newQuestion.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deleteQuestion\r\nexport const deleteQuestion = async discardedQuestion => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}traders/deleteQuestion...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}traders/deleteQuestion`, {\r\n        headers: { Authorization: `JWT ${discardedQuestion.Token}` },\r\n        data: { TraderQuestionID: discardedQuestion.TraderQuestionID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addTraderPayDetails\r\nexport const addTraderPayDetails = newTraderPayDetails => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}traders/addTraderPayDetails`, {\r\n        TraderBillID: newTraderPayDetails.TraderBillID,\r\n        OwnerName: newTraderPayDetails.OwnerName,\r\n        OwnerEmail: newTraderPayDetails.OwnerEmail,\r\n        CardType: newTraderPayDetails.CardType\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTraderPayDetails.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};","import axios from \"axios\";\r\nimport Strings from \"../../res/strings\";\r\n\r\n// POST: Register\r\nexport const registerAdministrator = async newCredentials => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/register`, {\r\n        Username: newCredentials.Username,\r\n        Email: newCredentials.Email,\r\n        Password: newCredentials.Password,\r\n        RegisterAs: newCredentials.RegisterAs,\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AccountSetup\r\nexport const setupAdministratorAccount = async newAdministrator => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/setupAccount`, {\r\n        Username: newAdministrator.Username,\r\n        Email: newAdministrator.Email,\r\n        Password: newAdministrator.Password,\r\n        RegisterAs: newAdministrator.RegisterAs,\r\n        FirstName: newAdministrator.FirstName,\r\n        LastName: newAdministrator.LastName,\r\n        AdministratorSecret: newAdministrator.AdministratorSecret\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: Login\r\nexport const loginAdministrator = async administrator => {\r\n    console.log(`Sending HTTP POST request on ${Strings.NAQEL_SERVER}administrators/login`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/login`, {\r\n        EmailOrUsername: administrator.EmailOrUsername,\r\n        Password: administrator.Password,\r\n        SignInAs: administrator.SignInAs,\r\n    }).then(response => {\r\n        return response.data;\r\n    })\r\n};\r\n\r\n// GET: GetData\r\nexport const getData = async request => {\r\n    console.log(`Sending GET request to ${Strings.NAQEL_SERVER}administrators/get${request.Get}...`);\r\n    return await axios.get(`${Strings.NAQEL_SERVER}administrators/get${request.Get}`, {\r\n        params: request.Params,\r\n        headers: { Authorization: `JWT ${request.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// GET: GetPublicData\r\nexport const getPublicData = async request => {\r\n    console.log(`Sending GET request to ${Strings.NAQEL_SERVER}users/get${request.Get}...`);\r\n    return await axios.get(`${Strings.NAQEL_SERVER}users/get${request.Get}`, {\r\n        params: request.Params\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: uploadProfilePhoto\r\nexport const uploadProfilePhoto = async profilePhoto => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/uploadProfilePhoto`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/uploadProfilePhoto`, {\r\n        PhotoURL: profilePhoto.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${profilePhoto.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: GeneralSettings\r\nexport const generalSettings = async updatedAdministrator => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/generalSettings`, {\r\n        FirstName: updatedAdministrator.FirstName,\r\n        LastName: updatedAdministrator.LastName\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedAdministrator.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateUsername\r\nexport const validateUsername = async username => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/validateUsername`, {\r\n        Username: username\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateEmail\r\nexport const validateEmail = async email => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/validateEmail`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POSTL SendCode\r\nexport const sendCode = async email => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}users/sendCode...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/sendCode`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UsernameAndEmailSettings\r\nexport const usernameAndEmailSettings = async updatedAdministrator => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/usernameAndEmailSettings...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/usernameAndEmailSettings`, {\r\n        Username: updatedAdministrator.Username,\r\n        Email: updatedAdministrator.Email\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedAdministrator.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidatePassword\r\nexport const validatePassword = async passwordPackage => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/validatePassword`, {\r\n        Password: passwordPackage.Password\r\n    }, {\r\n        headers: { Authorization: `JWT ${passwordPackage.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: PasswordSettings\r\nexport const passwordSettings = async updatedAdministrator => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/passwordSettings`, {\r\n        Password: updatedAdministrator.Password,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedAdministrator.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UpdateNaqelSettings\r\nexport const updateNaqelSettings = async updatedNaqelSettings => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/updateNaqelSettings`, {\r\n        Street: updatedNaqelSettings.Street,\r\n        City: updatedNaqelSettings.City,\r\n        Country: updatedNaqelSettings.Country,\r\n        ZIPCode: updatedNaqelSettings.ZIPCode,\r\n        PhoneNumber: updatedNaqelSettings.PhoneNumber,\r\n        Website: updatedNaqelSettings.Website,\r\n        BusinessName: updatedNaqelSettings.BusinessName,\r\n        BankName: updatedNaqelSettings.BankName,\r\n        AccountNumber: updatedNaqelSettings.AccountNumber,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedNaqelSettings.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ActivateDriverAccount\r\nexport const activateDriverAccount = async activatedDriver => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/activateDriverAccount...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/activateDriverAccount`, {\r\n        DriverID: activatedDriver.DriverID\r\n    }, {\r\n        headers: { Authorization: `JWT ${activatedDriver.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: BlockDriverAccount\r\nexport const blockDriverAccount = async blockedDriver => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/blockDriverAccount...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/blockDriverAccount`, {\r\n        DriverID: blockedDriver.DriverID,\r\n        BlockDate: blockedDriver.BlockDate,\r\n        Reason: blockedDriver.Reason\r\n    }, {\r\n        headers: { Authorization: `JWT ${blockedDriver.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UnblockDriverAccount\r\nexport const unblockDriverAccount = async unblockedDriver => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/unblockDriverAccount...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/unblockDriverAccount`, {\r\n        DriverID: unblockedDriver.DriverID,\r\n    }, {\r\n        headers: { Authorization: `JWT ${unblockedDriver.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: SetRefundRate\r\nexport const setRefundRate = async traderRefundRate => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/setRefundRate...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/setRefundRate`, {\r\n        TraderID: traderRefundRate.TraderID,\r\n        RefundRate: traderRefundRate.RefundRate\r\n    }, {\r\n        headers: { Authorization: `JWT ${traderRefundRate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ExonerateTrader\r\nexport const exonerateTrader = async exoneratedTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/exonerateTrader`, {\r\n        TraderID: exoneratedTrader.TraderID,\r\n        ExonerateDate: exoneratedTrader.ExonerateDate,\r\n        Reason: exoneratedTrader.Reason\r\n    }, {\r\n        headers: { Authorization: `JWT ${exoneratedTrader.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ChargeTrader\r\nexport const chargeTrader = async chargedTrader => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/chargeTrader`, {\r\n        TraderID: chargedTrader.TraderID,\r\n    }, {\r\n        headers: { Authorization: `JWT ${chargedTrader.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddTraderObjectionReason\r\nexport const addTraderObjectionReason = async newTraderObjectionReason => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/addTraderObjectionReason...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addTraderObjectionReason`, {\r\n        Reason: newTraderObjectionReason.Reason\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTraderObjectionReason.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: DeleteTraderObjectionReason\r\nexport const deleteTraderObjectionReason = async discardedTraderObjectionReason => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}administrators/deleteTraderObjectionReason...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}administrators/deleteTraderObjectionReason`, {\r\n        headers: { Authorization: `JWT ${discardedTraderObjectionReason.Token}` },\r\n        data: { DriverObjectionReasonID: discardedTraderObjectionReason.DriverObjectionReasonID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: verifyTraderObjectionReason\r\nexport const verifyTraderObjectionReason = async verifiedTraderObjectionReason => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/verifyTraderObjectionReason...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/verifyTraderObjectionReason`, {\r\n        DriverObjectionReasonID: verifiedTraderObjectionReason.DriverObjectionReasonID\r\n    }, {\r\n        headers: { Authorization: `JWT ${verifiedTraderObjectionReason.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddDriverObjectionReason\r\nexport const addDriverObjectionReason = async newDriverObjectionReason => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/addDriverObjectionReason...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addDriverObjectionReason`, {\r\n        Reason: newDriverObjectionReason.Reason\r\n    }, {\r\n        headers: { Authorization: `JWT ${newDriverObjectionReason.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: DeleteDriverObjectionReason\r\nexport const deleteDriverObjectionReason = async discardedDriverObjectionReason => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}administrators/deleteDriverObjectionReason...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}administrators/deleteDriverObjectionReason`, {\r\n        headers: { Authorization: `JWT ${discardedDriverObjectionReason.Token}` },\r\n        data: { DriverObjectionReasonID: discardedDriverObjectionReason.DriverObjectionReasonID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: verifyDriverObjectionReason\r\nexport const verifyDriverObjectionReason = async verifiedDriverObjectionReason => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/verifyDriverObjectionReason...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/verifyDriverObjectionReason`, {\r\n        DriverObjectionReasonID: verifiedDriverObjectionReason.DriverObjectionReasonID\r\n    }, {\r\n        headers: { Authorization: `JWT ${verifiedDriverObjectionReason.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: DiscardObjectionableJob\r\nexport const discardObjectionableJob = async discardedObjectionableJob => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}administrators/discardObjectionableJob...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}administrators/discardObjectionableJob`, {\r\n        headers: { Authorization: `JWT ${discardedObjectionableJob.Token}` },\r\n        data: { OnGoingJobID: discardedObjectionableJob.OnGoingJobID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddDriverAnswer\r\nexport const addDriverAnswer = async driverAnswer => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/addDriverAnswer...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addDriverAnswer`, {\r\n        DriverQuestionID: driverAnswer.DriverQuestionID,\r\n        Answer: driverAnswer.Answer\r\n    }, {\r\n        headers: { Authorization: `JWT ${driverAnswer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddDriverQuestionClass\r\nexport const addDriverQuestionClass = async newDriverQuestionClass => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/addDriverQuestionClass...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addDriverQuestionClass`, {\r\n        Class: newDriverQuestionClass.Class\r\n    }, {\r\n        headers: { Authorization: `JWT ${newDriverQuestionClass.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ClassifyDriverQuestion\r\nexport const classifyDriverQuestion = async classifiedDriverQuestion => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/classifyDriverQuestion...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/classifyDriverQuestion`, {\r\n        DriverQuestionID: classifiedDriverQuestion.DriverQuestionID,\r\n        Class: classifiedDriverQuestion.Class\r\n    }, {\r\n        headers: { Authorization: `JWT ${classifiedDriverQuestion.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddTraderAnswer\r\nexport const addTraderAnswer = async traderAnswer => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/addTraderAnswer...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addTraderAnswer`, {\r\n        TraderQuestionID: traderAnswer.TraderQuestionID,\r\n        Answer: traderAnswer.Answer\r\n    }, {\r\n        headers: { Authorization: `JWT ${traderAnswer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddTraderQuestionClass\r\nexport const addTraderQuestionClass = async newTraderQuestionClass => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/addTraderQuestionClass...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addTraderQuestionClass`, {\r\n        Class: newTraderQuestionClass.Class\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTraderQuestionClass.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ClassifyTraderQuestion\r\nexport const classifyTraderQuestion = async classifiedTraderQuestion => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/classifyTraderQuestion...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/classifyTraderQuestion`, {\r\n        TraderQuestionID: classifiedTraderQuestion.TraderQuestionID,\r\n        Class: classifiedTraderQuestion.Class\r\n    }, {\r\n        headers: { Authorization: `JWT ${classifiedTraderQuestion.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddResponsibleAnswer\r\nexport const addResponsibleAnswer = async responsibleAnswer => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addResponsibleAnswer`, {\r\n        ResponsibleQuestionID: responsibleAnswer.ResponsibleQuestionID,\r\n        Answer: responsibleAnswer.Answer\r\n    }, {\r\n        headers: { Authorization: `JWT ${responsibleAnswer.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddResponsibleQuestionClass\r\nexport const addResponsibleQuestionClass = async newResponsibleQuestionClass => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addResponsibleQuestionClass`, {\r\n        Class: newResponsibleQuestionClass.Class\r\n    }, {\r\n        headers: { Authorization: `JWT ${newResponsibleQuestionClass.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ClassifyResponsibleQuestion\r\nexport const classifyResponsibleQuestion = async classifiedResponsibleQuestion => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/classifyResponsibleQuestion`, {\r\n        ResponsibleQuestionID: classifiedResponsibleQuestion.ResponsibleQuestionID,\r\n        Class: classifiedResponsibleQuestion.Class\r\n    }, {\r\n        headers: { Authorization: `JWT ${classifiedResponsibleQuestion.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: SetGlobalFeeRate\r\nexport const setGlobalFeeRate = async feeRate => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/setGlobalFeeRate...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/setGlobalFeeRate`, {\r\n        FeeRate: feeRate.FeeRate\r\n    }, {\r\n        headers: { Authorization: `JWT ${feeRate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: SetTemporaryFeeRate\r\nexport const setTemporaryFeeRate = async temporaryFeeRateDate => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/setTemporaryFeeRate...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/setTemporaryFeeRate`, {\r\n        FeeRate: temporaryFeeRateDate.FeeRate,\r\n        Date: temporaryFeeRateDate.Date\r\n    }, {\r\n        headers: { Authorization: `JWT ${temporaryFeeRateDate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ClearTemporaryFeeRate\r\nexport const clearTemporaryFeeRate = async clearedtemporaryFeeRate => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/clearTemporaryFeeRate...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/clearTemporaryFeeRate`, {}, {\r\n        headers: { Authorization: `JWT ${clearedtemporaryFeeRate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddPriceRange\r\nexport const addPriceRange = async newPriceRange => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/addPriceRange...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addPriceRange`, {\r\n        StartRange: newPriceRange.StartRange,\r\n        EndRange: newPriceRange.EndRange,\r\n        FeeRate: newPriceRange.FeeRate\r\n    }, {\r\n        headers: { Authorization: `JWT ${newPriceRange.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UpdatePriceRange\r\nexport const updatePriceRange = async updatedPriceRange => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/updatePriceRange...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/updatePriceRange`, {\r\n        PriceRangeID: updatedPriceRange.PriceRangeID,\r\n        FeeRate: updatedPriceRange.FeeRate\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedPriceRange.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: DeletePriceRange\r\nexport const deletePriceRange = async discardedPriceRange => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}administrators/deletePriceRange...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}administrators/deletePriceRange`, {\r\n        headers: { Authorization: `JWT ${discardedPriceRange.Token}` },\r\n        data: { PriceRangeID: discardedPriceRange.PriceRangeID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AddTraderRate\r\nexport const addTraderRate = async newTraderRate => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/addTraderRate...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/addTraderRate`, {\r\n        Username: newTraderRate.Username,\r\n        FeeRate: newTraderRate.FeeRate\r\n    }, {\r\n        headers: { Authorization: `JWT ${newTraderRate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UpdateTraderRate\r\nexport const updateTraderRate = async updatedTraderRate => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/updateTraderRate...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/updateTraderRate`, {\r\n        TraderRateID: updatedTraderRate.TraderRateID,\r\n        FeeRate: updatedTraderRate.FeeRate\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTraderRate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: DeleteTraderRate\r\nexport const deleteTraderRate = async discardedTraderRate => {\r\n    console.log(`Sending HTTP DELETE request to ${Strings.NAQEL_SERVER}administrators/deleteTraderRate...`);\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}administrators/deleteTraderRate`, {\r\n        headers: { Authorization: `JWT ${discardedTraderRate.Token}` },\r\n        data: { TraderRateID: discardedTraderRate.TraderRateID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ApproveDiverPayProof\r\nexport const approveDriverPayProof = async approvedDriverPayProof => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}administrators/approveDriverPayProof...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}administrators/approveDriverPayProof`, {\r\n        DriverPayProofID: approvedDriverPayProof.DriverPayProofID\r\n    }, {\r\n        headers: { Authorization: `JWT ${approvedDriverPayProof.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};","import axios from \"axios\";\r\nimport Strings from \"../../res/strings\";\r\n\r\n// POST: Register\r\nexport const registerTransportCompanyResponsible = async newCredentials => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}transportCompanyResponsibles/register`, {\r\n        Username: newCredentials.Username,\r\n        Email: newCredentials.Email,\r\n        Password: newCredentials.Password,\r\n        RegisterAs: newCredentials.RegisterAs,\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: AccountSetup\r\nexport const setupTransportCompanyResponsibleAccount = async newTransportCompanyResponsible => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}transportCompanyResponsibles/setupAccount`, {\r\n        Username: newTransportCompanyResponsible.Username,\r\n        Email: newTransportCompanyResponsible.Email,\r\n        Password: newTransportCompanyResponsible.Password,\r\n        RegisterAs: newTransportCompanyResponsible.RegisterAs,\r\n        Name: newTransportCompanyResponsible.Name,\r\n        PhoneNumber: newTransportCompanyResponsible.PhoneNumber\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: Login\r\nexport const loginTransportCompanyResponsible = async transportCompanyResponsible => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}transportCompanyResponsibles/login`, {\r\n        EmailOrUsername: transportCompanyResponsible.EmailOrUsername,\r\n        Password: transportCompanyResponsible.Password,\r\n        SignInAs: transportCompanyResponsible.SignInAs,\r\n    }).then(response => {\r\n        return response.data;\r\n    })\r\n};\r\n\r\n// GET: GetData\r\nexport const getData = async request => {\r\n    return await axios.get(`${Strings.NAQEL_SERVER}transportCompanyResponsibles/get${request.Get}`, {\r\n        params: request.Params,\r\n        headers: { Authorization: `JWT ${request.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addCommercialRegisterCertificate\r\nexport const addCommercialRegisterCertificate = newCommercialRegisterCertificate => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}transportCompanyResponsibles/addCommercialRegisterCertificate`, {\r\n        Type: newCommercialRegisterCertificate.Type,\r\n        PhotoURL: newCommercialRegisterCertificate.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${newCommercialRegisterCertificate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: updateCommercialRegisterCertificate\r\nexport const updateCommercialRegisterCertificate = updatedCommercialRegisterCertificate => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}transportCompanyResponsibles/updateCommercialRegisterCertificate`, {\r\n        Type: updatedCommercialRegisterCertificate.Type,\r\n        PhotoURL: updatedCommercialRegisterCertificate.PhotoURL\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedCommercialRegisterCertificate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: deleteCommercialRegisterCertificate\r\nexport const deleteCommercialRegisterCertificate = discardedCommercialRegisterCertificate => {\r\n    return axios.delete(`${Strings.NAQEL_SERVER}transportCompanyResponsibles/deleteCommercialRegisterCertificate`, {\r\n        headers: { Authorization: `JWT ${discardedCommercialRegisterCertificate.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: GeneralSettings\r\nexport const generalSettings = async updatedTransportCompanyResponsible => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}transportCompanyResponsibles/generalSettings`, {\r\n        Name: updatedTransportCompanyResponsible.Name,\r\n        PhoneNumber: updatedTransportCompanyResponsible.PhoneNumber\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTransportCompanyResponsible.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateUsername\r\nexport const validateUsername = async username => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}transportCompanyResponsibles/validateUsername`, {\r\n        Username: username\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidateEmail\r\nexport const validateEmail = async email => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}transportCompanyResponsibles/validateEmail`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POSTL SendCode\r\nexport const sendCode = async email => {\r\n    console.log(`Sending HTTP POST request to ${Strings.NAQEL_SERVER}users/sendCode...`);\r\n    return await axios.post(`${Strings.NAQEL_SERVER}users/sendCode`, {\r\n        Email: email\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: UsernameAndEmailSettings\r\nexport const usernameAndEmailSettings = async updatedTransportCompanyResponsible => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}transportCompanyResponsibles/usernameAndEmailSettings`, {\r\n        Username: updatedTransportCompanyResponsible.Username,\r\n        Email: updatedTransportCompanyResponsible.Email\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTransportCompanyResponsible.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: ValidatePassword\r\nexport const validatePassword = async passwordPackage => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}transportCompanyResponsibles/validatePassword`, {\r\n        Password: passwordPackage.Password\r\n    }, {\r\n        headers: { Authorization: `JWT ${passwordPackage.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: PasswordSettings\r\nexport const passwordSettings = async updatedTransportCompanyResponsible => {\r\n    return await axios.post(`${Strings.NAQEL_SERVER}transportCompanyResponsibles/passwordSettings`, {\r\n        Password: updatedTransportCompanyResponsible.Password,\r\n    }, {\r\n        headers: { Authorization: `JWT ${updatedTransportCompanyResponsible.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// POST: addQuestion\r\nexport const addQuestion = newQuestion => {\r\n    return axios.post(`${Strings.NAQEL_SERVER}transportCompanyResponsibles/addQuestion`, {\r\n        Question: newQuestion.Question\r\n    }, {\r\n        headers: { Authorization: `JWT ${newQuestion.Token}` }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n// DELETE: deleteQuestion\r\nexport const deleteQuestion = async discardedQuestion => {\r\n    return await axios.delete(`${Strings.NAQEL_SERVER}transportCompanyResponsibles/deleteQuestion`, {\r\n        headers: { Authorization: `JWT ${discardedQuestion.Token}` },\r\n        data: { ResponsibleQuestionID: discardedQuestion.ResponsibleQuestionID }\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};","export const Required = {\r\n    paddingLeft: \"5px\",\r\n    fontWeight: \"bold\",\r\n};\r\n\r\nexport const SelectOptionStyle = {\r\n    maxWidth: \"296px\",\r\n};\r\n\r\nexport const PreloaderScreen = {\r\n    background: \"rgba(0, 0, 0, 0.8)\",\r\n    position: \"fixed\",\r\n    zIndex: \"10\",\r\n    top: \"0px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n    height: \"100%\"\r\n};\r\n\r\nexport default {\r\n    Required,\r\n    SelectOptionStyle,\r\n    PreloaderScreen\r\n};","import React, { Component } from \"react\";\r\nimport { PreloaderScreen } from \"../styles/MiscellaneousStyles\";\r\n\r\nclass Preloader extends Component {\r\n    render() {\r\n        return (\r\n            <div style={PreloaderScreen}>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                    {/*<img src=\"./images/preloader.gif\" alt=\"preloader.gif\" height=\"200\" />*/}\r\n                    <div class=\"progress-ring progress-large\">\r\n                        <div class=\"progress-circle\"></div>\r\n                        <div class=\"progress-circle\"></div>\r\n                        <div class=\"progress-circle\"></div>\r\n                        <div class=\"progress-circle\"></div>\r\n                        <div class=\"progress-circle\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Preloader;","export const LoginCardBack = {\r\n    backgroundImage: \"url(/images/login_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    height: \"130vh\"\r\n};\r\n\r\nexport const RegisterCardBack = {\r\n    backgroundImage: \"url(/images/signup_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    height: \"130vh\"\r\n};\r\n\r\nexport const EmailConfirmationCardBack = {\r\n    backgroundImage: \"url(/images/passcode_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    height: \"100vh\"\r\n};\r\n\r\nexport const AccountSetupCardBack = {\r\n    backgroundImage: \"url(/images/create_account_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    height: \"100vh\"\r\n};\r\n\r\nexport const CongratulationsCardBack = {\r\n    backgroundImage: \"url(/images/congrats_back.jpg)\",\r\n    backgroundAttachment: \"fixed\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    height: \"100vh\"\r\n};\r\n\r\nexport const Card = {\r\n    backgroundColor: \"rgba(229, 229, 229, 0.8)\",\r\n    height: \"auto\",\r\n    width: \"350px\",\r\n    padding: \"30px\",\r\n    alignContent: \"center\",\r\n    boxShadow: \"0 6px 6px rgba(0, 0, 0, 0.6)\",\r\n};\r\n\r\nexport const CardLarge = {\r\n    backgroundColor: \"rgba(229, 229, 229, 0.8)\",\r\n    height: \"auto\",\r\n    padding: \"30px\",\r\n    alignContent: \"center\",\r\n    boxShadow: \"0 6px 6px rgba(0, 0, 0, 0.6)\",\r\n};\r\n\r\nexport const CardXLarge = {\r\n    backgroundColor: \"rgba(229, 229, 229, 0.8)\",\r\n    height: \"auto\",\r\n    width: \"60%\",\r\n    margin: \"50px\",\r\n    boxShadow: \"0 6px 6px rgba(0, 0, 0, 0.6)\",\r\n};\r\n\r\nexport const CardChild = {\r\n    width: \"100%\",\r\n};\r\n\r\nexport const CardTitle = {\r\n    paddingTop: \"10px\",\r\n};\r\n\r\nexport default {\r\n    LoginCardBack,\r\n    RegisterCardBack,\r\n    EmailConfirmationCardBack,\r\n    AccountSetupCardBack,\r\n    CongratulationsCardBack,\r\n    Card,\r\n    CardLarge,\r\n    CardXLarge,\r\n    CardChild,\r\n    CardTitle,\r\n};","import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { loginDriver } from \"../drivers/DriverFunctions\";\r\nimport { loginTrader } from \"../traders/TraderFunctions\";\r\nimport { loginAdministrator } from \"../administrators/AdministratorFunctions\";\r\nimport { loginTransportCompanyResponsible } from \"../transportCompanyResponsibles/TransportCompanyResponsiblesFunctions\";\r\nimport Preloader from \"../../controls/Preloader\";\r\n\r\nimport {\r\n    LoginCardBack,\r\n    Card,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            EmailOrUsername: \"\",\r\n            Password: \"\",\r\n            SignInAs: \"Driver\",\r\n\r\n            ValidEmailOrUsername: false,\r\n            ValidPassword: false,\r\n\r\n            ValidForm: false,\r\n            LoggedInAsDriver: false,\r\n            LoggedInAsTrader: false,\r\n            LoggedInAsAdministrator: false,\r\n            LoggedInAsTCResponsible: false,\r\n            LoginError: null,\r\n\r\n            Errors: {\r\n                EmailOrUsername: \"\",\r\n                Password: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value }, () => {\r\n            this.validateField(name, value)\r\n        });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidEmailOrUsername = this.state.ValidEmailOrUsername;\r\n        let ValidPassword = this.state.ValidPassword;\r\n\r\n        switch (field) {\r\n            case \"EmailOrUsername\":\r\n                ValidEmailOrUsername = (value !== \"\");\r\n                Errors.EmailOrUsername = ValidEmailOrUsername ? \"\" : \"Email or username is required.\";\r\n                break;\r\n            case \"Password\":\r\n                ValidPassword = (value != \"\");\r\n                Errors.Password = ValidPassword ? \"\" : \"Password is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidEmailOrUsername: ValidEmailOrUsername,\r\n            ValidPassword: ValidPassword\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidEmailOrUsername &&\r\n                    this.state.ValidPassword\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        await event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const user = {\r\n            EmailOrUsername: this.state.EmailOrUsername,\r\n            Password: this.state.Password,\r\n            SignInAs: this.state.SignInAs,\r\n        };\r\n\r\n        if (this.state.SignInAs === \"Driver\") {\r\n            await loginDriver(user).then(response => {\r\n                console.log(response);\r\n                if (response.Message === \"Login successful.\") {\r\n                    localStorage.setItem(\"Token\", response.Token);\r\n\r\n                    this.setState({\r\n                        LoggedInAsDriver: true,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        LoginError: <div>\r\n                            <label className=\"control-label text-danger\">{response.Message}</label>\r\n                            <br />\r\n                        </div>,\r\n                        Preloader: null,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else if (this.state.SignInAs === \"Administrator\") {\r\n            await loginAdministrator(user).then(response => {\r\n                if (response.Message === \"Login successful.\") {\r\n                    localStorage.setItem(\"Token\", response.Token);\r\n\r\n                    this.setState({\r\n                        LoggedInAsAdministrator: true,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        LoginError: <div>\r\n                            <label className=\"control-label text-danger\">{response.Message}</label>\r\n                            <br />\r\n                        </div>,\r\n                        Preloader: null,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else if (this.state.SignInAs === \"TC Responsible\") {\r\n            await loginTransportCompanyResponsible(user).then(response => {\r\n                if (response.Message === \"Login successful.\") {\r\n                    localStorage.setItem(\"Token\", response.Token);\r\n\r\n                    this.setState({\r\n                        LoggedInAsTCResponsible: true,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        LoginError: <div>\r\n                            <label className=\"control-label text-danger\">{response.Message}</label>\r\n                            <br />\r\n                        </div>,\r\n                        Preloader: null,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            await loginTrader(user).then(response => {\r\n                if (response.Message === \"Login successful.\") {\r\n                    localStorage.setItem(\"Token\", response.Token);\r\n\r\n                    this.setState({\r\n                        LoggedInAsTrader: true,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        LoginError: <div>\r\n                            <label className=\"control-label text-danger\">{response.Message}</label>\r\n                            <br />\r\n                        </div>,\r\n                        Preloader: null,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.LoggedInAsDriver) {\r\n            return <Redirect to={\"/drivers\"} />;\r\n        }\r\n        else if (this.state.LoggedInAsTrader) {\r\n            return <Redirect to={\"/traders\"} />;\r\n        }\r\n        else if (this.state.LoggedInAsAdministrator) {\r\n            return <Redirect to={\"/administrators\"} />;\r\n        }\r\n        else if (this.state.LoggedInAsTCResponsible) {\r\n            return <Redirect to={\"/transportCompanyResponsibles\"} />;\r\n        }\r\n        else {\r\n            return <div>\r\n                <div className=\"middle\" style={LoginCardBack}>\r\n                    <div className=\"theme-default animated fadeIn\" style={Card} >\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/login.png\" alt=\"Login.png\" height=\"60\" />\r\n                            <div className=\"type-h3\" style={CardTitle}>Sign In</div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"EmailOrUsername\" className=\"control-label\">Email or Username</label>\r\n                                    <input type=\"email\" className=\"form-control\" name=\"EmailOrUsername\" placeholder=\"someone@provider.com\"\r\n                                        value={this.state.EmailOrUsername} onChange={this.onChange} />\r\n                                    <span className=\"text-danger\">{this.state.Errors.EmailOrUsername}</span>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"Password\" className=\"control-label\">Password</label>\r\n                                    <input type=\"password\" className=\"form-control\" name=\"Password\" placeholder=\"Password\"\r\n                                        value={this.state.Password} onChange={this.onChange} />\r\n                                    <span className=\"text-danger\">{this.state.Errors.Password}</span>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"control-label\">Sign In As</label>\r\n                                    <div className=\"dropdown\" style={{ width: \"100%\" }}>\r\n                                        <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                            <span>{this.state.SignInAs}</span>\r\n                                            <span className=\"caret\"></span>\r\n                                        </button>\r\n                                        <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                            <li><Link onClick={e => { this.state.SignInAs = \"Driver\" }} onChange={this.onChange}>Driver</Link></li>\r\n                                            <li><Link onClick={e => { this.state.SignInAs = \"Trader\" }} onChange={this.onChange}>Trader</Link></li>\r\n                                            <li><Link onClick={e => { this.state.SignInAs = \"Broker\" }} onChange={this.onChange}>Broker</Link></li>\r\n                                            <li><Link onClick={e => { this.state.SignInAs = \"TC Responsible\" }} onChange={this.onChange}>TC Responsible</Link></li>\r\n                                            <li><Link onClick={e => { this.state.SignInAs = \"Administrator\" }} onChange={this.onChange}>Administrator</Link></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    {this.state.LoginError}\r\n                                    <br />\r\n                                    <label className=\"control-label\">No account? <span><Link to=\"/register\">Register now</Link></span></label>\r\n                                </div>\r\n                                <div>\r\n                                    <input type=\"submit\" value=\"Sign In\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.Preloader}\r\n            </div>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default Login;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Strings from \"../../res/strings\";\r\nimport Preloader from \"../../controls/Preloader\";\r\nimport { registerDriver } from \"../drivers/DriverFunctions\";\r\nimport { registerTrader } from \"../traders/TraderFunctions\";\r\nimport { registerAdministrator } from \"../administrators/AdministratorFunctions\";\r\nimport { registerTransportCompanyResponsible } from \"../transportCompanyResponsibles/TransportCompanyResponsiblesFunctions\";\r\n\r\nimport { Required } from \"../../styles/MiscellaneousStyles\";\r\n\r\nimport {\r\n    RegisterCardBack,\r\n    Card,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            Email: \"\",\r\n            Password: \"\",\r\n            ConfirmPassword: \"\",\r\n            RegisterAs: \"Driver\",\r\n            NullError: false,\r\n\r\n            PasswordsMatched: false,\r\n            UsernameOrEmailTaken: false,\r\n            ValidEmail: false,\r\n            ValidPassword: false,\r\n\r\n            ValidForm: false,\r\n            Agreed: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Email: \"\",\r\n                Password: \"\",\r\n                ConfirmPassword: \"\",\r\n                Agreed: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let fieldValidationErrors = this.state.Errors;\r\n        let ValidEmail = this.state.ValidEmail;\r\n        let ValidPassword = this.state.ValidPassword;\r\n        let PasswordsMatched = this.state.PasswordsMatched;\r\n        let Agreed = this.state.Agreed;\r\n\r\n        switch (field) {\r\n            case \"Email\":\r\n                ValidEmail = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n                fieldValidationErrors.Email = ValidEmail ? \"\" : \"Email is invalid.\";\r\n                break;\r\n            case \"Password\":\r\n                ValidPassword = value.length >= 6;\r\n                fieldValidationErrors.Password = ValidPassword ? \"\" : \"Password is too short.\";\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                PasswordsMatched = this.state.Password === value;\r\n                fieldValidationErrors.ConfirmPassword = PasswordsMatched ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n            case \"IsAgree\":\r\n                Agreed = this.refs.agreementCheckBox.checked;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: fieldValidationErrors,\r\n            ValidEmail: ValidEmail,\r\n            ValidPassword: ValidPassword,\r\n            PasswordsMatched: PasswordsMatched,\r\n            Agreed: Agreed,\r\n        }, this.validateForm);\r\n    }\r\n\r\n    validateForm() {\r\n        this.setState({\r\n            ValidForm: this.state.ValidEmail &&\r\n                this.state.ValidPassword &&\r\n                this.state.PasswordsMatched &&\r\n                this.state.Agreed\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.Username === \"\" ||\r\n            this.state.Email === \"\" ||\r\n            this.state.Password === \"\" ||\r\n            this.state.ConfirmPassword === \"\") {\r\n\r\n            this.setState({\r\n                NullError: true,\r\n                UsernameOrEmailTaken: false,\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newCredentials = {\r\n            Username: this.state.Username,\r\n            Password: this.state.Password,\r\n            Email: this.state.Email,\r\n            RegisterAs: this.state.RegisterAs,\r\n        }\r\n\r\n        if (newCredentials.RegisterAs === \"Driver\") {\r\n            await registerDriver(newCredentials).then(response => {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                if (response && localStorage.newCredentialsToken) {\r\n                    this.props.history.push(\"/emailConfirmation\");\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        NullError: false,\r\n                        UsernameOrEmailTaken: true,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else if (newCredentials.RegisterAs === \"Administrator\") {\r\n            await registerAdministrator(newCredentials).then(response => {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                if (response.Message === \"Token received.\") {\r\n                    localStorage.setItem(\"newCredentialsToken\", response.Token);\r\n                    this.props.history.push(\"/emailConfirmation\");\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        NullError: false,\r\n                        UsernameOrEmailTaken: true,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else if (newCredentials.RegisterAs === \"TC Responsible\") {\r\n            await registerTransportCompanyResponsible(newCredentials).then(response => {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                if (response.Message === \"Token received.\") {\r\n                    localStorage.setItem(\"newCredentialsToken\", response.Token);\r\n                    this.props.history.push(\"/emailConfirmation\");\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        NullError: false,\r\n                        UsernameOrEmailTaken: true,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            await registerTrader(newCredentials).then(response => {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                if (response && localStorage.newCredentialsToken) {\r\n                    this.props.history.push(\"/emailConfirmation\");\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        NullError: false,\r\n                        UsernameOrEmailTaken: true,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"middle\" style={RegisterCardBack}>\r\n                    <div class=\"theme-default animated fadeIn\" style={Card}>\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/signup.png\" alt=\"signup.png\" height=\"60\" />\r\n                            <div class=\"type-h3\" style={CardTitle}>Sign Up</div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"Username\" class=\"control-label\">Username</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"Username\" type=\"text\" name=\"Username\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Username} onChange={this.onChange} required />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"Email\" class=\"control-label\">Email</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"Email\" type=\"email\" name=\"Email\" class=\"form-control\" placeholder=\"someone@example.com\" autocomplete=\"off\"\r\n                                        value={this.state.Email} onChange={this.onChange} />\r\n                                    <span class=\"text-danger\">{this.state.Errors[\"Email\"]}</span>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"Password\" class=\"control-label\">Password</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"Password\" type=\"password\" name=\"Password\" class=\"form-control\"\r\n                                        value={this.state.Password} onChange={this.onChange} />\r\n                                    <span class=\"text-danger\">{this.state.Errors[\"Password\"]}</span>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"ConfirmPassword\" class=\"control-label\">Confirm Password</label>\r\n                                    <span class=\"text-danger\" style={Required}>*</span>\r\n                                    <input htmlFor=\"ConfirmPassword\" type=\"password\" name=\"ConfirmPassword\" class=\"form-control\"\r\n                                        value={this.state.ConfirmPassword} onChange={this.onChange} />\r\n                                    <span class=\"text-danger\">{this.state.Errors[\"ConfirmPassword\"]}</span>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"control-label\">Register As</label>\r\n                                    <div class=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                        <button id=\"example-dropdown\" class=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                            <span>{this.state.RegisterAs}</span>\r\n                                            <span class=\"caret\"></span>\r\n                                        </button>\r\n                                        <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                            <li><Link onClick={e => { this.state.RegisterAs = \"Driver\" }} onChange={this.onChange}>Driver</Link></li>\r\n                                            <li><Link onClick={e => { this.state.RegisterAs = \"Trader\" }} onChange={this.onChange}>Trader</Link></li>\r\n                                            <li><Link onClick={e => { this.state.RegisterAs = \"Broker\" }} onChange={this.onChange}>Broker</Link></li>\r\n                                            <li><Link onClick={e => { this.state.RegisterAs = \"TC Responsible\" }} onChange={this.onChange}>TC Responsible</Link></li>\r\n                                            <li><Link onClick={e => { this.state.RegisterAs = \"Administrator\" }} onChange={this.onChange}>Administrator</Link></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div class=\"checkbox\">\r\n                                        <label class=\"control-label\">\r\n                                            <input ref=\"agreementCheckBox\" type=\"checkbox\" name=\"IsAgree\" value=\"\" onChange={this.onChange}></input>\r\n                                            <span>Agree with our </span>\r\n                                            <span>\r\n                                                <Link data-toggle=\"modal\" data-target=\"#terms\">Terms and Conditions</Link>\r\n                                            </span>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    {this.state.NullError &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">All fields are required.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                    {this.state.UsernameOrEmailTaken &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">Username or email is already taken.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n                                    {this.state.AgreementError &&\r\n                                        <div>\r\n                                            <label class=\"control-label text-danger\">You must agree to our terms and conditions.</label>\r\n                                            <br />\r\n                                        </div>\r\n                                    }\r\n\r\n                                    <label class=\"control-label\">Have an account? <span><Link to=\"/login\">Sign In Now!</Link></span></label>\r\n                                </div>\r\n                                <input type=\"submit\" value=\"Next\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"modal\" id=\"terms\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content\">\r\n                            <div class=\"modal-header\">\r\n                                <h4 class=\"modal-title\" id=\"modal-sample-label\">Terms of Use</h4>\r\n                            </div>\r\n                            <div class=\"modal-body text-justify\">\r\n                                Your privacy is important to us. <span>{Strings.APP_NAME}</span>'s Privacy Statement describes the types of data we collect from you, how we use your Data, and the legal bases we have to process your Data. The Privacy Statement also describes how {String.APP_NAME} uses your content, which is information submitted by you to {Strings.APP_NAME} via the Services. Where processing is based on consent and to the extent permitted by law, by agreeing to these Terms, you consent to {Strings.APP_NAME}� collection, use and disclosure of your content and data as described in the privacy statement. In some cases, we will provide separate notice and request your consent as referenced in the privacy statement.\r\n                                </div>\r\n                            <div class=\"modal-footer\">\r\n                                <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Ok</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {this.state.ShowPreloader ? <Preloader /> : null}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Register;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport {\r\n    EmailConfirmationCardBack,\r\n    Card,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass EmailConfirmation extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            NewCredentials: jwt_decode(localStorage.newCredentialsToken),\r\n            ConfirmationCode: 0,\r\n\r\n            ValidConfirmationCode: false,\r\n            ValidForm: false,\r\n\r\n            Errors: {\r\n                ConfirmationCode: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidConfirmationCode = this.state.ValidConfirmationCode;\r\n\r\n        switch (field) {\r\n            case \"ConfirmationCode\":\r\n                ValidConfirmationCode = (value !== \"\");\r\n                Errors.ConfirmationCode = ValidConfirmationCode ? \"\" : \"Confirmation code is required.\";\r\n\r\n                if (Errors.ConfirmationCode !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidConfirmationCode = (value === \"12345\" /*this.state.NewCredentials.Code*/);\r\n                Errors.ConfirmationCode = ValidConfirmationCode ? \"\" : \"Invalid code.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidConfirmationCode: ValidConfirmationCode\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidConfirmationCode\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        localStorage.setItem(\"verifiedCredentialsToken\", localStorage.newCredentialsToken);\r\n        localStorage.removeItem(\"newCredentialsToken\");\r\n\r\n        if (this.state.NewCredentials.RegisterAs === \"Administrator\") {\r\n            this.props.history.push(\"/setupAdministratorAccount\");\r\n        }\r\n        else if (this.state.NewCredentials.RegisterAs === \"TC Responsible\") {\r\n            this.props.history.push(\"/setupTransportCompanyResponsibleAccount\");\r\n        }\r\n        else {\r\n            this.props.history.push(\"/setupAccount\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.newCredentialsToken) {\r\n            return <Redirect to={\"/register\"} />;\r\n        }\r\n        else {\r\n            return <section>\r\n                <div class=\"middle\" style={EmailConfirmationCardBack}>\r\n                    <div class=\"theme-default animated fadeIn\" style={Card}>\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/passcode.png\" alt=\"passcode.png\" height=\"60\" />\r\n                            <div class=\"type-h3\" style={CardTitle}>Email Confirmation</div>\r\n                            <div class=\"type-sh3\">We delivered a confirmation code to your email.</div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"ConfirmationCode\" class=\"control-label\">Confirmation Code</label>\r\n                                    <span class=\"text-danger m-l-xxxs\">*</span>\r\n                                    <input htmlFor=\"ConfirmationCode\" type=\"text\" name=\"ConfirmationCode\" class=\"form-control\"\r\n                                        value={this.state.ConfirmationCode} onChange={this.onChange} />\r\n                                    <span class=\"text-danger\">{this.state.Errors.ConfirmationCode}</span>\r\n                                </div>\r\n                                <input type=\"submit\" value=\"Next\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default EmailConfirmation;","import firebase from \"firebase\";\r\nimport { auth } from \"firebase\";\r\n\r\nconst FirebaseConfiguration = {\r\n    apiKey: \"AIzaSyCeVZ0rXxY1ZVX_6O3N9UkxBByQXnNKWMo\",\r\n    authDomain: \"naqel-transport-jobs.firebaseapp.com\",\r\n    databaseURL: \"https://naqel-transport-jobs.firebaseio.com\",\r\n    projectId: \"naqel-transport-jobs\",\r\n    storageBucket: \"naqel-transport-jobs.appspot.com\",\r\n    messagingSenderId: \"331974863267\",\r\n    appId: \"1:331974863267:web:9a8f80195b8bc8e9b5d216\",\r\n    measurementId: \"G-Q3X399QB20\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(FirebaseConfiguration);\r\n\r\nexport default firebaseApp;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../controls/Preloader\";\r\n\r\nclass PhoneConfirmationDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Code: \"\",\r\n\r\n            ValidCode: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Code: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidCode\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"Code\":\r\n                ValidCode = (value !== \"\");\r\n                Errors.Code = ValidCode ? \"\" : \"Code is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCode: ValidCode\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: ValidCode\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        const {\r\n            Code,\r\n            ValidForm\r\n        } = this.state;\r\n\r\n        if (!ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const {\r\n            ConfirmationResult,\r\n            OnOK\r\n        } = this.props;\r\n\r\n        ConfirmationResult.confirm(Code).then(result => {\r\n            this.setState({\r\n                Code: \"\",\r\n                ValidCode: false,\r\n                ValidForm: false,\r\n                ShowPreloader: false,\r\n                Errors: {\r\n                    Code: \"\"\r\n                },\r\n            });\r\n\r\n            this.cancelButton.click();\r\n            OnOK(true);\r\n        }).catch(error => {\r\n            this.setState({\r\n                Code: \"\",\r\n                ValidCode: false,\r\n                ValidForm: false,\r\n                ShowPreloader: false,\r\n                Errors: {\r\n                    Code: \"\"\r\n                },\r\n            });\r\n\r\n            this.cancelButton.click();\r\n            OnOK(false);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Code,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        const {\r\n            PhoneNumber\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"phone-confirmation-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"type-h3 color-default p-t-xxs\">Code Confirmation</div>\r\n                                        <div className=\"type-sh3\">{`Enter 6-Digit Code sent on ${PhoneNumber}.`}</div>\r\n                                        <div className=\"row p-t-xxs\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Code</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"Code\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={Code} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.Code}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Verify\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PhoneConfirmationDialog;","import React, { Component } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport FirebaseApp from \"../../res/FirebaseApp\";\r\nimport Preloader from \"../../controls/Preloader\";\r\nimport PhoneConfirmationDialog from \"../../containers/phoneConfirmationDialog/PhoneConfirmationDialog\";\r\nimport { setupDriverAccount } from \"../drivers/DriverFunctions\";\r\nimport { setupTraderAccount } from \"../traders/TraderFunctions\";\r\nimport { Required } from \"../../styles/MiscellaneousStyles\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport {\r\n    AccountSetupCardBack,\r\n    CardLarge,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass AccountSetup extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            Email: \"\",\r\n            Password: \"\",\r\n            RegisterAs: \"\",\r\n\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            DateOfBirth: \"\",\r\n            Gender: \"Male\",\r\n            Nationality: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n\r\n            ValidFirstName: false,\r\n            ValidLastName: false,\r\n            ValidDateOfBirth: false,\r\n            ValidNationality: false,\r\n            ValidAddress: false,\r\n            ValidPhoneNumber: false,\r\n\r\n            ConfirmationResult: null,\r\n            PhoneCodeVerified: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                DateOfBirth: \"\",\r\n                Nationality: \"\",\r\n                Address: \"\",\r\n                PhoneNumber: \"\",\r\n                FormError: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\"recaptcha\", {\r\n            \"size\": \"invisible\",\r\n            \"callback\": response => {\r\n            }\r\n        });\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFirstName = this.state.ValidFirstName;\r\n        let ValidLastName = this.state.ValidLastName;\r\n        let ValidDateOfBirth = this.state.ValidDateOfBirth;\r\n        let ValidNationality = this.state.ValidNationality;\r\n        let ValidAddress = this.state.ValidAddress;\r\n        let ValidPhoneNumber = this.state.ValidPhoneNumber;\r\n\r\n        switch (field) {\r\n            case \"FirstName\":\r\n                ValidFirstName = ((value !== \"\") &&\r\n                    (value.match(/^[a-zA-Z ]+$/)));\r\n                Errors.FirstName = ValidFirstName ? \"\" : \"First name is invalid.\";\r\n                break;\r\n            case \"LastName\":\r\n                ValidLastName = ((value !== \"\") &&\r\n                    (value.match(/^[a-zA-Z ]+$/)));\r\n                Errors.LastName = ValidLastName ? \"\" : \"Last name is invalid.\";\r\n                break;\r\n            case \"DateOfBirth\":\r\n                ValidDateOfBirth = (new Date(value) < new Date());\r\n                Errors.DateOfBirth = ValidDateOfBirth ? \"\" : \"Your Birthday must be earlier than today.\";\r\n                break;\r\n            case \"Nationality\":\r\n                ValidNationality = ((value !== \"\") &&\r\n                    (value.match(/^[a-zA-Z ]+$/)));\r\n                Errors.Nationality = ValidNationality ? \"\" : \"Nationality is invalid.\";\r\n                break;\r\n            case \"Address\":\r\n                ValidAddress = (value !== \"\");\r\n                Errors.Address = ValidAddress ? \"\" : \"Address is required.\";\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = value.match(/^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/);\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFirstName: ValidFirstName,\r\n            ValidLastName: ValidLastName,\r\n            ValidDateOfBirth: ValidDateOfBirth,\r\n            ValidNationality: ValidNationality,\r\n            ValidAddress: ValidAddress,\r\n            ValidPhoneNumber: ValidPhoneNumber\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidFirstName &&\r\n                    this.state.ValidLastName &&\r\n                    this.state.ValidDateOfBirth &&\r\n                    this.state.ValidNationality &&\r\n                    this.state.ValidAddress &&\r\n                    this.state.ValidPhoneNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (localStorage.verifiedCredentialsToken) {\r\n            if (this.state.PhoneCodeVerified) {\r\n                this.setState({\r\n                    ShowPreloader: true\r\n                });\r\n\r\n                const decoded = jwt_decode(localStorage.verifiedCredentialsToken);\r\n                this.state.Username = decoded.Username;\r\n                this.state.Email = decoded.Email;\r\n                this.state.Password = decoded.Password;\r\n                this.state.RegisterAs = decoded.RegisterAs;\r\n\r\n                const newUser = {\r\n                    Username: this.state.Username,\r\n                    Email: this.state.Email,\r\n                    Password: this.state.Password,\r\n                    RegisterAs: this.state.RegisterAs,\r\n                    FirstName: this.state.FirstName,\r\n                    LastName: this.state.LastName,\r\n                    DateOfBirth: this.state.DateOfBirth,\r\n                    Gender: this.state.Gender,\r\n                    Address: this.state.Address,\r\n                    PhoneNumber: this.state.PhoneNumber,\r\n                    Nationality: this.state.Nationality,\r\n                }\r\n\r\n                if (newUser.RegisterAs == \"Driver\") {\r\n                    await setupDriverAccount(newUser).then(response => {\r\n                        this.setState({\r\n                            ShowPreloader: false\r\n                        });\r\n\r\n                        localStorage.removeItem(\"verifiedCredentialsToken\");\r\n                        localStorage.setItem(\"IsCreatedSuccessfully\", true);\r\n                        this.props.history.push(\"/congratulations\");\r\n                    });\r\n                }\r\n                if (newUser.RegisterAs == \"Trader\" || newUser.RegisterAs == \"Broker\") {\r\n                    await setupTraderAccount(newUser).then(response => {\r\n                        this.setState({\r\n                            ShowPreloader: false\r\n                        });\r\n\r\n                        localStorage.removeItem(\"verifiedCredentialsToken\");\r\n                        localStorage.setItem(\"IsCreatedSuccessfully\", true);\r\n                        this.props.history.push(\"/congratulations\");\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: true\r\n                });\r\n\r\n                const appVerifier = window.recaptchaVerifier;\r\n\r\n                FirebaseApp.auth().languageCode = \"en\";\r\n                FirebaseApp.auth().signInWithPhoneNumber(this.state.PhoneNumber, appVerifier).then(confirmationResult => {\r\n                    this.setState({\r\n                        ShowPreloader: false,\r\n                        ConfirmationResult: confirmationResult\r\n                    });\r\n\r\n                    this.SendCodeButton.click();\r\n                }).catch(error => {\r\n                    let {\r\n                        Errors\r\n                    } = this.state;\r\n\r\n                    Errors.FormError = error.message;\r\n\r\n                    this.setState({\r\n                        ShowPreloader: false,\r\n                        Errors: Errors\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.verifiedCredentialsToken) {\r\n            this.props.history.push(\"/register\");\r\n            return <a />\r\n        }\r\n        else {\r\n            return <section>\r\n                <div class=\"middle\" style={AccountSetupCardBack}>\r\n                    <div class=\"theme-default animated fadeIn\" style={CardLarge}>\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/create_account.png\" atl=\"create_account.png\" height=\"60\" />\r\n                            <div class=\"type-h3\" style={CardTitle}>\r\n                                Create Account\r\n                                </div>\r\n                            <div class=\"type-sh3\">\r\n                                Just one more step, and you're done!\r\n                                </div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-8\">\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"FirstName\" class=\"control-label\">First Name</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"FirstName\" autocomplete=\"off\"\r\n                                                value={this.state.FirstName} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.FirstName}</span>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"LastName\" class=\"control-label\">Last Name</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"LastName\" autocomplete=\"off\"\r\n                                                value={this.state.LastName} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.LastName}</span>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"DateOfBirth\" class=\"control-label\">Date of Birth</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"date\" class=\"form-control\" name=\"DateOfBirth\" autocomplete=\"off\"\r\n                                                value={this.state.DateOfBirth} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.DateOfBirth}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-8\">\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"Gender\" class=\"control-label\">Gender</label>\r\n                                            <div class=\"dropdown\" style={{ width: \"193px\", maxWidth: \"296px\", }}>\r\n                                                <button id=\"example-dropdown\" class=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                    aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                    <span>{this.state.Gender}</span>\r\n                                                    <span class=\"caret\"></span>\r\n                                                </button>\r\n                                                <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                    <li><a onClick={() => { this.setState({ Gender: \"Male\" }); }}>Male</a></li>\r\n                                                    <li><a onClick={() => { this.setState({ Gender: \"Female\" }); }}>Female</a></li>\r\n                                                </ul>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"Nationality\" class=\"control-label\">Nationality</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"Nationality\" autocomplete=\"off\"\r\n                                                value={this.state.Nationality} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.Nationality}</span>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"PhoneNumber\" class=\"control-label\">Phone Number</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autocomplete=\"off\"\r\n                                                placeholder=\"+XXXXXXXXXXXX\" value={this.state.PhoneNumber} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.PhoneNumber}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-8\">\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"Address\" class=\"control-label\">Address</label>\r\n                                            <span class=\"text-danger\" style={Required}>*</span>\r\n                                            <textarea class=\"form-control\" rows=\"5\" name=\"Address\" autocomplete=\"off\"\r\n                                                value={this.state.Address} onChange={this.onChange}></textarea>\r\n                                            <span class=\"text-danger\">{this.state.Errors.Address}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label class=\"control-label text-danger\">{this.state.Errors.FormError}</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"submit\" value=\"Create\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button\r\n                    style={{ display: \"none\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#phone-confirmation-dialog\"\r\n                    ref={sendCodeButton => this.SendCodeButton = sendCodeButton}></button>\r\n                <PhoneConfirmationDialog ConfirmationResult={this.state.ConfirmationResult}\r\n                    PhoneNumber={this.state.PhoneNumber}\r\n                    OnOK={phoneCodeVerified => {\r\n                        if (phoneCodeVerified) {\r\n                            this.setState({\r\n                                PhoneCodeVerified: true\r\n                            });\r\n\r\n                            this.onSubmit();\r\n                        }\r\n                        else {\r\n                            let {\r\n                                Errors\r\n                            } = this.state;\r\n\r\n                            Errors.FormError = \"Confirmation code is invalid.\";\r\n\r\n                            this.setState({\r\n                                ValidForm: false,\r\n                                Errors: Errors\r\n                            });\r\n                        }\r\n                    }} />\r\n                <div id=\"recaptcha\"></div>\r\n                {this.state.ShowPreloader ? <Preloader /> : null}\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default AccountSetup;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport Preloader from \"../../controls/Preloader\";\r\nimport { setupAdministratorAccount } from \"../administrators/AdministratorFunctions\";\r\n\r\nimport {\r\n    AccountSetupCardBack,\r\n    CardLarge,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass SetupAdministratorAccount extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            AdministratorSecret: \"\",\r\n\r\n            ValidFirstName: false,\r\n            ValidLastName: false,\r\n            ValidAdministratorSecret: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                AdministratorSecret: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFirstName = this.state.ValidFirstName;\r\n        let ValidLastName = this.state.ValidLastName;\r\n        let ValidAdministratorSecret = this.state.ValidAdministratorSecret;\r\n\r\n        switch (field) {\r\n            case \"FirstName\":\r\n                ValidFirstName = (value !== \"\");\r\n                Errors.FirstName = ValidFirstName ? \"\" : \"First name is required.\";\r\n\r\n                if (Errors.FirstName !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidFirstName = (value.match(/^[a-zA-Z ]+$/));\r\n                Errors.FirstName = ValidFirstName ? \"\" : \"First name is invalid.\";\r\n                break;\r\n            case \"LastName\":\r\n                ValidLastName = (value !== \"\");\r\n                Errors.LastName = ValidLastName ? \"\" : \"Last name is required.\";\r\n\r\n                if (Errors.LastName !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidLastName = (value.match(/^[a-zA-Z ]+$/));\r\n                Errors.LastName = ValidLastName ? \"\" : \"Last name is invalid.\";\r\n                break;\r\n            case \"AdministratorSecret\":\r\n                ValidAdministratorSecret = (value !== \"\");\r\n                Errors.AdministratorSecret = ValidAdministratorSecret ? \"\" : \"Secret code is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFirstName: ValidFirstName,\r\n            ValidLastName: ValidLastName,\r\n            ValidAdministratorSecret: ValidAdministratorSecret\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidFirstName &&\r\n                    this.state.ValidLastName &&\r\n                    this.state.ValidAdministratorSecret\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (localStorage.verifiedCredentialsToken) {\r\n            this.setState({\r\n                ShowPreloader: true\r\n            });\r\n\r\n            const verifiedCredentials = jwt_decode(localStorage.verifiedCredentialsToken);\r\n\r\n            const newAdministrator = {\r\n                Username: verifiedCredentials.Username,\r\n                Email: verifiedCredentials.Email,\r\n                Password: verifiedCredentials.Password,\r\n                RegisterAs: verifiedCredentials.RegisterAs,\r\n                FirstName: this.state.FirstName,\r\n                LastName: this.state.LastName,\r\n                AdministratorSecret: this.state.AdministratorSecret\r\n            }\r\n\r\n            await setupAdministratorAccount(newAdministrator).then(response => {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                if (response.Message == \"Administrator created.\") {\r\n                    localStorage.removeItem(\"verifiedCredentialsToken\");\r\n                    localStorage.setItem(\"IsCreatedSuccessfully\", true);\r\n                    this.props.history.push(\"/congratulations\");\r\n                }\r\n                else {\r\n                    let errors = this.state.Errors;\r\n                    errors.AdministratorSecret = response.Message;\r\n\r\n                    this.setState({\r\n                        Errors: errors\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.verifiedCredentialsToken) {\r\n            return <Redirect to={\"/register\"} />;\r\n        }\r\n        else {\r\n            return <section>\r\n                <div class=\"middle\" style={AccountSetupCardBack}>\r\n                    <div class=\"theme-default animated fadeIn\" style={CardLarge}>\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/create_account.png\" atl=\"create_account.png\" height=\"60\" />\r\n                            <div class=\"type-h3\" style={CardTitle}>\r\n                                Create Account\r\n                                </div>\r\n                            <div class=\"type-sh3\">\r\n                                Just one more step, and you're done!\r\n                                </div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-24\">\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"control-label\">First Name</label>\r\n                                            <span class=\"text-danger m-l-xxxs\">*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"FirstName\" autocomplete=\"off\"\r\n                                                value={this.state.FirstName} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.FirstName}</span>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"control-label\">Last Name</label>\r\n                                            <span class=\"text-danger m-l-xxxs\">*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"LastName\" autocomplete=\"off\"\r\n                                                value={this.state.LastName} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.LastName}</span>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"control-label\">Secret Code</label>\r\n                                            <span class=\"text-danger m-l-xxxs\">*</span>\r\n                                            <input type=\"text\" class=\"form-control\" name=\"AdministratorSecret\" autocomplete=\"off\"\r\n                                                value={this.state.AdministratorSecret} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.AdministratorSecret}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"submit\" value=\"Create\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.ShowPreloader ? <Preloader /> : null}\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default SetupAdministratorAccount;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport firebase from \"firebase\";\r\nimport FirebaseApp from \"../../res/FirebaseApp\";\r\nimport Preloader from \"../../controls/Preloader\";\r\nimport PhoneConfirmationDialog from \"../../containers/phoneConfirmationDialog/PhoneConfirmationDialog\";\r\nimport { setupTransportCompanyResponsibleAccount } from \"../transportCompanyResponsibles/TransportCompanyResponsiblesFunctions\";\r\n\r\nimport {\r\n    AccountSetupCardBack,\r\n    CardLarge,\r\n    CardChild,\r\n    CardTitle,\r\n} from \"../../styles/CardStyles\";\r\n\r\nclass SetupTransportCompanyResponsibleAccount extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Name: \"\",\r\n            PhoneNumber: \"\",\r\n            ConfirmationResult: null,\r\n\r\n            ValidName: false,\r\n            ValidPhoneNumber: false,\r\n\r\n            PhoneCodeVerified: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Name: \"\",\r\n                PhoneNumber: \"\",\r\n                FormError: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\"recaptcha\", {\r\n            \"size\": \"invisible\",\r\n            \"callback\": response => {\r\n            }\r\n        });\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidName,\r\n            ValidPhoneNumber\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"Name\":\r\n                ValidName = (value !== \"\");\r\n                Errors.Name = ValidName ? \"\" : \"Company name is required.\";\r\n\r\n                if (Errors.Name !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidName = (value.match(/^[a-zA-Z ]+$/));\r\n                Errors.Name = ValidName ? \"\" : \"Company name is invalid.\";\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = (value !== \"\");\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is required.\";\r\n\r\n                if (Errors.PhoneNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPhoneNumber = value.match(/^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/);\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidName: ValidName,\r\n            ValidPhoneNumber: ValidPhoneNumber\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: ValidName &&\r\n                    ValidPhoneNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (localStorage.verifiedCredentialsToken) {\r\n            if (this.state.PhoneCodeVerified) {\r\n                this.setState({\r\n                    ShowPreloader: true\r\n                });\r\n\r\n                const verifiedCredentials = jwt_decode(localStorage.verifiedCredentialsToken);\r\n\r\n                const newTransportCompanyResponsible = {\r\n                    Username: verifiedCredentials.Username,\r\n                    Email: verifiedCredentials.Email,\r\n                    Password: verifiedCredentials.Password,\r\n                    RegisterAs: verifiedCredentials.RegisterAs,\r\n                    Name: this.state.Name,\r\n                    PhoneNumber: this.state.PhoneNumber\r\n                }\r\n\r\n                await setupTransportCompanyResponsibleAccount(newTransportCompanyResponsible).then(response => {\r\n                    this.setState({\r\n                        ShowPreloader: false\r\n                    });\r\n\r\n                    if (response.Message === \"Transport company responsible created.\") {\r\n                        localStorage.removeItem(\"verifiedCredentialsToken\");\r\n                        localStorage.setItem(\"IsCreatedSuccessfully\", true);\r\n\r\n                        this.props.history.push(\"/congratulations\");\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: true\r\n                });\r\n\r\n                const appVerifier = window.recaptchaVerifier;\r\n\r\n                FirebaseApp.auth().languageCode = \"en\";\r\n                FirebaseApp.auth().signInWithPhoneNumber(this.state.PhoneNumber, appVerifier).then(confirmationResult => {\r\n                    this.setState({\r\n                        ShowPreloader: false,\r\n                        ConfirmationResult: confirmationResult\r\n                    });\r\n\r\n                    this.SendCodeButton.click();\r\n                }).catch(error => {\r\n                    let {\r\n                        Errors\r\n                    } = this.state;\r\n\r\n                    Errors.FormError = error.message;\r\n\r\n                    this.setState({\r\n                        ShowPreloader: false,\r\n                        Errors: Errors\r\n                    });\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.verifiedCredentialsToken) {\r\n            return <Redirect to={\"/register\"} />;\r\n        }\r\n        else {\r\n            return <section>\r\n                <div class=\"middle\" style={AccountSetupCardBack}>\r\n                    <div class=\"theme-default animated fadeIn\" style={CardLarge}>\r\n                        <div style={CardChild}>\r\n                            <img src=\"./images/create_account.png\" atl=\"create_account.png\" height=\"60\" />\r\n                            \r\n                            <div class=\"type-h3\" style={CardTitle}>\r\n                                Create Account\r\n                                </div>\r\n                            <div class=\"type-sh3\">\r\n                                Just one more step, and you're done!\r\n                                </div>\r\n                            <br />\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-24\">\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"control-label\">Company Name</label>\r\n                                            <span class=\"text-danger m-l-xxxs\">*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"Name\" autocomplete=\"off\"\r\n                                                value={this.state.Name} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.FirstName}</span>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"PhoneNumber\" class=\"control-label\">Phone Number</label>\r\n                                            <span class=\"text-danger m-l-xxxs\">*</span>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autocomplete=\"off\"\r\n                                                placeholder=\"+XXXXXXXXXXXX\" value={this.state.PhoneNumber} onChange={this.onChange} />\r\n                                            <span class=\"text-danger\">{this.state.Errors.PhoneNumber}</span>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"control-label text-danger\">{this.state.Errors.FormError}</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"submit\" value=\"Create\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button\r\n                    style={{ display: \"none\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#phone-confirmation-dialog\"\r\n                    ref={sendCodeButton => this.SendCodeButton = sendCodeButton}></button>\r\n                <PhoneConfirmationDialog ConfirmationResult={this.state.ConfirmationResult}\r\n                    PhoneNumber={this.state.PhoneNumber}\r\n                    OnOK={phoneCodeVerified => {\r\n                        if (phoneCodeVerified) {\r\n                            this.setState({\r\n                                PhoneCodeVerified: true\r\n                            });\r\n\r\n                            this.onSubmit();\r\n                        }\r\n                        else {\r\n                            let {\r\n                                Errors\r\n                            } = this.state;\r\n\r\n                            Errors.FormError = \"Confirmation code is invalid.\";\r\n\r\n                            this.setState({\r\n                                ValidForm: false,\r\n                                Errors: Errors\r\n                            });\r\n                        }\r\n                    }} />\r\n                <div id=\"recaptcha\"></div>\r\n                {this.state.ShowPreloader ? <Preloader /> : null}\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default SetupTransportCompanyResponsibleAccount;","import React, { Component } from \"react\";\r\nimport { CongratulationsCardBack, CardXLarge } from \"../../styles/CardStyles\";\r\n\r\nclass EmailConfirmation extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n        localStorage.removeItem(\"IsCreatedSuccessfully\");\r\n        this.props.history.push(\"/login\");\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.IsCreatedSuccessfully) {\r\n            this.props.history.push(\"/register\");\r\n            return <a />\r\n        }\r\n        else {\r\n            return (\r\n                <div class=\"middle\" style={CongratulationsCardBack}>\r\n                    <div class=\"jumbotron theme-default animated fadeIn\" style={CardXLarge}>\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12 col-md-push-12 text-center\">\r\n                                    <img class=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        alt=\"congrats.png\" src=\"./images/congrats.png\" data-source-index=\"2\" />\r\n                                </div>\r\n                                <div class=\"col-md-12 col-md-pull-12\">\r\n                                    <div class=\"type-h3\">Congratulations</div>\r\n                                    <div class=\"type-sh3\">Your account has been created successfully.</div>\r\n                                    <br />\r\n                                    <form noValidate onSubmit={this.onSubmit}>\r\n                                        <input type=\"submit\" value=\"Sign In\" class=\"btn btn-primary\" />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>);\r\n        }\r\n    }\r\n};\r\n\r\nexport default EmailConfirmation;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { getData, uploadDriverProfilePhoto } from \"../../DriverFunctions\";\r\nimport Strings from \"../../../../res/strings\";\r\n\r\nclass ProfilePhoto extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Image: null,\r\n            PhotoURL: \"./images/defaultProfilePhoto.png\",\r\n            UploadProgress: null\r\n        };\r\n\r\n        this.onImageUpload = this.onImageUpload.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"ProfilePhoto\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Profile photo found.\") {\r\n                    let profilePhoto = response.ProfilePhoto;\r\n\r\n                    this.setState({\r\n                        PhotoURL: profilePhoto.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        PhotoURL: \"./images/defaultProfilePhoto.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onImageUpload = async event => {\r\n        this.state.Image = event.target.files[0];\r\n        const formData = new FormData();\r\n\r\n        try {\r\n            formData.append(\"Image\", this.state.Image, this.state.Image.name);\r\n\r\n            await axios.post(Strings.IMAGE_UPLOADER, formData, {\r\n                onUploadProgress: event => {\r\n                    this.setState({\r\n                        UploadProgress: <div className=\"progress-bar\">\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                        </div>\r\n                    });\r\n                }\r\n            }).then(async response => {\r\n                response = response.data;\r\n\r\n                if (response.message === \"Image uploaded successfully.\") {\r\n                    const driverProfilePhoto = {\r\n                        Token: localStorage.Token,\r\n                        PhotoURL: response.imageUrl,\r\n                        FileName: response.filename\r\n                    };\r\n\r\n                    let photoURL = response.imageUrl;\r\n\r\n                    await uploadDriverProfilePhoto(driverProfilePhoto).then(response => {\r\n                        if (response.Message === \"Profile photo is updated.\" ||\r\n                            response.Message === \"Profile photo is added.\") {\r\n\r\n                            this.setState({\r\n                                PhotoURL: photoURL,\r\n                                UploadProgress: null\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }).catch(() => {\r\n                this.setState({\r\n                    ImageURL: \"./images/defaultProfilePhoto.png\",\r\n                    UploadProgress: null\r\n                });\r\n            });\r\n        }\r\n        catch (exception) {\r\n            this.setState({\r\n                UploadProgress: null\r\n            });\r\n\r\n            return;\r\n        }\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <input type=\"file\" onChange={this.onImageUpload} style={{ display: \"none\", }} ref={fileInput => this.fileInput = fileInput} />\r\n            <figure className=\"media\">\r\n                <div className=\"media-img media-img-has-play ratio-1-1\">\r\n                    <a href=\"#\" onClick={() => this.fileInput.click()}>\r\n                        <img style={{\r\n                            border: \"5px solid #3A3A3C\"\r\n                        }}\r\n                            src={this.state.PhotoURL} alt=\"ProfilePhoto.png\" />\r\n                        <i className=\"glyph glyph-edit\"></i>\r\n                    </a>\r\n                </div>\r\n            </figure>\r\n            {this.state.UploadProgress}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ProfilePhoto;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Strings from \"../res/strings\";\r\n\r\nclass ImageUploader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Image: null,\r\n            UploadProgress: null,\r\n        };\r\n\r\n        this.onImageUpload = this.onImageUpload.bind(this);\r\n    }\r\n\r\n    onImageUpload = event => {\r\n        this.state.Image = event.target.files[0];\r\n\r\n        if (this.state.Image) {\r\n            let mimeType = this.state.Image.type;\r\n\r\n            if (!mimeType.startsWith(\"image\")) {\r\n                this.props.OnInvalidImageSelected();\r\n                return;\r\n            }\r\n        }\r\n\r\n        const formData = new FormData();\r\n\r\n        try {\r\n            formData.append(\"Image\", this.state.Image, this.state.Image.name);\r\n        }\r\n        catch (exception) {\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        axios.post(Strings.IMAGE_UPLOADER, formData, {\r\n            onUploadProgress: event => {\r\n                this.setState({\r\n                    UploadProgress: (\r\n                        <div className=\"progress-bar\">\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                        </div>\r\n                    ),\r\n                });\r\n            }\r\n        }).then(async response => {\r\n            this.props.OnImageUploaded(response.data);\r\n\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n        }).catch((error) => {\r\n            this.props.OnImageUploaded(error);\r\n\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async e => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"file\" onChange={this.onImageUpload} style={{ display: \"none\", }} ref={fileInput => this.fileInput = fileInput} />\r\n                <figure className=\"media\">\r\n                    <div className=\"media-img media-img-has-play ratio-1-1\">\r\n                        <a onClick={() => this.fileInput.click()}>\r\n                            <img src={this.props.Source} alt=\"ProfilePhoto.png\"\r\n                                style={{\r\n                                    border: \"5px solid #3A3A3C\"\r\n                                }} />\r\n                            <i className=\"glyph glyph-edit\"></i>\r\n                        </a>\r\n                    </div>\r\n                </figure>\r\n                {this.state.UploadProgress}\r\n            </div>\r\n                \r\n        );\r\n    }\r\n};\r\n\r\nexport default ImageUploader;","import React, { Component } from \"react\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addDrivingLicence } from \"../../../../DriverFunctions.js\";\r\n\r\nclass AddDrivingLicenceDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LicenceNumber: \"\",\r\n            Type: \"\",\r\n            ReleaseDate: new Date(),\r\n            ExpiryDate: new Date(),\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidLicenceNumber: false,\r\n            ValidType: false,\r\n            ValidReleaseDate: false,\r\n            ValidExpiryDate: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                LicenceNumber: \"\",\r\n                Type: \"\",\r\n                ReleaseDate: \"\",\r\n                ExpiryDate: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidLicenceNumber = this.state.ValidLicenceNumber;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidReleaseDate = this.state.ValidReleaseDate;\r\n        let ValidExpiryDate = this.state.ValidExpiryDate;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"LicenceNumber\":\r\n                ValidLicenceNumber = (value !== \"\");\r\n                Errors.LicenceNumber = ValidLicenceNumber ? \"\" : \"Licence number is required.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Licence type is required\";\r\n                break;\r\n            case \"ReleaseDate\":\r\n                ValidReleaseDate = (new Date(value).getTime() < new Date(this.state.ExpiryDate).getTime());\r\n                Errors.ReleaseDate = ValidReleaseDate ? \"\" : \"Release date must be earlier than Expiry date.\";\r\n                break;\r\n            case \"ExpiryDate\":\r\n                ValidExpiryDate = (new Date(value).getTime() > new Date().getTime());\r\n                Errors.ExpiryDate = ValidExpiryDate ? \"\" : \"Expiry Date must be later than today.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidLicenceNumber: ValidLicenceNumber,\r\n            ValidType: ValidType,\r\n            ValidReleaseDate: ValidReleaseDate,\r\n            ValidExpiryDate: ValidExpiryDate,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidLicenceNumber &&\r\n                        this.state.ValidType &&\r\n                        this.state.ValidReleaseDate &&\r\n                        this.state.ValidExpiryDate &&\r\n                        this.state.ValidPhotoURL,\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newDrivingLicence = {\r\n            Token: localStorage.Token,\r\n            LicenceNumber: this.state.LicenceNumber,\r\n            Type: this.state.Type,\r\n            ReleaseDate: this.state.ReleaseDate,\r\n            ExpiryDate: this.state.ExpiryDate,\r\n            PhotoURL: this.state.PhotoURL,\r\n        }\r\n\r\n        console.log(\"Going to add the Driving Licence.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addDrivingLicence(newDrivingLicence).then(response => {\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n\r\n            if (response.Message === \"Driving Licence is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"add-driving-licence-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }}\r\n                                                    ImageCategory=\"IdentityCard\" />\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"type-h3 color-default p-t-xxs\">Add Your Driving Licence</div>\r\n                                                <div className=\"type-sh4 text-danger\">{this.state.Errors.PhotoURL}</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Licence Number</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"LicenceNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LicenceNumber} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LicenceNumber}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Licence Type</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Release Date</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"date\" name=\"ReleaseDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ReleaseDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ReleaseDate}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Expiry Date</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"date\" name=\"ExpiryDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ExpiryDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ExpiryDate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddDrivingLicenceDialog;","import React, { Component } from \"react\";\r\nimport AddDrivingLicenceDialog from \"./AddDrivingLicenceDialog.js\";\r\n\r\nclass AddDrivingLicenceButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddDrivingLicenceDialog: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-driving-licence-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddDrivingLicenceDialog: (<AddDrivingLicenceDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddDrivingLicenceDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />),\r\n                        });\r\n                    }}>Add Driving Licence</button>\r\n                {this.state.AddDrivingLicenceDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddDrivingLicenceButton;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addEntryExitCard } from \"../../../../DriverFunctions.js\";\r\n\r\nclass AddEntryExitCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            EntryExitNumber: \"\",\r\n            Type: \"Simple\",\r\n            ReleaseDate: new Date(),\r\n            NumberOfMonths: \"\",\r\n\r\n            ValidEntryExitNumber: false,\r\n            ValidReleaseDate: false,\r\n            ValidNumberOfMonths: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                EntryExitNumber: \"\",\r\n                ReleaseDate: \"\",\r\n                NumberOfMonths: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidEntryExitNumber = this.state.ValidEntryExitNumber;\r\n        let ValidReleaseDate = this.state.ValidReleaseDate;\r\n        let ValidNumberOfMonths = this.state.ValidNumberOfMonths;\r\n\r\n        switch (field) {\r\n            case \"EntryExitNumber\":\r\n                ValidEntryExitNumber = (value !== \"\");\r\n                Errors.EntryExitNumber = ValidEntryExitNumber ? \"\" : \"Entry/exit number is required.\";\r\n                break;\r\n            case \"ReleaseDate\":\r\n                ValidReleaseDate = (new Date(value).getTime() <= new Date());\r\n                Errors.ReleaseDate = ValidReleaseDate ? \"\" : \"Release date must not be later than today.\";\r\n                break;\r\n            case \"NumberOfMonths\":\r\n                ValidNumberOfMonths = (value !== \"\");\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : \"Number of months is required.\";\r\n\r\n                if (Errors.NumberOfMonths !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNumberOfMonths = (value > 0)\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : \"Number of months must be greater than 0.\";\r\n\r\n                if (Errors.NumberOfMonths !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                let releaseDate = new Date(this.state.ReleaseDate);\r\n                let expiryDate = new Date(releaseDate.setMonth(releaseDate.getMonth() + value));\r\n\r\n                ValidNumberOfMonths = (expiryDate > new Date());\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : `Your card is expired if it is for ${value} months. Your card might be expired on ${expiryDate.toLocaleString()}`;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidEntryExitNumber: ValidEntryExitNumber,\r\n            ValidReleaseDate: ValidReleaseDate,\r\n            ValidNumberOfMonths: ValidNumberOfMonths,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidEntryExitNumber &&\r\n                        this.state.ValidReleaseDate &&\r\n                        this.state.ValidNumberOfMonths\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newEntryExitCard = {\r\n            Token: localStorage.Token,\r\n            EntryExitNumber: this.state.EntryExitNumber,\r\n            Type: this.state.Type,\r\n            ReleaseDate: this.state.ReleaseDate,\r\n            NumberOfMonths: this.state.NumberOfMonths\r\n        };\r\n\r\n        console.log(\"Going to add Entry/Exit Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addEntryExitCard(newEntryExitCard).then(response => {\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n\r\n            if (response.Message === \"Entry/Exit card is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"add-entry-exit-card-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-xxs\">Add Entry/Exit Card</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Entry/Exit Number</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"EntryExitNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.EntryExitNumber} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.EntryExitNumber}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Card Type</label><br />\r\n                                                    <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                        <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                            <span>{this.state.Type}</span>\r\n                                                            <span className=\"caret\"></span>\r\n                                                        </button>\r\n                                                        <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                            <li><a onClick={() => { this.setState({ Type: \"Simple\" }); }}>Simple</a></li>\r\n                                                            <li><a onClick={() => { this.setState({ Type: \"Multiple\" }); }}>Multiple</a></li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Release Date</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"date\" name=\"ReleaseDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ReleaseDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ReleaseDate}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Number of Months</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"NumberOfMonths\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.NumberOfMonths} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.NumberOfMonths}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddEntryExitCardDialog;","import React, { Component } from \"react\";\r\nimport AddEntryExitCardDialog from \"./AddEntryExitCardDialog.js\";\r\n\r\nclass AddEntryExitCardButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddEntryExitCardDialog: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-entry-exit-card-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddEntryExitCardDialog: <AddEntryExitCardDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddEntryExitCardDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />\r\n                        });\r\n                    }}>Add Entry/Exit Card</button>\r\n                {this.state.AddEntryExitCardDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddEntryExitCardButton;","import React, { Component } from \"react\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addIdentityCard } from \"../../../../DriverFunctions.js\";\r\n\r\nclass AddIdentityCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidIDNumber: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                IDNumber: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidIDNumber = this.state.ValidIDNumber;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"IDNumber\":\r\n                ValidIDNumber = (value !== \"\");\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidIDNumber = (value >= 1000000000 && value <= 9999999999);\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number must be 10-digits long.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidIDNumber: ValidIDNumber,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidIDNumber &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newIdentityCard = {\r\n            Token: localStorage.Token,\r\n            IDNumber: this.state.IDNumber,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to add Identity Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addIdentityCard(newIdentityCard).then(response => {\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n\r\n            if (response.Message === \"Identity card is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"add-identity-card-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }}\r\n                                                    ImageCategory=\"IdentityCard\" />\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"type-h3 color-default p-t-xxs\">Add Your Identity Card</div>\r\n                                                <div className=\"type-sh4 text-danger\">{this.state.Errors.PhotoURL}</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">ID Number</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"IDNumber\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.IDNumber} onChange={this.onChange} min=\"1000000000\" max=\"99999999999\" />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.IDNumber}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddIdentityCardDialog;","import React, { Component } from \"react\";\r\nimport AddIdentityCardDialog from \"./AddIdentityCardDialog.js\";\r\n\r\nclass AddIdentityCardButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddIdentityCardDialog: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-identity-card-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddIdentityCardDialog: <AddIdentityCardDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddIdentityCardDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />,\r\n                        });\r\n                    }}>Add Identity Card</button>\r\n                {this.state.AddIdentityCardDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddIdentityCardButton;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateDrivingLicence } from \"../../../../DriverFunctions.js\";\r\n\r\nclass EditDrivingLicenceDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LicenceNumber: \"\",\r\n            Type: \"\",\r\n            ReleaseDate: new Date(),\r\n            ExpiryDate: new Date(),\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidLicenceNumber: true,\r\n            ValidType: true,\r\n            ValidReleaseDate: true,\r\n            ValidExpiryDate: true,\r\n            ValidPhotoURL: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                LicenceNumber: \"\",\r\n                Type: \"\",\r\n                ReleaseDate: \"\",\r\n                ExpiryDate: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DrivingLicence\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Driving licence found.\") {\r\n                    let drivingLicence = response.DrivingLicence;\r\n\r\n                    this.setState({\r\n                        DrivingLicenceID: drivingLicence.DrivingLicenceID,\r\n                        LicenceNumber: drivingLicence.LicenceNumber,\r\n                        Type: drivingLicence.Type,\r\n                        ReleaseDate: drivingLicence.ReleaseDate,\r\n                        ExpiryDate: drivingLicence.ExpiryDate,\r\n                        PhotoURL: drivingLicence.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DrivingLicenceID: \"\",\r\n                        LicenceNumber: \"\",\r\n                        Type: \"\",\r\n                        ReleaseDate: new Date(),\r\n                        ExpiryDate: new Date(),\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidLicenceNumber = this.state.ValidLicenceNumber;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidReleaseDate = this.state.ValidReleaseDate;\r\n        let ValidExpiryDate = this.state.ValidExpiryDate;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"LicenceNumber\":\r\n                ValidLicenceNumber = (value !== \"\");\r\n                Errors.LicenceNumber = ValidLicenceNumber ? \"\" : \"Licence number is required.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Licence type is required\";\r\n                break;\r\n            case \"ReleaseDate\":\r\n                ValidReleaseDate = (new Date(value).getTime() < new Date(this.state.ExpiryDate).getTime());\r\n                Errors.ReleaseDate = ValidReleaseDate ? \"\" : \"Release date must be earlier than Expiry date.\";\r\n                break;\r\n            case \"ExpiryDate\":\r\n                ValidExpiryDate = (new Date(value).getTime() > new Date().getTime());\r\n                Errors.ExpiryDate = ValidExpiryDate ? \"\" : \"Expiry Date must be later than today.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidLicenceNumber: ValidLicenceNumber,\r\n            ValidType: ValidType,\r\n            ValidReleaseDate: ValidReleaseDate,\r\n            ValidExpiryDate: ValidExpiryDate,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidLicenceNumber &&\r\n                        this.state.ValidType &&\r\n                        this.state.ValidReleaseDate &&\r\n                        this.state.ValidExpiryDate &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedDrivingLicence = {\r\n            Token: localStorage.Token,\r\n            LicenceNumber: this.state.LicenceNumber,\r\n            Type: this.state.Type,\r\n            ReleaseDate: this.state.ReleaseDate,\r\n            ExpiryDate: this.state.ExpiryDate,\r\n            PhotoURL: this.state.PhotoURL,\r\n        }\r\n\r\n        console.log(\"Going to update the Driving Licence.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateDrivingLicence(updatedDrivingLicence).then(response => {\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n\r\n            if (response.Message === \"Driving Licence is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"edit-driving-licence-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }}\r\n                                                    ImageCategory=\"IdentityCard\" />\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"type-h3 color-default p-t-xxs\">Add Your Driving Licence</div>\r\n                                                <div className=\"type-sh4 text-danger\">{this.state.Errors.PhotoURL}</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Licence Number</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"LicenceNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LicenceNumber} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LicenceNumber}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Licence Type</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Release Date</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"date\" name=\"ReleaseDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ReleaseDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ReleaseDate}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Expiry Date</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"date\" name=\"ExpiryDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ExpiryDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ExpiryDate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default EditDrivingLicenceDialog;","import React, { Component } from \"react\";\r\nimport EditDriverLicenceDialog from \"./EditDrivingLicenceDialog.js\";\r\nimport { getData, deleteDrivingLicence } from \"../../../../DriverFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass DrivingLicenceListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DrivingLicenceID: \"\",\r\n            LicenceNumber: \"\",\r\n            Type: \"\",\r\n            ReleaseDate: \"\",\r\n            ExpiryDate: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n            EditDrivingLicenceDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedDrivingLicence = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete Driving Licence...`);\r\n\r\n        await deleteDrivingLicence(discardedDrivingLicence).then(response => {\r\n            if (response.Message === \"Driving Licence is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DrivingLicence\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Driving licence found.\") {\r\n                    let drivingLicence = response.DrivingLicence;\r\n\r\n                    this.setState({\r\n                        DrivingLicenceID: drivingLicence.DrivingLicenceID,\r\n                        LicenceNumber: drivingLicence.LicenceNumber,\r\n                        Type: drivingLicence.Type,\r\n                        ReleaseDate: drivingLicence.ReleaseDate,\r\n                        ExpiryDate: drivingLicence.ExpiryDate,\r\n                        PhotoURL: drivingLicence.PhotoURL\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DrivingLicenceID: \"\",\r\n                        LicenceNumber: \"\",\r\n                        Type: \"\",\r\n                        ReleaseDate: \"\",\r\n                        ExpiryDate: \"\",\r\n                        PhotoURL: \"./images/default_image.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#driving-licence-${this.state.DrivingLicenceID}`}>\r\n                    <div className=\"entity-list\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\" style={{ borderRadius: \"50%\" }}>\r\n                                <span className=\"glyph glyph-add\"></span>\r\n                                <span className=\"glyph glyph-remove\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">\r\n                                    <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>{`${this.props.Index}.`}</span>\r\n                                </div>\r\n                                <div className=\"content-text-secondary\">\r\n                                    <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>DRIVING LICENCE</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"collapse\" id={`driving-licence-${this.state.DrivingLicenceID}`}>\r\n                    <div className=\"jumbotron theme-default\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        src={this.state.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                            overflow: \"hidden\",\r\n                                            border: \"5px solid #3A3A3C\",\r\n                                            margin: \"5px\"\r\n                                        }} />\r\n                                </div>\r\n                                <div className=\"col-md-18\">\r\n                                    <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Driving Licence</div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-hashtag\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Licence Number</div>\r\n                                                        <div className=\"content-text-secondary\">{this.state.LicenceNumber}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-star-of-life\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Licence Type</div>\r\n                                                        <div className=\"content-text-secondary\">{this.state.Type}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-calendar\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Release Date</div>\r\n                                                        <div className=\"content-text-secondary\">{this.state.ReleaseDate}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-calendar\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Expiry Date</div>\r\n                                                        <div className=\"content-text-secondary\">{this.state.ExpiryDate}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary\"\r\n                            data-toggle=\"modal\"\r\n                            data-target=\"#edit-driving-licence-dialog\"\r\n                            onMouseDown={() => {\r\n                                this.setState({\r\n                                    EditDrivingLicenceDialog: <EditDriverLicenceDialog\r\n                                        OnCancel={() => {\r\n                                            this.setState({\r\n                                                EditDrivingLicenceDialog: null\r\n                                            });\r\n                                        }}\r\n                                        OnOK={cancelButton => {\r\n                                            cancelButton.click();\r\n                                            this.onComponentUpdated();\r\n                                        }} />\r\n                                });\r\n                            }}>Edit</button>\r\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                    </div>\r\n                </div>             \r\n                {this.state.Preloader}\r\n                {this.state.EditDrivingLicenceDialog}\r\n            </li>        \r\n        );\r\n    }\r\n};\r\n\r\nexport default DrivingLicenceListItem;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateEntryExitCard } from \"../../../../DriverFunctions.js\";\r\n\r\nclass EditEntryExitCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            EntryExitNumber: \"\",\r\n            Type: \"Simple\",\r\n            ReleaseDate: new Date(),\r\n            NumberOfMonths: \"\",\r\n\r\n            ValidEntryExitNumber: true,\r\n            ValidReleaseDate: true,\r\n            ValidNumberOfMonths: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                EntryExitNumber: \"\",\r\n                ReleaseDate: \"\",\r\n                NumberOfMonths: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"EntryExitCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Entry/exit card found.\") {\r\n                    let entryExitCard = response.EntryExitCard;\r\n\r\n                    this.setState({\r\n                        EntryExitNumber: entryExitCard.EntryExitNumber,\r\n                        Type: entryExitCard.Type,\r\n                        ReleaseDate: entryExitCard.ReleaseDate,\r\n                        NumberOfMonths: entryExitCard.NumberOfMonths\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        EntryExitNumber: \"\",\r\n                        Type: \"Simple\",\r\n                        ReleaseDate: new Date(),\r\n                        NumberOfMonths: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidEntryExitNumber = this.state.ValidEntryExitNumber;\r\n        let ValidReleaseDate = this.state.ValidReleaseDate;\r\n        let ValidNumberOfMonths = this.state.ValidNumberOfMonths;\r\n\r\n        switch (field) {\r\n            case \"EntryExitNumber\":\r\n                ValidEntryExitNumber = (value !== \"\");\r\n                Errors.EntryExitNumber = ValidEntryExitNumber ? \"\" : \"Entry/exit number is required.\";\r\n                break;\r\n            case \"ReleaseDate\":\r\n                ValidReleaseDate = (new Date(value).getTime() <= new Date());\r\n                Errors.ReleaseDate = ValidReleaseDate ? \"\" : \"Release date must not be later than today.\";\r\n                break;\r\n            case \"NumberOfMonths\":\r\n                ValidNumberOfMonths = (value !== \"\");\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : \"Number of months is required.\";\r\n\r\n                if (Errors.NumberOfMonths !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNumberOfMonths = (value > 0)\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : \"Number of months must be greater than 0.\";\r\n\r\n                if (Errors.NumberOfMonths !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                let releaseDate = new Date(this.state.ReleaseDate);\r\n                let expiryDate = new Date(releaseDate.setMonth(releaseDate.getMonth() + value));\r\n\r\n                ValidNumberOfMonths = (expiryDate > new Date());\r\n                Errors.NumberOfMonths = ValidNumberOfMonths ? \"\" : `Your card is expired if it is for ${value} months. Your card might be expired on ${expiryDate.toLocaleString()}`;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidEntryExitNumber: ValidEntryExitNumber,\r\n            ValidReleaseDate: ValidReleaseDate,\r\n            ValidNumberOfMonths: ValidNumberOfMonths,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidEntryExitNumber &&\r\n                    this.state.ValidReleaseDate &&\r\n                    this.state.ValidNumberOfMonths\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedEntryExitCard = {\r\n            Token: localStorage.Token,\r\n            EntryExitNumber: this.state.EntryExitNumber,\r\n            Type: this.state.Type,\r\n            ReleaseDate: this.state.ReleaseDate,\r\n            NumberOfMonths: this.state.NumberOfMonths\r\n        };\r\n\r\n        console.log(\"Going to update Entry/Exit Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateEntryExitCard(updatedEntryExitCard).then(response => {\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n\r\n            if (response.Message === \"Entry/Exit card is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"edit-entry-exit-card-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-xxs\">Add Entry/Exit Card</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Entry/Exit Number</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"EntryExitNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.EntryExitNumber} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.EntryExitNumber}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Card Type</label><br />\r\n                                                    <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                        <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                            <span>{this.state.Type}</span>\r\n                                                            <span className=\"caret\"></span>\r\n                                                        </button>\r\n                                                        <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                            <li><a onClick={() => { this.setState({ Type: \"Simple\" }); }}>Simple</a></li>\r\n                                                            <li><a onClick={() => { this.setState({ Type: \"Multiple\" }); }}>Multiple</a></li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Release Date</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"date\" name=\"ReleaseDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ReleaseDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ReleaseDate}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Number of Months</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"NumberOfMonths\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.NumberOfMonths} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.NumberOfMonths}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default EditEntryExitCardDialog;","import React, { Component } from \"react\";\r\nimport EditEntryExitCardDialog from \"./EditEntryExitCardDialog.js\";\r\nimport { getData, deleteEntryExitCard } from \"../../../../DriverFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass EntryExitCardListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            EntryExitCardID: \"\",\r\n            EntryExitNumber: \"\",\r\n            Type: \"Simple\",\r\n            ReleaseDate: \"\",\r\n            NumberOfMonths: \"\",\r\n\r\n            EditEntryExitCardDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedEntryExitCard = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete Exit/Entry card.`);\r\n\r\n        await deleteEntryExitCard(discardedEntryExitCard).then(response => {\r\n            if (response.Message === \"Entry/Exit card is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"EntryExitCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Entry/exit card found.\") {\r\n                    let entryExitCard = response.EntryExitCard;\r\n\r\n                    this.setState({\r\n                        EntryExitCardID: entryExitCard.EntryExitCardID,\r\n                        EntryExitNumber: entryExitCard.EntryExitNumber,\r\n                        Type: entryExitCard.Type,\r\n                        ReleaseDate: entryExitCard.ReleaseDate,\r\n                        NumberOfMonths: entryExitCard.NumberOfMonths,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        EntryExitCardID: \"\",\r\n                        EntryExitNumber: \"\",\r\n                        Type: \"Simple\",\r\n                        ReleaseDate: \"\",\r\n                        NumberOfMonths: \"\",\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n            <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#entry-exit-card-${this.state.EntryExitCardID}`}>\r\n                <div className=\"entity-list\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\" style={{ borderRadius: \"50%\" }}>\r\n                            <span className=\"glyph glyph-add\"></span>\r\n                            <span className=\"glyph glyph-remove\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>{`${this.props.Index}.`}</span>\r\n                            </div>\r\n                            <div className=\"content-text-secondary\">\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>ENTRY/EXIT CARD</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`entry-exit-card-${this.state.EntryExitCardID}`}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-24\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Entry/Exit Card</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Entry/Exit Number</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.EntryExitNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-star-of-life\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Entry/Exit Type</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.Type}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-calendar\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Release Date</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.ReleaseDate}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-calendar\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Number of Months</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.NumberOfMonths}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#edit-entry-exit-card-dialog\"\r\n                        onMouseDown={() => {\r\n                            this.setState({\r\n                                EditEntryExitCardDialog: <EditEntryExitCardDialog\r\n                                    OnCancel={() => {\r\n                                        this.setState({\r\n                                            EditEntryExitCardDialog: null\r\n                                        });\r\n                                    }}\r\n                                    OnOK={cancelButton => {\r\n                                        cancelButton.click();\r\n                                        this.onComponentUpdated();\r\n                                    }} />\r\n                            });\r\n                        }}>Edit</button>\r\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                </div>\r\n            </div>\r\n            {this.state.Preloader}\r\n            {this.state.EditEntryExitCardDialog}\r\n        </li>;\r\n    }\r\n};\r\n\r\nexport default EntryExitCardListItem;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateIdentityCard } from \"../../../../DriverFunctions.js\";\r\n\r\nclass EditIdentityCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidIDNumber: true,\r\n            ValidPhotoURL: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                IDNumber: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Identity card found.\") {\r\n                    let identityCard = response.IdentityCard;\r\n\r\n                    this.setState({\r\n                        IDNumber: identityCard.IDNumber,\r\n                        PhotoURL: identityCard.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        IDNumber: \"\",\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidIDNumber = this.state.ValidIDNumber;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"IDNumber\":\r\n                ValidIDNumber = (value !== \"\");\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidIDNumber = (value >= 1000000000 && value <= 9999999999);\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number must be 10-digits long.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidIDNumber: ValidIDNumber,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidIDNumber &&\r\n                    this.state.ValidPhotoURL\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedIdentityCard = {\r\n            Token: localStorage.Token,\r\n            IDNumber: this.state.IDNumber,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to update Identity Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updateIdentityCard(updatedIdentityCard).then(response => {\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n\r\n            if (response.Message === \"Identity card is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"edit-identity-card-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }}\r\n                                                    ImageCategory=\"IdentityCard\" />\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"type-h3 color-default p-t-xxs\">Add Your Identity Card</div>\r\n                                                <div className=\"type-sh4 text-danger\">{this.state.Errors.PhotoURL}</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">ID Number</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"IDNumber\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.IDNumber} onChange={this.onChange} min=\"1000000000\" max=\"99999999999\" />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.IDNumber}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default EditIdentityCardDialog;","import React, { Component } from \"react\";\r\nimport EditIdentityCardDialog from \"./EditIdentityCardDialog.js\";\r\nimport { getData, deleteIdentityCard } from \"../../../../DriverFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass IdentityCardListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IdentityCardID: \"\",\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            EditIdentityCardDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedIdentityCard = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete Identity Card.`);\r\n\r\n        await deleteIdentityCard(discardedIdentityCard).then(response => {\r\n            if (response.Message === \"Identity card is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Identity card found.\") {\r\n                    let identityCard = response.IdentityCard;\r\n\r\n                    this.setState({\r\n                        IdentityCardID: identityCard.IdentityCardID,\r\n                        IDNumber: identityCard.IDNumber,\r\n                        PhotoURL: identityCard.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        IdentityCardID: \"\",\r\n                        IDNumber: \"\",\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n            <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#identity-card-${this.state.IdentityCardID}`}>\r\n                <div className=\"entity-list\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\" style={{ borderRadius: \"50%\" }}>\r\n                            <span className=\"glyph glyph-add\"></span>\r\n                            <span className=\"glyph glyph-remove\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>{`${this.props.Index}.`}</span>\r\n                            </div>\r\n                            <div className=\"content-text-secondary\">\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>IDENTITY CARD</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`identity-card-${this.state.IdentityCardID}`}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={this.state.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Identity Card</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">ID Number</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.IDNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#edit-identity-card-dialog\"\r\n                        onMouseDown={() => {\r\n                            this.setState({\r\n                                EditIdentityCardDialog: (<EditIdentityCardDialog\r\n                                    OnCancel={() => {\r\n                                        this.setState({\r\n                                            EditIdentityCardDialog: null\r\n                                        });\r\n                                    }}\r\n                                    OnOK={cancelButton => {\r\n                                        cancelButton.click();\r\n                                        this.onComponentUpdated();\r\n                                    }} />)\r\n                            });\r\n                        }}>Edit</button>\r\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                </div>\r\n            </div> \r\n            {this.state.Preloader}\r\n            {this.state.EditIdentityCardDialog}\r\n        </li>;\r\n    }\r\n};\r\n\r\nexport default IdentityCardListItem;","import React, { Component } from \"react\";\r\nimport AddDrivingLicenceButton from \"./drivingLicence/AddDrivingLicenceButton.js\";\r\nimport AddEntryExitCardButton from \"./entryExitCard/AddEntryExitCardButton.js\";\r\nimport AddIdentityCardButton from \"./identityCard/AddIdentityCardButton.js\";\r\nimport DrivingLicenceListItem from \"./drivingLicence/DrivingLicenceListItem.js\"; \r\nimport EntryExitCardListItem from \"./entryExitCard/EntryExitCardListItem.js\";\r\nimport IdentityCardListItem from \"./identityCard/IdentityCardListItem.js\";\r\nimport { getData } from \"../../../DriverFunctions\";\r\n\r\nclass DocumentsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddDrivingLicenceButton: null,\r\n            AddEntryExitCardButton: null,\r\n            AddIdentityCardButton: null, \r\n            DrivingLicenceListItem: null,\r\n            EntryExitCardListItem: null,\r\n            IdentityCardListItem: null,\r\n        };\r\n\r\n        this.onDocumentsUpdated = this.onDocumentsUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onDocumentsUpdated();\r\n    }\r\n\r\n    onDocumentsUpdated = () => {\r\n        let index = 0;\r\n        let drivingLicence;\r\n        let entryExitCard;\r\n        let identityCard;\r\n\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DrivingLicence\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Driving licence found.\") {\r\n                    drivingLicence = response.DrivingLicence;\r\n                }\r\n                else {\r\n                    drivingLicence = undefined;\r\n                }\r\n\r\n                request = {\r\n                    Token: localStorage.Token,\r\n                    Get: \"EntryExitCard\"\r\n                };\r\n\r\n                getData(request).then(response => {\r\n                    if (response.Message === \"Entry/exit card found.\") {\r\n                        entryExitCard = response.EntryExitCard;\r\n                    }\r\n                    else {\r\n                        entryExitCard = undefined;\r\n                    }\r\n\r\n                    request = {\r\n                        Token: localStorage.Token,\r\n                        Get: \"IdentityCard\"\r\n                    };\r\n\r\n                    getData(request).then(response => {\r\n                        if (response.Message === \"Identity card found.\") {\r\n                            identityCard = response.IdentityCard;\r\n                        }\r\n                        else {\r\n                            identityCard = undefined;\r\n                        }\r\n\r\n                        (drivingLicence) ? this.setState({\r\n                            AddDrivingLicenceButton: null,\r\n                            DrivingLicenceListItem: <DrivingLicenceListItem\r\n                                Index={++index}\r\n                                OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                        }) : this.setState({\r\n                            AddDrivingLicenceButton: <AddDrivingLicenceButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                            DrivingLicenceListItem: null\r\n                        });\r\n\r\n                        (entryExitCard) ? this.setState({\r\n                            AddEntryExitCardButton: null,\r\n                            EntryExitCardListItem: <EntryExitCardListItem\r\n                                Index={++index}\r\n                                OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                        }) : this.setState({\r\n                            AddEntryExitCardButton: <AddEntryExitCardButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                            EntryExitCardListItem: null\r\n                        });\r\n\r\n                        (identityCard) ? this.setState({\r\n                            AddIdentityCardButton: null,\r\n                            IdentityCardListItem: <IdentityCardListItem\r\n                                Index={++index}\r\n                                OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                        }) : this.setState({\r\n                            AddIdentityCardButton: <AddIdentityCardButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                            IdentityCardListItem: null\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Documents</div>\r\n                <div style={{ padding: \"10px\", backgroundColor: \"#E5E5E5\" }}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-18 col-md-offset-2\"></div>\r\n                        <div className=\"col-md-4 text-right\">\r\n                            {this.state.AddDrivingLicenceButton}\r\n                            {this.state.AddEntryExitCardButton}\r\n                            {this.state.AddIdentityCardButton}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ol className=\"list-items\" style={{ marginTop: \"0px\" }}>\r\n                    {this.state.DrivingLicenceListItem}\r\n                    {this.state.EntryExitCardListItem}\r\n                    {this.state.IdentityCardListItem}\r\n                </ol>\r\n            </section>         \r\n        );\r\n    }\r\n};\r\n\r\nexport default DocumentsList;","import React, { Component } from \"react\";\r\n\r\nclass Rating extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div class={`rating ${this.props.Size} ${this.props.Color}`}>\r\n                <div class=\"rating-stars\">\r\n            <ul class=\"rating-stars-background\">\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                    </ul>\r\n                    <ul class=\"rating-stars-value\" style={{ width: `${this.props.Rating}%` }}>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                        <li><i class=\"glyph glyph-star\"></i></li>\r\n                    </ul>\r\n                </div>\r\n                {this.props.Label ? <div class=\"rating-label rating-label-right\">{this.props.Label}</div> : null}\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Rating;","import React, { Component } from \"react\";\r\nimport ProfilePhoto from \"./ProfilePhoto\";\r\nimport DocumentsList from \"./documents/DocumentsList.js\";\r\nimport Rating from \"../../../../controls/Rating\";\r\nimport { getData } from \"../../DriverFunctions.js\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Profile extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            Username: \"\",\r\n            Password: \"\",\r\n            Email: \"\",\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\",\r\n            Active: null,\r\n            RatingAndReviews: {},\r\n\r\n            WarningAlert: null,\r\n            Errors: {}\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Driver\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver found.\") {\r\n                    let driver = response.Driver;\r\n\r\n                    this.setState({\r\n                        Username: driver.Username,\r\n                        Password: driver.Password,\r\n                        Email: driver.Email,\r\n                        FirstName: driver.FirstName,\r\n                        LastName: driver.LastName,\r\n                        DateOfBirth: driver.DateOfBirth,\r\n                        Gender: driver.Gender,\r\n                        Address: driver.Address,\r\n                        PhoneNumber: driver.PhoneNumber,\r\n                        Nationality: driver.Nationality,\r\n                        Active: driver.Active,\r\n                        RatingAndReviews: response.RatingAndReviews\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Username: \"\",\r\n                        Password: \"\",\r\n                        Email: \"\",\r\n                        FirstName: \"\",\r\n                        LastName: \"\",\r\n                        Address: \"\",\r\n                        PhoneNumber: \"\",\r\n                        Gender: \"\",\r\n                        Nationality: \"\",\r\n                        DateOfBirth: \"\",\r\n                        Active: null,\r\n                        RatingAndReviews: {}\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const ratingAndReviews = this.state.RatingAndReviews;\r\n\r\n        return <section>\r\n            {/* <PageHeading Heading=\"PROFILE\" /> */}\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <ProfilePhoto />\r\n                        </div>\r\n                        <div className=\"col-md-18\">\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                {this.state.FirstName + \" \" + this.state.LastName}\r\n                            </div>\r\n                            <div className=\"type-sh3\">\r\n                                <span className=\"fas fa-briefcase m-r-xxxs\" style={{ color: \"#606060\" }}></span>Driver\r\n                            </div>\r\n                            <div className=\"type-sh3\">\r\n                                <span><Rating Rating={ratingAndReviews.Reviews > 0 ? ratingAndReviews.Rating : 0}\r\n                                    Color=\"\" Size=\"rating-small\"\r\n                                    Label={ratingAndReviews.Reviews > 0 ?\r\n                                        `(${ratingAndReviews.Reviews} Review(s))` : `No Reviews`} /></span>\r\n                            </div>\r\n                            \r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-globe-asia\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Active</div>\r\n                                                <div className=\"content-text-secondary\">{(this.state.Active === 1) ?\r\n                                                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-phone\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Phone Number</div>\r\n                                                <div className=\"content-text-secondary\">{this.state.PhoneNumber}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-at\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Username</div>\r\n                                                <div className=\"content-text-secondary\">{this.state.Username}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-envelope\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Email</div>\r\n                                                <div className=\"content-text-secondary\">{this.state.Email}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\" }}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-24\">\r\n                            <div className=\"type-h3\" style={{ paddingTop: \"0px\" }}>Details</div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list theme-alt\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                <span className=\"fas fa-birthday-cake color-default\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Birthday</div>\r\n                                                <div className=\"content-text-secondary\">{this.state.DateOfBirth}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list theme-alt\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                <span className={(this.state.Gender === \"Male\") ? \"fas fa-male color-default\" : \"fas fa-female color-default\"}></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Gender</div>\r\n                                                <div className=\"content-text-secondary\">{this.state.Gender}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list theme-alt\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                <span className=\"fas fa-flag color-default\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Nationality</div>\r\n                                                <div className=\"content-text-secondary\">{this.state.Nationality}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list theme-alt\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                <span className=\"fas fa-map-marker-alt color-default\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Address</div>\r\n                                                <div className=\"content-text-secondary\">{this.state.Address}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <DocumentsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Profile;","import React, { Component } from \"react\";\r\n\r\nclass PageHeading extends Component {\r\n    render() {\r\n        return <section>\r\n            <div style={{ backgroundColor: \"#1C6D6E\", padding: \"5px 5px 5px 20px\" }}>\r\n                <div className=\"sh1 color-light\" style={{ fontWeight: \"bold\" }}>{`/ ${this.props.Heading}`}</div>\r\n            </div>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#26525F\" }}></div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PageHeading;","import React, { Component } from \"react\";\r\nimport { getData, updateTruck } from \"../../DriverFunctions\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\n\r\nclass TruckSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            PlateNumber: \"\",\r\n            Owner: \"\",\r\n            ProductionYear: \"\",\r\n            Brand: \"\",\r\n            Model: \"\",\r\n            Type: \"\",\r\n            MaximumWeight: \"\",\r\n\r\n            ValidPlateNumber: true,\r\n            ValidOwner: true,\r\n            ValidProductionYear: true,\r\n            ValidBrand: true,\r\n            ValidModel: true,\r\n            ValidType: true,\r\n            ValidMaximumWeight: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                PlateNumber: \"\",\r\n                Owner: \"\",\r\n                ProductionYear: \"\",\r\n                Brand: \"\",\r\n                Model: \"\",\r\n                Type: \"\",\r\n                MaximumWeight: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Truck\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Truck found.\") {\r\n                    let truck = response.Truck;\r\n\r\n                    this.setState({\r\n                        PlateNumber: truck.PlateNumber,\r\n                        Owner: truck.Owner,\r\n                        ProductionYear: truck.ProductionYear,\r\n                        Brand: truck.Brand,\r\n                        Model: truck.Model,\r\n                        Type: truck.Type,\r\n                        MaximumWeight: truck.MaximumWeight\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        PlateNumber: \"\",\r\n                        Owner: \"\",\r\n                        ProductionYear: \"\",\r\n                        Brand: \"\",\r\n                        Model: \"\",\r\n                        Type: \"\",\r\n                        MaximumWeight: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidPlateNumber = this.state.ValidPlateNumber;\r\n        let ValidOwner = this.state.ValidOwner;\r\n        let ValidProductionYear = this.state.ValidProductionYear;\r\n        let ValidBrand = this.state.ValidBrand;\r\n        let ValidModel = this.state.ValidModel;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidMaximumWeight = this.state.MaximumWeight;\r\n\r\n        switch (field) {\r\n            case \"PlateNumber\":\r\n                ValidPlateNumber = ((value !== \"\") && (value >= 1 && value <= 999));\r\n                Errors.PlateNumber = ValidPlateNumber ? \"\" : \"Plate Number must be between 001 and 999.\";\r\n                break;\r\n            case \"Owner\":\r\n                ValidOwner = (value !== \"\");\r\n                Errors.Owner = ValidOwner ? \"\" : \"Owner is required.\";\r\n                break;\r\n            case \"ProductionYear\":\r\n                let currentYear = new Date().getFullYear();\r\n                ValidProductionYear = ((value !== \"\") && (value >= 2000 && value <= currentYear));\r\n                Errors.ProductionYear = ValidProductionYear ? \"\" : `Production Year must be between 2000 and ${currentYear}`;\r\n                break;\r\n            case \"Brand\":\r\n                ValidBrand = (value !== \"\");\r\n                Errors.Brand = ValidBrand ? \"\" : \"Brand is required.\";\r\n                break;\r\n            case \"Model\":\r\n                ValidModel = (value !== \"\");\r\n                Errors.Model = ValidModel ? \"\" : \"Model is required.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required\";\r\n                break;\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n\r\n                if (Errors.MaximumWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidMaximumWeight = (value >= 700);\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum weight must be greater than 699.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPlateNumber: ValidPlateNumber,\r\n            ValidOwner: ValidOwner,\r\n            ValidProductionYear: ValidProductionYear,\r\n            ValidBrand: ValidBrand,\r\n            ValidModel: ValidModel,\r\n            ValidType: ValidType,\r\n            ValidMaximumWeight: ValidMaximumWeight\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidPlateNumber &&\r\n                    this.state.ValidOwner &&\r\n                    this.state.ValidProductionYear &&\r\n                    this.state.ValidBrand &&\r\n                    this.state.ValidModel &&\r\n                    this.state.ValidType &&\r\n                    this.state.MaximumWeight\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        let request = {\r\n            Token: localStorage.Token,\r\n            Get: \"Owner\",\r\n            Params: {\r\n                Owner: this.state.Owner\r\n            }\r\n        };\r\n\r\n        await getData(request).then(async response => {\r\n            if (response.Message === \"Owner found.\") {\r\n                this.setState({\r\n                    Preloader: <Preloader />\r\n                });\r\n\r\n                const updatedTruck = {\r\n                    Token: localStorage.Token,\r\n                    TransportCompanyResponsibleID: response.Owner.TransportCompanyResponsibleID,\r\n                    PlateNumber: this.state.PlateNumber,\r\n                    Owner: response.Owner.Username,\r\n                    ProductionYear: this.state.ProductionYear,\r\n                    Brand: this.state.Brand,\r\n                    Model: this.state.Model,\r\n                    Type: this.state.Type,\r\n                    MaximumWeight: this.state.MaximumWeight\r\n                }\r\n\r\n                await updateTruck(updatedTruck).then(response => {\r\n                    this.setState({\r\n                        Preloader: false\r\n                    });\r\n\r\n                    if (response.Message === \"Truck is updated.\") {\r\n                        this.setState({\r\n                            ValidForm: false\r\n                        });\r\n\r\n                        this.props.OnTruckSettingsUpdated();\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                let {\r\n                    Errors,\r\n                } = this.state;\r\n\r\n                Errors.Owner = \"Owner not found.\"\r\n\r\n                this.setState({\r\n                    Errors: Errors,\r\n                    ValidOwner: false,\r\n                    ValidForm: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Truck Settings</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-list-ol\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"number\" name=\"PlateNumber\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.PlateNumber} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Plate Number</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.PlateNumber}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-copyright\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"Owner\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Owner} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Owner</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.Owner}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-calendar-day\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"number\" name=\"ProductionYear\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.ProductionYear} onChange={this.onChange} placeholder=\"XXXX\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Production Year</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"ProductionYear\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-copyright\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"Brand\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Brand} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Brand</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.Brand}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-list-ol\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"Model\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Model} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Truck Model</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.Model}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-cog\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.Type} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Truck Type</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.Type}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-weight\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"number\" name=\"MaximumWeight\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Maximum Weight (GVW)</div>\r\n                                <div className=\"text-danger\">{this.state.Errors.MaximumWeight}</div>\r\n                            </div>\r\n                        </div>                      \r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default TruckSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { Required } from \"../../../../styles/MiscellaneousStyles\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader\";\r\nimport { getData, addTruck } from \"../../DriverFunctions\";\r\n\r\nclass AddTruckDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PlateNumber: \"\",\r\n            Owner: \"\",\r\n            ProductionYear: \"\",\r\n            Brand: \"\",\r\n            Model: \"\",\r\n            Type: \"\",\r\n            MaximumWeight: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidPlateNumber: false,\r\n            ValidOwner: false,\r\n            ValidProductionYear: false,\r\n            ValidBrand: false,\r\n            ValidModel: false,\r\n            ValidType: false,\r\n            ValidMaximumWeight: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                PlateNumber: \"\",\r\n                Owner: \"\",\r\n                ProductionYear: \"\",\r\n                Brand: \"\",\r\n                Model: \"\",\r\n                Type: \"\",\r\n                MaximumWeight: \"\",\r\n                PhotoURL: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidPlateNumber = this.state.ValidPlateNumber;\r\n        let ValidOwner = this.state.ValidOwner;\r\n        let ValidProductionYear = this.state.ValidProductionYear;\r\n        let ValidBrand = this.state.ValidBrand;\r\n        let ValidModel = this.state.ValidModel;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidMaximumWeight = this.state.ValidMaximumWeight;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"PlateNumber\":\r\n                ValidPlateNumber = (value !== \"\");\r\n                Errors.PlateNumber = ValidPlateNumber ? \"\" : \"Plate number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPlateNumber = (value >= 100 && value <= 999);\r\n                Errors.PlateNumber = ValidPlateNumber ? \"\" : \"Plate number must be 3-digits long.\";\r\n                break;\r\n            case \"Owner\":\r\n                ValidOwner = (value !== \"\");\r\n                Errors.Owner = ValidOwner ? \"\" : \"Owner is required.\";\r\n                break;\r\n            case \"ProductionYear\":\r\n                let currentYear = new Date().getFullYear();\r\n                ValidProductionYear = ((value !== \"\") && (value >= 2000 && value <= currentYear));\r\n                Errors.ProductionYear = ValidProductionYear ? \"\" : `Production Year must be between 2000 and ${currentYear}`;\r\n                break;\r\n            case \"Brand\":\r\n                ValidBrand = (value !== \"\");\r\n                Errors.Brand = ValidBrand ? \"\" : \"Brand is required.\";\r\n                break;\r\n            case \"Model\":\r\n                ValidModel = (value !== \"\");\r\n                Errors.Model = ValidModel ? \"\" : \"Model is required.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required\";\r\n                break;\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n\r\n                if (Errors.MaximumWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidMaximumWeight = (value >= 700);\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum weight must be greater than 699.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPlateNumber: ValidPlateNumber,\r\n            ValidOwner: ValidOwner,\r\n            ValidProductionYear: ValidProductionYear,\r\n            ValidBrand: ValidBrand,\r\n            ValidModel: ValidModel,\r\n            ValidType: ValidType,\r\n            ValidMaximumWeight: ValidMaximumWeight,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidPlateNumber &&\r\n                        this.state.ValidOwner &&\r\n                        this.state.ValidProductionYear &&\r\n                        this.state.ValidBrand &&\r\n                        this.state.ValidModel &&\r\n                        this.state.ValidType &&\r\n                        this.state.ValidMaximumWeight &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        let request = {\r\n            Token: localStorage.Token,\r\n            Get: \"Owner\",\r\n            Params: {\r\n                Owner: this.state.Owner\r\n            }\r\n        };\r\n\r\n        await getData(request).then(async response => {\r\n            console.log(response);\r\n\r\n            if (response.Message === \"Owner found.\") {\r\n                \r\n                this.setState({\r\n                    ShowPreloader: true\r\n                });\r\n\r\n                const newTruck = {\r\n                    Token: localStorage.Token,\r\n                    TransportCompanyResponsibleID: response.Owner.TransportCompanyResponsibleID,\r\n                    PlateNumber: this.state.PlateNumber,\r\n                    Owner: response.Owner.Username,\r\n                    ProductionYear: this.state.ProductionYear,\r\n                    Brand: this.state.Brand,\r\n                    Model: this.state.Model,\r\n                    Type: this.state.Type,\r\n                    MaximumWeight: this.state.MaximumWeight,\r\n                    PhotoURL: this.state.PhotoURL\r\n                }\r\n\r\n                await addTruck(newTruck).then(response => {\r\n                    this.setState({\r\n                        ShowPreloader: false\r\n                    });\r\n\r\n                    if (response.Message === \"Truck is added.\") {\r\n                        this.cancelButton.click();\r\n                        this.props.OnOK();\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                let {\r\n                    Errors,\r\n                } = this.state;\r\n\r\n                Errors.Owner = \"Owner not found.\"\r\n\r\n                this.setState({\r\n                    Errors: Errors,\r\n                    ValidOwner: false,\r\n                    ValidForm: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"add-truck-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }} />\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"type-h3 color-default p-t-xxs\">Add Truck</div>\r\n                                                <label className=\"text-danger\">{this.state.Errors.PhotoURL}</label>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-md-12\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <label className=\"control-label\">Plate Number</label>\r\n                                                            <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                            <input type=\"number\" name=\"PlateNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                                value={this.state.PlateNumber} onChange={this.onChange} />\r\n                                                            <span className=\"text-danger\">{this.state.Errors.PlateNumber}</span>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label className=\"control-label\">Owner</label>\r\n                                                            <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                            <input type=\"text\" name=\"Owner\" className=\"form-control\" autoComplete=\"off\"\r\n                                                                value={this.state.Owner} onChange={this.onChange} />\r\n                                                            <span className=\"text-danger\">{this.state.Errors.Owner}</span>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label className=\"control-label\">Production Year</label>\r\n                                                            <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                            <input type=\"number\" name=\"ProductionYear\" className=\"form-control\" autoComplete=\"off\"\r\n                                                                value={this.state.ProductionYear} onChange={this.onChange} placeholder=\"XXXX\" />\r\n                                                            <span className=\"text-danger\">{this.state.Errors.ProductionYear}</span>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label className=\"control-label\">Brand</label>\r\n                                                            <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                            <input type=\"text\" name=\"Brand\" className=\"form-control\" autoComplete=\"off\"\r\n                                                                value={this.state.Brand} onChange={this.onChange} />\r\n                                                            <span className=\"text-danger\">{this.state.Errors.Brand}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-12\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <label className=\"control-label\">Truck Model</label>\r\n                                                            <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                            <input type=\"text\" name=\"Model\" className=\"form-control\" autoComplete=\"off\"\r\n                                                                value={this.state.Model} onChange={this.onChange} />\r\n                                                            <span className=\"text-danger\">{this.state.Errors.Model}</span>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label className=\"control-label\">Truck Type</label>\r\n                                                            <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                            <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\"\r\n                                                                value={this.state.Type} onChange={this.onChange} />\r\n                                                            <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label className=\"control-label\">Maximum Weight (GVW)</label>\r\n                                                            <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                            <input type=\"number\" name=\"MaximumWeight\" className=\"form-control\" autoComplete=\"off\"\r\n                                                                value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                                            <span className=\"text-danger\">{this.state.Errors.MaximumWeight}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddTruckDialog;","import React, { Component } from \"react\";\r\nimport ImageUploader from \"../../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { addTrailer } from \"../../../DriverFunctions.js\";\r\n\r\nclass AddTrailerDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            MaximumWeight: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n            Type: \"\",\r\n\r\n            ValidMaximumWeight: false,\r\n            ValidPhotoURL: false,\r\n            ValidType: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                MaximumWeight: \"\",\r\n                PhotoURL: \"\",\r\n                Type: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidMaximumWeight = this.state.ValidMaximumWeight;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n        let ValidType = this.state.ValidType;\r\n\r\n        switch (field) {\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n\r\n                if (Errors.MaximumWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidMaximumWeight = (value >= 700);\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum weight must be greater than 699.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidMaximumWeight: ValidMaximumWeight,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n            ValidType: ValidType\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidMaximumWeight &&\r\n                        this.state.ValidPhotoURL &&\r\n                        this.state.ValidType\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newTrailer = {\r\n            Token: localStorage.Token,\r\n            MaximumWeight: this.state.MaximumWeight,\r\n            PhotoURL: this.state.PhotoURL,\r\n            Type: this.state.Type\r\n        }\r\n\r\n        console.log(\"Going to add the trailer...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addTrailer(newTrailer).then(response => {\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n\r\n            if (response.Message === \"Trailer is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"add-trailer-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }}\r\n                                                    ImageCategory=\"IdentityCard\" />\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"type-h3 color-default p-t-xxs\">Add a New Trailer</div>\r\n                                                <div className=\"type-sh4 text-danger\">{this.state.Errors.PhotoURL}</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Maximum Weight (GVW)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"MaximumWeight\" className=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.MaximumWeight}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Trailer Type</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddTrailerDialog;","import React, { Component } from \"react\";\r\nimport AddTrailerDialog from \"./AddTrailerDialog\";\r\n\r\nclass AddTrailer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddTrailerDialog: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-truck-pickup\"></span>   Trailers</div>\r\n                            <p className=\"color-light\">RECOMMENDED: Since your truck is all set up, you're good to go for adding up to TWO trailers to it.</p>\r\n                            <div className=\"btn-group\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-primary\"\r\n                                    style={{ minWidth: \"152px\" }}\r\n                                    data-toggle=\"modal\"\r\n                                    data-target=\"#add-trailer-dialog\"\r\n                                    onMouseDown={() => {\r\n                                        this.setState({\r\n                                            AddTrailerDialog: <AddTrailerDialog\r\n                                                OnCancel={() => {\r\n                                                    this.setState({\r\n                                                        AddTrailerDialog: null\r\n                                                    });\r\n                                                }}\r\n                                                OnOK={cancelButton => {\r\n                                                    cancelButton.click();\r\n                                                    this.props.OnTrailerAdded();\r\n                                                }} />\r\n                                        });\r\n                                    }}>Add Trailer</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {this.state.AddTrailerDialog} \r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddTrailer;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../styles/MiscellaneousStyles\";\r\nimport ImageUploader from \"../../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport { updateTrailer } from \"../../../DriverFunctions.js\";\r\n\r\nclass EditTrailerDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            MaximumWeight: this.props.Trailer.MaximumWeight,\r\n            PhotoURL: this.props.Trailer.PhotoURL,\r\n            Type: this.props.Trailer.Type,\r\n\r\n            ValidMaximumWeight: true,\r\n            ValidPhotoURL: true,\r\n            ValidType: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                MaximumWeight: \"\",\r\n                PhotoURL: \"\",\r\n                Type: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidMaximumWeight = this.state.ValidMaximumWeight;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n        let ValidType = this.state.ValidType;\r\n\r\n        switch (field) {\r\n            case \"MaximumWeight\":\r\n                ValidMaximumWeight = (value !== \"\");\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum Weight is required.\";\r\n\r\n                if (Errors.MaximumWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidMaximumWeight = (value >= 700);\r\n                Errors.MaximumWeight = ValidMaximumWeight ? \"\" : \"Maximum weight must be greater than 699.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Type is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidMaximumWeight: ValidMaximumWeight,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n            ValidType: ValidType\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidMaximumWeight &&\r\n                        this.state.ValidPhotoURL &&\r\n                        this.state.ValidType\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedTrailer = {\r\n            Token: localStorage.Token,\r\n            TrailerID: this.props.Trailer.TrailerID,\r\n            MaximumWeight: this.state.MaximumWeight,\r\n            PhotoURL: this.state.PhotoURL,\r\n            Type: this.state.Type\r\n        }\r\n\r\n        console.log(\"Going to update trailer...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        updateTrailer(updatedTrailer).then(response => {\r\n            if (response.Message === \"Trailer is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`edit-trailer-dialog${this.props.dialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }}\r\n                                                    ImageCategory=\"IdentityCard\" />\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"type-h3 color-default p-t-xxs\">Edit Your Trailer</div>\r\n                                                <div className=\"type-sh4 text-danger\">{this.state.Errors.PhotoURL}</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Maximum Weight (GVW)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"MaximumWeight\" className=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.MaximumWeight} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.MaximumWeight}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Trailer Type</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default EditTrailerDialog;","import React, { Component } from \"react\";\r\nimport { deleteTrailer } from \"../../../DriverFunctions.js\";\r\nimport EditTrailerDialog from \"./EditTrailerDialog.js\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\n\r\nclass TrailersList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Trailers: this.props.Trailers,\r\n            EditTrailerDialogs: [],\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async index => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedTrailer = {\r\n            Token: localStorage.Token,\r\n            TrailerID: this.state.Trailers[index].TrailerID \r\n        };\r\n\r\n        console.log(`Going to delete Trailers[${index}]...`);\r\n\r\n        await deleteTrailer(discardedTrailer).then(response => {\r\n            if (response.Message === \"Trailer is deleted.\") {\r\n                this.props.OnTrailersUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Trailers</div>\r\n            <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                {this.state.Trailers.map((value, index) => {\r\n                    return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                        <div className=\"jumbotron theme-default\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-6\">\r\n                                        <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                            src={value.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                                overflow: \"hidden\",\r\n                                                border: \"5px solid #3A3A3C\",\r\n                                                margin: \"5px\"\r\n                                            }} />\r\n                                    </div>\r\n                                    <div className=\"col-md-18\">\r\n                                        <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>{`Trailer # ${index + 1}.`}</div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"entity-list\">\r\n                                                    <div className=\"entity-list-item\">\r\n                                                        <div className=\"item-icon\">\r\n                                                            <span className=\"fas fa-weight\"></span>\r\n                                                        </div>\r\n                                                        <div className=\"item-content-primary\">\r\n                                                            <div className=\"content-text-primary\">Maximum Weight</div>\r\n                                                            <div className=\"content-text-secondary\">{`${value.MaximumWeight} GVM`}</div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"entity-list\">\r\n                                                    <div className=\"entity-list-item\">\r\n                                                        <div className=\"item-icon\">\r\n                                                            <span className=\"fas fa-star-of-life\"></span>\r\n                                                        </div>\r\n                                                        <div className=\"item-content-primary\">\r\n                                                            <div className=\"content-text-primary\">Trailer Type</div>\r\n                                                            <div className=\"content-text-secondary\">{value.Type}</div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target={`#edit-trailer-dialog${index}`}\r\n                                onMouseDown={() => {\r\n                                    let editTrailerDialogs = this.state.EditTrailerDialogs;\r\n\r\n                                    editTrailerDialogs[index] = <EditTrailerDialog\r\n                                        dialogID={index}\r\n                                        Trailer={value}\r\n                                        OnCancel={() => {\r\n                                            let editTrailerDialogs = this.state.EditTrailerDialogs\r\n                                            editTrailerDialogs[index] = null;\r\n\r\n                                            this.setState({\r\n                                                EditTrailerDialogs: editTrailerDialogs,\r\n                                            });\r\n\r\n                                        }}\r\n                                        OnOK={cancelButton => {\r\n                                            cancelButton.click();\r\n                                            this.props.OnTrailersUpdated();\r\n                                        }} />;\r\n\r\n                                    this.setState({\r\n                                        EditTrailerDialogs: editTrailerDialogs,\r\n                                    });\r\n                                }}>Edit</button>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(index); }}>Delete</button>\r\n                        </div>\r\n                        {this.state.EditTrailerDialogs[index]}\r\n                    </li>\r\n                })}\r\n            </ol>\r\n            {this.state.Preloader}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TrailersList;","import React, { Component } from \"react\";\r\nimport AddTrailer from \"./AddTrailer\";\r\nimport TrailersList from \"./TrailersList\"\r\nimport { getData } from \"../../../DriverFunctions\";\r\n\r\nclass Trailers extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddTrailer: null,\r\n            TrailersList: null\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Trailers\"\r\n            };\r\n\r\n            this.setState({\r\n                AddTrailer: null,\r\n                TrailersList: null\r\n            });\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Trailers found.\") {\r\n\r\n                    if (response.Trailers.length < 2) {\r\n                        this.setState({\r\n                            AddTrailer: <AddTrailer OnTrailerAdded={this.onComponentUpdated} />,\r\n                            TrailersList: <TrailersList Trailers={response.Trailers}\r\n                                OnTrailersUpdated={this.onComponentUpdated} />\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            AddTrailer: null,\r\n                            TrailersList: <TrailersList Trailers={response.Trailers}\r\n                                OnTrailersUpdated={this.onComponentUpdated} />\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AddTrailer: <AddTrailer OnTrailerAdded={this.onComponentUpdated} />,\r\n                        TrailersList: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            {this.state.AddTrailer}\r\n            {this.state.TrailersList}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Trailers;","import React, { Component } from \"react\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader\";\r\nimport { getData, updateTruckPhoto, deleteTruck } from \"../../DriverFunctions\";\r\nimport TruckSettings from \"./TruckSettings\";\r\nimport AddTruckDialog from \"./AddTruckDialog\";\r\nimport Trailers from \"./trailers/Trailers\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Truck extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            Truck: null,\r\n            ShowPreloader: false\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Truck\"\r\n            };\r\n\r\n            this.setState({\r\n                Preloader: <Preloader />\r\n            });\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Truck found.\") {\r\n                    this.setState({\r\n                        Truck: response.Truck,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Truck: null,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const discardedTruck = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete truck...`);\r\n\r\n        await deleteTruck(discardedTruck).then(async response => {\r\n            if (response.Message === \"Truck is deleted.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                await this.onComponentUpdated();\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const truck = this.state.Truck;\r\n        const showPreloader = this.state.ShowPreloader;\r\n\r\n        return <section>\r\n            {/* <PageHeading Heading=\"TRUCKS\" /> */}\r\n            {truck ? \r\n                <section>\r\n                    <div className=\"jumbotron theme-default\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <ImageUploader Source={truck.PhotoURL}\r\n                                        Height=\"200px\" Width=\"200px\"\r\n                                        OnImageUploaded={async response => {\r\n                                            if (response.message === \"Image uploaded successfully.\") {\r\n                                                const updatedTruck = {\r\n                                                    Token: localStorage.Token,\r\n                                                    PhotoURL: response.imageUrl\r\n                                                };\r\n\r\n                                                await updateTruckPhoto(updatedTruck).then(response => {\r\n                                                    if (response.Message === \"Truck photo updated.\") {\r\n                                                        this.setState({\r\n                                                            PhotoURL: updatedTruck.PhotoURL\r\n                                                        });\r\n                                                    }\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        OnInvalidImageSelected={() => {\r\n                                            return;\r\n                                        }}\r\n                                        ImageCategory=\"Truck\" />\r\n                                </div>\r\n                                <div className=\"col-md-18\">\r\n                                    <div className=\"type-h3 color-default p-t-n\">\r\n                                        {`${truck.Brand} ${truck.Model}`}\r\n                                    </div>\r\n                                    <div className=\"type-sh3\">\r\n                                        <span className=\"fas fa-truck m-r-xxs\" style={{ color: \"#606060\" }}></span>{truck.Type}\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-list-ol\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Plate Number</div>\r\n                                                        <div className=\"content-text-secondary\">{truck.PlateNumber}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-calendar-day\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Production Year</div>\r\n                                                        <div className=\"content-text-secondary\">{truck.ProductionYear}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-weight\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Maximum Weight</div>\r\n                                                        <div className=\"content-text-secondary\">{`${truck.MaximumWeight} GVW`}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-copyright\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Owner</div>\r\n                                                        <div className=\"content-text-secondary\">{truck.Owner}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.onDelete}>Delete Truck</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <TruckSettings OnTruckSettingsUpdated={this.onComponentUpdated} />\r\n                    <Trailers />\r\n                    {showPreloader ? <Preloader /> : null}\r\n                </section> :\r\n                <section>\r\n                    <div className=\"jumbotron theme-alt\" style={{ width: \"100%\", height: \"100vh\", backgroundColor: \"#333333\" }}>\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        alt=\"add_truck.png\" src=\"./images/add_truck.png\" data-source-index=\"2\" />\r\n                                </div>\r\n                                <div className=\"col-md-12 col-md-pull-12\">\r\n                                    <div className=\"type-h3\">Truck</div>\r\n                                    <div className=\"type-sh3\">You have not added any truck yet.</div>\r\n                                    <p>Adding your truck will let the Traders or Brokers see details about your it. Valid and complete details of your truck make more chances for you to receive job requests.</p>\r\n                                    <div className=\"btn-group\">\r\n                                        <button className=\"btn btn-primary\"\r\n                                            data-toggle=\"modal\"\r\n                                            data-target=\"#add-truck-dialog\">Add Now</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <AddTruckDialog OnOK={this.onComponentUpdated} />\r\n                    {showPreloader ? <Preloader /> : null}\r\n                </section>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Truck;","import React, { Component } from \"react\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { addPermitLicence } from \"../../DriverFunctions.js\";\r\n\r\nclass AddPermitLicenceDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PermitNumber: \"\",\r\n            ExpiryDate: new Date(),\r\n            PhotoURL: \"./images/default_image.png\",\r\n            Code: \"\",\r\n            Place: \"\",\r\n\r\n            ValidPermitNumber: false,\r\n            ValidExpiryDate: false,\r\n            ValidPhotoURL: false,\r\n            ValidCode: false,\r\n            ValidPlace: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                PermitNumber: \"\",\r\n                ExpiryDate: \"\",\r\n                PhotoURL: \"\",\r\n                Code: \"\",\r\n                Place: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidPermitNumber = this.state.ValidPermitNumber;\r\n        let ValidExpiryDate = this.state.ValidExpiryDate;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n        let ValidCode = this.state.ValidCode;\r\n        let ValidPlace = this.state.ValidPlace;\r\n\r\n        switch (field) {\r\n            case \"PermitNumber\":\r\n                ValidPermitNumber = (value !== \"\");\r\n                Errors.PermitNumber = ValidPermitNumber ? \"\" : \"Permit number is required.\";\r\n\r\n                if (Errors.PermitNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPermitNumber = (value !== \"\");\r\n                Errors.PermitNumber = ValidPermitNumber ? \"\" : \"Permit number is required.\";\r\n\r\n                break;\r\n            case \"ExpiryDate\":\r\n                ValidExpiryDate = (new Date(value).getTime() >= new Date().getTime());\r\n                Errors.ExpiryDate = ValidExpiryDate ? \"\" : \"Expiry Date must be later than yesterday.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            case \"Code\":\r\n                ValidCode = (value !== \"\");\r\n                Errors.Code = ValidCode ? \"\" : \"Permit code is required.\";\r\n                break;\r\n            case \"Place\":\r\n                ValidPlace = (value !== \"\");\r\n                Errors.Place = ValidPlace ? \"\" : \"Permit place is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPermitNumber: ValidPermitNumber,\r\n            ValidExpiryDate: ValidExpiryDate,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n            ValidCode: ValidCode,\r\n            ValidPlace: ValidPlace,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidPermitNumber &&\r\n                        this.state.ValidExpiryDate &&\r\n                        this.state.ValidPhotoURL &&\r\n                        this.state.ValidCode &&\r\n                        this.state.ValidPlace\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newPermitLicence = {\r\n            Token: localStorage.Token,\r\n            PermitNumber: this.state.PermitNumber,\r\n            ExpiryDate: this.state.ExpiryDate,\r\n            PhotoURL: this.state.PhotoURL,\r\n            Code: this.state.Code,\r\n            Place: this.state.Place\r\n        }\r\n\r\n        console.log(\"Going to add Permit Licence.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addPermitLicence(newPermitLicence).then(response => {\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n\r\n            if (response.Message === \"Permit Licence is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"add-permit-licence-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }} />\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"type-h3 color-default p-t-xxs\">Add a Valid Permit Licence</div>\r\n                                                <div className=\"type-sh4 text-danger\">{this.state.Errors.PhotoURL}</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Permit Number</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"PermitNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.PermitNumber} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.PermitNumber}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Expiry Date</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"date\" name=\"ExpiryDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ExpiryDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ExpiryDate}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Permit Code</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"Code\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Code} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Code}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Permit Place</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"Place\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Place} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Place}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddPermitLicenceDialog;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../styles/MiscellaneousStyles\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { updatePermitLicence } from \"../../DriverFunctions.js\";\r\n\r\nclass EditPermitLicenceDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PermitNumber: this.props.PermitLicence.PermitNumber,\r\n            ExpiryDate: this.props.PermitLicence.ExpiryDate,\r\n            PhotoURL: this.props.PermitLicence.PhotoURL,\r\n            Code: this.props.PermitLicence.Code,\r\n            Place: this.props.PermitLicence.Place,\r\n\r\n            ValidPermitNumber: true,\r\n            ValidExpiryDate: true,\r\n            ValidPhotoURL: true,\r\n            ValidCode: true,\r\n            ValidPlace: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                PermitNumber: \"\",\r\n                ExpiryDate: \"\",\r\n                PhotoURL: \"\",\r\n                Code: \"\",\r\n                Place: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidPermitNumber = this.state.ValidPermitNumber;\r\n        let ValidExpiryDate = this.state.ValidExpiryDate;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n        let ValidCode = this.state.ValidCode;\r\n        let ValidPlace = this.state.ValidPlace;\r\n\r\n        switch (field) {\r\n            case \"PermitNumber\":\r\n                ValidPermitNumber = (value !== \"\");\r\n                Errors.PermitNumber = ValidPermitNumber ? \"\" : \"Permit number is required.\";\r\n                break;\r\n            case \"ExpiryDate\":\r\n                ValidExpiryDate = (new Date(value).getTime() >= new Date().getTime());\r\n                Errors.ExpiryDate = ValidExpiryDate ? \"\" : \"Expiry Date must be later than yesterday.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            case \"Code\":\r\n                ValidCode = (value !== \"\");\r\n                Errors.Code = ValidCode ? \"\" : \"Permit code is required.\";\r\n                break;\r\n            case \"Place\":\r\n                ValidPlace = (value !== \"\");\r\n                Errors.Place = ValidPlace ? \"\" : \"Permit place is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPermitNumber: ValidPermitNumber,\r\n            ValidExpiryDate: ValidExpiryDate,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n            ValidCode: ValidCode,\r\n            ValidPlace: ValidPlace,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidPermitNumber &&\r\n                    this.state.ValidExpiryDate &&\r\n                    this.state.ValidPhotoURL &&\r\n                    this.state.ValidCode &&\r\n                    this.state.ValidPlace\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedPermitLicence = {\r\n            Token: localStorage.Token,\r\n            PermitLicenceID: this.props.PermitLicence.PermitLicenceID,\r\n            PermitNumber: this.state.PermitNumber,\r\n            ExpiryDate: this.state.ExpiryDate,\r\n            PhotoURL: this.state.PhotoURL,\r\n            Code: this.state.Code,\r\n            Place: this.state.Place\r\n        }\r\n\r\n        console.log(\"Going to update Permit Licence.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await updatePermitLicence(updatedPermitLicence).then(async response => {\r\n            if (response.Message === \"Permit Licence is updated.\") {\r\n                this.cancelButton.click();\r\n                await this.props.OnOK();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`edit-permit-dialog${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }} />\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"type-h3 color-default p-t-xxs\">Edit Permit Licence</div>\r\n                                                <div className=\"type-sh4 text-danger\">{this.state.Errors.PhotoURL}</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Permit Number</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"PermitNumber\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.PermitNumber} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.PermitNumber}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Expiry Date</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"date\" name=\"ExpiryDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.ExpiryDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ExpiryDate}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Permit Code</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"Code\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Code} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Code}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Permit Place</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"Place\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Place} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Place}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default EditPermitLicenceDialog;","import React, { Component } from \"react\";\r\nimport { deletePermitLicence } from \"../../DriverFunctions.js\";\r\nimport EditPermitLicenceDialog from \"./EditPermitLicenceDialog.js\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\n\r\nclass PermitLicenceListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllPermitLicences: [],\r\n            PermitLicences: [],\r\n            EditPermitLicenceDialogs: [],\r\n            SearchString: \"\",\r\n            Preloader: null,\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async permitLicenceID => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedPermitLicence = {\r\n            Token: localStorage.Token,\r\n            PermitLicenceID: permitLicenceID\r\n        };\r\n\r\n        console.log(\"Going to delete Permit licence...\");\r\n\r\n        await deletePermitLicence(discardedPermitLicence).then(async response => {\r\n            if (response.Message === \"Permit Licence is deleted.\") {\r\n                await this.props.OnPermitLicenceUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const permitLicence = this.props.PermitLicence;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                src={permitLicence.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"col-md-18\">\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>{`${index + 1}.`}</div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-hashtag\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Permit Number</div>\r\n                                                <div className=\"content-text-secondary\">{permitLicence.PermitNumber}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-calendar\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Expiry Date</div>\r\n                                                <div className=\"content-text-secondary\">{permitLicence.ExpiryDate}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-asterisk\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Permit Code</div>\r\n                                                <div className=\"content-text-secondary\">{permitLicence.Code}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-map-marker-alt\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Permit Place</div>\r\n                                                <div className=\"content-text-secondary\">{permitLicence.Place}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#edit-permit-dialog${index}`}>Edit</button>\r\n                <button type=\"button\" className=\"btn btn-danger\" onClick={async () => { await this.onDelete(permitLicence.PermitLicenceID); }}>Delete</button>\r\n            </div>\r\n            <EditPermitLicenceDialog\r\n                DialogID={index}\r\n                PermitLicence={permitLicence}\r\n                OnOK={async () => { await this.props.OnPermitLicenceUpdated(); }} />\r\n            {this.state.Preloader}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PermitLicenceListItem;","import React, { Component } from \"react\";\r\n\r\nclass ProgressBar extends Component {\r\n    render() {\r\n        return <div className=\"progress-bar\">\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n        </div>;\r\n    }\r\n};\r\n\r\nexport default ProgressBar","import React, { Component } from \"react\";\r\nimport { getData } from \"../../DriverFunctions.js\";\r\nimport PermitLicenceListItem from \"./PermitLicencesListItem\";\r\nimport ProgressBar from \"../../../../controls/ProgressBar\";\r\n\r\nclass PermitLicencesList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllPermitLicences: [],\r\n            PermitLicences: [],\r\n            SearchString: \"\",\r\n            Searching: null,\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"PermitLicences\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true,\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Permit licences found.\") {\r\n                    this.setState({\r\n                        AllPermitLicences: response.PermitLicences,\r\n                        PermitLicences: response.PermitLicences,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllPermitLicences: [],\r\n                        PermitLicences: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.SearchString === \"\") {\r\n            this.setState({\r\n                PermitLicences: this.state.AllPermitLicences\r\n            });\r\n        }\r\n\r\n        const allPermitLicences = this.state.AllPermitLicences;\r\n        let filteredPermitLicences = [];\r\n\r\n        for (var i = 0; i < allPermitLicences.length; i++) {\r\n            if (allPermitLicences[i].Place.includes(this.state.SearchString)) {\r\n                filteredPermitLicences[i] = allPermitLicences[i];\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            PermitLicences: filteredPermitLicences\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const permitLicences = this.state.PermitLicences;\r\n\r\n        return (\r\n            <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Permit Licences</div>\r\n                <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                    <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                        <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                            <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                                <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search by Permit Place\"\r\n                                            style={{ maxWidth: \"500px\", width: \"100%\" }} autoComplete=\"off\"\r\n                                            value={this.state.SearchString} onChange={this.onChange} />\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                {(permitLicences.length === 0) ?\r\n                    <div className=\"jumbotron theme-default\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                {this.state.Searching ? <div className=\"col-md-24 text-center\">\r\n                                    <div>\r\n                                        <div className=\"type-h3\" style={{ color: \"#008575\" }}>Searching</div>\r\n                                        <ProgressBar />\r\n                                    </div>\r\n                                </div> : <div className=\"col-md-24 text-center\">\r\n                                        <h3><span className=\"fas fa-exclamation-triangle\" style={{ color: \"#FFBF15\" }}></span> No licences found.</h3>\r\n                                    </div>}\r\n                            </div>\r\n                        </div>\r\n                    </div> : <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                        {this.state.PermitLicences.map((permitLicence, index) => {\r\n                            return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                                <PermitLicenceListItem Index={index}\r\n                                    PermitLicence={permitLicence}\r\n                                    OnPermitLicenceUpdated={async () => { await this.onComponentUpdated() }} />\r\n                            </li>\r\n                        })}\r\n                    </ol>}\r\n                {this.state.Preloader}\r\n            </section>         \r\n        );\r\n    }\r\n};\r\n\r\nexport default PermitLicencesList;","import React, { Component } from \"react\";\r\nimport AddPermitLicenceDialog from \"./AddPermitLicenceDialog.js\";\r\nimport PermitLicencesList from \"./PermitLicencesList.js\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Permits extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddPermitLicenceDialog: null\r\n        };\r\n\r\n        this.onPermitLicencesUpdated = this.onPermitLicencesUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onPermitLicencesUpdated();\r\n    }\r\n\r\n    onPermitLicencesUpdated = () => {\r\n        this.PermitLicencesList.onComponentUpdated();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                {/* <PageHeading Heading=\"PERMITS\" /> */}\r\n                <div class=\"page-header\" style={{\r\n                    backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundColor: \"#215761\"\r\n                }}>\r\n                    <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xs-18\">\r\n                                <div className=\"type-h3 color-light\"><span className=\"fas fa-id-badge\"></span>   Permit Licences</div>\r\n                                <p className=\"color-light\">If you are a non-Saudi driver, then you must have at least one permit licence.</p>\r\n                                <div className=\"btn-group\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-primary\"\r\n                                        data-toggle=\"modal\"\r\n                                        data-target=\"#add-permit-licence-dialog\"\r\n                                        onMouseDown={() => {\r\n                                            this.setState({\r\n                                                AddPermitLicenceDialog: (<AddPermitLicenceDialog\r\n                                                    OnCancel={() => {\r\n                                                        this.setState({\r\n                                                            AddPermitLicenceDialog: null,\r\n                                                        });\r\n                                                    }}\r\n                                                    OnOK={cancelButton => {\r\n                                                        cancelButton.click();\r\n                                                        this.onPermitLicencesUpdated();\r\n                                                    }} />),\r\n                                            });\r\n                                        }}>New Permit Licence</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <PermitLicencesList ref={permitLicencesList => this.PermitLicencesList = permitLicencesList} />\r\n                {this.state.AddPermitLicenceDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Permits;","import React, { Component } from \"react\";\r\nimport ProgressBar from \"../../controls/ProgressBar\";\r\n\r\nclass SearchingContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const searching = this.props.Searching;\r\n        const searchingFor = this.props.SearchingFor;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\" style={{ width: \"100%\", height: \"100vh\" }}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {searching ? <div className=\"col-md-24 text-center\">\r\n                            <div>\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\" }}>Searching</div>\r\n                                <ProgressBar />\r\n                            </div>\r\n                        </div> : <div className=\"col-md-24 text-center\">\r\n                                <h3><span className=\"fas fa-exclamation-triangle\" style={{ color: \"#FFBF15\" }}></span>{` No ${searchingFor} found.`}</h3>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            </div> \r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default SearchingContainer;","import React, { Component } from \"react\";\r\n\r\nclass ProgressRing extends Component {\r\n    render() {\r\n        return <div className=\"progress-ring\">\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n            <div className=\"progress-circle\"></div>\r\n        </div>;\r\n    }\r\n};\r\n\r\nexport default ProgressRing;","import React, { Component } from \"react\";\r\nimport Strings from \"../../../../res/strings\";\r\n\r\nclass EarningListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const earning = this.props.Earning;\r\n        const created = new Date(earning.Created);\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{index + 1}</strong>\r\n                {index === 0 ? <span class=\"badge back-color-golden m-l-xxxs\">NEW</span> : null}\r\n            </td>\r\n            <td>{`${earning.Amount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n            <td>{earning.JobNumber}</td>\r\n            <td>{earning.DuesPaid ?\r\n                <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</td>\r\n            <td>{`${created.toDateString()} at ${created.toLocaleTimeString()}`}</td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default EarningListItem;","import React, { Component } from \"react\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport SearchingContainer from \"../../../../containers/searching/SearchingContainer\";\r\nimport ProgressRing from \"../../../../controls/ProgressRing\";\r\nimport EarningListItem from \"./EarningListItem\";\r\nimport Strings from \"../../../../res/strings\";\r\nimport { getData } from \"../../DriverFunctions\";\r\n\r\nclass EarningsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Earnings: [],\r\n            NetEarning: 0,\r\n            Searching: false,\r\n            Refreshing: false,\r\n        }\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Earnings\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Earnings found.\") {\r\n                    this.setState({\r\n                        Earnings: response.Earnings,\r\n                        NetEarning: response.NetEarning,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Earnings: [],\r\n                        NetEarning: 0,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Earnings\"\r\n            };\r\n\r\n            this.setState({\r\n                Refreshing: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Earnings found.\") {\r\n                    this.setState({\r\n                        Earnings: response.Earnings,\r\n                        NetEarning: response.NetEarning,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Earnings: [],\r\n                        NetEarning: 0,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const earnings = this.state.Earnings;\r\n        const netEarning = this.state.NetEarning; \r\n\r\n        return <section>\r\n            {/* <PageHeading Heading=\"EARNINGS\" /> */}\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-coins m-r-xs\"></span>Earnings</div>\r\n                            <p className=\"color-light\">JOB CHARGES: In case you have some unpaid dues, you must pay them from Payments section.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"alert alert-info m-n\" style={{ backgroundColor: \"#333333\" }}>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <div className=\"entity-list theme-alt\">\r\n                            <div className=\"entity-list-item\">\r\n                                <div className=\"item-icon\" style={{ backgroundColor: \"#333333\", color: \"#008575\" }}>\r\n                                    <span className=\"fas fa-dollar-sign\"></span>\r\n                                </div>\r\n                                <div className=\"item-content-primary\">\r\n                                    <div className=\"content-text-primary\">Net Earning</div>\r\n                                    <div className=\"content-text-secondary\">{`${netEarning.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Your Earnings\r\n                    {this.state.Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            {(earnings.length === 0) ?\r\n                <SearchingContainer Searching={this.state.Searching}\r\n                    SearchingFor=\"earnings\" /> :\r\n                <div class=\"table-responsive back-color-gray\" style={{ height: \"100vh\" }}>\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>NUMBER</th>\r\n                                <th>AMOUNT</th>\r\n                                <th>JOB NUMBER</th>\r\n                                <th>DUES PAID?</th>\r\n                                <th>EARNED ON</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {earnings.map((earning, index) => {\r\n                                return <EarningListItem key={index}\r\n                                    Index={index}\r\n                                    Earning={earning} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default EarningsList;","import React, { Component } from \"react\";\r\nimport EarningsList from \"./EarningsList\";\r\n\r\nclass FinancialAffairs extends Component {\r\n    render() {\r\n        return <section>\r\n            <EarningsList Refresh={this.props.Refresh} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default FinancialAffairs;","import React, { Component } from \"react\";\r\n\r\nclass IdentityCardContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const identityCard = this.props.IdentityCard;\r\n\r\n        return identityCard ? <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={identityCard.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-16\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Identity Card</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-24\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">ID Number</div>\r\n                                                    <div className=\"content-text-secondary\">{identityCard.IDNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </section> : null;\r\n    }\r\n};\r\n\r\nexport default IdentityCardContainer;","import React, { Component } from \"react\";\r\n\r\nclass CommercialRegisterCertificateContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const commercialRegisterCertificate = this.props.CommercialRegisterCertificate;\r\n\r\n        return commercialRegisterCertificate ? <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={commercialRegisterCertificate.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-16\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Commercial Register Certificate</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-24\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Certificate Number</div>\r\n                                                    <div className=\"content-text-secondary\">{commercialRegisterCertificate.Number}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-cog\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Certificate Type</div>\r\n                                                    <div className=\"content-text-secondary\">{commercialRegisterCertificate.Type}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </section> : null;\r\n    }\r\n};\r\n\r\nexport default CommercialRegisterCertificateContainer;","import axios from \"axios\";\r\nimport Strings from \"../../res/strings\";\r\n\r\n// GET: GetPublicData\r\nexport const getPublicData = async request => {\r\n    console.log(`Sending GET request to ${Strings.NAQEL_SERVER}users/get${request.Get}...`);\r\n    return await axios.get(`${Strings.NAQEL_SERVER}users/get${request.Get}`, {\r\n        params: request.Params\r\n    }).then(response => {\r\n        return response.data;\r\n    });\r\n};","import React, { Component } from \"react\";\r\nimport IdentityCardContainer from \"./IdentityCardContainer\";\r\nimport CommercialRegisterCertificateContainer from \"./CommercialRegisterCertificateContainer\";\r\nimport SearchingContainer from \"../../searching/SearchingContainer\";\r\nimport { getPublicData } from \"../../../components/shared/UserFunctions\";\r\n\r\nclass DocumentsDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TraderDocuments: null,\r\n            Searching: false,\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Get: \"TraderDocuments\",\r\n                Params: {\r\n                    TraderID: this.props.TraderID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Trader documents found.\") {\r\n                    this.setState({\r\n                        TraderDocuments: response.TraderDocuments,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TraderDocuments: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const traderDocuments = this.state.TraderDocuments;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`documents-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h2\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Documents</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {(this.state.Searching || !traderDocuments) ?\r\n                                <SearchingContainer Searching={this.state.Searching}\r\n                                    SearchingFor=\"documents\" /> :\r\n                                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                                    <IdentityCardContainer IdentityCard={traderDocuments.IdentityCard} />\r\n                                    <CommercialRegisterCertificateContainer CommercialRegisterCertificate={traderDocuments.CommercialRegisterCertificate} />\r\n                                </ol>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DocumentsDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport SearchingContainer from \"../searching/SearchingContainer\";\r\nimport DocumentsDialog from \"./documents/DocumentsDialog\";\r\nimport { getPublicData } from \"../../components/shared/UserFunctions\";\r\n\r\nclass TraderContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TraderProfile: null,\r\n            Searching: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.refresh.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.props.Refresh) {\r\n            this.props.Refresh(this.refresh);\r\n        }\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Get: \"TraderProfile\",\r\n                Params: {\r\n                    TraderID: this.props.TraderID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Trader profile found.\") {\r\n                    this.setState({\r\n                        TraderProfile: response.TraderProfile,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TraderProfile: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Get: \"TraderProfile\",\r\n                Params: {\r\n                    TraderID: this.props.TraderID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Trader profile found.\") {\r\n                    this.setState({\r\n                        TraderProfile: response.TraderProfile\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TraderProfile: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Searching || !this.state.TraderProfile) {\r\n            return <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor=\"trader\" />;\r\n        }\r\n        else {\r\n            const traderProfile = this.state.TraderProfile;\r\n            const trader = traderProfile.Trader;\r\n            const onJob = traderProfile.OnJob;\r\n            const profilePhoto = traderProfile.ProfilePhoto ?\r\n                traderProfile.ProfilePhoto :\r\n                \"./images/defaultProfilePhoto.png\";\r\n\r\n            const dialogID = UUID().substring(0, 7).toUpperCase();\r\n\r\n            return <section>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={profilePhoto} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                    {`${trader.FirstName} ${trader.LastName}`}\r\n                                    {onJob ? <span class=\"badge back-color-golden m-l-xxs\">ON JOB</span> : null}\r\n                                </div>\r\n                                <div className=\"type-sh3\">\r\n                                    <span className=\"fas fa-briefcase\" style={{ color: \"#606060\" }}></span>   {trader.Type}\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-globe-asia\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Active</div>\r\n                                                    <div className=\"content-text-secondary\">{(trader.Active === 1) ?\r\n                                                        <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                        <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className={(trader.Gender === \"Male\") ? \"fas fa-male\" : \"fas fa-female\"}></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Gender</div>\r\n                                                    <div className=\"content-text-secondary\">{trader.Gender}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-birthday-cake\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Birthday</div>\r\n                                                    <div className=\"content-text-secondary\">{trader.DateOfBirth}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-flag\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Nationality</div>\r\n                                                    <div className=\"content-text-secondary\">{trader.Nationality}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-envelope\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Email</div>\r\n                                                    <div className=\"content-text-secondary\">{trader.Email}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-phone\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Phone Number</div>\r\n                                                    <div className=\"content-text-secondary\">{trader.PhoneNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {this.props.TabView ? \r\n                                    null :\r\n                                    <button type=\"button\" className=\"btn btn-default\"\r\n                                        style={{ minWidth: \"152px\" }} data-toggle=\"modal\"\r\n                                        data-target={`#documents-dialog-${dialogID}`}>Documents</button>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.props.TabView ?\r\n                    null : \r\n                    <DocumentsDialog DialogID={dialogID}\r\n                        TraderID={this.props.TraderID} />}\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default TraderContainer;","import React, { Component } from \"react\";\r\nimport IdentityCardContainer from \"./IdentityCardContainer\";\r\nimport CommercialRegisterCertificateContainer from \"./CommercialRegisterCertificateContainer\";\r\nimport SearchingContainer from \"../../searching/SearchingContainer\";\r\nimport { getPublicData } from \"../../../components/shared/UserFunctions\";\r\n\r\nclass DocumentsContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TraderDocuments: null,\r\n            Searching: false,\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Get: \"TraderDocuments\",\r\n                Params: {\r\n                    TraderID: this.props.TraderID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Trader documents found.\") {\r\n                    this.setState({\r\n                        TraderDocuments: response.TraderDocuments,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TraderDocuments: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            let request = {\r\n                Get: \"TraderDocuments\",\r\n                Params: {\r\n                    TraderID: this.props.TraderID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Trader documents found.\") {\r\n                    this.setState({\r\n                        TraderDocuments: response.TraderDocuments\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TraderDocuments: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const traderDocuments = this.state.TraderDocuments;\r\n\r\n        return (this.state.Searching || !traderDocuments) ?\r\n            <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor=\"documents\" /> :\r\n            <section>\r\n                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    <IdentityCardContainer IdentityCard={traderDocuments.IdentityCard} />\r\n                    <CommercialRegisterCertificateContainer CommercialRegisterCertificate={traderDocuments.CommercialRegisterCertificate} />\r\n                </ol>\r\n            </section>;\r\n    }\r\n};\r\n\r\nexport default DocumentsContainer;","import React, { Component } from \"react\";\r\nimport TraderContainer from \"../../../../../containers/trader/TraderContainer\";\r\nimport DocumentsContainer from \"../../../../../containers/trader/documents/DocumentsContainer\";\r\n\r\nclass ProfileDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`profile-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <section>\r\n                                <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                                    <li role=\"presentation\" className=\"active\">\r\n                                        <a href={`#trader-tab-${index}`} aria-controls={`trader-tab-${index}`} role=\"tab\" data-toggle=\"tab\">Trader</a>\r\n                                    </li>\r\n                                    <li role=\"presentation\">\r\n                                        <a href={`#documents-tab-${index}`} aria-controls={`documents-tab-${index}`} role=\"tab\" data-toggle=\"tab\">Documents</a>\r\n                                    </li>\r\n                                </ul>\r\n                                <div className=\"tab-content\">\r\n                                    <div role=\"tabpanel\" className=\"tab-pane active\" id={`trader-tab-${index}`}>\r\n                                        <TraderContainer Refresh={this.props.RefreshTrader} TraderID={this.props.TraderID} TabView={true} />\r\n                                    </div>\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id={`documents-tab-${index}`}>\r\n                                        <DocumentsContainer Refresh={this.props.RefreshDocuments} TraderID={this.props.TraderID} />\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ProfileDialog;","import React, { Component } from \"react\";\r\n\r\nclass TraderRequestContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const traderRequest = this.props.TraderRequest;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron\">\r\n                <div className=\"container\">\r\n                    <div className=\"col-md-24\">\r\n                        <div className=\"type-h3 color-default p-t-n\">Trader Request</div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-box\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Cargo Type</div>\r\n                                        <div className=\"content-text-secondary\">{traderRequest.CargoType}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-weight\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Cargo Weight</div>\r\n                                        <div className=\"content-text-secondary\">{`${traderRequest.CargoWeight} lbs.`}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-id-badge\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Entry/Exit</div>\r\n                                        <div className=\"content-text-secondary\">{(traderRequest.EntryExit === 1) ?\r\n                                            <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                            <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Date</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(traderRequest.LoadingDate).toDateString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Time</div>\r\n                                        <div className=\"content-text-secondary\">{traderRequest.LoadingTime}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Accpeted Delay</div>\r\n                                        <div className=\"content-text-secondary\">{`${traderRequest.AcceptedDelay} Hour(s)`}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Requested on</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(traderRequest.Created).toDateString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Requested at</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(traderRequest.Created).toTimeString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderRequestContainer;","import React, { Component } from \"react\";\r\nimport TraderRequestContainer from \"../../../../../containers/traderRequest/TraderRequestContainer\";\r\n\r\nclass RequestDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const traderRequest = this.props.TraderRequest;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`request-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <TraderRequestContainer TraderRequest={traderRequest} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default RequestDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport ProfileDialog from \"./ProfileDialog\";\r\nimport RequestDialog from \"./RequestDialog\";\r\nimport { toggleSelectTraderRequest } from \"../../../DriverFunctions\";\r\n\r\nclass TraderRequestRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false\r\n        };\r\n\r\n        this.onToggleSelect = this.onToggleSelect.bind(this);\r\n    }\r\n\r\n    onToggleSelect = async (traderRequestID, isSelected) => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const selectedTraderRequest = {\r\n            Token: localStorage.Token,\r\n            TraderRequestID: traderRequestID,\r\n            Selected: isSelected\r\n        };\r\n\r\n        console.log(`Going to select Trader request...`);\r\n\r\n        await toggleSelectTraderRequest(selectedTraderRequest).then(async response => {\r\n            if (response.Message === \"Trader request is toggled.\") {\r\n\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                await this.props.OnTraderRequestUpdated();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const traderRequestPackage = this.props.TraderRequestPackage;\r\n        const traderRequest = traderRequestPackage.TraderRequest;\r\n        const trader = traderRequestPackage.Trader;\r\n        const traderOnJob = traderRequestPackage.TraderOnJob;\r\n        const requestSelected = this.props.requestSelected;\r\n\r\n        const profileIndex = UUID();\r\n        const requestIndex = UUID();\r\n\r\n        return <tr>\r\n            {this.state.ShowPreloader ? <Preloader /> : null}\r\n            <td>\r\n                <strong>{index + 1}</strong>\r\n            </td>\r\n\r\n            <td>\r\n                {`${trader.FirstName} ${trader.LastName}`}\r\n                {index === 0 ? <span class=\"badge back-color-golden m-l-xxxs\">NEW</span> : null}\r\n                {traderOnJob ? <span class=\"badge back-color-golden m-l-xxxs\">ON JOB</span> : null}\r\n            </td>\r\n\r\n            <td>{new Date(traderRequest.Created).toDateString()}</td>\r\n\r\n            <td class=\"text-right\">\r\n                <div>\r\n                    <button className=\"btn btn-secondary m-xxxs\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#profile-dialog-${profileIndex}`}\r\n                        onMouseDown={async () => {\r\n                            await this.RefreshTraderContainer();\r\n                            await this.RefreshDocumentsContainer();\r\n                        }}>Profile</button>\r\n\r\n                    <button className=\"btn btn-secondary m-xxxs\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#request-dialog-${requestIndex}`}>Trader Request</button>\r\n\r\n                    {traderRequest.Selected ?\r\n                        <button className=\"btn btn-danger m-xxxs\"\r\n                            onClick={async () => { await this.onToggleSelect(traderRequest.TraderRequestID, false); }}>Deselect</button> :\r\n                        <button className=\"btn btn-primary m-xxxs\" disabled={requestSelected}\r\n                            onClick={async () => { await this.onToggleSelect(traderRequest.TraderRequestID, true); }}>Select</button>}\r\n\r\n                    <ProfileDialog Index={profileIndex}\r\n                        TraderID={traderRequest.TraderID}\r\n                        RefreshTrader={refresh => { this.RefreshTraderContainer = refresh; }}\r\n                        RefreshDocuments={refresh => { this.RefreshDocumentsContainer = refresh; }} />\r\n\r\n                    <RequestDialog Index={requestIndex}\r\n                        TraderRequest={traderRequest} />\r\n                </div>\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default TraderRequestRow;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport TraderRequestRow from \"./TraderRequestRow\";\r\nimport { getData } from \"../../../DriverFunctions\";\r\n\r\nclass TraderRequestsTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TraderRequestPackages: [],\r\n            RequestSelected: false,\r\n            Searching: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderRequestPackages\",\r\n                Params: {\r\n                    JobRequestID: this.props.JobRequestID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader request packages found.\") {\r\n                    this.props.OnRequestsFound(response.TraderRequestPackages.length);\r\n\r\n                    this.setState({\r\n                        TraderRequestPackages: response.TraderRequestPackages,\r\n                        RequestSelected: response.RequestSelected,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.props.OnRequestsFound(0);\r\n                    this.setState({\r\n                        TraderRequestPackages: [],\r\n                        RequestSelected: false,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderRequestPackages\",\r\n                Params: {\r\n                    JobRequestID: this.props.JobRequestID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader request packages found.\") {\r\n                    this.props.OnRequestsFound(response.TraderRequestPackages.length);\r\n\r\n                    this.setState({\r\n                        TraderRequestPackages: response.TraderRequestPackages,\r\n                        RequestSelected: response.RequestSelected\r\n                    });\r\n                }\r\n                else {\r\n                    this.props.OnRequestsFound(0);\r\n\r\n                    this.setState({\r\n                        TraderRequestPackages: [],\r\n                        RequestSelected: false,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Searching || this.state.TraderRequestPackages.length === 0) {\r\n            return <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor=\"requests\" />;\r\n        }\r\n        else {\r\n            const traderRequestPackages = this.state.TraderRequestPackages;\r\n            const requestSelected = this.state.RequestSelected;\r\n\r\n            return <section>\r\n                <div class=\"table-responsive back-color-gray\">\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>NUMBER</th>\r\n                                <th>TRADER</th>\r\n                                <th>REQUESTED ON</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {traderRequestPackages.map((traderRequestPackage, index) => {\r\n                                return <TraderRequestRow key={index}\r\n                                    Index={index}\r\n                                    TraderRequestPackage={traderRequestPackage}\r\n                                    RequestSelected={requestSelected}\r\n                                    OnTraderRequestUpdated={this.onComponentUpdated} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default TraderRequestsTable;","import React, { Component } from \"react\";\r\n\r\nimport PlacesAutocomplete, {\r\n    geocodeByAddress,\r\n    getLatLng,\r\n} from \"react-places-autocomplete\";\r\n\r\nclass PlaceInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Address: this.props.Address\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSelect = this.onSelect.bind(this);\r\n    }\r\n\r\n    onChange = address => {\r\n        this.setState({\r\n            Address: address\r\n        });\r\n    };\r\n\r\n    onSelect = address => {\r\n        geocodeByAddress(address).then(results => {\r\n            const location = results[0].geometry.location;\r\n            const lat = location.lat();\r\n            const lng = location.lng()\r\n\r\n            const place = {\r\n                Address: address,\r\n                Lat: lat ? lat : 0.0,\r\n                Lng: lng ? lng : 0.0,\r\n            };\r\n\r\n            this.props.OnPlaceSelected(place);\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            Address\r\n        } = this.state;\r\n\r\n        return <PlacesAutocomplete\r\n            value={Address}\r\n            onChange={this.onChange}\r\n            onSelect={this.onSelect}>\r\n            {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n                <div>\r\n                    <div className=\"form-group m-n\">\r\n                        <input value={Address} {...getInputProps({\r\n                            placeholder: \"Search Places...\",\r\n                            className: \"form-control m-n\",\r\n                        })} />\r\n                    </div>\r\n\r\n                    <div className=\"autocomplete-dropdown-container\" style={{ maxWidth: \"296px\", minWidth: \"88px\" }}>\r\n                        {loading && <div className=\"suggestion-item p-xxxs\">Loading...</div>}\r\n                        {suggestions.map(suggestion => {\r\n                            const className = suggestion.active\r\n                                ? \"suggestion-item--active p-xxxs\"\r\n                                : \"suggestion-item p-xxxs\";\r\n\r\n                            const style = suggestion.active\r\n                                ? { backgroundColor: \"#EBEBEB\", cursor: \"pointer\" }\r\n                                : { backgroundColor: \"#FEFEFE\", cursor: \"pointer\" };\r\n\r\n                            return <div\r\n                                {...getSuggestionItemProps(suggestion, {\r\n                                    className,\r\n                                    style,\r\n                                })}>\r\n                                <span>{suggestion.description}</span>\r\n                            </div>;\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </PlacesAutocomplete>;\r\n    }\r\n};\r\n\r\nexport default PlaceInput;","import React, { Component } from \"react\";\r\nimport PlaceInput from \"../../../../../controls/PlaceInput\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport Strings from \"../../../../../res/strings\";\r\nimport { updateJobRequest } from \"../../../DriverFunctions.js\";\r\n\r\nclass EditJobRequestDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const {\r\n            JobRequest\r\n        } = this.props;\r\n\r\n        this.state = {\r\n            LoadingPlace: {\r\n                Address: JobRequest.LoadingPlace,\r\n                Lat: JobRequest.LoadingLat,\r\n                Lng: JobRequest.LoadingLng\r\n            },\r\n            UnloadingPlace: {\r\n                Address: JobRequest.UnloadingPlace,\r\n                Lat: JobRequest.UnloadingLat,\r\n                Lng: JobRequest.UnloadingLng\r\n            },\r\n            TripType: JobRequest.TripType,\r\n            Price: JobRequest.Price,\r\n\r\n            ValidLoadingPlace: true,\r\n            ValidUnloadingPlace: true,\r\n            ValidPrice: true,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                LoadingPlace: \"\",\r\n                UnloadingPlace: \"\",\r\n                Price: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidPrice\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"Price\":\r\n                ValidPrice = (value > 0.00);\r\n                Errors.Price = ValidPrice ? \"\" : \"Price must be more than $0.00.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: ValidPrice\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (!this.state.LoadingPlace) {\r\n            let {\r\n                Errors\r\n            } = this.state;\r\n\r\n            Errors.LoadingPlace = \"Loading place is required.\";\r\n\r\n            this.setState({\r\n                Errors: Errors\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        if (!this.state.UnloadingPlace) {\r\n            let {\r\n                Errors\r\n            } = this.state;\r\n\r\n            Errors.UnloadingPlace = \"Unloading place is required.\";\r\n\r\n            this.setState({\r\n                Errors: Errors\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const updatedJobRequest = {\r\n            Token: localStorage.Token,\r\n            JobRequestID: this.props.JobRequest.JobRequestID,\r\n            LoadingPlace: this.state.LoadingPlace.Address,\r\n            LoadingLat: this.state.LoadingPlace.Lat,\r\n            LoadingLng: this.state.LoadingPlace.Lng,\r\n            UnloadingPlace: this.state.UnloadingPlace.Address,\r\n            UnloadingLat: this.state.UnloadingPlace.Lat,\r\n            UnloadingLng: this.state.UnloadingPlace.Lng,\r\n            TripType: this.state.TripType,\r\n            Price: this.state.Price\r\n        };\r\n\r\n        await updateJobRequest(updatedJobRequest).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Job request is updated.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            LoadingPlace,\r\n            UnloadingPlace,\r\n            TripType,\r\n            Price,\r\n            Errors,\r\n            ShowPreloader,\r\n            ValidForm\r\n        } = this.state;\r\n\r\n        const {\r\n            DialogID\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`edit-job-request-dialog-${DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"type-h3 color-default p-t-xxs\">Add Job Request</div>\r\n                                        <div className=\"row p-t-xxs\">\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Place</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <PlaceInput Address={LoadingPlace.Address}\r\n                                                        OnPlaceSelected={place => {\r\n                                                            this.setState({\r\n                                                                LoadingPlace: place,\r\n                                                            });\r\n                                                        }} />\r\n                                                    <span className=\"text-danger\">{Errors.LoadingPlace}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Unloading Place</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <PlaceInput Address={UnloadingPlace.Address}\r\n                                                        OnPlaceSelected={place => {\r\n                                                            this.setState({\r\n                                                                UnloadingPlace: place,\r\n                                                            });\r\n                                                        }} />\r\n                                                    <span className=\"text-danger\">{Errors.UnloadingPlace}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Trip Type</label><br />\r\n                                                    <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                        <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                            <span>{TripType}</span>\r\n                                                            <span className=\"caret\"></span>\r\n                                                        </button>\r\n                                                        <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                            <li><a onClick={() => { this.setState({ TripType: \"One Way\" }); }}>One Way</a></li>\r\n                                                            <li><a onClick={() => { this.setState({ TripType: \"Two Way\" }); }}>Two Way</a></li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">{`Price (${Strings.SAUDI_RIYAL})`}</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" min=\"0.00\" step=\"0.01\" name=\"Price\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={Price} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.Price}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default EditJobRequestDialog;","import React, { Component } from \"react\";\r\nimport Strings from \"../../res/strings\";\r\n\r\nclass JobRequestContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const jobRequest = this.props.JobRequest;\r\n        const createdHoursAgo = Math.abs(new Date() - new Date(jobRequest.TimeCreated)) / 36e5;\r\n\r\n       return <section>\r\n           <div className=\"jumbotron theme-default\">\r\n               <div className=\"container\">\r\n                   <div className=\"col-md-24\">\r\n                       <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>{index ? `${index + 1}.` : \"Job Request\"}</div>\r\n                       <div className=\"type-sh3\">\r\n                           <span className=\"fas fa-tag m-r-xxxs\" style={{ color: \"#606060\" }}></span>{`${jobRequest.Price} ${Strings.SAUDI_RIYAL}`}\r\n                       </div>\r\n                   </div>\r\n                   <div className=\"row\">\r\n                       <div className=\"col-md-12\">\r\n                           <div class=\"entity-list\">\r\n                               <div class=\"entity-list-item\">\r\n                                   <div class=\"item-icon\">\r\n                                       <span class=\"fas fa-map-marker-alt\"></span>\r\n                                   </div>\r\n                                   <div class=\"item-content-primary\">\r\n                                       <div class=\"content-text-primary\">Loading Place</div>\r\n                                       <div class=\"content-text-secondary\">{jobRequest.LoadingPlace}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div class=\"entity-list\">\r\n                               <div class=\"entity-list-item\">\r\n                                   <div class=\"item-icon\">\r\n                                       <span class=\"fas fa-map-marker-alt\"></span>\r\n                                   </div>\r\n                                   <div class=\"item-content-primary\">\r\n                                       <div class=\"content-text-primary\">Unloading Place</div>\r\n                                       <div class=\"content-text-secondary\">{jobRequest.UnloadingPlace}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div class=\"entity-list\">\r\n                               <div class=\"entity-list-item\">\r\n                                   <div class=\"item-icon\">\r\n                                       <span class=\"fas fa-map-signs\"></span>\r\n                                   </div>\r\n                                   <div class=\"item-content-primary\">\r\n                                       <div class=\"content-text-primary\">Trip Type</div>\r\n                                       <div class=\"content-text-secondary\">{jobRequest.TripType}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                       <div className=\"col-md-12\">\r\n                           <div class=\"entity-list\">\r\n                               <div class=\"entity-list-item\">\r\n                                   <div class=\"item-icon\">\r\n                                       <span class=\"fas fa-plug\"></span>\r\n                                   </div>\r\n                                   <div class=\"item-content-primary\">\r\n                                       <div class=\"content-text-primary\">Available</div>\r\n                                       <div class=\"content-text-secondary\">{(createdHoursAgo < jobRequest.WaitingTime) ? \r\n                                           <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                           <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div class=\"entity-list\">\r\n                               <div class=\"entity-list-item\">\r\n                                   <div class=\"item-icon\">\r\n                                       <span class=\"fas fa-calendar\"></span>\r\n                                   </div>\r\n                                   <div class=\"item-content-primary\">\r\n                                       <div class=\"content-text-primary\">Posted on</div>\r\n                                       <div class=\"content-text-secondary\">{new Date(jobRequest.TimeCreated).toDateString()}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div class=\"entity-list\">\r\n                               <div class=\"entity-list-item\">\r\n                                   <div class=\"item-icon\">\r\n                                       <span class=\"fas fa-clock\"></span>\r\n                                   </div>\r\n                                   <div class=\"item-content-primary\">\r\n                                       <div class=\"content-text-primary\">Posted at</div>\r\n                                       <div class=\"content-text-secondary\">{new Date(jobRequest.TimeCreated).toTimeString()}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobRequestContainer;","import React, { Component } from \"react\";\r\nimport TraderRequestsTable from \"./TraderRequestsTable.js\";\r\nimport EditJobRequestDialog from \"./EditJobRequestDialog\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { deleteJobRequest } from \"../../../DriverFunctions\";\r\nimport JobRequestContainer from \"../../../../../containers/jobReqeust/JobRequestContainer\";\r\n\r\nclass JobRequestPackageItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            NumberOfRequests: 0,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async jobRequestID => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedJobRequest = {\r\n            Token: localStorage.Token,\r\n            JobRequestID: jobRequestID\r\n        };\r\n\r\n        console.log(`Going to delete Job request...`);\r\n\r\n        await deleteJobRequest(discardedJobRequest).then(response => {\r\n            if (response.Message === \"Job request is deleted.\") {\r\n                this.props.OnJobRequestUpdated();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const jobRequest = this.props.JobRequestPackage;\r\n        const index = this.props.Index;\r\n\r\n        return <section>\r\n            <JobRequestContainer Index={index} JobRequest={jobRequest} />\r\n\r\n            <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                <button type=\"button\" className=\"btn btn-default\"\r\n                    data-toggle=\"modal\"\r\n                    disabled={(this.state.NumberOfRequests !== 0)}\r\n                    data-target={`#edit-job-request-dialog-${index}`}>Edit</button>\r\n                <button className=\"btn btn-danger\" onClick={async () => { await this.onDelete(jobRequest.JobRequestID); }}>Delete</button>\r\n            </div>\r\n\r\n            <EditJobRequestDialog\r\n                DialogID={index}\r\n                JobRequest={jobRequest}\r\n                CanEdit={() => { return this.state.NumberOfRequests === 0 ? true : false }}\r\n                OnOK={() => { this.props.OnJobRequestUpdated(); }} />\r\n\r\n            <div className=\"back-color-gray\" data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#job-request-package-${index}`}\r\n                onMouseDown={async () => { await this.RefreshTraderRequestsTable(); }}>\r\n                <div className=\"type-h4 text-right color-default p-xxxs\">\r\n                    <span class=\"badge back-color-danger m-r-xxs\">{this.state.NumberOfRequests}</span>Trader Requests\r\n                    <i className=\"fas fa-ellipsis-v\"></i>\r\n                    <i class=\"glyph glyph-add\"></i>\r\n                    <i class=\"glyph glyph-remove\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`job-request-package-${index}`}>\r\n\r\n                <TraderRequestsTable\r\n                    Refresh={refresh => { this.RefreshTraderRequestsTable = refresh; }}\r\n                    OnRequestsFound={number => {\r\n                        this.setState({\r\n                            NumberOfRequests: number\r\n                        });\r\n                    }}\r\n                    JobRequestID={jobRequest.JobRequestID} />\r\n\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            </div>\r\n\r\n            {this.state.Preloader}\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobRequestPackageItem;","import React, { Component } from \"react\";\r\nimport PlaceInput from \"../../../../../controls/PlaceInput\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport Strings from \"../../../../../res/strings\";\r\nimport { addJobRequest } from \"../../../DriverFunctions.js\";\r\n\r\nclass AddJobRequestDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LoadingPlace: null,\r\n            UnloadingPlace: null,\r\n            TripType: \"One Way\",\r\n            Price: 0.00,\r\n\r\n            ValidLoadingPlace: false,\r\n            ValidUnloadingPlace: false,\r\n            ValidPrice: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                LoadingPlace: \"\",\r\n                UnloadingPlace: \"\",\r\n                Price: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidPrice\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"Price\":\r\n                ValidPrice = (value > 0.00);\r\n                Errors.Price = ValidPrice ? \"\" : \"Price must be more than $0.00.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: ValidPrice\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (!this.state.LoadingPlace) {\r\n            let {\r\n                Errors\r\n            } = this.state;\r\n\r\n            Errors.LoadingPlace = \"Loading place is required.\";\r\n\r\n            this.setState({\r\n                Errors: Errors\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        if (!this.state.UnloadingPlace) {\r\n            let {\r\n                Errors\r\n            } = this.state;\r\n\r\n            Errors.UnloadingPlace = \"Unloading place is required.\";\r\n\r\n            this.setState({\r\n                Errors: Errors\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newJobRequest = {\r\n            Token: localStorage.Token,\r\n            LoadingPlace: this.state.LoadingPlace.Address,\r\n            LoadingLat: this.state.LoadingPlace.Lat,\r\n            LoadingLng: this.state.LoadingPlace.Lng,\r\n            UnloadingPlace: this.state.UnloadingPlace.Address,\r\n            UnloadingLat: this.state.UnloadingPlace.Lat,\r\n            UnloadingLng: this.state.UnloadingPlace.Lng,\r\n            TripType: this.state.TripType,\r\n            Price: this.state.Price\r\n        };\r\n\r\n        await addJobRequest(newJobRequest).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Job request is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            TripType,\r\n            Price,\r\n            Errors,\r\n            ShowPreloader,\r\n            ValidForm\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"add-job-request-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"type-h3 color-default p-t-xxs\">Add Job Request</div>\r\n                                        <div className=\"row p-t-xxs\">\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Place</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <PlaceInput Address=\"\"\r\n                                                        OnPlaceSelected={place => {\r\n                                                            this.setState({\r\n                                                                LoadingPlace: place,\r\n                                                            });\r\n                                                        }} />\r\n                                                    <span className=\"text-danger\">{Errors.LoadingPlace}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Unloading Place</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <PlaceInput Address=\"\"\r\n                                                        OnPlaceSelected={place => {\r\n                                                            this.setState({\r\n                                                                UnloadingPlace: place,\r\n                                                            });\r\n                                                        }} />\r\n                                                    <span className=\"text-danger\">{Errors.UnloadingPlace}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Trip Type</label><br />\r\n                                                    <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                        <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                            <span>{TripType}</span>\r\n                                                            <span className=\"caret\"></span>\r\n                                                        </button>\r\n                                                        <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                            <li><a onClick={() => { this.setState({ TripType: \"One Way\" }); }}>One Way</a></li>\r\n                                                            <li><a onClick={() => { this.setState({ TripType: \"Two Way\" }); }}>Two Way</a></li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">{`Price (${Strings.SAUDI_RIYAL})`}</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" min=\"0.00\" step=\"0.01\" max=\"100.00\" name=\"Price\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={Price} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.Price}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddJobRequestDialog;","import React, { Component } from \"react\";\r\nimport { getData } from \"../../../DriverFunctions\";\r\nimport JobRequestPackageItem from \"./JobRequestPackageItem\";\r\nimport AddJobRequestDialog from \"./AddJobRequestDialog\";\r\nimport ProgressBar from \"../../../../../controls/ProgressBar\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\n\r\nclass JobRequestsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllJobRequestPackages: [],\r\n            JobRequestPackages: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobRequestPackages\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job request packages found.\") {\r\n                    this.setState({\r\n                        AllJobRequestPackages: response.JobRequests,\r\n                        JobRequestPackages: response.JobRequests,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllJobRequestPackages: [],\r\n                        JobRequestPackages: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobRequestPackages\"\r\n            };\r\n\r\n            this.setState({\r\n                Refreshing: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job request packages found.\") {\r\n                    this.setState({\r\n                        AllJobRequestPackages: response.JobRequests,\r\n                        JobRequestPackages: response.JobRequests,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllJobRequestPackages: [],\r\n                        JobRequestPackages: [],\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.SearchString === \"\") {\r\n            this.setState({\r\n                JobRequestPackages: this.state.AllJobRequestPackages\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allJobRequestPackages = this.state.AllJobRequestPackages;\r\n        let filteredJobRequestPackages = [];\r\n        let count = 0;\r\n\r\n        for (let jobRequestPackage of allJobRequestPackages) {\r\n            let jobRequest = jobRequestPackage.JobRequest;\r\n\r\n            if (jobRequest.LoadingPlace.includes(this.state.SearchString) ||\r\n                jobRequest.UnloadingPlace.includes(this.state.SearchString)) {\r\n                filteredJobRequestPackages[count++] = jobRequestPackage;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            JobRequestPackages: filteredJobRequestPackages\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const jobRequestPackages = this.state.JobRequestPackages;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container\" style={{paddingBottom: \"10px\", marginBottom: \"12px\"}}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-briefcase m-r-xxs\"></span>Job Requests</div>\r\n                            <p className=\"color-light\">Create new job requests for your current and/or near-by locations to get a chance to increase your revenue.</p>\r\n                            <div className=\"btn-group\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-primary\"\r\n                                    data-toggle=\"modal\"\r\n                                    data-target=\"#add-job-request-dialog\">New Job Request</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <AddJobRequestDialog\r\n                OnOK={() => {\r\n                    this.onComponentUpdated();\r\n                }} />\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Your Job Requests\r\n                    {this.state.Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search by Places\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={this.state.SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            {(jobRequestPackages.length === 0) ?\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            {this.state.Searching ? <div className=\"col-md-24 text-center\">\r\n                                <div>\r\n                                    <div className=\"type-h3\" style={{ color: \"#008575\" }}>Searching</div>\r\n                                    <ProgressBar />\r\n                                </div>\r\n                            </div> : <div className=\"col-md-24 text-center\">\r\n                                    <h3><span className=\"fas fa-exclamation-triangle\" style={{ color: \"#FFBF15\" }}></span> No job requests found.</h3>\r\n                                </div>}\r\n                        </div>\r\n                    </div>\r\n                </div> : <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {this.state.JobRequestPackages.map((jobRequestPackage, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <JobRequestPackageItem Index={index}\r\n                                JobRequestPackage={jobRequestPackage}\r\n                                OnJobRequestUpdated={this.refresh} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobRequestsList;","import React, { Component } from \"react\";\r\nimport JobRequestsList from \"./JobRequestsList.js\";\r\n\r\nclass JobRequests extends Component {\r\n    render() {\r\n        return <section>\r\n            <JobRequestsList Refresh={this.props.Refresh} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobRequests;","import React, { Component } from \"react\";\r\nimport Strings from \"../../res/strings\";\r\n\r\nclass JobOfferContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const jobOffer = this.props.JobOffer;\r\n        const createdHoursAgo = Math.abs(new Date() - new Date(jobOffer.TimeCreated)) / 36e5;\r\n\r\n        let loadingDate = new Date(jobOffer.LoadingDate);\r\n        loadingDate.setHours((parseInt(jobOffer.LoadingTime.substring(0, 2))));\r\n        loadingDate.setMinutes(parseInt(jobOffer.LoadingTime.substring(3, 5)));\r\n        loadingDate.setSeconds(parseInt(jobOffer.LoadingTime.substring(6)));\r\n\r\n       return <section>\r\n           <div className=\"jumbotron theme-default\">\r\n               <div className=\"container\">\r\n                   <div className=\"col-md-24\">\r\n                       <div className=\"type-h3 color-default p-t-n\">{(index ?\r\n                           `${index + 1}. ${jobOffer.JobOfferType} Job Offer` :\r\n                           `${jobOffer.JobOfferType} Job Offer`)}</div>\r\n                       <div className=\"type-sh3\">\r\n                           <span className=\"fas fa-tag m-r-xxxs\" style={{ color: \"#606060\" }}></span>{`${jobOffer.Price} ${Strings.SAUDI_RIYAL}`}</div>\r\n                   </div>\r\n                   <div className=\"row\">\r\n                       <div className=\"col-md-8\">\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-map-marker-alt\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Loading Place</div>\r\n                                       <div className=\"content-text-secondary\">{jobOffer.LoadingPlace}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-map-marker-alt\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Unloading Place</div>\r\n                                       <div className=\"content-text-secondary\">{jobOffer.UnloadingPlace}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-map-signs\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Trip Type</div>\r\n                                       <div className=\"content-text-secondary\">{jobOffer.TripType}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-clock\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Accpeted Delay</div>\r\n                                       <div className=\"content-text-secondary\">{`${jobOffer.AcceptedDelay} Hour(s)`}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                       <div className=\"col-md-8\">\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-box\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Cargo Type</div>\r\n                                       <div className=\"content-text-secondary\">{jobOffer.CargoType}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-weight\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Cargo Weight</div>\r\n                                       <div className=\"content-text-secondary\">{`${jobOffer.CargoWeight} lbs.`}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-calendar\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Loading Date</div>\r\n                                       <div className=\"content-text-secondary\">{loadingDate.toDateString()}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-clock\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Loading Time</div>\r\n                                       <div className=\"content-text-secondary\">{loadingDate.toTimeString()}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                       <div className=\"col-md-8\">\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-id-badge\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Entry/Exit</div>\r\n                                       <div className=\"content-text-secondary\">{(jobOffer.EntryExit === 1) ?\r\n                                           <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                           <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-plug\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Availabe</div>\r\n                                       <div className=\"content-text-secondary\">{(createdHoursAgo < jobOffer.WaitingTime) ? \r\n                                           <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                           <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-calendar\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Posted on</div>\r\n                                       <div className=\"content-text-secondary\">{new Date(jobOffer.TimeCreated).toDateString()}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                           <div className=\"entity-list\">\r\n                               <div className=\"entity-list-item\">\r\n                                   <div className=\"item-icon\">\r\n                                       <span className=\"fas fa-clock\"></span>\r\n                                   </div>\r\n                                   <div className=\"item-content-primary\">\r\n                                       <div className=\"content-text-primary\">Posted at</div>\r\n                                       <div className=\"content-text-secondary\">{new Date(jobOffer.TimeCreated).toTimeString()}</div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobOfferContainer;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport Strings from \"../../../../../../res/strings\";\r\nimport { addDriverRequest } from \"../../../../DriverFunctions\";\r\n\r\nclass BidJobOfferDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Price: 0,\r\n\r\n            ValidPrice: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                Price: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidPrice = this.state.ValidPrice;\r\n\r\n        switch (field) {\r\n            case \"Price\":\r\n                ValidPrice = (value !== \"\");\r\n                Errors.Price = ValidPrice ? \"\" : \"Bidding price is required.\";\r\n\r\n                if (Errors.Price !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPrice = (value <= this.props.JobOffer.Price);\r\n                Errors.Price = ValidPrice ? \"\" : \"You cannot bid more than maximum accepted price.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidPrice\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (this.props.IsRequestSent()) {\r\n            return;\r\n        }\r\n\r\n        const newDriverRequest = {\r\n            Token: localStorage.Token,\r\n            JobOfferID: this.props.JobOffer.JobOfferID,\r\n            Price: this.state.Price\r\n        };\r\n\r\n        console.log(\"Going to add driver request...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addDriverRequest(newDriverRequest).then(response => {\r\n            if (response.Message === \"Driver request is added.\") {\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n\r\n                this.cancelButton.click();\r\n                this.props.OnOK(response.DriverRequest);\r\n            }\r\n            else {\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`bid-job-offer-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"type-h3 color-default p-t-xxs\">Bid on Price</div>\r\n                                        <div className=\"type-sh3\">{`Maximum Accepted Price is ${this.props.JobOffer.Price} ${Strings.SAUDI_RIYAL}.`}</div>\r\n                                        <div className=\"row p-t-xxs\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">{`Price (${Strings.SAUDI_RIYAL})`}</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" min=\"0.00\" step=\"0.01\" name=\"Price\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={this.state.Price} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Price}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Bid\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default BidJobOfferDialog;","import React, { Component } from \"react\";\r\nimport { addDriverRequest, deleteDriverRequest } from \"../../../../DriverFunctions\";\r\nimport TraderContainer from \"../../../../../../containers/trader/TraderContainer\";\r\nimport JobOfferContainer from \"../../../../../../containers/jobOffer/JobOfferContainer\";\r\nimport BidJobOfferDialog from \"./BidJobOfferDialog\";\r\nimport Strings from \"../../../../../../res/strings\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\n\r\nclass JobOfferPostsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Preloader: null\r\n        };\r\n\r\n        this.onSendRequest = this.onSendRequest.bind(this);\r\n        this.onCancelRequest = this.onCancelRequest.bind(this);\r\n    }\r\n\r\n    onCancelRequest = async jobOffer => {\r\n        const discardedDriverRequest = {\r\n            Token: localStorage.Token,\r\n            JobOfferID: jobOffer.JobOfferID\r\n        };\r\n\r\n        console.log(\"Going to delete driver request...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await deleteDriverRequest(discardedDriverRequest).then(response => {\r\n            if (response.Message === \"Driver request is deleted.\") {\r\n                this.props.OnRequestUpdated(jobOffer, null);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    };\r\n\r\n    onSendRequest = async jobOffer => {\r\n        if (this.props.JobOfferPost.RequestSent) {\r\n            return;\r\n        }\r\n\r\n        const newDriverRequest = {\r\n            Token: localStorage.Token,\r\n            JobOfferID: jobOffer.JobOfferID,\r\n            Price: null\r\n        };\r\n\r\n        console.log(\"Going to add driver request...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addDriverRequest(newDriverRequest).then(response => {\r\n            if (response.Message === \"Driver request is added.\") {\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n\r\n                this.props.OnRequestUpdated(jobOffer, response.DriverRequest);\r\n            }\r\n            else {\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const jobOffer = this.props.JobOfferPost.JobOffer;\r\n        const trader = this.props.JobOfferPost.Trader;\r\n        const driverRequest = this.props.JobOfferPost.DriverRequest;\r\n\r\n        let RequestButton;\r\n\r\n        if (driverRequest) {\r\n            RequestButton = <button className=\"btn btn-secondary\"\r\n                onClick={async () => { \r\n                    await this.onCancelRequest(jobOffer); }}>{(jobOffer.JobOfferType === \"Fixed-Price\") ?\r\n                    \"Cancel Request\" :\r\n                    \"Cancel Bid\"}\r\n            </button>;\r\n        }\r\n        else {\r\n            RequestButton = (jobOffer.JobOfferType === \"Fixed-Price\") ?\r\n                <button className=\"btn btn-primary\"\r\n                    onClick={async () => { await this.onSendRequest(jobOffer); }}>Send Request</button> :\r\n                <button className=\"btn btn-primary\"\r\n                    data-toggle=\"modal\"\r\n                    disabled={driverRequest}\r\n                    data-target={`#bid-job-offer-dialog-${index}`}>Bid</button>;\r\n        }\r\n\r\n        return <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron p-xxxs back-color-gray\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"type-h5 color-default p-t-n\">\r\n                                {`${index + 1}.`}\r\n                                {driverRequest ? <span class=\"badge back-color-default m-l-xxs\">{(jobOffer.JobOfferType === \"Fixed-Price\") ?\r\n                                    \"REQUEST SENT\" : \"ALREADY BADE\"}</span> : null}\r\n                            </div>\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-user\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Posted By</div>\r\n                                            <div className=\"content-text-secondary\">{`${trader.FirstName} ${trader.LastName}`}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-clock\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Posted On</div>\r\n                                            <div className=\"content-text-secondary\">{new Date(jobOffer.TimeCreated).toDateString()}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {driverRequest && driverRequest.Price ?\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-tag\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Your Bid Price</div>\r\n                                                <div className=\"content-text-secondary\">{`${driverRequest.Price} ${Strings.SAUDI_RIYAL}`}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> : \r\n                                    null}\r\n                            </div>\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-tag\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Price</div>\r\n                                            <div className=\"content-text-secondary\">{`${jobOffer.Price} ${Strings.SAUDI_RIYAL}`}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas  fa-map-marker-alt\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Route</div>\r\n                                            <div className=\"content-text-secondary\">{`FROM: ${jobOffer.LoadingPlace}`}</div>\r\n                                            <div className=\"content-text-secondary\">{`TO: ${jobOffer.UnloadingPlace}`}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"text-right\">\r\n                                {RequestButton}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"back-color-gray\" data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#job-offer-post-${index}`}>\r\n                    <div className=\"type-h4 text-right color-default p-xxxs\">\r\n                        {\"   More Details\"} <i className=\"fas fa-ellipsis-v\"></i>\r\n                        <i class=\"glyph glyph-add\"></i>\r\n                        <i class=\"glyph glyph-remove\"></i>\r\n                    </div>\r\n                </div>\r\n                <div className=\"collapse\" id={`job-offer-post-${index}`}>\r\n                    <ul className=\"nav nav-tabs\" role=\"tablist\"\r\n                        style={{\r\n                            padding: \"10px\",\r\n                            backgroundColor: \"#EFEFEF\",\r\n                            width: \"100%\",\r\n                            margin: \"0px\"\r\n                        }}>\r\n                        <li role=\"presentation\" className=\"active\">\r\n                            <a href={`#job-offer-${index}`} aria-controls={`job-offer-${index}`} role=\"tab\" data-toggle=\"tab\">Job Offer</a>\r\n                        </li>\r\n                        <li role=\"presentation\">\r\n                            <a href={`#trader-${index}`} aria-controls={`trader-${index}`} role=\"tab\" data-toggle=\"tab\">Trader</a>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"tab-content\">\r\n                        <div role=\"tabpanel\" className=\"tab-pane active\" id={`job-offer-${index}`}>\r\n                            <JobOfferContainer JobOffer={jobOffer} />\r\n                        </div>\r\n                        <div role=\"tabpanel\" className=\"tab-pane\" id={`trader-${index}`}>\r\n                            <TraderContainer TraderID={jobOffer.TraderID} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <BidJobOfferDialog\r\n                    DialogID={index}\r\n                    JobOffer={jobOffer}\r\n                    IsRequestSent={() => { return driverRequest ? true : false; }}\r\n                    OnOK={driverRequest => { this.props.OnRequestUpdated(jobOffer, driverRequest); }} />\r\n            </li>\r\n            {this.state.Preloader}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobOfferPostsList;","import React, { Component } from \"react\";\r\nimport ProgressBar from \"../../../../../../controls/ProgressBar\";\r\nimport { getData } from \"../../../../DriverFunctions\";\r\nimport JobOfferPostListItem from \"./JobOfferPostListItem\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\n\r\nclass JobOfferPostsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobOfferPosts: [],\r\n            Preloader: null,\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobOfferPosts\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Job offer posts found.\") {\r\n                    this.setState({\r\n                        JobOfferPosts: response.JobOfferPosts,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobOfferPosts: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobOfferPosts\"\r\n            };\r\n\r\n            this.setState({\r\n                Refreshing: true\r\n            });\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Job offer posts found.\") {\r\n                    this.setState({\r\n                        JobOfferPosts: response.JobOfferPosts,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobOfferPosts: [],\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Searching) {\r\n            return <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\", width: \"100%\", height: \"100vh\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"job_offers.png\" src=\"./images/job_offers.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div className=\"col-md-12 col-md-pull-12\">\r\n                                <div className=\"type-h3\">Job Offers</div>\r\n                                <p>Job opportunities from Traders and Brokers are displayed here.</p>\r\n                                <div class=\"type-sh3\" style={{ color: \"#008575\" }}>Searhcing</div>\r\n                                <ProgressBar />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n        else if (this.state.JobOfferPosts.length === 0) {\r\n            return <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\", width: \"100%\", height: \"100vh\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"job_offers.png\" src=\"./images/job_offers.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div className=\"col-md-12 col-md-pull-12\">\r\n                                <div className=\"type-h3\">Job Offers</div>\r\n                                <div className=\"type-sh3\">No Job Offers Found...</div>\r\n                                <p>Job opportunities from Traders and Brokers are displayed here.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n        else {\r\n            return <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Job Offers\r\n                    {this.state.Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n                </div>\r\n                <ol className=\"list-items\" style={{ marginTop: \"0px\" }}>\r\n                    {this.state.JobOfferPosts.map((jobOfferPost, index) => {\r\n                        return <JobOfferPostListItem\r\n                            key={index}\r\n                            Index={index}\r\n                            JobOfferPost={jobOfferPost}\r\n                            OnRequestUpdated={(jobOffer, driverRequest) => {\r\n                                let jobOfferPosts = this.state.JobOfferPosts;\r\n\r\n                                for (let jobOfferPost of jobOfferPosts) {\r\n                                    if (jobOfferPost.JobOffer.JobOfferID === jobOffer.JobOfferID) {\r\n                                        jobOfferPost.DriverRequest = driverRequest;\r\n                                        break;\r\n                                    }\r\n                                }\r\n\r\n                                this.setState({\r\n                                    JobOfferPosts: jobOfferPosts\r\n                                });\r\n                            }} />;\r\n                    })}\r\n                </ol>\r\n            </section>;\r\n        }\r\n       \r\n    }\r\n};\r\n\r\nexport default JobOfferPostsList;","import React, { Component } from \"react\";\r\nimport JobOfferPostsList from \"./JobOfferPostsList\";\r\n\r\nclass List extends Component {\r\n   render() {\r\n       return <section>\r\n           <JobOfferPostsList Refresh={this.props.Refresh} />\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default List;","import React, { useState } from \"react\";\r\nimport { withGoogleMap, withScriptjs, GoogleMap, Marker, InfoWindow } from \"react-google-maps\";\r\nimport Strings from \"../../../../../../res/strings\";\r\n\r\nconst JobOfferInfoWindow = props => {\r\n    const { JobOffer } = props;\r\n\r\n    return <section>\r\n        <div className=\"type-h6 color-default p-t-n\">{`${JobOffer.JobOfferType} Job Offer`}</div>\r\n        <div className=\"type-sh9\">\r\n            <span className=\"fas fa-tag color-default m-r-xxxs\"></span>\r\n            <span className=\"color-default\">PRICE: </span>{`${JobOffer.Price} ${Strings.SAUDI_RIYAL}`}</div>\r\n        <div className=\"type-sh9\">\r\n            <span className=\"fas fa-map-marker-alt color-default m-r-xxxs\"></span>\r\n            <span className=\"color-default\">FROM: </span>{JobOffer.LoadingPlace}</div>\r\n        <div className=\"type-sh9\">\r\n            <span className=\"fas fa-map-marker-alt color-default m-r-xxxs\"></span>\r\n            <span className=\"color-default\">TO: </span>{JobOffer.UnloadingPlace}</div>\r\n    </section>;\r\n};\r\n\r\nconst Map = props => {\r\n    const [SelectedJobOffer, SetSelectedJobOffer] = useState(null);\r\n\r\n    const {\r\n        Place,\r\n        JobOfferPosts\r\n    } = props;\r\n\r\n    const lat = Place ? Place.Lat : 33.784310;\r\n    const lng = Place ? Place.Lng : 72.738780;\r\n\r\n    return <GoogleMap\r\n        defaultZoom={14}\r\n        defaultCenter={{ lat: 33.784310, lng: 72.738780 }}\r\n        center={{ lat: lat, lng: lng }}\r\n        options={{ streetViewControl: false }}>\r\n\r\n        {JobOfferPosts.map(jobOfferPost => (\r\n            <Marker key={jobOfferPost.JobOffer.JobOfferID} position={{ lat: jobOfferPost.JobOffer.LoadingLat, lng: jobOfferPost.JobOffer.LoadingLng }}\r\n                icon={{\r\n                    url: \"./images/marker.svg\",\r\n                    scaledSize: new window.google.maps.Size(40, 40)\r\n                }}\r\n                onClick={() => {\r\n                    SetSelectedJobOffer(jobOfferPost.JobOffer);\r\n                }} />\r\n        ))}\r\n\r\n        {SelectedJobOffer && <InfoWindow position={{ lat: SelectedJobOffer.LoadingLat, lng: SelectedJobOffer.LoadingLng }}\r\n            onCloseClick={() => {\r\n                SetSelectedJobOffer(null);\r\n            }}>\r\n            <JobOfferInfoWindow JobOffer={SelectedJobOffer} />\r\n        </InfoWindow>}\r\n    </GoogleMap>;\r\n}\r\n\r\nconst MapWrapped = withScriptjs(withGoogleMap(Map));\r\n\r\nconst JobOffersGoogleMap = props => {\r\n    return <div style={{ width: \"100%\", height: \"100vh\" }}>\r\n        <MapWrapped\r\n            googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${Strings.GOOGLE_API_KEY}`}\r\n            loadingElement={<div style={{ height: `100%` }} />}\r\n            containerElement={<div style={{ height: `100%` }} />}\r\n            mapElement={<div style={{ height: `100%` }} />}\r\n            Place={props.Place}\r\n            JobOfferPosts={props.JobOfferPosts} />\r\n    </div>;\r\n}\r\n\r\nexport default JobOffersGoogleMap;","import React, { Component } from \"react\";\r\nimport PlaceInput from \"../../../../../../controls/PlaceInput\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport JobOffersGoogleMap from \"./JobOffersGoogleMap\";\r\nimport { getData } from \"../../../../DriverFunctions\";\r\n\r\nclass JobOffersMap extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobOfferPosts: [],\r\n            Place: null,\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobOfferPosts\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Job offer posts found.\") {\r\n                    this.setState({\r\n                        JobOfferPosts: response.JobOfferPosts,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobOfferPosts: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobOfferPosts\"\r\n            };\r\n\r\n            this.setState({\r\n                Refreshing: true\r\n            });\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Job offer posts found.\") {\r\n                    this.setState({\r\n                        JobOfferPosts: response.JobOfferPosts,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobOfferPosts: [],\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            JobOfferPosts,\r\n            Place,\r\n            Searching\r\n        } = this.state;\r\n\r\n        return <section>\r\n\r\n            {JobOfferPosts.length === 0 ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"job offers\" /> :\r\n                <section>\r\n                    <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                        <PlaceInput Address=\"\"\r\n                            OnPlaceSelected={place => {\r\n                                this.setState({\r\n                                    Place: place,\r\n                                });\r\n                            }} />\r\n                    </div>\r\n                    <JobOffersGoogleMap Place={Place} JobOfferPosts={JobOfferPosts} />\r\n                </section>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobOffersMap;","import React, { Component } from \"react\";\r\nimport JobOffersMap from \"./JobOffersMap\";\r\n\r\nclass Map extends Component {\r\n    render() {\r\n        return <section>\r\n            <JobOffersMap Refresh={this.props.Refresh} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Map;","import React, { Component } from \"react\";\r\nimport List from \"./list/List\";\r\nimport Map from \"./map/Map\";\r\n\r\nclass JobOffers extends Component {\r\n    render() {\r\n        return <section>\r\n            <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#job-offers-list\" aria-controls=\"job-offers-list\" role=\"tab\" data-toggle=\"tab\">List</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#job-offers-map\" aria-controls=\"job-offers-map\" role=\"tab\" data-toggle=\"tab\">Map</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div className=\"tab-content\">\r\n                <div role=\"tabpanel\" className=\"tab-pane active\" id=\"job-offers-list\">\r\n                    <List Refresh={this.props.Refresh} />\r\n                </div>\r\n                <div role=\"tabpanel\" className=\"tab-pane\" id=\"job-offers-map\">\r\n                    <Map Refresh={refresh => { this.RefreshMap = refresh; }} />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobOffers;","import React, { useState } from \"react\";\r\nimport { withGoogleMap, withScriptjs, GoogleMap, DirectionsRenderer, Marker } from \"react-google-maps\";\r\nimport Strings from \"../../../../../res/strings\";\r\n\r\nconst Directions = props => {\r\n    const [Directions, SetDirections] = useState(null);\r\n\r\n    const { OnGoingJob } = props;\r\n\r\n    const directionsService = new window.google.maps.DirectionsService();\r\n\r\n    const origin = { lat: OnGoingJob.LoadingLat, lng: OnGoingJob.LoadingLng };\r\n    const destination = { lat: OnGoingJob.UnloadingLat, lng: OnGoingJob.UnloadingLng };\r\n\r\n    directionsService.route({\r\n        origin: origin,\r\n        destination: destination,\r\n        travelMode: window.google.maps.TravelMode.DRIVING\r\n    }, (result, status) => {\r\n        if (status === window.google.maps.DirectionsStatus.OK) {\r\n            SetDirections(result);\r\n        } else {\r\n            console.error(`error fetching directions ${result}`);\r\n        }\r\n    });\r\n\r\n    return <DirectionsRenderer directions={Directions} options={{\r\n        suppressMarkers: true\r\n    }} />;\r\n};\r\n\r\nconst Map = props => {\r\n    const {\r\n        OnGoingJob,\r\n        DriverLocation\r\n    } = props;\r\n\r\n    return <GoogleMap\r\n        defaultZoom={14}\r\n        options={{ streetViewControl: false }}>\r\n\r\n        <Marker key={1} position={{ lat: OnGoingJob.LoadingLat, lng: OnGoingJob.LoadingLng }}\r\n            icon={{\r\n                url: \"./images/source.svg\",\r\n                scaledSize: new window.google.maps.Size(30, 30)\r\n            }} />\r\n\r\n        <Marker key={1} position={{ lat: OnGoingJob.UnloadingLat, lng: OnGoingJob.UnloadingLng }}\r\n            icon={{\r\n                url: \"./images/destination.svg\",\r\n                scaledSize: new window.google.maps.Size(30, 30)\r\n            }} />\r\n\r\n        {DriverLocation ?\r\n            <Marker key={1} position={{ lat: DriverLocation.Lat, lng: DriverLocation.Lng }}\r\n                icon={{\r\n                    url: \"./images/driver_marker.svg\",\r\n                    scaledSize: new window.google.maps.Size(40, 40)\r\n                }} /> : null}\r\n\r\n        <Directions OnGoingJob={props.OnGoingJob} />\r\n    </GoogleMap>;\r\n}\r\n\r\nconst MapWrapped = withScriptjs(withGoogleMap(Map));\r\n\r\nconst OnGoingJobMap = props => {\r\n    return <div style={{ width: \"100%\", height: \"100vh\" }}>\r\n        <MapWrapped\r\n            googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${Strings.GOOGLE_API_KEY}`}\r\n            loadingElement={<div style={{ height: `100%` }} />}\r\n            containerElement={<div style={{ height: `100%` }} />}\r\n            mapElement={<div style={{ height: `100%` }} />}\r\n            OnGoingJob={props.OnGoingJob}\r\n            DriverLocation={props.DriverLocation} />\r\n    </div>;\r\n}\r\n\r\nexport default OnGoingJobMap;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\nimport { getData, addObjectionReason } from \"../../../../DriverFunctions\";\r\n\r\nclass ReasonsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ObjectionReasons: [],\r\n            AddPressed: false,\r\n            NewReason: \"\",\r\n            ValidNewReason: false,\r\n\r\n            ValidForm: false,\r\n            ProgressRing: null,\r\n\r\n            Errors: {\r\n                NewReason: \"0\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"ObjectionReasons\"\r\n            };\r\n\r\n            this.setState({\r\n                ProgressRing: <ProgressRing />\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Objection reasons found.\") {\r\n                    this.setState({\r\n                        ObjectionReasons: response.ObjectionReasons,\r\n                        ProgressRing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        ObjectionReasons: [],\r\n                        ProgressRing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewReason = this.state.ValidNewReason;\r\n\r\n        switch (field) {\r\n            case \"NewReason\":\r\n                ValidNewReason = (value.length > 0 && value.length <= 50);\r\n                Errors.NewReason = ValidNewReason ? value.length : \"Too long...\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewReason: ValidNewReason\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidNewReason\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ProgressRing: <ProgressRing />\r\n        });\r\n\r\n        const newObjectionReason = {\r\n            Token: localStorage.Token,\r\n            Reason: this.state.NewReason\r\n        };\r\n\r\n        console.log(\"Going to add Objection reason...\");\r\n\r\n        await addObjectionReason(newObjectionReason).then(response => {\r\n            if (response.Message === \"Objection reason is added.\") {\r\n                let objectionReasons = this.state.ObjectionReasons;\r\n                let errors = this.state.Errors;\r\n\r\n                objectionReasons.push(response.ObjectionReason);\r\n                errors.NewReason = \"0\";\r\n\r\n                this.setState({\r\n                    AddPressed: false,\r\n                    ObjectionReasons: objectionReasons,\r\n                    Errors: errors,\r\n                    NewReason: \"\"\r\n                });\r\n            }\r\n\r\n            this.setState({\r\n                ProgressRing: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const objectionReasons = this.state.ObjectionReasons;\r\n\r\n        return <section>\r\n            {this.state.ProgressRing}\r\n            <div class=\"entity-list entity-list-expandable\">\r\n                <div class=\"entity-list entity-list-add-item-button\">\r\n                    <a class={this.state.AddPressed ? \"entity-list-item active\" : \"entity-list-item\"}>\r\n                        <div class=\"item-icon\" onClick={() => {\r\n                            this.state.AddPressed ?\r\n                                this.setState({ AddPressed: false }) :\r\n                                this.setState({ AddPressed: true });\r\n                        }}>\r\n                            <span class=\"glyph glyph-add\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Add a Reason</div>\r\n                            <div class=\"content-text-secondary\" style={(this.state.Errors.NewReason === \"Too long...\") ? { color: \"#D75A4A\" } : null}>{this.state.Errors.NewReason}</div>\r\n                        </div>\r\n                        <div class=\"item-content-expanded\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <input type=\"text\" className=\"form-control\" name=\"NewReason\" autocomplete=\"off\"\r\n                                    value={this.state.NewReason} onChange={this.onChange} />\r\n                                <input type=\"submit\" value=\"Add\" className=\"btn btn-secondary\" disabled={!this.state.ValidForm} />\r\n                            </form>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                {objectionReasons.map((objectionReason, index) => {\r\n                    return <div key={index} class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-thumbs-down\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <button type=\"button\" class=\"btn btn-secondary\" style={{ margin: \"0px\", minWidth: \"0px\" }}\r\n                                onClick={() => { this.props.OnReasonSelected(objectionReason.Reason); }}>Select</button>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">{`${index + 1}.`}</div>\r\n                            <div class=\"content-text-secondary\">{objectionReason.Reason}</div>\r\n                        </div>\r\n                    </div>;\r\n                })}\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ReasonsList;","import React, { Component } from \"react\";\r\nimport ReasonsList from \"./ReasonsList\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { addJobObjection } from \"../../../../DriverFunctions\";\r\n\r\nclass AddObjectionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Reason: \"Select from the list.\",\r\n            Comment: \"\",\r\n\r\n            ValidReason: false,\r\n            ValidComment: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                Comment: \"0\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidComment = this.state.ValidComment;\r\n\r\n        switch (field) {\r\n            case \"Comment\":\r\n                ValidComment = (value !== \"\");\r\n                Errors.Comment = ValidComment ? \"\" : \"Comment is required\";\r\n\r\n                if (Errors.Comment !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidComment = (value.length <= 200);\r\n                Errors.Comment = ValidComment ? value.length : \"Too long...\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidComment: ValidComment\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidReason && this.state.ValidComment\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const newJobObjection = {\r\n            Token: localStorage.Token,\r\n            OnGoingJobID: this.props.OnGoingJobID,\r\n            Reason: this.state.Reason,\r\n            Comment: this.state.Comment\r\n        };\r\n\r\n        console.log(\"Going to add job objection...\");\r\n\r\n        await addJobObjection(newJobObjection).then(response => {\r\n            if (response.Message === \"Job objection is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"add-objection-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}\r\n                                    style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Add an Objection</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label>Reason</label>\r\n                                    <input type=\"text\" class=\"form-control\" name=\"Reason\" style={{ maxWidth: \"100%\" }} readonly\r\n                                        value={this.state.Reason} />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label>Comment</label>\r\n                                    <textarea rows=\"4\" class=\"form-control\" style={{ maxWidth: \"100%\" }} name=\"Comment\"\r\n                                        value={this.state.Comment} onChange={this.onChange}></textarea>\r\n                                    <span>{this.state.Errors.Comment}</span>\r\n                                </div>\r\n                                <div style={{ textAlign: \"right\" }}>\r\n                                    <input type=\"submit\" value=\"Add Objection\" className=\"btn btn-primary\" style={{ margin: \"0px\" }} disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                            <br/>\r\n                            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                            <div className=\"type-h4\" style={{ color: \"#008575\", padding: \"10px\", textAlign: \"right\" }}>{\"   Reasons\"}\r\n                                <i className=\"fas fa-ellipsis-v\"></i>\r\n                            </div>\r\n                            <ReasonsList ObjectionReasons={this.props.ObjectionReasons} OnReasonSelected={reason => {\r\n                                this.setState({\r\n                                    Reason: reason,\r\n                                    ValidReason: true\r\n                                }, () => {\r\n                                    this.setState({\r\n                                        ValidForm: this.state.ValidReason && this.state.ValidComment\r\n                                    });\r\n                                });\r\n                            }} />                           \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddObjectionDialog;","import React, { Component } from \"react\";\r\n\r\nclass JobObjectionContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            JobObjection\r\n        } = this.props;\r\n\r\n        let createdOn = new Date(JobObjection.Created);\r\n        let objectionBy = JobObjection.ObjectionBy;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"type-h5 color-default p-t-n\">{`${Index + 1}.`}</div>\r\n                    <div className=\"entity-list\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-user\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">\r\n                                    {objectionBy.Type === \"Driver\" ? \r\n                                        <span className=\"fas fa-car m-r-xxxs\"></span> : \r\n                                        <span className=\"fas fa-briefcase m-r-xxxs\"></span>}\r\n                                    {`${objectionBy.FirstName} ${objectionBy.LastName}`}\r\n                                </div>\r\n                                <div className=\"content-text-secondary\">{objectionBy.Username}</div>\r\n                                <div className=\"content-text-secondary\">{`Posted on ${createdOn.toDateString()}.`}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-thumbs-down\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Objection</div>\r\n                                <div className=\"content-text-secondary\">{`Reason: ${JobObjection.Reason}`}</div>\r\n                                <div className=\"content-text-secondary\">{`Comment: ${JobObjection.Comment}`}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobObjectionContainer;","import React, { Component } from \"react\";\r\nimport AddObjectionDialog from \"./AddObjectionDialog\";\r\nimport { getData } from \"../../../../DriverFunctions\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport JobObjectionContainer from \"../../../../../../containers/onGoingJob/JobObjectionContainer\";\r\n\r\nclass Objections extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobObjections: [],\r\n            Searching: false,\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobObjections\",\r\n                Params: {\r\n                    OnGoingJobID: this.props.OnGoingJobID\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job objections found.\") {\r\n                    this.setState({\r\n                        JobObjections: response.JobObjections,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobObjections: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobObjections\",\r\n                Params: {\r\n                    OnGoingJobID: this.props.OnGoingJobID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job objection packages found.\") {\r\n                    this.setState({\r\n                        JobObjections: response.JobObjections\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobObjections: []\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const jobObjections = this.state.JobObjections;\r\n\r\n        return <section>\r\n            <div class=\"page-header back-color-gradient\">\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-thumbs-down\"></span>   Job Objections</div>\r\n                            <p className=\"color-light\">Objections on this job, either by you or your customer, will terminate the job.</p>\r\n                            <div className=\"btn-group\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-primary\"\r\n                                    data-toggle=\"modal\"\r\n                                    data-target=\"#add-objection-dialog\">Add Objection</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <AddObjectionDialog OnGoingJobID={this.props.OnGoingJobID}\r\n                OnOK={this.onComponentUpdated} />\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Job Objections</div>\r\n            {(jobObjections.length === 0) ?\r\n                <SearchingContainer Searching={this.state.Searching}\r\n                    SearchingFor=\"job objctions\" /> : <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {jobObjections.map((jobObjection, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <JobObjectionContainer Index={index}\r\n                                JobObjection={jobObjection} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default Objections;","import React, { Component } from \"react\";\r\n\r\nclass JobContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const onGoingJob = this.props.OnGoingJob;\r\n\r\n        let loadingDate = new Date(onGoingJob.LoadingDate);\r\n        loadingDate.setHours((parseInt(onGoingJob.LoadingTime.substring(0, 2))));\r\n        loadingDate.setMinutes(parseInt(onGoingJob.LoadingTime.substring(3, 5)));\r\n        loadingDate.setSeconds(parseInt(onGoingJob.LoadingTime.substring(6)));\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"col-md-24\">\r\n                        <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                            {(index !== null && (index >= 0)) ? `${index + 1}. Job Details` : `Job Details`}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-map-marker-alt\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Place</div>\r\n                                        <div className=\"content-text-secondary\">{onGoingJob.LoadingPlace}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-map-marker-alt\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Unloading Place</div>\r\n                                        <div className=\"content-text-secondary\">{onGoingJob.UnloadingPlace}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-map-signs\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Trip Type</div>\r\n                                        <div className=\"content-text-secondary\">{onGoingJob.TripType}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Accpeted Delay</div>\r\n                                        <div className=\"content-text-secondary\">{`${onGoingJob.AcceptedDelay} Hour(s)`}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-box\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Cargo Type</div>\r\n                                        <div className=\"content-text-secondary\">{onGoingJob.CargoType}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-weight\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Cargo Weight</div>\r\n                                        <div className=\"content-text-secondary\">{`${onGoingJob.CargoWeight} lbs.`}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Date</div>\r\n                                        <div className=\"content-text-secondary\">{loadingDate.toDateString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Time</div>\r\n                                        <div className=\"content-text-secondary\">{loadingDate.toTimeString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-id-badge\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Entry/Exit</div>\r\n                                        <div className=\"content-text-secondary\">{(onGoingJob.EntryExit === 1) ?\r\n                                            <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                            <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Started on</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(onGoingJob.Created).toDateString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Started at</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(onGoingJob.Created).toTimeString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-hashtag\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Job Number</div>\r\n                                        <div className=\"content-text-secondary\">{onGoingJob.JobNumber}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobContainer;","import React, { Component } from \"react\";\r\nimport Strings from \"../../../../../res/strings\";\r\nimport JobContainer from \"../../../../../containers/onGoingJob/JobContainer\";\r\n\r\nclass Job extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const onGoingJob = this.props.OnGoingJob;\r\n        const hasObjections = this.props.HasObjections;\r\n\r\n        let loadingDate = new Date(onGoingJob.LoadingDate);\r\n        loadingDate.setHours((parseInt(onGoingJob.LoadingTime.substring(0, 2))));\r\n        loadingDate.setMinutes(parseInt(onGoingJob.LoadingTime.substring(3, 5)));\r\n        loadingDate.setSeconds(parseInt(onGoingJob.LoadingTime.substring(6)));\r\n\r\n        let JumbotronContent;\r\n\r\n        if (onGoingJob.CompletedByDriver) {\r\n            JumbotronContent = <section>\r\n                <h3><span className=\"fas fa-smile p-r-xxxs\"></span>This Job is Completed.</h3>\r\n                <div class=\"type-sh3\">Waiting for Trader's Approval</div>\r\n            </section>;\r\n        }\r\n        else if (hasObjections) {\r\n            JumbotronContent = <h3><span className=\"fas fa-exclamation p-r-xxxs\"></span>This Job is Terminated.</h3>;\r\n        }\r\n        else {\r\n            let dateDifference = loadingDate - new Date();\r\n            const days = Math.floor(dateDifference / 86400000);\r\n            const hours = Math.floor((dateDifference % 86400000) / 3600000);\r\n            const minutes = Math.round(((dateDifference % 86400000) % 3600000) / 60000);\r\n\r\n            let dayString = (days > 0) ? `${days} Days ` : \"\";\r\n            let hourString = (hours > 0) ? `${hours} Hours ` : \"\";\r\n            let minuteString = (minutes > 0) ? `${minutes} Minutes ` : \"\";\r\n\r\n            let remainingTime = `${dayString}${hourString}${minuteString}Left To Load Cargo`;\r\n\r\n            if (dateDifference < 0) {\r\n                remainingTime = \"Loading Time has Passed\";\r\n            }\r\n\r\n            JumbotronContent = <section>\r\n                <h3><span className=\"fas fa-clock\"></span>   {remainingTime}</h3>\r\n                <div class=\"type-sh3\">\r\n                    <span className=\"fas fa-tag m-r-xxs\"></span>{`${onGoingJob.Price} ${Strings.SAUDI_RIYAL} IS ON YOUR WAY`}</div>\r\n                <div class=\"col-md-12 col-md-offset-6\">\r\n                    <div class=\"type-p3\">{(onGoingJob.AcceptedDelay > 0) ?\r\n                        <span>\r\n                            <span className=\"fas fa-leaf\"></span>\r\n                            <span>{` You have a relaxation of ${onGoingJob.AcceptedDelay} Hours.`}</span>\r\n                        </span> :\r\n                        <span>\"You must reach on time to load the cargo.\"</span>}\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n\r\n        return <section>\r\n            <div class=\"jumbotron theme-dark\" style={{ background: \"linear-gradient(to right bottom, #008575, #005162)\" }}>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-24 text-center\">\r\n                            {JumbotronContent}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <JobContainer OnGoingJob={onGoingJob} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Job;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport { finishJob } from \"../../../DriverFunctions\";\r\n\r\nclass FinishJobDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Progress: null\r\n        };\r\n\r\n        this.onYes = this.onYes.bind(this);\r\n    }\r\n\r\n    onYes = async () => {\r\n        this.setState({\r\n            Progress: true\r\n        });\r\n\r\n        const finishedJob = {\r\n            Token: localStorage.Token,\r\n        }\r\n\r\n        console.log(\"Going to finish the job...\");\r\n\r\n        await finishJob(finishedJob).then(response => {\r\n            if (response.Message === \"Job is finished.\") {\r\n                this.setState({\r\n                    Progress: false\r\n                });\r\n\r\n                this.props.OnOK();\r\n            }\r\n            else {\r\n                this.setState({\r\n                    Progress: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const completedByDriver = this.props.CompletedByDriver;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"finish-job-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}\r\n                                    style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            {this.state.Progress ? <ProgressRing /> : null}\r\n                            <div className=\"type-h2\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Finish Job</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div class=\"jumbotron\">\r\n                                <div class=\"container\">\r\n                                    <div class=\"row\">\r\n                                        {completedByDriver ? \r\n                                            <div class=\"col-md-24\">\r\n                                                <img alt=\"confetti.png\" src=\"./images/confetti.png\" height=\"100\" />\r\n                                                <div class=\"type-h3\">Congratulations! You Have Finished Your Job</div>\r\n                                                <div class=\"type-sh3\">The Trader's Approval is Pending at the Moment</div>\r\n                                                <p><span class=\"color-default\">Important Note:</span> You can view this job in <span class=\"color-default\">Completed Jobs</span> tab, once the trader approves job completion.</p>\r\n                                            </div> : \r\n                                            <div class=\"col-md-24\">\r\n                                                <p>Are you sure you want to finish this job? Your trader will approve job completion afterwards!</p>\r\n                                                <div class=\"text-right\">\r\n                                                    <button class=\"btn btn-primary\" onClick={this.onYes}>Yes</button>\r\n                                                </div>\r\n                                            </div>}\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default FinishJobDialog;","import React, { Component } from \"react\";\r\nimport FinishJobDialog from \"./FinishJobDialog\";\r\n\r\nclass OnGoingJobOptions extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const hasObjections = this.props.HasObjections;\r\n        const completedByDriver = this.props.CompletedByDriver;\r\n        const completedByTrader = this.props.CompletedByTrader;\r\n\r\n        return hasObjections ?\r\n            <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"entity-list theme-alt\">\r\n                            <div className=\"entity-list-item\">\r\n                                <div className=\"item-icon\">\r\n                                    <span className=\"fas fa-exclamation-circle\"></span>\r\n                                </div>\r\n                                <div className=\"item-content-primary\">\r\n                                    <div className=\"content-text-primary\">Objectionable Job</div>\r\n                                    <div className=\"content-text-secondary\">Since your job has got objections, Naqel team will review them, and consequently take any suitable actions!</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section> :\r\n            <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"col-md-24\">\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Job Completion Status</div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-24\">\r\n                                <div className=\"entity-list theme-alt\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-certificate\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Finished By You</div>\r\n                                            <div className=\"content-text-secondary\">{completedByDriver ?\r\n                                                <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-certificate\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Approved By Trader</div>\r\n                                            <div className=\"content-text-secondary\">{completedByTrader ?\r\n                                                <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                            <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#finish-job-dialog\">Finish Job</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <FinishJobDialog CompletedByDriver={completedByDriver}\r\n                    OnOK={() => { this.props.OnJobFinished(); }} />\r\n            </section>;\r\n             \r\n    }\r\n};\r\n\r\nexport default OnGoingJobOptions;","import React, { Component } from \"react\";\r\nimport FirebaseApp from \"../../../../../res/FirebaseApp\";\r\nimport { getData } from \"../../../DriverFunctions\";\r\nimport ProgressBar from \"../../../../../controls/ProgressBar\";\r\nimport TraderContainer from \"../../../../../containers/trader/TraderContainer\";\r\nimport OnGoingJobMap from \"./OnGoingJobMap\";\r\nimport Objections from \"./objectionsTab/Objections\";\r\nimport Job from \"./Job\";\r\nimport OnGoingJobOptions from \"./OnGoingJobOptions\";\r\n\r\nclass OnGoingJob extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.Database = null;\r\n\r\n        this.state = {\r\n            OnGoingJob: null,\r\n            HasObjections: false,\r\n            DriverLocation: null,\r\n            Loading: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"OnGoingJob\"\r\n            };\r\n\r\n            this.setState({\r\n                Loading: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"On-going job found.\") {\r\n                    if (!this.Database) {\r\n                        this.Database = FirebaseApp.database().ref().child(`${response.OnGoingJob.DriverID}`);\r\n                    }\r\n\r\n                    this.Database.on(\"value\", snapshot => {\r\n                        let driverLocation = null;\r\n                        const value = snapshot.val();\r\n\r\n                        if (value) {\r\n                            const locationCoordinates = value[\"latlong\"].split(\",\");\r\n\r\n                            driverLocation = {\r\n                                Lat: parseFloat(locationCoordinates[0]),\r\n                                Lng: parseFloat(locationCoordinates[1])\r\n                            };\r\n                        }\r\n\r\n                        this.setState({\r\n                            DriverLocation: driverLocation,\r\n                            OnGoingJob: response.OnGoingJob,\r\n                            HasObjections: response.HasObjections,\r\n                            Loading: false\r\n                        });\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        OnGoingJob: null,\r\n                        DriverLocation: null,\r\n                        HasObjections: false,\r\n                        Loading: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"OnGoingJob\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"On-going job found.\") {\r\n                    console.log(response);\r\n                    this.setState({\r\n                        OnGoingJob: response.OnGoingJob,\r\n                        HasObjections: response.HasObjections\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        OnGoingJob: null,\r\n                        HasObjections: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Loading || !this.state.OnGoingJob) {\r\n            return <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\", width: \"100%\", height: \"100vh\" }}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                alt=\"on_going_jobs.png\" src=\"./images/on_going_jobs.png\" data-source-index=\"2\" />\r\n                        </div>\r\n                        <div className=\"col-md-12 col-md-pull-12\">\r\n                            <div className=\"type-h3\">On-Going Job</div>\r\n                            {this.state.Loading ?\r\n                                <div>\r\n                                    <div class=\"type-sh3\" style={{ color: \"#008575\" }}>Searhcing</div>\r\n                                    <ProgressBar />\r\n                                </div> :\r\n                                <div className=\"type-sh3\">Couldn't Find Your Job...</div>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n        }\r\n        else {\r\n            const onGoingJob = this.state.OnGoingJob;\r\n            const hasObjections = this.state.HasObjections;\r\n\r\n            return <section>\r\n                {hasObjections ?\r\n                    <div class=\"alert alert-danger m-n\">\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xs-24\">\r\n                                    <p><span className=\"fas fa-exclamation-circle m-r-xxxs\"></span>This job has objections, and it cannot be finished now. Actions are pending by Naqel. For more information, please tap on <span className=\"color-default\">Objections</span> tab.</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div> :\r\n                    null}\r\n\r\n                <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                    <li role=\"presentation\" className=\"active\">\r\n                        <a href=\"#job-tab\" aria-controls=\"job-tab\" role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={this.refresh}>Job</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#trader-tab\" aria-controls=\"trader-tab\" role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={async () => { await this.RefreshTraderContainer();  }}>Trader</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#map-tab\" aria-controls=\"map-tab\" role=\"tab\" data-toggle=\"tab\">Map</a>\r\n                    </li>\r\n                    {onGoingJob.CompletedByDriver ? \r\n                        null :\r\n                        <li role=\"presentation\">\r\n                            <a href=\"#objections-tab\" aria-controls=\"objections-tab\" role=\"tab\" data-toggle=\"tab\"\r\n                                onClick={async () => { await this.RefreshObjections(); }}>Objections</a>\r\n                        </li>}\r\n                </ul>\r\n\r\n                <div className=\"tab-content\">\r\n                    <div role=\"tabpanel\" className=\"tab-pane active\" id=\"job-tab\">\r\n                        <Job OnGoingJob={onGoingJob} HasObjections={hasObjections} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"trader-tab\">\r\n                        <TraderContainer Refresh={refresh => { this.RefreshTraderContainer = refresh; }} TraderID={onGoingJob.TraderID} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"map-tab\">\r\n                        <OnGoingJobMap OnGoingJob={onGoingJob}\r\n                            DriverLocation={this.state.DriverLocation} />\r\n                    </div>\r\n                    {onGoingJob.CompletedByDriver ? \r\n                        null :\r\n                        <div role=\"tabpanel\" className=\"tab-pane\" id=\"objections-tab\">\r\n                            <Objections Refresh={refresh => { this.RefreshObjections = refresh; }}\r\n                                OnGoingJobID={onGoingJob.OnGoingJobID} OnObjectionAdded={this.refresh} />\r\n                        </div>}\r\n                </div>\r\n                <OnGoingJobOptions HasObjections={hasObjections}\r\n                    CompletedByDriver={onGoingJob.CompletedByDriver}\r\n                    CompletedByTrader={onGoingJob.CompletedByTrader}\r\n                    OnJobRemoved={this.onComponentUpdated}\r\n                    OnJobFinished={() => {\r\n                        let onGoingJob = this.state.OnGoingJob;\r\n                        onGoingJob.CompletedByDriver = true;\r\n\r\n                        this.setState({\r\n                            OnGoingJob: onGoingJob\r\n                        });\r\n                    }} />\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default OnGoingJob;","import React, { Component } from \"react\";\r\nimport Strings from \"../../res/strings\";\r\n\r\nclass CompletedJobContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const completedJob = this.props.CompletedJob;\r\n\r\n        let loadingDate = new Date(completedJob.LoadingDate);\r\n        loadingDate.setHours((parseInt(completedJob.LoadingTime.substring(0, 2))));\r\n        loadingDate.setMinutes(parseInt(completedJob.LoadingTime.substring(3, 5)));\r\n        loadingDate.setSeconds(parseInt(completedJob.LoadingTime.substring(6)));\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"col-md-24\">\r\n                        <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                            {index && index >= 0 ? `${index + 1}.` : \"Job\"}\r\n                            {index === 0 ? <span class=\"badge back-color-golden m-l-xxs\">LATEST</span> : null}\r\n                        </div>\r\n                        <div className=\"type-sh3\">\r\n                            <span className=\"fas fa-tag m-r-xxs\" style={{ color: \"#606060\" }}></span>{`${completedJob.Price.toFixed(2)} ${Strings.SAUDI_RIYAL}`}\r\n                        </div>\r\n                        <div className=\"type-h4\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                            <span className=\"fas fa-check m-r-xxxs\"></span>\r\n                            {`Cargo Items were Delivered at ${completedJob.UnloadingPlace} from ${completedJob.LoadingPlace}.`}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-hashtag\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Job Number</div>\r\n                                        <div className=\"content-text-secondary\">{completedJob.JobNumber}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-map-signs\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Trip Type</div>\r\n                                        <div className=\"content-text-secondary\">{completedJob.TripType}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Accpeted Delay</div>\r\n                                        <div className=\"content-text-secondary\">{`${completedJob.AcceptedDelay} Hour(s)`}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-id-badge\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Entry/Exit</div>\r\n                                        <div className=\"content-text-secondary\">{completedJob.EntryExit ?\r\n                                            <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                            <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-box\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Cargo Type</div>\r\n                                        <div className=\"content-text-secondary\">{completedJob.CargoType}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-weight\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Cargo Weight</div>\r\n                                        <div className=\"content-text-secondary\">{`${completedJob.CargoWeight} lbs.`}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Date</div>\r\n                                        <div className=\"content-text-secondary\">{loadingDate.toDateString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Loading Time</div>\r\n                                        <div className=\"content-text-secondary\">{loadingDate.toTimeString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Completed on</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(completedJob.Created).toDateString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-clock\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Completed at</div>\r\n                                        <div className=\"content-text-secondary\">{new Date(completedJob.Created).toTimeString()}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default CompletedJobContainer;","import React, { Component } from \"react\";\r\n\r\nclass PayProofContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const payProof = this.props.PayProof;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                src={payProof.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                    overflow: \"hidden\",\r\n                                    border: \"5px solid #3A3A3C\",\r\n                                    margin: \"5px\"\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"col-md-18\">\r\n                            <div className=\"type-h3 color-default p-t-n\">Payment Proof</div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-24\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-certificate\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Approved</div>\r\n                                                <div className=\"content-text-secondary\">{payProof.Approved ?\r\n                                                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-calendar\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Uploaded On</div>\r\n                                                <div className=\"content-text-secondary\">{`DATE: ${new Date(payProof.Created).toDateString()}`}</div>\r\n                                                <div className=\"content-text-secondary\">{`TIME: ${new Date(payProof.Created).toLocaleTimeString()}`}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PayProofContainer;","import React, { Component } from \"react\";\r\nimport PayProofContainer from \"../../../../../../containers/payProof/PayProofContainer\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { approveTraderPayProof } from \"../../../../DriverFunctions\";\r\n\r\nclass PayProofDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false\r\n        };\r\n\r\n        this.onApprovePayment = this.onApprovePayment.bind(this);\r\n    }\r\n\r\n    onApprovePayment = async () => {\r\n        if (this.props.PayProof.Approved) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        let approvedTraderPayProof = {\r\n            Token: localStorage.Token,\r\n            TraderPayProofID: this.props.PayProof.TraderPayProofID\r\n        };\r\n\r\n        console.log(`Going to approve Trader pay proof.`);\r\n\r\n        await approveTraderPayProof(approvedTraderPayProof).then(response => {\r\n            if (response.Message === \"Trader pay proof is approved.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.props.OnPayProofApproved();\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const showPreloader = this.state.ShowPreloader;\r\n        const payProof = this.props.PayProof;\r\n\r\n        return <section>\r\n            {payProof.Approved ?\r\n                null :\r\n                <div class=\"alert alert-info m-n p-n\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xs-24\">\r\n                                <p><span className=\"fas fa-exclamation-circle m-r-xxxs\"></span>PENDING APPROVAL: The trader has updated this pay proof. Tap on the <span className=\"color-default\">Approve</span> button, if you have received the payment.\r\n                                    Afterwards, you will have to pay our job dues from your <span className=\"color-default\">Payments</span> section.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n            <PayProofContainer PayProof={payProof} />\r\n            {payProof.Approved ?\r\n                null : \r\n                <div className=\"text-right back-color-gray p-xxs\">\r\n                    <button className=\"btn btn-primary m-n\" onClick={this.onApprovePayment}>Approve Payment</button>\r\n                </div>}\r\n            {showPreloader ? <Preloader /> : null}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PayProofDetails;","import React, { Component } from \"react\";\r\n\r\nclass PayDetailsContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            PayDetails\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-24\">\r\n                            <div className=\"type-h3 color-default p-t-n\">Credit Card Payment</div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-user\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Owner Name</div>\r\n                                                <div className=\"content-text-secondary\">{PayDetails.OwnerName}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-envelope\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Owner Email</div>\r\n                                                <div className=\"content-text-secondary\">{PayDetails.OwnerEmail}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-credit-card\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Payment Method</div>\r\n                                                <div className=\"content-text-secondary\">{PayDetails.CardType.toUpperCase()}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-certificate\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Approved</div>\r\n                                                <div className=\"content-text-secondary\">\r\n                                                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-calendar\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Paid On</div>\r\n                                                <div className=\"content-text-secondary\">{`DATE: ${new Date(PayDetails.Created).toDateString()}`}</div>\r\n                                                <div className=\"content-text-secondary\">{`TIME: ${new Date(PayDetails.Created).toLocaleTimeString()}`}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PayDetailsContainer;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport PayProofDetails from \"./PayProofDetails\";\r\nimport PayDetailsContainer from \"../../../../../../containers/payDetails/PayDetailsContainer\";\r\nimport { getData } from \"../../../../DriverFunctions\";\r\n\r\nclass PaymentDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TraderPaymentDetails: null,\r\n            Searching: false,\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderPaymentDetails\",\r\n                Params: {\r\n                    CompletedJobID: this.props.CompletedJobID\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader payment details found.\") {\r\n                    this.setState({\r\n                        TraderPaymentDetails: response.TraderPaymentDetails,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TraderPaymentDetails: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderPaymentDetails\",\r\n                Params: {\r\n                    CompletedJobID: this.props.CompletedJobID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader payment details found.\") {\r\n                    this.setState({\r\n                        TraderPaymentDetails: response.TraderPaymentDetails\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TraderPaymentDetails: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            TraderPaymentDetails,\r\n            Searching\r\n        } = this.state;\r\n\r\n        if (Searching || !TraderPaymentDetails) {\r\n            return <SearchingContainer Searching={Searching}\r\n                SearchingFor=\"payment details\" />;\r\n        }\r\n        else {\r\n            if (TraderPaymentDetails.IsOnlinePayment) {\r\n                return <PayDetailsContainer PayDetails={TraderPaymentDetails.PayDetails} />\r\n            }\r\n            else {\r\n                return <PayProofDetails PayProof={TraderPaymentDetails.PayProof}\r\n                    OnPayProofApproved={async () => {\r\n                        this.props.OnPayProofApproved();\r\n                        await this.refresh();\r\n                    }} />;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport default PaymentDetails;","import React, { Component } from \"react\";\r\nimport TraderContainer from \"../../../../../../containers/trader/TraderContainer\";\r\nimport PaymentDetails from \"./PaymentDetails\";\r\n\r\nclass MoreDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const traderID = this.props.TraderID;\r\n        const completedJobID = this.props.CompletedJobID;\r\n\r\n        return <section>\r\n            <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href={`#trader-completed-jobs-${index}`} aria-controls={`trader-completed-jobs-${index}`} role=\"tab\" data-toggle=\"tab\"\r\n                        onClick={async () => { await this.RefreshTraderContainer(); }}>Trader</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href={`#payment-details-completed-jobs-${index}`} aria-controls={`payment-details-completed-jobs-${index}`} role=\"tab\" data-toggle=\"tab\"\r\n                        onClick={async () => { await this.RefreshPaymentDetails(); }}>Payment Details</a>\r\n                </li>\r\n            </ul>\r\n            <div className=\"tab-content\">\r\n                <div role=\"tabpanel\" className=\"tab-pane active\" id={`trader-completed-jobs-${index}`}>\r\n                    <TraderContainer Refresh={refresh => { this.RefreshTraderContainer = refresh; }} TraderID={traderID} />\r\n                </div>\r\n                <div role=\"tabpanel\" className=\"tab-pane\" id={`payment-details-completed-jobs-${index}`}>\r\n                    <PaymentDetails Refresh={refresh => { this.RefreshPaymentDetails = refresh; }} CompletedJobID={completedJobID}\r\n                        OnPayProofApproved={this.props.OnPayProofApproved} />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default MoreDetails;","import React, { Component } from \"react\";\r\nimport CompletedJobContainer from \"../../../../../containers/completedJob/CompletedJobContainer\";\r\nimport Rating from \"../../../../../controls/Rating\";\r\nimport MoreDetails from \"./moreDetails/MoreDetails\";\r\n\r\nclass CompletedJobPackageListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const completedJob = this.props.CompletedJobPackage.CompletedJob;\r\n        const billPaid = this.props.CompletedJobPackage.BillPaid;\r\n        const driverReview = this.props.CompletedJobPackage.DriverReview;\r\n\r\n        return <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n            {billPaid ?\r\n                <div class=\"alert alert-info m-n p-n\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xs-24\">\r\n                                <p><span className=\"fas fa-check-circle m-r-xxxs\"></span>The bill has been paid! Tap on <span className=\"color-default\">More Details</span> for payment information.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> :\r\n                <div class=\"alert alert-danger m-n p-n\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xs-24\">\r\n                                <p><span className=\"fas fa-exclamation-circle m-r-xxxs\"></span>The trader has not paid the bill yet; If the bill is paid via Bank Transfer then your approval is required.\r\n                                    Tap on <span className=\"color-default\">More Details</span> for payment details.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n\r\n            <CompletedJobContainer Index={index} CompletedJob={completedJob} />\r\n\r\n            {driverReview ?\r\n                <div class=\"alert alert-info m-n\" style={{ backgroundColor: \"#E5E5E5\", borderTop: \"2px solid #CCCCCC\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-24\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-star\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Rating</div>\r\n                                        <div className=\"content-text-secondary\"><Rating Rating={driverReview.Rating} Color=\"\" Size=\"rating-small\" /></div>\r\n                                        <div className=\"content-text-primary\">Review</div>\r\n                                        <div className=\"content-text-secondary\">{driverReview.Review}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> :\r\n                <div class=\"alert alert-info m-n\" style={{ backgroundColor: \"#E5E5E5\", borderTop: \"2px solid #CCCCCC\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-24\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-star\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">No Rating Found</div>\r\n                                        <div className=\"content-text-secondary\">Your rating and review appears here.</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n\r\n            <div className=\"back-color-gray\" data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#completed-job-${index}`}>\r\n                <div className=\"type-h4 color-default text-right p-xxxs\">More Details\r\n                    <i className=\"fas fa-ellipsis-v\"></i>\r\n                    <i class=\"glyph glyph-add\"></i>\r\n                    <i class=\"glyph glyph-remove\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`completed-job-${index}`}>\r\n                <MoreDetails Index={index}\r\n                    TraderID={completedJob.TraderID}\r\n                    CompletedJobID={completedJob.CompletedJobID}\r\n                    OnPayProofApproved={() => {\r\n                        this.props.OnPayProofApproved(this.props.CompletedJobPackage);\r\n                    }} />\r\n            </div>\r\n        </li>;\r\n    }\r\n};\r\n\r\nexport default CompletedJobPackageListItem;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport CompletedJobPackageListItem from \"./CompletedJobPackageListItem\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport { getData } from \"../../../DriverFunctions\";\r\n\r\nclass CompletedJobsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllCompletedJobPackages: [],\r\n            CompletedJobPackages: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        }\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"CompletedJobPackages\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Completed job packages found.\") {\r\n                    this.setState({\r\n                        AllCompletedJobPackages: response.CompletedJobPackages,\r\n                        CompletedJobPackages: response.CompletedJobPackages,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllCompletedJobPackages: [],\r\n                        CompletedJobPackages: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"CompletedJobPackages\"\r\n            };\r\n\r\n            this.setState({\r\n                Refreshing: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Completed job packages found.\") {\r\n                    this.setState({\r\n                        AllCompletedJobPackages: response.CompletedJobPackages,\r\n                        CompletedJobPackages: response.CompletedJobPackages,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllCompletedJobPackages: [],\r\n                        CompletedJobPackages: [],\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.SearchDate === \"\") {\r\n            this.setState({\r\n                CompletedJobPackages: this.state.AllCompletedJobPackages\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allCompletedJobPackages = this.state.AllCompletedJobPackages;\r\n        let filteredCompletedJobPackages = [];\r\n        let count = 0;\r\n        let searchString = this.state.SearchString;\r\n\r\n        for (let completedJobPackage of allCompletedJobPackages) {\r\n            let completedJob = completedJobPackage.CompletedJob;\r\n\r\n            if (completedJob.JobNumber.includes(searchString)) {\r\n                filteredCompletedJobPackages[count++] = completedJobPackage;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            CompletedJobPackages: filteredCompletedJobPackages\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const completedJobPackages = this.state.CompletedJobPackages;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-check m-r-xxs\"></span>Completed Jobs</div>\r\n                            <p className=\"color-light\">{`You have completed ${this.state.AllCompletedJobPackages.length} jobs.`}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Your Completed Jobs\r\n                    {this.state.Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search Jobs\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={this.state.SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div> \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            {(completedJobPackages.length === 0) ?\r\n                <SearchingContainer Searching={this.state.Searching}\r\n                    SearchingFor=\"completed jobs\" /> :\r\n                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {completedJobPackages.map((completedJobPackage, index) => {\r\n                        return <CompletedJobPackageListItem key={index}\r\n                            Index={index}\r\n                            CompletedJobPackage={completedJobPackage}\r\n                            OnPayProofApproved={completedJobPackage => {\r\n                                let completedJobPackages = this.state.CompletedJobPackages;\r\n\r\n                                for (let completedJobPackageItem of completedJobPackages) {\r\n                                    if (completedJobPackageItem === completedJobPackage) {\r\n                                        completedJobPackageItem.BillPaid = true;\r\n                                        break;\r\n                                    }\r\n                                }\r\n\r\n                                this.setState({\r\n                                    CompletedJobPackages: completedJobPackages\r\n                                });\r\n                            }} />;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default CompletedJobsList;","import React, { Component } from \"react\";\r\nimport CompletedJobsList from \"./CompletedJobsList\";\r\n\r\nclass CompletedJobs extends Component {\r\n   render() {\r\n       return <section>\r\n           <CompletedJobsList Refresh={this.props.Refresh} />\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default CompletedJobs;","import React, { Component } from \"react\";\r\nimport JobRequests from \"./jobRequests/JobRequests\"; \r\nimport JobOffers from \"./jobOffers/JobOffers\";\r\nimport OnGoingJob from \"./onGoingJob/OnGoingJob\";\r\nimport CompletedJobs from \"./completedJobs/CompletedJobs\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Jobs extends Component {\r\n    render() {\r\n        return <section>\r\n            {/* <PageHeading Heading=\"JOBS\" /> */}\r\n            <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                padding: \"10px\",\r\n                backgroundColor: \"#3A3A3C\",\r\n                width: \"100%\",\r\n                margin: \"0px\",\r\n            }}>\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#job-requests\" aria-controls=\"job-requests\" role=\"tab\" data-toggle=\"tab\"\r\n                        onClick={async () => { await this.RefreshJobRequests(); }}>Job Requests</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#job-offers\" aria-controls=\"job-offers\" role=\"tab\" data-toggle=\"tab\"\r\n                        onClick={async () => { await this.RefreshJobOffers(); }}>Job Offers</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#on-going-job\" aria-controls=\"on-going-job\" role=\"tab\" data-toggle=\"tab\"\r\n                        onClick={async () => { await this.RefreshOnGoingJob(); }}>On-Going Job</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#completed-jobs\" aria-controls=\"completed-jobs\" role=\"tab\" data-toggle=\"tab\"\r\n                        onClick={async () => { await this.RefreshCompletedJobs(); }}>Completed Jobs</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div class=\"tab-content\">\r\n                <div role=\"tabpanel\" class=\"tab-pane active\" id=\"job-requests\">\r\n                    <JobRequests Refresh={refresh => { this.RefreshJobRequests = refresh; }} />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"job-offers\">\r\n                    <JobOffers Refresh={refresh => { this.RefreshJobOffers = refresh; }}/>\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"on-going-job\">\r\n                    <OnGoingJob Refresh={refresh => { this.RefreshOnGoingJob = refresh; }} />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"completed-jobs\">\r\n                    <CompletedJobs Refresh={refresh => { this.RefreshCompletedJobs = refresh; }}/>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Jobs;","import React, { Component } from \"react\";\r\nimport Strings from \"../../res/strings\";\r\n\r\nclass BillContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const bill = this.props.Bill;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"col-md-24\">\r\n                        <div className=\"type-h5 color-default p-t-n\">\r\n                            {`${index + 1}. Bill Number: ${bill.BillNumber}`}\r\n                            {index === 0 ? <span class=\"badge back-color-golden m-l-xxs\">NEW</span> : null}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-dollar-sign\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Amount</div>\r\n                                        <div className=\"content-text-secondary\">{`${bill.Amount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-certificate\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Paid</div>\r\n                                        <div className=\"content-text-secondary\">{bill.Paid ?\r\n                                            <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                            <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-hashtag\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Job Number</div>\r\n                                        <div className=\"content-text-secondary\">{bill.JobNumber}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-calendar\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Generated On</div>\r\n                                        <div className=\"content-text-secondary\">{`DATE: ${new Date(bill.Created).toDateString()}`}</div>\r\n                                        <div className=\"content-text-secondary\">{`TIME: ${new Date(bill.Created).toLocaleTimeString()}`}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default BillContainer;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../containers/searching/SearchingContainer\";\r\nimport Strings from \"../../../../res/strings\";\r\nimport { getData } from \"../../DriverFunctions\";\r\n\r\nclass Bill extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            BillData: null,\r\n            Searching: false\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"BillData\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Bill data found.\") {\r\n                    this.setState({\r\n                        BillData: response.BillData,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        BillData: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const billData = this.state.BillData;\r\n        const searching = this.state.Searching;\r\n\r\n        if (searching || !billData) {\r\n            return <SearchingContainer Searching={searching}\r\n                SearchingFor=\"bill data\" />;\r\n        }\r\n        else {\r\n            const bill = this.props.Bill;\r\n            const naqelSettings = this.state.BillData.NaqelSettings;\r\n\r\n            return <section>\r\n                <div className=\"jumbotron theme-default back-color-light\">\r\n                    <div className=\"container\">\r\n                        <div className=\"type-t3\" style={{ fontWeight: \"600\" }}><span className=\"fas fa-route m-r-xxxs\"></span>NAQEL</div>\r\n\r\n                        <div className=\"p-t-xxs\">\r\n                            <div className=\"type-t9\">{naqelSettings.Street}</div>\r\n                            <div className=\"type-t9\">{`${naqelSettings.City}, ${naqelSettings.Country}.`}</div>\r\n                            <div className=\"type-t9\">{`ZIP ${naqelSettings.ZIPCode}`}</div>\r\n                        </div>\r\n\r\n                        <div className=\"p-t-xxs\">\r\n                            <div className=\"type-t9\">{naqelSettings.PhoneNumber}</div>\r\n                            <div className=\"type-t9\">{naqelSettings.Website}</div>\r\n                            <div className=\"type-t9\">{naqelSettings.BusinessName}</div>\r\n                        </div>\r\n\r\n                        <div className=\"type-t7 p-t-xxs\">BANK DETAILS</div>\r\n                        <div className=\"p-t-xxs\">\r\n                            <div className=\"type-t9\">BANK NAME</div>\r\n                            <div className=\"type-t9\">{naqelSettings.BankName}</div>\r\n                            <div className=\"type-t9 p-t-xxxs\">ACCOUNT #</div>\r\n                            <div className=\"type-t9\">{naqelSettings.AccountNumber}</div>\r\n                        </div>\r\n\r\n                        <div className=\"type-t7 p-t-xxs\">BILLED TO</div>\r\n                        <div className=\"p-t-xxs\">\r\n                            <div className=\"type-t9\">{`${billData.FirstName} ${billData.LastName}`}</div>\r\n                            <div className=\"type-t9\">{billData.Address}</div>\r\n                        </div>\r\n\r\n                        <div className=\"type-t7 p-t-xxs\">INVOICE</div>\r\n                        <div className=\"p-t-xxs\">\r\n                            <div className=\"type-t9\">INVOICE #</div>\r\n                            <div className=\"type-t9\">{bill.DriverBillID}</div>\r\n                            <div className=\"type-t9 p-t-xxxs\">DATE OF ISSUE</div>\r\n                            <div className=\"type-t9\">{new Date(bill.Created).toDateString()}</div>\r\n                            <div className=\"type-t9 p-t-xxxs\">INVOICE TOTAL</div>\r\n                            <div className=\"type-t3 color-default\">{`${bill.Amount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default Bill;","import React, { Component } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport Bill from \"./Bill\";\r\n\r\nclass PrintBillDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const bill = this.props.Bill;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`print-bill-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <Bill Bill={bill} ref={bill => (this.Bill = bill)} />\r\n                            <div className=\"text-right back-color-gray p-xxs\">\r\n                                <ReactToPrint\r\n                                    trigger={() => <button className=\"btn btn-primary m-n\">Print</button>}\r\n                                    content={() => this.Bill} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PrintBillDialog;","import React, { Component } from \"react\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { addDriverPayProof } from \"../../DriverFunctions\";\r\n\r\nclass AddPayProofDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                PhotoURL: \"\"\r\n            }\r\n        };\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidPhotoURL\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newDriverPayProof = {\r\n            Token: localStorage.Token,\r\n            DriverBillID: this.props.DriverBillID,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to add driver pay proof.\");\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        await addDriverPayProof(newDriverPayProof).then(response => {\r\n            if (response.Message === \"Driver pay proof is added.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const showPreloader = this.state.ShowPreloader;\r\n        const index = this.props.Index;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`add-pay-proof-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {showPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }} />\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\"></label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Upload Payment Proof</div>\r\n                                                <div className=\"type-sh3\"> The proof of a payment can be a Bank Transfer Receipt.</div>\r\n                                                <div className=\"type-sh4 text-danger\">{this.state.Errors.PhotoURL}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Upload\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddPayProofDialog;","import React, { Component } from \"react\";\r\nimport PayProofContainer from \"../../../../containers/payProof/PayProofContainer\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { deleteDriverPayProof } from \"../../DriverFunctions\";\r\n\r\nclass PayProofDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        if (this.props.PayProof.Approved) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        let discardedDriverPayProof = {\r\n            Token: localStorage.Token,\r\n            DriverPayProofID: this.props.PayProof.DriverPayProofID\r\n        };\r\n\r\n        console.log(`Going to delete driver pay proof.`);\r\n\r\n        await deleteDriverPayProof(discardedDriverPayProof).then(response => {\r\n            if (response.Message === \"Driver pay proof is deleted.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.props.OnPayProofDeleted();\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const showPreloader = this.state.ShowPreloader;\r\n        const payProof = this.props.PayProof;\r\n\r\n        return <section>\r\n            {payProof.Approved ?\r\n                null :\r\n                <div class=\"alert alert-danger m-n p-n\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xs-24\">\r\n                                <p><span className=\"fas fa-exclamation-circle m-r-xxxs\"></span>PENDING APPROVAL: Naqel team will approve this proof.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n            <PayProofContainer PayProof={payProof} />\r\n            {payProof.Approved ? \r\n                null : \r\n                <div className=\"text-right back-color-gray p-xxs\">\r\n                    <button className=\"btn btn-danger m-n\" onClick={this.onDelete}>Delete</button>\r\n                </div>}\r\n            {showPreloader ? <Preloader /> : null}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PayProofDetails;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../containers/searching/SearchingContainer\";\r\nimport PayProofDetails from \"./PayProofDetails\";\r\nimport PayDetailsContainer from \"../../../../containers/payDetails/PayDetailsContainer\";\r\nimport { getData } from \"../../DriverFunctions\";\r\n\r\nclass PaymentDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PaymentDetails: null,\r\n            Searching: false,\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"PaymentDetails\",\r\n                Params: {\r\n                    DriverBillID: this.props.DriverBillID\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Payment details found.\") {\r\n                    this.setState({\r\n                        PaymentDetails: response.PaymentDetails,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        PaymentDetails: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"PaymentDetails\",\r\n                Params: {\r\n                    DriverBillID: this.props.DriverBillID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Payment details found.\") {\r\n                    this.setState({\r\n                        PaymentDetails: response.PaymentDetails\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        PaymentDetails: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            PaymentDetails,\r\n            Searching\r\n        } = this.state;\r\n\r\n        if (Searching || !PaymentDetails) {\r\n            return <SearchingContainer Searching={Searching}\r\n                SearchingFor=\"payment details\" />;\r\n        }\r\n        else {\r\n            if (PaymentDetails.IsOnlinePayment) {\r\n                return <PayDetailsContainer PayDetails={PaymentDetails.PayDetails} />\r\n            }\r\n            else {\r\n                return <PayProofDetails PayProof={PaymentDetails.PayProof}\r\n                    OnPayProofDeleted={this.props.OnPayProofDeleted} />;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport default PaymentDetails;","import React, { Component } from \"react\";\r\nimport { CardElement } from \"@stripe/react-stripe-js\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport Strings from \"../../../../res/strings\";\r\nimport {\r\n    getClientSecret,\r\n    addDriverPayDetails,\r\n} from \"../../DriverFunctions\";\r\n\r\nclass PayOnlineDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Owner: \"\",\r\n            Email: \"\",\r\n\r\n            ValidOwner: false,\r\n            ValidEmail: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n            ShowCard: false,\r\n\r\n            Errors: {\r\n                Owner: \"\",\r\n                Email: \"\",\r\n                CheckOut: \"\"\r\n            }\r\n        };\r\n\r\n        this.toggleCard = this.toggleCard.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onCardInputChange = this.onCardInputChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.ToggleCard(this.toggleCard);\r\n    }\r\n\r\n    onCardInputChange = event => {\r\n        let Errors = this.state.Errors;\r\n        Errors.CheckOut = event.error ? event.error.message : \"\";\r\n\r\n        this.setState({\r\n            Errors: Errors\r\n        });\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidOwner = this.state.ValidOwner;\r\n        let ValidEmail = this.state.ValidEmail;\r\n\r\n        switch (field) {\r\n            case \"Owner\":\r\n                ValidOwner = (value !== \"\");\r\n                Errors.Owner = ValidOwner ? \"\" : \"Card owner name is required.\";\r\n\r\n                if (Errors.Owner !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidOwner = value.match(/^[a-zA-Z ]+$/);\r\n                Error.Owner = ValidOwner ? \"\" : \"Invalid owner name.\";\r\n                break;\r\n            case \"Email\":\r\n                ValidEmail = (value !== \"\");\r\n                Errors.Email = ValidEmail ? \"\" : \"Email is required.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidEmail = (value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i));\r\n                Errors.Email = ValidEmail ? \"\" : \"Email is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidOwner: ValidOwner,\r\n            ValidEmail: ValidEmail,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidOwner &&\r\n                        this.state.ValidEmail\r\n            });\r\n        });\r\n    }\r\n\r\n    toggleCard = toggle => {\r\n        this.setState({\r\n            ShowCard: toggle\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const bill = this.props.Bill;\r\n\r\n        const billingDetails = {\r\n            name: this.state.Owner,\r\n            email: this.state.Email\r\n        };\r\n\r\n        const newClientSecret = {\r\n            Token: localStorage.Token,\r\n            Amount: bill.Amount * 100\r\n        };\r\n\r\n        const stripe = this.props.Stripe;\r\n        const elements = this.props.Elements;\r\n\r\n        const cardElement = elements.getElement(CardElement);\r\n\r\n        try {\r\n            await getClientSecret(newClientSecret).then(async response => {\r\n                if (response.Message === \"Client secret found.\") {\r\n                    const clientSecret = response.ClientSecret;\r\n\r\n                    const paymentMethodRequest = await stripe.createPaymentMethod({\r\n                        type: \"card\",\r\n                        card: cardElement,\r\n                        billing_details: billingDetails\r\n                    });\r\n\r\n                    if (paymentMethodRequest.error) {\r\n                        let Errors = this.state.Errors;\r\n                        Errors.CheckOut = paymentMethodRequest.error.message;\r\n\r\n                        this.setState({\r\n                            Errors: Errors,\r\n                            ShowPreloader: false\r\n                        });\r\n\r\n                        return;\r\n                    }\r\n\r\n                    const newDriverPayDetails = {\r\n                        Token: localStorage.Token,\r\n                        DriverBillID: this.props.Bill.DriverBillID,\r\n                        OwnerName: this.state.Owner,\r\n                        OwnerEmail: this.state.Email,\r\n                        CardType: paymentMethodRequest.paymentMethod.card.brand\r\n                    };\r\n\r\n                    const { error } = await stripe.confirmCardPayment(clientSecret, {\r\n                        payment_method: paymentMethodRequest.paymentMethod.id\r\n                    });\r\n\r\n                    if (error) {\r\n                        let Errors = this.state.Errors;\r\n                        Errors.CheckOut = error.message;\r\n\r\n                        this.setState({\r\n                            Errors: Errors,\r\n                            ShowPreloader: false\r\n                        });\r\n\r\n                        return;\r\n                    }\r\n\r\n                    await addDriverPayDetails(newDriverPayDetails).then(response => {\r\n                        this.setState({\r\n                            ShowPreloader: false\r\n                        });\r\n\r\n                        if (response.Message === \"Pay details are added.\") {\r\n                            this.toggleCard(false);\r\n                            this.cancelButton.click();\r\n                            this.props.OnOK();\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        ShowPreloader: false\r\n                    });\r\n                }\r\n            });\r\n        } catch (error) {\r\n            let Errors = this.state.Errors;\r\n            Errors.CheckOut = error.message;\r\n\r\n            this.setState({\r\n                Errors: Errors\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ShowCard\r\n        } = this.state;\r\n\r\n        const showPreloader = this.state.ShowPreloader;\r\n        const index = this.props.Index;\r\n        const bill = this.props.Bill;\r\n\r\n        const iframeStyles = {\r\n            base: {\r\n                color: \"#000000\",\r\n                fontSize: \"15px\",\r\n                fontFamily: \"Segoe UI\",\r\n                iconColor: \"#000000\"\r\n            },\r\n            invalid: {\r\n                iconColor: \"#D75A4A\",\r\n                color: \"#D75A4A\"\r\n            },\r\n            complete: {\r\n                iconColor: \"#008575\"\r\n            }\r\n        };\r\n\r\n        const cardElementOpts = {\r\n            iconStyle: \"solid\",\r\n            style: iframeStyles,\r\n            hidePostalCode: true\r\n        };\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`pay-online-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {showPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    onClick={() => { this.toggleCard(false); }}\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Pay Online</div>\r\n                                                <div className=\"type-sh3 m-b-xxs\">Pay the bill with your credit card.</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Owner Name</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"Owner\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Owner} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Owner}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Owner Email</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"email\" name=\"Email\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        placeholder=\"someone@mail.com\" value={this.state.Email} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Email}</span>\r\n                                                </div>\r\n\r\n                                                <div className=\"type-sh4\">\r\n                                                    <span className=\"fab fa-cc-visa\"></span>\r\n                                                    <span className=\"fab fa-cc-mastercard m-l-xxxs\"></span>\r\n                                                    <span className=\"fab fa-cc-amex m-l-xxxs\"></span>\r\n                                                    <span className=\"fab fa-cc-discover m-l-xxxs\"></span>\r\n                                                    <span className=\"fab fa-cc-diners-club m-l-xxxs\"></span>\r\n                                                    <span className=\"fab fa-cc-jcb m-l-xxxs\"></span>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Credit Card Information</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <div className=\"form-control p-t-xxxs p-b-xxxs\"\r\n                                                        style={{\r\n                                                            maxWidth: \"100%\",\r\n                                                            width: \"100%\",\r\n                                                            borderColor: \"rgba(0, 0, 0, 0.6)\"\r\n                                                        }}>\r\n                                                        {ShowCard ? \r\n                                                            <CardElement\r\n                                                                options={cardElementOpts}\r\n                                                                onChange={this.onCardInputChange} /> : null}\r\n                                                    </div>\r\n                                                    <span className=\"text-danger\">{this.state.Errors.CheckOut}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value={`Pay ${bill.Amount.toFixed(2)} ${Strings.SAUDI_RIYAL}`} className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PayOnlineDialog;","import React, { Component } from \"react\";\r\nimport { ElementsConsumer } from \"@stripe/react-stripe-js\";\r\nimport BillContainer from \"../../../../containers/bill/BillContainer\";\r\nimport PrintBillDialog from \"./PrintBillDialog\";\r\nimport AddPayProofDialog from \"./AddPayProofDialog\";\r\nimport PaymentDetails from \"./PaymentDetails\";\r\nimport PayOnlineDialog from \"./PayOnlineDialog\";\r\n\r\nclass BillListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const bill = this.props.Bill;\r\n\r\n        return <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n            <BillContainer Index={index} Bill={bill} />\r\n\r\n            <div className=\"text-right back-color-gray p-xxs\">\r\n                <button className=\"btn btn-secondary\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#print-bill-dialog-${index}`}>Print Bill</button>\r\n\r\n                {bill.HasPayProof || bill.HasPayDetails ?\r\n                    null :\r\n                    <button className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#pay-online-dialog-${index}`}\r\n                        onMouseDown={() => { this.ToggleCard(true); }}>Pay Online</button>}\r\n\r\n                {bill.HasPayProof || bill.HasPayDetails ?\r\n                    null : \r\n                    <button className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#add-pay-proof-dialog-${index}`}>Upload Pay Proof</button>}\r\n            </div>\r\n\r\n            <div className=\"back-color-gray\" data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#bill-${index}`}\r\n                onMouseDown={async () => { await this.RefreshPaymentDetails(); }}>\r\n                <div className=\"type-h4 color-default text-right p-xxxs\">Payment Details\r\n                    <i className=\"fas fa-ellipsis-v\"></i>\r\n                    <i class=\"glyph glyph-add\"></i>\r\n                    <i class=\"glyph glyph-remove\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`bill-${index}`}>\r\n                <PaymentDetails Refresh={refresh => { this.RefreshPaymentDetails = refresh; }}\r\n                    DriverBillID={bill.DriverBillID}\r\n                    OnPayProofDeleted={async () => {\r\n                        this.props.OnPayProofUpdated(bill, false);\r\n                        await this.RefreshPaymentDetails();\r\n                    }} />\r\n            </div>\r\n\r\n            <PrintBillDialog Index={index}\r\n                Bill={bill} />\r\n\r\n            {bill.HasPayProof || bill.HasPayDetails ?\r\n                null : \r\n                <AddPayProofDialog Index={index}\r\n                    DriverBillID={bill.DriverBillID}\r\n                    OnOK={async () => {\r\n                        this.props.OnPayProofUpdated(bill, true);\r\n                        await this.RefreshPaymentDetails();\r\n                    }} />}\r\n\r\n            {bill.HasPayDetails ?\r\n                null :\r\n                <ElementsConsumer>\r\n                    {({ elements, stripe }) => (\r\n                        <PayOnlineDialog Index={index}\r\n                            Bill={bill}\r\n                            Elements={elements}\r\n                            Stripe={stripe}\r\n                            ToggleCard={toggleCard => { this.ToggleCard = toggleCard; }}\r\n                            OnOK={async () => {\r\n                                this.props.OnPayDetailsAdded(bill);\r\n                                await this.RefreshPaymentDetails();\r\n                            }} />)}\r\n                </ElementsConsumer>}\r\n        </li>;\r\n    }\r\n};\r\n\r\nexport default BillListItem;","import React, { Component } from \"react\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport SearchingContainer from \"../../../../containers/searching/SearchingContainer\";\r\nimport BillListItem from \"./BillListItem\";\r\nimport { getData } from \"../../DriverFunctions\";\r\n\r\nclass BillsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Bills: [],\r\n            NumberOfPaidBills: 0,\r\n            NumberOfUnpaidBills: 0, \r\n            Searching: false\r\n        }\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Bills\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Bills found.\") {\r\n                    this.setState({\r\n                        Bills: response.Bills,\r\n                        NumberOfPaidBills: response.NumberOfPaidBills,\r\n                        NumberOfUnpaidBills: response.NumberOfUnpaidBills,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Bills: [],\r\n                        NumberOfPaidBills: 0,\r\n                        NumberOfUnpaidBills: 0,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const bills = this.state.Bills;\r\n        const numberOfPaidBills = this.state.NumberOfPaidBills;\r\n        const numberOfUnpaidBills = this.state.NumberOfUnpaidBills;\r\n\r\n        return <section>\r\n            {/* <PageHeading Heading=\"PAYMENTS\" /> */}\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-money-bill-wave m-r-xs\"></span>Payments</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"alert alert-info m-n\" style={{ backgroundColor: \"#333333\" }}>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <div className=\"entity-list theme-alt\">\r\n                            <div className=\"entity-list-item\">\r\n                                <div className=\"item-icon\" style={{ backgroundColor: \"#333333\", color: \"#008575\" }}>\r\n                                    <span className=\"fas fa-thumbs-up\"></span>\r\n                                </div>\r\n                                <div className=\"item-content-primary\">\r\n                                    <div className=\"content-text-primary\">Paid Bills</div>\r\n                                    <div className=\"content-text-secondary\">{numberOfPaidBills}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <div className=\"entity-list theme-alt\">\r\n                            <div className=\"entity-list-item\">\r\n                                <div className=\"item-icon\" style={{ backgroundColor: \"#333333\", color: \"#008575\" }}>\r\n                                    <span className=\"fas fa-thumbs-down\"></span>\r\n                                </div>\r\n                                <div className=\"item-content-primary\">\r\n                                    <div className=\"content-text-primary\">Unpaid Bills</div>\r\n                                    <div className=\"content-text-secondary\">{numberOfUnpaidBills}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Your Bills</div>\r\n\r\n            {(bills.length === 0) ?\r\n                <SearchingContainer Searching={this.state.Searching}\r\n                    SearchingFor=\"bills\" /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {bills.map((bill, index) => {\r\n                        return <BillListItem key={index}\r\n                            Index={index} Bill={bill}\r\n                            OnPayProofUpdated={(bill, hasPayProof) => {\r\n                                let bills = this.state.Bills;\r\n\r\n                                for (let billItem of bills) {\r\n                                    if (billItem === bill) {\r\n                                        billItem.HasPayProof = hasPayProof;\r\n                                        break;\r\n                                    }\r\n                                }\r\n\r\n                                this.setState({\r\n                                    Bills: bills\r\n                                });\r\n                            }}\r\n                            OnPayDetailsAdded={bill => {\r\n                                let bills = this.state.Bills;\r\n                                let numberOfPaidBills = this.state.NumberOfPaidBills;\r\n                                let numberOfUnpaidBills = this.state.NumberOfUnpaidBills;\r\n\r\n                                for (let billItem of bills) {\r\n                                    if (billItem === bill) {\r\n                                        billItem.Paid = true;\r\n                                        billItem.HasPayDetails = true;\r\n                                        numberOfPaidBills++;\r\n                                        numberOfUnpaidBills--;\r\n                                        break;\r\n                                    }\r\n                                }\r\n\r\n                                this.setState({\r\n                                    Bills: bills,\r\n                                    NumberOfPaidBills: numberOfPaidBills,\r\n                                    NumberOfUnpaidBills: numberOfUnpaidBills\r\n                                });\r\n                            }}/>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default BillsList;","import React, { Component } from \"react\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport Strings from \"../../../../res/strings\";\r\nimport BillsList from \"./BillsList\";\r\n\r\nconst stripePromise = loadStripe(Strings.STRIPE_PUBLISHABLE_KEY);\r\n\r\nclass Payments extends Component {\r\n    render() {\r\n        return <section>\r\n            <Elements stripe={stripePromise}>\r\n                <BillsList />\r\n            </Elements>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Payments;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { addQuestion } from \"../../DriverFunctions\";\r\n\r\nclass AskQuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Question: \"\",\r\n\r\n            ValidQuestion: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Question: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidQuestion = this.state.ValidQuestion;\r\n\r\n        switch (field) {\r\n            case \"Question\":\r\n                ValidQuestion = (value !== \"\");\r\n                Errors.Question = ValidQuestion ? \"\" : \"Question is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidQuestion: ValidQuestion,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidQuestion\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newQuestion = {\r\n            Token: localStorage.Token,\r\n            Question: this.state.Question\r\n        };\r\n\r\n        await addQuestion(newQuestion).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Question is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Question,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`ask-question-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Ask a New Question</div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">Question</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <textarea rows=\"6\" class=\"form-control\" name=\"Question\" style={{ maxWidth: \"100%\" }}\r\n                                                        value={Question} onChange={this.onChange}></textarea>\r\n                                                    <span className=\"text-danger\">{Errors.Question}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Post\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AskQuestionDialog;","import React, { Component } from \"react\";\r\n\r\nclass DriverQuestionContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Question\r\n        } = this.props;\r\n\r\n        const askedOn = new Date(Question.Created);\r\n        const askedBy = Question.AskedBy;\r\n        const driverAnswer = Question.DriverAnswer;\r\n        const answeredOn = driverAnswer ? new Date(driverAnswer.Created) : null;\r\n        const answeredBy = driverAnswer ? driverAnswer.AnsweredBy : null;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"type-h5 color-default p-t-n\">{`${Index + 1}. Question ID: ${Question.QuestionNumber}`}</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-user\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">\r\n                                            <span className=\"fas fa-car m-r-xxxs\"></span>\r\n                                            {`${askedBy.FirstName} ${askedBy.LastName}`}\r\n                                        </div>\r\n                                        <div className=\"content-text-secondary\">{askedBy.Username}</div>\r\n                                        <div className=\"content-text-secondary\">{`${askedOn.toDateString()} at ${askedOn.toLocaleTimeString()}`}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-question\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">\r\n                                            <span className=\"m-r-xxxs\">Question</span>\r\n                                            {Question.Class ?\r\n                                                <span class=\"badge back-color-golden\">{Question.Class.toUpperCase()}</span> :\r\n                                                <span class=\"badge back-color-golden\">UNCLASSIFIED</span>}\r\n                                        </div>\r\n                                        <div className=\"content-text-secondary\">{Question.Question}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {driverAnswer ? \r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-user\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">\r\n                                                <span className=\"fas fa-user-shield m-r-xxxs\"></span>\r\n                                                {`${answeredBy.FirstName} ${answeredBy.LastName}`}\r\n                                            </div>\r\n                                            <div className=\"content-text-secondary\">{answeredBy.Username}</div>\r\n                                            <div className=\"content-text-secondary\">{`${answeredOn.toDateString()} at ${answeredOn.toLocaleTimeString()}.`}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-comment\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">\r\n                                                <span className=\"m-r-xxxs\">Answer</span>\r\n                                                {driverAnswer.Edited ? <span className=\"color-default\">EDITED</span> : null}\r\n                                            </div>\r\n                                            <div className=\"content-text-secondary\">{driverAnswer.Answer}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div> : \r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-comment\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">\r\n                                                <span className=\"m-r-xxxs\">Answer</span>\r\n                                            </div>\r\n                                            <div className=\"content-text-secondary\">This question has not been answered yet.</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default DriverQuestionContainer;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { deleteQuestion } from \"../../DriverFunctions\";\r\n\r\nclass DeleteQuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false,\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const discardedQuestion = {\r\n            Token: localStorage.Token,\r\n            DriverQuestionID: this.props.DriverQuestionID\r\n        };\r\n\r\n        await deleteQuestion(discardedQuestion).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Question is deleted.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            QuestionNumber\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`delete-driver-question-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-h3 color-default p-t-n\">Delete Question</div>\r\n                                            <div className=\"type-sh3 m-b-xxs\">Are you sure you want to delete question with ID\r\n                                                <span className=\"color-default\">{` ${QuestionNumber}.`}</span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-right\">\r\n                                        <button className=\"btn btn-primary\" onClick={this.onDelete}>Delete</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DeleteQuestionDialog;","import React, { Component } from \"react\";\r\nimport DriverQuestionContainer from \"../../../../containers/driverQuestion/DriverQuestionContainer\";\r\nimport DeleteQuestionDialog from \"./DeleteQuestionDialog\";\r\n\r\nclass QuestionListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Question\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <DriverQuestionContainer Index={Index}\r\n                Question={Question} />\r\n\r\n            <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                <button className=\"btn btn-danger m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#delete-driver-question-dialog-${Index}`}>Delete</button>\r\n            </div>\r\n\r\n            <DeleteQuestionDialog Index={Index}\r\n                DriverQuestionID={Question.DriverQuestionID}\r\n                QuestionNumber={Question.QuestionNumber}\r\n                OnOK={this.props.OnQuestionDeleted}/>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default QuestionListItem;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../containers/searching/SearchingContainer\";\r\nimport ProgressRing from \"../../../../controls/ProgressRing\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport AskQuestionDialog from \"./AskQuestionDialog\";\r\nimport QuestionListItem from \"./QuestionListItem\";\r\nimport { getData } from \"../../DriverFunctions\";\r\n\r\nclass QuestionsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllQuestions: [],\r\n            Questions: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Questions\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Questions found.\") {\r\n                    this.setState({\r\n                        AllQuestions: response.Questions,\r\n                        Questions: response.Questions,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllQuestions: [],\r\n                        Questions: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                Questions: this.state.AllQuestions\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allQuestions = this.state.AllQuestions;\r\n        let filteredQuestions = [];\r\n        let count = 0;\r\n\r\n        for (let question of allQuestions) {\r\n            if (question.Question.includes(searchString) ||\r\n                question.QuestionNumber.includes(searchString) ||\r\n                question.Class.includes(searchString)) {\r\n                filteredQuestions[count++] = question;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Questions: filteredQuestions\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Questions,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            {/* <PageHeading Heading=\"QUESTIONS\" /> */}\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-question-circle m-r-xxs\"></span>Questions</div>\r\n                            <p className=\"color-light\">If you are facing any issues, then post a question. Naqel team will answer them as soon as possible.</p>\r\n                            <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target={`#ask-question-dialog`}>Ask a Question</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <AskQuestionDialog OnOK={async () => { await this.onComponentUpdated(); }} />\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Your Questions\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search Questions\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(Questions.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"questions\" /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {Questions.map((question, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <QuestionListItem Index={index}\r\n                                Question={question}\r\n                                OnQuestionDeleted={this.onComponentUpdated} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default QuestionsList;","import React, { Component } from \"react\";\r\nimport QuestionsList from \"./QuestionsList\";\r\n\r\nclass Questions extends Component {\r\n    render() {\r\n        return <section>\r\n            <QuestionsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Questions;","import React, { Component } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport FirebaseApp from \"../../../../res/FirebaseApp\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport PhoneConfirmationDialog from \"../../../../containers/phoneConfirmationDialog/PhoneConfirmationDialog\";\r\nimport { getData, generalSettings } from \"../../DriverFunctions\";\r\n\r\nclass GeneralSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\",\r\n\r\n            ValidFirstName: true,\r\n            ValidLastName: true,\r\n            ValidPhoneNumber: true,\r\n\r\n            ConfirmationResult: null,\r\n            PhoneCodeVerified: false,\r\n\r\n            ValidForm: false,\r\n            SettingsSaved: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                PhoneNumber: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\"recaptcha\", {\r\n            \"size\": \"invisible\",\r\n            \"callback\": response => {\r\n            }\r\n        });\r\n\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Driver\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver found.\") {\r\n                    let driver = response.Driver;\r\n\r\n                    this.setState({\r\n                        FirstName: driver.FirstName,\r\n                        LastName: driver.LastName,\r\n                        Address: driver.Address,\r\n                        PhoneNumber: driver.PhoneNumber,\r\n                        Gender: driver.Gender,\r\n                        Nationality: driver.Nationality,\r\n                        DateOfBirth: driver.DateOfBirth\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        FirstName: \"\",\r\n                        LastName: \"\",\r\n                        Address: \"\",\r\n                        PhoneNumber: \"\",\r\n                        Gender: \"\",\r\n                        Nationality: \"\",\r\n                        DateOfBirth: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFirstName = this.state.ValidFirstName;\r\n        let ValidLastName = this.state.ValidLastName;\r\n        let ValidPhoneNumber = this.state.ValidPhoneNumber;\r\n\r\n        switch (field) {\r\n            case \"FirstName\":\r\n                ValidFirstName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.FirstName = ValidFirstName ? \"\" : \"First name is invalid.\";\r\n                break;\r\n            case \"LastName\":\r\n                ValidLastName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.LastName = ValidLastName ? \"\" : \"Last name is invalid.\";\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = value.match(/^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/);\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFirstName: ValidFirstName,\r\n            ValidLastName: ValidLastName,\r\n            ValidPhoneNumber: ValidPhoneNumber,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidFirstName &&\r\n                    this.state.ValidLastName &&\r\n                    this.state.ValidPhoneNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        if (this.state.PhoneCodeVerified) {\r\n            const updatedDriver = {\r\n                Token: localStorage.Token,\r\n                FirstName: this.state.FirstName,\r\n                LastName: this.state.LastName,\r\n                Address: this.state.Address,\r\n                PhoneNumber: this.state.PhoneNumber,\r\n                Gender: this.state.Gender,\r\n                Nationality: this.state.Nationality,\r\n                DateOfBirth: this.state.DateOfBirth\r\n            };\r\n\r\n            await generalSettings(updatedDriver).then(response => {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                if (response.Message === \"Driver is updated.\") {\r\n                    this.props.OnSettingsSaved();\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            const appVerifier = window.recaptchaVerifier;\r\n\r\n            FirebaseApp.auth().languageCode = \"en\";\r\n            FirebaseApp.auth().signInWithPhoneNumber(this.state.PhoneNumber, appVerifier).then(confirmationResult => {\r\n                this.setState({\r\n                    ShowPreloader: false,\r\n                    ConfirmationResult: confirmationResult\r\n                });\r\n\r\n                this.SendCodeButton.click();\r\n            }).catch(error => {\r\n                let {\r\n                    Errors\r\n                } = this.state;\r\n\r\n                Errors.PhoneNumber = error.message;\r\n\r\n                this.setState({\r\n                    ShowPreloader: false,\r\n                    Errors: Errors\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>General Settings</div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n                <div className=\"entity-list entity-list-expandable\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-comment\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"FirstName\" autoComplete=\"off\"\r\n                                    value={this.state.FirstName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">First Name</div>\r\n                            <div className=\"text-danger\">{this.state.Errors.FirstName}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-comment\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"LastName\" autoComplete=\"off\"\r\n                                    value={this.state.LastName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Last Name</div>\r\n                            <div className=\"text-danger\">{this.state.Errors.LastName}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-birthday-cake\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"date\" className=\"form-control\" name=\"DateOfBirth\" autoComplete=\"off\"\r\n                                    value={this.state.DateOfBirth} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Date of Birth</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className={this.state.Gender === \"Male\" ? \"fas fa-male\" : \"fas fa-female\"}></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"dropdown\" style={{ width: \"193px\", maxWidth: \"296px\", }}>\r\n                                <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                    aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                    <span>{this.state.Gender}</span>\r\n                                    <span className=\"caret\"></span>\r\n                                </button>\r\n                                <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                    <li><a onClick={() => { this.setState({ Gender: \"Male\" }); }}>Male</a></li>\r\n                                    <li><a onClick={() => { this.setState({ Gender: \"Female\" }); }}>Female</a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Gender</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-flag\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"Nationality\" autoComplete=\"off\"\r\n                                    value={this.state.Nationality} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Nationality</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-phone\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autoComplete=\"off\"\r\n                                    placeholder=\"+XXXXXXXXXXXX\" value={this.state.PhoneNumber} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Phone Number</div>\r\n                            <div className=\"text-danger\">{this.state.Errors.PhoneNumber}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-location-arrow\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"Address\" autoComplete=\"off\"\r\n                                    value={this.state.Address} onChange={this.onChange} style={{ width: \"393px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Address</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item active\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-save\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Save Changes?</div>\r\n                            <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                        </div>\r\n                        <div className=\"item-content-expanded\">\r\n                            <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <button\r\n                style={{ display: \"none\" }}\r\n                data-toggle=\"modal\"\r\n                data-target=\"#phone-confirmation-dialog\"\r\n                ref={sendCodeButton => this.SendCodeButton = sendCodeButton}></button>\r\n            <PhoneConfirmationDialog ConfirmationResult={this.state.ConfirmationResult}\r\n                PhoneNumber={this.state.PhoneNumber}\r\n                OnOK={phoneCodeVerified => {\r\n                    if (phoneCodeVerified) {\r\n                        this.setState({\r\n                            PhoneCodeVerified: true\r\n                        });\r\n\r\n                        this.onSubmit();\r\n                    }\r\n                    else {\r\n                        let {\r\n                            Errors\r\n                        } = this.state;\r\n\r\n                        Errors.PhoneNumber = \"Confirmation code is invalid.\";\r\n\r\n                        this.setState({\r\n                            ValidForm: false,\r\n                            Errors: Errors\r\n                        });\r\n                    }\r\n                }} />\r\n            <div id=\"recaptcha\"></div>\r\n            {this.state.ShowPreloader ? <Preloader /> : null}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default GeneralSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { usernameAndEmailSettings } from \"../../DriverFunctions.js\";\r\n\r\nclass CodeConfirmationDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ConfirmCode: \"\",\r\n\r\n            ValidConfirmCode: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                ConfirmCode: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidConfirmCode = this.state.ValidConfirmCode;\r\n\r\n        ValidConfirmCode = value === this.props.Code;\r\n        Errors.ConfirmCode = ValidConfirmCode ? \"\" : \"Invalid code.\";\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidConfirmCode: ValidConfirmCode,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidConfirmCode\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedDriver = {\r\n            Token: localStorage.Token,\r\n            Username: this.props.Username,\r\n            Email: this.props.Email,\r\n        };\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await usernameAndEmailSettings(updatedDriver).then(response => {\r\n            if (response.Message === \"Driver is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"text-left\">\r\n            <div\r\n                className=\"modal in\" id=\"code-confirmation-dialog\" tabIndex=\"-1\"\r\n                role=\"dialog\" aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\"\r\n                style={{ display: \"block\" }}>\r\n                <div className=\"modal-dialog\">\r\n                    {this.state.Preloader}\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <section>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <div className=\"modal-header\">\r\n                                        <img alt=\"passcode.png\" src=\"./images/passcode.png\" height=\"60\" />\r\n                                        <div className=\"type-h3\">Email Confirmation</div>\r\n                                        <div className=\"type-sh3\">We delivered a confirmation code to your email.</div>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Confirmation Code</label>\r\n                                                    <input type=\"text\" name=\"ConfirmCode\" className=\"form-control\" autocomplete=\"off\"\r\n                                                        value={this.state.ConfirmCode} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.ConfirmCode}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                            ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                        <input type=\"submit\" value=\"Confirm\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                    </div>\r\n                                </form>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default CodeConfirmationDialog;","import React, { Component } from \"react\";\r\nimport CodeConfirmationDialog from \"./CodeConfirmationDialog.js\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport {\r\n    getData,\r\n    validateUsername,\r\n    validateEmail,\r\n    sendCode,\r\n    usernameAndEmailSettings\r\n} from \"../../DriverFunctions.js\";\r\n\r\nclass UsernameAndEmailSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            NewUsername: \"\",\r\n\r\n            Email: \"\",\r\n            NewEmail: \"\",\r\n\r\n            Code: \"\",\r\n\r\n            ValidNewUsername: true,\r\n            ValidNewEmail: true,\r\n\r\n            ValidForm: false,\r\n            CodeConfirmationDialog: null,\r\n\r\n            Errors: {\r\n                NewUsername: \"\",\r\n                NewEmail: \"\",\r\n            },\r\n\r\n            CodeConfirmation: \"\",\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Driver\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver found.\") {\r\n                    let driver = response.Driver;\r\n\r\n                    this.setState({\r\n                        Username: driver.Username,\r\n                        NewUsername: driver.Username,\r\n                        Email: driver.Email,\r\n                        NewEmail: driver.Email\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Username: \"\",\r\n                        NewUsername: \"\",\r\n                        Email: \"\",\r\n                        NewEmail: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewUsername = this.state.ValidNewUsername;\r\n        let ValidNewEmail = this.state.ValidNewEmail;\r\n\r\n        switch (field) {\r\n            case \"NewUsername\":\r\n                ValidNewUsername = (value !== \"\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is required.\";\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value.match(/^[a-z0-9]+$/i));\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is invalid.\";\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value !== \"Username is unavailable.\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is unavailable.\";\r\n                break;\r\n            case \"NewEmail\":\r\n                ValidNewEmail = (value !== \"\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is required.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i));\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is invalid.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value !== \"Email is already taken.\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is already taken.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewUsername: ValidNewUsername,\r\n            ValidNewEmail: ValidNewEmail,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidNewUsername &&\r\n                    this.state.ValidNewEmail\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername === this.state.Username &&\r\n            this.state.NewEmail === this.state.Email) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername !== this.state.Username) {\r\n            const response = await validateUsername(this.state.NewUsername);\r\n\r\n            if (response.Message === \"Username is unavailable.\") {\r\n                this.validateField(\"NewUsername\", response.Message);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail !== this.state.Email) {\r\n            const response = await validateEmail(this.state.NewEmail);\r\n            if (response.Message === \"Email is already taken.\") {\r\n                this.validateField(\"NewEmail\", response.Message);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail === this.state.Email) {\r\n            const updatedDriver = {\r\n                Token: localStorage.Token,\r\n                Username: this.state.NewUsername,\r\n                Email: this.state.NewEmail,\r\n            };\r\n\r\n            this.setState({\r\n                Preloader: <Preloader />\r\n            });\r\n\r\n            console.log(\"Going to update username...\");\r\n            await usernameAndEmailSettings(updatedDriver).then(response => {\r\n                if (response.Message === \"Driver is updated.\") {\r\n                    this.props.OnSettingsSaved();\r\n                }\r\n\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            console.log(\"Going to send code...\");\r\n            await sendCode(this.state.NewEmail).then(response => {\r\n                if (response.Message === \"Code sent.\") {\r\n                    this.setState({\r\n                        CodeConfirmationDialog: <CodeConfirmationDialog\r\n                            Code={response.Code}\r\n                            Username={this.state.NewUsername}\r\n                            Email={this.state.NewEmail}\r\n                            OnCancel={() => {\r\n                                this.setState({\r\n                                    CodeConfirmationDialog: null,\r\n                                });\r\n                            }}\r\n                            OnOK={cancelButton => {\r\n                                cancelButton.click();\r\n                                this.props.OnSettingsSaved();\r\n                            }} />\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Username and Emails</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div class=\"entity-list entity-list-expandable\">\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-at\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" name=\"NewUsername\" class=\"form-control\" autocomplete=\"off\"\r\n                                        value={this.state.NewUsername} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Username</div>\r\n                                <div class=\"content-text-secondary text-danger\">{this.state.Errors.NewUsername}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-envelope\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-secondary\">\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"email\" name=\"NewEmail\" class=\"form-control\" placeholder=\"someone@example.com\" autocomplete=\"off\"\r\n                                        value={this.state.NewEmail} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Email</div>\r\n                                <div class=\"content-text-secondary text-danger\">{this.state.Errors.NewEmail}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"entity-list-item active\">\r\n                            <div class=\"item-icon\">\r\n                                <span class=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div class=\"item-content-primary\">\r\n                                <div class=\"content-text-primary\">Save Changes?</div>\r\n                                <div class=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div class=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n                {this.state.CodeConfirmationDialog}\r\n            </div> \r\n        );\r\n    }\r\n};\r\n\r\nexport default UsernameAndEmailSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { validatePassword, passwordSettings } from \"../../DriverFunctions.js\";\r\n\r\nclass PasswordSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            CurrentPassword: \"\",\r\n            NewPassword: \"\",\r\n            ConfirmPassword: \"\",\r\n\r\n            ValidCurrentPassword: false,\r\n            ValidNewPassword: false,\r\n            ValidConfirmPassword: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                CurrentPassword: \"\",\r\n                NewPassword: \"\",\r\n                ConfirmPassword: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    async validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCurrentPassword = this.state.ValidCurrentPassword;\r\n        let ValidNewPassword = this.state.ValidNewPassword;\r\n        let ValidConfirmPassword = this.state.ValidConfirmPassword;\r\n\r\n        switch (field) {\r\n            case \"CurrentPassword\":\r\n                ValidCurrentPassword = (value !== \"\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is required.\";\r\n\r\n                if (Errors.CurrentPassword !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCurrentPassword = (value !== \"Invalid password.\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is invalid.\";\r\n                break;\r\n            case \"NewPassword\":\r\n                ValidNewPassword = value.length >= 6;\r\n                Errors.NewPassword = ValidNewPassword ? \"\" : \"Password is too short.\";\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                ValidConfirmPassword = value === this.state.NewPassword;\r\n                Errors.ConfirmPassword = ValidConfirmPassword ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCurrentPassword: ValidCurrentPassword,\r\n            ValidNewPassword: ValidNewPassword,\r\n            ValidConfirmPassword: ValidConfirmPassword,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidCurrentPassword &&\r\n                    this.state.ValidNewPassword &&\r\n                    this.state.ValidConfirmPassword\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        let passwordPackage = {\r\n            Token: localStorage.Token,\r\n            Password: this.state.CurrentPassword\r\n        };\r\n\r\n        await validatePassword(passwordPackage).then(async response => {\r\n            if (response.Message === \"Invalid password.\") {\r\n                this.validateField(\"CurrentPassword\", response.Message);\r\n            }\r\n            else {\r\n                const updatedDriver = {\r\n                    Token: localStorage.Token,\r\n                    Password: this.state.NewPassword\r\n                };\r\n\r\n                this.setState({\r\n                    Preloader: <Preloader />\r\n                });\r\n\r\n                await passwordSettings(updatedDriver).then(response => {\r\n                    if (response.Message === \"Driver is updated.\") {\r\n                        this.props.OnSettingsSaved();\r\n                    }\r\n\r\n                    this.setState({\r\n                        Preloader: null\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div class=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\" }}>Change Password</div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n                <div class=\"entity-list entity-list-expandable\">\r\n                    <div class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <div class=\"form-group\">\r\n                                <input type=\"password\" name=\"CurrentPassword\" class=\"form-control\" autoComplete=\"off\"\r\n                                    value={this.state.CurrentPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Current Password</div>\r\n                            <div class=\"text-danger\">{this.state.Errors[\"CurrentPassword\"]}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <div class=\"form-group\">\r\n                                <input type=\"password\" name=\"NewPassword\" class=\"form-control\" autoComplete=\"off\"\r\n                                    value={this.state.NewPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">New Password</div>\r\n                            <div class=\"text-danger\">{this.state.Errors[\"NewPassword\"]}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <div class=\"form-group\">\r\n                                <input type=\"password\" name=\"ConfirmPassword\" class=\"form-control\" autoComplete=\"off\"\r\n                                    value={this.state.ConfirmPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Confirm Password</div>\r\n                            <div class=\"text-danger\">{this.state.Errors[\"ConfirmPassword\"]}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"entity-list-item active\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-save\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Save Changes?</div>\r\n                            <div class=\"content-text-secondary\">This cannot be undone.</div>\r\n                        </div>\r\n                        <div class=\"item-content-expanded\">\r\n                            <input type=\"submit\" value=\"Save\" class=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            {this.state.Preloader}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PasswordSettings;","import React, { Component } from \"react\";\r\nimport GeneralSettings from \"./GeneralSettings\";\r\nimport UsernameAndEmailSettings from \"./UsernameAndEmailSettings\";\r\nimport PasswordSettings from \"./PasswordSettings\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Settings extends Component {\r\n    render() {\r\n        return <section>\r\n            {/* <PageHeading Heading=\"SETTINGS\" /> */}\r\n            <GeneralSettings ref=\"GeneralSettings\" OnSettingsSaved={() => { this.refs.GeneralSettings.componentDidMount(); }} />\r\n            <UsernameAndEmailSettings ref=\"UsernameAndEmailSettings\" OnSettingsSaved={() => { this.refs.UsernameAndEmailSettings.componentDidMount(); }} />\r\n            <PasswordSettings ref=\"PasswordSettings\" OnSettingsSaved={() => { this.refs.PasswordSettings.forceUpdate(); }} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Settings;","import React, { Component } from \"react\";\r\n\r\nclass BlockedUserContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            BlockedUser\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron\" style={{ height: \"100vh\" }}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 text-center\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                alt=\"sad.svg\" src=\"./images/sad.svg\" data-source-index=\"2\" />\r\n                        </div>\r\n                        <div className=\"col-md-20\">\r\n                            <div className=\"type-h3 color-default\">{`${BlockedUser.FirstName} ${BlockedUser.LastName}, Your Account Has Been Blocked!`}</div>\r\n                            <div className=\"type-sh3\">Up to: <span className=\"color-default\">{new Date(BlockedUser.BlockDate).toDateString()}</span></div>\r\n                            <div className=\"type-sh4\">You cannot use Naqel's services until it is unblocked. See the reason, why our team has blocked your account.</div>\r\n                            <p><span className=\"color-default\">REASON: </span>{BlockedUser.Reason}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default BlockedUserContainer;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Profile from \"./profile/Profile\";\r\nimport Truck from \"./trucks/Truck\";\r\nimport Permits from \"./permits/Permits\";\r\nimport Earnings from \"./earnings/Earnings\";\r\nimport Jobs from \"./jobs/Jobs\";\r\nimport Payments from \"./payments/Payments\";\r\nimport Questions from \"./questions/Questions\";\r\nimport Settings from \"./settings/Settings\";\r\nimport SearchingContainer from \"../../../containers/searching/SearchingContainer\";\r\nimport BlockedUserContainer from \"../../../containers/blockedUser/BlockedUserContainer\";\r\nimport { getData } from \"../DriverFunctions\";\r\n\r\nclass DriversDashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Left: -400,\r\n            DashboardData: null,\r\n            Searching: false\r\n        };\r\n\r\n        //this.onCloseNavigation = this.onCloseNavigation.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DashboardData\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Dashboard data found.\") {\r\n                    this.setState({\r\n                        DashboardData: response.DashboardData,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DashboardData: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    //onCloseNavigation = () => {\r\n    //    this.setState({\r\n    //        Left: -400\r\n    //    });\r\n    //}\r\n\r\n    render() {\r\n        if (!localStorage.Token) {\r\n            return <Redirect to={\"/login\"} />;\r\n        }\r\n        else {\r\n            const {\r\n                DashboardData,\r\n                Searching\r\n            } = this.state;\r\n\r\n            return (Searching || !DashboardData) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"driver\" /> : \r\n                <section>\r\n                    {DashboardData.BlockedUser ?\r\n                        <BlockedUserContainer BlockedUser={DashboardData.BlockedUser} /> :\r\n                        <section>\r\n                            <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                                padding: \"10px\",\r\n                                backgroundColor: \"#133F4F\",\r\n                                width: \"100%\",\r\n                                margin: \"0px\",\r\n                            }}>\r\n                                {DashboardData.IsActiveAccount &&\r\n                                    <li role=\"presentation\" className=\"active\">\r\n                                        <a href=\"#jobs\" aria-controls=\"jobs\" role=\"tab\" data-toggle=\"tab\">Jobs</a>\r\n                                    </li>}\r\n                                {!DashboardData.IsActiveAccount &&\r\n                                    <li role=\"presentation\" className=\"active\">\r\n                                        <a href=\"#trucks\" aria-controls=\"trucks\" role=\"tab\" data-toggle=\"tab\">Trucks</a>\r\n                                    </li>}\r\n                                {DashboardData.IsActiveAccount && \r\n                                    <li role=\"presentation\">\r\n                                        <a href=\"#trucks\" aria-controls=\"trucks\" role=\"tab\" data-toggle=\"tab\">Trucks</a>\r\n                                    </li>}\r\n                                <li role=\"presentation\">\r\n                                    <a href=\"#permits\" aria-controls=\"permits\" role=\"tab\" data-toggle=\"tab\">Permits</a>\r\n                                </li>\r\n                                {DashboardData.IsActiveAccount &&\r\n                                    <li role=\"presentation\">\r\n                                    <a href=\"#earnings\" aria-controls=\"earnings\" role=\"tab\" data-toggle=\"tab\"\r\n                                        onClick={async () => { await this.RefreshEarnings(); }}>Earnings</a>\r\n                                    </li>}\r\n                                {DashboardData.IsActiveAccount &&\r\n                                    <li role=\"presentation\">\r\n                                        <a href=\"#payments\" aria-controls=\"payments\" role=\"tab\" data-toggle=\"tab\">Payments</a>\r\n                                    </li>}\r\n                                {DashboardData.IsActiveAccount &&\r\n                                    <li role=\"presentation\">\r\n                                        <a href=\"#questions\" aria-controls=\"questions\" role=\"tab\" data-toggle=\"tab\">Questions</a>\r\n                                    </li>}\r\n                                <li role=\"presentation\">\r\n                                    <a href=\"#profile\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">Profile</a>\r\n                                </li>\r\n                                <li role=\"presentation\">\r\n                                    <a href=\"#settings\" aria-controls=\"settings\" role=\"tab\" data-toggle=\"tab\">Settings</a>\r\n                                </li>\r\n                            </ul>\r\n\r\n\r\n                            {/*\r\n                             <div className=\"sidenav\" style={{ left: `${this.state.Left}px` }}>\r\n                                <a className=\"closebtn\" onClick={this.onCloseNavigation}>&times;</a>\r\n\r\n                                <div class=\"entity-list\" role=\"tablist\">\r\n                                    <div class=\"entity-list-item\" role=\"presentation\">\r\n                                        <a href=\"#profile\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Profile</a>\r\n                                    </div>\r\n                                    <div class=\"entity-list-item\" role=\"presentation\">\r\n                                        <a href=\"#trucks\" aria-controls=\"trucks\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Trucks</a>\r\n                                    </div>\r\n                                    <div class=\"entity-list-item\" role=\"presentation\">\r\n                                        <a href=\"#permits\" aria-controls=\"permits\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Permits</a>\r\n                                    </div>\r\n                                    {DashboardData.IsActiveAccount ?\r\n                                        <section>\r\n                                            <div class=\"entity-list-item\" role=\"presentation\">\r\n                                                <a href=\"#jobs\" aria-controls=\"jobs\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Jobs</a>\r\n                                            </div>\r\n                                            <div class=\"entity-list-item\" role=\"presentation\">\r\n                                                <a href=\"#earnings\" aria-controls=\"earnings\" role=\"tab\" data-toggle=\"tab\" onClick={async () => {\r\n                                                    this.onCloseNavigation();\r\n                                                    await this.RefreshEarnings();\r\n                                                }}>Earnings</a>\r\n                                            </div>\r\n                                            <div class=\"entity-list-item\" role=\"presentation\">\r\n                                                <a href=\"#payments\" aria-controls=\"payments\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Payments</a>\r\n                                            </div>\r\n                                            <div class=\"entity-list-item\" role=\"presentation\">\r\n                                                <a href=\"#questions\" aria-controls=\"questions\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Questions</a>\r\n                                            </div>\r\n                                        </section> : null}\r\n                                    <div class=\"entity-list-item\" role=\"presentation\">\r\n                                        <a href=\"#settings\" aria-controls=\"settings\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Settings</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                             */}\r\n\r\n                            <div className=\"tab-content\">\r\n                                {DashboardData.IsActiveAccount ?\r\n                                    null : <div class=\"alert alert-warning m-n\">\r\n                                        <div class=\"container\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-xs-24\">\r\n                                                    <p><span className=\"fas fa-exclamation-circle m-r-xxxs\"></span>Your account isn't yet activated by our team. Make sure to keep your profile up-to-date with your valid information. Our team will soon review your information. At the moment, you cannot use all Naqel services.</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>}\r\n\r\n                                <div role=\"tabpanel\" className=\"tab-pane\" id=\"profile\">\r\n                                    <Profile />\r\n                                </div>\r\n                                {DashboardData.IsActiveAccount && \r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"trucks\">\r\n                                        <Truck />\r\n                                    </div>}\r\n                                {!DashboardData.IsActiveAccount &&\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"trucks\">\r\n                                        <Truck />\r\n                                    </div>}\r\n                                <div role=\"tabpanel\" className=\"tab-pane\" id=\"permits\">\r\n                                    <Permits />\r\n                                </div>\r\n                                {DashboardData.IsActiveAccount ?\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"earnings\">\r\n                                        <Earnings Refresh={refresh => { this.RefreshEarnings = refresh; }} />\r\n                                    </div> : null}\r\n                                {DashboardData.IsActiveAccount ?\r\n                                    <div role=\"tabpanel\" className=\"tab-pane active\" id=\"jobs\">\r\n                                        <Jobs />\r\n                                    </div> : null}\r\n                                {DashboardData.IsActiveAccount ?\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"payments\">\r\n                                        <Payments />\r\n                                    </div> : null}\r\n                                {DashboardData.IsActiveAccount ?\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"questions\">\r\n                                        <Questions />\r\n                                    </div> : null}\r\n                                <div role=\"tabpanel\" className=\"tab-pane\" id=\"settings\">\r\n                                    <Settings />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/*\r\n                             <div className=\"side-nav-btn\" onClick={() => {\r\n                                this.setState({\r\n                                    Left: 0\r\n                                });\r\n                            }}><div className=\"fas fa-bars\" style={{ fontSize: \"x-large\" }}></div>\r\n                            </div>\r\n                             */}\r\n                        </section>}\r\n                </section>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default DriversDashboard;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { getData, uploadTraderProfilePhoto } from \"../../TraderFunctions\";\r\nimport Strings from \"../../../../res/strings\";\r\n\r\nclass ProfilePhoto extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Image: null,\r\n            PhotoURL: \"./images/defaultProfilePhoto.png\",\r\n            UploadProgress: null,\r\n        };\r\n\r\n        this.onImageUpload = this.onImageUpload.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"ProfilePhoto\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Profile photo found.\") {\r\n                    let profilePhoto = response.ProfilePhoto;\r\n\r\n                    this.setState({\r\n                        PhotoURL: profilePhoto.PhotoURL,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        PhotoURL: \"./images/defaultProfilePhoto.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onImageUpload = async event => {\r\n        this.state.Image = event.target.files[0];\r\n        const formData = new FormData();\r\n\r\n        try {\r\n            formData.append(\"Image\", this.state.Image, this.state.Image.name);\r\n\r\n            await axios.post(Strings.IMAGE_UPLOADER, formData, {\r\n                onUploadProgress: event => {\r\n                    this.setState({\r\n                        UploadProgress: <div className=\"progress-bar\">\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                        </div>\r\n                    });\r\n                }\r\n            }).then(async response => {\r\n                response = response.data;\r\n\r\n                if (response.message === \"Image uploaded successfully.\") {\r\n                    const traderProfilePhoto = {\r\n                        Token: localStorage.Token,\r\n                        PhotoURL: response.imageUrl,\r\n                        FileName: response.filename\r\n                    }\r\n\r\n                    let photoURL = response.imageUrl;\r\n\r\n                    await uploadTraderProfilePhoto(traderProfilePhoto).then(response => {\r\n                        if (response.Message === \"Profile photo is updated.\" ||\r\n                            response.Message === \"Profile photo is added.\") {\r\n\r\n                            this.setState({\r\n                                PhotoURL: photoURL,\r\n                                UploadProgress: null,\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }).catch(() => {\r\n                this.props.OnImageUploaded(\"Invalid Image.\");\r\n                this.setState({\r\n                    ImageURL: \"./images/defaultProfilePhoto.png\",\r\n                    UploadProgress: null,\r\n                });\r\n            });\r\n        }\r\n        catch (exception) {\r\n            this.setState({\r\n                UploadProgress: null,\r\n            });\r\n\r\n            return;\r\n        }\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <input type=\"file\" onChange={this.onImageUpload} style={{ display: \"none\", }} ref={fileInput => this.fileInput = fileInput} />\r\n                <figure className=\"media\">\r\n                    <div className=\"media-img media-img-has-play ratio-1-1\">\r\n                        <a href=\"#\" onClick={() => this.fileInput.click()}>\r\n                            <img style={{border: \"5px solid #3A3A3C\"}}\r\n                                src={this.state.PhotoURL} alt=\"ProfilePhoto.png\" />\r\n                            <i className=\"glyph glyph-edit\"></i>\r\n                        </a>\r\n                    </div>\r\n                </figure>\r\n                {this.state.UploadProgress}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ProfilePhoto;","import React, { Component } from \"react\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addIdentityCard } from \"../../../../TraderFunctions.js\";\r\n\r\nclass AddIdentityCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidIDNumber: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                IDNumber: \"\",\r\n                PhotoURL: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidIDNumber = this.state.ValidIDNumber;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"IDNumber\":\r\n                ValidIDNumber = (value !== \"\");\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidIDNumber = (value >= 1000000000 && value <= 9999999999);\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number must be 10-digits long.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidIDNumber: ValidIDNumber,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidIDNumber &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newIdentityCard = {\r\n            Token: localStorage.Token,\r\n            IDNumber: this.state.IDNumber,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to add Identity Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        addIdentityCard(newIdentityCard).then(response => {\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n\r\n            if (response.Message === \"Identity card is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"add-identity-card-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    Height=\"220px\"\r\n                                                    Width=\"220px\"\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }}\r\n                                                    ImageCategory=\"IdentityCard\" />\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"type-h3 color-default p-t-xxs\">Add Your Identity Card</div>\r\n                                                <div className=\"type-sh4 text-danger\">{this.state.Errors.PhotoURL}</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">ID Number</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"IDNumber\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.IDNumber} onChange={this.onChange} min=\"1000000000\" max=\"99999999999\" />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.IDNumber}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddIdentityCardDialog;","import React, { Component } from \"react\";\r\nimport AddIdentityCardDialog from \"./AddIdentityCardDialog.js\";\r\n\r\nclass AddIdentityCardButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddIdentityCardDialog: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-identity-card-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddIdentityCardDialog: <AddIdentityCardDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddIdentityCardDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />,\r\n                        });\r\n                    }}>Identity Card</button>\r\n                {this.state.AddIdentityCardDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddIdentityCardButton;","import React, { Component } from \"react\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addCommercialRegisterCertificate } from \"../../../../TraderFunctions.js\";\r\n\r\nclass AddCommercialRegisterCertificateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Type: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidType: false,\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                Type: \"\",\r\n                PhotoURL: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Certificate type is required.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidType: ValidType,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidType &&\r\n                        this.state.ValidPhotoURL\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newCommercialRegisterCertificate = {\r\n            Token: localStorage.Token,\r\n            Type: this.state.Type,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to add commercial register certificate.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        addCommercialRegisterCertificate(newCommercialRegisterCertificate).then(response => {\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n\r\n            if (response.Message === \"Commercial register certificate is added.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"add-commercial-register-certificate-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }} />\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"type-h3 color-default p-t-xxs\">Add Commercial Register Certificate</div>\r\n                                                <div className=\"type-sh4 text-danger\">{this.state.Errors.PhotoURL}</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Certificate Type</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddCommercialRegisterCertificateDialog;","import React, { Component } from \"react\";\r\nimport AddCommercialRegisterCertificateDialog from \"./AddCommercialRegisterCertificateDialog.js\";\r\n\r\nclass AddCommercialRegisterCertificateButton extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            AddCommercialRegisterCertificateDialog: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ minWidth: \"152px\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#add-commercial-register-certificate-dialog\"\r\n                    onMouseDown={() => {\r\n                        this.setState({\r\n                            AddCommercialRegisterCertificateDialog: <AddCommercialRegisterCertificateDialog\r\n                                OnCancel={() => {\r\n                                    this.setState({\r\n                                        AddCommercialRegisterCertificateDialog: null,\r\n                                    });\r\n                                }}\r\n                                OnOK={cancelButton => {\r\n                                    cancelButton.click();\r\n                                    this.props.OnDocumentsUpdated();\r\n                                }} />\r\n                        });\r\n                    }}>Add CR Certificate</button>\r\n                {this.state.AddCommercialRegisterCertificateDialog}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddCommercialRegisterCertificateButton;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateIdentityCard } from \"../../../../TraderFunctions.js\";\r\n\r\nclass EditIdentityCardDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidIDNumber: true,\r\n            ValidPhotoURL: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                IDNumber: \"\",\r\n                PhotoURL: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.Token) {\r\n            this.setState({\r\n                Preloader: <Preloader />\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Identity card found.\") {\r\n                    let identityCard = response.IdentityCard;\r\n\r\n                    this.setState({\r\n                        IDNumber: identityCard.IDNumber,\r\n                        PhotoURL: identityCard.PhotoURL,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        IDNumber: \"\",\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                        Preloader: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidIDNumber = this.state.ValidIDNumber;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"IDNumber\":\r\n                ValidIDNumber = (value !== \"\");\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number is required.\";\r\n\r\n                if (Errors.IDNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidIDNumber = (value >= 1000000000 && value <= 9999999999);\r\n                Errors.IDNumber = ValidIDNumber ? \"\" : \"ID number must be 10-digits long.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidIDNumber: ValidIDNumber,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidIDNumber &&\r\n                    this.state.ValidPhotoURL\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedIdentityCard = {\r\n            Token: localStorage.Token,\r\n            IDNumber: this.state.IDNumber,\r\n            PhotoURL: this.state.PhotoURL,\r\n        }\r\n\r\n        console.log(\"Going to update Identity Card.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        updateIdentityCard(updatedIdentityCard).then(response => {\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n\r\n            if (response.Message === \"Identity card is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"edit-identity-card-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    Height=\"220px\"\r\n                                                    Width=\"220px\"\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }}\r\n                                                    ImageCategory=\"IdentityCard\" />\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"type-h3 color-default p-t-xxs\">Edit Identity Card</div>\r\n                                                <div className=\"type-sh4 text-danger\">{this.state.Errors.PhotoURL}</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">ID Number</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"IDNumber\" className=\"form-control\" autoComplete=\"off\" required\r\n                                                        value={this.state.IDNumber} onChange={this.onChange} min=\"1000000000\" max=\"99999999999\" />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.IDNumber}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default EditIdentityCardDialog;","import React, { Component } from \"react\";\r\nimport EditIdentityCardDialog from \"./EditIdentityCardDialog.js\";\r\nimport { getData, deleteIdentityCard } from \"../../../../TraderFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass IdentityCardListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Key: Math.floor(Math.random() * 100),\r\n            IdentityCardID: \"\",\r\n            IDNumber: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            EditIdentityCardDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onRefresh = this.onRefresh.bind(this);\r\n    }\r\n\r\n    onDelete = () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        let discardedIdentityCard = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete Identity Card.`);\r\n\r\n        deleteIdentityCard(discardedIdentityCard).then(response => {\r\n            console.log(response);\r\n            if (response.Message === \"Identity card is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onRefresh();\r\n    }\r\n\r\n    onRefresh = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Identity card found.\") {\r\n                    let identityCard = response.IdentityCard;\r\n\r\n                    this.setState({\r\n                        IdentityCardID: identityCard.IdentityCardID,\r\n                        IDNumber: identityCard.IDNumber,\r\n                        PhotoURL: identityCard.PhotoURL\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        IdentityCardID: \"\",\r\n                        IDNumber: \"\",\r\n                        PhotoURL: \"./images/default_image.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#identity-card-${this.state.IdentityCardID}`}>\r\n                    <div className=\"entity-list\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\" style={{ borderRadius: \"50%\" }}>\r\n                                <span className=\"glyph glyph-add\"></span>\r\n                                <span className=\"glyph glyph-remove\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">\r\n                                    <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>{`${this.props.Index}.`}</span>\r\n                                </div>\r\n                                <div className=\"content-text-secondary\">\r\n                                    <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>IDENTITY CARD</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"collapse\" id={`identity-card-${this.state.IdentityCardID}`}>\r\n                    <div className=\"jumbotron theme-default\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        src={this.state.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                            overflow: \"hidden\",\r\n                                            border: \"5px solid #3A3A3C\",\r\n                                            margin: \"5px\"\r\n                                        }} />\r\n                                </div>\r\n                                <div className=\"col-md-18\">\r\n                                    <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                        Identity Card\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-hashtag\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">ID Number</div>\r\n                                                        <div className=\"content-text-secondary\">{this.state.IDNumber}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary\"\r\n                            data-toggle=\"modal\"\r\n                            data-target=\"#edit-identity-card-dialog\"\r\n                            onMouseDown={() => {\r\n                                this.setState({\r\n                                    EditIdentityCardDialog: <EditIdentityCardDialog\r\n                                        OnCancel={() => {\r\n                                            this.setState({\r\n                                                EditIdentityCardDialog: null\r\n                                            });\r\n                                        }}\r\n                                        OnOK={cancelButton => {\r\n                                            cancelButton.click();\r\n                                            this.onRefresh();\r\n                                        }} />\r\n                                });\r\n                            }}>Edit</button>\r\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                    </div>\r\n                </div>               \r\n                {this.state.Preloader}\r\n                {this.state.EditIdentityCardDialog}\r\n            </li>        \r\n        );\r\n    }\r\n};\r\n\r\nexport default IdentityCardListItem;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { getData, updateCommercialRegisterCertificate } from \"../../../../TraderFunctions.js\";\r\n\r\nclass EditCommercialRegisterCertificateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Type: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidType: true,\r\n            ValidPhotoURL: true,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                Type: \"\",\r\n                PhotoURL: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onRefresh = this.onRefresh.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onRefresh();\r\n    }\r\n\r\n    onRefresh = () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"CommercialRegisterCertificate\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Commercial register certificate found.\") {\r\n                    let commercialRegisterCertificate = response.CommercialRegisterCertificate;\r\n\r\n                    this.setState({\r\n                        Type: commercialRegisterCertificate.Type,\r\n                        PhotoURL: commercialRegisterCertificate.PhotoURL,\r\n                        Preloader: null\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Type: \"\",\r\n                        PhotoURL: \"./images/default_image.png\",\r\n                        Preloader: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidType = this.state.ValidType;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Certificate type is required.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidType: ValidType,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidType &&\r\n                    this.state.ValidPhotoURL\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedCommercialRegisterCertificate = {\r\n            Token: localStorage.Token,\r\n            Type: this.state.Type,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to update commercial register certificate.\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        updateCommercialRegisterCertificate(updatedCommercialRegisterCertificate).then(response => {\r\n            if (response.Message === \"Commercial register certificate is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"add-commercial-register-certificate-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }} />\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"type-h3 color-default p-t-xxs\">Add Commercial Register Certificate</div>\r\n                                                <div className=\"type-sh4 text-danger\">{this.state.Errors.PhotoURL}</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Certificate Type</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default EditCommercialRegisterCertificateDialog;","import React, { Component } from \"react\";\r\nimport EditCommercialRegisterCertificateDialog from \"./EditCommercialRegisterCertificateDialog.js\";\r\nimport { getData, deleteCommercialRegisterCertificate } from \"../../../../TraderFunctions.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\n\r\nclass CommercialRegisterCertificateListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ID: \"\",\r\n            Number: \"\",\r\n            Type: \"\",\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            EditCommercialRegisterCertificateDialog: null,\r\n            Preloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onRefresh = this.onRefresh.bind(this);\r\n    }\r\n\r\n    onDelete = () => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        let discardedCommercialRegisterCertificate = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        console.log(`Going to delete commercial register certificate.`);\r\n\r\n        deleteCommercialRegisterCertificate(discardedCommercialRegisterCertificate).then(response => {\r\n            if (response.Message === \"Commercial register certificate is deleted.\") {\r\n                this.props.OnDocumentsUpdated();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onRefresh();\r\n    }\r\n\r\n    onRefresh = () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"CommercialRegisterCertificate\"\r\n            };\r\n\r\n            getData(request).then(response => {\r\n                if (response.Message === \"Commercial register certificate found.\") {\r\n                    let commercialRegisterCertificate = response.CommercialRegisterCertificate;\r\n\r\n                    this.setState({\r\n                        ID: commercialRegisterCertificate.ID,\r\n                        Number: commercialRegisterCertificate.Number,\r\n                        Type: commercialRegisterCertificate.Type,\r\n                        PhotoURL: commercialRegisterCertificate.PhotoURL\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        ID: \"\",\r\n                        Number: \"\",\r\n                        Type: \"\",\r\n                        PhotoURL: \"./images/default_image.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#commercial-register-certificate-${this.state.ID}`}>\r\n                    <div className=\"entity-list\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\" style={{ borderRadius: \"50%\" }}>\r\n                                <span className=\"glyph glyph-add\"></span>\r\n                                <span className=\"glyph glyph-remove\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">\r\n                                    <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>{`${this.props.Index}.`}</span>\r\n                                </div>\r\n                                <div className=\"content-text-secondary\">\r\n                                    <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>COMMERCIAL REGISTER CERTIFICATE</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"collapse\" id={`commercial-register-certificate-${this.state.ID}`}>\r\n                    <div className=\"jumbotron theme-default\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                        src={this.state.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                            overflow: \"hidden\",\r\n                                            border: \"5px solid #3A3A3C\",\r\n                                            margin: \"5px\"\r\n                                        }} />\r\n                                </div>\r\n                                <div className=\"col-md-18\">\r\n                                    <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                        Commercial Register Certificate\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-hashtag\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Certificate Number</div>\r\n                                                        <div className=\"content-text-secondary\">{this.state.Number}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"entity-list\">\r\n                                                <div className=\"entity-list-item\">\r\n                                                    <div className=\"item-icon\">\r\n                                                        <span className=\"fas fa-cog\"></span>\r\n                                                    </div>\r\n                                                    <div className=\"item-content-primary\">\r\n                                                        <div className=\"content-text-primary\">Certificate Type</div>\r\n                                                        <div className=\"content-text-secondary\">{this.state.Type}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ backgroundColor: \"#E5E5E5\", textAlign: \"right\", padding: \"10px\" }}>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary\"\r\n                            data-toggle=\"modal\"\r\n                            data-target=\"#edit-commercial-register-certificate-dialog\"\r\n                            onMouseDown={() => {\r\n                                this.setState({\r\n                                    EditCommercialRegisterCertificateDialog: <EditCommercialRegisterCertificateDialog\r\n                                        OnCancel={() => {\r\n                                            this.setState({\r\n                                                EditCommercialRegisterCertificateDialog: null\r\n                                            });\r\n                                        }}\r\n                                        OnOK={cancelButton => {\r\n                                            cancelButton.click();\r\n                                            this.onRefresh();\r\n                                        }} />\r\n                                });\r\n                            }}>Edit</button>\r\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.onDelete(); }}>Delete</button>\r\n                    </div>\r\n                </div>               \r\n                {this.state.Preloader}\r\n                {this.state.EditCommercialRegisterCertificateDialog}\r\n            </li>        \r\n        );\r\n    }\r\n};\r\n\r\nexport default CommercialRegisterCertificateListItem;","import React, { Component } from \"react\";\r\nimport AddIdentityCardButton from \"./identityCard/AddIdentityCardButton.js\";\r\nimport AddCommercialRegisterCertificateButton from \"./commercialRegisterCertificate/AddCommercialRegisterCertificateButton.js\";\r\nimport IdentityCardListItem from \"./identityCard/IdentityCardListItem.js\";\r\nimport CommercialRegisterCertificateListItem from \"./commercialRegisterCertificate/CommercialRegisterCertificateListItem.js\";\r\nimport { getData } from \"../../../TraderFunctions\";\r\n\r\nclass DocumentsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AddIdentityCardButton: null, \r\n            AddCommercialRegisterCertificateButton: null,\r\n            IdentityCardListItem: null,\r\n            CommercialRegisterCertificateListItem: null\r\n        };\r\n\r\n        this.onDocumentsUpdated = this.onDocumentsUpdated.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"I'm Here.. Going to update documents...\");\r\n        this.onDocumentsUpdated();\r\n    }\r\n\r\n    onDocumentsUpdated = () => {\r\n        let index = 0;\r\n        let identityCard;\r\n        let commercialRegisterCertificate;\r\n\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"IdentityCard\"\r\n            };\r\n\r\n            getData(request).then(response =>\r\n            {\r\n                console.log(response);\r\n                if (response.Message === \"Identity card found.\") {\r\n                    identityCard = response.IdentityCard;\r\n                }\r\n                else {\r\n                    identityCard = undefined;\r\n                }\r\n\r\n                request = {\r\n                    Token: localStorage.Token,\r\n                    Get: \"CommercialRegisterCertificate\"\r\n                };\r\n\r\n                getData(request).then(response => {\r\n                    if (response.Message === \"Commercial register certificate found.\") {\r\n                        commercialRegisterCertificate = response.CommercialRegisterCertificate;\r\n                    }\r\n                    else {\r\n                        commercialRegisterCertificate = undefined;\r\n                    }\r\n\r\n                    (identityCard) ? this.setState({\r\n                        AddIdentityCardButton: null,\r\n                        IdentityCardListItem: <IdentityCardListItem\r\n                            Index={++index}\r\n                            OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                    }) : this.setState({\r\n                        AddIdentityCardButton: <AddIdentityCardButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                        IdentityCardListItem: null\r\n                    });\r\n\r\n                    (commercialRegisterCertificate) ? this.setState({\r\n                        AddCommercialRegisterCertificateButton: null,\r\n                        CommercialRegisterCertificateListItem: <CommercialRegisterCertificateListItem\r\n                            Index={++index}\r\n                            OnDocumentsUpdated={this.onDocumentsUpdated} />\r\n                    }) : this.setState({\r\n                        AddCommercialRegisterCertificateButton: <AddCommercialRegisterCertificateButton OnDocumentsUpdated={this.onDocumentsUpdated} />,\r\n                        CommercialRegisterCertificateListItem: null\r\n                    });\r\n                });\r\n            });         \r\n        }      \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3 back-color-gray m-n p-xxs\">Documents</div>\r\n                <div className= \"text-right back-color-gray p-xxs\">\r\n                    {this.state.AddIdentityCardButton}\r\n                    {this.state.AddCommercialRegisterCertificateButton}\r\n                </div>\r\n                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {this.state.IdentityCardListItem}\r\n                    {this.state.CommercialRegisterCertificateListItem}\r\n                </ol>\r\n            </section>         \r\n        );\r\n    }\r\n};\r\n\r\nexport default DocumentsList;","import React, { Component } from \"react\";\r\nimport { getData } from \"../../TraderFunctions\";\r\nimport ProfilePhoto from \"./ProfilePhoto\";\r\nimport DocumentsList from \"./documents/DocumentsList\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            Email: \"\",\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\",\r\n            Type: \"\",\r\n            Active: null\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Trader\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader found.\") {\r\n                    let trader = response.Trader;\r\n\r\n                    this.setState({\r\n                        Username: trader.Username,\r\n                        Email: trader.Email,\r\n                        FirstName: trader.FirstName,\r\n                        LastName: trader.LastName,\r\n                        Address: trader.Address,\r\n                        PhoneNumber: trader.PhoneNumber,\r\n                        Gender: trader.Gender,\r\n                        Nationality: trader.Nationality,\r\n                        DateOfBirth: trader.DateOfBirth,\r\n                        Type: trader.Type,\r\n                        Active: trader.Active\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                {/* <PageHeading Heading=\"PROFILE\" /> */}\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <ProfilePhoto />\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3 color-default p-t-n\">\r\n                                    {`${this.state.FirstName} ${this.state.LastName}`}\r\n                                </div>\r\n                                <div className=\"type-sh3\">\r\n                                    <span className=\"fas fa-briefcase m-r-xxxs\" style={{ color: \"#606060\" }}></span>{this.state.Type}\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-globe-asia\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Active</div>\r\n                                                    <div className=\"content-text-secondary\">{(this.state.Active === 1) ?\r\n                                                        <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                        <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-phone\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Phone Number</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.PhoneNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-at\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Username</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.Username}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-envelope\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Email</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.Email}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-24\">\r\n                                <div className=\"type-h3\" style={{ paddingTop: \"0px\" }}>Details</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list theme-alt\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                    <span className=\"fas fa-birthday-cake color-default\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Birthday</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.DateOfBirth}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list theme-alt\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                    <span className={(this.state.Gender === \"Male\") ? \"fas fa-male color-default\" : \"fas fa-female color-default\"}></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Gender</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.Gender}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list theme-alt\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                    <span className=\"fas fa-flag color-default\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Nationality</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.Nationality}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list theme-alt\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\" style={{ backgroundColor: \"transparent\" }}>\r\n                                                    <span className=\"fas fa-map-marker-alt color-default\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Address</div>\r\n                                                    <div className=\"content-text-secondary\">{this.state.Address}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <DocumentsList />\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Profile;","import React, { Component } from \"react\";\r\n\r\nclass DrivingLicenceContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const drivingLicence = this.props.DrivingLicence;\r\n\r\n        return drivingLicence ? <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={drivingLicence.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-16\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Driving Licence</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-24\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Licence Number</div>\r\n                                                    <div class=\"content-text-secondary\">{drivingLicence.LicenceNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-cog\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Licence Type</div>\r\n                                                    <div class=\"content-text-secondary\">{drivingLicence.Type}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-calendar\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Release Date</div>\r\n                                                    <div class=\"content-text-secondary\">{new Date(drivingLicence.ReleaseDate).toDateString()}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-calendar\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Expiry Date</div>\r\n                                                    <div class=\"content-text-secondary\">{new Date(drivingLicence.ExpiryDate).toDateString()}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </section> : null;\r\n    }\r\n};\r\n\r\nexport default DrivingLicenceContainer;","import React, { Component } from \"react\";\r\n\r\nclass EntryExitCardContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const entryExitCard = this.props.EntryExitCard;\r\n\r\n        return entryExitCard ? <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-24\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Entry/Exit Card</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-24\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Entry/Exit Number</div>\r\n                                                    <div class=\"content-text-secondary\">{entryExitCard.EntryExitNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-cog\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Card Type</div>\r\n                                                    <div class=\"content-text-secondary\">{entryExitCard.Type}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-calendar\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Release Date</div>\r\n                                                    <div class=\"content-text-secondary\">{new Date(entryExitCard.ReleaseDate).toDateString()}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Number of Months</div>\r\n                                                    <div class=\"content-text-secondary\">{entryExitCard.NumberOfMonths}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </section> : null;\r\n    }\r\n};\r\n\r\nexport default EntryExitCardContainer;","import React, { Component } from \"react\";\r\n\r\nclass IdentityCardContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const identityCard = this.props.IdentityCard;\r\n\r\n        return identityCard ? <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={identityCard.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-16\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Identity Card</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-24\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">ID Number</div>\r\n                                                    <div class=\"content-text-secondary\">{identityCard.IDNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </section> : null;\r\n    }\r\n};\r\n\r\nexport default IdentityCardContainer;","import React, { Component } from \"react\";\r\nimport { getPublicData } from \"../../../components/shared/UserFunctions\";\r\nimport SearchingContainer from \"../../searching/SearchingContainer\"; \r\nimport DrivingLicenceContainer from \"./DrivingLicenceContainer\";\r\nimport EntryExitCardContianer from \"./EntryExitCardContainer\";\r\nimport IdentityCardContainer from \"./IdentityCardContainer\";\r\n\r\nclass DocumentsDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DriverDocuments: null,\r\n            Searching: false,\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Get: \"DriverDocuments\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Driver documents found.\") {\r\n                    this.setState({\r\n                        DriverDocuments: response.DriverDocuments,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DriverDocuments: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const driverDocuments = this.state.DriverDocuments;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`documents-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h2\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Documents</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {(this.state.Searching || !driverDocuments) ?\r\n                                <SearchingContainer Searching={this.state.Searching}\r\n                                    SearchingFor=\"documents\" /> :\r\n                                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                                    <IdentityCardContainer IdentityCard={driverDocuments.IdentityCard} />\r\n                                    <DrivingLicenceContainer DrivingLicence={driverDocuments.DrivingLicence} />\r\n                                    <EntryExitCardContianer EntryExitCard={driverDocuments.EntryExitCard} />\r\n                                </ol>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DocumentsDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport Rating from \"../../controls/Rating\";\r\nimport SearchingContainer from \"../searching/SearchingContainer\";\r\nimport DocumentsDialog from \"./documents/DocumentsDialog\";\r\nimport { getPublicData } from \"../../components/shared/UserFunctions\";\r\n\r\nclass DriverContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DriverProfile: null,\r\n            Searching: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Get: \"DriverProfile\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Driver profile found.\") {\r\n                    this.setState({\r\n                        DriverProfile: response.DriverProfile,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DriverProfile: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            let request = {\r\n                Get: \"DriverProfile\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Driver profile found.\") {\r\n                    this.setState({\r\n                        DriverProfile: response.DriverProfile\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DriverProfile: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Searching || !this.state.DriverProfile) {\r\n            return <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor=\"driver\" />;\r\n        }\r\n        else {\r\n            const driverProfile = this.state.DriverProfile;\r\n            const driver = driverProfile.Driver;\r\n            const ratingAndReviews = driverProfile.RatingAndReviews\r\n            const onJob = driverProfile.OnJob;\r\n            const profilePhoto = driverProfile.ProfilePhoto ?\r\n                driverProfile.ProfilePhoto :\r\n                \"./images/defaultProfilePhoto.png\";\r\n\r\n            const dialogID = UUID().substring(0, 7).toUpperCase();\r\n\r\n            return <section>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={profilePhoto} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                    {`${driver.FirstName} ${driver.LastName} `}\r\n                                    {onJob ? <span class=\"badge back-color-golden\">ON JOB</span> : null}\r\n                                </div>\r\n                                <div className=\"type-sh3\"><span className=\"fas fa-car m-r-xxs\" style={{ color: \"#606060\" }}></span>Driver</div>\r\n                                <div className=\"type-sh3\">\r\n                                    <span><Rating Rating={ratingAndReviews.Reviews > 0 ? ratingAndReviews.Rating : 0}\r\n                                        Color=\"\" Size=\"rating-small\"\r\n                                        Label={ratingAndReviews.Reviews > 0 ?\r\n                                            `(${ratingAndReviews.Reviews} Review(s))` : `No Reviews`} /></span>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-globe-asia\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Active</div>\r\n                                                    <div className=\"content-text-secondary\">{(driver.Active === 1) ?\r\n                                                        <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                        <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class={(driver.Gender === \"Male\") ? \"fas fa-male\" : \"fas fa-female\"}></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Gender</div>\r\n                                                    <div class=\"content-text-secondary\">{driver.Gender}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-birthday-cake\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Birthday</div>\r\n                                                    <div class=\"content-text-secondary\">{driver.DateOfBirth}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-envelope\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Email</div>\r\n                                                    <div class=\"content-text-secondary\">{driver.Email}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-phone\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Phone Number</div>\r\n                                                    <div class=\"content-text-secondary\">{driver.PhoneNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-flag\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Nationality</div>\r\n                                                    <div class=\"content-text-secondary\">{driver.Nationality}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {this.props.TabView ?\r\n                                    null : \r\n                                    <button type=\"button\" className=\"btn btn-default\"\r\n                                        style={{ minWidth: \"152px\" }} data-toggle=\"modal\"\r\n                                        data-target={`#documents-dialog-${dialogID}`}>Documents</button>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.props.TabView ?\r\n                    null :\r\n                    <DocumentsDialog DialogID={dialogID}\r\n                        DriverID={this.props.DriverID} />}\r\n            </section>;\r\n        } \r\n    }\r\n};\r\n\r\nexport default DriverContainer;","import React, { Component } from \"react\";\r\n\r\nclass TrailerContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const trailer = this.props.Trailer;\r\n\r\n        return <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={trailer.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-16\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>{`${index + 1}.`}</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-24\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-weight\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Maximum Weight</div>\r\n                                                    <div class=\"content-text-secondary\">{`${trailer.MaximumWeight} GVM`}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-cog\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Trailer Type</div>\r\n                                                    <div class=\"content-text-secondary\">{trailer.Type}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TrailerContainer;","import React, { Component } from \"react\";\r\nimport TrailerContainer from \"./TrailerContainer\";\r\nimport SearchingContainer from \"../searching/SearchingContainer\";\r\n\r\nclass TrailersDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const trailers = this.props.Trailers;\r\n\r\n        let Trailers = (trailers.length > 0) ?\r\n            <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                {trailers.map((trailer, index) => {\r\n                    return <TrailerContainer key={index} Index={index} Trailer={trailer} />;\r\n                })}\r\n            </ol> : null;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`trailers-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h2\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Trailers</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {(trailers.length === 0) ?\r\n                                <SearchingContainer Searching={false}\r\n                                    SearchingFor=\"trailers\" /> : Trailers}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TrailersDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport SearchingContainer from \"../searching/SearchingContainer\";\r\nimport TrailersDialog from \"./TrailersDialog\";\r\nimport { getPublicData } from \"../../components/shared/UserFunctions\";\r\n\r\nclass TruckContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TruckProfile: null,\r\n            Searching: false\r\n        }\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n   onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Get: \"TruckProfile\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Truck profile found.\") {\r\n\r\n                    if (this.props.OnTrailersFound) {\r\n                        this.props.OnTrailersFound(response.TruckProfile.Trailers);\r\n                    }\r\n\r\n                    this.setState({\r\n                        TruckProfile: response.TruckProfile,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TruckProfile: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            let request = {\r\n                Get: \"TruckProfile\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Truck profile found.\") {\r\n\r\n                    if (this.props.OnTrailersFound) {\r\n                        this.props.OnTrailersFound(response.TruckProfile.Trailers);\r\n                    }\r\n\r\n                    this.setState({\r\n                        TruckProfile: response.TruckProfile\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TruckProfile: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Searching || !this.state.TruckProfile) {\r\n            return <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor=\"truck\" />;\r\n        }\r\n        else {\r\n            const truckProfile = this.state.TruckProfile;\r\n            const truck = truckProfile.Truck;\r\n            const dialogID = UUID().substring(0, 7).toUpperCase();\r\n\r\n            return <section>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={truck.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>\r\n                                    {`${truck.Brand} ${truck.Model}`}\r\n                                </div>\r\n                                <div className=\"type-sh3\">\r\n                                    <span className=\"fas fa-truck\" style={{ color: \"#606060\" }}></span>   {truck.Type}\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-list-ol\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Plate Number</div>\r\n                                                    <div class=\"content-text-secondary\">{truck.PlateNumber}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-user\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Owner</div>\r\n                                                    <div class=\"content-text-secondary\">{truck.Owner}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-calendar-day\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Production Year</div>\r\n                                                    <div class=\"content-text-secondary\">{truck.ProductionYear}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"entity-list\">\r\n                                            <div class=\"entity-list-item\">\r\n                                                <div class=\"item-icon\">\r\n                                                    <span class=\"fas fa-weight\"></span>\r\n                                                </div>\r\n                                                <div class=\"item-content-primary\">\r\n                                                    <div class=\"content-text-primary\">Maximum Weight</div>\r\n                                                    <div class=\"content-text-secondary\">{`${truck.MaximumWeight} GVW`}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {this.props.TabView ?\r\n                                    null :\r\n                                    <button type=\"button\" className=\"btn btn-default\"\r\n                                        style={{ minWidth: \"152px\" }} data-toggle=\"modal\"\r\n                                        data-target={`#trailers-dialog-${dialogID}`}>Trailers</button>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.props.TabView ?\r\n                    null :\r\n                    <TrailersDialog Trailers={truckProfile.Trailers} DialogID={dialogID} />}\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default TruckContainer;","import React, { Component } from \"react\";\r\nimport { Required } from \"../../../../../../styles/MiscellaneousStyles.js\";\r\nimport Preloader from \"../../../../../../controls/Preloader.js\";\r\nimport { addTraderRequest } from \"../../../../TraderFunctions.js\";\r\n\r\nclass SendTraderRequestDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            CargoType: \"\",\r\n            CargoWeight: 0,          \r\n            LoadingDate: new Date(),\r\n            LoadingTime: new Date().getTime(),\r\n            AcceptedDelay: 0,\r\n            EntryExit: 0,\r\n\r\n            ValidCargoType: false,\r\n            ValidCargoWeight: false,\r\n            ValidLoadingDate: false,\r\n            ValidLoadingTime: false,\r\n            ValidAcceptedDelay: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                CargoType: \"\",\r\n                CargoWeight: \"\",\r\n                LoadingDate: \"\",\r\n                LoadingTime: \"\",\r\n                AcceptedDelay: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCargoType = this.state.ValidCargoType;\r\n        let ValidCargoWeight = this.state.ValidCargoWeight;\r\n        let ValidLoadingDate = this.state.ValidLoadingDate;\r\n        let ValidLoadingTime = this.state.ValidLoadingTime;\r\n        let ValidAcceptedDelay = this.state.ValidAcceptedDelay;\r\n\r\n        switch (field) {\r\n            case \"CargoType\":\r\n                ValidCargoType = (value !== \"\");\r\n                Errors.CargoType = ValidCargoType ? \"\" : \"Cargo type is required.\";\r\n                break;\r\n            case \"CargoWeight\":\r\n                ValidCargoWeight = (value !== \"\");\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight is required.\"; \r\n\r\n                if (Errors.CargoWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCargoWeight = (value >= 100);\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight must be greater than 100 lbs.\";\r\n                break;\r\n            case \"LoadingDate\":\r\n                ValidLoadingDate = (value !== \"\");\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date is required.\";\r\n\r\n                if (Errors.LoadingDate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidLoadingDate = (new Date(value) >= new Date());\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date must be later than yesterday.\";\r\n                break;\r\n            case \"LoadingTime\":\r\n                ValidLoadingTime = (value !== \"\");\r\n                Errors.LoadingTime = ValidLoadingTime ? \"\" : \"Loading time is required.\";\r\n                break;\r\n            case \"AcceptedDelay\":\r\n                ValidAcceptedDelay = (value !== \"\");\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay is required.\";\r\n\r\n                if (Errors.AcceptedDelay !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidAcceptedDelay = (value >= 0 && value <= 48);\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay can be in the range of 0 to 48 hours.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCargoType: ValidCargoType,\r\n            ValidCargoWeight: ValidCargoWeight,\r\n            ValidLoadingDate: ValidLoadingDate,\r\n            ValidLoadingTime: ValidLoadingTime,\r\n            ValidAcceptedDelay: ValidAcceptedDelay\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidCargoType &&\r\n                        this.state.ValidCargoWeight &&\r\n                        this.state.ValidLoadingDate &&\r\n                        this.state.ValidLoadingTime &&\r\n                        this.state.AcceptedDelay\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (this.props.IsRequestSent()) {\r\n            return;\r\n        }\r\n\r\n        const newTraderRequest = {\r\n            Token: localStorage.Token,\r\n            JobRequestID: this.props.JobRequest.JobRequestID,\r\n            CargoType: this.state.CargoType,\r\n            CargoWeight: this.state.CargoWeight,\r\n            LoadingDate: this.state.LoadingDate,\r\n            LoadingTime: this.state.LoadingTime,\r\n            EntryExit: this.state.EntryExit,\r\n            AcceptedDelay: this.state.AcceptedDelay\r\n        };\r\n\r\n        console.log(\"Going to add trader request...\");\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await addTraderRequest(newTraderRequest).then(response => {\r\n            if (response.Message === \"Trader request is added.\") {\r\n\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n\r\n                this.cancelButton.click();\r\n                this.props.OnOK(response.TraderRequest);\r\n            }\r\n            else {\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`send-trader-reqeust-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"type-h3 color-default p-t-xxs\">Send Request</div>\r\n                                        <div className=\"row p-t-xxs\">\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Cargo Type</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"CargoType\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.CargoType} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.CargoType}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Cargo Weight (lbs)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"CargoWeight\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.CargoWeight} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.CargoWeight}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Accepted Delay (Hours)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"AcceptedDelay\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.AcceptedDelay} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.AcceptedDelay}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Date</label>\r\n                                                    <span className=\"text-danger\" style={Required}>*</span>\r\n                                                    <input type=\"date\" name=\"LoadingDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LoadingDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LoadingDate}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Time</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"time\" name=\"LoadingTime\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.LoadingTime} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.LoadingTime}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"checkbox\">\r\n                                                        <label className=\"control-label\">\r\n                                                            <input type=\"checkbox\" name=\"EntryExit\"\r\n                                                                value={this.state.EntryExit} onChange={() => {\r\n                                                                    this.state.EntryExit = this.state.EntryExit ? 0 : 1;\r\n                                                                }}></input>\r\n                                                            <span>Entry/Exit</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Send\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default SendTraderRequestDialog;","import React, { Component } from \"react\";\r\nimport TraderRequestContainer from \"../../../../../../containers/traderRequest/TraderRequestContainer\";\r\n\r\nclass TraderRequestDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`trader-request-dialog-${this.props.Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <TraderRequestContainer TraderRequest={this.props.TraderRequest} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderRequestDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport Strings from \"../../../../../../res/strings\";\r\nimport { addOnGoingJobFromJobRequest } from \"../../../../TraderFunctions\";\r\n\r\nclass AssignJobDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false\r\n        };\r\n\r\n        this.onAssignNow = this.onAssignNow.bind(this);\r\n    }\r\n\r\n    onAssignNow = async () => {\r\n        if (!this.props.CanAssign()) {\r\n            return;\r\n        }\r\n\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newOnGoingJob = {\r\n            Token: localStorage.Token,\r\n            TraderRequestID: this.props.TraderRequestID\r\n        };\r\n\r\n        console.log(\"Going to add on-going job...\");\r\n\r\n        await addOnGoingJobFromJobRequest(newOnGoingJob).then(async response => {\r\n            if (response.Message === \"On-going job is added.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.cancelButton.click();\r\n                await this.props.OnOK();\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n\r\n            \r\n        });\r\n    };\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const driver = this.props.Driver;\r\n        const price = this.props.Price;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`assign-from-request-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div class=\"jumbotron\">\r\n                                <div class=\"container\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-24\">\r\n                                            <img alt=\"new.png\" src=\"./images/new.png\" height=\"80\" />\r\n                                            <div class=\"type-h4\">You are About to Start a New Job with <span class=\"color-default\">{`${driver.FirstName} ${driver.LastName}`}</span>.</div>\r\n                                            <div class=\"type-sh3\">Your Payment Amount is <span class=\"color-default\">{`${price} ${Strings.SAUDI_RIYAL}`}</span>.</div>\r\n                                            <p><span class=\"color-default\">Important Note:</span> After this step, you'll be engaged in an On-Going Job. You have to pay <span class=\"color-default\">{`$${price}`}</span> after the completion of your job from the <span class=\"color-default\">Payments</span> section.</p>\r\n                                            <div class=\"text-right\">\r\n                                                <button class=\"btn btn-primary\" onClick={this.onAssignNow}>Assign Now</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AssignJobDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport DriverContainer from \"../../../../../../containers/driver/DriverContainer\";\r\nimport TruckContainer from \"../../../../../../containers/truck/TruckContainer\";\r\nimport JobRequestContainer from \"../../../../../../containers/jobReqeust/JobRequestContainer\";\r\nimport SendTraderRequestDialog from \"./SendTraderRequestDialog\";\r\nimport TraderRequestDialog from \"./TraderRequestDialog\";\r\nimport AssignJobDialog from \"./AssignJobDialog\";\r\nimport Strings from \"../../../../../../res/strings\";\r\nimport { deleteTraderRequest } from \"../../../../TraderFunctions\";\r\n\r\nclass JobRequestPostListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Preloader: null\r\n        };\r\n\r\n        this.onCancelRequest = this.onCancelRequest.bind(this);\r\n    }\r\n\r\n    onCancelRequest = async jobRequest => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedTraderRequest = {\r\n            Token: localStorage.Token,\r\n            JobRequestID: jobRequest.JobRequestID\r\n        };\r\n\r\n        console.log(`Going to delete Trader request...`);\r\n\r\n        await deleteTraderRequest(discardedTraderRequest).then(response => {\r\n            if (response.Message === \"Trader request is deleted.\") {\r\n                this.props.OnRequestUpdated(jobRequest, null);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const jobRequest = this.props.JobRequestPost.JobRequest;\r\n        const driver = this.props.JobRequestPost.Driver;\r\n        const driverOnJob = this.props.JobRequestPost.DriverOnJob;\r\n        const traderOnJob = this.props.TraderOnJob;\r\n        const traderRequest = this.props.JobRequestPost.TraderRequest;\r\n        const canAssign = !driverOnJob && !traderOnJob;\r\n\r\n        const assignJobIndex = UUID();\r\n\r\n        let Badge;\r\n\r\n        if (traderRequest) {\r\n            Badge = traderRequest.Selected ?\r\n                <span class=\"badge back-color-golden m-l-xxs\">REQUEST ACCEPTED</span> :\r\n                <span class=\"badge back-color-default m-l-xxs\">REQUEST SENT</span>;\r\n        }\r\n        else {\r\n            Badge = null;\r\n        }\r\n\r\n        return <section>\r\n            <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                <div className=\"jumbotron p-xxxs back-color-gray\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"type-h5 color-default p-t-n\">\r\n                                {`${index + 1}.`}\r\n                                {Badge}\r\n                            </div>\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-user\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Posted By</div>\r\n                                            <div className=\"content-text-secondary\">{`${driver.FirstName} ${driver.LastName}`}\r\n                                                {driverOnJob ?\r\n                                                    <span class=\"badge back-color-danger m-l-xxs\">ON JOB</span> :\r\n                                                    null}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-clock\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Posted On</div>\r\n                                            <div className=\"content-text-secondary\">{new Date(jobRequest.TimeCreated).toDateString()}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-tag\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Price</div>\r\n                                            <div className=\"content-text-secondary\">{`${jobRequest.Price} ${Strings.SAUDI_RIYAL}`}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas  fa-map-marker-alt\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">From </div>\r\n                                            <div className=\"content-text-secondary\">{jobRequest.LoadingPlace}</div>\r\n                                            <div className=\"content-text-primary\">To</div>\r\n                                            <div className=\"content-text-secondary\">{jobRequest.UnloadingPlace}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"text-right\">\r\n                                {traderRequest ?\r\n                                    <section>\r\n                                        <button className=\"btn btn-secondary\"\r\n                                            onClick={async () => { await this.onCancelRequest(jobRequest); }}>Cancel Request</button>\r\n                                        <button className=\"btn btn-primary\"\r\n                                            data-toggle=\"modal\"\r\n                                            data-target={`#trader-request-dialog-${index}`}>View Request</button>\r\n                                        {traderRequest && traderRequest.Selected ?\r\n                                            <button className=\"btn btn-primary\"\r\n                                                disabled={!canAssign}\r\n                                                data-toggle=\"modal\"\r\n                                                data-target={`#assign-from-request-dialog-${assignJobIndex}`}>Assign Job</button> :\r\n                                            null}\r\n                                    </section> :\r\n                                    <button className=\"btn btn-primary\"\r\n                                        data-toggle=\"modal\"\r\n                                        data-target={`#send-trader-reqeust-dialog-${index}`}>Send Request</button>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {traderRequest ? \r\n                    <TraderRequestDialog Index={index} TraderRequest={traderRequest} /> : \r\n                    null}\r\n\r\n                {traderRequest && traderRequest.Selected ? \r\n                    <AssignJobDialog Index={assignJobIndex}\r\n                        TraderRequestID={traderRequest.TraderRequestID}\r\n                        Driver={driver}\r\n                        Price={jobRequest.Price}\r\n                        CanAssign={() => { return canAssign; }}\r\n                        OnOK={this.props.OnJobAssigned} /> : \r\n                    null}\r\n\r\n                <div className=\"back-color-gray\" data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#job-request-post-${index}`}>\r\n                    <div className=\"type-h4 color-default text-right p-xxxs\">\r\n                        {\"   More Details\"} <i className=\"fas fa-ellipsis-v\"></i>\r\n                        <i class=\"glyph glyph-add\"></i>\r\n                        <i class=\"glyph glyph-remove\"></i>\r\n                    </div>\r\n                </div>\r\n                <div className=\"collapse\" id={`job-request-post-${index}`}>\r\n                    <ul className=\"nav nav-tabs\" role=\"tablist\"\r\n                        style={{\r\n                            padding: \"10px\",\r\n                            backgroundColor: \"#EFEFEF\",\r\n                            width: \"100%\",\r\n                            margin: \"0px\"\r\n                        }}>\r\n                        <li role=\"presentation\" className=\"active\"><a href={`#job-request-${index}`} aria-controls={`job-request-${index}`} role=\"tab\" data-toggle=\"tab\">Job Request</a></li>\r\n                        <li role=\"presentation\">\r\n                            <a href={`#driver-${index}`} aria-controls={`driver-${index}`} role=\"tab\" data-toggle=\"tab\"\r\n                                onClick={async () => { await this.RefreshDriverContainer(); }}>Driver</a>\r\n                        </li>\r\n                        <li role=\"presentation\">\r\n                            <a href={`#truck-${index}`} aria-controls={`truck-${index}`} role=\"tab\" data-toggle=\"tab\"\r\n                                onClick={async () => { await this.RefreshTruckContainer(); }}>Truck</a>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"tab-content\">\r\n                        <div role=\"tabpanel\" className=\"tab-pane active\" id={`job-request-${index}`}>\r\n                            <JobRequestContainer JobRequest={jobRequest} />\r\n                        </div>\r\n                        <div role=\"tabpanel\" className=\"tab-pane\" id={`driver-${index}`}>\r\n                            <DriverContainer Refresh={refresh => { this.RefreshDriverContainer = refresh; }} DriverID={jobRequest.DriverID} />\r\n                        </div>\r\n                        <div role=\"tabpanel\" className=\"tab-pane\" id={`truck-${index}`}>\r\n                            <TruckContainer Refresh={refresh => { this.RefreshTruckContainer = refresh; }} DriverID={jobRequest.DriverID} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <SendTraderRequestDialog\r\n                    DialogID={index}\r\n                    JobRequest={jobRequest}\r\n                    IsRequestSent={() => { return traderRequest ? true : false; }}\r\n                    OnOK={traderRequest => { this.props.OnRequestUpdated(jobRequest, traderRequest); }} />\r\n            </li>\r\n            {this.state.Preloader}\r\n        </section>;     \r\n    }\r\n};\r\n\r\nexport default JobRequestPostListItem;","import React, { Component } from \"react\";\r\nimport ProgressBar from \"../../../../../../controls/ProgressBar\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\nimport { getData } from \"../../../../TraderFunctions\";\r\nimport JobRequestPostListItem from \"./JobRequestPostListItem\";\r\n\r\nclass JobRequestPostsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobRequestPosts: [],\r\n            TraderOnJob: false,\r\n            Searching: true,\r\n            Refreshing: false,\r\n            Preloader: null,\r\n            Message: null,\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        this.props.Refresh(this.refresh);\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobRequestPosts\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job request posts found.\") {\r\n                    this.setState({\r\n                        JobRequestPosts: response.JobRequestPosts,\r\n                        TraderOnJob: response.TraderOnJob,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobRequestPosts: [],\r\n                        TraderOnJob: false,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Refreshing: true\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobRequestPosts\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job request posts found.\") {\r\n                    this.setState({\r\n                        JobRequestPosts: response.JobRequestPosts,\r\n                        TraderOnJob: response.TraderOnJob,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobRequestPosts: [],\r\n                        TraderOnJob: false,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Searching) {\r\n            return <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\", width: \"100%\", height: \"100vh\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"job_requests.png\" src=\"./images/job_requests.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div className=\"col-md-12 col-md-pull-12\">\r\n                                <div className=\"type-h3\">Job Requests</div>\r\n                                <p>Job requests from Drivers are dispalyed here.</p>\r\n                                <div class=\"type-sh3\" style={{ color: \"#008575\" }}>Searhcing</div>\r\n                                <ProgressBar />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n        else if (this.state.JobRequestPosts.length === 0) {\r\n            return <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\", width: \"100%\", height: \"100vh\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    alt=\"job_requests.png\" src=\"./images/job_requests.png\" data-source-index=\"2\" />\r\n                            </div>\r\n                            <div className=\"col-md-12 col-md-pull-12\">\r\n                                <div className=\"type-h3\">Job Requests</div>\r\n                                <div className=\"type-sh3\">No Job Requests Found...</div>\r\n                                <p>Job requests from Drivers are dispalyed here.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n        else {\r\n            return <section>\r\n                {this.state.TraderOnJob ?\r\n                    <div class=\"alert alert-danger m-n\">\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xs-24\">\r\n                                    <p><span className=\"fas fa-exclamation-circle m-r-xxxs\"></span>While you are engaged in an On-Going Job, you cannot assign more jobs to drivers. View details in <span className=\"color-default\">On-Going Job</span> tab.</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div> :\r\n                    null}\r\n           <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Job Requests\r\n                    {this.state.Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n                </div>\r\n                <ol className=\"list-items\" style={{ marginTop: \"0px\" }}>\r\n                    {this.state.JobRequestPosts.map((jobRequestPost, index) => {\r\n                        return <JobRequestPostListItem key={index} Index={index}\r\n                            JobRequestPost={jobRequestPost}\r\n                            OnRequestUpdated={(jobRequest, traderRequest) => {\r\n                                let jobRequestPosts = this.state.JobRequestPosts;\r\n\r\n                                for (let jobRequestPost of jobRequestPosts) {\r\n                                    if (jobRequestPost.JobRequest.JobRequestID === jobRequest.JobRequestID) {\r\n                                        jobRequestPost.TraderRequest = traderRequest;\r\n                                        break;\r\n                                    }\r\n                                }\r\n\r\n                                this.setState({\r\n                                    JobRequestPosts: jobRequestPosts\r\n                                });\r\n                            }}\r\n                            TraderOnJob={this.state.TraderOnJob}\r\n                            OnJobAssigned={this.refresh} />;\r\n                    })} \r\n                </ol>\r\n       </section>;\r\n        }      \r\n    }\r\n};\r\n\r\nexport default JobRequestPostsList;","import React, { Component } from \"react\";\r\nimport JobRequestPostsList from \"./JobRequestPostsList\";\r\n\r\nclass List extends Component {\r\n   render() {\r\n       return <section>\r\n           <JobRequestPostsList Refresh={this.props.Refresh} />\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default List;","import React, { useState } from \"react\";\r\nimport { withGoogleMap, withScriptjs, GoogleMap, Marker, InfoWindow } from \"react-google-maps\";\r\nimport Strings from \"../../../../../../res/strings\";\r\n\r\nconst JobRequestWindow = props => {\r\n    const { JobRequest } = props;\r\n\r\n    return <section>\r\n        <div className=\"type-h6 color-default p-t-n\">Job Request</div>\r\n        <div className=\"type-sh9\">\r\n            <span className=\"fas fa-tag color-default m-r-xxxs\"></span>\r\n            <span className=\"color-default\">PRICE: </span>{`${JobRequest.Price} ${Strings.SAUDI_RIYAL}`}</div>\r\n        <div className=\"type-sh9\">\r\n            <span className=\"fas fa-map-marker-alt color-default m-r-xxxs\"></span>\r\n            <span className=\"color-default\">FROM: </span>{JobRequest.LoadingPlace}</div>\r\n        <div className=\"type-sh9\">\r\n            <span className=\"fas fa-map-marker-alt color-default m-r-xxxs\"></span>\r\n            <span className=\"color-default\">TO: </span>{JobRequest.UnloadingPlace}</div>\r\n    </section>;\r\n};\r\n\r\nconst Map = props => {\r\n    const [SelectedJobRequest, SetSelectedJobRequest] = useState(null);\r\n\r\n    const {\r\n        Place,\r\n        JobRequestPosts\r\n    } = props;\r\n\r\n    const lat = Place ? Place.Lat : 33.784310;\r\n    const lng = Place ? Place.Lng : 72.738780;\r\n\r\n    return <GoogleMap\r\n        defaultZoom={14}\r\n        defaultCenter={{ lat: 33.784310, lng: 72.738780 }}\r\n        center={{ lat: lat, lng: lng }}\r\n        options={{ streetViewControl: false }}>\r\n\r\n        {JobRequestPosts.map((jobRequestPost, index) => {\r\n            const jobRequest = jobRequestPost.JobRequest;\r\n\r\n            return <Marker key={index} position={{ lat: jobRequest.LoadingLat, lng: jobRequest.LoadingLng }}\r\n                icon={{\r\n                    url: \"./images/marker.svg\",\r\n                    scaledSize: new window.google.maps.Size(40, 40)\r\n                }}\r\n                onClick={() => {\r\n                    SetSelectedJobRequest(jobRequest);\r\n                }} />;\r\n        })}\r\n        \r\n\r\n        {SelectedJobRequest && <InfoWindow position={{ lat: SelectedJobRequest.LoadingLat, lng: SelectedJobRequest.LoadingLng }}\r\n            onCloseClick={() => {\r\n                SetSelectedJobRequest(null);\r\n            }}>\r\n            <JobRequestWindow JobRequest={SelectedJobRequest} />\r\n        </InfoWindow>}\r\n    </GoogleMap>;\r\n}\r\n\r\nconst MapWrapped = withScriptjs(withGoogleMap(Map));\r\n\r\nconst JobRequestsGoogleMap = props => {\r\n    return <div style={{ width: \"100%\", height: \"100vh\" }}>\r\n        <MapWrapped\r\n            googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${Strings.GOOGLE_API_KEY}`}\r\n            loadingElement={<div style={{ height: `100%` }} />}\r\n            containerElement={<div style={{ height: `100%` }} />}\r\n            mapElement={<div style={{ height: `100%` }} />}\r\n            Place={props.Place}\r\n            JobRequestPosts={props.JobRequestPosts} />\r\n    </div>;\r\n}\r\n\r\nexport default JobRequestsGoogleMap;","import React, { Component } from \"react\";\r\nimport PlaceInput from \"../../../../../../controls/PlaceInput\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport JobRequestsGoogleMap from \"./JobRequestsGoogleMap\";\r\nimport { getData } from \"../../../../TraderFunctions\";\r\n\r\nclass JobRequestsMap extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobRequestPosts: [],\r\n            Place: null,\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobRequestPosts\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job request posts found.\") {\r\n                    this.setState({\r\n                        JobRequestPosts: response.JobRequestPosts,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobRequestPosts: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Refreshing: true\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobRequestPosts\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job request posts found.\") {\r\n                    this.setState({\r\n                        JobRequestPosts: response.JobRequestPosts,\r\n                        TraderOnJob: response.TraderOnJob,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobRequestPosts: [],\r\n                        TraderOnJob: false,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            JobRequestPosts,\r\n            Place,\r\n            Searching\r\n        } = this.state;\r\n\r\n        return <section>\r\n\r\n            {JobRequestPosts.length === 0 ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"job requests\" /> :\r\n                <section>\r\n                    <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                        <PlaceInput Address=\"\"\r\n                            OnPlaceSelected={place => {\r\n                                this.setState({\r\n                                    Place: place,\r\n                                });\r\n                            }} />\r\n                    </div>\r\n                    <JobRequestsGoogleMap Place={Place} JobRequestPosts={JobRequestPosts} />\r\n                </section>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobRequestsMap;","import React, { Component } from \"react\";\r\nimport JobRequestsMap from \"./JobRequestsMap\";\r\n\r\nclass Map extends Component {\r\n    render() {\r\n        return <section>\r\n            <JobRequestsMap Refresh={this.props.Refresh} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Map;","import React, { Component } from \"react\";\r\nimport List from \"./list/List\";\r\nimport Map from \"./map/Map\";\r\n\r\nclass JobRequests extends Component {\r\n    render() {\r\n        return <section>\r\n            <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#job-requests-list\" aria-controls=\"job-requests-list\" role=\"tab\" data-toggle=\"tab\">List</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#job-requests-map\" aria-controls=\"job-requests-map\" role=\"tab\" data-toggle=\"tab\">Map</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div className=\"tab-content\">\r\n                <div role=\"tabpanel\" className=\"tab-pane active\" id=\"job-requests-list\">\r\n                    <List Refresh={this.props.Refresh} />\r\n                </div>\r\n                <div role=\"tabpanel\" className=\"tab-pane\" id=\"job-requests-map\">\r\n                    <Map Refresh={refresh => { this.RefreshMap = refresh; }} />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobRequests;","/// <reference path=\".js\" />\r\nimport React, { Component } from \"react\";\r\nimport { getPublicData } from \"../../../components/shared/UserFunctions\";\r\nimport SearchingContainer from \"../../searching/SearchingContainer\"; \r\nimport DrivingLicenceContainer from \"./DrivingLicenceContainer\";\r\nimport EntryExitCardContianer from \"./EntryExitCardContainer\";\r\nimport IdentityCardContainer from \"./IdentityCardContainer\";\r\n\r\nclass DocumentsContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DriverDocuments: null,\r\n            Searching: false,\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Get: \"DriverDocuments\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Driver documents found.\") {\r\n                    this.setState({\r\n                        DriverDocuments: response.DriverDocuments,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DriverDocuments: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            let request = {\r\n                Get: \"DriverDocuments\",\r\n                Params: {\r\n                    DriverID: this.props.DriverID\r\n                }\r\n            };\r\n\r\n            await getPublicData(request).then(response => {\r\n                if (response.Message === \"Driver documents found.\") {\r\n                    this.setState({\r\n                        DriverDocuments: response.DriverDocuments\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DriverDocuments: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const driverDocuments = this.state.DriverDocuments;\r\n\r\n        return (this.state.Searching || !driverDocuments) ?\r\n            <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor=\"documents\" /> :\r\n            <section>\r\n                <ol className=\"list-items m-n\">\r\n                    <IdentityCardContainer IdentityCard={driverDocuments.IdentityCard} />\r\n                    <DrivingLicenceContainer DrivingLicence={driverDocuments.DrivingLicence} />\r\n                    <EntryExitCardContianer EntryExitCard={driverDocuments.EntryExitCard} />\r\n                </ol>\r\n            </section>;\r\n    }\r\n};\r\n\r\nexport default DocumentsContainer;","import React, { Component } from \"react\";\r\nimport DriverContainer from \"../../../../../containers/driver/DriverContainer\";\r\nimport DocumentsContainer from \"../../../../../containers/driver/documents/DocumentsContainer\";\r\n\r\nclass ProfileDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`profile-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <section>\r\n                                <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                                    <li role=\"presentation\" className=\"active\">\r\n                                        <a href={`#driver-tab-${index}`} aria-controls={`driver-tab-${index}`} role=\"tab\" data-toggle=\"tab\">Driver</a>\r\n                                    </li>\r\n                                    <li role=\"presentation\">\r\n                                        <a href={`#documents-tab-${index}`} aria-controls={`documents-tab-${index}`} role=\"tab\" data-toggle=\"tab\">Documents</a>\r\n                                    </li>\r\n                                </ul>\r\n                                <div className=\"tab-content\">\r\n                                    <div role=\"tabpanel\" className=\"tab-pane active\" id={`driver-tab-${index}`}>\r\n                                        <DriverContainer Refresh={this.props.RefreshDriver} DriverID={this.props.DriverID} TabView={true} />\r\n                                    </div>\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id={`documents-tab-${index}`}>\r\n                                        <DocumentsContainer Refresh={this.props.RefreshDocuments} DriverID={this.props.DriverID} />\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ProfileDialog;","import React, { Component } from \"react\";\r\nimport TrailerContainer from \"./TrailerContainer\";\r\nimport SearchingContainer from \"../searching/SearchingContainer\";\r\n\r\nclass TrailersDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const trailers = this.props.Trailers;\r\n\r\n        return (trailers.length === 0) ?\r\n            <SearchingContainer Searching={false}\r\n                SearchingFor=\"trailers\" /> : \r\n            <section>\r\n                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {trailers.map((trailer, index) => {\r\n                        return <TrailerContainer key={index} Index={index} Trailer={trailer} />;\r\n                    })}\r\n                </ol>\r\n            </section>;\r\n    }\r\n};\r\n\r\nexport default TrailersDialog;","import React, { Component } from \"react\";\r\nimport TruckContainer from \"../../../../../containers/truck/TruckContainer\";\r\nimport TrailersContainer from \"../../../../../containers/truck/TrailersContainer\";\r\n\r\nclass TruckDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Trailers: []\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`truck-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <section>\r\n                                <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                                    <li role=\"presentation\" className=\"active\">\r\n                                        <a href={`#truck-tab-${index}`} aria-controls={`truck-tab-${index}`} role=\"tab\" data-toggle=\"tab\">Truck</a>\r\n                                    </li>\r\n                                    <li role=\"presentation\">\r\n                                        <a href={`#trailers-tab-${index}`} aria-controls={`trailers-tab-${index}`} role=\"tab\" data-toggle=\"tab\">Trailers</a>\r\n                                    </li>\r\n                                </ul>\r\n                                <div className=\"tab-content\">\r\n                                    <div role=\"tabpanel\" className=\"tab-pane active\" id={`truck-tab-${index}`}>\r\n                                        <TruckContainer Refresh={this.props.Refresh}\r\n                                            DriverID={this.props.DriverID}\r\n                                            OnTrailersFound={trailers => {\r\n                                                this.setState({\r\n                                                    Trailers: trailers\r\n                                                });\r\n                                            }}\r\n                                            TabView={true} />\r\n                                    </div>\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id={`trailers-tab-${index}`}>\r\n                                        <TrailersContainer Trailers={this.state.Trailers} />\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TruckDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { addOnGoingJobFromJobOffer } from \"../../../TraderFunctions\";\r\n\r\nclass ProfileDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false\r\n        };\r\n\r\n        this.onAssignNow = this.onAssignNow.bind(this);\r\n    }\r\n\r\n    onAssignNow = async () => {\r\n        if (!this.props.CanAssign()) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newOnGoingJob = {\r\n            Token: localStorage.Token,\r\n            DriverRequestID: this.props.DriverRequestID\r\n        };\r\n\r\n        console.log(\"Going to add on-going job...\");\r\n\r\n        await addOnGoingJobFromJobOffer(newOnGoingJob).then(response => {\r\n            if (response.Message === \"On-going job is added.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.cancelButton.click();\r\n\r\n                this.props.OnOK();\r\n                return;\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n\r\n            \r\n        });\r\n    };\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const driver = this.props.Driver;\r\n        const price = this.props.Price;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`assign-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div class=\"jumbotron\">\r\n                                <div class=\"container\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-24\">\r\n                                            <img alt=\"new.png\" src=\"./images/new.png\" height=\"100\" />\r\n                                            <div class=\"type-h4\">You are About to Start a New Job with <span class=\"color-default\">{`${driver.FirstName} ${driver.LastName}`}</span>.</div>\r\n                                            <div class=\"type-sh3\">Your Payment Amount is <span class=\"color-default\">{`$${price}`}</span>.</div>\r\n                                            <p><span class=\"color-default\">Important Note:</span> After this step, you'll be engaged in an On-Going Job. You have to pay <span class=\"color-default\">{`$${price}`}</span> after the completion of your job from the <span class=\"color-default\">Payments</span> section.</p>\r\n                                            <div class=\"text-right\">\r\n                                                <button class=\"btn btn-primary\" onClick={this.onAssignNow}>Assign Now</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ProfileDialog;","import React, { Component } from \"react\";\r\nimport UUID from \"uuid-v4\";\r\nimport ProfileDialog from \"./ProfileDialog\";\r\nimport TruckDialog from \"./TruckDialog\";\r\nimport AssignJobDialog from \"./AssignJobDialog\";\r\nimport Strings from \"../../../../../res/strings\";\r\n\r\nclass DriverRequestRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const price = this.props.Price;\r\n        const driverRequestPackage = this.props.DriverRequestPackage;\r\n        const driverRequest = driverRequestPackage.DriverRequest;\r\n        const driver = driverRequestPackage.Driver;\r\n        const driverOnJob = driverRequestPackage.DriverOnJob;\r\n        const traderOnJob = driverRequestPackage.TraderOnJob;\r\n        const canAssign = !(driverOnJob || traderOnJob);\r\n\r\n        const profileIndex = UUID();\r\n        const truckIndex = UUID();\r\n        const assignJobIndex = UUID();\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{index + 1}</strong>\r\n            </td>\r\n\r\n            <td>\r\n                {`${driver.FirstName} ${driver.LastName}`}\r\n                {index === 0 ? <span class=\"badge back-color-golden m-l-xxxs\">NEW</span> : null}\r\n                {driverOnJob ? <span class=\"badge back-color-danger m-l-xxxs\">ON JOB</span> : null}\r\n            </td>\r\n\r\n            <td>{new Date(driverRequest.Created).toDateString()}</td>\r\n\r\n            {driverRequest.Price ? <td>{`${driverRequest.Price} ${Strings.SAUDI_RIYAL}`}</td> : null}\r\n\r\n            <td class=\"text-right\">\r\n                <div>\r\n                    <button className=\"btn btn-secondary m-xxxs\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#profile-dialog-${profileIndex}`}\r\n                        onClick={async () => {\r\n                            await this.RefreshDriverContainer();\r\n                            await this.RefreshDocumentsContainer();\r\n                        }}>Profile</button>\r\n\r\n                    <button className=\"btn btn-secondary m-xxxs\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#truck-dialog-${truckIndex}`}\r\n                        onClick={async () => {\r\n                            await this.RefreshTruckContainer();\r\n                        }}>Truck</button>\r\n\r\n                    <button className=\"btn btn-primary m-xxxs\"\r\n                        disabled={!canAssign}\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#assign-dialog-${assignJobIndex}`}>Assign Job</button>\r\n\r\n                    <ProfileDialog Index={profileIndex}\r\n                        DriverID={driverRequest.DriverID}\r\n                        RefreshDriver={refresh => { this.RefreshDriverContainer = refresh; }}\r\n                        RefreshDocuments={refresh => { this.RefreshDocumentsContainer = refresh; }} />\r\n\r\n                    <TruckDialog Index={truckIndex}\r\n                        DriverID={driverRequest.DriverID}\r\n                        Refresh={refresh => { this.RefreshTruckContainer = refresh; }} />\r\n\r\n                    <AssignJobDialog Index={assignJobIndex}\r\n                        DriverRequestID={driverRequest.DriverRequestID}\r\n                        Driver={driver}\r\n                        Price={driverRequest.Price ? driverRequest.Price : price}\r\n                        CanAssign={() => { return canAssign; }}\r\n                        OnOK={this.props.OnJobAssigned} />\r\n                </div>\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default DriverRequestRow;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport DriverRequestRow from \"./DriverRequestRow\";\r\nimport { getData } from \"../../../TraderFunctions\";\r\n\r\nclass DriverRequestsTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DriverRequestPackages: [],\r\n            Searching: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DriverRequestPackages\",\r\n                Params: {\r\n                    JobOfferID: this.props.JobOfferID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver request packages found.\") {\r\n                    this.props.OnRequestsFound(response.DriverRequestPackages.length);\r\n                    this.setState({\r\n                        DriverRequestPackages: response.DriverRequestPackages,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.props.OnRequestsFound(0);\r\n                    this.setState({\r\n                        DriverRequestPackages: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DriverRequests\",\r\n                Params: {\r\n                    JobOfferID: this.props.JobOfferID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver requests found.\") {\r\n                    this.setState({\r\n                        DriverRequests: response.DriverRequests\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DriverRequests: []\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const jobOfferType = this.props.JobOfferType;\r\n\r\n        if (this.state.Searching || this.state.DriverRequestPackages.length === 0) {\r\n            return <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor={jobOfferType === \"Fixed-Price\" ? \"requests\" : \"bids\"} />;\r\n        }\r\n        else {\r\n            const driverRequestPackages = this.state.DriverRequestPackages;\r\n\r\n            return <section>\r\n                <div class=\"table-responsive back-color-gray\">\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>NUMBER</th>\r\n                                <th>DRIVER</th>\r\n                                <th>REQUESTED ON</th>\r\n                                {jobOfferType === \"Auctionable\" ? <th>BID PRICE</th> : null}\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {driverRequestPackages.map((driverRequestPackage, index) => {\r\n                                return <DriverRequestRow key={index}\r\n                                    Index={index}\r\n                                    Price={this.props.Price}\r\n                                    TraderOnJob={this.props.TraderOnJob}\r\n                                    DriverRequestPackage={driverRequestPackage}\r\n                                    OnJobAssigned={this.props.OnJobAssigned} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default DriverRequestsTable;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport PlaceInput from \"../../../../../controls/PlaceInput\";\r\nimport Strings from \"../../../../../res/strings\";\r\nimport { updateJobOffer } from \"../../../TraderFunctions.js\";\r\n\r\nclass EditJobOfferDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const {\r\n            JobOffer\r\n        } = this.props;\r\n\r\n        this.state = {\r\n            LoadingPlace: {\r\n                Address: JobOffer.LoadingPlace,\r\n                Lat: JobOffer.LoadingLat,\r\n                Lng: JobOffer.LoadingLng\r\n            },\r\n            UnloadingPlace: {\r\n                Address: JobOffer.UnloadingPlace,\r\n                Lat: JobOffer.UnloadingLat,\r\n                Lng: JobOffer.UnloadingLng\r\n            },\r\n            TripType: JobOffer.TripType,\r\n            CargoType: JobOffer.CargoType,\r\n            CargoWeight: JobOffer.CargoWeight,\r\n            LoadingDate: JobOffer.LoadingDate,\r\n            LoadingTime: JobOffer.LoadingTime,\r\n            AcceptedDelay: JobOffer.AcceptedDelay,\r\n            Price: JobOffer.Price,\r\n            JobOfferType: JobOffer.JobOfferType,\r\n            EntryExit: JobOffer.EntryExit,\r\n\r\n            ValidCargoType: true,\r\n            ValidCargoWeight: true,\r\n            ValidLoadingPlace: true,\r\n            ValidUnloadingPlace: true,\r\n            ValidLoadingDate: true,\r\n            ValidLoadingTime: true,\r\n            ValidAcceptedDelay: true,\r\n            ValidPrice: true,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: null,\r\n\r\n            Errors: {\r\n                CargoType: \"\",\r\n                CargoWeight: \"\",\r\n                LoadingPlace: \"\",\r\n                UnloadingPlace: \"\",\r\n                LoadingDate: \"\",\r\n                LoadingTime: \"\",\r\n                AcceptedDelay: \"\",\r\n                Price: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidCargoType,\r\n            ValidCargoWeight,\r\n            ValidLoadingDate,\r\n            ValidLoadingTime,\r\n            ValidAcceptedDelay,\r\n            ValidPrice\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"CargoType\":\r\n                ValidCargoType = (value !== \"\");\r\n                Errors.CargoType = ValidCargoType ? \"\" : \"Cargo type is required.\";\r\n                break;\r\n            case \"CargoWeight\":\r\n                ValidCargoWeight = (value !== \"\");\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight is required.\";\r\n\r\n                if (Errors.CargoWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCargoWeight = (value >= 100);\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight must be greater than 100 lbs.\";\r\n                break;\r\n            case \"LoadingDate\":\r\n                ValidLoadingDate = (value !== \"\");\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date is required.\";\r\n\r\n                if (Errors.LoadingDate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidLoadingDate = (new Date(value) >= new Date());\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date must be later than yesterday.\";\r\n                break;\r\n            case \"LoadingTime\":\r\n                ValidLoadingTime = (value !== \"\");\r\n                Errors.LoadingTime = ValidLoadingTime ? \"\" : \"Loading time is required.\";\r\n                break;\r\n            case \"AcceptedDelay\":\r\n                ValidAcceptedDelay = (value !== \"\");\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay is required.\";\r\n\r\n                if (Errors.AcceptedDelay !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidAcceptedDelay = (value >= 0 && value <= 48);\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay can be in the range of 0 to 48 hours.\";\r\n                break;\r\n            case \"Price\":\r\n                ValidPrice = (value !== \"\");\r\n                Errors.Price = ValidPrice ? \"\" : \"Price is required.\";\r\n\r\n                if (Errors.Price !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPrice = (value > 0.00);\r\n                Errors.Price = ValidPrice ? \"\" : \"Price must be more than $0.00.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCargoType: ValidCargoType,\r\n            ValidCargoWeight: ValidCargoWeight,\r\n            ValidLoadingDate: ValidLoadingDate,\r\n            ValidLoadingTime: ValidLoadingTime,\r\n            ValidAcceptedDelay: ValidAcceptedDelay,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: ValidCargoType &&\r\n                    ValidCargoWeight &&\r\n                    ValidLoadingDate &&\r\n                    ValidLoadingTime &&\r\n                    ValidAcceptedDelay &&\r\n                    ValidPrice\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (!this.state.LoadingPlace) {\r\n            let {\r\n                Errors\r\n            } = this.state;\r\n\r\n            Errors.LoadingPlace = \"Loading place is required.\";\r\n\r\n            this.setState({\r\n                Errors: Errors\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        if (!this.state.UnloadingPlace) {\r\n            let {\r\n                Errors\r\n            } = this.state;\r\n\r\n            Errors.UnloadingPlace = \"Unloading place is required.\";\r\n\r\n            this.setState({\r\n                Errors: Errors\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const updatedJobOffer = {\r\n            Token: localStorage.Token,\r\n            JobOfferID: this.props.JobOffer.JobOfferID,\r\n            TripType: this.state.TripType,\r\n            CargoType: this.state.CargoType,\r\n            CargoWeight: this.state.CargoWeight,\r\n            LoadingPlace: this.state.LoadingPlace.Address,\r\n            LoadingLat: this.state.LoadingPlace.Lat,\r\n            LoadingLng: this.state.LoadingPlace.Lng,\r\n            UnloadingPlace: this.state.UnloadingPlace.Address,\r\n            UnloadingLat: this.state.UnloadingPlace.Lat,\r\n            UnloadingLng: this.state.UnloadingPlace.Lng,\r\n            LoadingDate: this.state.LoadingDate,\r\n            LoadingTime: this.state.LoadingTime,\r\n            EntryExit: this.state.EntryExit,\r\n            Price: this.state.Price,\r\n            AcceptedDelay: this.state.AcceptedDelay,\r\n            JobOfferType: this.state.JobOfferType\r\n        };\r\n\r\n        await updateJobOffer(updatedJobOffer).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Job offer is updated.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            LoadingPlace,\r\n            UnloadingPlace,\r\n            TripType,\r\n            CargoType,\r\n            CargoWeight,\r\n            LoadingDate,\r\n            LoadingTime,\r\n            AcceptedDelay,\r\n            Price,\r\n            JobOfferType,\r\n            EntryExit,\r\n            ValidForm,\r\n            ShowPreloader,\r\n            Errors,\r\n        } = this.state;\r\n\r\n        const {\r\n            DialogID\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`edit-job-offer-dialog-${DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"type-h3 color-default p-t-xxs\">Edit Job Offer</div>\r\n                                        <div className=\"row p-t-xxs\">\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Place</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <PlaceInput Address={LoadingPlace.Address}\r\n                                                        OnPlaceSelected={place => {\r\n                                                            this.setState({\r\n                                                                LoadingPlace: place,\r\n                                                            });\r\n                                                        }} />\r\n                                                    <span className=\"text-danger\">{Errors.LoadingPlace}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Unloading Place</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <PlaceInput Address={UnloadingPlace.Address}\r\n                                                        OnPlaceSelected={place => {\r\n                                                            this.setState({\r\n                                                                UnloadingPlace: place,\r\n                                                            });\r\n                                                        }} />\r\n                                                    <span className=\"text-danger\">{Errors.UnloadingPlace}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Trip Type</label><br />\r\n                                                    <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                        <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                            <span>{TripType}</span>\r\n                                                            <span className=\"caret\"></span>\r\n                                                        </button>\r\n                                                        <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                            <li><a onClick={() => { this.setState({ TripType: \"One Way\" }); }}>One Way</a></li>\r\n                                                            <li><a onClick={() => { this.setState({ TripType: \"Two Way\" }); }}>Two Way</a></li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Cargo Type</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"CargoType\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={CargoType} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.CargoType}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Cargo Weight (lbs)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"CargoWeight\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={CargoWeight} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.CargoWeight}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Date</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"date\" name=\"LoadingDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={LoadingDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.LoadingDate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Time</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"time\" name=\"LoadingTime\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={LoadingTime} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.LoadingTime}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Accepted Delay (Hours)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"AcceptedDelay\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={AcceptedDelay} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.AcceptedDelay}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">{`Price (${Strings.SAUDI_RIYAL})`}</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" min=\"0.00\" step=\"0.01\" max=\"100.00\" name=\"Price\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={Price} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.Price}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <button type=\"button\" data-toggle=\"button\" className=\"btn btn-toggle-switch\"\r\n                                                        autocomplete=\"off\" aria-pressed=\"false\"\r\n                                                        onClick={() => {\r\n                                                            this.state.JobOfferType = (JobOfferType === \"Fixed-Price\") ?\r\n                                                                \"Auctionable\" : \"Fixed-Price\";\r\n                                                        }}>\r\n                                                        <span className=\"stateLabel stateLabel-on\">Auctionable Job Offer</span>\r\n                                                        <span className=\"stateLabel stateLabel-off\">Fixed-Price Job Offer</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"checkbox\">\r\n                                                        <label className=\"control-label\">\r\n                                                            <input type=\"checkbox\" name=\"EntryExit\"\r\n                                                                value={EntryExit} onChange={() => {\r\n                                                                    this.state.EntryExit = EntryExit ? false : true;\r\n                                                                }}></input>\r\n                                                            <span>Entry/Exit</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default EditJobOfferDialog;","import React, { Component } from \"react\";\r\nimport DriverRequestsTable from \"./DriverRequestsTable\";\r\nimport EditJobOfferDialog from \"./EditJobOfferDialog\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { deleteJobOffer } from \"../../../TraderFunctions\";\r\nimport JobOfferContainer from \"../../../../../containers/jobOffer/JobOfferContainer\";\r\n\r\nclass JobOfferPackageItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Preloader: null,\r\n            NumberOfRequests: 0\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async jobOfferID => {\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const discardedJobOffer = {\r\n            Token: localStorage.Token,\r\n            JobOfferID: jobOfferID\r\n        };\r\n\r\n        console.log(`Going to delete Job offer...`);\r\n\r\n        await deleteJobOffer(discardedJobOffer).then(response => {\r\n            if (response.Message === \"Job offer is deleted.\") {\r\n                this.props.OnJobOfferUpdated();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const jobOffer = this.props.JobOfferPackage.JobOffer;\r\n        const hasDriverRequests = this.props.JobOfferPackage.HasDriverRequests;\r\n\r\n        return <section>\r\n            <JobOfferContainer Index={index} JobOffer={jobOffer} />\r\n\r\n            <div className=\"text-right p-xxs back-color-gray\">\r\n                <button type=\"button\" className=\"btn btn-default\"\r\n                    data-toggle=\"modal\"\r\n                    disabled={hasDriverRequests}\r\n                    data-target={`#edit-job-offer-dialog-${index}`}>Edit</button>\r\n                <button className=\"btn btn-danger\" onClick={async () => { await this.onDelete(jobOffer.JobOfferID); }}>Delete</button>\r\n            </div>\r\n\r\n            <EditJobOfferDialog\r\n                DialogID={index}\r\n                JobOffer={jobOffer}\r\n                CanEdit={() => { return (this.state.NumberOfRequests === 0) ? true : false }}\r\n                OnOK={() => { this.props.OnJobOfferUpdated(); }} />\r\n\r\n            <div className=\"back-color-gray\" data-toggle=\"collapse\" aria-expanded=\"false\"\r\n                data-target={`#job-offer-package-${index}`}\r\n                onMouseDown={async () => { await this.RefreshDriverRequestsTable(); }}>\r\n\r\n                <div className=\"type-h4 text-right color-default p-xxxs\">\r\n                    <span class=\"badge back-color-danger m-r-xxxs\">{this.state.NumberOfRequests}</span>\r\n                    {(jobOffer.JobOfferType === \"Fixed-Price\") ? \"Driver Requests\" : \"Driver Bids\"}\r\n                    <i className=\"fas fa-ellipsis-v\"></i>\r\n                    <i class=\"glyph glyph-add\"></i>\r\n                    <i class=\"glyph glyph-remove\"></i>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`job-offer-package-${index}`}>\r\n\r\n                <DriverRequestsTable\r\n                    Refresh={refresh => { this.RefreshDriverRequestsTable = refresh; }}\r\n                    OnRequestsFound={number => {\r\n                        this.setState({\r\n                            NumberOfRequests: number\r\n                        });\r\n                    }}\r\n                    JobOfferID={jobOffer.JobOfferID}\r\n                    JobOfferType={jobOffer.JobOfferType}\r\n                    Price={jobOffer.Price}\r\n                    TraderOnJob={this.props.TraderOnJob}\r\n                    OnJobAssigned={this.props.OnJobOfferUpdated} />\r\n\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            </div>\r\n\r\n            {this.state.Preloader}\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default JobOfferPackageItem;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader.js\";\r\nimport PlaceInput from \"../../../../../controls/PlaceInput\";\r\nimport Strings from \"../../../../../res/strings\";\r\nimport { addJobOffer } from \"../../../TraderFunctions.js\";\r\n\r\nclass AddJobOfferDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            LoadingPlace: null,\r\n            UnloadingPlace: null,\r\n            TripType: \"One Way\",\r\n            CargoType: \"\",\r\n            CargoWeight: 0,          \r\n            LoadingDate: new Date(),\r\n            LoadingTime: new Date().getTime(),\r\n            AcceptedDelay: 0,\r\n            Price: 0.00,\r\n            JobOfferType: \"Fixed-Price\",\r\n            EntryExit: 0,\r\n\r\n            ValidCargoType: false,\r\n            ValidCargoWeight: false,\r\n            ValidLoadingPlace: false,\r\n            ValidUnloadingPlace: false,\r\n            ValidLoadingDate: false,\r\n            ValidLoadingTime: false,\r\n            ValidAcceptedDelay: false,\r\n            ValidPrice: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: null,\r\n\r\n            Errors: {\r\n                CargoType: \"\",\r\n                CargoWeight: \"\",\r\n                LoadingPlace: \"\",\r\n                UnloadingPlace: \"\",\r\n                LoadingDate: \"\",\r\n                LoadingTime: \"\",\r\n                AcceptedDelay: \"\",\r\n                Price: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidCargoType,\r\n            ValidCargoWeight,\r\n            ValidLoadingDate,\r\n            ValidLoadingTime,\r\n            ValidAcceptedDelay,\r\n            ValidPrice\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"CargoType\":\r\n                ValidCargoType = (value !== \"\");\r\n                Errors.CargoType = ValidCargoType ? \"\" : \"Cargo type is required.\";\r\n                break;\r\n            case \"CargoWeight\":\r\n                ValidCargoWeight = (value !== \"\");\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight is required.\"; \r\n\r\n                if (Errors.CargoWeight !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCargoWeight = (value >= 100);\r\n                Errors.CargoWeight = ValidCargoWeight ? \"\" : \"Cargo weight must be greater than 100 lbs.\";\r\n                break;\r\n            case \"LoadingDate\":\r\n                ValidLoadingDate = (value !== \"\");\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date is required.\";\r\n\r\n                if (Errors.LoadingDate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidLoadingDate = (new Date(value) >= new Date());\r\n                Errors.LoadingDate = ValidLoadingDate ? \"\" : \"Loading date must be later than yesterday.\";\r\n                break;\r\n            case \"LoadingTime\":\r\n                ValidLoadingTime = (value !== \"\");\r\n                Errors.LoadingTime = ValidLoadingTime ? \"\" : \"Loading time is required.\";\r\n                break;\r\n            case \"AcceptedDelay\":\r\n                ValidAcceptedDelay = (value !== \"\");\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay is required.\";\r\n\r\n                if (Errors.AcceptedDelay !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidAcceptedDelay = (value >= 0 && value <= 48);\r\n                Errors.AcceptedDelay = ValidAcceptedDelay ? \"\" : \"Accepted delay can be in the range of 0 to 48 hours.\";\r\n                break;\r\n            case \"Price\":\r\n                ValidPrice = (value !== \"\");\r\n                Errors.Price = ValidPrice ? \"\" : \"Price is required.\";\r\n\r\n                if (Errors.Price !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPrice = (value > 0.00);\r\n                Errors.Price = ValidPrice ? \"\" : \"Price must be more than $0.00.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCargoType: ValidCargoType,\r\n            ValidCargoWeight: ValidCargoWeight,\r\n            ValidLoadingDate: ValidLoadingDate,\r\n            ValidLoadingTime: ValidLoadingTime,\r\n            ValidAcceptedDelay: ValidAcceptedDelay,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: ValidCargoType &&\r\n                        ValidCargoWeight &&\r\n                        ValidLoadingDate &&\r\n                        ValidLoadingTime &&\r\n                        ValidAcceptedDelay &&\r\n                        ValidPrice\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (!this.state.LoadingPlace) {\r\n            let {\r\n                Errors\r\n            } = this.state;\r\n\r\n            Errors.LoadingPlace = \"Loading place is required.\";\r\n\r\n            this.setState({\r\n                Errors: Errors\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        if (!this.state.UnloadingPlace) {\r\n            let {\r\n                Errors\r\n            } = this.state;\r\n\r\n            Errors.UnloadingPlace = \"Unloading place is required.\";\r\n\r\n            this.setState({\r\n                Errors: Errors\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const newJobOffer = {\r\n            Token: localStorage.Token,\r\n            TripType: this.state.TripType,\r\n            CargoType: this.state.CargoType,\r\n            CargoWeight: this.state.CargoWeight,\r\n            LoadingPlace: this.state.LoadingPlace.Address,\r\n            LoadingLat: this.state.LoadingPlace.Lat,\r\n            LoadingLng: this.state.LoadingPlace.Lng,\r\n            UnloadingPlace: this.state.UnloadingPlace.Address,\r\n            UnloadingLat: this.state.UnloadingPlace.Lat,\r\n            UnloadingLng: this.state.UnloadingPlace.Lng,\r\n            LoadingDate: this.state.LoadingDate,\r\n            LoadingTime: this.state.LoadingTime,\r\n            EntryExit: this.state.EntryExit,\r\n            Price: this.state.Price,\r\n            AcceptedDelay: this.state.AcceptedDelay,\r\n            JobOfferType: this.state.JobOfferType\r\n        };\r\n\r\n        console.log(\"Going to add Job offer.\");\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        await addJobOffer(newJobOffer).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Job offer is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            TripType,\r\n            CargoType,\r\n            CargoWeight,\r\n            LoadingDate,\r\n            LoadingTime,\r\n            AcceptedDelay,\r\n            Price,\r\n            JobOfferType,\r\n            EntryExit,\r\n            ValidForm,\r\n            ShowPreloader,\r\n            Errors,\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"add-job-offer-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"type-h3 color-default p-t-xxs\">Add Job Offer</div>\r\n                                        <div className=\"row p-t-xxs\">\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Place</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <PlaceInput Address=\"\"\r\n                                                        OnPlaceSelected={place => {\r\n                                                            this.setState({\r\n                                                                LoadingPlace: place,\r\n                                                            });\r\n                                                        }} />\r\n                                                    <span className=\"text-danger\">{Errors.LoadingPlace}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Unloading Place</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <PlaceInput Address=\"\"\r\n                                                        OnPlaceSelected={place => {\r\n                                                            this.setState({\r\n                                                                UnloadingPlace: place,\r\n                                                            });\r\n                                                        }} />\r\n                                                    <span className=\"text-danger\">{Errors.UnloadingPlace}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Trip Type</label><br />\r\n                                                    <div className=\"dropdown\" style={{ width: \"100%\", maxWidth: \"296px\", }}>\r\n                                                        <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                                            aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                                            <span>{TripType}</span>\r\n                                                            <span className=\"caret\"></span>\r\n                                                        </button>\r\n                                                        <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                                            <li><a onClick={() => { this.setState({ TripType: \"One Way\" }); }}>One Way</a></li>\r\n                                                            <li><a onClick={() => { this.setState({ TripType: \"Two Way\" }); }}>Two Way</a></li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Cargo Type</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"CargoType\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={CargoType} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.CargoType}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Cargo Weight (lbs)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"CargoWeight\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={CargoWeight} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.CargoWeight}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Date</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"date\" name=\"LoadingDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={LoadingDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.LoadingDate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Loading Time</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"time\" name=\"LoadingTime\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={LoadingTime} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.LoadingTime}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Accepted Delay (Hours)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"AcceptedDelay\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={AcceptedDelay} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.AcceptedDelay}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">{`Price (${Strings.SAUDI_RIYAL})`}</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" min=\"0.00\" step=\"0.01\" max=\"100.00\" name=\"Price\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={Price} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.Price}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <button type=\"button\" data-toggle=\"button\" className=\"btn btn-toggle-switch\"\r\n                                                        autocomplete=\"off\" aria-pressed=\"false\"\r\n                                                        onClick={() => {\r\n                                                            this.state.JobOfferType = (JobOfferType === \"Fixed-Price\") ?\r\n                                                                \"Auctionable\" : \"Fixed-Price\";\r\n                                                        }}>\r\n                                                        <span className=\"stateLabel stateLabel-on\">Auctionable Job Offer</span>\r\n                                                        <span className=\"stateLabel stateLabel-off\">Fixed-Price Job Offer</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"checkbox\">\r\n                                                        <label className=\"control-label\">\r\n                                                            <input type=\"checkbox\" name=\"EntryExit\"\r\n                                                                value={EntryExit} onChange={() => {\r\n                                                                    this.state.EntryExit = EntryExit ? false : true;\r\n                                                                }}></input>\r\n                                                            <span>Entry/Exit</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddJobOfferDialog;","import React, { Component } from \"react\";\r\nimport { getData } from \"../../../TraderFunctions\";\r\nimport JobOfferPackageItem from \"./JobOfferPackageItem\";\r\nimport AddJobOfferDialog from \"./AddJobOfferDialog\";\r\nimport ProgressBar from \"../../../../../controls/ProgressBar\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\n\r\nclass JobOffersList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllJobOfferPackages: [],\r\n            JobOfferPackages: [],\r\n            TraderOnJob: false,\r\n            SearchString: \"\",\r\n            Searching: null,\r\n            Refreshing: false,\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobOfferPackages\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job offer packages found.\") {\r\n                    this.setState({\r\n                        AllJobOfferPackages: response.JobOfferPackages,\r\n                        JobOfferPackages: response.JobOfferPackages,\r\n                        TraderOnJob: response.TraderOnJob,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllJobOfferPackages: [],\r\n                        JobOfferPackages: [],\r\n                        TraderOnJob: false,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobOfferPackages\"\r\n            };\r\n\r\n            this.setState({\r\n                Refreshing: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job offer packages found.\") {\r\n                    this.setState({\r\n                        AllJobOfferPackages: response.JobOfferPackages,\r\n                        JobOfferPackages: response.JobOfferPackages,\r\n                        TraderOnJob: response.TraderOnJob,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllJobOfferPackages: [],\r\n                        JobOfferPackages: [],\r\n                        TraderOnJob: false,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.SearchString === \"\") {\r\n            this.setState({\r\n                JobOfferPackages: this.state.AllJobOfferPackages\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allJobOfferPackages = this.state.AllJobOfferPackages;\r\n        let filteredJobOfferPackages = [];\r\n        let count = 0;\r\n\r\n        for (let jobOfferPackage of allJobOfferPackages) {\r\n            let jobOffer = jobOfferPackage.JobOffer;\r\n\r\n            if (jobOffer.LoadingPlace.includes(this.state.SearchString) ||\r\n                jobOffer.UnloadingPlace.includes(this.state.SearchString)) {\r\n                filteredJobOfferPackages[count++] = jobOfferPackage;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            JobOfferPackages: filteredJobOfferPackages\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const jobOfferPackages = this.state.JobOfferPackages;\r\n        return <section>\r\n            {this.state.TraderOnJob ?\r\n                <div class=\"alert alert-danger m-n\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xs-24\">\r\n                                <p><span className=\"fas fa-exclamation-circle m-r-xxxs\"></span>While you are engaged in an On-Going Job, you cannot assign more jobs to drivers. View details in <span className=\"color-default\">On-Going Job</span> tab.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> :\r\n                null}\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-hand-holding-usd\"></span>   Job Offers</div>\r\n                            <p className=\"color-light\">Hi There! Want to transport your freight somewhere? Why not create a new job offer now!</p>\r\n                            <div className=\"btn-group\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-primary\"\r\n                                    data-toggle=\"modal\"\r\n                                    data-target=\"#add-job-offer-dialog\">New Job Offer</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <AddJobOfferDialog\r\n                OnOK={() => {\r\n                    this.onComponentUpdated();\r\n                }} />\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Your Job Offers\r\n                    {this.state.Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search by Places\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={this.state.SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            {(jobOfferPackages.length === 0) ?\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            {this.state.Searching ? <div className=\"col-md-24 text-center\">\r\n                                <div>\r\n                                    <div className=\"type-h3\" style={{ color: \"#008575\" }}>Searching</div>\r\n                                    <ProgressBar />\r\n                                </div>\r\n                            </div> : <div className=\"col-md-24 text-center\">\r\n                                    <h3><span className=\"fas fa-exclamation-triangle\" style={{ color: \"#FFBF15\" }}></span> No job offers found.</h3>\r\n                                </div>}\r\n                        </div>\r\n                    </div>\r\n                </div> : <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {jobOfferPackages.map((jobOfferPackage, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <JobOfferPackageItem Index={index}\r\n                                JobOfferPackage={jobOfferPackage}\r\n                                OnJobOfferUpdated={this.onComponentUpdated}\r\n                                TraderOnJob={this.state.TraderOnJob} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n            \r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobOffersList;","import React, { Component } from \"react\";\r\nimport JobOffersList from \"./JobOffersList.js\";\r\n\r\nclass JobOffers extends Component {\r\n    render() {\r\n        return <section>\r\n            <JobOffersList Refresh={this.props.Refresh} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default JobOffers;","import React, { Component } from \"react\";\r\nimport Strings from \"../../../../../res/strings\";\r\nimport JobContainer from \"../../../../../containers/onGoingJob/JobContainer\";\r\n\r\nclass Job extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const onGoingJob = this.props.OnGoingJob;\r\n        const hasObjections = this.props.HasObjections;\r\n\r\n        let loadingDate = new Date(onGoingJob.LoadingDate);\r\n        loadingDate.setHours((parseInt(onGoingJob.LoadingTime.substring(0, 2))));\r\n        loadingDate.setMinutes(parseInt(onGoingJob.LoadingTime.substring(3, 5)));\r\n        loadingDate.setSeconds(parseInt(onGoingJob.LoadingTime.substring(6)));\r\n\r\n        let JumbotronContent;\r\n\r\n        if (onGoingJob.CompletedByDriver) {\r\n            JumbotronContent = <section>\r\n                <h3><span className=\"fas fa-smile p-r-xxxs\"></span>Driver has Completed the Job</h3>\r\n                <div class=\"type-sh3\">Your Approval is Still Required</div>\r\n            </section>;\r\n        }\r\n        else if (hasObjections) {\r\n            JumbotronContent = <h3><span className=\"fas fa-exclamation p-r-xxxs\"></span>This Job is Terminated.</h3>;\r\n        }\r\n        else {\r\n            let dateDifference = loadingDate - new Date();\r\n            const days = Math.floor(dateDifference / 86400000);\r\n            const hours = Math.floor((dateDifference % 86400000) / 3600000);\r\n            const minutes = Math.round(((dateDifference % 86400000) % 3600000) / 60000);\r\n\r\n            let dayString = (days > 0) ? `${days} Days ` : \"\";\r\n            let hourString = (hours > 0) ? `${hours} Hours ` : \"\";\r\n            let minuteString = (minutes > 0) ? `${minutes} Minutes ` : \"\";\r\n\r\n            let remainingTime = `${dayString}${hourString}${minuteString} Left for Your Driver to Arrive`;\r\n\r\n            if (dateDifference < 0) {\r\n                remainingTime = \"Loading Time has Passed\";\r\n            }\r\n\r\n            JumbotronContent = <section>\r\n                <h3><span className=\"fas fa-clock\"></span>   {remainingTime}</h3>\r\n                <div class=\"type-sh3\">\r\n                    <span className=\"fas fa-tag m-r-xxs\"></span>{`This Job Costs You ${onGoingJob.Price} ${Strings.SAUDI_RIYAL}.`}</div>\r\n                <div class=\"col-md-12 col-md-offset-6\">\r\n                    <div class=\"type-p3\">{(onGoingJob.AcceptedDelay > 0) ?\r\n                        <span>\r\n                            <span className=\"fas fa-leaf m-r-xxxs\"></span>\r\n                            <span>{`The Driver has a relaxation of ${onGoingJob.AcceptedDelay} Hours.`}</span>\r\n                        </span> :\r\n                        <span>{\"Hoping for the driver to be on time.\"}</span>}\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n\r\n        return <section>\r\n            <div class=\"jumbotron theme-dark\" style={{ background: \"linear-gradient(to right bottom, #008575, #005162)\" }}>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-24 text-center\">\r\n                            {JumbotronContent}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <JobContainer OnGoingJob={onGoingJob} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Job;","import React, { useState } from \"react\";\r\nimport { withGoogleMap, withScriptjs, GoogleMap, DirectionsRenderer, Marker } from \"react-google-maps\";\r\nimport Strings from \"../../../../../res/strings\";\r\n\r\nconst Directions = props => {\r\n    const [Directions, SetDirections] = useState(null);\r\n\r\n    const { OnGoingJob } = props;\r\n\r\n    const directionsService = new window.google.maps.DirectionsService();\r\n\r\n    const origin = { lat: OnGoingJob.LoadingLat, lng: OnGoingJob.LoadingLng };\r\n    const destination = { lat: OnGoingJob.UnloadingLat, lng: OnGoingJob.UnloadingLng };\r\n\r\n    directionsService.route({\r\n        origin: origin,\r\n        destination: destination,\r\n        travelMode: window.google.maps.TravelMode.DRIVING\r\n    }, (result, status) => {\r\n        if (status === window.google.maps.DirectionsStatus.OK) {\r\n            SetDirections(result);\r\n        } else {\r\n            console.error(`error fetching directions ${result}`);\r\n        }\r\n    });\r\n\r\n    return <DirectionsRenderer directions={Directions} options={{\r\n        suppressMarkers: true\r\n    }} />;\r\n};\r\n\r\nconst Map = props => {\r\n    const {\r\n        OnGoingJob,\r\n        DriverLocation\r\n    } = props;\r\n\r\n    return <GoogleMap\r\n        defaultZoom={14}\r\n        options={{ streetViewControl: false }}>\r\n\r\n        <Marker key={1} position={{ lat: OnGoingJob.LoadingLat, lng: OnGoingJob.LoadingLng }}\r\n            icon={{\r\n                url: \"./images/source.svg\",\r\n                scaledSize: new window.google.maps.Size(30, 30)\r\n            }} />\r\n\r\n        <Marker key={1} position={{ lat: OnGoingJob.UnloadingLat, lng: OnGoingJob.UnloadingLng }}\r\n            icon={{\r\n                url: \"./images/destination.svg\",\r\n                scaledSize: new window.google.maps.Size(30, 30)\r\n            }} />\r\n\r\n        {DriverLocation ?\r\n            <Marker key={1} position={{ lat: DriverLocation.Lat, lng: DriverLocation.Lng }}\r\n                icon={{\r\n                    url: \"./images/driver_marker.svg\",\r\n                    scaledSize: new window.google.maps.Size(40, 40)\r\n                }} /> : null}\r\n\r\n        <Directions OnGoingJob={OnGoingJob} />\r\n    </GoogleMap>;\r\n}\r\n\r\nconst MapWrapped = withScriptjs(withGoogleMap(Map));\r\n\r\nconst OnGoingJobMap = props => {\r\n    return <div style={{ width: \"100%\", height: \"100vh\" }}>\r\n        <MapWrapped\r\n            googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${Strings.GOOGLE_API_KEY}`}\r\n            loadingElement={<div style={{ height: `100%` }} />}\r\n            containerElement={<div style={{ height: `100%` }} />}\r\n            mapElement={<div style={{ height: `100%` }} />}\r\n            OnGoingJob={props.OnGoingJob}\r\n            DriverLocation={props.DriverLocation} />\r\n    </div>;\r\n}\r\n\r\nexport default OnGoingJobMap;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\nimport { getData, addObjectionReason } from \"../../../../TraderFunctions\";\r\n\r\nclass ReasonsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ObjectionReasons: [],\r\n            AddPressed: false,\r\n            NewReason: \"\",\r\n            ValidNewReason: false,\r\n\r\n            ValidForm: false,\r\n            ProgressRing: null,\r\n\r\n            Errors: {\r\n                NewReason: \"0\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"ObjectionReasons\"\r\n            };\r\n\r\n            this.setState({\r\n                ProgressRing: <ProgressRing />\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Objection reasons found.\") {\r\n                    this.setState({\r\n                        ObjectionReasons: response.ObjectionReasons,\r\n                        ProgressRing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        ObjectionReasons: [],\r\n                        ProgressRing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewReason = this.state.ValidNewReason;\r\n\r\n        switch (field) {\r\n            case \"NewReason\":\r\n                ValidNewReason = (value.length > 0 && value.length <= 50);\r\n                Errors.NewReason = ValidNewReason ? value.length : \"Too long...\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewReason: ValidNewReason\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidNewReason\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ProgressRing: <ProgressRing />\r\n        });\r\n\r\n        const newObjectionReason = {\r\n            Token: localStorage.Token,\r\n            Reason: this.state.NewReason\r\n        };\r\n\r\n        console.log(\"Going to add Objection reason...\");\r\n\r\n        await addObjectionReason(newObjectionReason).then(response => {\r\n            if (response.Message === \"Objection reason is added.\") {\r\n                let objectionReasons = this.state.ObjectionReasons;\r\n                let errors = this.state.Errors;\r\n\r\n                objectionReasons.push(response.ObjectionReason);\r\n                errors.NewReason = \"0\";\r\n\r\n                this.setState({\r\n                    AddPressed: false,\r\n                    ObjectionReasons: objectionReasons,\r\n                    Errors: errors,\r\n                    NewReason: \"\"\r\n                });\r\n            }\r\n\r\n            this.setState({\r\n                ProgressRing: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const objectionReasons = this.state.ObjectionReasons;\r\n\r\n        return <section>\r\n            {this.state.ProgressRing}\r\n            <div class=\"entity-list entity-list-expandable\">\r\n                <div class=\"entity-list entity-list-add-item-button\">\r\n                    <a class={this.state.AddPressed ? \"entity-list-item active\" : \"entity-list-item\"}>\r\n                        <div class=\"item-icon\" onClick={() => {\r\n                            this.state.AddPressed ?\r\n                                this.setState({ AddPressed: false }) :\r\n                                this.setState({ AddPressed: true });\r\n                        }}>\r\n                            <span class=\"glyph glyph-add\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Add a Reason</div>\r\n                            <div class=\"content-text-secondary\" style={(this.state.Errors.NewReason === \"Too long...\") ? { color: \"#D75A4A\" } : null}>{this.state.Errors.NewReason}</div>\r\n                        </div>\r\n                        <div class=\"item-content-expanded\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <input type=\"text\" className=\"form-control\" name=\"NewReason\" autocomplete=\"off\"\r\n                                    value={this.state.NewReason} onChange={this.onChange} />\r\n                                <input type=\"submit\" value=\"Add\" className=\"btn btn-secondary\" disabled={!this.state.ValidForm} />\r\n                            </form>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                {objectionReasons.map((objectionReason, index) => {\r\n                    return <div key={index} class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-thumbs-down\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <button type=\"button\" class=\"btn btn-secondary\" style={{ margin: \"0px\", minWidth: \"0px\" }}\r\n                                onClick={() => { this.props.OnReasonSelected(objectionReason.Reason); }}>Select</button>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">{`${index + 1}.`}</div>\r\n                            <div class=\"content-text-secondary\">{objectionReason.Reason}</div>\r\n                        </div>\r\n                    </div>;\r\n                })}\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ReasonsList;","import React, { Component } from \"react\";\r\nimport ReasonsList from \"./ReasonsList\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { addJobObjection } from \"../../../../TraderFunctions\";\r\n\r\nclass AddObjectionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Reason: \"Select from the list.\",\r\n            Comment: \"\",\r\n\r\n            ValidReason: false,\r\n            ValidComment: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                Comment: \"0\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidComment = this.state.ValidComment;\r\n\r\n        switch (field) {\r\n            case \"Comment\":\r\n                ValidComment = (value !== \"\");\r\n                Errors.Comment = ValidComment ? \"\" : \"Comment is required\";\r\n\r\n                if (Errors.Comment !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidComment = (value.length <= 200);\r\n                Errors.Comment = ValidComment ? value.length : \"Too long...\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidComment: ValidComment\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidReason && this.state.ValidComment\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        const newJobObjection = {\r\n            Token: localStorage.Token,\r\n            OnGoingJobID: this.props.OnGoingJobID,\r\n            Reason: this.state.Reason,\r\n            Comment: this.state.Comment\r\n        };\r\n\r\n        console.log(\"Going to add job objection...\");\r\n\r\n        await addJobObjection(newJobObjection).then(response => {\r\n            if (response.Message === \"Job objection is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"add-objection-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.Preloader}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}\r\n                                    style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Add an Objection</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label>Reason</label>\r\n                                    <input type=\"text\" class=\"form-control\" name=\"Reason\" style={{ maxWidth: \"100%\" }} readonly\r\n                                        value={this.state.Reason} />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label>Comment</label>\r\n                                    <textarea rows=\"4\" class=\"form-control\" style={{ maxWidth: \"100%\" }} name=\"Comment\"\r\n                                        value={this.state.Comment} onChange={this.onChange}></textarea>\r\n                                    <span className=\"text-danger\">{this.state.Errors.Comment}</span>\r\n                                </div>\r\n                                <div style={{ textAlign: \"right\" }}>\r\n                                    <input type=\"submit\" value=\"Add Objection\" className=\"btn btn-primary\" style={{ margin: \"0px\" }} disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>\r\n                            <br/>\r\n                            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                            <div className=\"type-h4\" style={{ color: \"#008575\", padding: \"10px\", textAlign: \"right\" }}>{\"   Reasons\"}\r\n                                <i className=\"fas fa-ellipsis-v\"></i>\r\n                            </div>\r\n                            <ReasonsList ObjectionReasons={this.props.ObjectionReasons} OnReasonSelected={reason => {\r\n                                this.setState({\r\n                                    Reason: reason,\r\n                                    ValidReason: true\r\n                                }, () => {\r\n                                    this.setState({\r\n                                        ValidForm: this.state.ValidReason && this.state.ValidComment\r\n                                    });\r\n                                });\r\n                            }} />                           \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddObjectionDialog;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport AddObjectionDialog from \"./AddObjectionDialog\";\r\nimport { getData } from \"../../../../TraderFunctions\";\r\nimport JobObjectionContainer from \"../../../../../../containers/onGoingJob/JobObjectionContainer\";\r\n\r\nclass Objections extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobObjections: [],\r\n            Searching: false,\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobObjections\",\r\n                Params: {\r\n                    OnGoingJobID: this.props.OnGoingJobID\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job objections found.\") {\r\n                    this.setState({\r\n                        JobObjections: response.JobObjections,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobObjections: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobObjections\",\r\n                Params: {\r\n                    OnGoingJobID: this.props.OnGoingJobID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job objection packages found.\") {\r\n                    this.setState({\r\n                        JobObjections: response.JobObjections\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobObjections: []\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const jobObjections = this.state.JobObjections;\r\n\r\n        return <section>\r\n            <div class=\"page-header back-color-gradient\">\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-thumbs-down m-r-xxs\"></span>Job Objections</div>\r\n                            <p className=\"color-light\">Objections on this job, either by you or your driver, will terminate the job.</p>\r\n                            <div className=\"btn-group\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-primary\"\r\n                                    data-toggle=\"modal\"\r\n                                    data-target=\"#add-objection-dialog\">Add Objection</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <AddObjectionDialog OnGoingJobID={this.props.OnGoingJobID}\r\n                OnOK={async () => { await this.onComponentUpdated() }} />\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Job Objections</div>\r\n            {(jobObjections.length === 0) ?\r\n                <SearchingContainer Searching={this.state.Searching}\r\n                SearchingFor=\"job objctions\" /> : <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {jobObjections.map((jobObjection, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <JobObjectionContainer Index={index}\r\n                                JobObjection={jobObjection} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default Objections;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { approveJob } from \"../../../TraderFunctions\";\r\n\r\nclass ApproveJobDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false\r\n        };\r\n\r\n        this.onApprove = this.onApprove.bind(this);\r\n    }\r\n\r\n    onApprove = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const approvedJob = {\r\n            Token: localStorage.Token,\r\n        }\r\n\r\n        console.log(\"Going to approve the job...\");\r\n\r\n        await approveJob(approvedJob).then(response => {\r\n            if (response.Message === \"Job is approved.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n                return;\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"approve-job-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}\r\n                                    style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div class=\"jumbotron\">\r\n                                <div class=\"container\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-24\">\r\n                                            <img alt=\"stamp.png\" src=\"./images/stamp.png\" height=\"100\" />\r\n                                            <div class=\"type-h3\">Approve Completion</div>\r\n                                            <div class=\"type-sh3\">Your driver has finished the job. We hope your cargo is delivered.</div>\r\n                                            <p><span class=\"color-default\">Note:</span> After approving completion, you can view this job in your <span class=\"color-default\">Completed Jobs</span> tab. You can also rate and review this driver from there. You have to pay the bill from the <span class=\"color-default\">Payments</span> section.</p>\r\n                                            <div class=\"text-right\">\r\n                                                <button class=\"btn btn-primary\" onClick={this.onApprove}>Approve</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ApproveJobDialog;","import React, { Component } from \"react\";\r\n\r\nclass InteractiveRating extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Rating: 0\r\n        };\r\n\r\n        this.onRate = this.onRate.bind(this);\r\n    }\r\n\r\n    onRate = rating => {\r\n        this.props.OnRated(rating);\r\n\r\n        this.setState({\r\n            Rating: rating\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return <section>\r\n            <div class=\"rating\">\r\n                <div class=\"rating-stars\">\r\n                    <ul class=\"rating-stars-background\">\r\n                        <li><i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li>\r\n                    </ul>\r\n                    <ul class=\"rating-stars-value\" style={{ width: `${this.state.Rating}%` }}>\r\n                        <li><i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li><li>\r\n                            <i class=\"glyph glyph-star\"></i></li>\r\n                    </ul>\r\n                    <div class=\"rating-stars-input\">\r\n                        <button class=\"rating-btn\" title=\"1\" onClick={() => { this.onRate(20); }}><i class=\"glyph glyph-star\"></i></button>\r\n                        <button class=\"rating-btn\" title=\"2\" onClick={() => { this.onRate(40); }}><i class=\"glyph glyph-star\"></i></button>\r\n                        <button class=\"rating-btn\" title=\"3\" onClick={() => { this.onRate(60); }}><i class=\"glyph glyph-star\"></i></button>\r\n                        <button class=\"rating-btn\" title=\"4\" onClick={() => { this.onRate(80); }}><i class=\"glyph glyph-star\"></i></button>\r\n                        <button class=\"rating-btn\" title=\"5\" onClick={() => { this.onRate(100); }}><i class=\"glyph glyph-star\"></i></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default InteractiveRating;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport InteractiveRating from \"../../../../../controls/InteractiveRating\";\r\nimport { addDriverReviewFromOnGoingJob } from \"../../../TraderFunctions\";\r\n\r\nclass ReviewDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Rating: 0,\r\n            Review: \"\",\r\n\r\n            ValidRating: false,\r\n            ValidReview: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Review: \"0\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidReview = this.state.ValidReview;\r\n\r\n        switch (field) {\r\n            case \"Review\":\r\n                ValidReview = (value !== \"\");\r\n                Errors.Review = ValidReview ? \"\" : \"Review is required\";\r\n\r\n                if (Errors.Review !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidReview = (value.length <= 200);\r\n                Errors.Review = ValidReview ? value.length : \"Too long...\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidReview: ValidReview\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidRating && this.state.ValidReview\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newDriverReview = {\r\n            Token: localStorage.Token,\r\n            OnGoingJobID: this.props.OnGoingJobID,\r\n            Rating: this.state.Rating,\r\n            Review: this.state.Review\r\n        };\r\n\r\n        console.log(\"Going to add driver review...\");\r\n\r\n        await addDriverReviewFromOnGoingJob(newDriverReview).then(response => {\r\n            if (response.Message === \"Driver review is added.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"review-dialog-from-on-going-job\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}\r\n                                    style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h3 color-default p-t-n\">Rate and Review</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label>Rate this Driver</label>\r\n                                    <InteractiveRating OnRated={rating => {\r\n                                        this.setState({\r\n                                            Rating: rating,\r\n                                            ValidRating: true\r\n                                        }, () => {\r\n                                            this.setState({\r\n                                                ValidForm: this.state.ValidRating && this.state.ValidReview\r\n                                            });\r\n                                        });\r\n                                    }} />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label>Review</label>\r\n                                    <textarea rows=\"6\" class=\"form-control\" name=\"Review\" style={{ maxWidth: \"100%\" }}\r\n                                        value={this.state.Review} onChange={this.onChange}></textarea>\r\n                                    <span className={(this.state.Errors.Review === \"Too long...\" ||\r\n                                        this.state.Errors.Review === \"Review is required\") ? \"text-danger\" : \"text-accent\"}>{this.state.Errors.Review}</span>\r\n                                </div>\r\n                                <div className=\"text-right\">\r\n                                    <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary m-n\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>                        \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ReviewDialog;","/// <reference path=\".js\" />\r\nimport React, { Component } from \"react\";\r\nimport ApproveJobDialog from \"./ApproveJobDialog\";\r\nimport ReviewDialog from \"./ReviewDialog\";\r\n\r\nclass OnGoingJobOptions extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            DriverRated: this.props.DriverRated\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const hasObjections = this.props.HasObjections;\r\n        const completedByDriver = this.props.CompletedByDriver;\r\n        const completedByTrader = this.props.CompletedByTrader;\r\n        const onGoingJobID = this.props.OnGoingJobID;\r\n        const driverRated = this.state.DriverRated;\r\n        const showPreloader = this.state.ShowPreloader;\r\n\r\n        console.log(`DRIVER RATED: ${driverRated}`);\r\n\r\n        return hasObjections ?\r\n            <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"entity-list theme-alt\">\r\n                            <div className=\"entity-list-item\">\r\n                                <div className=\"item-icon\">\r\n                                    <span className=\"fas fa-exclamation-circle\"></span>\r\n                                </div>\r\n                                <div className=\"item-content-primary\">\r\n                                    <div className=\"content-text-primary\">Objectionable Job</div>\r\n                                    <div className=\"content-text-secondary\">\r\n                                        {driverRated ?\r\n                                            \"Since your job has got objections, Naqel team will review them, and consequently take any suitable actions!\" :\r\n                                            \"Since your job has got objections, Naqel team will review them, and consequently take any suitable actions! If you have found the driver to be problematic, you can leave a review.\"}\r\n                                    </div>\r\n                                    <div className=\"content-text-secondary\">\r\n                                        {driverRated ? <span class=\"badge back-color-danger\">DRIVER IS RATED</span> : null}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {driverRated ? null :\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-secondary\"\r\n                                    data-toggle=\"modal\"\r\n                                    data-target=\"#review-dialog-from-on-going-job\">Rate Driver</button>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n                {driverRated ?\r\n                    null :\r\n                    <ReviewDialog OnGoingJobID={onGoingJobID}\r\n                        OnOK={() => {\r\n                            this.setState({\r\n                                DriverRated: true\r\n                            });\r\n                        }} />}\r\n            </section> :\r\n            <section>\r\n                <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\" }}>\r\n                    <div className=\"container\">\r\n                        <div className=\"col-md-24\">\r\n                            <div className=\"type-h3\" style={{ color: \"#008575\", paddingTop: \"0px\" }}>Job Completion Status</div>\r\n                            <div className=\"type-sh4\">You'll be able to approve this job after your driver completes the job.</div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-24\">\r\n                                <div className=\"entity-list theme-alt\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-certificate\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Completed By Driver?</div>\r\n                                            <div className=\"content-text-secondary\">{completedByDriver ?\r\n                                                <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-certificate\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Approved By You?</div>\r\n                                            <div className=\"content-text-secondary\">{completedByTrader ?\r\n                                                <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                                <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                            {completedByDriver ? <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#approve-job-dialog\">Approve</button> : null}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ApproveJobDialog OnOK={this.props.OnJobRemoved} />\r\n            </section>;\r\n             \r\n    }\r\n};\r\n\r\nexport default OnGoingJobOptions;","import React, { Component } from \"react\";\r\nimport FirebaseApp from \"../../../../../res/FirebaseApp\";\r\nimport { getData } from \"../../../TraderFunctions\";\r\nimport ProgressBar from \"../../../../../controls/ProgressBar\";\r\nimport Job from \"./Job\";\r\nimport DriverContainer from \"../../../../../containers/driver/DriverContainer\";\r\nimport TruckContainer from \"../../../../../containers/truck/TruckContainer\";\r\nimport OnGoingJobMap from \"./OnGoingJobMap\";\r\nimport Objections from \"./objections/Objections\";\r\nimport OnGoingJobOptions from \"./OnGoingJobOptions\";\r\n\r\nclass OnGoingJob extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.Database = null;\r\n\r\n        this.state = {\r\n            OnGoingJob: null,\r\n            HasObjections: false,\r\n            DriverLocation: null,\r\n            Loading: false\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"OnGoingJob\"\r\n            };\r\n\r\n            this.setState({\r\n                Loading: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"On-going job found.\") {\r\n                    if (!this.Database) {\r\n                        this.Database = FirebaseApp.database().ref().child(`${response.OnGoingJob.DriverID}`);\r\n                    }\r\n\r\n                    this.Database.on(\"value\", snapshot => {\r\n                        let driverLocation = null;\r\n                        const value = snapshot.val();\r\n\r\n                        if (value) {\r\n                            const locationCoordinates = value[\"latlong\"].split(\",\");\r\n\r\n                            driverLocation = {\r\n                                Lat: parseFloat(locationCoordinates[0]),\r\n                                Lng: parseFloat(locationCoordinates[1])\r\n                            };\r\n                        }\r\n\r\n                        this.setState({\r\n                            DriverLocation: driverLocation,\r\n                            OnGoingJob: response.OnGoingJob,\r\n                            HasObjections: response.HasObjections,\r\n                            Loading: false\r\n                        });\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        OnGoingJob: null,\r\n                        DriverLocation: null,\r\n                        HasObjections: false,\r\n                        Loading: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"OnGoingJob\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"On-going job found.\") {\r\n                    if (!this.Database) {\r\n                        this.Database = FirebaseApp.database().ref().child(`${response.OnGoingJob.DriverID}`);\r\n                    }\r\n\r\n                    this.Database.on(\"value\", snapshot => {\r\n                        let driverLocation = null;\r\n                        const value = snapshot.val();\r\n\r\n                        if (value) {\r\n                            const locationCoordinates = value[\"latlong\"].split(\",\");\r\n\r\n                            driverLocation = {\r\n                                Lat: parseFloat(locationCoordinates[0]),\r\n                                Lng: parseFloat(locationCoordinates[1])\r\n                            };\r\n                        }\r\n\r\n                        this.setState({\r\n                            DriverLocation: driverLocation,\r\n                            OnGoingJob: response.OnGoingJob,\r\n                            HasObjections: response.HasObjections\r\n                        });\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        OnGoingJob: null,\r\n                        HasObjections: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.Loading || !this.state.OnGoingJob) {\r\n            return <div className=\"jumbotron theme-alt\" style={{ backgroundColor: \"#333333\", width: \"100%\", height: \"100vh\" }}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 col-md-push-12 text-center\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                alt=\"on_going_jobs.png\" src=\"./images/on_going_jobs.png\" data-source-index=\"2\" />\r\n                        </div>\r\n                        <div className=\"col-md-12 col-md-pull-12\">\r\n                            <div className=\"type-h3\">On-Going Job</div>\r\n                            {this.state.Loading ?\r\n                                <div>\r\n                                    <div class=\"type-sh3\" style={{ color: \"#008575\" }}>Searhcing</div>\r\n                                    <ProgressBar />\r\n                                </div> :\r\n                                <div className=\"type-sh3\">Couldn't Find Your Job...</div>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n        }\r\n        else {\r\n            const onGoingJob = this.state.OnGoingJob;\r\n            const hasObjections = this.state.HasObjections;\r\n\r\n            return <section>\r\n                {hasObjections ?\r\n                    <div class=\"alert alert-danger m-n\">\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xs-24\">\r\n                                    <p><span className=\"fas fa-exclamation-circle m-r-xxxs\"></span>This job has objections, and it cannot be finished now. Actions are pending by Naqel. For more information, please tap on <span className=\"color-default\">Objections</span> tab.</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div> :\r\n                    null}\r\n                <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                    <li role=\"presentation\" className=\"active\">\r\n                        <a href=\"#job-tab\" aria-controls=\"job-tab\" role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={this.refresh}>Job</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#driver-tab\" aria-controls=\"driver-tab\" role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={async () => { await this.RefreshDriverContainer(); }}>Driver</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#truck-tab\" aria-controls=\"truck-tab\" role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={async () => { await this.RefreshTruckContainer(); }}>Truck</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#map-tab\" aria-controls=\"map-tab\" role=\"tab\" data-toggle=\"tab\">Map</a>\r\n                    </li>\r\n                    {onGoingJob.CompletedByDriver ?\r\n                        null :\r\n                        <li role=\"presentation\">\r\n                            <a href=\"#objections-tab\" aria-controls=\"objections-tab\" role=\"tab\" data-toggle=\"tab\"\r\n                                onClick={async () => { await this.RefreshObjections(); }}>Objections</a>\r\n                        </li>}\r\n                </ul>\r\n\r\n                <div className=\"tab-content\">\r\n\r\n                    <div role=\"tabpanel\" className=\"tab-pane active\" id=\"job-tab\">\r\n                        <Job OnGoingJob={onGoingJob} HasObjections={hasObjections} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"driver-tab\">\r\n                        <DriverContainer Refresh={refresh => { this.RefreshDriverContainer = refresh; }} DriverID={onGoingJob.DriverID} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"truck-tab\">\r\n                        <TruckContainer Refresh={refresh => { this.RefreshTruckContainer = refresh; }} DriverID={onGoingJob.DriverID} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"map-tab\">\r\n                        <OnGoingJobMap OnGoingJob={onGoingJob}\r\n                            DriverLocation={this.state.DriverLocation} />\r\n                    </div>\r\n                    {onGoingJob.CompletedByDriver ? \r\n                        null :\r\n                        <div role=\"tabpanel\" className=\"tab-pane\" id=\"objections-tab\">\r\n                            <Objections Refresh={refresh => { this.RefreshObjections = refresh; }} OnGoingJobID={onGoingJob.OnGoingJobID} />\r\n                        </div>}\r\n                </div>\r\n\r\n                <OnGoingJobOptions HasObjections={hasObjections}\r\n                    CompletedByDriver={onGoingJob.CompletedByDriver}\r\n                    CompletedByTrader={onGoingJob.CompletedByTrader}\r\n                    OnGoingJobID={onGoingJob.OnGoingJobID}\r\n                    DriverRated={onGoingJob.DriverRated}\r\n                    OnJobRemoved={this.onComponentUpdated} />\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default OnGoingJob;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport InteractiveRating from \"../../../../../controls/InteractiveRating\";\r\nimport { addDriverReview } from \"../../../TraderFunctions\";\r\n\r\nclass ReviewDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Rating: 0,\r\n            Review: \"\",\r\n\r\n            ValidRating: false,\r\n            ValidReview: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Review: \"0\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidReview = this.state.ValidReview;\r\n\r\n        switch (field) {\r\n            case \"Review\":\r\n                ValidReview = (value !== \"\");\r\n                Errors.Review = ValidReview ? \"\" : \"Review is required\";\r\n\r\n                if (Errors.Review !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidReview = (value.length <= 200);\r\n                Errors.Review = ValidReview ? value.length : \"Too long...\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidReview: ValidReview\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidRating && this.state.ValidReview\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newDriverReview = {\r\n            Token: localStorage.Token,\r\n            CompletedJobID: this.props.CompletedJobID,\r\n            Rating: this.state.Rating,\r\n            Review: this.state.Review\r\n        };\r\n\r\n        console.log(\"Going to add driver review...\");\r\n\r\n        await addDriverReview(newDriverReview).then(response => {\r\n            if (response.Message === \"Driver review is added.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.cancelButton.click();\r\n                this.props.OnOK(response.DriverReview);\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`review-dialog-${this.props.DialogID}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {this.state.ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}\r\n                                    style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"type-h3 color-default p-t-n\">Rate and Review</div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div class=\"form-group\">\r\n                                    <label>Rate this Driver</label>\r\n                                    <InteractiveRating OnRated={rating => {\r\n                                        this.setState({\r\n                                            Rating: rating,\r\n                                            ValidRating: true\r\n                                        }, () => {\r\n                                            this.setState({\r\n                                                ValidForm: this.state.ValidRating && this.state.ValidReview\r\n                                            });\r\n                                        });\r\n                                    }} />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label>Review</label>\r\n                                    <textarea rows=\"6\" class=\"form-control\" name=\"Review\" style={{ maxWidth: \"100%\" }}\r\n                                        value={this.state.Review} onChange={this.onChange}></textarea>\r\n                                    <span className={(this.state.Errors.Review === \"Too long...\" ||\r\n                                        this.state.Errors.Review === \"Review is required\") ? \"text-danger\" : \"text-accent\"}>{this.state.Errors.Review}</span>\r\n                                </div>\r\n                                <div className=\"text-right\">\r\n                                    <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary m-n\" disabled={!this.state.ValidForm} />\r\n                                </div>\r\n                            </form>                        \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ReviewDialog;","import React, { Component } from \"react\";\r\nimport CompletedJobContainer from \"../../../../../containers/completedJob/CompletedJobContainer\";\r\nimport DriverContainer from \"../../../../../containers/driver/DriverContainer\";\r\nimport ReviewDialog from \"./ReviewDialog\";\r\nimport Rating from \"../../../../../controls/Rating\";\r\n\r\nclass CompletedJobPackageListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const completedJob = this.props.CompletedJobPackage.CompletedJob;\r\n        const billPaid = this.props.CompletedJobPackage.BillPaid;\r\n        const driverReview = this.props.CompletedJobPackage.DriverReview;\r\n\r\n        return <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n            {!billPaid ?\r\n                <div class=\"alert alert-danger m-n p-n\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xs-24\">\r\n                                <p><span className=\"fas fa-exclamation-circle m-r-xxxs\"></span>Please pay the bill for this job from <span className=\"color-default\">Payments</span> section.\r\n                                    If you have uploaded a payment proof, then please wait for the driver to approve your payment.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> :\r\n                <div class=\"alert alert-info m-n p-n\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xs-24\">\r\n                                <p><span className=\"fas fa-check-circle m-r-xxxs\"></span>The bill has been paid! View bill details from the <span className=\"color-default\">Payments</span> section.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n\r\n            <CompletedJobContainer Index={index} CompletedJob={completedJob} />\r\n\r\n            {driverReview ?\r\n                <div class=\"alert alert-info m-n p-n\" style={{ backgroundColor: \"#E5E5E5\", borderTop: \"2px solid #CCCCCC\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-24\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-star\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Rating</div>\r\n                                        <div className=\"content-text-secondary\"><Rating Rating={driverReview.Rating} Color=\"\" Size=\"rating-small\" /></div>\r\n                                        <div className=\"content-text-primary\">Review</div>\r\n                                        <div className=\"content-text-secondary\">{driverReview.Review}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> :\r\n                <div class=\"alert alert-info m-n p-n\" style={{ backgroundColor: \"#E5E5E5\", borderTop: \"2px solid #CCCCCC\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-20\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-star\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Rate and Review the Driver</div>\r\n                                        <div className=\"content-text-secondary\">Your reviews means a lot to us and the driver too.</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-4 text-right\">\r\n                            <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target={`#review-dialog-${index}`}>Write a Review</button>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n\r\n            <ReviewDialog DialogID={index}\r\n                CompletedJobID={completedJob.CompletedJobID}\r\n                OnOK={this.props.OnReviewAdded}/>\r\n\r\n            <div className=\"back-color-gray\" data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#completed-job-${index}`}\r\n                onClick={async () => { await this.RefreshDriverContainer(); }}>\r\n                <div className=\"type-h4 color-default text-right p-xxxs\">Driver Details\r\n                    <i className=\"fas fa-ellipsis-v\"></i>\r\n                    <i class=\"glyph glyph-add\"></i>\r\n                    <i class=\"glyph glyph-remove\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`completed-job-${index}`}>\r\n                <DriverContainer Refresh={refresh => { this.RefreshDriverContainer = refresh; }} DriverID={completedJob.DriverID} />\r\n            </div>\r\n        </li>;\r\n    }\r\n};\r\n\r\nexport default CompletedJobPackageListItem;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport CompletedJobPackageListItem from \"./CompletedJobPackageListItem\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport { getData } from \"../../../TraderFunctions\";\r\n\r\nclass CompletedJobsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllCompletedJobPackages: [],\r\n            CompletedJobPackages: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        }\r\n        \r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"CompletedJobPackages\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Completed job packages found.\") {\r\n                    this.setState({\r\n                        AllCompletedJobPackages: response.CompletedJobPackages,\r\n                        CompletedJobPackages: response.CompletedJobPackages,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllCompletedJobPackages: [],\r\n                        CompletedJobPackages: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"CompletedJobPackages\"\r\n            };\r\n\r\n            this.setState({\r\n                Refreshing: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Completed job packages found.\") {\r\n                    this.setState({\r\n                        AllCompletedJobPackages: response.CompletedJobPackages,\r\n                        CompletedJobPackages: response.CompletedJobPackages,\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllCompletedJobPackages: [],\r\n                        CompletedJobPackages: [],\r\n                        Refreshing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.SearchDate === \"\") {\r\n            this.setState({\r\n                CompletedJobPackages: this.state.AllCompletedJobPackages\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allCompletedJobPackages = this.state.AllCompletedJobPackages;\r\n        let filteredCompletedJobPackages = [];\r\n        let count = 0;\r\n        let searchString = this.state.SearchString;\r\n\r\n        for (let completedJobPackage of allCompletedJobPackages) {\r\n            let completedJob = completedJobPackage.CompletedJob;\r\n\r\n            if (completedJob.JobNumber.includes(searchString)) {\r\n                filteredCompletedJobPackages[count++] = completedJobPackage;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            CompletedJobPackages: filteredCompletedJobPackages\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const completedJobPackages = this.state.CompletedJobPackages;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-check m-r-xxs\"></span>Completed Jobs</div>\r\n                            <p className=\"color-light\">{`You have assigned ${completedJobPackages.length} jobs so far. Have more cargo to deliver? Add a Job Offer now, or browse some Job Requests.`}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Your Completed Jobs\r\n                    {this.state.Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search Jobs\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={this.state.SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div> \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            {(completedJobPackages.length === 0) ?\r\n                <SearchingContainer Searching={this.state.Searching}\r\n                    SearchingFor=\"completed jobs\" /> :\r\n                <ol className=\"list-items\" style={{ margin: \"0px\" }}>\r\n                    {completedJobPackages.map((completedJobPackage, index) => {\r\n                        return <CompletedJobPackageListItem key={index}\r\n                            Index={index} CompletedJobPackage={completedJobPackage}\r\n                            OnReviewAdded={driverReview => {\r\n                                let completedJobPackages = this.state.CompletedJobPackages;\r\n\r\n                                for (let jobPackage of completedJobPackages) {\r\n                                    if (jobPackage === completedJobPackage) {\r\n                                        jobPackage.DriverReview = driverReview;\r\n                                        break;\r\n                                    }\r\n                                }\r\n\r\n                                this.setState({\r\n                                    CompletedJobPackages: completedJobPackages\r\n                                });\r\n                            }} />;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default CompletedJobsList;","import React, { Component } from \"react\";\r\nimport CompletedJobsList from \"./CompletedJobsList\";\r\n\r\nclass CompletedJobs extends Component {\r\n   render() {\r\n       return <section>\r\n           <CompletedJobsList Refresh={this.props.Refresh} />\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default CompletedJobs;","import React, { Component } from \"react\";\r\nimport JobRequests from \"./jobRequests/JobRequests.js\"; \r\nimport JobOffers from \"./jobOffers/JobOffers.js\";\r\nimport OnGoingJob from \"./onGoingJob/OnGoingJob.js\";\r\nimport CompletedJobs from \"./completedJobs/CompletedJobs\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Jobs extends Component {\r\n    render() {\r\n        return (\r\n            <section>\r\n                {/* <PageHeading Heading=\"JOBS\" /> */}\r\n                <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                    padding: \"10px\",\r\n                    backgroundColor: \"#3A3A3C\",\r\n                    width: \"100%\",\r\n                    margin: \"0px\",\r\n                }}>\r\n                    <li role=\"presentation\" className=\"active\">\r\n                        <a href=\"#job-requests\" aria-controls=\"job-requests\" role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={async () => { await this.RefreshJobRequests(); }}>Job Requests</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#job-offers\" aria-controls=\"job-offers\" role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={async () => { await this.RefreshJobOffers(); }}>Job Offers</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#on-going-job\" aria-controls=\"on-going-job\" role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={async () => { await this.RefreshOnGoingJob(); }}>On-Going Job</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#completed-jobs\" aria-controls=\"completed-jobs\" role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={async () => { await this.RefreshCompletedJobs(); }}>Completed Jobs</a>\r\n                    </li>\r\n                </ul>\r\n                <div className=\"tab-content\">\r\n                    <div role=\"tabpanel\" className=\"tab-pane active\" id=\"job-requests\">\r\n                        <JobRequests Refresh={refresh => { this.RefreshJobRequests = refresh; }} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"job-offers\">\r\n                        <JobOffers Refresh={refresh => { this.RefreshJobOffers = refresh; }} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"on-going-job\">\r\n                        <OnGoingJob Refresh={refresh => { this.RefreshOnGoingJob = refresh; }} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"completed-jobs\">\r\n                        <CompletedJobs Refresh={refresh => { this.RefreshCompletedJobs = refresh; }} />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Jobs;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../containers/searching/SearchingContainer\";\r\nimport Strings from \"../../../../res/strings\";\r\nimport { getData } from \"../../TraderFunctions\";\r\n\r\nclass Bill extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            BillData: null,\r\n            Searching: false\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"BillData\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Bill data found.\") {\r\n                    this.setState({\r\n                        BillData: response.BillData,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        BillData: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const billData = this.state.BillData;\r\n        const searching = this.state.Searching;\r\n        \r\n\r\n        if (searching || !billData) {\r\n            return <SearchingContainer Searching={searching}\r\n                SearchingFor=\"bill data\" />;\r\n        }\r\n        else {\r\n            const bill = this.props.Bill;\r\n\r\n            return <section>\r\n                <div className=\"jumbotron theme-default back-color-light\">\r\n                    <div className=\"container\">\r\n                        <div className=\"type-t3\" style={{ fontWeight: \"600\" }}><span className=\"fas fa-route m-r-xxxs\"></span>NAQEL</div>\r\n\r\n                        <div className=\"p-t-xxs\">\r\n                            <div className=\"type-t9\">123 Naqel Street</div>\r\n                            <div className=\"type-t9\">Wah, Punjab, Pakistan.</div>\r\n                            <div className=\"type-t9\">ZIP 47000</div>\r\n                        </div>\r\n\r\n                        <div className=\"p-t-xxs\">\r\n                            <div className=\"type-t9\">+92 318 5037972</div>\r\n                            <div className=\"type-t9\">naqel-transport-jobs.firebaseapp.com</div>\r\n                            <div className=\"type-t9\">Naqel Transport Jobs</div>\r\n                        </div>\r\n\r\n                        <div className=\"type-t7 p-t-xxs\">BILLED TO</div>\r\n                        <div className=\"p-t-xxs\">\r\n                            <div className=\"type-t9\">{`${billData.FirstName} ${billData.LastName}`}</div>\r\n                            <div className=\"type-t9\">{billData.Address}</div>\r\n                        </div>\r\n\r\n                        <div className=\"type-t7 p-t-xxs\">INVOICE</div>\r\n                        <div className=\"p-t-xxs\">\r\n                            <div className=\"type-t9\">INVOICE #</div>\r\n                            <div className=\"type-t9\">{bill.BillNumber}</div>\r\n                            <div className=\"type-t9 p-t-xxxs\">DATE OF ISSUE</div>\r\n                            <div className=\"type-t9\">{new Date(bill.Created).toDateString()}</div>\r\n                            <div className=\"type-t9 p-t-xxxs\">INVOICE TOTAL</div>\r\n                            <div className=\"type-t3 color-default\">{`${bill.Amount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default Bill;","import React, { Component } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport Bill from \"./Bill\";\r\n\r\nclass PrintBillDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const bill = this.props.Bill;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`print-bill-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <Bill Bill={bill} ref={bill => (this.Bill = bill)} />\r\n                            <div className=\"text-right back-color-gray p-xxs\">\r\n                                <ReactToPrint\r\n                                    trigger={() => <button className=\"btn btn-primary m-n\">Print</button>}\r\n                                    content={() => this.Bill} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PrintBillDialog;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../containers/searching/SearchingContainer\";\r\nimport Strings from \"../../../../res/strings\";\r\nimport { getData } from \"../../TraderFunctions\";\r\n\r\nclass SpecialBill extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            BillData: null,\r\n            Searching: false\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"BillData\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Bill data found.\") {\r\n                    this.setState({\r\n                        BillData: response.BillData,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        BillData: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const billData = this.state.BillData;\r\n        const searching = this.state.Searching;\r\n        \r\n\r\n        if (searching || !billData) {\r\n            return <SearchingContainer Searching={searching}\r\n                SearchingFor=\"bill data\" />;\r\n        }\r\n        else {\r\n            const bill = this.props.Bill;\r\n\r\n            return <section>\r\n                <div className=\"jumbotron theme-default back-color-light\">\r\n                    <div className=\"container\">\r\n                        <div className=\"p-t-xxs\">\r\n                            <div className=\"type-t9\">123 Naqel Street</div>\r\n                            <div className=\"type-t9\">Wah, Punjab, Pakistan.</div>\r\n                            <div className=\"type-t9\">ZIP 47000</div>\r\n                        </div>\r\n\r\n                        <div className=\"p-t-xxs\">\r\n                            <div className=\"type-t9\">+92 318 5037972</div>\r\n                            <div className=\"type-t9\">naqel-transport-jobs.firebaseapp.com</div>\r\n                            <div className=\"type-t9\">Naqel Transport Jobs</div>\r\n                        </div>\r\n\r\n                        <div className=\"type-t7 p-t-xxs\">BILLED TO</div>\r\n                        <div className=\"p-t-xxs\">\r\n                            <div className=\"type-t9\">{`${billData.FirstName} ${billData.LastName}`}</div>\r\n                            <div className=\"type-t9\">{billData.Address}</div>\r\n                        </div>\r\n\r\n                        <div className=\"type-t7 p-t-xxs\">INVOICE</div>\r\n                        <div className=\"p-t-xxs\">\r\n                            <div className=\"type-t9\">INVOICE #</div>\r\n                            <div className=\"type-t9\">{bill.BillNumber}</div>\r\n                            <div className=\"type-t9 p-t-xxxs\">DATE OF ISSUE</div>\r\n                            <div className=\"type-t9\">{new Date(bill.SpecialTraderBill.Created).toDateString()}</div>\r\n                            <div className=\"type-t9 p-t-xxxs\">INVOICE TOTAL</div>\r\n                            <div className=\"type-t3 color-default\">{`${bill.SpecialTraderBill.Amount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default SpecialBill;","import React, { Component } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport SpecialBill from \"./SpecialBill\";\r\n\r\nclass PrintSpecialBillDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const bill = this.props.Bill;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`print-special-bill-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <SpecialBill Bill={bill} ref={bill => (this.Bill = bill)} />\r\n                            <div className=\"text-right back-color-gray p-xxs\">\r\n                                <ReactToPrint\r\n                                    trigger={() => <button className=\"btn btn-primary m-n\">Print</button>}\r\n                                    content={() => this.Bill} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PrintSpecialBillDialog;","import React, { Component } from \"react\";\r\nimport ImageUploader from \"../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { addTraderPayProof } from \"../../TraderFunctions\";\r\n\r\nclass AddPayProofDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PhotoURL: \"./images/default_image.png\",\r\n\r\n            ValidPhotoURL: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                PhotoURL: \"\"\r\n            }\r\n        };\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidPhotoURL = this.state.ValidPhotoURL;\r\n\r\n        switch (field) {\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidPhotoURL\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const newTraderPayProof = {\r\n            Token: localStorage.Token,\r\n            TraderBillID: this.props.TraderBillID,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        console.log(\"Going to add trader pay proof.\");\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        await addTraderPayProof(newTraderPayProof).then(response => {\r\n            if (response.Message === \"Trader pay proof is added.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const showPreloader = this.state.ShowPreloader;\r\n        const index = this.props.Index;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`add-pay-proof-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {showPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <ImageUploader\r\n                                                    Source={this.state.PhotoURL}\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", this.state.PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }} />\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"text-danger\"></label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Upload Payment Proof</div>\r\n                                                <div className=\"type-sh3\"> The proof of a payment can be a Bank Transfer Receipt.</div>\r\n                                                <div className=\"type-sh4 text-danger\">{this.state.Errors.PhotoURL}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Upload\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddPayProofDialog;","import React, { Component } from \"react\";\r\nimport PayProofContainer from \"../../../../containers/payProof/PayProofContainer\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { deleteTraderPayProof } from \"../../TraderFunctions\";\r\n\r\nclass PayProofDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        if (this.props.PayProof.Approved) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        let discardedTraderPayProof = {\r\n            Token: localStorage.Token,\r\n            TraderPayProofID: this.props.PayProof.TraderPayProofID\r\n        };\r\n\r\n        console.log(`Going to delete Trader pay proof.`);\r\n\r\n        await deleteTraderPayProof(discardedTraderPayProof).then(response => {\r\n            if (response.Message === \"Trader pay proof is deleted.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.props.OnPayProofDeleted();\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const showPreloader = this.state.ShowPreloader;\r\n        const payProof = this.props.PayProof;\r\n        const jobNumber = this.props.JobNumber;\r\n\r\n        return <section>\r\n            {payProof.Approved ?\r\n                null :\r\n                <div class=\"alert alert-danger m-n p-n\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xs-24\">\r\n                                <p><span className=\"fas fa-exclamation-circle m-r-xxxs\"></span>PENDING APPROVAL: The driver will approve this proof. See driver details from <span className=\"color-default\">Completed Jobs</span> section for Job Number: <span className=\"color-default\">{jobNumber}</span>.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n            <PayProofContainer PayProof={payProof} />\r\n            {payProof.Approved ? \r\n                null : \r\n                <div className=\"text-right back-color-gray p-xxs\">\r\n                    <button className=\"btn btn-danger m-n\" onClick={this.onDelete}>Delete</button>\r\n                </div>}\r\n            {showPreloader ? <Preloader /> : null}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PayProofDetails;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../containers/searching/SearchingContainer\";\r\nimport PayProofDetails from \"./PayProofDetails\";\r\nimport PayDetailsContainer from \"../../../../containers/payDetails/PayDetailsContainer\";\r\nimport { getData } from \"../../TraderFunctions\";\r\n\r\nclass PaymentDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PaymentDetails: null,\r\n            Searching: false,\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.Refresh(this.refresh);\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"PaymentDetails\",\r\n                Params: {\r\n                    TraderBillID: this.props.TraderBillID\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                console.log(\"PAYMENT\");\r\n                console.log(response);\r\n                if (response.Message === \"Payment details found.\") {\r\n                    this.setState({\r\n                        PaymentDetails: response.PaymentDetails,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        PaymentDetails: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    refresh = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"PaymentDetails\",\r\n                Params: {\r\n                    TraderBillID: this.props.TraderBillID\r\n                }\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Payment details found.\") {\r\n                    this.setState({\r\n                        PaymentDetails: response.PaymentDetails\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        PaymentDetails: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            PaymentDetails,\r\n            Searching\r\n        } = this.state;\r\n\r\n        if (Searching || !PaymentDetails) {\r\n            return <SearchingContainer Searching={Searching}\r\n                SearchingFor=\"payment details\" />;\r\n        }\r\n        else {\r\n            if (PaymentDetails.IsOnlinePayment) {\r\n                return <PayDetailsContainer PayDetails={PaymentDetails.PayDetails} />\r\n            }\r\n            else {\r\n                const {\r\n                    JobNumber\r\n                } = this.props;\r\n\r\n                return <PayProofDetails PayProof={PaymentDetails.PayProof}\r\n                    JobNumber={JobNumber}\r\n                    OnPayProofDeleted={this.props.OnPayProofDeleted} />;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport default PaymentDetails;","import React, { Component } from \"react\";\r\nimport { CardElement } from \"@stripe/react-stripe-js\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport Strings from \"../../../../res/strings\";\r\nimport { getClientSecret, addTraderPayDetails } from \"../../TraderFunctions\";\r\n\r\nclass PayOnlineDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Owner: \"\",\r\n            Email: \"\",\r\n\r\n            ValidOwner: false,\r\n            ValidEmail: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n            ShowCard: false,\r\n\r\n            Errors: {\r\n                Owner: \"\",\r\n                Email: \"\",\r\n                CheckOut: \"\"\r\n            }\r\n        };\r\n\r\n        this.toggleCard = this.toggleCard.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onCardInputChange = this.onCardInputChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.ToggleCard(this.toggleCard);\r\n    }\r\n\r\n    onCardInputChange = event => {\r\n        let Errors = this.state.Errors;\r\n        Errors.CheckOut = event.error ? event.error.message : \"\";\r\n\r\n        this.setState({\r\n            Errors: Errors\r\n        });\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidOwner = this.state.ValidOwner;\r\n        let ValidEmail = this.state.ValidEmail;\r\n\r\n        switch (field) {\r\n            case \"Owner\":\r\n                ValidOwner = (value !== \"\");\r\n                Errors.Owner = ValidOwner ? \"\" : \"Card owner name is required.\";\r\n\r\n                if (Errors.Owner !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidOwner = value.match(/^[a-zA-Z ]+$/);\r\n                Error.Owner = ValidOwner ? \"\" : \"Invalid owner name.\";\r\n                break;\r\n            case \"Email\":\r\n                ValidEmail = (value !== \"\");\r\n                Errors.Email = ValidEmail ? \"\" : \"Email is required.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidEmail = (value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i));\r\n                Errors.Email = ValidEmail ? \"\" : \"Email is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidOwner: ValidOwner,\r\n            ValidEmail: ValidEmail,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidOwner &&\r\n                        this.state.ValidEmail\r\n            });\r\n        });\r\n    }\r\n\r\n    toggleCard = toggle => {\r\n        this.setState({\r\n            ShowCard: toggle\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const bill = this.props.Bill;\r\n\r\n        const billingDetails = {\r\n            name: this.state.Owner,\r\n            email: this.state.Email\r\n        };\r\n\r\n        const newClientSecret = {\r\n            Token: localStorage.Token,\r\n            Amount: bill.Amount * 100\r\n        };\r\n\r\n        const stripe = this.props.Stripe;\r\n        const elements = this.props.Elements;\r\n\r\n        const cardElement = elements.getElement(CardElement);\r\n\r\n        try {\r\n            await getClientSecret(newClientSecret).then(async response => {\r\n                if (response.Message === \"Client secret found.\") {\r\n                    const clientSecret = response.ClientSecret;\r\n\r\n                    const paymentMethodRequest = await stripe.createPaymentMethod({\r\n                        type: \"card\",\r\n                        card: cardElement,\r\n                        billing_details: billingDetails\r\n                    });\r\n\r\n                    if (paymentMethodRequest.error) {\r\n                        let Errors = this.state.Errors;\r\n                        Errors.CheckOut = paymentMethodRequest.error.message;\r\n\r\n                        this.setState({\r\n                            Errors: Errors,\r\n                            ShowPreloader: false\r\n                        });\r\n\r\n                        return;\r\n                    }\r\n\r\n                    const newTraderPayDetails = {\r\n                        Token: localStorage.Token,\r\n                        TraderBillID: this.props.Bill.TraderBillID,\r\n                        OwnerName: this.state.Owner,\r\n                        OwnerEmail: this.state.Email,\r\n                        CardType: paymentMethodRequest.paymentMethod.card.brand\r\n                    };\r\n\r\n                    const { error } = await stripe.confirmCardPayment(clientSecret, {\r\n                        payment_method: paymentMethodRequest.paymentMethod.id\r\n                    });\r\n\r\n                    if (error) {\r\n                        let Errors = this.state.Errors;\r\n                        Errors.CheckOut = error.message;\r\n\r\n                        this.setState({\r\n                            Errors: Errors,\r\n                            ShowPreloader: false\r\n                        });\r\n\r\n                        return;\r\n                    }\r\n\r\n                    await addTraderPayDetails(newTraderPayDetails).then(response => {\r\n                        this.setState({\r\n                            ShowPreloader: false\r\n                        });\r\n\r\n                        if (response.Message === \"Pay details are added.\") {\r\n                            this.toggleCard(false);\r\n                            this.cancelButton.click();\r\n                            this.props.OnOK();\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        ShowPreloader: false\r\n                    });\r\n                }\r\n            });\r\n        } catch (error) {\r\n            let Errors = this.state.Errors;\r\n            Errors.CheckOut = error.message;\r\n\r\n            this.setState({\r\n                Errors: Errors\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ShowCard\r\n        } = this.state;\r\n\r\n        const showPreloader = this.state.ShowPreloader;\r\n        const index = this.props.Index;\r\n        const bill = this.props.Bill;\r\n\r\n        const iframeStyles = {\r\n            base: {\r\n                color: \"#000000\",\r\n                fontSize: \"15px\",\r\n                fontFamily: \"Segoe UI\",\r\n                iconColor: \"#000000\"\r\n            },\r\n            invalid: {\r\n                iconColor: \"#D75A4A\",\r\n                color: \"#D75A4A\"\r\n            },\r\n            complete: {\r\n                iconColor: \"#008575\"\r\n            }\r\n        };\r\n\r\n        const cardElementOpts = {\r\n            iconStyle: \"solid\",\r\n            style: iframeStyles,\r\n            hidePostalCode: true\r\n        };\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`pay-online-dialog-${index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {showPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    onClick={() => { this.toggleCard(false); }}\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Pay Online</div>\r\n                                                <div className=\"type-sh3 m-b-xxs\">Pay the bill with your credit card.</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Owner Name</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"Owner\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={this.state.Owner} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Owner}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Owner Email</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"email\" name=\"Email\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        placeholder=\"someone@mail.com\" value={this.state.Email} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{this.state.Errors.Email}</span>\r\n                                                </div>\r\n\r\n                                                <div className=\"type-sh4\">\r\n                                                    <span className=\"fab fa-cc-visa\"></span>\r\n                                                    <span className=\"fab fa-cc-mastercard m-l-xxxs\"></span>\r\n                                                    <span className=\"fab fa-cc-amex m-l-xxxs\"></span>\r\n                                                    <span className=\"fab fa-cc-discover m-l-xxxs\"></span>\r\n                                                    <span className=\"fab fa-cc-diners-club m-l-xxxs\"></span>\r\n                                                    <span className=\"fab fa-cc-jcb m-l-xxxs\"></span>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Credit Card Information</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <div className=\"form-control p-t-xxxs p-b-xxxs\"\r\n                                                        style={{\r\n                                                            maxWidth: \"100%\",\r\n                                                            width: \"100%\",\r\n                                                            borderColor: \"rgba(0, 0, 0, 0.6)\"\r\n                                                        }}>\r\n                                                        {ShowCard ? \r\n                                                            <CardElement\r\n                                                                options={cardElementOpts}\r\n                                                                onChange={this.onCardInputChange} /> : null}\r\n                                                    </div>\r\n                                                    <span className=\"text-danger\">{this.state.Errors.CheckOut}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value={`Pay ${bill.Amount.toFixed(2)} ${Strings.SAUDI_RIYAL}`} className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PayOnlineDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { requestSpecialBill } from \"../../TraderFunctions\";\r\n\r\nclass RequestSpecialBillDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Price: 0,\r\n\r\n            ValidPrice: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Price: \"\"\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidPrice\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"Price\":\r\n                ValidPrice = (value !== \"\");\r\n                Errors.Price = ValidPrice ? \"\" : \"Temporary is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidPrice: ValidPrice\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: ValidPrice\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const requestedSpecialBill = {\r\n            Token: localStorage.Token,\r\n            TraderBillID: this.props.TraderBill.TraderBillID,\r\n            Amount: this.state.Price\r\n        };\r\n\r\n        await requestSpecialBill(requestedSpecialBill).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Special bill is requested.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK(response.SpecialTraderBill);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Price,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            TraderBill\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`request-special-bill-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"type-h3 color-default p-t-xxs\">Request Special Bill</div>\r\n                                        <div className=\"type-sh3\">{`Current amount is $${TraderBill.Amount.toFixed(2)}.`}</div>\r\n                                        <div className=\"row p-t-xxs\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Temporary Amount (USD)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" step=\"0.01\" name=\"Price\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={Price} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.Price}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Request\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default RequestSpecialBillDialog;","import React, { Component } from \"react\";\r\nimport { ElementsConsumer } from \"@stripe/react-stripe-js\";\r\nimport BillContainer from \"../../../../containers/bill/BillContainer\";\r\nimport PrintBillDialog from \"./PrintBillDialog\";\r\nimport PrintSpecialBillDialog from \"./PrintSpecialBillDialog\";\r\nimport AddPayProofDialog from \"./AddPayProofDialog\";\r\nimport PaymentDetails from \"./PaymentDetails\";\r\nimport PayOnlineDialog from \"./PayOnlineDialog\";\r\nimport RequestSpecialBillDialog from \"./RequestSpecialBillDialog\";\r\n\r\nclass BillListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const index = this.props.Index;\r\n        const bill = this.props.Bill;\r\n        const canRequestSpecialBills = this.props.CanRequestSpecialBills;\r\n\r\n        return <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n            <BillContainer Index={index} Bill={bill} />\r\n\r\n            <div className=\"text-right back-color-gray p-xxs\">\r\n                <button className=\"btn btn-secondary\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#print-bill-dialog-${index}`}>Print Bill</button>\r\n\r\n                {bill.HasPayProof || bill.HasPayDetails ?\r\n                    null :\r\n                    <button className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#pay-online-dialog-${index}`}\r\n                        onMouseDown={() => { this.ToggleCard(true); }}>Pay Online</button>}\r\n\r\n                {bill.HasPayProof || bill.HasPayDetails ?\r\n                    null :\r\n                    <button className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#add-pay-proof-dialog-${index}`}>Upload Pay Proof</button>}\r\n\r\n                {canRequestSpecialBills ?\r\n                    <section>{bill.SpecialTraderBill ? \r\n                        <button className=\"btn btn-secondary\"\r\n                            data-toggle=\"modal\"\r\n                            data-target={`#print-special-bill-dialog-${index}`}>Print Special Bill</button> : \r\n                        <button className=\"btn btn-primary\"\r\n                            data-toggle=\"modal\"\r\n                            data-target={`#request-special-bill-dialog-${index}`}>Request Special Bill</button>}</section> : null}\r\n            </div>\r\n\r\n            <div className=\"back-color-gray\" data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#bill-${index}`}\r\n                onMouseDown={async () => { await this.RefreshPaymentDetails(); }}>\r\n                <div className=\"type-h4 color-default text-right p-xxxs\">Payment Details\r\n                    <i className=\"fas fa-ellipsis-v\"></i>\r\n                    <i class=\"glyph glyph-add\"></i>\r\n                    <i class=\"glyph glyph-remove\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`bill-${index}`}>\r\n                <PaymentDetails Refresh={refresh => { this.RefreshPaymentDetails = refresh; }}\r\n                    TraderBillID={bill.TraderBillID}\r\n                    JobNumber={bill.JobNumber}\r\n                    OnPayProofDeleted={async () => {\r\n                        this.props.OnPayProofUpdated(bill, false);\r\n                        await this.RefreshPaymentDetails();\r\n                    }} />\r\n            </div>\r\n\r\n            <PrintBillDialog Index={index}\r\n                Bill={bill} />\r\n\r\n            {bill.HasPayProof || bill.HasPayDetails ? \r\n                null : \r\n                <AddPayProofDialog Index={index}\r\n                    TraderBillID={bill.TraderBillID}\r\n                    OnOK={async () => {\r\n                        this.props.OnPayProofUpdated(bill, true);\r\n                        await this.RefreshPaymentDetails();\r\n                    }} />}\r\n\r\n            {bill.HasPayDetails ? \r\n                null :\r\n                <ElementsConsumer>\r\n                    {({ elements, stripe }) => (\r\n                        <PayOnlineDialog Index={index}\r\n                            Bill={bill}\r\n                            Elements={elements}\r\n                            Stripe={stripe}\r\n                            ToggleCard={toggleCard => { this.ToggleCard = toggleCard; }}\r\n                            OnOK={async () => {\r\n                                this.props.OnPayDetailsAdded(bill);\r\n                                await this.RefreshPaymentDetails();\r\n                            }} />)}\r\n                </ElementsConsumer>}\r\n\r\n            {canRequestSpecialBills ?\r\n                <section>{bill.SpecialTraderBill ? \r\n                    <PrintSpecialBillDialog Index={index}\r\n                        Bill={bill} /> : \r\n                    <RequestSpecialBillDialog Index={index}\r\n                        TraderBill={bill}\r\n                        OnOK={specialBill => {\r\n                            this.props.OnSpecialBillRequested(bill, specialBill);\r\n                        }} />}</section> : null}\r\n        </li>;\r\n    }\r\n};\r\n\r\nexport default BillListItem;","import React, { Component } from \"react\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport SearchingContainer from \"../../../../containers/searching/SearchingContainer\";\r\nimport BillListItem from \"./BillListItem\";\r\nimport { getData } from \"../../TraderFunctions\";\r\n\r\nclass BillsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Bills: [],\r\n            NumberOfPaidBills: 0,\r\n            NumberOfUnpaidBills: 0,\r\n            CanRequestSpecialBills: false,\r\n            Searching: false\r\n        }\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Bills\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Bills found.\") {\r\n                    this.setState({\r\n                        Bills: response.Bills,\r\n                        NumberOfPaidBills: response.NumberOfPaidBills,\r\n                        NumberOfUnpaidBills: response.NumberOfUnpaidBills,\r\n                        CanRequestSpecialBills: response.CanRequestSpecialBills,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Bills: [],\r\n                        NumberOfPaidBills: 0,\r\n                        NumberOfUnpaidBills: 0,\r\n                        CanRequestSpecialBills: false,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const bills = this.state.Bills;\r\n        const numberOfPaidBills = this.state.NumberOfPaidBills;\r\n        const numberOfUnpaidBills = this.state.NumberOfUnpaidBills;\r\n        const canRequestSpecialBills = this.state.CanRequestSpecialBills;\r\n\r\n        return <section>\r\n            {/* <PageHeading Heading=\"PAYMENTS\" /> */}\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/teal.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container\" style={{ paddingBottom: \"10px\", marginBottom: \"12px\" }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-money-bill-wave m-r-xs\"></span>Payments</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"alert alert-info m-n\" style={{ backgroundColor: \"#333333\" }}>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <div className=\"entity-list theme-alt\">\r\n                            <div className=\"entity-list-item\">\r\n                                <div className=\"item-icon\" style={{ backgroundColor: \"#333333\", color: \"#008575\" }}>\r\n                                    <span className=\"fas fa-thumbs-up\"></span>\r\n                                </div>\r\n                                <div className=\"item-content-primary\">\r\n                                    <div className=\"content-text-primary\">Paid Bills</div>\r\n                                    <div className=\"content-text-secondary\">{numberOfPaidBills}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <div className=\"entity-list theme-alt\">\r\n                            <div className=\"entity-list-item\">\r\n                                <div className=\"item-icon\" style={{ backgroundColor: \"#333333\", color: \"#008575\" }}>\r\n                                    <span className=\"fas fa-thumbs-down\"></span>\r\n                                </div>\r\n                                <div className=\"item-content-primary\">\r\n                                    <div className=\"content-text-primary\">Unpaid Bills</div>\r\n                                    <div className=\"content-text-secondary\">{numberOfUnpaidBills}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Your Bills</div>\r\n\r\n            {(bills.length === 0) ?\r\n                <SearchingContainer Searching={this.state.Searching}\r\n                    SearchingFor=\"bills\" /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {bills.map((bill, index) => {\r\n                        return <BillListItem key={index}\r\n                            Index={index} Bill={bill}\r\n                            CanRequestSpecialBills={canRequestSpecialBills}\r\n                            OnPayProofUpdated={(bill, hasPayProof) => {\r\n                                let bills = this.state.Bills;\r\n\r\n                                for (let billItem of bills) {\r\n                                    if (billItem === bill) {\r\n                                        billItem.HasPayProof = hasPayProof;\r\n                                        break;\r\n                                    }\r\n                                }\r\n\r\n                                this.setState({\r\n                                    Bills: bills\r\n                                });\r\n                            }}\r\n                            OnPayDetailsAdded={bill => {\r\n                                let bills = this.state.Bills;\r\n                                let numberOfPaidBills = this.state.NumberOfPaidBills;\r\n                                let numberOfUnpaidBills = this.state.NumberOfUnpaidBills;\r\n\r\n                                for (let billItem of bills) {\r\n                                    if (billItem === bill) {\r\n                                        billItem.Paid = true;\r\n                                        billItem.HasPayDetails = true;\r\n                                        numberOfPaidBills++;\r\n                                        numberOfUnpaidBills--;\r\n                                        break;\r\n                                    }\r\n                                }\r\n\r\n                                this.setState({\r\n                                    Bills: bills,\r\n                                    NumberOfPaidBills: numberOfPaidBills,\r\n                                    NumberOfUnpaidBills: numberOfUnpaidBills\r\n                                });\r\n                            }}\r\n                            OnSpecialBillRequested={(bill, specialBill) => {\r\n                                let bills = this.state.Bills;\r\n\r\n                                for (let billItem of bills) {\r\n                                    if (billItem === bill) {\r\n                                        billItem.SpecialTraderBill = specialBill;\r\n                                        break;\r\n                                    }\r\n                                }\r\n\r\n                                this.setState({\r\n                                    Bills: bills\r\n                                });\r\n                            }} />;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default BillsList;","import React, { Component } from \"react\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport Strings from \"../../../../res/strings\";\r\nimport BillsList from \"./BillsList\";\r\n\r\nconst stripePromise = loadStripe(Strings.STRIPE_PUBLISHABLE_KEY);\r\n\r\nclass Payments extends Component {\r\n    render() {\r\n        return <section>\r\n            <Elements stripe={stripePromise}>\r\n                <BillsList />\r\n            </Elements>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Payments;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { addQuestion } from \"../../TraderFunctions\";\r\n\r\nclass AskQuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Question: \"\",\r\n\r\n            ValidQuestion: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Question: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidQuestion = this.state.ValidQuestion;\r\n\r\n        switch (field) {\r\n            case \"Question\":\r\n                ValidQuestion = (value !== \"\");\r\n                Errors.Question = ValidQuestion ? \"\" : \"Question is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidQuestion: ValidQuestion,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidQuestion\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newQuestion = {\r\n            Token: localStorage.Token,\r\n            Question: this.state.Question\r\n        };\r\n\r\n        await addQuestion(newQuestion).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Question is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Question,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`ask-question-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Ask a New Question</div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">Question</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <textarea rows=\"6\" class=\"form-control\" name=\"Question\" style={{ maxWidth: \"100%\" }}\r\n                                                        value={Question} onChange={this.onChange}></textarea>\r\n                                                    <span className=\"text-danger\">{Errors.Question}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Post\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AskQuestionDialog;","import React, { Component } from \"react\";\r\n\r\nclass TraderQuestionContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Question\r\n        } = this.props;\r\n\r\n        const askedOn = new Date(Question.Created);\r\n        const askedBy = Question.AskedBy;\r\n        const traderAnswer = Question.TraderAnswer;\r\n        const answeredOn = traderAnswer ? new Date(traderAnswer.Created) : null;\r\n        const answeredBy = traderAnswer ? traderAnswer.AnsweredBy : null;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"type-h5 color-default p-t-n\">{`${Index + 1}. Question ID: ${Question.QuestionNumber}`}</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-user\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">\r\n                                            <span className=\"fas fa-briefcase m-r-xxxs\"></span>\r\n                                            {`${askedBy.FirstName} ${askedBy.LastName}`}\r\n                                        </div>\r\n                                        <div className=\"content-text-secondary\">{askedBy.Username}</div>\r\n                                        <div className=\"content-text-secondary\">{`${askedOn.toDateString()} at ${askedOn.toLocaleTimeString()}`}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-question\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">\r\n                                            <span className=\"m-r-xxxs\">Question</span>\r\n                                            {Question.Class ?\r\n                                                <span class=\"badge back-color-golden\">{Question.Class.toUpperCase()}</span> :\r\n                                                <span class=\"badge back-color-golden\">UNCLASSIFIED</span>}\r\n                                        </div>\r\n                                        <div className=\"content-text-secondary\">{Question.Question}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {traderAnswer ? \r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-user\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">\r\n                                                <span className=\"fas fa-user-shield m-r-xxxs\"></span>\r\n                                                {`${answeredBy.FirstName} ${answeredBy.LastName}`}\r\n                                            </div>\r\n                                            <div className=\"content-text-secondary\">{answeredBy.Username}</div>\r\n                                            <div className=\"content-text-secondary\">{`${answeredOn.toDateString()} at ${answeredOn.toLocaleTimeString()}.`}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-comment\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">\r\n                                                <span className=\"m-r-xxxs\">Answer</span>\r\n                                                {traderAnswer.Edited ? <span className=\"color-default\">EDITED</span> : null}\r\n                                            </div>\r\n                                            <div className=\"content-text-secondary\">{traderAnswer.Answer}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div> : \r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-comment\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">\r\n                                                <span className=\"m-r-xxxs\">Answer</span>\r\n                                            </div>\r\n                                            <div className=\"content-text-secondary\">This question has not been answered yet.</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default TraderQuestionContainer;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { deleteQuestion } from \"../../TraderFunctions\";\r\n\r\nclass DeleteQuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false,\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const discardedQuestion = {\r\n            Token: localStorage.Token,\r\n            TraderQuestionID: this.props.TraderQuestionID\r\n        };\r\n\r\n        await deleteQuestion(discardedQuestion).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Question is deleted.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            QuestionNumber\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`delete-trader-question-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-h3 color-default p-t-n\">Delete Question</div>\r\n                                            <div className=\"type-sh3 m-b-xxs\">Are you sure you want to delete question with ID\r\n                                                <span className=\"color-default\">{` ${QuestionNumber}.`}</span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-right\">\r\n                                        <button className=\"btn btn-primary\" onClick={this.onDelete}>Delete</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DeleteQuestionDialog;","import React, { Component } from \"react\";\r\nimport TraderQuestionContainer from \"../../../../containers/traderQuestion/TraderQuestionContainer\";\r\nimport DeleteQuestionDialog from \"./DeleteQuestionDialog\";\r\n\r\nclass QuestionListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Question\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <TraderQuestionContainer Index={Index}\r\n                Question={Question} />\r\n\r\n            <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                <button className=\"btn btn-danger m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#delete-trader-question-dialog-${Index}`}>Delete</button>\r\n            </div>\r\n\r\n            <DeleteQuestionDialog Index={Index}\r\n                TraderQuestionID={Question.TraderQuestionID}\r\n                QuestionNumber={Question.QuestionNumber}\r\n                OnOK={this.props.OnQuestionDeleted}/>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default QuestionListItem;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../containers/searching/SearchingContainer\";\r\nimport ProgressRing from \"../../../../controls/ProgressRing\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport AskQuestionDialog from \"./AskQuestionDialog\";\r\nimport QuestionListItem from \"./QuestionListItem\";\r\nimport { getData } from \"../../TraderFunctions\";\r\n\r\nclass QuestionsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllQuestions: [],\r\n            Questions: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Questions\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Questions found.\") {\r\n                    this.setState({\r\n                        AllQuestions: response.Questions,\r\n                        Questions: response.Questions,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllQuestions: [],\r\n                        Questions: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                Questions: this.state.AllQuestions\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allQuestions = this.state.AllQuestions;\r\n        let filteredQuestions = [];\r\n        let count = 0;\r\n\r\n        for (let question of allQuestions) {\r\n            if (question.Question.includes(searchString) ||\r\n                question.QuestionNumber.includes(searchString) ||\r\n                question.Class.includes(searchString)) {\r\n                filteredQuestions[count++] = question;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Questions: filteredQuestions\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Questions,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            {/* <PageHeading Heading=\"QUESTIONS\" /> */}\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-question-circle m-r-xxs\"></span>Questions</div>\r\n                            <p className=\"color-light\">If you are facing any issues, then post a question. Naqel team will answer them as soon as possible.</p>\r\n                            <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target={`#ask-question-dialog`}>Ask a Question</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <AskQuestionDialog OnOK={async () => { await this.onComponentUpdated(); }} />\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Your Questions\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search Questions\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(Questions.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"questions\" /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {Questions.map((question, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <QuestionListItem Index={index}\r\n                                Question={question}\r\n                                OnQuestionDeleted={this.onComponentUpdated} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default QuestionsList;","import React, { Component } from \"react\";\r\nimport QuestionsList from \"./QuestionsList\";\r\n\r\nclass Questions extends Component {\r\n    render() {\r\n        return <section>\r\n            <QuestionsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Questions;","import React, { Component } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport FirebaseApp from \"../../../../res/FirebaseApp\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport PhoneConfirmationDialog from \"../../../../containers/phoneConfirmationDialog/PhoneConfirmationDialog\";\r\nimport { getData, generalSettings } from \"../../TraderFunctions\";\r\n\r\nclass GeneralSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Address: \"\",\r\n            PhoneNumber: \"\",\r\n            Gender: \"\",\r\n            Nationality: \"\",\r\n            DateOfBirth: \"\",\r\n\r\n            ValidFirstName: true,\r\n            ValidLastName: true,\r\n            ValidPhoneNumber: true,\r\n\r\n            ConfirmationResult: null,\r\n            PhoneCodeVerified: false,\r\n\r\n            ValidForm: false,\r\n            SettingsSaved: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n                PhoneNumber: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\"recaptcha\", {\r\n            \"size\": \"invisible\",\r\n            \"callback\": response => {\r\n            }\r\n        });\r\n\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Trader\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader found.\") {\r\n                    let trader = response.Trader;\r\n\r\n                    this.setState({\r\n                        FirstName: trader.FirstName,\r\n                        LastName: trader.LastName,\r\n                        Address: trader.Address,\r\n                        PhoneNumber: trader.PhoneNumber,\r\n                        Gender: trader.Gender,\r\n                        Nationality: trader.Nationality,\r\n                        DateOfBirth: trader.DateOfBirth\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        FirstName: \"\",\r\n                        LastName: \"\",\r\n                        Address: \"\",\r\n                        PhoneNumber: \"\",\r\n                        Gender: \"\",\r\n                        Nationality: \"\",\r\n                        DateOfBirth: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFirstName = this.state.ValidFirstName;\r\n        let ValidLastName = this.state.ValidLastName;\r\n        let ValidPhoneNumber = this.state.ValidPhoneNumber;\r\n\r\n        switch (field) {\r\n            case \"FirstName\":\r\n                ValidFirstName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.FirstName = ValidFirstName ? \"\" : \"First name is invalid.\";\r\n                break;\r\n            case \"LastName\":\r\n                ValidLastName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.LastName = ValidLastName ? \"\" : \"Last name is invalid.\";\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = value.match(/^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/);\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFirstName: ValidFirstName,\r\n            ValidLastName: ValidLastName,\r\n            ValidPhoneNumber: ValidPhoneNumber,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidFirstName &&\r\n                    this.state.ValidLastName &&\r\n                    this.state.ValidPhoneNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        if (this.state.PhoneCodeVerified) {\r\n            const updatedTrader = {\r\n                Token: localStorage.Token,\r\n                FirstName: this.state.FirstName,\r\n                LastName: this.state.LastName,\r\n                Address: this.state.Address,\r\n                PhoneNumber: this.state.PhoneNumber,\r\n                Gender: this.state.Gender,\r\n                Nationality: this.state.Nationality,\r\n                DateOfBirth: this.state.DateOfBirth,\r\n            }\r\n\r\n            await generalSettings(updatedTrader).then(response => {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                if (response.Message === \"Trader is updated.\") {\r\n                    this.forceUpdate();\r\n                    this.props.OnSettingsSaved();\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            const appVerifier = window.recaptchaVerifier;\r\n\r\n            FirebaseApp.auth().languageCode = \"en\";\r\n            FirebaseApp.auth().signInWithPhoneNumber(this.state.PhoneNumber, appVerifier).then(confirmationResult => {\r\n                this.setState({\r\n                    ShowPreloader: false,\r\n                    ConfirmationResult: confirmationResult\r\n                });\r\n\r\n                this.SendCodeButton.click();\r\n            }).catch(error => {\r\n                let {\r\n                    Errors\r\n                } = this.state;\r\n\r\n                Errors.PhoneNumber = error.message;\r\n\r\n                this.setState({\r\n                    ShowPreloader: false,\r\n                    Errors: Errors\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>General Settings</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-comment\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"FirstName\" autoComplete=\"off\"\r\n                                        value={this.state.FirstName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">First Name</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"FirstName\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-comment\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"LastName\" autoComplete=\"off\"\r\n                                        value={this.state.LastName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Last Name</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"LastName\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-birthday-cake\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\" className=\"form-control\" name=\"DateOfBirth\" autoComplete=\"off\"\r\n                                        value={this.state.DateOfBirth} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Date of Birth</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className={this.state.Gender === \"Male\" ? \"fas fa-male\" : \"fas fa-female\"}></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"dropdown\" style={{ width: \"193px\", maxWidth: \"296px\", }}>\r\n                                    <button id=\"example-dropdown\" className=\"btn btn-dropdown dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                                        aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\" style={{ width: \"100%\", }}>\r\n                                        <span>{this.state.Gender}</span>\r\n                                        <span className=\"caret\"></span>\r\n                                    </button>\r\n                                    <ul className=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdown-example\">\r\n                                        <li><a onClick={() => { this.setState({ Gender: \"Male\" }); this.validateField(\"\", \"\"); }}>Male</a></li>\r\n                                        <li><a onClick={() => { this.setState({ Gender: \"Female\" }); this.validateField(\"\", \"\"); }}>Female</a></li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Gender</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-flag\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"Nationality\" autoComplete=\"off\"\r\n                                        value={this.state.Nationality} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Nationality</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-phone\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autoComplete=\"off\"\r\n                                        placeholder=\"+XXXXXXXXXXXX\" value={this.state.PhoneNumber} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Phone Number</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"PhoneNumber\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-location-arrow\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"Address\" autoComplete=\"off\"\r\n                                        value={this.state.Address} onChange={this.onChange} style={{ width: \"393px\", }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Address</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <button\r\n                    style={{ display: \"none\" }}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#phone-confirmation-dialog\"\r\n                    ref={sendCodeButton => this.SendCodeButton = sendCodeButton}></button>\r\n                <PhoneConfirmationDialog ConfirmationResult={this.state.ConfirmationResult}\r\n                    PhoneNumber={this.state.PhoneNumber}\r\n                    OnOK={phoneCodeVerified => {\r\n                        if (phoneCodeVerified) {\r\n                            this.setState({\r\n                                PhoneCodeVerified: true\r\n                            });\r\n\r\n                            this.onSubmit();\r\n                        }\r\n                        else {\r\n                            let {\r\n                                Errors\r\n                            } = this.state;\r\n\r\n                            Errors.PhoneNumber = \"Confirmation code is invalid.\";\r\n\r\n                            this.setState({\r\n                                ValidForm: false,\r\n                                Errors: Errors\r\n                            });\r\n                        }\r\n                    }} />\r\n                <div id=\"recaptcha\"></div>\r\n                {this.state.ShowPreloader ? <Preloader /> : null}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default GeneralSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { usernameAndEmailSettings } from \"../../TraderFunctions.js\";\r\n\r\nclass CodeConfirmationDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ConfirmCode: \"\",\r\n\r\n            ValidConfirmCode: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                ConfirmCode: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n\r\n        let ValidConfirmCode = this.state.ValidConfirmCode;\r\n\r\n        ValidConfirmCode = value === this.props.Code;\r\n        Errors.ConfirmCode = ValidConfirmCode ? \"\" : \"Invalid code.\";\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidConfirmCode: ValidConfirmCode,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidConfirmCode\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedTrader = {\r\n            Token: localStorage.Token,\r\n            Username: this.props.Username,\r\n            Email: this.props.Email,\r\n        };\r\n\r\n        this.setState({\r\n            Preloader: <Preloader />\r\n        });\r\n\r\n        await usernameAndEmailSettings(updatedTrader).then(response => {\r\n            if (response.Message === \"Trader is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n\r\n            this.setState({\r\n                Preloader: null\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"text-left\">\r\n                <div\r\n                    className=\"modal in\" id=\"code-confirmation-dialog\" tabIndex=\"-1\"\r\n                    role=\"dialog\" aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\"\r\n                    style={{ display: \"block\" }}>\r\n                    <div className=\"modal-dialog\">\r\n                        {this.state.Preloader}\r\n                        <div className=\"modal-dialog\">\r\n                            <div className=\"modal-content\">\r\n                                <section>\r\n                                    <form noValidate onSubmit={this.onSubmit}>\r\n                                        <div className=\"modal-header\">\r\n                                            <img alt=\"passcode.png\" src=\"./images/passcode.png\" height=\"60\" />\r\n                                            <div className=\"type-h3\">Email Confirmation</div>\r\n                                            <div className=\"type-sh3\">We delivered a confirmation code to your email.</div>\r\n                                        </div>\r\n                                        <div className=\"modal-body\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-12\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"control-label\">Confirmation Code</label>\r\n                                                        <input type=\"text\" name=\"ConfirmCode\" className=\"form-control\" autocomplete=\"off\"\r\n                                                            value={this.state.ConfirmCode} onChange={this.onChange} />\r\n                                                        <span className=\"text-danger\">{this.state.Errors.ConfirmCode}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"modal-footer\">\r\n                                            <button className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                                ref={cancelButton => this.cancelButton = cancelButton}>Cancel</button>\r\n                                            <input type=\"submit\" value=\"Confirm\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                                        </div>\r\n                                    </form>\r\n                                </section>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default CodeConfirmationDialog;","import React, { Component } from \"react\";\r\nimport CodeConfirmationDialog from \"./CodeConfirmationDialog.js\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport {\r\n    getData,\r\n    validateUsername,\r\n    validateEmail,\r\n    sendCode,\r\n    usernameAndEmailSettings\r\n} from \"../../TraderFunctions\";\r\n\r\nclass UsernameAndEmailSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            NewUsername: \"\",\r\n\r\n            Email: \"\",\r\n            NewEmail: \"\",\r\n\r\n            Code: \"\",\r\n\r\n            ValidNewUsername: true,\r\n            ValidNewEmail: true,\r\n\r\n            ValidForm: false,\r\n            CodeConfirmationDialog: null,\r\n\r\n            Errors: {\r\n                NewUsername: \"\",\r\n                NewEmail: \"\",\r\n            },\r\n\r\n            CodeConfirmation: \"\",\r\n            Preloader: null\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Trader\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader found.\") {\r\n                    let trader = response.Trader;\r\n\r\n                    this.setState({\r\n                        Username: trader.Username,\r\n                        NewUsername: trader.Username,\r\n                        Email: trader.Email,\r\n                        NewEmail: trader.Email\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Username: \"\",\r\n                        NewUsername: \"\",\r\n                        Email: \"\",\r\n                        NewEmail: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewUsername = this.state.ValidNewUsername;\r\n        let ValidNewEmail = this.state.ValidNewEmail;\r\n        \r\n        switch (field) {\r\n            case \"NewUsername\":\r\n                ValidNewUsername = (value !== \"\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is required.\";\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value.match(/^[a-z0-9]+$/i));\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is invalid.\";\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value !== \"Username is unavailable.\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is unavailable.\";\r\n                break;\r\n            case \"NewEmail\":\r\n                ValidNewEmail = (value !== \"\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is required.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i));\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is invalid.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value !== \"Email is already taken.\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is already taken.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewUsername: ValidNewUsername,\r\n            ValidNewEmail: ValidNewEmail,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidNewUsername &&\r\n                    this.state.ValidNewEmail\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername === this.state.Username &&\r\n            this.state.NewEmail === this.state.Email) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername !== this.state.Username) {\r\n            const response = await validateUsername(this.state.NewUsername);\r\n\r\n            if (response.Message === \"Username is unavailable.\") {\r\n                this.validateField(\"NewUsername\", response.Message);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail !== this.state.Email) {\r\n            const response = await validateEmail(this.state.NewEmail);\r\n            if (response.Message === \"Email is already taken.\") {\r\n                this.validateField(\"NewEmail\", response.Message);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail === this.state.Email) {\r\n            const updatedTrader = {\r\n                Token: localStorage.Token,\r\n                Username: this.state.NewUsername,\r\n                Email: this.state.NewEmail,\r\n            };\r\n\r\n            this.setState({\r\n                Preloader: <Preloader />\r\n            });\r\n\r\n            console.log(\"Going to update username.\");\r\n            await usernameAndEmailSettings(updatedTrader).then(response => {  \r\n                console.log(response);\r\n                if (response.Message === \"Trader is updated.\") {\r\n                    \r\n                    this.props.OnSettingsSaved();\r\n                }\r\n\r\n                this.setState({\r\n                    Preloader: null\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            console.log(\"Going to send code...\");\r\n            await sendCode(this.state.NewEmail).then(response => {\r\n                console.log(response);\r\n                if (response.Message === \"Code sent.\") {\r\n                    this.setState({\r\n                        CodeConfirmationDialog: <CodeConfirmationDialog\r\n                            Code={response.Code}\r\n                            Username={this.state.NewUsername}\r\n                            Email={this.state.NewEmail}\r\n                            OnCancel={() => {\r\n                                this.setState({\r\n                                    CodeConfirmationDialog: null,\r\n                                });\r\n                            }}\r\n                            OnOK={cancelButton => {\r\n                                cancelButton.click();\r\n                                this.props.OnSettingsSaved();\r\n                            }} />\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Username and Emails</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-at\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"NewUsername\" className=\"form-control\" autoComplete=\"off\"\r\n                                        value={this.state.NewUsername} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Username</div>\r\n                                <div className=\"content-text-secondary text-danger\">{this.state.Errors[\"NewUsername\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-envelope\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"email\" name=\"NewEmail\" className=\"form-control\" placeholder=\"someone@example.com\" autoComplete=\"off\"\r\n                                        value={this.state.NewEmail} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Email</div>\r\n                                <div className=\"content-text-secondary text-danger\">{this.state.Errors[\"NewEmail\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n                {this.state.CodeConfirmationDialog}\r\n            </div> \r\n        );\r\n    }\r\n};\r\n\r\nexport default UsernameAndEmailSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader.js\";\r\nimport { validatePassword, passwordSettings } from \"../../TraderFunctions\";\r\n\r\nclass PasswordSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            CurrentPassword: \"\",\r\n            NewPassword: \"\",\r\n            ConfirmPassword: \"\",\r\n\r\n            ValidCurrentPassword: false,\r\n            ValidNewPassword: false,\r\n            ValidConfirmPassword: false,\r\n\r\n            ValidForm: false,\r\n            Preloader: null,\r\n\r\n            Errors: {\r\n                CurrentPassword: \"\",\r\n                NewPassword: \"\",\r\n                ConfirmPassword: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    async validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCurrentPassword = this.state.ValidCurrentPassword;\r\n        let ValidNewPassword = this.state.ValidNewPassword;\r\n        let ValidConfirmPassword = this.state.ValidConfirmPassword;\r\n\r\n        switch (field) {\r\n            case \"CurrentPassword\":\r\n                ValidCurrentPassword = (value !== \"\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is required.\";\r\n\r\n                if (Errors.CurrentPassword !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidCurrentPassword = (value !== \"Invalid password.\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is invalid.\";\r\n                break;\r\n            case \"NewPassword\":\r\n                ValidNewPassword = value.length >= 6;\r\n                Errors.NewPassword = ValidNewPassword ? \"\" : \"Password is too short.\";\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                ValidConfirmPassword = value === this.state.NewPassword;\r\n                Errors.ConfirmPassword = ValidConfirmPassword ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCurrentPassword: ValidCurrentPassword,\r\n            ValidNewPassword: ValidNewPassword,\r\n            ValidConfirmPassword: ValidConfirmPassword,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidCurrentPassword &&\r\n                    this.state.ValidNewPassword &&\r\n                    this.state.ValidConfirmPassword\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        let passwordPackage = {\r\n            Token: localStorage.Token,\r\n            Password: this.state.CurrentPassword\r\n        };\r\n\r\n        await validatePassword(passwordPackage).then(async response => {\r\n            if (response.Message === \"Invalid password.\") {\r\n                this.validateField(\"CurrentPassword\", response.Message);\r\n            }\r\n            else {\r\n                const updatedTrader = {\r\n                    Token: localStorage.Token,\r\n                    Password: this.state.NewPassword\r\n                };\r\n\r\n                this.setState({\r\n                    Preloader: <Preloader />\r\n                });\r\n\r\n                await passwordSettings(updatedTrader).then(response => {\r\n                    if (response.Message === \"Trader is updated.\") {\r\n                        this.props.OnSettingsSaved();\r\n                    }\r\n\r\n                    this.setState({\r\n                        Preloader: null\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\" }}>Change Password</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-key\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" name=\"CurrentPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                        value={this.state.CurrentPassword} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Current Password</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"CurrentPassword\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-key\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" name=\"NewPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                        value={this.state.NewPassword} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">New Password</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"NewPassword\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-key\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" name=\"ConfirmPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                        value={this.state.ConfirmPassword} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Confirm Password</div>\r\n                                <div className=\"text-danger\">{this.state.Errors[\"ConfirmPassword\"]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!this.state.ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                {this.state.Preloader}\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default PasswordSettings;","import React, { Component } from \"react\";\r\nimport GeneralSettings from \"./GeneralSettings\";\r\nimport UsernameAndEmailSettings from \"./UsernameAndEmailSettings\";\r\nimport PasswordSettings from \"./PasswordSettings\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Settings extends Component {\r\n    render() {\r\n        return <section>\r\n            {/* <PageHeading Heading=\"SETTINGS\" /> */}\r\n            <GeneralSettings ref=\"GeneralSettings\" OnSettingsSaved={() => { this.refs.GeneralSettings.componentDidMount(); }} />\r\n            <UsernameAndEmailSettings ref=\"UsernameAndEmailSettings\" OnSettingsSaved={() => { this.refs.UsernameAndEmailSettings.componentDidMount(); }} />\r\n            <PasswordSettings ref=\"PasswordSettings\" OnSettingsSaved={() => { this.refs.PasswordSettings.forceUpdate(); }} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Settings;","import React, { Component } from \"react\";\r\n\r\nclass BlockedUserContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ExoneratedTrader\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron\" style={{ height: \"100vh\" }}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 text-center\">\r\n                            <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                alt=\"sad.svg\" src=\"./images/sad.svg\" data-source-index=\"2\" />\r\n                        </div>\r\n                        <div className=\"col-md-20\">\r\n                            <div className=\"type-h3 color-default\">{`${ExoneratedTrader.FirstName} ${ExoneratedTrader.LastName}, You have been exonerated!`}</div>\r\n                            <div className=\"type-sh3\">Up to: <span className=\"color-default\">{new Date(ExoneratedTrader.ExonerateDate).toDateString()}</span></div>\r\n                            <div className=\"type-sh4\">You cannot use Naqel's services until you are exonerated. See the reason, why our team has exonerated you.</div>\r\n                            <p><span className=\"color-default\">REASON: </span>{ExoneratedTrader.Reason}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default BlockedUserContainer;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Profile from \"./profile/Profile\";\r\nimport Jobs from \"./jobs/Jobs\";\r\nimport Payments from \"./payments/Payments\";\r\nimport Questions from \"./questions/Questions\";\r\nimport Settings from \"./settings/Settings\";\r\nimport SearchingContainer from \"../../../containers/searching/SearchingContainer\";\r\nimport ExoneratedTraderContainer from \"../../../containers/exoneratedTrader/ExoneratedTraderContainer\";\r\nimport { getData } from \"../TraderFunctions\";\r\n\r\nclass TradersDashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Left: -400,\r\n            DashboardData: null,\r\n            Searching: false\r\n        };\r\n\r\n        //this.onCloseNavigation = this.onCloseNavigation.bind(this);\r\n    }\r\n\r\n    //onCloseNavigation = () => {\r\n    //    this.setState({\r\n    //        Left: -400\r\n    //    });\r\n    //}\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DashboardData\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Dashboard data found.\") {\r\n                    this.setState({\r\n                        DashboardData: response.DashboardData,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        DashboardData: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.Token) {\r\n            return <Redirect to=\"/login\" />;\r\n        }\r\n        else {\r\n            const {\r\n                DashboardData,\r\n                Searching\r\n            } = this.state;\r\n\r\n            return (Searching || !DashboardData) ?\r\n                <SearchingContainer Searching={Searching}\r\n                    SearchingFor=\"trader\" /> :\r\n                <section>\r\n                    {DashboardData.ExoneratedTrader ?\r\n                        <ExoneratedTraderContainer ExoneratedTrader={DashboardData.ExoneratedTrader} /> :\r\n                        <section>\r\n                            <section>\r\n                                <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                                    padding: \"10px\",\r\n                                    backgroundColor: \"#133F4F\",\r\n                                    width: \"100%\",\r\n                                    margin: \"0px\",\r\n                                }}>\r\n                                    <li role=\"presentation\" className=\"active\">\r\n                                        <a href=\"#jobs\" aria-controls=\"jobs\" role=\"tab\" data-toggle=\"tab\">Jobs</a>\r\n                                    </li>\r\n                                    <li role=\"presentation\">\r\n                                        <a href=\"#payments\" aria-controls=\"payments\" role=\"tab\" data-toggle=\"tab\">Payments</a>\r\n                                    </li>\r\n                                    <li role=\"presentation\">\r\n                                        <a href=\"#questions\" aria-controls=\"questions\" role=\"tab\" data-toggle=\"tab\">Questions</a>\r\n                                    </li>\r\n                                    <li role=\"presentation\">\r\n                                        <a href=\"#profile\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">Profile</a>\r\n                                    </li>\r\n                                    <li role=\"presentation\">\r\n                                        <a href=\"#settings\" aria-controls=\"settings\" role=\"tab\" data-toggle=\"tab\">Settings</a>\r\n                                    </li>\r\n                                </ul>\r\n\r\n                                {/*\r\n                                 <div className=\"sidenav\" style={{ left: `${this.state.Left}px` }}>\r\n                                    <a className=\"closebtn\" onClick={this.onCloseNavigation}>&times;</a>\r\n\r\n                                    <div class=\"entity-list\" role=\"tablist\">\r\n                                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                                            <a href=\"#profile\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Profile</a>\r\n                                        </div>\r\n                                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                                            <a href=\"#jobs\" aria-controls=\"jobs\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Jobs</a>\r\n                                        </div>\r\n                                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                                            <a href=\"#payments\" aria-controls=\"payments\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Payments</a>\r\n                                        </div>\r\n                                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                                            <a href=\"#questions\" aria-controls=\"questions\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Questions</a>\r\n                                        </div>\r\n                                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                                            <a href=\"#settings\" aria-controls=\"settings\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Settings</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                 */}\r\n\r\n                                <div className=\"tab-content\">\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"profile\">\r\n                                        <Profile ref=\"Profile\" />\r\n                                    </div>\r\n                                    <div role=\"tabpanel\" className=\"tab-pane active\" id=\"jobs\">\r\n                                        <Jobs />\r\n                                    </div>\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"payments\">\r\n                                        <Payments />\r\n                                    </div>\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"questions\">\r\n                                        <Questions />\r\n                                    </div>\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"settings\">\r\n                                        <Settings />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/*\r\n                                 <div className=\"side-nav-btn\" onClick={() => {\r\n                                    this.setState({\r\n                                        Left: 0\r\n                                    });\r\n                                }}><div className=\"fas fa-bars\" style={{ fontSize: \"x-large\" }}></div>\r\n                                </div>\r\n                                 */}\r\n                            </section>\r\n                        </section>}\r\n                </section>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default TradersDashboard;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { uploadProfilePhoto } from \"../../AdministratorFunctions\";\r\nimport Strings from \"../../../../res/strings\";\r\n\r\nclass ProfilePhoto extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Image: null,\r\n            PhotoURL: this.props.PhotoURL,\r\n            UploadProgress: null\r\n        };\r\n\r\n        this.onImageUpload = this.onImageUpload.bind(this);\r\n    }\r\n\r\n    onImageUpload = async event => {\r\n        this.state.Image = event.target.files[0];\r\n        const formData = new FormData();\r\n\r\n        try {\r\n            formData.append(\"Image\", this.state.Image, this.state.Image.name);\r\n\r\n            await axios.post(Strings.IMAGE_UPLOADER, formData, {\r\n                onUploadProgress: event => {\r\n                    this.setState({\r\n                        UploadProgress: <div className=\"progress-bar\">\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                            <div className=\"progress-circle\"></div>\r\n                        </div>\r\n                    });\r\n                }\r\n            }).then(async response => {\r\n                response = response.data;\r\n\r\n                if (response.message === \"Image uploaded successfully.\") {\r\n                    const profilePhoto = {\r\n                        Token: localStorage.Token,\r\n                        PhotoURL: response.imageUrl\r\n                    };\r\n\r\n                    let photoURL = response.imageUrl;\r\n\r\n                    await uploadProfilePhoto(profilePhoto).then(response => {\r\n                        if (response.Message === \"Profile photo is updated.\") {\r\n                            this.setState({\r\n                                UploadProgress: null\r\n                            });\r\n\r\n                            this.props.OnProfilePhotoUpdated();\r\n                        }\r\n                    });\r\n                }\r\n            }).catch(() => {\r\n                this.setState({\r\n                    PhotoURL: \"./images/defaultProfilePhoto.png\",\r\n                    UploadProgress: null\r\n                });\r\n            });\r\n        }\r\n        catch (exception) {\r\n            this.setState({\r\n                UploadProgress: null\r\n            });\r\n\r\n            return;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <section>\r\n            <input type=\"file\" onChange={this.onImageUpload} style={{ display: \"none\", }} ref={fileInput => this.fileInput = fileInput} />\r\n            <figure className=\"media\">\r\n                <div className=\"media-img media-img-has-play ratio-1-1\">\r\n                    <a href=\"#\" onClick={() => this.fileInput.click()}>\r\n                        <img style={{\r\n                            border: \"5px solid #3A3A3C\"\r\n                        }}\r\n                            src={this.props.PhotoURL} alt=\"ProfilePhoto.png\" />\r\n                        <i className=\"glyph glyph-edit\"></i>\r\n                    </a>\r\n                </div>\r\n            </figure>\r\n            {this.state.UploadProgress}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ProfilePhoto;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { getData, generalSettings } from \"../../../AdministratorFunctions\";\r\n\r\nclass GeneralSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n\r\n            ValidFirstName: true,\r\n            ValidLastName: true,\r\n\r\n            ValidForm: false,\r\n            SettingsSaved: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Administrator\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Administrator found.\") {\r\n                    let administrator = response.Administrator;\r\n\r\n                    this.setState({\r\n                        FirstName: administrator.FirstName,\r\n                        LastName: administrator.LastName,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        FirstName: \"\",\r\n                        LastName: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFirstName = this.state.ValidFirstName;\r\n        let ValidLastName = this.state.ValidLastName;\r\n\r\n        switch (field) {\r\n            case \"FirstName\":\r\n                ValidFirstName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.FirstName = ValidFirstName ? \"\" : \"First name is invalid.\";\r\n                break;\r\n            case \"LastName\":\r\n                ValidLastName = value.match(/^[a-zA-Z ]+$/);\r\n                Errors.LastName = ValidLastName ? \"\" : \"Last name is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFirstName: ValidFirstName,\r\n            ValidLastName: ValidLastName\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidFirstName &&\r\n                    this.state.ValidLastName\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedAdministrator = {\r\n            Token: localStorage.Token,\r\n            FirstName: this.state.FirstName,\r\n            LastName: this.state.LastName\r\n        };\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        await generalSettings(updatedAdministrator).then(response => {\r\n            if (response.Message === \"Administrator is updated.\") {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                this.props.OnSettingsSaved();\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            FirstName,\r\n            LastName,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>General Settings</div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n                <div className=\"entity-list entity-list-expandable\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-comment\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"FirstName\" autoComplete=\"off\"\r\n                                    value={FirstName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">First Name</div>\r\n                            <div className=\"text-danger\">{Errors.FirstName}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-comment\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"LastName\" autoComplete=\"off\"\r\n                                    value={LastName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Last Name</div>\r\n                            <div className=\"text-danger\">{Errors.LastName}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item active\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-save\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Save Changes?</div>\r\n                            <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                        </div>\r\n                        <div className=\"item-content-expanded\">\r\n                            <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            {ShowPreloader ? <Preloader /> : null}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default GeneralSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { usernameAndEmailSettings } from \"../../../AdministratorFunctions\";\r\n\r\nclass CodeConfirmationDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ConfirmCode: \"\",\r\n\r\n            ValidConfirmCode: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                ConfirmCode: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidConfirmCode = this.state.ValidConfirmCode;\r\n\r\n        ValidConfirmCode = value === \"12345\";\r\n        Errors.ConfirmCode = ValidConfirmCode ? \"\" : \"Invalid code.\";\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidConfirmCode: ValidConfirmCode,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidConfirmCode\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const updatedAdministrator = {\r\n            Token: localStorage.Token,\r\n            Username: this.props.Username,\r\n            Email: this.props.Email,\r\n        };\r\n\r\n        await usernameAndEmailSettings(updatedAdministrator).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Administrator is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ConfirmCode,\r\n            ValidForm,\r\n            ShowPreloader,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal in\" id=\"code-confirmation-dialog\" tabIndex=\"-1\"\r\n                role=\"dialog\" aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\"\r\n                style={{ display: \"block\" }}>\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Email Confirmation</div>\r\n                                                <div className=\"type-sh3 m-b-xxs\">We delivered a confirmation code to your email.</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Confirmation Code</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"ConfirmCode\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={ConfirmCode} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.ConfirmCode}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Confirm\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default CodeConfirmationDialog;","import React, { Component } from \"react\";\r\nimport CodeConfirmationDialog from \"./CodeConfirmationDialog\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\n\r\nimport {\r\n    getData,\r\n    validateUsername,\r\n    validateEmail,\r\n    sendCode,\r\n    usernameAndEmailSettings\r\n} from \"../../../AdministratorFunctions\";\r\n\r\nclass UsernameAndEmailSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            NewUsername: \"\",\r\n\r\n            Email: \"\",\r\n            NewEmail: \"\",\r\n\r\n            Code: \"\",\r\n\r\n            ValidNewUsername: true,\r\n            ValidNewEmail: true,\r\n\r\n            ValidForm: false,\r\n            CodeConfirmationDialog: null,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                NewUsername: \"\",\r\n                NewEmail: \"\",\r\n            },\r\n\r\n            CodeConfirmation: \"\",\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Administrator\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Administrator found.\") {\r\n                    let administrator = response.Administrator;\r\n\r\n                    this.setState({\r\n                        Username: administrator.Username,\r\n                        NewUsername: administrator.Username,\r\n                        Email: administrator.Email,\r\n                        NewEmail: administrator.Email\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Username: \"\",\r\n                        NewUsername: \"\",\r\n                        Email: \"\",\r\n                        NewEmail: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewUsername = this.state.ValidNewUsername;\r\n        let ValidNewEmail = this.state.ValidNewEmail;\r\n\r\n        switch (field) {\r\n            case \"NewUsername\":\r\n                ValidNewUsername = (value !== \"\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is required.\";\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value.match(/^[a-z0-9]+$/i));\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is invalid.\";\r\n                break;\r\n            case \"NewEmail\":\r\n                ValidNewEmail = (value !== \"\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is required.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i));\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewUsername: ValidNewUsername,\r\n            ValidNewEmail: ValidNewEmail,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidNewUsername &&\r\n                    this.state.ValidNewEmail\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername === this.state.Username &&\r\n            this.state.NewEmail === this.state.Email) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername !== this.state.Username) {\r\n            const response = await validateUsername(this.state.NewUsername);\r\n\r\n            if (response.Message === \"Username is unavailable.\") {\r\n                let errors = this.state.Errors;\r\n                errors.NewUsername = response.Message;\r\n\r\n                this.setState({\r\n                    Errors: errors\r\n                });\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail !== this.state.Email) {\r\n            const response = await validateEmail(this.state.NewEmail);\r\n            if (response.Message === \"Email is already taken.\") {\r\n                let errors = this.state.Errors;\r\n                errors.NewEmail = response.Message;\r\n\r\n                this.setState({\r\n                    Errors: errors\r\n                });\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        if (this.state.NewEmail === this.state.Email) {\r\n            const updatedAdministrator = {\r\n                Token: localStorage.Token,\r\n                Username: this.state.NewUsername,\r\n                Email: this.state.NewEmail,\r\n            };\r\n\r\n            await usernameAndEmailSettings(updatedAdministrator).then(response => {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                if (response.Message === \"Administrator is updated.\") {\r\n                    this.props.OnSettingsSaved();\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            await sendCode(this.state.NewEmail).then(response => {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                if (response.Message === \"Code sent.\") {\r\n                    this.setState({\r\n                        CodeConfirmationDialog: <CodeConfirmationDialog\r\n                            Code={response.Code}\r\n                            Username={this.state.NewUsername}\r\n                            Email={this.state.NewEmail}\r\n                            OnCancel={() => {\r\n                                this.setState({\r\n                                    CodeConfirmationDialog: null,\r\n                                });\r\n                            }}\r\n                            OnOK={cancelButton => {\r\n                                cancelButton.click();\r\n                                this.props.OnSettingsSaved();\r\n                            }} />\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            NewUsername,\r\n            NewEmail,\r\n            ValidForm,\r\n            ShowPreloader,\r\n            CodeConfirmationDialog,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return (\r\n            <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Username and Emails</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-at\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"NewUsername\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={NewUsername} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Username</div>\r\n                                <div className=\"content-text-secondary text-danger\">{Errors.NewUsername}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-envelope\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"email\" name=\"NewEmail\" className=\"form-control\" placeholder=\"someone@example.com\" autocomplete=\"off\"\r\n                                        value={NewEmail} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Email</div>\r\n                                <div className=\"content-text-secondary text-danger\">{Errors.NewEmail}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                \r\n                {ShowPreloader ? <Preloader /> : null}\r\n                {CodeConfirmationDialog}\r\n            </section> \r\n        );\r\n    }\r\n};\r\n\r\nexport default UsernameAndEmailSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { validatePassword, passwordSettings } from \"../../../AdministratorFunctions\";\r\n\r\nclass PasswordSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            CurrentPassword: \"\",\r\n            NewPassword: \"\",\r\n            ConfirmPassword: \"\",\r\n\r\n            ValidCurrentPassword: false,\r\n            ValidNewPassword: false,\r\n            ValidConfirmPassword: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                CurrentPassword: \"\",\r\n                NewPassword: \"\",\r\n                ConfirmPassword: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    async validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidCurrentPassword = this.state.ValidCurrentPassword;\r\n        let ValidNewPassword = this.state.ValidNewPassword;\r\n        let ValidConfirmPassword = this.state.ValidConfirmPassword;\r\n\r\n        switch (field) {\r\n            case \"CurrentPassword\":\r\n                ValidCurrentPassword = (value !== \"\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is required.\";\r\n                break;\r\n            case \"NewPassword\":\r\n                ValidNewPassword = value.length >= 6;\r\n                Errors.NewPassword = ValidNewPassword ? \"\" : \"Password is too short.\";\r\n\r\n                if (Errors.NewPassword !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidConfirmPassword = value === this.state.ConfirmPassword;\r\n                Errors.ConfirmPassword = ValidConfirmPassword ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                ValidConfirmPassword = value === this.state.NewPassword;\r\n                Errors.ConfirmPassword = ValidConfirmPassword ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCurrentPassword: ValidCurrentPassword,\r\n            ValidNewPassword: ValidNewPassword,\r\n            ValidConfirmPassword: ValidConfirmPassword,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: this.state.ValidCurrentPassword &&\r\n                    this.state.ValidNewPassword &&\r\n                    this.state.ValidConfirmPassword\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        let passwordPackage = {\r\n            Token: localStorage.Token,\r\n            Password: this.state.CurrentPassword\r\n        };\r\n\r\n        await validatePassword(passwordPackage).then(async response => {\r\n            if (response.Message === \"Invalid password.\") {\r\n                this.validateField(\"CurrentPassword\", response.Message);\r\n                let errors = this.state.Errors;\r\n                errors.CurrentPassword = response.Message;\r\n\r\n                this.setState({\r\n                    Errors: errors\r\n                });\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: true\r\n                });\r\n\r\n                const updatedAdministrator = {\r\n                    Token: localStorage.Token,\r\n                    Password: this.state.NewPassword\r\n                };\r\n\r\n                await passwordSettings(updatedAdministrator).then(response => {\r\n                    this.setState({\r\n                        ShowPreloader: false,\r\n                        CurrentPassword: \"\",\r\n                        NewPassword: \"\",\r\n                        ConfirmPassword: \"\"\r\n                    });\r\n\r\n                    if (response.Message === \"Administrator is updated.\") {\r\n                        this.props.OnSettingsSaved();\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            CurrentPassword,\r\n            NewPassword,\r\n            ConfirmPassword,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\" }}>Change Password</div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n                <div className=\"entity-list entity-list-expandable\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" name=\"CurrentPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                    value={CurrentPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Current Password</div>\r\n                            <div className=\"text-danger\">{Errors.CurrentPassword}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" name=\"NewPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                    value={NewPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">New Password</div>\r\n                            <div className=\"text-danger\">{Errors.NewPassword}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" name=\"ConfirmPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                    value={ConfirmPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Confirm Password</div>\r\n                            <div className=\"text-danger\">{Errors.ConfirmPassword}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item active\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-save\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Save Changes?</div>\r\n                            <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                        </div>\r\n                        <div className=\"item-content-expanded\">\r\n                            <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            {ShowPreloader ? <Preloader /> : null}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PasswordSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { getData, updateNaqelSettings } from \"../../../AdministratorFunctions\";\r\n\r\nclass NaqelSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Street: \"\",\r\n            City: \"\",\r\n            Country: \"\",\r\n            ZIPCode: \"\",\r\n            PhoneNumber: \"\",\r\n            Website: \"\",\r\n            BusinessName: \"\",\r\n            BankName: \"\",\r\n            AccountNumber: \"\",\r\n\r\n            ValidStreet: true,\r\n            ValidCity: true,\r\n            ValidCountry: true,\r\n            ValidZIPCode: true,\r\n            ValidPhoneNumber: true,\r\n            ValidWebsite: true,\r\n            ValidBusinessName: true,\r\n            ValidBankName: true,\r\n            ValidAccountNumber: true,\r\n\r\n            ValidForm: false,\r\n            SettingsSaved: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Street: \"\",\r\n                City: \"\",\r\n                Country: \"\",\r\n                ZIPCode: \"\",\r\n                PhoneNumber: \"\",\r\n                Website: \"\",\r\n                BusinessName: \"\",\r\n                BankName: \"\",\r\n                AccountNumber: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"NaqelSettings\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Naqel settings found.\") {\r\n                    let naqelSettings = response.NaqelSettings;\r\n\r\n                    this.setState({\r\n                        Street: naqelSettings.Street,\r\n                        City: naqelSettings.City,\r\n                        Country: naqelSettings.Country,\r\n                        ZIPCode: naqelSettings.ZIPCode,\r\n                        PhoneNumber: naqelSettings.PhoneNumber,\r\n                        Website: naqelSettings.Website,\r\n                        BusinessName: naqelSettings.BusinessName,\r\n                        BankName: naqelSettings.BankName,\r\n                        AccountNumber: naqelSettings.AccountNumber,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Street: \"\",\r\n                        City: \"\",\r\n                        Country: \"\",\r\n                        ZIPCode: \"\",\r\n                        PhoneNumber: \"\",\r\n                        Website: \"\",\r\n                        BusinessName: \"\",\r\n                        BankName: \"\",\r\n                        AccountNumber: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidStreet,\r\n            ValidCity,\r\n            ValidCountry,\r\n            ValidZIPCode,\r\n            ValidPhoneNumber,\r\n            ValidWebsite,\r\n            ValidBusinessName,\r\n            ValidBankName,\r\n            ValidAccountNumber,\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"Street\":\r\n                ValidStreet = value !== \"\";\r\n                Errors.Street = ValidStreet ? \"\" : \"Street is required.\";\r\n                break;\r\n            case \"City\":\r\n                ValidCity = value !== \"\";\r\n                Errors.City = ValidCity ? \"\" : \"City is required.\";\r\n                break;\r\n            case \"Country\":\r\n                ValidCountry = value !== \"\";\r\n                Errors.Country = ValidCountry ? \"\" : \"Country is required.\";\r\n                break;\r\n            case \"ZIPCode\":\r\n                ValidZIPCode = value !== \"\";\r\n                Errors.ZIPCode = ValidZIPCode ? \"\" : \"ZIP code is required.\";\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = value !== \"\";\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is required.\";\r\n                break;\r\n            case \"Website\":\r\n                ValidWebsite = value !== \"\";\r\n                Errors.Website = ValidWebsite ? \"\" : \"Website is required.\";\r\n                break;\r\n            case \"BusinessName\":\r\n                ValidBusinessName = value !== \"\";\r\n                Errors.BusinessName = ValidBusinessName ? \"\" : \"Business name is required.\";\r\n                break;\r\n            case \"BankName\":\r\n                ValidBankName = value !== \"\";\r\n                Errors.BankName = ValidBankName ? \"\" : \"Bank name is required.\";\r\n                break;\r\n            case \"AccountNumber\":\r\n                ValidAccountNumber = value !== \"\";\r\n                Errors.AccountNumber = ValidAccountNumber ? \"\" : \"Account number is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidStreet: ValidStreet,\r\n            ValidCity: ValidCity,\r\n            ValidCountry: ValidCountry,\r\n            ValidZIPCode: ValidZIPCode,\r\n            ValidPhoneNumber: ValidPhoneNumber,\r\n            ValidWebsite: ValidWebsite,\r\n            ValidBusinessName: ValidBusinessName,\r\n            ValidBankName: ValidBankName,\r\n            ValidAccountNumber: ValidAccountNumber,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: ValidStreet &&\r\n                    ValidCity &&\r\n                    ValidCountry &&\r\n                    ValidZIPCode &&\r\n                    ValidPhoneNumber &&\r\n                    ValidWebsite &&\r\n                    ValidBusinessName &&\r\n                    ValidBankName &&\r\n                    ValidAccountNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        const updatedNaqelSettings = {\r\n            Token: localStorage.Token,\r\n            Street: this.state.Street,\r\n            City: this.state.City,\r\n            Country: this.state.Country,\r\n            ZIPCode: this.state.ZIPCode,\r\n            PhoneNumber: this.state.PhoneNumber,\r\n            Website: this.state.Website,\r\n            BusinessName: this.state.BusinessName,\r\n            BankName: this.state.BankName,\r\n            AccountNumber: this.state.AccountNumber,\r\n        };\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        await updateNaqelSettings(updatedNaqelSettings).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Street,\r\n            City,\r\n            Country,\r\n            ZIPCode,\r\n            PhoneNumber,\r\n            Website,\r\n            BusinessName,\r\n            BankName,\r\n            AccountNumber,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Naqel Settings</div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n                <div className=\"entity-list entity-list-expandable\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-map-marker-alt\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"Street\" autoComplete=\"off\"\r\n                                    value={Street} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Street</div>\r\n                            <div className=\"text-danger\">{Errors.Street}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-map-marker-alt\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"City\" autoComplete=\"off\"\r\n                                    value={City} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">City</div>\r\n                            <div className=\"text-danger\">{Errors.City}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-map-marker-alt\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"Country\" autoComplete=\"off\"\r\n                                    value={Country} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Country</div>\r\n                            <div className=\"text-danger\">{Errors.Country}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-map-marker-alt\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"ZIPCode\" autoComplete=\"off\"\r\n                                    value={ZIPCode} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">ZIP Code</div>\r\n                            <div className=\"text-danger\">{Errors.ZIPCode}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-phone\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autoComplete=\"off\"\r\n                                    value={PhoneNumber} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Phone Number</div>\r\n                            <div className=\"text-danger\">{Errors.PhoneNumber}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-globe\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"Website\" autoComplete=\"off\"\r\n                                    value={Website} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Website</div>\r\n                            <div className=\"text-danger\">{Errors.Website}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-cog\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"BusinessName\" autoComplete=\"off\"\r\n                                    value={BusinessName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Business Name</div>\r\n                            <div className=\"text-danger\">{Errors.BusinessName}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-cog\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"BankName\" autoComplete=\"off\"\r\n                                    value={BankName} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Bank Name</div>\r\n                            <div className=\"text-danger\">{Errors.BankName}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-list\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"AccountNumber\" autoComplete=\"off\"\r\n                                    value={AccountNumber} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Account Number</div>\r\n                            <div className=\"text-danger\">{Errors.AccountNumber}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item active\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-save\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Save Changes?</div>\r\n                            <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                        </div>\r\n                        <div className=\"item-content-expanded\">\r\n                            <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            {ShowPreloader ? <Preloader /> : null}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default NaqelSettings;","import React, { Component } from \"react\";\r\nimport GeneralSettings from \"./GeneralSettings\";\r\nimport UsernameAndEmailSettings from \"./UsernameAndEmailSettings\";\r\nimport PasswordSettings from \"./PasswordSettings\";\r\nimport NaqelSettings from \"./NaqellSettings\";\r\n\r\nclass Settings extends Component {\r\n    render() {\r\n        return <section>\r\n            <GeneralSettings OnSettingsSaved={this.props.OnSettingsSaved} />\r\n            <UsernameAndEmailSettings OnSettingsSaved={this.props.OnSettingsSaved} />\r\n            <PasswordSettings OnSettingsSaved={this.props.OnSettingsSaved} />\r\n            <NaqelSettings />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Settings;","import React, { Component } from \"react\";\r\nimport ProfilePhoto from \"./ProfilePhoto\";\r\nimport { getData } from \"../../AdministratorFunctions\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport Settings from \"./settings/Settings\";\r\n\r\nclass Profile extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Email: \"\",\r\n            Username: \"\",\r\n            PhotoURL: \"./images/defaultProfilePhoto.png\"\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Administrator\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Administrator found.\") {\r\n                    let administrator = response.Administrator;\r\n\r\n                    this.setState({\r\n                        FirstName: administrator.FirstName,\r\n                        LastName: administrator.LastName,\r\n                        Email: administrator.Email,\r\n                        Username: administrator.Username,\r\n                        PhotoURL: administrator.PhotoURL\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        FirstName: \"\",\r\n                        LastName: \"\",\r\n                        Email: \"\",\r\n                        Username: \"\",\r\n                        PhotoURL: \"./images/defaultProfilePhoto.png\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            FirstName,\r\n            LastName,\r\n            Email,\r\n            Username,\r\n            PhotoURL\r\n        } = this.state;\r\n\r\n        return <section>\r\n            {/* <PageHeading Heading=\"PROFILE\" /> */}\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <ProfilePhoto PhotoURL={PhotoURL}\r\n                                OnProfilePhotoUpdated={async () => { await this.componentDidMount(); }} />\r\n                        </div>\r\n                        <div className=\"col-md-18\">\r\n                            <div className=\"type-h3 color-default p-t-xxs\">{FirstName + \" \" + LastName}</div>\r\n                            <div className=\"type-sh3\">\r\n                                <span className=\"fas fa-user-shield m-r-xxs\" style={{ color: \"#606060\" }}></span>Administrator\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-24\">\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-at\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Username</div>\r\n                                                    <div className=\"content-text-secondary\">{Username}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list\">\r\n                                        <div className=\"entity-list-item\">\r\n                                            <div className=\"item-icon\">\r\n                                                <span className=\"fas fa-envelope\"></span>\r\n                                            </div>\r\n                                            <div className=\"item-content-primary\">\r\n                                                <div className=\"content-text-primary\">Email</div>\r\n                                                <div className=\"content-text-secondary\">{Email}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Settings OnSettingsSaved={async () => { await this.componentDidMount(); }} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Profile;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { blockDriverAccount } from \"../../AdministratorFunctions\";\r\n\r\nclass BlockAccountDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            BlockDate: \"\",\r\n            Reason: \"\",\r\n\r\n            ValidBlockDate: false,\r\n            ValidReason: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                BlockDate: \"\",\r\n                Reason: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidBlockDate = this.state.ValidBlockDate;\r\n        let ValidReason = this.state.ValidReason;\r\n\r\n        switch (field) {\r\n            case \"BlockDate\":\r\n                ValidBlockDate = (value !== \"\");\r\n                Errors.BlockDate = ValidBlockDate ? \"\" : \"Date is required\";\r\n\r\n                if (Errors.BlockDate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidBlockDate = (new Date(value).getTime() >= new Date().getTime());\r\n                Errors.BlockDate = ValidBlockDate ? \"\" : \"Date must be later than yesterday.\";\r\n                break;\r\n            case \"Reason\":\r\n                ValidReason = (value !== \"\");\r\n                Errors.Reason = ValidReason ? \"\" : \"Reason is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidBlockDate: ValidBlockDate,\r\n            ValidReason: ValidReason,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidBlockDate &&\r\n                        this.state.ValidReason\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const blockedDriver = {\r\n            Token: localStorage.Token,\r\n            DriverID: this.props.Driver.DriverID,\r\n            BlockDate: this.state.BlockDate,\r\n            Reason: this.state.Reason\r\n        };\r\n\r\n        await blockDriverAccount(blockedDriver).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Driver account is blocked.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            BlockDate,\r\n            Reason,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            Driver\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`block-account-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Block Driver</div>\r\n                                                <div className=\"type-sh3 m-b-xxs\">You are going to block\r\n                                                    <span className=\"color-default\">{` ${Driver.FirstName} ${Driver.LastName}`}</span>.\r\n                                                    </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Block Till</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"date\" name=\"BlockDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={BlockDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.BlockDate}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">Reason</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <textarea rows=\"6\" class=\"form-control\" name=\"Reason\" style={{ maxWidth: \"100%\" }}\r\n                                                        value={Reason} onChange={this.onChange}></textarea>\r\n                                                    <span className=\"text-danger\">{Errors.Reason}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Block Now\" className=\"btn btn-danger\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default BlockAccountDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { unblockDriverAccount } from \"../../AdministratorFunctions\";\r\n\r\nclass UnblockAccountDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false,\r\n        };\r\n\r\n        this.onUnblock = this.onUnblock.bind(this);\r\n    }\r\n\r\n    onUnblock = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const unblockedDriver = {\r\n            Token: localStorage.Token,\r\n            DriverID: this.props.Driver.DriverID\r\n        };\r\n\r\n        await unblockDriverAccount(unblockedDriver).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Driver account is unblocked.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            Driver\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`unblock-account-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-h3 color-default p-t-n\">Unblock Driver</div>\r\n                                            <div className=\"type-sh3 m-b-xxs\">Are you sure you want to unblock\r\n                                                <span className=\"color-default\">{` ${Driver.FirstName} ${Driver.LastName}`}</span>.</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-right\">\r\n                                        <button className=\"btn btn-primary\" onClick={this.onUnblock}>Unblock</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default UnblockAccountDialog;","import React, { Component } from \"react\";\r\nimport DriverContainer from \"../../../../containers/driver/DriverContainer\";\r\nimport TruckContainer from \"../../../../containers/truck/TruckContainer\";\r\nimport ProgressRing from \"../../../../controls/ProgressRing\";\r\nimport BlockAccountDialog from \"./BlockAccountDialog\";\r\nimport UnblockAccountDialog from \"./UnblockAccountDialog\";\r\nimport { activateDriverAccount } from \"../../AdministratorFunctions\";\r\n\r\nclass DriverListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onActivateAccount = this.onActivateAccount.bind(this);\r\n    }\r\n\r\n    onActivateAccount = async () => {\r\n        this.setState({\r\n            Refreshing: true\r\n        });\r\n\r\n        const activatedDriver = {\r\n            Token: localStorage.Token,\r\n            DriverID: this.props.Driver.DriverID\r\n        };\r\n\r\n        await activateDriverAccount(activatedDriver).then(async response => {\r\n            this.setState({\r\n                Refreshing: false\r\n            });\r\n\r\n            if (response.Message === \"Driver account is activated.\") {\r\n                this.props.OnAccountActivated(this.props.Driver);\r\n                await this.RefreshDriverContainer();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            Driver\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default p-xxs\">\r\n                <div className=\"entity-list\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <img src={Driver.PhotoURL ? Driver.PhotoURL : \"./images/defaultProfilePhoto.png\"} alt=\"profile_photo.png\"\r\n                                height=\"34\"\r\n                                width=\"34\"\r\n                                style={{\r\n                                    height: \"100%\",\r\n                                    width: \"100%\",\r\n                                    margin: \"0px\",\r\n                                    border: \"3px solid #3A3A3C\"\r\n                                }}/>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"type-h5 color-default p-t-n\">{`${Index + 1}.`}\r\n                                {Refreshing ? <span className=\"m-l-xxxs\"><ProgressRing /></span> : null}\r\n                                {Driver.IsBlocked ? <span class=\"type-h8 badge back-color-danger m-l-xxxs\">BLOCKED</span> : null}\r\n                            </div>\r\n                            <div className=\"content-text-primary\">{`${Driver.FirstName} ${Driver.LastName}`}\r\n                                {Driver.Active ? <span className=\"fa fa-check-circle m-l-xxxs\" style={{ color: \"#25AE88\" }}></span> : null}\r\n                            </div>\r\n                            <div className=\"content-text-secondary color-default\">{Driver.Username}</div>\r\n                            <div className=\"content-text-secondary\">{Driver.Email}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                {Driver.Active ? null : <button className=\"btn btn-primary\"\r\n                    onClick={this.onActivateAccount}>Activate</button>}\r\n\r\n                {Driver.IsBlocked ?\r\n                    <button className=\"btn btn-secondary\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#unblock-account-dialog-${Index}`}>Unblock</button> : \r\n                    <button className=\"btn btn-danger\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#block-account-dialog-${Index}`}>Block</button>}\r\n            </div>\r\n\r\n            <div className=\"back-color-gray\" data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#driver-list-item-${Index}`}>\r\n                <div className=\"type-h4 color-default text-right p-xxxs\">Details\r\n                    <i className=\"fas fa-ellipsis-v\"></i>\r\n                    <i class=\"glyph glyph-add\"></i>\r\n                    <i class=\"glyph glyph-remove\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`driver-list-item-${Index}`}>\r\n                <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                    <li role=\"presentation\" className=\"active\">\r\n                        <a href={`#driver-${Index}`} aria-controls={`driver-${Index}`} role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={async () => { await this.RefreshDriverContainer(); }}>Driver</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href={`#truck-${Index}`} aria-controls={`truck-${Index}`} role=\"tab\" data-toggle=\"tab\"\r\n                            onClick={async () => { await this.RefreshTruckContainer(); }}>Truck</a>\r\n                    </li>\r\n                </ul>\r\n                <div className=\"tab-content\">\r\n                    <div role=\"tabpanel\" className=\"tab-pane active\" id={`driver-${Index}`}>\r\n                        <DriverContainer Refresh={refresh => { this.RefreshDriverContainer = refresh; }} DriverID={Driver.DriverID} />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id={`truck-${Index}`}>\r\n                        <TruckContainer Refresh={refresh => { this.RefreshTruckContainer = refresh; }} DriverID={Driver.DriverID} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {Driver.IsBlocked ?\r\n                <UnblockAccountDialog Index={Index}\r\n                    Driver={Driver}\r\n                    OnOK={() => {\r\n                        this.props.OnAccountBlocked(Driver, false);\r\n                    }} /> :\r\n                <BlockAccountDialog Index={Index}\r\n                    Driver={Driver}\r\n                    OnOK={() => {\r\n                        this.props.OnAccountBlocked(Driver, true);\r\n                    }} />}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DriverListItem;","import React, { Component } from \"react\";\r\nimport { getData } from \"../../AdministratorFunctions\";\r\nimport SearchingContainer from \"../../../../containers/searching/SearchingContainer\";\r\nimport ProgressRing from \"../../../../controls/ProgressRing\";\r\nimport DriverListItem from \"./DriverListItem\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass DriversList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllDrivers: [],\r\n            Drivers: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Drivers\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Drivers found.\") {\r\n                    this.setState({\r\n                        AllDrivers: response.Drivers,\r\n                        Drivers: response.Drivers,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllDrivers: [],\r\n                        Drivers: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                Drivers: this.state.AllDrivers\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allDrivers = this.state.AllDrivers;\r\n        let filteredDrivers = [];\r\n        let count = 0;\r\n\r\n        for (let driver of allDrivers) {\r\n            if (driver.FirstName.includes(searchString) ||\r\n                driver.LastName.includes(searchString) ||\r\n                driver.Email.includes(searchString) ||\r\n                driver.Username.includes(searchString)) {\r\n                filteredDrivers[count++] = driver;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Drivers: filteredDrivers\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Drivers,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            {/* <PageHeading Heading=\"DRIVERS\" /> */}\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-car m-r-xxs\"></span>Drivers</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Naqel Drivers\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search Drivers\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            {(Drivers.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"drivers\" /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {Drivers.map((driver, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <DriverListItem Index={index}\r\n                                Driver={driver}\r\n                                OnAccountActivated={driver => {\r\n                                    let drivers = Drivers;\r\n\r\n                                    for (let driverItem of drivers) {\r\n                                        if (driverItem === driver) {\r\n                                            driverItem.Active = true;\r\n                                            break;\r\n                                        }\r\n                                    }\r\n\r\n                                    this.setState({\r\n                                        Drivers: drivers\r\n                                    });\r\n\r\n                                }}\r\n                                OnAccountBlocked={(driver, isBlocked) => {\r\n                                    let drivers = Drivers;\r\n\r\n                                    for (let driverItem of drivers) {\r\n                                        if (driverItem === driver) {\r\n                                            driverItem.IsBlocked = isBlocked;\r\n                                            break;\r\n                                        }\r\n                                    }\r\n\r\n                                    this.setState({\r\n                                        Drivers: drivers\r\n                                    });\r\n                                }} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DriversList;","import React, { Component } from \"react\";\r\nimport DriversList from \"./DriversList\";\r\n\r\nclass Drivers extends Component {\r\n    render() {\r\n        return <section>\r\n            <DriversList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Drivers;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { setRefundRate } from \"../../AdministratorFunctions\";\r\n\r\nclass SetRefundRateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            RefundRate: this.props.Trader.TraderRefundRate ? this.props.Trader.TraderRefundRate.RefundRate : 0,\r\n\r\n            ValidRefundRate: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                RefundRate: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidRefundRate = this.state.ValidRefundRate;\r\n\r\n        switch (field) {\r\n            case \"RefundRate\":\r\n                ValidRefundRate = (value !== \"\");\r\n                Errors.RefundRate = ValidRefundRate ? \"\" : \"Refund Rate is required\";\r\n\r\n                if (Errors.RefundRate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidRefundRate = (value >= 0 && value <= 100);\r\n                Errors.RefundRate = ValidRefundRate ? \"\" : \"Refund rate must be between 0 and 100\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidRefundRate: ValidRefundRate,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidRefundRate\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const traderRefundRate = {\r\n            Token: localStorage.Token,\r\n            TraderID: this.props.Trader.TraderID,\r\n            RefundRate: this.state.RefundRate\r\n        };\r\n\r\n        await setRefundRate(traderRefundRate).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Refund rate is set.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK(response.RefundRate);\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            RefundRate,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            Trader\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`set-refund-rate-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Refund Rate</div>\r\n                                                <div className=\"type-sh3 m-b-xxs\">This set refund percentage rate for \r\n                                                    <span className=\"color-default\">{` ${Trader.FirstName} ${Trader.LastName}`}</span>.\r\n                                                    </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Refund Rate (%)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"RefundRate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={RefundRate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.RefundRate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Set\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default SetRefundRateDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { chargeTrader } from \"../../AdministratorFunctions\";\r\n\r\nclass ChargeTraderDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false,\r\n        };\r\n\r\n        this.onCharge = this.onCharge.bind(this);\r\n    }\r\n\r\n    onCharge = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const chargedTrader = {\r\n            Token: localStorage.Token,\r\n            TraderID: this.props.Trader.TraderID\r\n        };\r\n\r\n        await chargeTrader(chargedTrader).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Trader is charged.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            Trader\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`charge-trader-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-h3 color-default p-t-n\">Charge Trader</div>\r\n                                            <div className=\"type-sh3 m-b-xxs\">Are you sure you want to charge\r\n                                                <span className=\"color-default\">{` ${Trader.FirstName} ${Trader.LastName}`}</span>? On charging will remove this trader from exonerated list.</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-right\">\r\n                                        <button className=\"btn btn-primary\" onClick={this.onCharge}>Charge</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ChargeTraderDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { exonerateTrader } from \"../../AdministratorFunctions\";\r\n\r\nclass ExonerateTraderDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ExonerateDate: \"\",\r\n            Reason: \"\",\r\n\r\n            ValidExonerateDate: false,\r\n            ValidReason: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                ExonerateDate: \"\",\r\n                Reason: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidExonerateDate,\r\n            ValidReason\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"ExonerateDate\":\r\n                ValidExonerateDate = (value !== \"\");\r\n                Errors.ExonerateDate = ValidExonerateDate ? \"\" : \"Date is required\";\r\n\r\n                if (Errors.ExonerateDate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidExonerateDate = (new Date(value).getTime() >= new Date().getTime());\r\n                Errors.ExonerateDate = ValidExonerateDate ? \"\" : \"Date must be later than yesterday.\";\r\n                break;\r\n            case \"Reason\":\r\n                ValidReason = (value !== \"\");\r\n                Errors.Reason = ValidReason ? \"\" : \"Reason is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidExonerateDate: ValidExonerateDate,\r\n            ValidReason: ValidReason,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: ValidExonerateDate &&\r\n                        this.state.ValidReason\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const exoneratedTrader = {\r\n            Token: localStorage.Token,\r\n            TraderID: this.props.Trader.TraderID,\r\n            ExonerateDate: this.state.ExonerateDate,\r\n            Reason: this.state.Reason\r\n        };\r\n\r\n        await exonerateTrader(exoneratedTrader).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Trader is exonerated.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ExonerateDate,\r\n            Reason,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            Trader\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`exonerate-trader-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Exonerate Trader</div>\r\n                                                <div className=\"type-sh3 m-b-xxs\">You are going to exonerate\r\n                                                    <span className=\"color-default\">{` ${Trader.FirstName} ${Trader.LastName}`}</span>.\r\n                                                    </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Exonerate Till</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"date\" name=\"ExonerateDate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={ExonerateDate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.ExonerateDate}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">Reason</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <textarea rows=\"6\" class=\"form-control\" name=\"Reason\" style={{ maxWidth: \"100%\" }}\r\n                                                        value={Reason} onChange={this.onChange}></textarea>\r\n                                                    <span className=\"text-danger\">{Errors.Reason}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Exonerate Now\" className=\"btn btn-danger\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ExonerateTraderDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../controls/ProgressRing\";\r\nimport TraderContainer from \"../../../../containers/trader/TraderContainer\";\r\nimport SetRefundRateDialog from \"./SetRefundRateDialog\";\r\nimport ChargeTraderDialog from \"./ChargeTraderDialog\";\r\nimport ExonerateTraderDialog from \"./ExonerateTraderDialog\";\r\n\r\nclass TraderListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Refreshing: false\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            Trader\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default p-xxs\">\r\n                <div className=\"entity-list\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <img src={Trader.PhotoURL ? Trader.PhotoURL : \"./images/defaultProfilePhoto.png\"} alt=\"profile_photo.png\"\r\n                                height=\"34\"\r\n                                width=\"34\"\r\n                                style={{\r\n                                    height: \"100%\",\r\n                                    width: \"100%\",\r\n                                    margin: \"0px\",\r\n                                    border: \"3px solid #3A3A3C\"\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"type-h5 color-default p-t-n\">{`${Index + 1}.`}\r\n                                {Refreshing ? <span className=\"m-l-xxxs\"><ProgressRing /></span> : null}\r\n                            </div>\r\n                            <div className=\"content-text-primary\">{`${Trader.FirstName} ${Trader.LastName}`}</div>\r\n                            <div className=\"content-text-secondary color-default\">{Trader.Username}</div>\r\n                            <div className=\"content-text-secondary\">{Trader.Email}</div>\r\n                            <div className=\"content-text-secondary\">{Trader.Type}</div>\r\n                            <div className=\"content-text-secondary\">\r\n                                {Trader.TraderRefundRate ?\r\n                                    `Refund Rate: ${Trader.TraderRefundRate.RefundRate}%` :\r\n                                    `Refund Rate: Not Set`}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                <button className=\"btn btn-primary\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#set-refund-rate-dialog-${Index}`}>Set Refund Rate</button>\r\n\r\n                {Trader.IsExonerated ?\r\n                    <button className=\"btn btn-secondary\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#charge-trader-dialog-${Index}`}>Charge</button> :\r\n                    <button className=\"btn btn-danger\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#exonerate-trader-dialog-${Index}`}>Exonerate</button>}\r\n            </div>\r\n\r\n            <div className=\"back-color-gray\" data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#trader-list-item-${Index}`}>\r\n                <div className=\"type-h4 color-default text-right p-xxxs\">Details\r\n                    <i className=\"fas fa-ellipsis-v\"></i>\r\n                    <i class=\"glyph glyph-add\"></i>\r\n                    <i class=\"glyph glyph-remove\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`trader-list-item-${Index}`}>\r\n                <TraderContainer Refresh={refresh => { this.RefreshTraderContainer = refresh; }} TraderID={Trader.TraderID} />\r\n            </div>\r\n\r\n            <SetRefundRateDialog Index={Index}\r\n                Trader={Trader}\r\n                OnOK={refundRate => {\r\n                    this.props.OnRefundRateSet(Trader, refundRate);\r\n                }} />\r\n\r\n            {Trader.IsExonerated ?\r\n                <ChargeTraderDialog Index={Index}\r\n                    Trader={Trader}\r\n                    OnOK={() => {\r\n                        this.props.OnTraderExonerated(Trader, false);\r\n                    }} /> :\r\n                <ExonerateTraderDialog Index={Index}\r\n                    Trader={Trader}\r\n                    OnOK={() => {\r\n                        this.props.OnTraderExonerated(Trader, true);\r\n                    }} />}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderListItem;","import React, { Component } from \"react\";\r\nimport { getData } from \"../../AdministratorFunctions\";\r\nimport SearchingContainer from \"../../../../containers/searching/SearchingContainer\";\r\nimport ProgressRing from \"../../../../controls/ProgressRing\";\r\nimport TraderListItem from \"./TraderListItem\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass TradersList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllTraders: [],\r\n            Traders: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Traders\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Traders found.\") {\r\n                    this.setState({\r\n                        AllTraders: response.Traders,\r\n                        Traders: response.Traders,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllTraders: [],\r\n                        Traders: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                Traders: this.state.AllTraders\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allTraders = this.state.AllTraders;\r\n        let filteredTraders = [];\r\n        let count = 0;\r\n\r\n        for (let trader of allTraders) {\r\n            if (trader.FirstName.includes(searchString) ||\r\n                trader.LastName.includes(searchString) ||\r\n                trader.Email.includes(searchString) ||\r\n                trader.Username.includes(searchString)) {\r\n                filteredTraders[count++] = trader;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Traders: filteredTraders\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Traders,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            {/* <PageHeading Heading=\"TRADERS\" /> */}\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-briefcase m-r-xxs\"></span>Traders and Brokers</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Naqel Traders and Brokers\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(Traders.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"traders or brokers\" /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {Traders.map((trader, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <TraderListItem Index={index}\r\n                                Trader={trader}\r\n                                OnRefundRateSet={(trader, refundRate) => {\r\n                                    let traders = Traders;\r\n\r\n                                    for (let traderItem of traders) {\r\n                                        if (traderItem === trader) {\r\n                                            traderItem.TraderRefundRate = refundRate;\r\n                                            break;\r\n                                        }\r\n                                    }\r\n\r\n                                    this.setState({\r\n                                        Traders: traders\r\n                                    });\r\n                                }}\r\n                                OnTraderExonerated={(trader, isExonerated) => {\r\n                                    let traders = Traders;\r\n\r\n                                    for (let traderItem of traders) {\r\n                                        if (traderItem === trader) {\r\n                                            traderItem.IsExonerated = isExonerated;\r\n                                            break;\r\n                                        }\r\n                                    }\r\n\r\n                                    this.setState({\r\n                                        Traders: traders\r\n                                    });\r\n                                }} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TradersList;","import React, { Component } from \"react\";\r\nimport TradersList from \"./TradersList\";\r\n\r\nclass Traders extends Component {\r\n    render() {\r\n        return <section>\r\n            <TradersList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Traders;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { addTraderObjectionReason } from \"../../../../AdministratorFunctions\";\r\n\r\nclass AddObjectionReasonDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Reason: \"\",\r\n            ValidReason: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Reason: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidReason = this.state.ValidReason;\r\n\r\n        switch (field) {\r\n            case \"Reason\":\r\n                ValidReason = (value !== \"\");\r\n                Errors.Reason = ValidReason ? \"\" : \"Reason is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidReason: ValidReason,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidReason\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newTraderObjectionReason = {\r\n            Token: localStorage.Token,\r\n            Reason: this.state.Reason\r\n        };\r\n\r\n        await addTraderObjectionReason(newTraderObjectionReason).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Objection reason is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Reason,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`add-trader-objection-reason-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Add New Reason</div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">Reason</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <textarea rows=\"6\" class=\"form-control\" name=\"Reason\" style={{ maxWidth: \"100%\" }}\r\n                                                        value={Reason} onChange={this.onChange}></textarea>\r\n                                                    <span className=\"text-danger\">{Errors.Reason}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddObjectionReasonDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\n\r\nimport {\r\n    deleteTraderObjectionReason,\r\n    verifyTraderObjectionReason\r\n} from \"../../../../AdministratorFunctions\";\r\n\r\nclass ObjectionReasonListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowProgressRing: false\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onVerify = this.onVerify.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        let discardedTraderObjectionReason = {\r\n            Token: localStorage.Token,\r\n            DriverObjectionReasonID: this.props.ObjectionReason.DriverObjectionReasonID\r\n        };\r\n\r\n        await deleteTraderObjectionReason(discardedTraderObjectionReason).then(response => {\r\n            this.setState({\r\n                ShowProgressRing: false\r\n            });\r\n\r\n            if (response.Message === \"Objection reason is deleted.\") {\r\n                this.props.OnObjectionReasonUpdated();\r\n            }\r\n        });\r\n    };\r\n\r\n    onVerify = async () => {\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        let verifiedTraderObjectionReason = {\r\n            Token: localStorage.Token,\r\n            DriverObjectionReasonID: this.props.ObjectionReason.DriverObjectionReasonID\r\n        };\r\n\r\n        await verifyTraderObjectionReason(verifiedTraderObjectionReason).then(response => {\r\n            this.setState({\r\n                ShowProgressRing: false\r\n            });\r\n\r\n            if (response.Message === \"Objection reason is verified.\") {\r\n                this.props.OnObjectionReasonUpdated();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowProgressRing\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            ObjectionReason\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{Index + 1}</strong>\r\n                {ShowProgressRing ? \r\n                    <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </td>\r\n            <td>\r\n                {ObjectionReason.TraderID ?\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span> :\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span>}\r\n            </td>\r\n            <td>{ObjectionReason.Reason}</td>\r\n            <td className=\"text-right\">\r\n                {ObjectionReason.TraderID ?\r\n                    <button className=\"btn btn-primary\" onClick={this.onVerify}>Verify</button> : null}\r\n                <button className=\"btn btn-danger\" onClick={this.onDelete}>Delete</button>\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default ObjectionReasonListItem;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport AddObjectionReasonDialog from \"./AddObjectionReasonDialog\";\r\nimport { getData } from \"../../../../AdministratorFunctions\";\r\n\r\nimport ObjectionReasonListItem from \"./ObjectionReasonListItem\";\r\n\r\nclass ObjectionReasonsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllObjectionReasons: [],\r\n            ObjectionReasons: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderObjectionReasons\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader objection reasons found.\") {\r\n                    this.setState({\r\n                        AllObjectionReasons: response.ObjectionReasons,\r\n                        ObjectionReasons: response.ObjectionReasons,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllObjectionReasons: [],\r\n                        ObjectionReasons: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                ObjectionReasons: this.state.AllObjectionReasons\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allObjectionReasons = this.state.AllObjectionReasons;\r\n        let filteredObjectionReasons = [];\r\n        let count = 0;\r\n\r\n        for (let objectionReason of allObjectionReasons) {\r\n            if (objectionReason.Reason.includes(searchString)) {\r\n                filteredObjectionReasons[count++] = objectionReason;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            ObjectionReasons: filteredObjectionReasons\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ObjectionReasons,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-comment-dots m-r-xxs\"></span>Trader Objection Reasons</div>\r\n                            <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target={`#add-trader-objection-reason-dialog`}>Add New</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <AddObjectionReasonDialog OnOK={async () => { await this.onComponentUpdated(); }} />\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Objection Reasons\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(ObjectionReasons.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"objection reasons\" /> :\r\n                <div class=\"table-responsive back-color-gray\">\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>NUMBER</th>\r\n                                <th>VERIFIED</th>\r\n                                <th>REASON</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {ObjectionReasons.map((objectionReason, index) => {\r\n                                return <ObjectionReasonListItem key={index}\r\n                                    Index={index}\r\n                                    ObjectionReason={objectionReason}\r\n                                    OnObjectionReasonUpdated={async () => { await this.onComponentUpdated(); }} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ObjectionReasonsList;","import React, { Component } from \"react\";\r\nimport ObjectionReasonsList from \"./ObjectionReasonsList\";\r\n\r\nclass TraderObjectionReasons extends Component {\r\n    render() {\r\n        return <section>\r\n            <ObjectionReasonsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderObjectionReasons;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { addDriverObjectionReason } from \"../../../../AdministratorFunctions\";\r\n\r\nclass AddObjectionReasonDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Reason: \"\",\r\n            ValidReason: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Reason: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidReason = this.state.ValidReason;\r\n\r\n        switch (field) {\r\n            case \"Reason\":\r\n                ValidReason = (value !== \"\");\r\n                Errors.Reason = ValidReason ? \"\" : \"Reason is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidReason: ValidReason,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidReason\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newDriverObjectionReason = {\r\n            Token: localStorage.Token,\r\n            Reason: this.state.Reason\r\n        };\r\n\r\n        await addDriverObjectionReason(newDriverObjectionReason).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Objection reason is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Reason,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`add-driver-objection-reason-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Add New Reason</div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">Reason</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <textarea rows=\"6\" class=\"form-control\" name=\"Reason\" style={{ maxWidth: \"100%\" }}\r\n                                                        value={Reason} onChange={this.onChange}></textarea>\r\n                                                    <span className=\"text-danger\">{Errors.Reason}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddObjectionReasonDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\n\r\nimport {\r\n    deleteDriverObjectionReason,\r\n    verifyDriverObjectionReason\r\n} from \"../../../../AdministratorFunctions\";\r\n\r\nclass ObjectionReasonListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowProgressRing: false\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onVerify = this.onVerify.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        let discardedDriverObjectionReason = {\r\n            Token: localStorage.Token,\r\n            DriverObjectionReasonID: this.props.ObjectionReason.DriverObjectionReasonID\r\n        };\r\n\r\n        await deleteDriverObjectionReason(discardedDriverObjectionReason).then(response => {\r\n            this.setState({\r\n                ShowProgressRing: false\r\n            });\r\n\r\n            if (response.Message === \"Objection reason is deleted.\") {\r\n                this.props.OnObjectionReasonUpdated();\r\n            }\r\n        });\r\n    };\r\n\r\n    onVerify = async () => {\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        let verifiedDriverObjectionReason = {\r\n            Token: localStorage.Token,\r\n            DriverObjectionReasonID: this.props.ObjectionReason.DriverObjectionReasonID\r\n        };\r\n\r\n        await verifyDriverObjectionReason(verifiedDriverObjectionReason).then(response => {\r\n            this.setState({\r\n                ShowProgressRing: false\r\n            });\r\n\r\n            if (response.Message === \"Objection reason is verified.\") {\r\n                this.props.OnObjectionReasonUpdated();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowProgressRing\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            ObjectionReason\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{Index + 1}</strong>\r\n                {ShowProgressRing ? \r\n                    <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </td>\r\n            <td>\r\n                {ObjectionReason.DriverID ?\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span> :\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span>}\r\n            </td>\r\n            <td>{ObjectionReason.Reason}</td>\r\n            <td className=\"text-right\">\r\n                {ObjectionReason.DriverID ?\r\n                    <button className=\"btn btn-primary\" onClick={this.onVerify}>Verify</button> : null}\r\n                <button className=\"btn btn-danger\" onClick={this.onDelete}>Delete</button>\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default ObjectionReasonListItem;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport AddObjectionReasonDialog from \"./AddObjectionReasonDialog\";\r\nimport { getData } from \"../../../../AdministratorFunctions\";\r\n\r\nimport ObjectionReasonListItem from \"./ObjectionReasonListItem\";\r\n\r\nclass ObjectionReasonsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllObjectionReasons: [],\r\n            ObjectionReasons: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DriverObjectionReasons\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Driver objection reasons found.\") {\r\n                    this.setState({\r\n                        AllObjectionReasons: response.ObjectionReasons,\r\n                        ObjectionReasons: response.ObjectionReasons,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllObjectionReasons: [],\r\n                        ObjectionReasons: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                ObjectionReasons: this.state.AllObjectionReasons\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allObjectionReasons = this.state.AllObjectionReasons;\r\n        let filteredObjectionReasons = [];\r\n        let count = 0;\r\n\r\n        for (let objectionReason of allObjectionReasons) {\r\n            if (objectionReason.Reason.includes(searchString)) {\r\n                filteredObjectionReasons[count++] = objectionReason;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            ObjectionReasons: filteredObjectionReasons\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ObjectionReasons,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-comment-dots m-r-xxs\"></span>Driver Objection Reasons</div>\r\n                            <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target={`#add-driver-objection-reason-dialog`}>Add New</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <AddObjectionReasonDialog OnOK={async () => { await this.onComponentUpdated(); }} />\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Objection Reasons\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(ObjectionReasons.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"objection reasons\" /> :\r\n                <div class=\"table-responsive back-color-gray\">\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>NUMBER</th>\r\n                                <th>VERIFIED</th>\r\n                                <th>REASON</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {ObjectionReasons.map((objectionReason, index) => {\r\n                                return <ObjectionReasonListItem key={index}\r\n                                    Index={index}\r\n                                    ObjectionReason={objectionReason}\r\n                                    OnObjectionReasonUpdated={async () => { await this.onComponentUpdated(); }} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ObjectionReasonsList;","import React, { Component } from \"react\";\r\nimport ObjectionReasonsList from \"./ObjectionReasonsList\";\r\n\r\nclass DriverObjectionReasons extends Component {\r\n    render() {\r\n        return <section>\r\n            <ObjectionReasonsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DriverObjectionReasons;","import React, { Component } from \"react\";\r\nimport TraderObjectionReasons from \"./traderObjectionReasons/TraderObjectionReasons\";\r\nimport DriverObjectionReasons from \"./driverObjectionReasons/DriverObjectionReasons\";\r\n\r\nclass ObjectionReasons extends Component {\r\n    render() {\r\n        return <section>\r\n            <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#trader-objection-reasons\" aria-controls=\"job-tab\" role=\"tab\" data-toggle=\"tab\">Trader Objection Reasons</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#driver-objection-reasons\" aria-controls=\"trader-tab\" role=\"tab\" data-toggle=\"tab\">Driver Objection Reasons</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div className=\"tab-content\">\r\n                <div role=\"tabpanel\" className=\"tab-pane active\" id=\"trader-objection-reasons\">\r\n                    <TraderObjectionReasons />\r\n                </div>\r\n                <div role=\"tabpanel\" className=\"tab-pane\" id=\"driver-objection-reasons\">\r\n                    <DriverObjectionReasons />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ObjectionReasons;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport JobObjectionContainer from \"../../../../../../containers/onGoingJob/JobObjectionContainer\";\r\nimport { getData } from \"../../../../AdministratorFunctions\";\r\n\r\nclass Objections extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobObjections: [],\r\n            Searching: false,\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"JobObjections\",\r\n                Params: {\r\n                    OnGoingJobID: this.props.OnGoingJobID\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Job objections found.\") {\r\n                    this.props.OnObjectionsFound(response.JobObjections.length);\r\n\r\n                    this.setState({\r\n                        JobObjections: response.JobObjections,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        JobObjections: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            JobObjections,\r\n            Searching\r\n        } = this.state;\r\n\r\n        return <section>\r\n            {(JobObjections.length === 0) ?\r\n                <SearchingContainer Searching={Searching}\r\n                    SearchingFor=\"job objctions\" /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {JobObjections.map((jobObjection, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <JobObjectionContainer Index={index} JobObjection={jobObjection} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default Objections;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { discardObjectionableJob } from \"../../../AdministratorFunctions\";\r\n\r\nclass DiscardObjectionableJobDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false,\r\n        };\r\n\r\n        this.onDiscard = this.onDiscard.bind(this);\r\n    }\r\n\r\n    onDiscard = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const discardedObjectionableJob = {\r\n            Token: localStorage.Token,\r\n            OnGoingJobID: this.props.OnGoingJobID\r\n        };\r\n\r\n        await discardObjectionableJob(discardedObjectionableJob).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Objectionable job is discarded.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            JobNumber\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`discard-objectionable-job-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-h3 color-default p-t-n\">{`Discard Objectionable Job ${JobNumber}`}</div>\r\n                                            <div className=\"type-sh3 m-b-xxs\">Make sure you have taken all the neccesary actions before discrding this job. Are you sure you want to proceed?</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-right\">\r\n                                        <button className=\"btn btn-danger\" onClick={this.onDiscard}>Discard</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DiscardObjectionableJobDialog;","import React, { Component } from \"react\";\r\nimport OnGoingJobContainer from \"../../../../../containers/onGoingJob/JobContainer\";\r\nimport Objections from \"./jobObjections/Objections\";\r\nimport DiscardObjectionableJobDialog from \"./DiscardObjectionableJobDialog\";\r\n\r\nclass ObjectionableJobListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Refreshing: false,\r\n            NumberOfObjections: 0\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            NumberOfObjections\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            ObjectionableJob\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <OnGoingJobContainer Index={Index} OnGoingJob={ObjectionableJob} />\r\n            <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                <button className=\"btn btn-danger m-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#discard-objectionable-job-dialog-${Index}`}>Discard</button>\r\n            </div>\r\n\r\n            <div className=\"back-color-gray\" data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#driver-list-item-${Index}`}>\r\n                <div className=\"type-h4 color-default text-right p-xxxs\">\r\n                    <span class=\"badge back-color-danger m-r-xxs\">{NumberOfObjections}</span>Objections\r\n                    <i className=\"fas fa-ellipsis-v\"></i>\r\n                    <i class=\"glyph glyph-add\"></i>\r\n                    <i class=\"glyph glyph-remove\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`driver-list-item-${Index}`}>\r\n                <Objections OnGoingJobID={ObjectionableJob.OnGoingJobID}\r\n                    OnObjectionsFound={numberOfObjections => {\r\n                        this.setState({\r\n                            NumberOfObjections: numberOfObjections\r\n                        });\r\n                    }} />\r\n            </div>\r\n\r\n            <DiscardObjectionableJobDialog Index={Index}\r\n                OnGoingJobID={ObjectionableJob.OnGoingJobID}\r\n                JobNumber={ObjectionableJob.JobNumber}\r\n                OnOK={this.props.OnJobDiscarded}/>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ObjectionableJobListItem;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport ObjectionableJobListItem from \"./ObjectionableJobListItem\";\r\nimport { getData } from \"../../../AdministratorFunctions\";\r\n\r\nclass ObjectionableJobsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllObjectionableJobs: [],\r\n            ObjectionableJobs: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"ObjectionableJobs\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Objectionable jobs found.\") {\r\n                    this.setState({\r\n                        AllObjectionableJobs: response.ObjectionableJobs,\r\n                        ObjectionableJobs: response.ObjectionableJobs,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllObjectionableJobs: [],\r\n                        ObjectionableJobs: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                ObjectionableJobs: this.state.AllObjectionableJobs\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allObjectionableJobs = this.state.AllObjectionableJobs;\r\n        let filteredObjectionableJobs = [];\r\n        let count = 0;\r\n\r\n        for (let objectionableJob of allObjectionableJobs) {\r\n            if (objectionableJob.JobNumber.includes(searchString)) {\r\n                filteredObjectionableJobs[count++] = objectionableJob;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            ObjectionableJobs: filteredObjectionableJobs\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ObjectionableJobs,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-thumbs-down m-r-xxs\"></span>Objectionable Jobs</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Objectionable Jobs\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search By Job Number\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            {(ObjectionableJobs.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"objectionable jobs\" /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {ObjectionableJobs.map((objectionableJob, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <ObjectionableJobListItem Index={index}\r\n                                ObjectionableJob={objectionableJob}\r\n                                OnJobDiscarded={async () => { await this.onComponentUpdated(); }} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ObjectionableJobsList;","import React, { Component } from \"react\";\r\nimport ObjectionableJobsList from \"./ObjectionableJobsList\";\r\n\r\nclass ObjectionableJobs extends Component {\r\n    render() {\r\n        return <section>\r\n            <ObjectionableJobsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ObjectionableJobs;","import React, { Component } from \"react\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport ObjectionReasons from \"./objectionReasons/ObjectionReasons\";\r\nimport ObjectionableJobs from \"./objectionableJobs/ObjectionableJobs\";\r\n\r\nclass Jobs extends Component {\r\n    render() {\r\n        return <section>\r\n            {/* <PageHeading Heading=\"JOBS\" /> */}\r\n            <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                padding: \"10px\",\r\n                backgroundColor: \"#3A3A3C\",\r\n                width: \"100%\",\r\n                margin: \"0px\",\r\n            }}>\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#objection-reasons\" aria-controls=\"objection-reasons\" role=\"tab\" data-toggle=\"tab\">Objection Reasons</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#objectionable-jobs\" aria-controls=\"objectionable-jobs\" role=\"tab\" data-toggle=\"tab\">Objectionable Jobs</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div class=\"tab-content\">\r\n                <div role=\"tabpanel\" class=\"tab-pane active\" id=\"objection-reasons\">\r\n                    <ObjectionReasons />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"objectionable-jobs\">\r\n                    <ObjectionableJobs />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Jobs;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { addDriverAnswer } from \"../../../AdministratorFunctions\";\r\n\r\nclass AnswerDriverQuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Answer: this.props.Answer,\r\n\r\n            ValidAnswer: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Answer: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidAnswer = this.state.ValidAnswer;\r\n\r\n        switch (field) {\r\n            case \"Answer\":\r\n                ValidAnswer = (value !== \"\");\r\n                Errors.Answer = ValidAnswer ? \"\" : \"Answer is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidAnswer: ValidAnswer,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidAnswer\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const driverAnswer = {\r\n            Token: localStorage.Token,\r\n            DriverQuestionID: this.props.DriverQuestionID,\r\n            Answer: this.state.Answer\r\n        };\r\n\r\n        await addDriverAnswer(driverAnswer).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Answer is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Answer,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            QuestionNumber\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`answer-driver-question-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Answer for Question ID:\r\n                                                    <span className=\"color-default m-l-xxxs\">{QuestionNumber}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">Answer</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <textarea rows=\"6\" class=\"form-control\" name=\"Answer\" style={{ maxWidth: \"100%\" }}\r\n                                                        value={Answer} onChange={this.onChange}></textarea>\r\n                                                    <span className=\"text-danger\">{Errors.Answer}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Share\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AnswerDriverQuestionDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport { getData, addDriverQuestionClass } from \"../../../AdministratorFunctions\";\r\n\r\nclass DriverQuestionClasses extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            QuestionClasses: [],\r\n            AddPressed: false,\r\n            NewClass: \"\",\r\n            ValidNewClass: false,\r\n\r\n            ValidForm: false,\r\n            ShowProgressRing: false,\r\n\r\n            Errors: {\r\n                NewClass: \"No error.\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DriverQuestionClasses\"\r\n            };\r\n\r\n            this.setState({\r\n                ShowProgressRing: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Question classes found.\") {\r\n                    this.setState({\r\n                        QuestionClasses: response.QuestionClasses,\r\n                        ShowProgressRing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        QuestionClasses: [],\r\n                        ShowProgressRing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewClass = this.state.ValidNewClass;\r\n\r\n        switch (field) {\r\n            case \"NewClass\":\r\n                ValidNewClass = (value != \"\");\r\n                Errors.NewClass = ValidNewClass ? \"No error.\" : \"New class in required\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewClass: ValidNewClass\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidNewClass\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        const newDriverQuestionClass = {\r\n            Token: localStorage.Token,\r\n            Class: this.state.NewClass\r\n        };\r\n\r\n        await addDriverQuestionClass(newDriverQuestionClass).then(response => {\r\n            this.setState({\r\n                ShowProgressRing: null\r\n            });\r\n\r\n            if (response.Message === \"Question class is added.\") {\r\n                let questionClasses = this.state.QuestionClasses;\r\n                let errors = this.state.Errors;\r\n\r\n                questionClasses.push(response.QuestionClass);\r\n                errors.NewClass = \"No error.\";\r\n\r\n                this.setState({\r\n                    AddPressed: false,\r\n                    QuestionClasses: questionClasses,\r\n                    Errors: errors,\r\n                    NewClass: \"\"\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            QuestionClasses,\r\n            ShowProgressRing,\r\n            AddPressed,\r\n            NewClass,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            {ShowProgressRing ? <ProgressRing /> : null}\r\n            <div class=\"entity-list entity-list-expandable\">\r\n                <div class=\"entity-list entity-list-add-item-button\">\r\n                    <a class={AddPressed ? \"entity-list-item active\" : \"entity-list-item\"}>\r\n                        <div class=\"item-icon\" onClick={() => {\r\n                            this.state.AddPressed ?\r\n                                this.setState({ AddPressed: false }) :\r\n                                this.setState({ AddPressed: true });\r\n                        }}>\r\n                            <span class=\"glyph glyph-add\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Add a Class</div>\r\n                            <div class=\"content-text-secondary\">{Errors.NewClass}</div>\r\n                        </div>\r\n                        <div class=\"item-content-expanded\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <input type=\"text\" className=\"form-control\" name=\"NewClass\" autoComplete=\"off\"\r\n                                    value={NewClass} onChange={this.onChange} />\r\n                                <input type=\"submit\" value=\"Add\" className=\"btn btn-secondary\" disabled={!ValidForm} />\r\n                            </form>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                {QuestionClasses.map((questionClass, index) => {\r\n                    return <div key={index} class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-cog\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <button type=\"button\" class=\"btn btn-secondary\" style={{ margin: \"0px\", minWidth: \"0px\" }}\r\n                                onClick={() => { this.props.OnClassSelected(questionClass.Class); }}>Select</button>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">{`${index + 1}.`}</div>\r\n                            <div class=\"content-text-secondary\">{questionClass.Class}</div>\r\n                        </div>\r\n                    </div>;\r\n                })}\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DriverQuestionClasses;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport DriverQuestionClasses from \"./DriverQuestionClasses\";\r\nimport { classifyDriverQuestion } from \"../../../AdministratorFunctions\";\r\n\r\nclass ClassifyDriverQuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false,\r\n        };\r\n\r\n        this.onClassSelected = this.onClassSelected.bind(this);\r\n    }\r\n\r\n    onClassSelected = async questionClass => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const classifiedDriverQuestion = {\r\n            Token: localStorage.Token,\r\n            DriverQuestionID: this.props.DriverQuestionID,\r\n            Class: questionClass\r\n        };\r\n\r\n        await classifyDriverQuestion(classifiedDriverQuestion).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Question is classified.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            Class,\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`classify-driver-question-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-h3 color-default p-t-n\">Classify the Question</div>\r\n                                            <div className=\"type-h7 p-t-xxxs\">{Class ? `Current Class: ${Class}` : `Current Class: Unclassified`}</div>\r\n                                            <div className=\"m-t-xxxs\">\r\n                                                <DriverQuestionClasses OnClassSelected={this.onClassSelected} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ClassifyDriverQuestionDialog;","import React, { Component } from \"react\";\r\nimport DriverQuestionContainer from \"../../../../../containers/driverQuestion/DriverQuestionContainer\";\r\nimport AnswerDriverQuestionDialog from \"./AnswerDriverQuestionDialog\";\r\nimport ClassifyDriberQuestionDialog from \"./ClassifyDriverQuestionDialog\";\r\n\r\nclass DriverQuestionListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Question\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <DriverQuestionContainer Index={Index}\r\n                Question={Question} />\r\n\r\n            <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                <button className=\"btn btn-secondary m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#classify-driver-question-dialog-${Index}`}>Classify</button>\r\n\r\n                <button className=\"btn btn-primary m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#answer-driver-question-dialog-${Index}`}>{Question.DriverAnswer ? \"Update Answer\" : \"Answer\"}</button>\r\n            </div>\r\n\r\n            <AnswerDriverQuestionDialog Index={Index}\r\n                DriverQuestionID={Question.DriverQuestionID}\r\n                QuestionNumber={Question.QuestionNumber}\r\n                Answer={Question.DriverAnswer ? Question.DriverAnswer.Answer : \"\"}\r\n                OnOK={this.props.OnQuestionUpdated} />\r\n\r\n            <ClassifyDriberQuestionDialog Index={Index}\r\n                DriverQuestionID={Question.DriverQuestionID}\r\n                Class={Question.Class}\r\n                OnOK={this.props.OnQuestionUpdated}/>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DriverQuestionListItem;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport DriverQuestionListItem from \"./DriverQuestionListItem\";\r\nimport { getData } from \"../../../AdministratorFunctions\";\r\n\r\nclass DriverQuestionsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllQuestions: [],\r\n            Questions: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DriverQuestions\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Questions found.\") {\r\n                    this.setState({\r\n                        AllQuestions: response.Questions,\r\n                        Questions: response.Questions,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllQuestions: [],\r\n                        Questions: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                Questions: this.state.AllQuestions\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allQuestions = this.state.AllQuestions;\r\n        let filteredQuestions = [];\r\n        let count = 0;\r\n\r\n        for (let question of allQuestions) {\r\n            if (question.Question.includes(searchString) ||\r\n                question.QuestionNumber.includes(searchString) ||\r\n                question.Class.includes(searchString)) {\r\n                filteredQuestions[count++] = question;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Questions: filteredQuestions\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Questions,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-question-circle m-r-xxs\"></span>Questions</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Drivers' Questions\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search a Question\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(Questions.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"questions\" /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {Questions.map((question, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <DriverQuestionListItem Index={index}\r\n                                Question={question}\r\n                                OnQuestionUpdated={this.onComponentUpdated} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DriverQuestionsList;","import React, { Component } from \"react\";\r\nimport DriverQuestionsList from \"./DriverQuestionsList\";\r\n\r\nclass DriverQuestions extends Component {\r\n    render() {\r\n        return <section>\r\n            <DriverQuestionsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DriverQuestions;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { addTraderAnswer } from \"../../../AdministratorFunctions\";\r\n\r\nclass AnswerTraderQuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Answer: this.props.Answer,\r\n\r\n            ValidAnswer: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Answer: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidAnswer = this.state.ValidAnswer;\r\n\r\n        switch (field) {\r\n            case \"Answer\":\r\n                ValidAnswer = (value !== \"\");\r\n                Errors.Answer = ValidAnswer ? \"\" : \"Answer is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidAnswer: ValidAnswer,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidAnswer\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const traderAnswer = {\r\n            Token: localStorage.Token,\r\n            TraderQuestionID: this.props.TraderQuestionID,\r\n            Answer: this.state.Answer\r\n        };\r\n\r\n        await addTraderAnswer(traderAnswer).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Answer is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Answer,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            QuestionNumber\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`answer-trader-question-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Answer for Question ID:\r\n                                                    <span className=\"color-default m-l-xxxs\">{QuestionNumber}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">Answer</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <textarea rows=\"6\" class=\"form-control\" name=\"Answer\" style={{ maxWidth: \"100%\" }}\r\n                                                        value={Answer} onChange={this.onChange}></textarea>\r\n                                                    <span className=\"text-danger\">{Errors.Answer}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Share\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AnswerTraderQuestionDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport { getData, addTraderQuestionClass } from \"../../../AdministratorFunctions\";\r\n\r\nclass TraderQuestionClasses extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            QuestionClasses: [],\r\n            AddPressed: false,\r\n            NewClass: \"\",\r\n            ValidNewClass: false,\r\n\r\n            ValidForm: false,\r\n            ShowProgressRing: false,\r\n\r\n            Errors: {\r\n                NewClass: \"No error.\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderQuestionClasses\"\r\n            };\r\n\r\n            this.setState({\r\n                ShowProgressRing: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Question classes found.\") {\r\n                    this.setState({\r\n                        QuestionClasses: response.QuestionClasses,\r\n                        ShowProgressRing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        QuestionClasses: [],\r\n                        ShowProgressRing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewClass = this.state.ValidNewClass;\r\n\r\n        switch (field) {\r\n            case \"NewClass\":\r\n                ValidNewClass = (value != \"\");\r\n                Errors.NewClass = ValidNewClass ? \"No error.\" : \"New class in required\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewClass: ValidNewClass\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidNewClass\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        const newTraderQuestionClass = {\r\n            Token: localStorage.Token,\r\n            Class: this.state.NewClass\r\n        };\r\n\r\n        await addTraderQuestionClass(newTraderQuestionClass).then(response => {\r\n            this.setState({\r\n                ShowProgressRing: null\r\n            });\r\n\r\n            if (response.Message === \"Question class is added.\") {\r\n                let questionClasses = this.state.QuestionClasses;\r\n                let errors = this.state.Errors;\r\n\r\n                questionClasses.push(response.QuestionClass);\r\n                errors.NewClass = \"No error.\";\r\n\r\n                this.setState({\r\n                    AddPressed: false,\r\n                    QuestionClasses: questionClasses,\r\n                    Errors: errors,\r\n                    NewClass: \"\"\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            QuestionClasses,\r\n            ShowProgressRing,\r\n            AddPressed,\r\n            NewClass,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            {ShowProgressRing ? <ProgressRing /> : null}\r\n            <div class=\"entity-list entity-list-expandable\">\r\n                <div class=\"entity-list entity-list-add-item-button\">\r\n                    <a class={AddPressed ? \"entity-list-item active\" : \"entity-list-item\"}>\r\n                        <div class=\"item-icon\" onClick={() => {\r\n                            this.state.AddPressed ?\r\n                                this.setState({ AddPressed: false }) :\r\n                                this.setState({ AddPressed: true });\r\n                        }}>\r\n                            <span class=\"glyph glyph-add\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Add a Class</div>\r\n                            <div class=\"content-text-secondary\">{Errors.NewClass}</div>\r\n                        </div>\r\n                        <div class=\"item-content-expanded\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <input type=\"text\" className=\"form-control\" name=\"NewClass\" autoComplete=\"off\"\r\n                                    value={NewClass} onChange={this.onChange} />\r\n                                <input type=\"submit\" value=\"Add\" className=\"btn btn-secondary\" disabled={!ValidForm} />\r\n                            </form>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                {QuestionClasses.map((questionClass, index) => {\r\n                    return <div key={index} class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-cog\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <button type=\"button\" class=\"btn btn-secondary\" style={{ margin: \"0px\", minWidth: \"0px\" }}\r\n                                onClick={() => { this.props.OnClassSelected(questionClass.Class); }}>Select</button>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">{`${index + 1}.`}</div>\r\n                            <div class=\"content-text-secondary\">{questionClass.Class}</div>\r\n                        </div>\r\n                    </div>;\r\n                })}\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderQuestionClasses;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport TraderQuestionClasses from \"./TraderQuestionClasses\";\r\nimport { classifyTraderQuestion } from \"../../../AdministratorFunctions\";\r\n\r\nclass ClassifyTraderQuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false,\r\n        };\r\n\r\n        this.onClassSelected = this.onClassSelected.bind(this);\r\n    }\r\n\r\n    onClassSelected = async questionClass => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const classifiedTraderQuestion = {\r\n            Token: localStorage.Token,\r\n            TraderQuestionID: this.props.TraderQuestionID,\r\n            Class: questionClass\r\n        };\r\n\r\n        await classifyTraderQuestion(classifiedTraderQuestion).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Question is classified.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            Class,\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`classify-trader-question-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-h3 color-default p-t-n\">Classify the Question</div>\r\n                                            <div className=\"type-h7 p-t-xxxs\">{Class ? `Current Class: ${Class}` : `Current Class: Unclassified`}</div>\r\n                                            <div className=\"m-t-xxxs\">\r\n                                                <TraderQuestionClasses OnClassSelected={this.onClassSelected} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ClassifyTraderQuestionDialog;","import React, { Component } from \"react\";\r\nimport TraderQuestionContainer from \"../../../../../containers/traderQuestion/TraderQuestionContainer\";\r\nimport AnswerTraderQuestionDialog from \"./AnswerTraderQuestionDialog\";\r\nimport ClassifyTraderQuestionDialog from \"./ClassifyTraderQuestionDialog\";\r\n\r\nclass TraderQuestionListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Question\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <TraderQuestionContainer Index={Index}\r\n                Question={Question} />\r\n\r\n            <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                <button className=\"btn btn-secondary m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#classify-trader-question-dialog-${Index}`}>Classify</button>\r\n\r\n                <button className=\"btn btn-primary m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#answer-trader-question-dialog-${Index}`}>{Question.TraderAnswer ? \"Update Answer\" : \"Answer\"}</button>\r\n            </div>\r\n\r\n            <AnswerTraderQuestionDialog Index={Index}\r\n                TraderQuestionID={Question.TraderQuestionID}\r\n                QuestionNumber={Question.QuestionNumber}\r\n                Answer={Question.TraderAnswer ? Question.TraderAnswer.Answer : \"\"}\r\n                OnOK={this.props.OnQuestionUpdated} />\r\n\r\n            <ClassifyTraderQuestionDialog Index={Index}\r\n                TraderQuestionID={Question.TraderQuestionID}\r\n                Class={Question.Class}\r\n                OnOK={this.props.OnQuestionUpdated}/>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderQuestionListItem;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport TraderQuestionListItem from \"./TraderQuestionListItem\";\r\nimport { getData } from \"../../../AdministratorFunctions\";\r\n\r\nclass TraderQuestionsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllQuestions: [],\r\n            Questions: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderQuestions\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Questions found.\") {\r\n                    this.setState({\r\n                        AllQuestions: response.Questions,\r\n                        Questions: response.Questions,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllQuestions: [],\r\n                        Questions: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                Questions: this.state.AllQuestions\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allQuestions = this.state.AllQuestions;\r\n        let filteredQuestions = [];\r\n        let count = 0;\r\n\r\n        for (let question of allQuestions) {\r\n            if (question.Question.includes(searchString) ||\r\n                question.QuestionNumber.includes(searchString) ||\r\n                question.Class.includes(searchString)) {\r\n                filteredQuestions[count++] = question;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Questions: filteredQuestions\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Questions,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-question-circle m-r-xxs\"></span>Questions</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Traders' Questions\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search a Question\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(Questions.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"questions\" /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {Questions.map((question, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <TraderQuestionListItem Index={index}\r\n                                Question={question}\r\n                                OnQuestionUpdated={this.onComponentUpdated} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderQuestionsList;","import React, { Component } from \"react\";\r\nimport TraderQuestionsList from \"./TraderQuestionsList\";\r\n\r\nclass TraderQuestions extends Component {\r\n    render() {\r\n        return <section>\r\n            <TraderQuestionsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderQuestions;","import React, { Component } from \"react\";\r\n\r\nclass ResponsibleQuestionContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Question\r\n        } = this.props;\r\n\r\n        const askedOn = new Date(Question.Created);\r\n        const askedBy = Question.AskedBy;\r\n        const responsibleAnswer = Question.ResponsibleAnswer;\r\n        const answeredOn = responsibleAnswer ? new Date(responsibleAnswer.Created) : null;\r\n        const answeredBy = responsibleAnswer ? responsibleAnswer.AnsweredBy : null;\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"type-h5 color-default p-t-n\">{`${Index + 1}. Question ID: ${Question.QuestionNumber}`}</div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-user\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">\r\n                                            <span className=\"fas fa-copyright m-r-xxxs\"></span>\r\n                                            {`${askedBy.Name}`}\r\n                                        </div>\r\n                                        <div className=\"content-text-secondary\">{`@${askedBy.Username}`}</div>\r\n                                        <div className=\"content-text-secondary\">{`${askedOn.toDateString()} at ${askedOn.toLocaleTimeString()}`}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-question\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">\r\n                                            <span className=\"m-r-xxxs\">Question</span>\r\n                                            {Question.Class ?\r\n                                                <span class=\"badge back-color-golden\">{Question.Class.toUpperCase()}</span> :\r\n                                                <span class=\"badge back-color-golden\">UNCLASSIFIED</span>}\r\n                                        </div>\r\n                                        <div className=\"content-text-secondary\">{Question.Question}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {responsibleAnswer ? \r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-user\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">\r\n                                                <span className=\"fas fa-user-shield m-r-xxxs\"></span>\r\n                                                {`${answeredBy.FirstName} ${answeredBy.LastName}`}\r\n                                            </div>\r\n                                            <div className=\"content-text-secondary\">{`@${answeredBy.Username}`}</div>\r\n                                            <div className=\"content-text-secondary\">{`${answeredOn.toDateString()} at ${answeredOn.toLocaleTimeString()}.`}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-comment\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">\r\n                                                <span className=\"m-r-xxxs\">Answer</span>\r\n                                                {responsibleAnswer.Edited ? <span className=\"color-default\">EDITED</span> : null}\r\n                                            </div>\r\n                                            <div className=\"content-text-secondary\">{responsibleAnswer.Answer}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div> : \r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-comment\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">\r\n                                                <span className=\"m-r-xxxs\">Answer</span>\r\n                                            </div>\r\n                                            <div className=\"content-text-secondary\">This question has not been answered yet.</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n       </section>;\r\n    }\r\n};\r\n\r\nexport default ResponsibleQuestionContainer;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { addResponsibleAnswer } from \"../../../AdministratorFunctions\";\r\n\r\nclass AnswerResponsibleQuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Answer: this.props.Answer,\r\n\r\n            ValidAnswer: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Answer: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidAnswer = this.state.ValidAnswer;\r\n\r\n        switch (field) {\r\n            case \"Answer\":\r\n                ValidAnswer = (value !== \"\");\r\n                Errors.Answer = ValidAnswer ? \"\" : \"Answer is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidAnswer: ValidAnswer,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidAnswer\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const responsibleAnswer = {\r\n            Token: localStorage.Token,\r\n            ResponsibleQuestionID: this.props.ResponsibleQuestionID,\r\n            Answer: this.state.Answer\r\n        };\r\n\r\n        await addResponsibleAnswer(responsibleAnswer).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Answer is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Answer,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            QuestionNumber\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`answer-responsible-question-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Answer for Question ID:\r\n                                                    <span className=\"color-default m-l-xxxs\">{QuestionNumber}</span>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">Answer</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <textarea rows=\"6\" class=\"form-control\" name=\"Answer\" style={{ maxWidth: \"100%\" }}\r\n                                                        value={Answer} onChange={this.onChange}></textarea>\r\n                                                    <span className=\"text-danger\">{Errors.Answer}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Share\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AnswerResponsibleQuestionDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport { getData, addResponsibleQuestionClass } from \"../../../AdministratorFunctions\";\r\n\r\nclass ResponsibleQuestionClasses extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            QuestionClasses: [],\r\n            AddPressed: false,\r\n            NewClass: \"\",\r\n            ValidNewClass: false,\r\n\r\n            ValidForm: false,\r\n            ShowProgressRing: false,\r\n\r\n            Errors: {\r\n                NewClass: \"No error.\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"ResponsibleQuestionClasses\"\r\n            };\r\n\r\n            this.setState({\r\n                ShowProgressRing: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Question classes found.\") {\r\n                    this.setState({\r\n                        QuestionClasses: response.QuestionClasses,\r\n                        ShowProgressRing: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        QuestionClasses: [],\r\n                        ShowProgressRing: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidNewClass = this.state.ValidNewClass;\r\n\r\n        switch (field) {\r\n            case \"NewClass\":\r\n                ValidNewClass = (value != \"\");\r\n                Errors.NewClass = ValidNewClass ? \"No error.\" : \"New class in required\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewClass: ValidNewClass\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidNewClass\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        const newResponsibleQuestionClass = {\r\n            Token: localStorage.Token,\r\n            Class: this.state.NewClass\r\n        };\r\n\r\n        await addResponsibleQuestionClass(newResponsibleQuestionClass).then(response => {\r\n            this.setState({\r\n                ShowProgressRing: null\r\n            });\r\n\r\n            if (response.Message === \"Question class is added.\") {\r\n                let questionClasses = this.state.QuestionClasses;\r\n                let errors = this.state.Errors;\r\n\r\n                questionClasses.push(response.QuestionClass);\r\n                errors.NewClass = \"No error.\";\r\n\r\n                this.setState({\r\n                    AddPressed: false,\r\n                    QuestionClasses: questionClasses,\r\n                    Errors: errors,\r\n                    NewClass: \"\"\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            QuestionClasses,\r\n            ShowProgressRing,\r\n            AddPressed,\r\n            NewClass,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            {ShowProgressRing ? <ProgressRing /> : null}\r\n            <div class=\"entity-list entity-list-expandable\">\r\n                <div class=\"entity-list entity-list-add-item-button\">\r\n                    <a class={AddPressed ? \"entity-list-item active\" : \"entity-list-item\"}>\r\n                        <div class=\"item-icon\" onClick={() => {\r\n                            this.state.AddPressed ?\r\n                                this.setState({ AddPressed: false }) :\r\n                                this.setState({ AddPressed: true });\r\n                        }}>\r\n                            <span class=\"glyph glyph-add\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">Add a Class</div>\r\n                            <div class=\"content-text-secondary\">{Errors.NewClass}</div>\r\n                        </div>\r\n                        <div class=\"item-content-expanded\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <input type=\"text\" className=\"form-control\" name=\"NewClass\" autoComplete=\"off\"\r\n                                    value={NewClass} onChange={this.onChange} />\r\n                                <input type=\"submit\" value=\"Add\" className=\"btn btn-secondary\" disabled={!ValidForm} />\r\n                            </form>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                {QuestionClasses.map((questionClass, index) => {\r\n                    return <div key={index} class=\"entity-list-item\">\r\n                        <div class=\"item-icon\">\r\n                            <span class=\"fas fa-cog\"></span>\r\n                        </div>\r\n                        <div class=\"item-content-secondary\">\r\n                            <button type=\"button\" class=\"btn btn-secondary\" style={{ margin: \"0px\", minWidth: \"0px\" }}\r\n                                onClick={() => { this.props.OnClassSelected(questionClass.Class); }}>Select</button>\r\n                        </div>\r\n                        <div class=\"item-content-primary\">\r\n                            <div class=\"content-text-primary\">{`${index + 1}.`}</div>\r\n                            <div class=\"content-text-secondary\">{questionClass.Class}</div>\r\n                        </div>\r\n                    </div>;\r\n                })}\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ResponsibleQuestionClasses;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport ResponsibleQuestionClasses from \"./ResponsibleQuestionClasses\";\r\nimport { classifyResponsibleQuestion } from \"../../../AdministratorFunctions\";\r\n\r\nclass ClassifyResponsibleQuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false,\r\n        };\r\n\r\n        this.onClassSelected = this.onClassSelected.bind(this);\r\n    }\r\n\r\n    onClassSelected = async questionClass => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const classifiedResponsibleQuestion = {\r\n            Token: localStorage.Token,\r\n            ResponsibleQuestionID: this.props.ResponsibleQuestionID,\r\n            Class: questionClass\r\n        };\r\n\r\n        await classifyResponsibleQuestion(classifiedResponsibleQuestion).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Question is classified.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            Class,\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`classify-responsible-question-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-h3 color-default p-t-n\">Classify the Question</div>\r\n                                            <div className=\"type-h7 p-t-xxxs\">{Class ? `Current Class: ${Class}` : `Current Class: Unclassified`}</div>\r\n                                            <div className=\"m-t-xxxs\">\r\n                                                <ResponsibleQuestionClasses OnClassSelected={this.onClassSelected} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ClassifyResponsibleQuestionDialog;","import React, { Component } from \"react\";\r\nimport ResponsibleQuestionContainer from \"../../../../../containers/responsibleQuestion/ResponsibleQuestionContainer\";\r\nimport AnswerResponsibleQuestionDialog from \"./AnswerResponsibleQuestionDialog\";\r\nimport ClassifyResponsibleQuestionDialog from \"./ClassifyResponsibleQuestionDialog\";\r\n\r\nclass ResponsibleQuestionListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Question\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <ResponsibleQuestionContainer Index={Index}\r\n                Question={Question} />\r\n\r\n            <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                <button className=\"btn btn-secondary m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#classify-responsible-question-dialog-${Index}`}>Classify</button>\r\n\r\n                <button className=\"btn btn-primary m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#answer-responsible-question-dialog-${Index}`}>{Question.ResponsibleAnswer ? \"Update Answer\" : \"Answer\"}</button>\r\n            </div>\r\n\r\n            <AnswerResponsibleQuestionDialog Index={Index}\r\n                ResponsibleQuestionID={Question.ResponsibleQuestionID}\r\n                QuestionNumber={Question.QuestionNumber}\r\n                Answer={Question.ResponsibleAnswer ? Question.ResponsibleAnswer.Answer : \"\"}\r\n                OnOK={this.props.OnQuestionUpdated} />\r\n\r\n            <ClassifyResponsibleQuestionDialog Index={Index}\r\n                ResponsibleQuestionID={Question.ResponsibleQuestionID}\r\n                Class={Question.Class}\r\n                OnOK={this.props.OnQuestionUpdated} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ResponsibleQuestionListItem;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport ResponsibleQuestionListItem from \"./ResponsibleQuestionListItem\";\r\nimport { getData } from \"../../../AdministratorFunctions\";\r\n\r\nclass ResponsibleQuestionsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllQuestions: [],\r\n            Questions: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"ResponsibleQuestions\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Questions found.\") {\r\n                    this.setState({\r\n                        AllQuestions: response.Questions,\r\n                        Questions: response.Questions,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllQuestions: [],\r\n                        Questions: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                Questions: this.state.AllQuestions\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allQuestions = this.state.AllQuestions;\r\n        let filteredQuestions = [];\r\n        let count = 0;\r\n\r\n        for (let question of allQuestions) {\r\n            if (question.Question.includes(searchString) ||\r\n                question.QuestionNumber.includes(searchString) ||\r\n                question.Class.includes(searchString)) {\r\n                filteredQuestions[count++] = question;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Questions: filteredQuestions\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Questions,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-question-circle m-r-xxs\"></span>Questions</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>TC Responsibles' Questions\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search a Question\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(Questions.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"questions\" /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {Questions.map((question, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <ResponsibleQuestionListItem Index={index}\r\n                                Question={question}\r\n                                OnQuestionUpdated={this.onComponentUpdated} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ResponsibleQuestionsList;","import React, { Component } from \"react\";\r\nimport ResponsibleQuestionsList from \"./ResponsibleQuestionsList\";\r\n\r\nclass ResponsibleQuestions extends Component {\r\n    render() {\r\n        return <section>\r\n            <ResponsibleQuestionsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ResponsibleQuestions;","import React, { Component } from \"react\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport DriverQuestions from \"./driverQuestions/DriverQuestions\";\r\nimport TraderQuestions from \"./traderQuestions/TraderQuestions\";\r\nimport ResponsibleQuestions from \"./responsibleQuestions/ResponsibleQuestions\";\r\n\r\nclass Questions extends Component {\r\n    render() {\r\n        return <section>\r\n            {/* <PageHeading Heading=\"QUESTIONS\" /> */}\r\n            <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                padding: \"10px\",\r\n                backgroundColor: \"#3A3A3C\",\r\n                width: \"100%\",\r\n                margin: \"0px\",\r\n            }}>\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#driver-questions\" aria-controls=\"driver-questions\" role=\"tab\" data-toggle=\"tab\">Drivers' Questions</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#trader-questions\" aria-controls=\"trader-questions\" role=\"tab\" data-toggle=\"tab\">Traders' Questions</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#responsible-questions\" aria-controls=\"responsible-questions\" role=\"tab\" data-toggle=\"tab\">TC Responsibles' Questions</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div class=\"tab-content\">\r\n                <div role=\"tabpanel\" class=\"tab-pane active\" id=\"driver-questions\">\r\n                    <DriverQuestions />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"trader-questions\">\r\n                    <TraderQuestions />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"responsible-questions\">\r\n                    <ResponsibleQuestions />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Questions;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { setGlobalFeeRate } from \"../../../../AdministratorFunctions\";\r\n\r\nclass SetGlobalFeeRateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            FeeRate: \"\",\r\n\r\n            ValidFeeRate: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                FeeRate: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFeeRate = this.state.ValidFeeRate;\r\n\r\n        switch (field) {\r\n            case \"FeeRate\":\r\n                ValidFeeRate = (value !== \"\");\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : \"Fee rate is required\";\r\n\r\n                if (Errors.FeeRate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidFeeRate = (value >= 1 && value <= 100);\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : \"Fee Rate can be between 1 and 100.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFeeRate: ValidFeeRate,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidFeeRate\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const feeRate = {\r\n            Token: localStorage.Token,\r\n            FeeRate: this.state.FeeRate\r\n        };\r\n\r\n        await setGlobalFeeRate(feeRate).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Global fee rate is set.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            FeeRate,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`set-global-fee-rate-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Set Global Fee Rate</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Global Fee Rate (%)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"FeeRate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={FeeRate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.FeeRate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Set\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default SetGlobalFeeRateDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { setTemporaryFeeRate } from \"../../../../AdministratorFunctions\";\r\n\r\nclass SetTemporaryFeeRateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            FeeRate: \"\",\r\n            Date: \"\",\r\n\r\n            ValidFeeRate: false,\r\n            ValidDate: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                FeeRate: \"\",\r\n                Date: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFeeRate = this.state.ValidFeeRate;\r\n        let ValidDate = this.state.ValidDate;\r\n\r\n        switch (field) {\r\n            case \"FeeRate\":\r\n                ValidFeeRate = (value !== \"\");\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : \"Fee rate is required\";\r\n\r\n                if (Errors.FeeRate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidFeeRate = (value >= 1 && value <= 100);\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : \"Fee Rate can be between 1 and 100.\";\r\n                break;\r\n            case \"Date\":\r\n                ValidDate = (value !== \"\");\r\n                Errors.Date = ValidDate ? \"\" : \"Date is required\";\r\n\r\n                if (Errors.Date !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidDate = (new Date(value).getTime() >= new Date().getTime());\r\n                Errors.Date = ValidDate ? \"\" : \"Date must be later than yesterday.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFeeRate: ValidFeeRate,\r\n            ValidDate: ValidDate\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidFeeRate &&\r\n                        this.state.ValidDate\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const temporaryFeeRateData = {\r\n            Token: localStorage.Token,\r\n            FeeRate: this.state.FeeRate,\r\n            Date: this.state.Date\r\n        };\r\n\r\n        await setTemporaryFeeRate(temporaryFeeRateData).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Temporary fee rate is set.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            FeeRate,\r\n            Date,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`set-temporary-fee-rate-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Set Temporary Fee Rate</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Temporary Fee Rate (%)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"FeeRate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={FeeRate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.FeeRate}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Date Up To</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"date\" name=\"Date\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={Date} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.Date}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Set\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default SetTemporaryFeeRateDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { clearTemporaryFeeRate } from \"../../../../AdministratorFunctions\";\r\n\r\nclass ClearTemporaryFeeRateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false,\r\n        };\r\n\r\n        this.onClear = this.onClear.bind(this);\r\n    }\r\n\r\n    onClear = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const clearedTemporaryFeeRate = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        await clearTemporaryFeeRate(clearedTemporaryFeeRate).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Temporary fee rate is cleared.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`clear-temporary-fee-rate-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-h3 color-default p-t-n\">Clear Temporary Fee Rate</div>\r\n                                            <div className=\"type-sh3 m-b-xxs\">Are you sure you want to clear temporary fee rate before its due date?</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-right\">\r\n                                        <button className=\"btn btn-danger\" onClick={this.onClear}>Clear</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ClearTemporaryFeeRateDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"./../../../../../../controls/ProgressRing\";\r\nimport { getData } from \"../../../../AdministratorFunctions\";\r\nimport SetGlobalFeeRateDialog from \"./SetGlobalFeeRateDialog\";\r\nimport SetTemporaryFeeRateDialog from \"./SetTemporaryFeeRateDialog\";\r\nimport ClearTemporaryFeeRateDialog from \"./ClearTemporaryFeeRateDialog\";\r\n\r\nclass GlobalAndTemporaryRates extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            GlobalFeeRate: 0.00,\r\n            TemporaryFeeRateData: null, \r\n            Searching: false\r\n        }\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"GlobalAndTemporaryFeeRates\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Global and temporary fee rates found.\") {\r\n                    this.setState({\r\n                        GlobalFeeRate: response.GlobalFeeRate,\r\n                        TemporaryFeeRateData: response.TemporaryFeeRateData,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        GlobalFeeRate: 0.00,\r\n                        TemporaryFeeRateData: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            GlobalFeeRate,\r\n            TemporaryFeeRateData,\r\n            Searching\r\n        } = this.state;\r\n\r\n        const dateUpTo = TemporaryFeeRateData ? new Date(TemporaryFeeRateData.Date) : null;\r\n\r\n        return <section>\r\n            <div class=\"alert alert-info m-n\" style={{ backgroundColor: \"#E5E5E5\" }}>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <div className=\"entity-list\">\r\n                            <div className=\"entity-list-item\">\r\n                                <div className=\"item-icon\" style={{ backgroundColor: \"#E5E5E5\", color: \"#008575\" }}>\r\n                                    <span className=\"fas fa-tag\"></span>\r\n                                </div>\r\n                                <div className=\"item-content-primary\">\r\n                                    <div className=\"content-text-primary\">Global Fee Rate\r\n                                        {Searching ? <span className=\"m-l-xxxs\"><ProgressRing /></span> : null}\r\n                                    </div>\r\n                                    <div className=\"content-text-secondary\">{GlobalFeeRate ? `${GlobalFeeRate}%` : \"Not found.\"}</div>\r\n                                    <button className=\"btn btn-primary\"\r\n                                        data-toggle=\"modal\"\r\n                                        data-target={`#set-global-fee-rate-dialog`}>Set</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <div className=\"entity-list\">\r\n                            <div className=\"entity-list-item\">\r\n                                <div className=\"item-icon\" style={{ backgroundColor: \"#E5E5E5\", color: \"#008575\" }}>\r\n                                    <span className=\"fas fa-tag\"></span>\r\n                                </div>\r\n                                <div className=\"item-content-primary\">\r\n                                    <div className=\"content-text-primary\">Temporary Fee Rate\r\n                                        {Searching ? <span className=\"m-l-xxxs\"><ProgressRing /></span> : null}\r\n                                    </div>\r\n\r\n                                    {TemporaryFeeRateData ?\r\n                                        <section>\r\n                                            <div className=\"content-text-secondary\">{`${TemporaryFeeRateData.FeeRate}%`}</div>\r\n                                            <div className=\"content-text-secondary\">{`UP TO: ${dateUpTo.toDateString()}`}</div>\r\n                                            <button className=\"btn btn-danger\"\r\n                                                data-toggle=\"modal\"\r\n                                                data-target={`#clear-temporary-fee-rate-dialog`}>Clear</button>\r\n                                        </section> :\r\n                                        <section>\r\n                                            <div className=\"content-text-secondary\">Not found.</div>\r\n                                            <button className=\"btn btn-primary\"\r\n                                                data-toggle=\"modal\"\r\n                                                data-target={`#set-temporary-fee-rate-dialog`}>Set</button>\r\n                                        </section>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <SetGlobalFeeRateDialog OnOK={this.onComponentUpdated} />\r\n            <SetTemporaryFeeRateDialog OnOK={this.onComponentUpdated} />\r\n            <ClearTemporaryFeeRateDialog OnOK={this.onComponentUpdated} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default GlobalAndTemporaryRates;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { updatePriceRange } from \"../../../../AdministratorFunctions\";\r\n\r\nclass UpdatePriceRangeDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            FeeRate: this.props.FeeRate,\r\n\r\n            ValidFeeRate: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                FeeRate: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFeeRate = this.state.ValidFeeRate;\r\n\r\n        switch (field) {\r\n            case \"FeeRate\":\r\n                ValidFeeRate = (value !== \"\");\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : \"Fee rate is required\";\r\n\r\n                if (Errors.FeeRate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidFeeRate = (value >= 1 && value <= 100);\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : \"Fee Rate can be between 1 and 100.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFeeRate: ValidFeeRate,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidFeeRate\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const updatedPriceRange = {\r\n            Token: localStorage.Token,\r\n            PriceRangeID: this.props.PriceRangeID,\r\n            FeeRate: this.state.FeeRate\r\n        };\r\n\r\n        await updatePriceRange(updatedPriceRange).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Price range is updated.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK(this.state.FeeRate);\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            FeeRate,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        const {\r\n            Index\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`update-fee-rate-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Update Fee Rate</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Fee Rate (%)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"FeeRate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={FeeRate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.FeeRate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Set\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default UpdatePriceRangeDialog;","import React, { Component } from \"react\";\r\nimport UpdatePriceRangeDialog from \"./UpdatePriceRangeDialog\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\nimport { deletePriceRange } from \"../../../../AdministratorFunctions\";\r\n\r\nclass PriceRangeListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowProgressRing: false\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        let discardedPriceRange = {\r\n            Token: localStorage.Token,\r\n            PriceRangeID: this.props.PriceRange.PriceRangeID\r\n        };\r\n\r\n        await deletePriceRange(discardedPriceRange).then(response => {\r\n            this.setState({\r\n                ShowProgressRing: false\r\n            });\r\n\r\n            if (response.Message === \"Price range is deleted.\") {\r\n                this.props.OnPriceRangeDeleted(this.props.PriceRange);\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowProgressRing\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            PriceRange\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{Index + 1}</strong>\r\n                {ShowProgressRing ?\r\n                    <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </td>\r\n\r\n            <td>{`$${parseFloat(PriceRange.StartRange).toFixed(2)}`}</td>\r\n            <td>{`$${parseFloat(PriceRange.EndRange).toFixed(2)}`}</td>\r\n            <td>{`${PriceRange.FeeRate}%`}</td>\r\n\r\n            <td className=\"text-right\">\r\n                <button className=\"btn btn-secondary\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#update-fee-rate-dialog-${Index}`}>Edit Fee Rate</button>\r\n                <button className=\"btn btn-danger\" onClick={this.onDelete}>Delete</button>\r\n\r\n                <UpdatePriceRangeDialog Index={Index}\r\n                    FeeRate={PriceRange.FeeRate}\r\n                    PriceRangeID={PriceRange.PriceRangeID}\r\n                    OnOK={this.props.OnPriceRangeUpdated} />\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default PriceRangeListItem;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { addPriceRange } from \"../../../../AdministratorFunctions\";\r\n\r\nclass AddPriceRangeDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            StartRange: \"\",\r\n            EndRange: \"\",\r\n            FeeRate: \"\",\r\n\r\n            ValidStartRange: false,\r\n            ValidEndRange: false,\r\n            ValidFeeRate: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                StartRange: \"\",\r\n                EndRange: \"\",\r\n                FeeRate: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidStartRange = this.state.ValidStartRange;\r\n        let ValidEndRange = this.state.ValidEndRange;\r\n        let ValidFeeRate = this.state.ValidFeeRate;\r\n\r\n        switch (field) {\r\n            case \"StartRange\":\r\n                ValidStartRange = (value !== \"\");\r\n                Errors.StartRange = ValidStartRange ? \"\" : \"Starting price is required\";\r\n\r\n                if (Errors.StartRange !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                if (this.state.EndRange !== \"\") {\r\n                    ValidStartRange = (value <= parseFloat(this.state.EndRange));\r\n                    Errors.StartRange = ValidStartRange ? \"\" : \"Starting price must be less than Ending price.\";\r\n\r\n                    if (Errors.StartRange !== \"\") {\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n                ValidEndRange = (parseFloat(this.state.EndRange) >= value);\r\n                Errors.EndRange = ValidEndRange ? \"\" : \"Ending price must be greater than Starting price.\";\r\n                break;\r\n            case \"EndRange\":\r\n                ValidEndRange = (value !== \"\");\r\n                Errors.EndRange = ValidEndRange ? \"\" : \"Ending price is required\";\r\n\r\n                if (Errors.EndRange !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidEndRange = (value >= parseFloat(this.state.StartRange));\r\n                Errors.EndRange = ValidEndRange ? \"\" : \"Ending price must be greater than Starting price.\";\r\n\r\n                if (Errors.EndRange !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidStartRange = (parseFloat(this.state.StartRange) <= value);\r\n                Errors.StartRange = ValidStartRange ? \"\" : \"Starting price must be less than Ending price.\";\r\n                break;\r\n            case \"FeeRate\":\r\n                ValidFeeRate = (value !== \"\");\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : \"Fee rate is required\";\r\n\r\n                if (Errors.FeeRate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidFeeRate = (value >= 1 && value <= 100);\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : \"Fee Rate can be between 1 and 100.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidStartRange: ValidStartRange,\r\n            ValidEndRange: ValidEndRange,\r\n            ValidFeeRate: ValidFeeRate,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidStartRange &&\r\n                        this.state.ValidEndRange &&\r\n                        this.state.ValidFeeRate\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newPriceRange = {\r\n            Token: localStorage.Token,\r\n            StartRange: this.state.StartRange,\r\n            EndRange: this.state.EndRange,\r\n            FeeRate: this.state.FeeRate\r\n        };\r\n\r\n        await addPriceRange(newPriceRange).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Price range is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK(response.PriceRange);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            StartRange,\r\n            EndRange,\r\n            FeeRate,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`add-price-range-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n m-b-xxs\">Add Price Range</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Starting Price (USD)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" min=\"0.00\" step=\"0.01\" name=\"StartRange\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={StartRange} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.StartRange}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Ending Price (USD)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" min=\"0.00\" step=\"0.01\" name=\"EndRange\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={EndRange} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.EndRange}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Fee Rate (%)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"FeeRate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={FeeRate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.FeeRate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddPriceRangeDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport PriceRangeListItem from \"./PriceRangeListItem\";\r\nimport AddPriceRangeDialog from \"./AddPriceRangeDialog\";\r\nimport { getData } from \"../../../../AdministratorFunctions\";\r\n\r\nclass PriceRangesList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PriceRanges: [],\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"PriceRanges\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Price ranges found.\") {\r\n                    this.setState({\r\n                        PriceRanges: response.PriceRanges,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        PriceRanges: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            PriceRanges,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Price Ranges\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                <button className=\"btn btn-primary\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#add-price-range-dialog`}>Add New Range</button>\r\n            </div>\r\n\r\n            <AddPriceRangeDialog OnOK={priceRange => {\r\n                let priceRanges = PriceRanges;\r\n                priceRanges.push(priceRange);\r\n\r\n                this.setState({\r\n                    PriceRanges: priceRanges\r\n                });\r\n            }} />\r\n\r\n            {(PriceRanges.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"price ranges\" /> :\r\n                <div class=\"table-responsive back-color-gray\">\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>NUMBER</th>\r\n                                <th>STARTING PRICE</th>\r\n                                <th>ENDING PRICE</th>\r\n                                <th>FEE RATE</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {PriceRanges.map((priceRange, index) => {\r\n                                return <PriceRangeListItem key={index}\r\n                                    Index={index}\r\n                                    PriceRange={priceRange}\r\n                                    OnPriceRangeUpdated={feeRate => {\r\n                                        let priceRanges = PriceRanges;\r\n\r\n                                        for (let priceRangeItem of priceRanges) {\r\n                                            if (priceRangeItem === priceRange) {\r\n                                                priceRange.FeeRate = feeRate;\r\n                                                break;\r\n                                            }\r\n                                        }\r\n\r\n                                        this.setState({\r\n                                            PriceRanges: priceRanges\r\n                                        });\r\n                                    }}\r\n                                    OnPriceRangeDeleted={priceRange => {\r\n                                        let priceRanges = [];\r\n\r\n                                        for (let priceRangeItem of PriceRanges) {\r\n                                            if (priceRangeItem !== priceRange) {\r\n                                                priceRanges.push(priceRangeItem);\r\n                                            }\r\n                                        }\r\n\r\n                                        this.setState({\r\n                                            PriceRanges: priceRanges\r\n                                        });\r\n                                    }} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PriceRangesList;","import React, { Component } from \"react\";\r\nimport PriceRangesList from \"./PriceRangesList\";\r\n\r\nclass PriceRanges extends Component {\r\n    render() {\r\n        return <section>\r\n            <PriceRangesList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PriceRanges;","import React, { Component } from \"react\";\r\nimport GlobalAndTemporaryRates from \"./globalAndTemporayRates/GlobalAndTemporaryRates\";\r\nimport PriceRanges from \"./priceRanges/PriceRanges\";\r\n\r\nclass GeneralRates extends Component {\r\n    render() {\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-tag m-r-xxs\"></span>General Rates</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <GlobalAndTemporaryRates />\r\n            <PriceRanges />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default GeneralRates;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { updateTraderRate } from \"../../../AdministratorFunctions\";\r\n\r\nclass UpdateTraderRateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            FeeRate: this.props.FeeRate,\r\n\r\n            ValidFeeRate: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                FeeRate: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidFeeRate = this.state.ValidFeeRate;\r\n\r\n        switch (field) {\r\n            case \"FeeRate\":\r\n                ValidFeeRate = (value !== \"\");\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : \"Fee rate is required\";\r\n\r\n                if (Errors.FeeRate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidFeeRate = (value >= 1 && value <= 100);\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : \"Fee Rate can be between 1 and 100.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidFeeRate: ValidFeeRate,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidFeeRate\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const updatedTraderRate = {\r\n            Token: localStorage.Token,\r\n            TraderRateID: this.props.TraderRateID,\r\n            FeeRate: this.state.FeeRate\r\n        };\r\n\r\n        await updateTraderRate(updatedTraderRate).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Trader rate is updated.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK(this.state.FeeRate);\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            FeeRate,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        const {\r\n            Index\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`update-trader-rate-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Update Fee Rate</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Fee Rate (%)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"FeeRate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={FeeRate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.FeeRate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Set\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default UpdateTraderRateDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport UpdateTraderRateDialog from \"./UpdateTraderRateDialog\";\r\nimport { deleteTraderRate } from \"../../../AdministratorFunctions\";\r\n\r\nclass TraderRateListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowProgressRing: false\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            ShowProgressRing: true\r\n        });\r\n\r\n        let discardedTraderRate = {\r\n            Token: localStorage.Token,\r\n            TraderRateID: this.props.TraderRate.TraderRateID\r\n        };\r\n\r\n        await deleteTraderRate(discardedTraderRate).then(response => {\r\n            this.setState({\r\n                ShowProgressRing: false\r\n            });\r\n\r\n            if (response.Message === \"Trader rate is deleted.\") {\r\n                this.props.OnTraderRateDeleted(this.props.TraderRate);\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowProgressRing\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            TraderRate\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{Index + 1}</strong>\r\n                {ShowProgressRing ? \r\n                    <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </td>\r\n\r\n            <td>{TraderRate.Username}</td>\r\n            <td>{`${TraderRate.FeeRate}%`}</td>\r\n\r\n            <td className=\"text-right\">\r\n                <button className=\"btn btn-secondary\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#update-trader-rate-dialog-${Index}`}>Edit Fee Rate</button>\r\n                <button className=\"btn btn-danger\" onClick={this.onDelete}>Delete</button>\r\n\r\n                <UpdateTraderRateDialog Index={Index}\r\n                    FeeRate={TraderRate.FeeRate}\r\n                    TraderRateID={TraderRate.TraderRateID}\r\n                    OnOK={this.props.OnTraderRateUpdated} />\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default TraderRateListItem;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../controls/Preloader\";\r\nimport { addTraderRate } from \"../../../AdministratorFunctions\";\r\n\r\nclass AddTraderRateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            FeeRate: \"\",\r\n\r\n            ValidUsername: false,\r\n            ValidFeeRate: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Username: \"\",\r\n                FeeRate: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidUsername = this.state.ValidUsername\r\n        let ValidFeeRate = this.state.ValidFeeRate;\r\n\r\n        switch (field) {\r\n            case \"Username\":\r\n                ValidUsername = (value !== \"\");\r\n                Errors.Username = ValidUsername ? \"\" : \"Username is required.\";\r\n\r\n                if (Errors.Username != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidUsername = (value.match(/^[a-z0-9]+$/i));\r\n                Errors.Username = ValidUsername ? \"\" : \"Username is invalid.\";\r\n                break;\r\n            case \"FeeRate\":\r\n                ValidFeeRate = (value !== \"\");\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : \"Fee rate is required\";\r\n\r\n                if (Errors.FeeRate !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidFeeRate = (value >= 1 && value <= 100);\r\n                Errors.FeeRate = ValidFeeRate ? \"\" : \"Fee Rate can be between 1 and 100.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidUsername: ValidUsername,\r\n            ValidFeeRate: ValidFeeRate,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidUsername &&\r\n                        this.state.ValidFeeRate\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newTraderRate = {\r\n            Token: localStorage.Token,\r\n            Username: this.state.Username,\r\n            FeeRate: this.state.FeeRate\r\n        };\r\n\r\n        await addTraderRate(newTraderRate).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Trader rate is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK(response.TraderRate);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Username,\r\n            FeeRate,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`add-trader-rate-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n m-b-xxs\">Add Trader Rate</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Trader's Username</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"Username\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={Username} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.Username}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Fee Rate (%)</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"number\" name=\"FeeRate\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={FeeRate} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.FeeRate}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddTraderRateDialog;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport TraderRateListItem from \"./TraderRateListItem\";\r\nimport AddTraderRateDialog from \"./AddTraderRateDialog\";\r\nimport { getData } from \"../../../AdministratorFunctions\";\r\n\r\nclass TraderRatesList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllTraderRates: [],\r\n            TraderRates: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderRates\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trader rates found.\") {\r\n                    this.setState({\r\n                        AllTraderRates: response.TraderRates,\r\n                        TraderRates: response.TraderRates,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllTraderRates: [],\r\n                        TraderRates: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                TraderRates: this.state.AllTraderRates\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allTraderRates = this.state.AllTraderRates;\r\n        let filteredTraderRates = [];\r\n        let count = 0;\r\n\r\n        for (let traderRate of allTraderRates) {\r\n            if (traderRate.Username.includes(searchString)) {\r\n                filteredTraderRates[count++] = traderRate;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            TraderRates: filteredTraderRates\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            TraderRates,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-tag m-r-xxs\"></span>Trader Fee Rates</div>\r\n                            <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target={`#add-trader-rate-dialog`}>Add New</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <AddTraderRateDialog OnOK={traderRate => {\r\n                let traderRates = TraderRates;\r\n                traderRates.push(traderRate);\r\n\r\n                this.setState({\r\n                    TraderRates: traderRates\r\n                });\r\n            }} />\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Fee Rates\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(TraderRates.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"fee rates\" /> :\r\n                <div class=\"table-responsive back-color-gray\">\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>NUMBER</th>\r\n                                <th>TRADER OR BROKER</th>\r\n                                <th>FEE RATE</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {TraderRates.map((traderRate, index) => {\r\n                                return <TraderRateListItem key={index}\r\n                                    Index={index}\r\n                                    TraderRate={traderRate}\r\n                                    OnTraderRateUpdated={feeRate => {\r\n                                        let traderRates = TraderRates;\r\n\r\n                                        for (let traderRateItem of traderRates) {\r\n                                            if (traderRateItem === traderRate) {\r\n                                                traderRateItem.FeeRate = feeRate;\r\n                                                break;\r\n                                            }\r\n                                        }\r\n\r\n                                        this.setState({\r\n                                            TraderRates: traderRates\r\n                                        });\r\n                                    }}\r\n                                    OnTraderRateDeleted={traderRate => {\r\n                                        let traderRates = [];\r\n\r\n                                        for (let traderRateItem of TraderRates) {\r\n                                            if (traderRateItem !== traderRate) {\r\n                                                traderRates.push(traderRateItem);\r\n                                            }\r\n                                        }\r\n\r\n                                        this.setState({\r\n                                            TraderRates: traderRates\r\n                                        });\r\n                                    }}/>;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderRatesList;","import React, { Component } from \"react\";\r\nimport TraderRatesList from \"./TraderRatesList\";\r\n\r\nclass TraderRates extends Component {\r\n    render() {\r\n        return <section>\r\n            <TraderRatesList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderRates;","import React, { Component } from \"react\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport GeneralRates from \"./generalRates/GeneralRates\";\r\nimport TraderRates from \"./traderRates/TraderRates\";\r\n\r\nclass FeeRates extends Component {\r\n    render() {\r\n        return <section>\r\n            {/* <PageHeading Heading=\"FEE RATES\" /> */}\r\n            <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                padding: \"10px\",\r\n                backgroundColor: \"#3A3A3C\",\r\n                width: \"100%\",\r\n                margin: \"0px\",\r\n            }}>\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#general-rates\" aria-controls=\"general-rates\" role=\"tab\" data-toggle=\"tab\">General Rates</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#trader-rates\" aria-controls=\"trader-rates\" role=\"tab\" data-toggle=\"tab\">Trader Rates</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div class=\"tab-content\">\r\n                <div role=\"tabpanel\" class=\"tab-pane active\" id=\"general-rates\">\r\n                    <GeneralRates />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"trader-rates\">\r\n                    <TraderRates />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default FeeRates;","import React, { Component } from \"react\";\r\nimport PayProofContainer from \"../../../../../../containers/payProof/PayProofContainer\";\r\n\r\nclass PayProofDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            PayProof\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`trader-pay-proof-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <PayProofContainer PayProof={PayProof} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PayProofDialog;","import React, { Component } from \"react\";\r\nimport PayDetailsContainer from \"../../../../../../containers/payDetails/PayDetailsContainer\";\r\n\r\nclass PayDetailsDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            PayDetails\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`trader-pay-details-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <PayDetailsContainer PayDetails={PayDetails} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PayDetailsDialog;","import React, { Component } from \"react\";\r\nimport PayProofDialog from \"./PayProofDialog\";\r\nimport Strings from \"../../../../../../res/strings\";\r\nimport PayDetailsDialog from \"./PayDetailsDialog\";\r\n\r\nclass TradersBillListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Bill\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{Bill.BillNumber}</strong>\r\n            </td>\r\n\r\n            <td>\r\n                {Bill.Paid ?\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}\r\n            </td>\r\n\r\n            <td>{Bill.Username}</td>\r\n\r\n            <td>{`${Bill.Amount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n\r\n            <td>{`${Bill.FeeRate}%`}</td>\r\n\r\n            <td>{`${new Date(Bill.Created).toDateString()}`}</td>\r\n\r\n            <td className=\"text-right\">\r\n                {Bill.TraderPayProof ?\r\n                    <button className=\"btn btn-primary m-t-n\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#trader-pay-proof-dialog-${Index}`}>Pay Proof</button> : null}\r\n\r\n                {Bill.TraderPayDetails ?\r\n                    <button className=\"btn btn-primary m-t-n\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#trader-pay-details-dialog-${Index}`}>Pay Details</button> : null}\r\n\r\n                {Bill.TraderPayProof ? \r\n                    <PayProofDialog Index={Index}\r\n                        PayProof={Bill.TraderPayProof} /> : null}\r\n\r\n                {Bill.TraderPayDetails ?\r\n                    <PayDetailsDialog Index={Index}\r\n                        PayDetails={Bill.TraderPayDetails} /> : null}\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default TradersBillListItem;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport TradersBillListItem from \"./TradersBillListItem\";\r\nimport { getData } from \"../../../../AdministratorFunctions\";\r\n\r\nclass TradersBillsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllBills: [],\r\n            Bills: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TradersBills\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Bills found.\") {\r\n                    this.setState({\r\n                        AllBills: response.Bills,\r\n                        Bills: response.Bills,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllBills: [],\r\n                        Bills: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                Bills: this.state.AllBills\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allBills = this.state.AllBills;\r\n        let filteredBills = [];\r\n        let count = 0;\r\n\r\n        for (let bill of allBills) {\r\n            if (bill.BillNumber.includes(searchString)) {\r\n                filteredBills[count++] = bill;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Bills: filteredBills\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Bills,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-money-bill-wave m-r-xxs\"></span>Traders' Bills</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Bills\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(Bills.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"bills\" /> :\r\n                <div class=\"table-responsive back-color-gray\" style={{ height: \"100vh\" }}>\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>BILL NUMBER</th>\r\n                                <th>PAID?</th>\r\n                                <th>PAYEE</th>\r\n                                <th>AMOUNT</th>\r\n                                <th>FEE RATE</th>\r\n                                <th>GENERATED ON</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {Bills.map((bill, index) => {\r\n                                return <TradersBillListItem key={index}\r\n                                    Index={index}\r\n                                    Bill={bill} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TradersBillsList;","import React, { Component } from \"react\";\r\nimport TradersBillsList from \"./TradersBillsList\";\r\n\r\nclass TradersBills extends Component {\r\n    render() {\r\n        return <section>\r\n            <TradersBillsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TradersBills;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport PayProofContainer from \"../../../../../../containers/payProof/PayProofContainer\";\r\nimport { approveDriverPayProof } from \"../../../../AdministratorFunctions\";\r\n\r\nclass PayProofDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false\r\n        };\r\n\r\n        this.onApprove = this.onApprove.bind(this);\r\n    }\r\n\r\n    onApprove = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const approvedDriverPayProof = {\r\n            Token: localStorage.Token,\r\n            DriverPayProofID: this.props.PayProof.DriverPayProofID,\r\n        };\r\n\r\n        await approveDriverPayProof(approvedDriverPayProof).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Driver pay proof is approved.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            PayProof\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`driver-pay-proof-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <PayProofContainer PayProof={PayProof} />\r\n                            {PayProof.Approved ? null : \r\n                                <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                                    <button className=\"btn btn-primary m-t-n\" onClick={this.onApprove}>Approve</button>\r\n                                </div>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PayProofDialog;","import React, { Component } from \"react\";\r\nimport PayDetailsContainer from \"../../../../../../containers/payDetails/PayDetailsContainer\";\r\n\r\nclass PayDetailsDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            PayDetails\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`driver-pay-details-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <PayDetailsContainer PayDetails={PayDetails} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PayDetailsDialog;","import React, { Component } from \"react\";\r\nimport PayProofDialog from \"./PayProofDialog\";\r\nimport Strings from \"../../../../../../res/strings\";\r\nimport PayDetailsDialog from \"./PayDetailsDialog\";\r\n\r\nclass DriversBillListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Bill\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{Bill.BillNumber}</strong>\r\n            </td>\r\n\r\n            <td>\r\n                {Bill.Paid ?\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}\r\n            </td>\r\n\r\n            <td>{Bill.Username}</td>\r\n\r\n            <td>{`${Bill.Amount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n\r\n            <td>{`${new Date(Bill.Created).toDateString()}`}</td>\r\n\r\n            <td className=\"text-right\">\r\n                {Bill.DriverPayProof ?\r\n                    <button className=\"btn btn-primary m-t-n\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#driver-pay-proof-dialog-${Index}`}>Pay Proof</button> : null}\r\n\r\n                {Bill.DriverPayDetails ?\r\n                    <button className=\"btn btn-primary m-t-n\"\r\n                        data-toggle=\"modal\"\r\n                        data-target={`#driver-pay-details-dialog-${Index}`}>Pay Details</button> : null}\r\n\r\n                {Bill.DriverPayProof ?\r\n                    <PayProofDialog Index={Index}\r\n                        PayProof={Bill.DriverPayProof}\r\n                        OnOK={() => { this.props.OnPayProofApproved(Bill); }} /> : null}\r\n\r\n                {Bill.DriverPayDetails ?\r\n                    <PayDetailsDialog Index={Index}\r\n                        PayDetails={Bill.DriverPayDetails} /> : null}\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default DriversBillListItem;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../../controls/ProgressRing\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport DriversBillListItem from \"./DriversBillListItem\";\r\nimport { getData } from \"../../../../AdministratorFunctions\";\r\n\r\nclass DriversBillsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllBills: [],\r\n            Bills: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DriversBills\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Bills found.\") {\r\n                    this.setState({\r\n                        AllBills: response.Bills,\r\n                        Bills: response.Bills,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllBills: [],\r\n                        Bills: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                Bills: this.state.AllBills\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allBills = this.state.AllBills;\r\n        let filteredBills = [];\r\n        let count = 0;\r\n\r\n        for (let bill of allBills) {\r\n            if (bill.BillNumber.includes(searchString)) {\r\n                filteredBills[count++] = bill;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Bills: filteredBills\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Bills,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-money-bill-wave m-r-xxs\"></span>Drivers' Bills</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Bills\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(Bills.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"bills\" /> :\r\n                <div class=\"table-responsive back-color-gray\" style={{ height: \"100vh\" }}>\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>BILL NUMBER</th>\r\n                                <th>PAID?</th>\r\n                                <th>PAYEE</th>\r\n                                <th>AMOUNT</th>\r\n                                <th>GENERATED ON</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {Bills.map((bill, index) => {\r\n                                return <DriversBillListItem key={index}\r\n                                    Index={index}\r\n                                    Bill={bill}\r\n                                    OnPayProofApproved={bill => {\r\n                                        let bills = Bills;\r\n\r\n                                        for (let billItem of bills) {\r\n                                            if (billItem === bill) {\r\n                                                billItem.Paid = true;\r\n                                                billItem.DriverPayProof.Approved = true;\r\n                                                break;\r\n                                            }\r\n                                        }\r\n\r\n                                        this.setState({\r\n                                            Bills: bills\r\n                                        });\r\n                                    }} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DriversBillsList;","import React, { Component } from \"react\";\r\nimport DriversBillsList from \"./DriversBillsList\";\r\n\r\nclass DriversBills extends Component {\r\n    render() {\r\n        return <section>\r\n            <DriversBillsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DriversBills;","import React, { Component } from \"react\";\r\nimport TradersBills from \"./tradersBills/TradersBills\";\r\nimport DriversBills from \"./driversBills/DriversBills\";\r\n\r\nclass Bills extends Component {\r\n    render() {\r\n        return <section>\r\n            <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#traders-bills\" aria-controls=\"traders-bills\" role=\"tab\" data-toggle=\"tab\">Traders' Bills</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#drivers-bills\" aria-controls=\"drivers-bills\" role=\"tab\" data-toggle=\"tab\">Drivers' Bills</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div className=\"tab-content\">\r\n                <div role=\"tabpanel\" className=\"tab-pane active\" id=\"traders-bills\">\r\n                    <TradersBills />\r\n                </div>\r\n                <div role=\"tabpanel\" className=\"tab-pane\" id=\"drivers-bills\">\r\n                    <DriversBills />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Bills;","import React, { Component } from \"react\";\r\nimport Strings from \"../../../../../../../res/strings\";\r\n\r\nclass RowData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Bill\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{`${new Date(Bill.Created).toLocaleDateString()}`}</strong>\r\n            </td>\r\n\r\n            <td>{Bill.BillNumber}</td>\r\n\r\n            <td>\r\n                {Bill.Paid ?\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}\r\n            </td>\r\n\r\n            <td>{`${Bill.FeeRate}%`}</td>\r\n\r\n            <td>{Bill.PaymentMethod}</td>\r\n\r\n            <td>{`${Bill.RecipientAmount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n\r\n            <td>{`${Bill.ChargedAmount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n\r\n            <td>{`${Bill.Amount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default RowData;","import React, { Component } from \"react\";\r\nimport RowData from \"./RowData\";\r\nimport Strings from \"../../../../../../../res/strings\";\r\n\r\nclass AccountStatementData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement\r\n        } = this.props;\r\n\r\n        const trader = AccountStatement.Trader;\r\n\r\n        return <section>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            {(AccountStatement.Bills.length === 0) ?\r\n                <section>\r\n                    <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }}>\r\n                        <div className=\"container\">\r\n                            <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4\">\r\n                                    <span className=\"fas fa-exclamation-triangle m-r-xxs\" style={{ color: \"#FFBF15\" }}></span>No billing details found.</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section> :\r\n                <section>\r\n                    <div className=\"jumbotron theme-default back-color-light\">\r\n                        <div className=\"container\">\r\n                            <div className=\"type-t3\" style={{ fontWeight: \"600\" }}><span className=\"fas fa-route m-r-xxxs\"></span>NAQEL</div>\r\n\r\n                            <div className=\"p-t-xxs\">\r\n                                <div className=\"type-t8\">{`${trader.FirstName} ${trader.LastName}`}</div>\r\n                                <div className=\"type-t9\">{`@${trader.Username}`}</div>\r\n                                <div className=\"type-t8\">{trader.Type}</div>\r\n                                <div className=\"type-t8\">{trader.Address}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"table-responsive back-color-gray\" style={{ borderTop: \"4px solid #CCCCCC\", height: \"100vh\" }}>\r\n                        <table class=\"table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>DATE</th>\r\n                                    <th>BILL NUMBER</th>\r\n                                    <th>PAID?</th>\r\n                                    <th>FEE RATE</th>\r\n                                    <th>PAY METHOD</th>\r\n                                    <th>RECIPIENT CHARGES</th>\r\n                                    <th>NAQEL CHARGES</th>\r\n                                    <th>AMOUNT</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {AccountStatement.Bills.map((bill, index) => {\r\n                                    return <RowData key={index}\r\n                                        Index={index}\r\n                                        Bill={bill} />;\r\n                                })}\r\n                                <tr style={{ backgroundColor: \"#DADADA\" }}>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td>TOTAL</td>\r\n                                    <td>{`${AccountStatement.TotalRecipientAmount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n                                    <td>{`${AccountStatement.TotalChargedAmount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n                                    <td>{`${AccountStatement.TotalAmount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </section>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AccountStatementData;","import React, { Component } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport ProgressBar from \"../../../../../../../controls/ProgressBar\";\r\nimport AccountStatementData from \"./AccountStatementData\";\r\nimport { getData } from \"../../../../../AdministratorFunctions\";\r\n\r\nclass AccountStatement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AccountStatement: null,\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.OnSearch(this.onSearch);\r\n    }\r\n\r\n    onSearch = async username => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TraderAccountStatement\",\r\n                Params: {\r\n                    Username: username\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Account statement found.\") {\r\n                    this.setState({\r\n                        AccountStatement: response.AccountStatement,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AccountStatement: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement,\r\n            Searching,\r\n        } = this.state;\r\n\r\n        return (Searching || !AccountStatement) ?\r\n            <section>\r\n                <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }}>\r\n                    <div className=\"container\">\r\n                        {Searching ? <div className=\"text-center p-xxs\">\r\n                            <div className=\"type-h4 color-default\">Searching</div>\r\n                            <ProgressBar />\r\n                        </div> : <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4\"><span className=\"fas fa-exclamation-triangle m-r-xxs\" style={{ color: \"#FFBF15\" }}></span>No account statement to display. Search the trader by username to view his account statement.</div>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            </section> :\r\n            <section>\r\n                <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                    <ReactToPrint\r\n                        trigger={() => <button className=\"btn btn-primary m-n\">Print</button>}\r\n                        content={() => this.TraderAccountStatement} />\r\n                </div>\r\n                <AccountStatementData AccountStatement={AccountStatement}\r\n                    ref={traderAccountStatement => (this.TraderAccountStatement = traderAccountStatement)} />\r\n                </section>;\r\n    }\r\n};\r\n\r\nexport default AccountStatement;","import React, { Component } from \"react\";\r\nimport AccountStatement from \"./accountStatement/AccountStatement\";\r\n\r\nclass TraderAccountStatementBrowser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            SearchString: \"\"\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n        this.SearchAccountStatement(this.state.SearchString);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            SearchString\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-university m-r-xxs\"></span>Trader Account Statements</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Account Statements</div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search Username\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            <AccountStatement OnSearch={onSearch => { this.SearchAccountStatement = onSearch; }} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderAccountStatementBrowser;","import React, { Component } from \"react\";\r\nimport TraderAccountStatementBrowser from \"./TraderAccountStatementBrowser\";\r\n\r\nclass TraderAccountStatements extends Component {\r\n    render() {\r\n        return <section>\r\n            <TraderAccountStatementBrowser />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TraderAccountStatements;","import React, { Component } from \"react\";\r\nimport Strings from \"../../../../../../../res/strings\";\r\n\r\nclass RowData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Bill\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{`${new Date(Bill.Created).toLocaleDateString()}`}</strong>\r\n            </td>\r\n\r\n            <td>{Bill.JobNumber}</td>\r\n\r\n            <td>{`$${Bill.AmountEarned.toFixed(2)}`}</td>\r\n\r\n            <td>{Bill.BillNumber}</td>\r\n\r\n            <td>\r\n                {Bill.Paid ?\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}\r\n            </td>\r\n\r\n            <td>{Bill.PaymentMethod}</td>\r\n\r\n            <td>{`${Bill.AmountCharged.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default RowData;","import React, { Component } from \"react\";\r\nimport Strings from \"../../../../../../../res/strings\";\r\nimport RowData from \"./RowData\";\r\n\r\nclass AccountStatementData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement\r\n        } = this.props;\r\n\r\n        const driver = AccountStatement.Driver;\r\n\r\n        return <section>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            {(AccountStatement.Bills.length === 0) ?\r\n                <section>\r\n                    <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }}>\r\n                        <div className=\"container\">\r\n                            <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4\">\r\n                                    <span className=\"fas fa-exclamation-triangle m-r-xxs\" style={{ color: \"#FFBF15\" }}></span>No billing details found.</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section> :\r\n                <section>\r\n                    <div className=\"jumbotron theme-default back-color-light\">\r\n                        <div className=\"container\">\r\n                            <div className=\"type-t3\" style={{ fontWeight: \"600\" }}><span className=\"fas fa-route m-r-xxxs\"></span>NAQEL</div>\r\n\r\n                            <div className=\"p-t-xxs\">\r\n                                <div className=\"type-t8\">{`${driver.FirstName} ${driver.LastName}`}</div>\r\n                                <div className=\"type-t9\">{`@${driver.Username}`}</div>\r\n                                <div className=\"type-t8\">Driver</div>\r\n                                <div className=\"type-t8\">{driver.Address}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"table-responsive back-color-gray\" style={{ borderTop: \"4px solid #CCCCCC\", height: \"100vh\" }}>\r\n                        <table class=\"table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>DATE</th>\r\n                                    <th>JOB NUMBER</th>\r\n                                    <th>EARNED</th>\r\n                                    <th>BILL NUMBER</th>\r\n                                    <th>PAID?</th>\r\n                                    <th>PAY METHOD</th>\r\n                                    <th>AMOUNT CHARGED</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {AccountStatement.Bills.map((bill, index) => {\r\n                                    return <RowData key={index}\r\n                                        Index={index}\r\n                                        Bill={bill} />;\r\n                                })}\r\n                                <tr style={{ backgroundColor: \"#DADADA\" }}>\r\n                                    <td></td>\r\n                                    <td>NET EARNING</td>\r\n                                    <td>{`${AccountStatement.NetEarning.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td>TOTAL</td>\r\n                                    <td>{`$${AccountStatement.NetAmount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </section>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AccountStatementData;","import React, { Component } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport ProgressBar from \"../../../../../../../controls/ProgressBar\";\r\nimport AccountStatementData from \"./AccountStatementData\";\r\nimport { getData } from \"../../../../../AdministratorFunctions\";\r\n\r\nclass AccountStatement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AccountStatement: null,\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.OnSearch(this.onSearch);\r\n    }\r\n\r\n    onSearch = async username => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"DriverAccountStatement\",\r\n                Params: {\r\n                    Username: username\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Account statement found.\") {\r\n                    this.setState({\r\n                        AccountStatement: response.AccountStatement,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AccountStatement: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement,\r\n            Searching,\r\n        } = this.state;\r\n\r\n        return (Searching || !AccountStatement) ?\r\n            <section>\r\n                <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }}>\r\n                    <div className=\"container\">\r\n                        {Searching ? <div className=\"text-center p-xxs\">\r\n                            <div className=\"type-h4 color-default\">Searching</div>\r\n                            <ProgressBar />\r\n                        </div> : <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4\"><span className=\"fas fa-exclamation-triangle m-r-xxs\" style={{ color: \"#FFBF15\" }}></span>No account statement to display. Search the driver by username to view his account statement.</div>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            </section> :\r\n            <section>\r\n                <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                    <ReactToPrint\r\n                        trigger={() => <button className=\"btn btn-primary m-n\">Print</button>}\r\n                        content={() => this.DriverAccountStatement} />\r\n                </div>\r\n                <AccountStatementData AccountStatement={AccountStatement}\r\n                    ref={driverAccountStatement => (this.DriverAccountStatement = driverAccountStatement)} />\r\n                </section>;\r\n    }\r\n};\r\n\r\nexport default AccountStatement;","import React, { Component } from \"react\";\r\nimport AccountStatement from \"./accountStatement/AccountStatement\";\r\n\r\nclass DriverAccountStatementBrowser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            SearchString: \"\"\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n        this.SearchAccountStatement(this.state.SearchString);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            SearchString\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-university m-r-xxs\"></span>Driver Account Statements</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Account Statements</div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search Username\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            <AccountStatement OnSearch={onSearch => { this.SearchAccountStatement = onSearch; }} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DriverAccountStatementBrowser;","import React, { Component } from \"react\";\r\nimport DriverAccountStatementBrowser from \"./DriverAccountStatementBrowser\";\r\n\r\nclass DriverAccountStatements extends Component {\r\n    render() {\r\n        return <section>\r\n            <DriverAccountStatementBrowser />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DriverAccountStatements;","import React, { Component } from \"react\";\r\nimport Strings from \"../../../../../../../res/strings\";\r\n\r\nclass RowData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Transaction\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{`${new Date(Transaction.Date).toLocaleDateString()}`}</strong>\r\n            </td>\r\n\r\n            <td>{Transaction.TruckNumber}</td>\r\n\r\n            <td>{Transaction.JobNumber}</td>\r\n\r\n            <td>{Transaction.TraderBillNumber}</td>\r\n\r\n            <td>\r\n                {Transaction.TraderBillPaid ?\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}\r\n            </td>\r\n\r\n            <td>{Transaction.TraderPaymentMethod}</td>\r\n\r\n            <td>{Transaction.DriverBillNumber}</td>\r\n\r\n            <td>\r\n                {Transaction.DriverBillPaid ?\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}\r\n            </td>\r\n\r\n            <td>{Transaction.DriverPaymentMethod}</td>\r\n\r\n            <td>{`${Transaction.FeeRate}%`}</td>\r\n\r\n            <td>{`${Transaction.Earned.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n\r\n            <td>{`${Transaction.Charged.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n\r\n            <td>{`${Transaction.Amount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default RowData;","import React, { Component } from \"react\";\r\nimport Strings from \"../../../../../../../res/strings\";\r\nimport RowData from \"./RowData\";\r\n\r\nclass AccountStatementData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement\r\n        } = this.props;\r\n\r\n        const transportCompany = AccountStatement.TransportCompany;\r\n\r\n        let netAmount = 0.0;\r\n        let netEarned = 0.0;\r\n        let netCharged = 0.0;\r\n\r\n        for (let transaction of AccountStatement.Transactions) {\r\n            netAmount += transaction.Amount;\r\n            netEarned += transaction.Earned;\r\n            netCharged += transaction.Charged;\r\n        }\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default back-color-light\">\r\n                <div className=\"container\">\r\n                    <div className=\"type-t3\" style={{ fontWeight: \"600\" }}><span className=\"fas fa-route m-r-xxxs\"></span>NAQEL</div>\r\n\r\n                    <div className=\"p-t-xxs\">\r\n                        <div className=\"type-t8 m-b-xxs\">TRANSPORT COMPANY DETAILS</div>\r\n                        <div className=\"type-t8\">{`Company Name: ${transportCompany.Name}`}</div>\r\n                        <div className=\"type-t8\">{`Username: ${transportCompany.Username}`}</div>\r\n                        <div className=\"type-t8\">{`Internal Number: ${transportCompany.InternalNumber}`}</div>\r\n                        <div className=\"type-t8\">{`Commercial Register Number: ${transportCompany.CommercialRegisterNumber}`}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {AccountStatement.Transactions.length === 0 ?\r\n                <section>\r\n                    <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }}>\r\n                        <div className=\"container\">\r\n                            <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4\"><span className=\"fas fa-exclamation-triangle m-r-xxs\"\r\n                                    style={{ color: \"#FFBF15\" }}></span>No transactions found.</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section> :\r\n                <div class=\"table-responsive back-color-gray\" style={{ borderTop: \"4px solid #CCCCCC\", height: \"100vh\" }}>\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>DATE</th>\r\n                                <th>TRUCK NUMBER</th>\r\n                                <th>JOB NUMBER</th>\r\n                                <th>TRADER BILL NUMBER</th>\r\n                                <th>TRADER BILL PAID?</th>\r\n                                <th>TRADER PAY METHOD</th>\r\n                                <th>DRIVER BILL NUMBER</th>\r\n                                <th>DRIVER BILL PAID?</th>\r\n                                <th>DRIVER PAY METHOD</th>\r\n                                <th>FEE RATE</th>\r\n                                <th>EARNED</th>\r\n                                <th>CHARGED</th>\r\n                                <th>TOTAL AMOUNT</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {AccountStatement.Transactions.map((transaction, index) => {\r\n                                return <RowData key={index}\r\n                                    Index={index}\r\n                                    Transaction={transaction} />;\r\n                            })}\r\n                            <tr style={{ backgroundColor: \"#DADADA\" }}>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td>TOTAL:</td>\r\n                                <td>{`${netEarned.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n                                <td>{`${netCharged.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n                                <td>{`${netAmount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AccountStatementData;","import React, { Component } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport ProgressBar from \"../../../../../../../controls/ProgressBar\";\r\nimport AccountStatementData from \"./AccountStatementData\";\r\nimport { getData } from \"../../../../../AdministratorFunctions\";\r\n\r\nclass AccountStatement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AccountStatement: null,\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.OnSearch(this.onSearch);\r\n    }\r\n\r\n    onSearch = async username => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"ResponsibleAccountStatement\",\r\n                Params: {\r\n                    Username: username\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Account statement found.\") {\r\n                    this.setState({\r\n                        AccountStatement: response.AccountStatement,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AccountStatement: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement,\r\n            Searching,\r\n        } = this.state;\r\n\r\n        return (Searching || !AccountStatement) ?\r\n            <section>\r\n                <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }}>\r\n                    <div className=\"container\">\r\n                        {Searching ? <div className=\"text-center p-xxs\">\r\n                            <div className=\"type-h4 color-default\">Searching</div>\r\n                            <ProgressBar />\r\n                        </div> : <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4\"><span className=\"fas fa-exclamation-triangle m-r-xxs\" style={{ color: \"#FFBF15\" }}></span>No account statement to display. Search the transport company by username to view its account statement.</div>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            </section> :\r\n            <section>\r\n                <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                    <ReactToPrint\r\n                        trigger={() => <button className=\"btn btn-primary m-t-n\">Print</button>}\r\n                        content={() => this.ResponsibleAccountStatement} />\r\n                </div>\r\n                <AccountStatementData AccountStatement={AccountStatement}\r\n                    ref={responsibleAccountStatement => (this.ResponsibleAccountStatement = responsibleAccountStatement)} />\r\n                </section>;\r\n    }\r\n};\r\n\r\nexport default AccountStatement;","import React, { Component } from \"react\";\r\nimport AccountStatement from \"./accountStatement/AccountStatement\";\r\n\r\nclass ResponsibleAccountStatementBrowser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            SearchString: \"\"\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n        this.SearchAccountStatement(this.state.SearchString);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            SearchString\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-university m-r-xxs\"></span>TC Responsible Account Statements</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Account Statement</div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search Username\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            <AccountStatement OnSearch={onSearch => { this.SearchAccountStatement = onSearch; }} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ResponsibleAccountStatementBrowser;","import React, { Component } from \"react\";\r\nimport ResponsibleAccountStatementBrowser from \"./ResponsibleAccountStatementBrowser\";\r\n\r\nclass ResponsibleAccountStatements extends Component {\r\n    render() {\r\n        return <section>\r\n            <ResponsibleAccountStatementBrowser />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ResponsibleAccountStatements;","import React, { Component } from \"react\";\r\nimport TraderAccountStatements from \"./traderAccountStatements/TraderAccountStatements\";\r\nimport DriverAccountStatements from \"./driverAccountStatements/DriverAccountStatements\";\r\nimport ResponsibleAccountStatements from \"./responsibleAccountStatements/ResponsibleAccountStatements\";\r\n\r\nclass UserAccountStatements extends Component {\r\n    render() {\r\n        return <section>\r\n            <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#trader-account-statements\" aria-controls=\"trader-account-statements\" role=\"tab\" data-toggle=\"tab\">Trader Account Statements</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#driver-account-statements\" aria-controls=\"driver-account-statements\" role=\"tab\" data-toggle=\"tab\">Driver Account Statements</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#responsible-account-statements\" aria-controls=\"responsible-account-statements\" role=\"tab\" data-toggle=\"tab\">TC Responsible Account Statements</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div className=\"tab-content\">\r\n                <div role=\"tabpanel\" className=\"tab-pane active\" id=\"trader-account-statements\">\r\n                    <TraderAccountStatements />\r\n                </div>\r\n                <div role=\"tabpanel\" className=\"tab-pane\" id=\"driver-account-statements\">\r\n                    <DriverAccountStatements />\r\n                </div>\r\n                <div role=\"tabpanel\" className=\"tab-pane\" id=\"responsible-account-statements\">\r\n                    <ResponsibleAccountStatements />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default UserAccountStatements;","import React, { Component } from \"react\";\r\nimport Strings from \"../../../../../res/strings\";\r\n\r\nclass RowData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Transaction\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{`${new Date(Transaction.Created).toLocaleDateString()}`}</strong>\r\n            </td>\r\n\r\n            <td>{Transaction.BillNumber}</td>\r\n\r\n            <td>{Transaction.Payee}</td>\r\n\r\n            <td>{Transaction.PayeeType}</td>\r\n\r\n            <td>{Transaction.PaymentMethod}</td>\r\n\r\n            <td>{`${Transaction.Amount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default RowData;","import React, { Component } from \"react\";\r\nimport Strings from \"../../../../../res/strings\";\r\nimport RowData from \"./RowData\";\r\n\r\nclass AccountStatementData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement\r\n        } = this.props;\r\n\r\n        const naqelSettings = AccountStatement.NaqelSettings;\r\n\r\n        return <section>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            {(AccountStatement.Transactions.length === 0) ?\r\n                <section>\r\n                    <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }}>\r\n                        <div className=\"container\">\r\n                            <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4\">\r\n                                    <span className=\"fas fa-exclamation-triangle m-r-xxs\" style={{ color: \"#FFBF15\" }}></span>No transactions found.</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section> :\r\n                <section>\r\n                    <div className=\"jumbotron theme-default back-color-light\">\r\n                        <div className=\"container\">\r\n                            <div className=\"type-t3\" style={{ fontWeight: \"600\" }}><span className=\"fas fa-route m-r-xxxs\"></span>NAQEL</div>\r\n\r\n                            <div className=\"p-t-xxs\">\r\n                                <div className=\"type-t8\">{naqelSettings.Street}</div>\r\n                                <div className=\"type-t8\">{`${naqelSettings.City}, ${naqelSettings.Country}.`}</div>\r\n                                <div className=\"type-t8\">{`ZIP ${naqelSettings.ZIPCode}`}</div>\r\n                            </div>\r\n\r\n                            <div className=\"p-t-xxs\">\r\n                                <div className=\"type-t8\">{naqelSettings.PhoneNumber}</div>\r\n                                <div className=\"type-t8\">{naqelSettings.Website}</div>\r\n                                <div className=\"type-t8\">{naqelSettings.BusinessName}</div>\r\n                            </div>\r\n\r\n                            <div className=\"p-t-xxs\">\r\n                                <div className=\"type-t8\">BANK NAME</div>\r\n                                <div className=\"type-t8\">{naqelSettings.BankName}</div>\r\n                                <div className=\"type-t8 p-t-xxxs\">ACCOUNT #</div>\r\n                                <div className=\"type-t8\">{naqelSettings.AccountNumber}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"table-responsive back-color-gray\" style={{ borderTop: \"4px solid #CCCCCC\", height: \"100vh\" }}>\r\n                        <table class=\"table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>DATE</th>\r\n                                    <th>BILL NUMBER</th>\r\n                                    <th>PAYEE</th>\r\n                                    <th>PAYEE TYPE</th>\r\n                                    <th>PAY METHOD</th>\r\n                                    <th>AMOUNT</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {AccountStatement.Transactions.map((transaction, index) => {\r\n                                    return <RowData key={index}\r\n                                        Index={index}\r\n                                        Transaction={transaction} />;\r\n                                })}\r\n                                <tr style={{ backgroundColor: \"#DADADA\" }}>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td>TOTAL</td>\r\n                                    <td>{`${AccountStatement.NetAmount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </section>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AccountStatementData;","import React, { Component } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport ProgressBar from \"../../../../../controls/ProgressBar\";\r\nimport AccountStatementData from \"./AccountStatementData\";\r\nimport { getData } from \"../../../AdministratorFunctions\";\r\n\r\nclass AccountStatement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AccountStatement: null,\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"AccountStatement\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Account statement found.\") {\r\n                    this.setState({\r\n                        AccountStatement: response.AccountStatement,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AccountStatement: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement,\r\n            Searching,\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-university m-r-xxs\"></span>Naqel Account Statement</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {(Searching || !AccountStatement) ?\r\n                <section>\r\n                    <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }}>\r\n                        <div className=\"container\">\r\n                            {Searching ? <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4 color-default\">Searching</div>\r\n                                <ProgressBar />\r\n                            </div> : <div className=\"text-center p-xxs\">\r\n                                    <div className=\"type-h4\"><span className=\"fas fa-exclamation-triangle m-r-xxs\" style={{ color: \"#FFBF15\" }}></span>No account statement to display.</div>\r\n                                </div>}\r\n                        </div>\r\n                    </div>\r\n                </section> :\r\n                <section>\r\n                    <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                        <ReactToPrint\r\n                            trigger={() => <button className=\"btn btn-primary m-n\">Print</button>}\r\n                            content={() => this.AccountStatement} />\r\n                    </div>\r\n                    <AccountStatementData AccountStatement={AccountStatement}\r\n                        ref={accountStatement => (this.AccountStatement = accountStatement)} />\r\n                </section>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AccountStatement;","import React, { Component } from \"react\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport Bills from \"./bills/Bills\";\r\nimport UserAccountStatements from \"./userAccountStatements/UserAccountStatements\";\r\nimport AccountStatement from \"./accountStatement/AccountStatement\";\r\n\r\nclass FinancialAccounts extends Component {\r\n    render() {\r\n        return <section>\r\n            {/* <PageHeading Heading=\"FINANCIAL ACCOUNTS\" /> */}\r\n\r\n            <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                padding: \"10px\",\r\n                backgroundColor: \"#3A3A3C\",\r\n                width: \"100%\",\r\n                margin: \"0px\",\r\n            }}>\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#account-statement\" aria-controls=\"account-statement\" role=\"tab\" data-toggle=\"tab\">Account Statement</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#bills\" aria-controls=\"bills\" role=\"tab\" data-toggle=\"tab\">Bills</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#user-account-statements\" aria-controls=\"user-account-statements\" role=\"tab\" data-toggle=\"tab\">User Account Statments</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div class=\"tab-content\">\r\n                <div role=\"tabpanel\" class=\"tab-pane active\" id=\"account-statement\">\r\n                    <AccountStatement />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"bills\">\r\n                    <Bills />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"user-account-statements\">\r\n                    <UserAccountStatements />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default FinancialAccounts;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Profile from \"./profile/Profile\";\r\nimport Drivers from \"./Drivers/Drivers\";\r\nimport Traders from \"./traders/Traders\";\r\nimport Jobs from \"./jobs/Jobs\";\r\nimport Questions from \"./questions/Questions\";\r\nimport FeeRates from \"./feeRates/FeeRates\";\r\nimport FinancialAccounts from \"./financialAccounts/financialAccounts\";\r\n\r\nclass AdministratorsDashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Left: -400\r\n        };\r\n\r\n        //this.onCloseNavigation = this.onCloseNavigation.bind(this);\r\n    }\r\n\r\n    //onCloseNavigation = () => {\r\n    //    this.setState({\r\n    //        Left: -400\r\n    //    });\r\n    //}\r\n\r\n    render() {\r\n        if (!localStorage.Token) {\r\n            return <Redirect to={\"/login\"} />;\r\n        }\r\n        else {\r\n            return <section>\r\n                <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                    padding: \"10px\",\r\n                    backgroundColor: \"#133F4F\",\r\n                    width: \"100%\",\r\n                    margin: \"0px\",\r\n                }}>\r\n                    <li role=\"presentation\" className=\"active\">\r\n                        <a href=\"#drivers\" aria-controls=\"drivers\" role=\"tab\" data-toggle=\"tab\">Drivers</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#traders\" aria-controls=\"traders\" role=\"tab\" data-toggle=\"tab\">Traders</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#jobs\" aria-controls=\"jobs\" role=\"tab\" data-toggle=\"tab\">Jobs</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#questions\" aria-controls=\"questions\" role=\"tab\" data-toggle=\"tab\">Questions</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#fee-rates\" aria-controls=\"fee-rates\" role=\"tab\" data-toggle=\"tab\">Fee Rates</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#profile\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">Profile</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#financial-accounts\" aria-controls=\"financial-accounts\" role=\"tab\" data-toggle=\"tab\">Financial Accounts</a>\r\n                    </li>\r\n                </ul>\r\n\r\n                {/* \r\n                 <div className=\"sidenav\" style={{ left: `${this.state.Left}px` }}>\r\n                    <a className=\"closebtn\" onClick={this.onCloseNavigation}>&times;</a>\r\n\r\n                    <div class=\"entity-list\" role=\"tablist\">\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#profile\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Profile</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#drivers\" aria-controls=\"drivers\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Drivers</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#traders\" aria-controls=\"traders\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Traders</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#jobs\" aria-controls=\"jobs\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Jobs</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#questions\" aria-controls=\"questions\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Questions</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#fee-rates\" aria-controls=\"fee-rates\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Fee Rates</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#financial-accounts\" aria-controls=\"settings\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Financial Accounts</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                 */}\r\n\r\n                <div className=\"tab-content\">\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"profile\">\r\n                        <Profile />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane active\" id=\"drivers\">\r\n                        <Drivers />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"traders\">\r\n                        <Traders />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"jobs\">\r\n                        <Jobs />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"questions\">\r\n                        <Questions />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"fee-rates\">\r\n                        <FeeRates />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"financial-accounts\">\r\n                        <FinancialAccounts />\r\n                    </div>\r\n                </div>\r\n\r\n                {/*\r\n                 <div className=\"side-nav-btn\" onClick={() => {\r\n                    this.setState({\r\n                        Left: 0\r\n                    });\r\n                }}><div className=\"fas fa-bars\" style={{ fontSize: \"x-large\" }}></div>\r\n                </div>\r\n                 */}\r\n            </section>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default AdministratorsDashboard;","import React, { Component } from \"react\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { addCommercialRegisterCertificate } from \"../../../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass AddCommercialRegisterCertificateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PhotoURL: \"./images/default_image.png\",\r\n            Type: \"\",\r\n\r\n            ValidPhotoURL: false,\r\n            ValidType: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                PhotoURL: \"\",\r\n                Type: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidType,\r\n            ValidPhotoURL\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Certificate type is required.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidType: ValidType,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: ValidType &&\r\n                    ValidPhotoURL\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newCommercialRegisterCertificate = {\r\n            Token: localStorage.Token,\r\n            Type: this.state.Type,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        await addCommercialRegisterCertificate(newCommercialRegisterCertificate).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            console.log(response);\r\n\r\n            if (response.Message === \"Commercial register certificate is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK(response.CommercialRegisterCertificate);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Type,\r\n            PhotoURL,\r\n            ValidForm,\r\n            ShowPreloader,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`add-commercial-register-certificate-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <ImageUploader\r\n                                                    Source={PhotoURL}\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }} />\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"type-h3 color-default p-t-xxs\">Add Commercial Register Certificate</div>\r\n                                                <div className=\"type-sh4 text-danger\">{Errors.PhotoURL}</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Certificate Type</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AddCommercialRegisterCertificateDialog;","import React, { Component } from \"react\";\r\nimport ImageUploader from \"../../../../../../controls/ImageUploader\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport { updateCommercialRegisterCertificate } from \"../../../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass EditCommercialRegisterCertificateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const {\r\n            CommercialRegisterCertificate\r\n        } = this.props;\r\n\r\n        this.state = {\r\n            PhotoURL: CommercialRegisterCertificate.PhotoURL,\r\n            Type: CommercialRegisterCertificate.Type,\r\n\r\n            ValidPhotoURL: true,\r\n            ValidType: true,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                PhotoURL: \"\",\r\n                Type: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidType,\r\n            ValidPhotoURL\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"Type\":\r\n                ValidType = (value !== \"\");\r\n                Errors.Type = ValidType ? \"\" : \"Certificate type is required.\";\r\n                break;\r\n            case \"PhotoURL\":\r\n                ValidPhotoURL = (value !== null);\r\n                Errors.PhotoURL = ValidPhotoURL ? \"\" : \"Invalid Image. Please upload a correct one.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidType: ValidType,\r\n            ValidPhotoURL: ValidPhotoURL,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: ValidType &&\r\n                    ValidPhotoURL\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const updatedCommercialRegisterCertificate = {\r\n            Token: localStorage.Token,\r\n            Type: this.state.Type,\r\n            PhotoURL: this.state.PhotoURL\r\n        };\r\n\r\n        await updateCommercialRegisterCertificate(updatedCommercialRegisterCertificate).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            console.log(response);\r\n\r\n            if (response.Message === \"Commercial register certificate is updated.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK(updateCommercialRegisterCertificate);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Type,\r\n            PhotoURL,\r\n            ValidForm,\r\n            ShowPreloader,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`edit-commercial-register-certificate-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <ImageUploader\r\n                                                    Source={PhotoURL}\r\n                                                    OnImageUploaded={response => {\r\n                                                        if (response.message === \"Image uploaded successfully.\") {\r\n                                                            this.setState({\r\n                                                                PhotoURL: response.imageUrl\r\n                                                            });\r\n\r\n                                                            this.validateField(\"PhotoURL\", PhotoURL);\r\n                                                        }\r\n                                                        else {\r\n                                                            this.validateField(\"PhotoURL\", null);\r\n                                                        }\r\n                                                    }}\r\n                                                    OnInvalidImageSelected={() => {\r\n                                                        this.validateField(\"PhotoURL\", null);\r\n                                                    }} />\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"type-h3 color-default p-t-xxs\">Edit Commercial Register Certificate</div>\r\n                                                <div className=\"type-sh4 text-danger\">{Errors.PhotoURL}</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Certificate Type</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"Type\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={Type} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.Type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default EditCommercialRegisterCertificateDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../../../controls/Preloader\";\r\nimport EditCommercialRegisterCertificateDialog from \"./EditCommercialRegisterCertificateDialog\";\r\nimport { deleteCommercialRegisterCertificate } from \"../../../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass CommercialRegisterCertificateListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: null\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        let discardedCommercialRegisterCertificate = {\r\n            Token: localStorage.Token\r\n        };\r\n\r\n        await deleteCommercialRegisterCertificate(discardedCommercialRegisterCertificate).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Commercial register certificate is deleted.\") {\r\n                this.props.OnCertificateDeleted();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        const {\r\n            CommercialRegisterCertificate\r\n        } = this.props;\r\n\r\n        return <li className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n            <div data-toggle=\"collapse\" aria-expanded=\"false\" data-target={`#commercial-register-certificate-list-item`}>\r\n                <div className=\"entity-list\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\" style={{ borderRadius: \"50%\" }}>\r\n                            <span className=\"glyph glyph-add\"></span>\r\n                            <span className=\"glyph glyph-remove\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>1.</span>\r\n                            </div>\r\n                            <div className=\"content-text-secondary\">\r\n                                <span style={{ fontWeight: \"bold\", color: \"#008575\" }}>COMMERCIAL REGISTER CERTIFICATE</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id={`commercial-register-certificate-list-item`}>\r\n                <div className=\"jumbotron theme-default\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <img className=\"img-responsive visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block\"\r\n                                    src={CommercialRegisterCertificate.PhotoURL} alt=\"profile_photo.png\" data-source-index=\"2\" style={{\r\n                                        overflow: \"hidden\",\r\n                                        border: \"5px solid #3A3A3C\",\r\n                                        margin: \"5px\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"col-md-18\">\r\n                                <div className=\"type-h3 color-default p-t-xxs\">Commercial Register Certificate</div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-hashtag\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Certificate Number</div>\r\n                                                    <div className=\"content-text-secondary\">{CommercialRegisterCertificate.Number}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"entity-list\">\r\n                                            <div className=\"entity-list-item\">\r\n                                                <div className=\"item-icon\">\r\n                                                    <span className=\"fas fa-cog\"></span>\r\n                                                </div>\r\n                                                <div className=\"item-content-primary\">\r\n                                                    <div className=\"content-text-primary\">Certificate Type</div>\r\n                                                    <div className=\"content-text-secondary\">{CommercialRegisterCertificate.Type}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"text-right back-color-gray p-xxs\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#edit-commercial-register-certificate-dialog\">Edit</button>\r\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={this.onDelete}>Delete</button>\r\n                </div>\r\n            </div>\r\n            {ShowPreloader ? <Preloader /> : null}\r\n            <EditCommercialRegisterCertificateDialog CommercialRegisterCertificate={CommercialRegisterCertificate}\r\n                OnOK={this.props.OnCertificateUpdated} />\r\n        </li>;\r\n    }\r\n};\r\n\r\nexport default CommercialRegisterCertificateListItem;","import React, { Component } from \"react\";\r\nimport AddCommercialRegisterCertifcateDialog from \"./commercialRegisterCertificate/AddCommercialRegisterCertificateDialog\";\r\nimport CommercialRegisterCertificateListItem from \"./commercialRegisterCertificate/CommercialRegisterCertificateListItem\";\r\nimport { getData } from \"../../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass DocumentsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            CommercialRegisterCertificate: null,\r\n            Searching: false,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"CommercialRegisterCertificate\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Commercial register certificate found.\") {\r\n                    this.setState({\r\n                        CommercialRegisterCertificate: response.CommercialRegisterCertificate,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        CommercialRegisterCertificate: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            CommercialRegisterCertificate,\r\n            Searching\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 back-color-gray m-n p-xxs\">Documents</div>\r\n\r\n            {Searching ? null : <section>\r\n                <div className=\"text-right back-color-gray p-xxs\">\r\n                    {CommercialRegisterCertificate ?\r\n                        null :\r\n                        <section>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#add-commercial-register-certificate-dialog\">Add CR Certificate</button>\r\n                            <AddCommercialRegisterCertifcateDialog\r\n                                OnOK={commercialRegisterCertificate => {\r\n                                    this.setState({\r\n                                        CommercialRegisterCertificate: commercialRegisterCertificate\r\n                                    });\r\n                                }} />\r\n                        </section>}\r\n                </div>\r\n\r\n                <ol className=\"list-items m-n\">\r\n                    {CommercialRegisterCertificate ?\r\n                        <CommercialRegisterCertificateListItem\r\n                            CommercialRegisterCertificate={CommercialRegisterCertificate}\r\n                            OnCertificateDeleted={() => {\r\n                                this.setState({\r\n                                    CommercialRegisterCertificate: null\r\n                                });\r\n                            }}\r\n                            OnCertificateUpdated={updatedCertificate => {\r\n                                let {\r\n                                    CommercialRegisterCertificate\r\n                                } = this.state;\r\n\r\n                                CommercialRegisterCertificate.Type = updatedCertificate.Type;\r\n                                CommercialRegisterCertificate.PhotoURL = updatedCertificate.PhotoURL;\r\n\r\n                                this.setState({\r\n                                    CommercialRegisterCertificate: CommercialRegisterCertificate\r\n                                });\r\n                            }} /> : null}\r\n                </ol>\r\n            </section>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DocumentsList;","import React, { Component } from \"react\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport DocumentsList from \"./documents/DocumentsList\";\r\nimport { getData } from \"../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass Profile extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            Name: \"\",\r\n            Email: \"\",\r\n            Username: \"\",\r\n            PhoneNumber: \"\",\r\n            InternalNumber: \"\", \r\n            CommercialRegisterNumber: \"\",\r\n            Active: false,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TransportCompanyResponsible\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Transport company responsible found.\") {\r\n                    let transportCompanyResponsible = response.TransportCompanyResponsible;\r\n\r\n                    this.setState({\r\n                        Name: transportCompanyResponsible.Name,\r\n                        Email: transportCompanyResponsible.Email,\r\n                        Username: transportCompanyResponsible.Username,\r\n                        PhoneNumber: transportCompanyResponsible.PhoneNumber,\r\n                        InternalNumber: transportCompanyResponsible.InternalNumber,\r\n                        CommercialRegisterNumber: transportCompanyResponsible.CommercialRegisterNumber,\r\n                        Active: transportCompanyResponsible.Active,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Name: \"\",\r\n                        Email: \"\",\r\n                        Username: \"\",\r\n                        PhoneNumber: \"\",\r\n                        InternalNumber: \"\",\r\n                        CommercialRegisterNumber: \"\",\r\n                        Active: false,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Name,\r\n            Email,\r\n            Username,\r\n            PhoneNumber,\r\n            InternalNumber,\r\n            CommercialRegisterNumber,\r\n            Active\r\n        } = this.state;\r\n        \r\n        return <section>\r\n            {/* <PageHeading Heading=\"PROFILE\" /> */}\r\n            <div className=\"jumbotron theme-default\">\r\n                <div className=\"container\">\r\n                    <div className=\"type-h3 color-default p-t-xxs\">{Name}</div>\r\n                    <div className=\"type-sh3\">\r\n                        <span className=\"fas fa-copyright m-r-xxxs\" style={{ color: \"#606060\" }}></span>Transport Company</div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-at\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Username</div>\r\n                                        <div className=\"content-text-secondary\">{Username}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-envelope\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Email</div>\r\n                                        <div className=\"content-text-secondary\">{Email}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-phone\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Phone Number</div>\r\n                                        <div className=\"content-text-secondary\">{PhoneNumber}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"entity-list\">\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-hashtag\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Internal Number</div>\r\n                                            <div className=\"content-text-secondary\">{InternalNumber}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list\">\r\n                                    <div className=\"entity-list-item\">\r\n                                        <div className=\"item-icon\">\r\n                                            <span className=\"fas fa-hashtag\"></span>\r\n                                        </div>\r\n                                        <div className=\"item-content-primary\">\r\n                                            <div className=\"content-text-primary\">Commercial Register Number</div>\r\n                                            <div className=\"content-text-secondary\">{CommercialRegisterNumber}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"entity-list-item\">\r\n                                    <div className=\"item-icon\">\r\n                                        <span className=\"fas fa-globe-asia\"></span>\r\n                                    </div>\r\n                                    <div className=\"item-content-primary\">\r\n                                        <div className=\"content-text-primary\">Active</div>\r\n                                        <div className=\"content-text-secondary\">{Active ?\r\n                                            <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                                            <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <DocumentsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Profile;","import React, { Component } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport FirebaseApp from \"../../../../res/FirebaseApp\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport PhoneConfirmationDialog from \"../../../../containers/phoneConfirmationDialog/PhoneConfirmationDialog\";\r\nimport { getData, generalSettings } from \"../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass GeneralSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Name: \"\",\r\n            PhoneNumber: \"\",\r\n\r\n            ValidName: true,\r\n            ValidPhoneNumber: true,\r\n\r\n            ConfirmationResult: null,\r\n            PhoneCodeVerified: false,\r\n\r\n            ValidForm: false,\r\n            SettingsSaved: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                FirstName: \"\",\r\n                LastName: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\"recaptcha\", {\r\n            \"size\": \"invisible\",\r\n            \"callback\": response => {\r\n            }\r\n        });\r\n\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TransportCompanyResponsible\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Transport company responsible found.\") {\r\n                    let transportCompanyResponsible = response.TransportCompanyResponsible;\r\n\r\n                    this.setState({\r\n                        Name: transportCompanyResponsible.Name,\r\n                        PhoneNumber: transportCompanyResponsible.PhoneNumber\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Name: \"\",\r\n                        PhoneNumber: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidName,\r\n            ValidPhoneNumber\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"Name\":\r\n                ValidName = (value !== \"\");\r\n                Errors.Name = ValidName ? \"\" : \"Company name is required.\";\r\n\r\n                if (Errors.Name !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidName = (value.match(/^[a-zA-Z ]+$/));\r\n                Errors.Name = ValidName ? \"\" : \"Company name is invalid.\";\r\n                break;\r\n            case \"PhoneNumber\":\r\n                ValidPhoneNumber = (value !== \"\");\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is required.\";\r\n\r\n                if (Errors.PhoneNumber !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidPhoneNumber = value.match(/^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/);\r\n                Errors.PhoneNumber = ValidPhoneNumber ? \"\" : \"Phone number is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidName: ValidName,\r\n            ValidPhoneNumber: ValidPhoneNumber\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: ValidName &&\r\n                    ValidPhoneNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        if (this.state.PhoneCodeVerified) {\r\n            const updatedTransportCompanyResponsible = {\r\n                Token: localStorage.Token,\r\n                Name: this.state.Name,\r\n                PhoneNumber: this.state.PhoneNumber\r\n            };\r\n\r\n            await generalSettings(updatedTransportCompanyResponsible).then(response => {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                if (response.Message === \"Transport company responsible is updated.\") {\r\n                    this.props.OnSettingsSaved();\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            const appVerifier = window.recaptchaVerifier;\r\n\r\n            FirebaseApp.auth().languageCode = \"en\";\r\n            FirebaseApp.auth().signInWithPhoneNumber(this.state.PhoneNumber, appVerifier).then(confirmationResult => {\r\n                this.setState({\r\n                    ShowPreloader: false,\r\n                    ConfirmationResult: confirmationResult\r\n                });\r\n\r\n                this.SendCodeButton.click();\r\n            }).catch(error => {\r\n                let {\r\n                    Errors\r\n                } = this.state;\r\n\r\n                Errors.PhoneNumber = error.message;\r\n\r\n                this.setState({\r\n                    ShowPreloader: false,\r\n                    Errors: Errors\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Name,\r\n            PhoneNumber,\r\n            ConfirmationResult,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>General Settings</div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n                <div className=\"entity-list entity-list-expandable\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-comment\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"Name\" autoComplete=\"off\"\r\n                                    value={Name} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Company Name</div>\r\n                            <div className=\"text-danger\">{Errors.Name}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-phone\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"PhoneNumber\" autocomplete=\"off\"\r\n                                    placeholder=\"+XXXXXXXXXXXX\" value={PhoneNumber} onChange={this.onChange} style={{ width: \"193px\", }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Phone Number</div>\r\n                            <div className=\"text-danger\">{Errors.PhoneNumber}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item active\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-save\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Save Changes?</div>\r\n                            <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                        </div>\r\n                        <div className=\"item-content-expanded\">\r\n                            <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <button\r\n                style={{ display: \"none\" }}\r\n                data-toggle=\"modal\"\r\n                data-target=\"#phone-confirmation-dialog\"\r\n                ref={sendCodeButton => this.SendCodeButton = sendCodeButton}></button>\r\n            <PhoneConfirmationDialog ConfirmationResult={ConfirmationResult}\r\n                PhoneNumber={this.state.PhoneNumber}\r\n                OnOK={phoneCodeVerified => {\r\n                    if (phoneCodeVerified) {\r\n                        this.setState({\r\n                            PhoneCodeVerified: true\r\n                        });\r\n\r\n                        this.onSubmit();\r\n                    }\r\n                    else {\r\n                        let {\r\n                            Errors\r\n                        } = this.state;\r\n\r\n                        Errors.PhoneNumber = \"Confirmation code is invalid.\";\r\n\r\n                        this.setState({\r\n                            ValidForm: false,\r\n                            Errors: Errors\r\n                        });\r\n                    }\r\n                }} />\r\n            <div id=\"recaptcha\"></div>\r\n            {ShowPreloader ? <Preloader /> : null}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default GeneralSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { usernameAndEmailSettings } from \"../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass CodeConfirmationDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ConfirmCode: \"\",\r\n\r\n            ValidConfirmCode: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                ConfirmCode: \"\",\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidConfirmCode\r\n        } = this.state;\r\n\r\n        ValidConfirmCode = value === \"12345\";\r\n        Errors.ConfirmCode = ValidConfirmCode ? \"\" : \"Invalid code.\";\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidConfirmCode: ValidConfirmCode,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: ValidConfirmCode\r\n                });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const updatedTransportCompanyResponsible = {\r\n            Token: localStorage.Token,\r\n            Username: this.props.Username,\r\n            Email: this.props.Email,\r\n        };\r\n\r\n        await usernameAndEmailSettings(updatedTransportCompanyResponsible).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Transport company responsible is updated.\") {\r\n                this.props.OnOK(this.cancelButton);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ConfirmCode,\r\n            ValidForm,\r\n            ShowPreloader,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal in\" id=\"code-confirmation-dialog\" tabIndex=\"-1\"\r\n                role=\"dialog\" aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\"\r\n                style={{ display: \"block\" }}>\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\" onClick={this.props.OnCancel}\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Email Confirmation</div>\r\n                                                <div className=\"type-sh3 m-b-xxs\">We delivered a confirmation code to your email.</div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Confirmation Code</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <input type=\"text\" name=\"ConfirmCode\" className=\"form-control\" autoComplete=\"off\"\r\n                                                        value={ConfirmCode} onChange={this.onChange} />\r\n                                                    <span className=\"text-danger\">{Errors.ConfirmCode}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Confirm\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default CodeConfirmationDialog;","import React, { Component } from \"react\";\r\nimport CodeConfirmationDialog from \"./CodeConfirmationDialog\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\n\r\nimport {\r\n    getData,\r\n    validateUsername,\r\n    validateEmail,\r\n    sendCode,\r\n    usernameAndEmailSettings\r\n} from \"../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass UsernameAndEmailSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            Username: \"\",\r\n            NewUsername: \"\",\r\n\r\n            Email: \"\",\r\n            NewEmail: \"\",\r\n\r\n            Code: \"\",\r\n\r\n            ValidNewUsername: true,\r\n            ValidNewEmail: true,\r\n\r\n            ValidForm: false,\r\n            CodeConfirmationDialog: null,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                NewUsername: \"\",\r\n                NewEmail: \"\",\r\n            },\r\n\r\n            CodeConfirmation: \"\",\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TransportCompanyResponsible\"\r\n            };\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Transport company responsible found.\") {\r\n                    let transportCompanyResponsible = response.TransportCompanyResponsible;\r\n\r\n                    this.setState({\r\n                        Username: transportCompanyResponsible.Username,\r\n                        NewUsername: transportCompanyResponsible.Username,\r\n                        Email: transportCompanyResponsible.Email,\r\n                        NewEmail: transportCompanyResponsible.Email\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Username: \"\",\r\n                        NewUsername: \"\",\r\n                        Email: \"\",\r\n                        NewEmail: \"\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidNewUsername,\r\n            ValidNewEmail\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"NewUsername\":\r\n                ValidNewUsername = (value !== \"\");\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is required.\";\r\n\r\n                if (Errors.NewUsername != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewUsername = (value.match(/^[a-z0-9]+$/i));\r\n                Errors.NewUsername = ValidNewUsername ? \"\" : \"Username is invalid.\";\r\n                break;\r\n            case \"NewEmail\":\r\n                ValidNewEmail = (value !== \"\");\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is required.\";\r\n\r\n                if (Errors.NewEmail != \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidNewEmail = (value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i));\r\n                Errors.NewEmail = ValidNewEmail ? \"\" : \"Email is invalid.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidNewUsername: ValidNewUsername,\r\n            ValidNewEmail: ValidNewEmail,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: ValidNewUsername &&\r\n                    ValidNewEmail\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername === this.state.Username &&\r\n            this.state.NewEmail === this.state.Email) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.NewUsername !== this.state.Username) {\r\n            const response = await validateUsername(this.state.NewUsername);\r\n\r\n            if (response.Message === \"Username is unavailable.\") {\r\n                let errors = this.state.Errors;\r\n                errors.NewUsername = response.Message;\r\n\r\n                this.setState({\r\n                    Errors: errors\r\n                });\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.NewEmail !== this.state.Email) {\r\n            const response = await validateEmail(this.state.NewEmail);\r\n            if (response.Message === \"Email is already taken.\") {\r\n                let errors = this.state.Errors;\r\n                errors.NewEmail = response.Message;\r\n\r\n                this.setState({\r\n                    Errors: errors\r\n                });\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        if (this.state.NewEmail === this.state.Email) {\r\n            const updatedTransportCompanyResponsible = {\r\n                Token: localStorage.Token,\r\n                Username: this.state.NewUsername,\r\n                Email: this.state.NewEmail,\r\n            };\r\n\r\n            await usernameAndEmailSettings(updatedTransportCompanyResponsible).then(response => {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                if (response.Message === \"Transport company responsible is updated.\") {\r\n                    this.props.OnSettingsSaved();\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            await sendCode(this.state.NewEmail).then(response => {\r\n                this.setState({\r\n                    ShowPreloader: false\r\n                });\r\n\r\n                if (response.Message === \"Code sent.\") {\r\n                    this.setState({\r\n                        CodeConfirmationDialog: <CodeConfirmationDialog\r\n                            Code={response.Code}\r\n                            Username={this.state.NewUsername}\r\n                            Email={this.state.NewEmail}\r\n                            OnCancel={() => {\r\n                                this.setState({\r\n                                    CodeConfirmationDialog: null,\r\n                                });\r\n                            }}\r\n                            OnOK={cancelButton => {\r\n                                cancelButton.click();\r\n                                this.props.OnSettingsSaved();\r\n                            }} />\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            NewUsername,\r\n            NewEmail,\r\n            ValidForm,\r\n            ShowPreloader,\r\n            CodeConfirmationDialog,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return (\r\n            <section>\r\n                <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n                <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\", }}>Username and Emails</div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"entity-list entity-list-expandable\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-at\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"NewUsername\" className=\"form-control\" autocomplete=\"off\"\r\n                                        value={NewUsername} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Username</div>\r\n                                <div className=\"content-text-secondary text-danger\">{Errors.NewUsername}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-envelope\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-secondary\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"email\" name=\"NewEmail\" className=\"form-control\" placeholder=\"someone@example.com\" autocomplete=\"off\"\r\n                                        value={NewEmail} onChange={this.onChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Email</div>\r\n                                <div className=\"content-text-secondary text-danger\">{Errors.NewEmail}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"entity-list-item active\">\r\n                            <div className=\"item-icon\">\r\n                                <span className=\"fas fa-save\"></span>\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">Save Changes?</div>\r\n                                <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                            </div>\r\n                            <div className=\"item-content-expanded\">\r\n                                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                \r\n                {ShowPreloader ? <Preloader /> : null}\r\n                {CodeConfirmationDialog}\r\n            </section> \r\n        );\r\n    }\r\n};\r\n\r\nexport default UsernameAndEmailSettings;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { validatePassword, passwordSettings } from \"../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass PasswordSettings extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            CurrentPassword: \"\",\r\n            NewPassword: \"\",\r\n            ConfirmPassword: \"\",\r\n\r\n            ValidCurrentPassword: false,\r\n            ValidNewPassword: false,\r\n            ValidConfirmPassword: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                CurrentPassword: \"\",\r\n                NewPassword: \"\",\r\n                ConfirmPassword: \"\",\r\n            },\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    async validateField(field, value) {\r\n        let {\r\n            Errors,\r\n            ValidCurrentPassword,\r\n            ValidNewPassword,\r\n            ValidConfirmPassword\r\n        } = this.state;\r\n\r\n        switch (field) {\r\n            case \"CurrentPassword\":\r\n                ValidCurrentPassword = (value !== \"\");\r\n                Errors.CurrentPassword = ValidCurrentPassword ? \"\" : \"Current password is required.\";\r\n                break;\r\n            case \"NewPassword\":\r\n                ValidNewPassword = value.length >= 6;\r\n                Errors.NewPassword = ValidNewPassword ? \"\" : \"Password is too short.\";\r\n\r\n                if (Errors.NewPassword !== \"\") {\r\n                    break;\r\n                }\r\n\r\n                ValidConfirmPassword = value === this.state.ConfirmPassword;\r\n                Errors.ConfirmPassword = ValidConfirmPassword ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n                break;\r\n            case \"ConfirmPassword\":\r\n                ValidConfirmPassword = value === this.state.NewPassword;\r\n                Errors.ConfirmPassword = ValidConfirmPassword ? \"\" : \"Passwords did not match.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidCurrentPassword: ValidCurrentPassword,\r\n            ValidNewPassword: ValidNewPassword,\r\n            ValidConfirmPassword: ValidConfirmPassword,\r\n        }, () => {\r\n            this.setState({\r\n                ValidForm: ValidCurrentPassword &&\r\n                    ValidNewPassword &&\r\n                    ValidConfirmPassword\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        let passwordPackage = {\r\n            Token: localStorage.Token,\r\n            Password: this.state.CurrentPassword\r\n        };\r\n\r\n        await validatePassword(passwordPackage).then(async response => {\r\n            if (response.Message === \"Invalid password.\") {\r\n                this.validateField(\"CurrentPassword\", response.Message);\r\n                let errors = this.state.Errors;\r\n                errors.CurrentPassword = response.Message;\r\n\r\n                this.setState({\r\n                    Errors: errors\r\n                });\r\n            }\r\n            else {\r\n                this.setState({\r\n                    ShowPreloader: true\r\n                });\r\n\r\n                const updatedTransportCompanyResponsible = {\r\n                    Token: localStorage.Token,\r\n                    Password: this.state.NewPassword\r\n                };\r\n\r\n                await passwordSettings(updatedTransportCompanyResponsible).then(response => {\r\n                    this.setState({\r\n                        ShowPreloader: false,\r\n                        CurrentPassword: \"\",\r\n                        NewPassword: \"\",\r\n                        ConfirmPassword: \"\"\r\n                    });\r\n\r\n                    if (response.Message === \"Transport company responsible is updated.\") {\r\n                        this.props.OnSettingsSaved();\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            CurrentPassword,\r\n            NewPassword,\r\n            ConfirmPassword,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3\" style={{ margin: \"0px\", padding: \"10px\", backgroundColor: \"#EFEFEF\" }}>Change Password</div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n                <div className=\"entity-list entity-list-expandable\">\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" name=\"CurrentPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                    value={CurrentPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Current Password</div>\r\n                            <div className=\"text-danger\">{Errors.CurrentPassword}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" name=\"NewPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                    value={NewPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">New Password</div>\r\n                            <div className=\"text-danger\">{Errors.NewPassword}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-key\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-secondary\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" name=\"ConfirmPassword\" className=\"form-control\" autoComplete=\"off\"\r\n                                    value={ConfirmPassword} onChange={this.onChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Confirm Password</div>\r\n                            <div className=\"text-danger\">{Errors.ConfirmPassword}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"entity-list-item active\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"fas fa-save\"></span>\r\n                        </div>\r\n                        <div className=\"item-content-primary\">\r\n                            <div className=\"content-text-primary\">Save Changes?</div>\r\n                            <div className=\"content-text-secondary\">This cannot be undone.</div>\r\n                        </div>\r\n                        <div className=\"item-content-expanded\">\r\n                            <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            {ShowPreloader ? <Preloader /> : null}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default PasswordSettings;","import React, { Component } from \"react\";\r\nimport GeneralSettings from \"./GeneralSettings\";\r\nimport UsernameAndEmailSettings from \"./UsernameAndEmailSettings\";\r\nimport PasswordSettings from \"./PasswordSettings\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\n\r\nclass Settings extends Component {\r\n    render() {\r\n        return <section>\r\n            {/* <PageHeading Heading=\"SETTINGS\" /> */}\r\n            <GeneralSettings />\r\n            <UsernameAndEmailSettings />\r\n            <PasswordSettings />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Settings;","import React, { Component } from \"react\";\r\nimport TruckContainer from \"../../../../../containers/truck/TruckContainer\";\r\nimport TrailersContainer from \"../../../../../containers/truck/TrailersContainer\";\r\n\r\nclass TruckDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Trailers: []\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Trailers\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            DriverID\r\n        } = this.props;\r\n\r\n        const index = this.props.Index;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`truck-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <section>\r\n                                <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                                    <li role=\"presentation\" className=\"active\">\r\n                                        <a href={`#truck-tab-${Index}`} aria-controls={`truck-tab-${Index}`} role=\"tab\" data-toggle=\"tab\">Truck</a>\r\n                                    </li>\r\n                                    <li role=\"presentation\">\r\n                                        <a href={`#trailers-tab-${Index}`} aria-controls={`trailers-tab-${Index}`} role=\"tab\" data-toggle=\"tab\">Trailers</a>\r\n                                    </li>\r\n                                </ul>\r\n                                <div className=\"tab-content\">\r\n                                    <div role=\"tabpanel\" className=\"tab-pane active\" id={`truck-tab-${index}`}>\r\n                                        <TruckContainer Refresh={this.props.Refresh}\r\n                                            DriverID={DriverID}\r\n                                            OnTrailersFound={trailers => {\r\n                                                this.setState({\r\n                                                    Trailers: trailers\r\n                                                });\r\n                                            }}\r\n                                            TabView={true} />\r\n                                    </div>\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id={`trailers-tab-${index}`}>\r\n                                        <TrailersContainer Trailers={Trailers} />\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TruckDialog;","import React, { Component } from \"react\";\r\nimport DriverContainer from \"../../../../../containers/driver/DriverContainer\";\r\nimport DocumentsContainer from \"../../../../../containers/driver/documents/DocumentsContainer\";\r\n\r\nclass ProfileDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            DriverID,\r\n            RefreshDocuments,\r\n            RefreshDriver\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`driver-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <section>\r\n                                <ul className=\"nav nav-tabs tabs-light\" role=\"tablist\">\r\n                                    <li role=\"presentation\" className=\"active\">\r\n                                        <a href={`#driver-tab-${Index}`} aria-controls={`driver-tab-${Index}`} role=\"tab\" data-toggle=\"tab\">Driver</a>\r\n                                    </li>\r\n                                    <li role=\"presentation\">\r\n                                        <a href={`#documents-tab-${Index}`} aria-controls={`documents-tab-${Index}`} role=\"tab\" data-toggle=\"tab\">Documents</a>\r\n                                    </li>\r\n                                </ul>\r\n                                <div className=\"tab-content\">\r\n                                    <div role=\"tabpanel\" className=\"tab-pane active\" id={`driver-tab-${Index}`}>\r\n                                        <DriverContainer Refresh={RefreshDriver} DriverID={DriverID} TabView={true} />\r\n                                    </div>\r\n                                    <div role=\"tabpanel\" className=\"tab-pane\" id={`documents-tab-${Index}`}>\r\n                                        <DocumentsContainer Refresh={RefreshDocuments} DriverID={DriverID} />\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default ProfileDialog;","import React from \"react\";\r\nimport { withGoogleMap, withScriptjs, GoogleMap, Marker, } from \"react-google-maps\";\r\nimport Strings from \"../../../../../res/strings\";\r\n\r\nconst Map = props => {\r\n    const {\r\n        DriverLocation\r\n    } = props;\r\n\r\n    return <GoogleMap\r\n        defaultZoom={14}\r\n        defaultCenter={{ lat: DriverLocation.Lat, lng: DriverLocation.Lng }}\r\n        center={{ lat: DriverLocation.Lat, lng: DriverLocation.Lng }}\r\n        options={{ streetViewControl: false }}>\r\n\r\n        <Marker key={1} position={{ lat: DriverLocation.Lat, lng: DriverLocation.Lng }}\r\n            icon={{\r\n                url: \"./images/truck_marker.svg\",\r\n                scaledSize: new window.google.maps.Size(40, 40)\r\n            }} />\r\n    </GoogleMap>;\r\n}\r\n\r\nconst MapWrapped = withScriptjs(withGoogleMap(Map));\r\n\r\nconst TruckMap = props => {\r\n    return <div style={{ width: \"100%\", height: \"100vh\" }}>\r\n        <MapWrapped\r\n            googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${Strings.GOOGLE_API_KEY}`}\r\n            loadingElement={<div style={{ height: `100%` }} />}\r\n            containerElement={<div style={{ height: `100%` }} />}\r\n            mapElement={<div style={{ height: `100%` }} />}\r\n            DriverLocation={props.DriverLocation} />\r\n    </div>;\r\n}\r\n\r\nexport default TruckMap;","import React, { Component } from \"react\";\r\nimport FirebaseApp from \"../../../../../res/FirebaseApp\";\r\nimport TruckMap from \"./TruckMap\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\n\r\nclass LocateTruckDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.Database = FirebaseApp.database().ref().child(`${this.props.DriverID}`);\r\n\r\n        this.state = {\r\n            DriverLocation: null,\r\n            Searching: false\r\n        };\r\n\r\n        this.locateTruck = this.locateTruck.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.LocateTruck(this.locateTruck);\r\n    }\r\n\r\n    locateTruck = () => {\r\n        this.setState({\r\n            Searching: true\r\n        });\r\n\r\n        this.Database.on(\"value\", snapshot => {\r\n            let driverLocation = null;\r\n            const value = snapshot.val();\r\n\r\n            if (value) {\r\n                const locationCoordinates = value[\"latlong\"].split(\",\");\r\n\r\n                driverLocation = {\r\n                    Lat: parseFloat(locationCoordinates[0]),\r\n                    Lng: parseFloat(locationCoordinates[1])\r\n                };\r\n            }\r\n\r\n            this.setState({\r\n                DriverLocation: driverLocation,\r\n                Searching: false\r\n            });\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            DriverLocation,\r\n            Searching\r\n        } = this.state;\r\n\r\n        const {\r\n            Index\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`locate-truck-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {Searching || !DriverLocation ?\r\n                                <SearchingContainer Searching={Searching}\r\n                                    SearchingFor=\"truck location\" /> :\r\n                                <TruckMap DriverLocation={DriverLocation} />}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default LocateTruckDialog;","import React, { Component } from \"react\";\r\nimport TruckDialog from \"./TruckDialog\";\r\nimport DriverDialog from \"./DriverDialog\";\r\nimport LocateTruckDialog from \"./LocateTruckDialog\";\r\n\r\nclass TruckListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Truck\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{Index + 1}</strong>\r\n            </td>\r\n\r\n            <td>{Truck.TruckNumber}</td>\r\n\r\n            <td>{Truck.Brand}</td>\r\n\r\n            <td>{Truck.Model}</td>\r\n\r\n            <td className=\"text-right\">\r\n                <button className=\"btn btn-secondary m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#truck-dialog-${Index}`}>Details</button>\r\n\r\n                <button className=\"btn btn-secondary m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#driver-dialog-${Index}`}\r\n                    onClick={async () => {\r\n                        await this.RefreshDriverContainer();\r\n                        await this.RefreshDocumentsContainer();\r\n                    }}>Driver</button>\r\n\r\n                <button className=\"btn btn-primary m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#locate-truck-dialog-${Index}`}\r\n                    onClick={() => { this.LocateTruck(); }}>Locate</button>\r\n\r\n                <TruckDialog Index={Index}\r\n                    DriverID={Truck.DriverID}\r\n                    Refresh={refresh => { this.RefreshTruckContainer = refresh; }} />\r\n\r\n                <DriverDialog Index={Index}\r\n                    DriverID={Truck.DriverID}\r\n                    RefreshDriver={refresh => { this.RefreshDriverContainer = refresh; }}\r\n                    RefreshDocuments={refresh => { this.RefreshDocumentsContainer = refresh; }} />\r\n\r\n                <LocateTruckDialog Index={Index}\r\n                    DriverID={Truck.DriverID}\r\n                    LocateTruck={locateTruck => { this.LocateTruck = locateTruck; }}/>\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default TruckListItem;","import React, { Component } from \"react\";\r\nimport ProgressRing from \"../../../../../controls/ProgressRing\";\r\nimport SearchingContainer from \"../../../../../containers/searching/SearchingContainer\";\r\nimport TruckListItem from \"./TruckListItem\";\r\nimport { getData } from \"../../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass TrucksList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Trucks: [],\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Trucks\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Trucks found.\") {\r\n                    this.setState({\r\n                        Trucks: response.Trucks,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        Trucks: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            Trucks,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-truck-moving m-r-xxs\"></span>Trucks</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Your Trucks\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n\r\n            {(Trucks.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"trucks\" /> :\r\n                <div class=\"table-responsive back-color-gray\" style={{ height: \"100vh\" }}>\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>NUMBER</th>\r\n                                <th>TRUCK NUMBER</th>\r\n                                <th>BRAND</th>\r\n                                <th>MODEL</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {Trucks.map((truck, index) => {\r\n                                return <TruckListItem key={index}\r\n                                    Index={index}\r\n                                    Truck={truck} />;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TrucksList;","import React, { Component } from \"react\";\r\nimport TrucksList from \"./TrucksList\";\r\n\r\nclass TruckList extends Component {\r\n    render() {\r\n        return <section>\r\n            <TrucksList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TruckList;","import React, { Component } from \"react\";\r\nimport Rating from \"../../../../../../../controls/Rating\";\r\n\r\nclass DriverReviewContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            DriverReview\r\n        } = this.props;\r\n\r\n        return DriverReview ?\r\n            <div class=\"alert alert-info m-n\" style={{ backgroundColor: \"#E5E5E5\", borderTop: \"2px solid #CCCCCC\" }}>\r\n                <div className=\"type-h4 color-default p-t-xxxs\">Driver's Review</div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-24\">\r\n                        <div className=\"entity-list\">\r\n                            <div className=\"entity-list-item\">\r\n                                <div className=\"item-icon\">\r\n                                    <span className=\"fas fa-star\"></span>\r\n                                </div>\r\n                                <div className=\"item-content-primary\">\r\n                                    <div className=\"content-text-primary\">Rating</div>\r\n                                    <div className=\"content-text-secondary\"><Rating Rating={DriverReview.Rating} Color=\"\" Size=\"rating-small\" /></div>\r\n                                    <div className=\"content-text-primary\">Review</div>\r\n                                    <div className=\"content-text-secondary\">{DriverReview.Review}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div > :\r\n            <div class=\"alert alert-info m-n\" style={{ backgroundColor: \"#E5E5E5\", borderTop: \"2px solid #CCCCCC\" }}>\r\n                <div className=\"type-h4 color-default p-t-xxxs\">Driver's Review</div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-24\">\r\n                        <div className=\"entity-list\">\r\n                            <div className=\"entity-list-item\">\r\n                                <div className=\"item-icon\">\r\n                                    <span className=\"fas fa-star\"></span>\r\n                                </div>\r\n                                <div className=\"item-content-primary\">\r\n                                    <div className=\"content-text-primary\">No Rating Found</div>\r\n                                    <div className=\"content-text-secondary\">Driver's rating and review appears here.</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n\r\n    }\r\n};\r\n\r\nexport default DriverReviewContainer;","import React, { Component } from \"react\";\r\n\r\nclass UserDetailsContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Driver,\r\n            Trader,\r\n        } = this.props;\r\n\r\n        return <div class=\"alert alert-info m-n\" style={{ backgroundColor: \"#E5E5E5\", borderTop: \"2px solid #CCCCCC\" }}>\r\n            <div className=\"type-h4 color-default p-t-xxxs\">Participants</div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"entity-list\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <img src={Driver.PhotoURL ? Driver.PhotoURL : \"./images/defaultProfilePhoto.png\"} alt=\"profile_photo.png\"\r\n                                    height=\"34\"\r\n                                    width=\"34\"\r\n                                    style={{\r\n                                        height: \"100%\",\r\n                                        width: \"100%\",\r\n                                        margin: \"0px\",\r\n                                        border: \"3px solid #3A3A3C\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">{`${Driver.FirstName} ${Driver.LastName}`}</div>\r\n                                <div className=\"content-text-secondary color-default\">{`@${Driver.Username}`}</div>\r\n                                <div className=\"content-text-secondary\">DRIVER</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"entity-list\">\r\n                        <div className=\"entity-list-item\">\r\n                            <div className=\"item-icon\">\r\n                                <img src={Trader.PhotoURL ? Trader.PhotoURL : \"./images/defaultProfilePhoto.png\"} alt=\"profile_photo.png\"\r\n                                    height=\"34\"\r\n                                    width=\"34\"\r\n                                    style={{\r\n                                        height: \"100%\",\r\n                                        width: \"100%\",\r\n                                        margin: \"0px\",\r\n                                        border: \"3px solid #3A3A3C\"\r\n                                    }} />\r\n                            </div>\r\n                            <div className=\"item-content-primary\">\r\n                                <div className=\"content-text-primary\">{`${Trader.FirstName} ${Trader.LastName}`}</div>\r\n                                <div className=\"content-text-secondary color-default\">{`@${Trader.Username}`}</div>\r\n                                <div className=\"content-text-secondary\">{Trader.Type.toUpperCase()}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n};\r\n\r\nexport default UserDetailsContainer;","import React, { Component } from \"react\";\r\nimport CompletedJobContainer from \"../../../../../../../containers/completedJob/CompletedJobContainer\";\r\nimport DriverReviewContainer from \"./DriverReviewContainer\";\r\nimport UserDetailsContainer from \"./UserDetailsContainer\";\r\n\r\nclass TruckJobDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            JobDetails\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <CompletedJobContainer CompletedJob={JobDetails} />\r\n            <DriverReviewContainer DriverReview={JobDetails.DriverReview} />\r\n            <UserDetailsContainer Driver={JobDetails.Driver} Trader={JobDetails.Trader} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TruckJobDetails;","import React, { Component } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport TruckJobDetailsContainer from \"./truckJobDetails/TruckJobDetails\";\r\nimport { getData } from \"../../../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass TruckJobDetailsDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            TruckJobDetails: null,\r\n            Searching: false\r\n        };\r\n\r\n        this.searchTruckJobDetails = this.searchTruckJobDetails.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.SearchTruckJobDetails(this.searchTruckJobDetails);\r\n    }\r\n\r\n    searchTruckJobDetails = async completedJobID => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TruckJobDetails\",\r\n                Params: {\r\n                    CompletedJobID: completedJobID\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Truck job details found.\") {\r\n                    this.setState({\r\n                        TruckJobDetails: response.TruckJobDetails,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        TruckJobDetails: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            TruckJobDetails,\r\n            Searching\r\n        } = this.state;\r\n\r\n        const {\r\n            Index\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`truck-job-details-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }} data-dismiss=\"modal\">\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {Searching || !TruckJobDetails ?\r\n                                <SearchingContainer Searching={Searching}\r\n                                    SearchingFor=\"job details\" /> :\r\n                                <section>\r\n                                    <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                                        <ReactToPrint\r\n                                            trigger={() => <button className=\"btn btn-primary m-t-n\">Print</button>}\r\n                                            content={() => this.JobDetails} />\r\n                                    </div>\r\n                                    <TruckJobDetailsContainer JobDetails={TruckJobDetails}\r\n                                        ref={jobDetails => (this.JobDetails = jobDetails)}/>\r\n                                </section>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TruckJobDetailsDialog;","import React, { Component } from \"react\";\r\nimport Strings from \"../../../../../../res/strings\";\r\nimport TruckJobDetailsDialog from \"./TruckJobDetailsDialog\";\r\n\r\nclass TruckJobsRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            TruckJob\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{`${Index + 1}.`}</strong>\r\n            </td>\r\n\r\n            <td>{TruckJob.JobNumber}</td>\r\n\r\n            <td>{TruckJob.LoadingPlace}</td>\r\n\r\n            <td>{TruckJob.UnloadingPlace}</td>\r\n\r\n            <td>{`${TruckJob.Price.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n\r\n            <td>{TruckJob.TruckNumber}</td>\r\n\r\n            <td>{new Date(TruckJob.Created).toDateString()}</td>\r\n\r\n            <td className=\"text-right\">\r\n                <button className=\"btn btn-primary m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#truck-job-details-dialog-${Index}`}\r\n                    onClick={async () => { await this.SearchTruckJobDetails(TruckJob.CompletedJobID); }}>Details</button>\r\n\r\n                <TruckJobDetailsDialog Index={Index}\r\n                    SearchTruckJobDetails={searchTruckJobDetails => { this.SearchTruckJobDetails = searchTruckJobDetails }} />\r\n            </td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default TruckJobsRow;","import React, { Component } from \"react\";\r\nimport TruckJobsRow from \"./TruckJobsRow\";\r\n\r\nclass TruckJobsTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            TruckJobs\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div class=\"table-responsive back-color-gray\" style={{ borderTop: \"4px solid #CCCCCC\", height: \"100vh\" }}>\r\n                <table class=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>NUMBER</th>\r\n                            <th>JOB NUMBER</th>\r\n                            <th>SOURCE</th>\r\n                            <th>DESTINATION</th>\r\n                            <th>PRICE</th>\r\n                            <th>TRUCK NUMBER</th>\r\n                            <th>DATE</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {TruckJobs.map((truckJob, index) => {\r\n                            return <TruckJobsRow key={index}\r\n                                Index={index}\r\n                                TruckJob={truckJob} />;\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TruckJobsTable;","import React, { Component } from \"react\";\r\n\r\nclass SearchTruckJobsDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobNumber: \"\",\r\n            StartDate: \"\",\r\n            EndDate: \"\",\r\n            StartPrice: 0.00,\r\n            EndPrice: 0.00\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        const {\r\n            JobNumber,\r\n            StartDate,\r\n            EndDate,\r\n            StartPrice,\r\n            EndPrice\r\n        } = this.state;\r\n\r\n        console.log(JobNumber);\r\n        console.log(StartDate);\r\n        console.log(EndDate);\r\n        console.log(StartPrice);\r\n        console.log(EndPrice);\r\n\r\n        const {\r\n            TruckJobs\r\n        } = this.props;\r\n\r\n        let filteredTruckJobs;\r\n        let count;\r\n\r\n        if (JobNumber !== \"\") {\r\n            filteredTruckJobs = [];\r\n            count = 0;\r\n\r\n            for (let truckJob of TruckJobs) {\r\n                if (truckJob.JobNumber.includes(JobNumber)) {\r\n                    filteredTruckJobs[count++] = truckJob;\r\n                }\r\n            }\r\n\r\n            this.cancelButton.click();\r\n            this.props.OnOK(filteredTruckJobs);\r\n            return;\r\n        }\r\n        else {\r\n            filteredTruckJobs = TruckJobs.slice();\r\n            let indicesToRemove;\r\n\r\n            if (StartDate !== \"\") {\r\n                console.log(\"Hllo\");\r\n                indicesToRemove = []\r\n                count = 0;\r\n\r\n                for (let truckJob of filteredTruckJobs) {\r\n                    const created = new Date(truckJob.Created);\r\n                    const startDate = new Date(StartDate);\r\n\r\n                    if (created < startDate) {\r\n                        indicesToRemove.push(count);\r\n                    }\r\n\r\n                    count++;\r\n                }\r\n\r\n                for (let index of indicesToRemove) {\r\n                    filteredTruckJobs.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            if (EndDate !== \"\") {\r\n                indicesToRemove = [];\r\n                count = 0;\r\n\r\n                for (let truckJob of filteredTruckJobs) {\r\n                    const created = new Date(truckJob.Created);\r\n                    const endDate = new Date(EndDate);\r\n\r\n                    if (created > endDate) {\r\n                        indicesToRemove.push(count);\r\n                    }\r\n\r\n                    count++;\r\n                }\r\n\r\n                for (let index of indicesToRemove) {\r\n                    filteredTruckJobs.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            if (StartPrice !== \"\" ||\r\n                StartPrice !== 0) {\r\n                indicesToRemove = [];\r\n                count = 0;\r\n\r\n                for (let truckJob of filteredTruckJobs) {\r\n                    if (parseFloat(truckJob.Price) < parseFloat(StartPrice)) {\r\n                        indicesToRemove.push(count);\r\n                    }\r\n\r\n                    count++;\r\n                }\r\n\r\n                for (let index of indicesToRemove) {\r\n                    filteredTruckJobs.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            if (EndPrice !== \"\" ||\r\n                parseFloat(EndPrice) !== 0) {\r\n                indicesToRemove = [];\r\n                count = 0;\r\n\r\n                for (let truckJob of filteredTruckJobs) {\r\n                    if (parseFloat(truckJob.Price) > parseFloat(EndPrice)) {\r\n                        indicesToRemove.push(count);\r\n                    }\r\n\r\n                    count++;\r\n                }\r\n\r\n                for (let index of indicesToRemove) {\r\n                    filteredTruckJobs.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            this.cancelButton.click();\r\n            this.props.OnOK(filteredTruckJobs);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            JobNumber,\r\n            StartDate,\r\n            EndDate,\r\n            StartPrice,\r\n            EndPrice\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"search-truck-jobs-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"type-h3 color-default p-t-xxs\">Search Truck Jobs</div>\r\n                                        <div className=\"row p-t-xxs\">\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Job Number</label>\r\n                                                    <input type=\"text\" name=\"JobNumber\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={JobNumber} onChange={this.onChange} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Starting Date</label>\r\n                                                    <input type=\"date\" name=\"StartDate\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={StartDate} onChange={this.onChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Ending Date</label>\r\n                                                    <input type=\"date\" name=\"EndDate\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={EndDate} onChange={this.onChange} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Staring Price (USD)</label>\r\n                                                    <input type=\"number\" min=\"0.00\" step=\"0.01\" name=\"StartPrice\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={StartPrice} onChange={this.onChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Ending Price (USD)</label>\r\n                                                    <input type=\"number\" min=\"0.00\" step=\"0.01\" name=\"EndPrice\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={EndPrice} onChange={this.onChange} />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Search Now\" className=\"btn btn-primary\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default SearchTruckJobsDialog;","import React, { Component } from \"react\";\r\nimport ProgressBar from \"../../../../../../controls/ProgressBar\";\r\nimport TruckJobsTable from \"./TruckJobsTable\";\r\nimport SearchTruckJobsDialog from \"./SearchTruckJobsDialog\";\r\nimport SearchingContainer from \"../../../../../../containers/searching/SearchingContainer\";\r\nimport { getData } from \"../../../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass TruckJobs extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllTruckJobs: [],\r\n            TruckJobs: [],\r\n            Searching: false,\r\n            ShowingSearchResults: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.searchTruckJobs = this.searchTruckJobs.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.SearchTruckJobs(this.searchTruckJobs);\r\n    }\r\n\r\n    searchTruckJobs = async truckNumber => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TruckJobs\",\r\n                Params: {\r\n                    TruckNumber: truckNumber\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Truck jobs found.\") {\r\n                    this.setState({\r\n                        AllTruckJobs: response.TruckJobs,\r\n                        TruckJobs: response.TruckJobs,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllTruckJobs: [],\r\n                        TruckJobs: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            AllTruckJobs,\r\n            TruckJobs,\r\n            Searching,\r\n            ShowingSearchResults\r\n        } = this.state;\r\n\r\n        return (Searching || AllTruckJobs.length === 0) ?\r\n            <section>\r\n                <div className=\"jumbotron theme-default\" style={{ width: \"100%\", height: \"100vh\" }}>\r\n                    <div className=\"container\">\r\n                        {Searching ? <div className=\"text-center p-xxs\">\r\n                            <div className=\"type-h4 color-default\">Searching</div>\r\n                            <ProgressBar />\r\n                        </div> : <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4\"><span className=\"fas fa-exclamation-triangle m-r-xxs\"\r\n                                    style={{ color: \"#FFBF15\" }}></span>No truck jobs to display. Search the truck by number to view its jobs.</div>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            </section> :\r\n            <section>\r\n                <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                    {ShowingSearchResults ? \r\n                        <button className=\"btn btn-secondary m-t-n\"\r\n                            onClick={() => {\r\n                                this.setState({\r\n                                    TruckJobs: AllTruckJobs,\r\n                                    ShowingSearchResults: false\r\n                                });\r\n                            }}>Cancel Search</button> : \r\n                        <button className=\"btn btn-secondary m-t-n\"\r\n                            data-toggle=\"modal\"\r\n                            data-target={`#search-truck-jobs-dialog`}>Search Jobs</button>}\r\n                </div>\r\n\r\n                <SearchTruckJobsDialog TruckJobs={AllTruckJobs}\r\n                    OnOK={truckJobs => {\r\n                        this.setState({\r\n                            TruckJobs: truckJobs,\r\n                            ShowingSearchResults: true\r\n                        });\r\n                    }} />\r\n\r\n                {TruckJobs.length === 0 ?\r\n                    <SearchingContainer Searching={false}\r\n                        SearchingFor=\"truck jobs\" /> :\r\n                    <TruckJobsTable TruckJobs={TruckJobs} />}\r\n            </section>;\r\n    }\r\n};\r\n\r\nexport default TruckJobs;","import React, { Component } from \"react\";\r\nimport TruckJobs from \"./truckJobsTable/TruckJobs\";\r\n\r\nclass TruckJobsBrowser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            SearchString: \"\"\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n        this.SearchTruckJobs(this.state.SearchString);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            SearchString\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-briefcase m-r-xxs\"></span>Truck Jobs</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Truck Jobs</div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search Truck Number\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            <TruckJobs SearchTruckJobs={onSearch => { this.SearchTruckJobs = onSearch; }} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TruckJobsBrowser;","import React, { Component } from \"react\";\r\nimport TruckJobsBrowser from \"./TruckJobsBrowser\";\r\n\r\nclass TruckJobs extends Component {\r\n    render() {\r\n        return <section>\r\n            <TruckJobsBrowser />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TruckJobs;","import React, { Component } from \"react\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport TruckList from \"./truckList/TruckList\";\r\nimport TruckJobs from \"./truckJobs/TruckJobs\";\r\n\r\nclass Trucks extends Component {\r\n    render() {\r\n        return <section>\r\n            {/* <PageHeading Heading=\"TRUCKS\" /> */}\r\n            <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                padding: \"10px\",\r\n                backgroundColor: \"#3A3A3C\",\r\n                width: \"100%\",\r\n                margin: \"0px\",\r\n            }}>\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#truck-list\" aria-controls=\"truck-list\" role=\"tab\" data-toggle=\"tab\">Truck List</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#truck-jobs\" aria-controls=\"truck-jobs\" role=\"tab\" data-toggle=\"tab\">Truck Jobs</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div class=\"tab-content\">\r\n                <div role=\"tabpanel\" class=\"tab-pane active\" id=\"truck-list\">\r\n                    <TruckList />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"truck-jobs\">\r\n                    <TruckJobs />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Trucks;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { addQuestion } from \"../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass AskQuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Question: \"\",\r\n\r\n            ValidQuestion: false,\r\n\r\n            ValidForm: false,\r\n            ShowPreloader: false,\r\n\r\n            Errors: {\r\n                Question: \"\"\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(field, value) {\r\n        let Errors = this.state.Errors;\r\n        let ValidQuestion = this.state.ValidQuestion;\r\n\r\n        switch (field) {\r\n            case \"Question\":\r\n                ValidQuestion = (value !== \"\");\r\n                Errors.Question = ValidQuestion ? \"\" : \"Question is required.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            Errors: Errors,\r\n            ValidQuestion: ValidQuestion,\r\n        }, () => {\r\n                this.setState({\r\n                    ValidForm: this.state.ValidQuestion\r\n            });\r\n        });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.ValidForm) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const newQuestion = {\r\n            Token: localStorage.Token,\r\n            Question: this.state.Question\r\n        };\r\n\r\n        await addQuestion(newQuestion).then(async response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Question is added.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Question,\r\n            ShowPreloader,\r\n            ValidForm,\r\n            Errors\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`ask-question-dialog`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-24\">\r\n                                                <div className=\"type-h3 color-default p-t-n\">Ask a New Question</div>\r\n                                                <div class=\"form-group\">\r\n                                                    <label className=\"control-label\">Question</label>\r\n                                                    <span className=\"text-danger m-l-xxxs\">*</span>\r\n                                                    <textarea rows=\"6\" class=\"form-control\" name=\"Question\" style={{ maxWidth: \"100%\" }}\r\n                                                        value={Question} onChange={this.onChange}></textarea>\r\n                                                    <span className=\"text-danger\">{Errors.Question}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Post\" className=\"btn btn-primary\" disabled={!ValidForm} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AskQuestionDialog;","import React, { Component } from \"react\";\r\nimport Preloader from \"../../../../controls/Preloader\";\r\nimport { deleteQuestion } from \"../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass DeleteQuestionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ShowPreloader: false,\r\n        };\r\n\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete = async () => {\r\n        this.setState({\r\n            ShowPreloader: true\r\n        });\r\n\r\n        const discardedQuestion = {\r\n            Token: localStorage.Token,\r\n            ResponsibleQuestionID: this.props.ResponsibleQuestionID\r\n        };\r\n\r\n        await deleteQuestion(discardedQuestion).then(response => {\r\n            this.setState({\r\n                ShowPreloader: false\r\n            });\r\n\r\n            if (response.Message === \"Question is deleted.\") {\r\n                this.cancelButton.click();\r\n                this.props.OnOK();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            ShowPreloader\r\n        } = this.state;\r\n\r\n        const {\r\n            Index,\r\n            QuestionNumber\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id={`delete-responsible-question-dialog-${Index}`}\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                {ShowPreloader ? <Preloader /> : null}\r\n                <div className=\"modal-dialog\" style={{ width: \"auto\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"jumbotron theme-default\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-24\">\r\n                                            <div className=\"type-h3 color-default p-t-n\">Delete Question</div>\r\n                                            <div className=\"type-sh3 m-b-xxs\">Are you sure you want to delete question with ID\r\n                                                <span className=\"color-default\">{` ${QuestionNumber}.`}</span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-right\">\r\n                                        <button className=\"btn btn-primary\" onClick={this.onDelete}>Delete</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default DeleteQuestionDialog;","import React, { Component } from \"react\";\r\nimport ResponsibleQuestionContainer from \"../../../../containers/responsibleQuestion/ResponsibleQuestionContainer\";\r\nimport DeleteQuestionDialog from \"./DeleteQuestionDialog\";\r\n\r\nclass QuestionListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Index,\r\n            Question\r\n        } = this.props;\r\n\r\n        return <section>\r\n            <ResponsibleQuestionContainer Index={Index}\r\n                Question={Question} />\r\n\r\n            <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                <button className=\"btn btn-danger m-t-n\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#delete-responsible-question-dialog-${Index}`}>Delete</button>\r\n            </div>\r\n\r\n            <DeleteQuestionDialog Index={Index}\r\n                ResponsibleQuestionID={Question.ResponsibleQuestionID}\r\n                QuestionNumber={Question.QuestionNumber}\r\n                OnOK={this.props.OnQuestionDeleted}/>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default QuestionListItem;","import React, { Component } from \"react\";\r\nimport SearchingContainer from \"../../../../containers/searching/SearchingContainer\";\r\nimport ProgressRing from \"../../../../controls/ProgressRing\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport AskQuestionDialog from \"./AskQuestionDialog\";\r\nimport QuestionListItem from \"./QuestionListItem\";\r\nimport { getData } from \"../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass QuestionsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AllQuestions: [],\r\n            Questions: [],\r\n            SearchString: \"\",\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"Questions\"\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Questions found.\") {\r\n                    this.setState({\r\n                        AllQuestions: response.Questions,\r\n                        Questions: response.Questions,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AllQuestions: [],\r\n                        Questions: [],\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n\r\n        const searchString = this.state.SearchString;\r\n\r\n        if (searchString === \"\") {\r\n            this.setState({\r\n                Questions: this.state.AllQuestions\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const allQuestions = this.state.AllQuestions;\r\n        let filteredQuestions = [];\r\n        let count = 0;\r\n\r\n        for (let question of allQuestions) {\r\n            if (question.Question.includes(searchString) ||\r\n                question.QuestionNumber.includes(searchString) ||\r\n                question.Class.includes(searchString)) {\r\n                filteredQuestions[count++] = question;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Questions: filteredQuestions\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Questions,\r\n            SearchString,\r\n            Searching,\r\n            Refreshing\r\n        } = this.state;\r\n\r\n        return <section>\r\n            {/* <PageHeading Heading=\"QUESTIONS\" /> */}\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-question-circle m-r-xxs\"></span>Questions</div>\r\n                            <p className=\"color-light\">If you are facing any issues, then post a question. Naqel team will answer them as soon as possible.</p>\r\n                            <button className=\"btn btn-primary\"\r\n                                data-toggle=\"modal\"\r\n                                data-target={`#ask-question-dialog`}>Ask a Question</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <AskQuestionDialog OnOK={async () => { await this.onComponentUpdated(); }} />\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Your Questions\r\n                    {Refreshing ? <span className=\"m-l-xxs\"><ProgressRing /></span> : null}\r\n            </div>\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search Questions\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            {(Questions.length === 0) ?\r\n                <SearchingContainer Searching={Searching} SearchingFor=\"questions\" /> :\r\n                <ol className=\"list-items m-n\">\r\n                    {Questions.map((question, index) => {\r\n                        return <li key={index} className=\"list-items-row\" style={{ borderTop: \"4px solid #CCCCCC\" }}>\r\n                            <QuestionListItem Index={index}\r\n                                Question={question}\r\n                                OnQuestionDeleted={this.onComponentUpdated} />\r\n                        </li>;\r\n                    })}\r\n                </ol>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default QuestionsList;","import React, { Component } from \"react\";\r\nimport QuestionsList from \"./QuestionsList\";\r\n\r\nclass Questions extends Component {\r\n    render() {\r\n        return <section>\r\n            <QuestionsList />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default Questions;","import React, { Component } from \"react\";\r\nimport Strings from \"../../../../../res/strings\";\r\n\r\nclass AccountStatementRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Transaction\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{`${new Date(Transaction.Date).toLocaleDateString()}`}</strong>\r\n            </td>\r\n\r\n            <td>{Transaction.TruckNumber}</td>\r\n\r\n            <td>{Transaction.JobNumber}</td>\r\n\r\n            <td>{Transaction.TraderBillNumber}</td>\r\n\r\n            <td>\r\n                {Transaction.TraderBillPaid ?\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}\r\n            </td>\r\n\r\n            <td>{Transaction.TraderPaymentMethod}</td>\r\n\r\n            <td>{Transaction.DriverBillNumber}</td>\r\n\r\n            <td>\r\n                {Transaction.DriverBillPaid ?\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}\r\n            </td>\r\n\r\n            <td>{Transaction.DriverPaymentMethod}</td>\r\n\r\n            <td>{`${Transaction.FeeRate}%`}</td>\r\n\r\n            <td>{`${Transaction.Earned.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n\r\n            <td>{`${Transaction.Charged.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n\r\n            <td>{`${Transaction.Amount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default AccountStatementRow;","import React, { Component } from \"react\";\r\nimport Strings from \"../../../../../res/strings\";\r\nimport AccountStatementRow from \"./AccountStatementRow\";\r\n\r\nclass AccountStatementTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement\r\n        } = this.props;\r\n\r\n        const transportCompany = AccountStatement.TransportCompany;\r\n\r\n        let netAmount = 0.0;\r\n        let netEarned = 0.0;\r\n        let netCharged = 0.0;\r\n\r\n        for (let transaction of AccountStatement.Transactions) {\r\n            netAmount += transaction.Amount;\r\n            netEarned += transaction.Earned;\r\n            netCharged += transaction.Charged;\r\n        }\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default back-color-light\">\r\n                <div className=\"container\">\r\n                    <div className=\"type-t3\" style={{ fontWeight: \"600\" }}><span className=\"fas fa-route m-r-xxxs\"></span>NAQEL</div>\r\n\r\n                    <div className=\"p-t-xxs\">\r\n                        <div className=\"type-t8 m-b-xxs\">TRANSPORT COMPANY DETAILS</div>\r\n                        <div className=\"type-t8\">{`Company Name: ${transportCompany.Name}`}</div>\r\n                        <div className=\"type-t8\">{`Username: ${transportCompany.Username}`}</div>\r\n                        <div className=\"type-t8\">{`Internal Number: ${transportCompany.InternalNumber}`}</div>\r\n                        <div className=\"type-t8\">{`Commercial Register Number: ${transportCompany.CommercialRegisterNumber}`}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {AccountStatement.Transactions.length === 0 ? \r\n                <section>\r\n                    <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }}>\r\n                        <div className=\"container\">\r\n                            <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4\"><span className=\"fas fa-exclamation-triangle m-r-xxs\"\r\n                                    style={{ color: \"#FFBF15\" }}></span>No transactions found.</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section> : \r\n                <div class=\"table-responsive back-color-gray\" style={{ borderTop: \"4px solid #CCCCCC\", height: \"100vh\" }}>\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>DATE</th>\r\n                                <th>TRUCK NUMBER</th>\r\n                                <th>JOB NUMBER</th>\r\n                                <th>TRADER BILL NUMBER</th>\r\n                                <th>TRADER BILL PAID?</th>\r\n                                <th>TRADER PAY METHOD</th>\r\n                                <th>DRIVER BILL NUMBER</th>\r\n                                <th>DRIVER BILL PAID?</th>\r\n                                <th>DRIVER PAY METHOD</th>\r\n                                <th>FEE RATE</th>\r\n                                <th>EARNED</th>\r\n                                <th>CHARGED</th>\r\n                                <th>TOTAL AMOUNT</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {AccountStatement.Transactions.map((transaction, index) => {\r\n                                return <AccountStatementRow key={index}\r\n                                    Index={index}\r\n                                    Transaction={transaction} />;\r\n                            })}\r\n                            <tr style={{ backgroundColor: \"#DADADA\" }}>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td>TOTAL:</td>\r\n                                <td>{`${netEarned.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n                                <td>{`${netCharged.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n                                <td>{`${netAmount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AccountStatementTable;","import React, { Component } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport ProgressBar from \"../../../../../controls/ProgressBar\";\r\nimport AccountStatementTable from \"./AccountStatementTable\";\r\nimport { getData } from \"../../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass AccountStatement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AccountStatement: null,\r\n            Searching: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.onComponentUpdated = this.onComponentUpdated.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.onComponentUpdated();\r\n    }\r\n\r\n    onComponentUpdated = async () => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"AccountStatement\",\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Account statement found.\") {\r\n                    this.setState({\r\n                        AccountStatement: response.AccountStatement,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AccountStatement: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement,\r\n            Searching\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-university m-r-xxs\"></span>Transport Company's Account Statements</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Account Statement</div>\r\n\r\n            {Searching || !AccountStatement ?\r\n                <section>\r\n                    <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }}>\r\n                        <div className=\"container\">\r\n                            {Searching ? <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4 color-default\">Searching</div>\r\n                                <ProgressBar />\r\n                            </div> : <div className=\"text-center p-xxs\">\r\n                                    <div className=\"type-h4\"><span className=\"fas fa-exclamation-triangle m-r-xxs\"\r\n                                        style={{ color: \"#FFBF15\" }}></span>No account statement to display.</div>\r\n                                </div>}\r\n                        </div>\r\n                    </div>\r\n                </section> :\r\n                <section>\r\n                    <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                        <ReactToPrint\r\n                            trigger={() => <button className=\"btn btn-primary m-t-n\">Print</button>}\r\n                            content={() => this.TCResponsibleAccountStatement} />\r\n                    </div>\r\n\r\n                    <AccountStatementTable AccountStatement={AccountStatement}\r\n                        ref={tCResponsibleAccountStatement => (this.TCResponsibleAccountStatement = tCResponsibleAccountStatement)} />\r\n                </section>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AccountStatement;","import React, { Component } from \"react\";\r\nimport Strings from \"../../../../../../res/strings\";\r\n\r\nclass AccountStatementRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            Transaction\r\n        } = this.props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <strong>{`${new Date(Transaction.Date).toLocaleDateString()}`}</strong>\r\n            </td>\r\n\r\n            <td>{Transaction.JobNumber}</td>\r\n\r\n            <td>{Transaction.TraderBillNumber}</td>\r\n\r\n            <td>\r\n                {Transaction.TraderBillPaid ?\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}\r\n            </td>\r\n\r\n            <td>{Transaction.TraderPaymentMethod}</td>\r\n\r\n            <td>{Transaction.DriverBillNumber}</td>\r\n\r\n            <td>\r\n                {Transaction.DriverBillPaid ?\r\n                    <span className=\"fa fa-check-circle\" style={{ color: \"#25AE88\" }}></span> :\r\n                    <span className=\"fa fa-times-circle\" style={{ color: \"#D75A4A\" }}></span>}\r\n            </td>\r\n\r\n            <td>{Transaction.DriverPaymentMethod}</td>\r\n\r\n            <td>{`${Transaction.FeeRate}%`}</td>\r\n\r\n            <td>{`${Transaction.Earned.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n\r\n            <td>{`${Transaction.Charged.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n\r\n            <td>{`${Transaction.Amount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n        </tr>;\r\n    }\r\n};\r\n\r\nexport default AccountStatementRow;","import React, { Component } from \"react\";\r\nimport AccountStatementRow from \"./AccountStatementRow\";\r\nimport Strings from \"../../../../../../res/strings\";\r\n\r\nclass AccountStatementTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement\r\n        } = this.props;\r\n\r\n        const truck = AccountStatement.Truck;\r\n\r\n        let netAmount = 0.0;\r\n        let netEarned = 0.0;\r\n        let netCharged = 0.0;\r\n\r\n        for (let transaction of AccountStatement.Transactions) {\r\n            netAmount += transaction.Amount;\r\n            netEarned += transaction.Earned;\r\n            netCharged += transaction.Charged;\r\n        }\r\n\r\n        return <section>\r\n            <div className=\"jumbotron theme-default back-color-light\">\r\n                <div className=\"container\">\r\n                    <div className=\"type-t3\" style={{ fontWeight: \"600\" }}><span className=\"fas fa-route m-r-xxxs\"></span>NAQEL</div>\r\n\r\n                    <div className=\"p-t-xxs\">\r\n                        <div className=\"type-t8 m-b-xxs\">TRUCK DETAILS</div>\r\n                        <div className=\"type-t8\">{`Make and Model: ${truck.Brand} ${truck.Model}`}</div>\r\n                        <div className=\"type-t8\">{`Production Year: ${truck.ProductionYear}`}</div>\r\n                        <div className=\"type-t8\">{`Truck Type: ${truck.Type}`}</div>\r\n                        <div className=\"type-t8\">{`Truck Number: ${truck.TruckNumber}`}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {AccountStatement.Transactions.length === 0 ? \r\n                <section>\r\n                    <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }}>\r\n                        <div className=\"container\">\r\n                            <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4\"><span className=\"fas fa-exclamation-triangle m-r-xxs\"\r\n                                    style={{ color: \"#FFBF15\" }}></span>No transactions found.</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section> : \r\n                <div class=\"table-responsive back-color-gray\" style={{ borderTop: \"4px solid #CCCCCC\", height: \"100vh\" }}>\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>DATE</th>\r\n                                <th>JOB NUMBER</th>\r\n                                <th>TRADER BILL NUMBER</th>\r\n                                <th>TRADER BILL PAID?</th>\r\n                                <th>TRADER PAY METHOD</th>\r\n                                <th>DRIVER BILL NUMBER</th>\r\n                                <th>DRIVER BILL PAID?</th>\r\n                                <th>DRIVER PAY METHOD</th>\r\n                                <th>FEE RATE</th>\r\n                                <th>EARNED</th>\r\n                                <th>CHARGED</th>\r\n                                <th>TOTAL AMOUNT</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {AccountStatement.Transactions.map((transaction, index) => {\r\n                                return <AccountStatementRow key={index}\r\n                                    Index={index}\r\n                                    Transaction={transaction} />;\r\n                            })}\r\n                            <tr style={{ backgroundColor: \"#DADADA\" }}>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td>TOTAL:</td>\r\n                                <td>{`${netEarned.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n                                <td>{`${netCharged.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n                                <td>{`${netAmount.toFixed(2)} ${Strings.SAUDI_RIYAL}`}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>}\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default AccountStatementTable;","import React, { Component } from \"react\";\r\n\r\nclass SearchTransactionsDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            JobNumber: \"\",\r\n            StartDate: \"\",\r\n            EndDate: \"\",\r\n            StartPrice: 0.00,\r\n            EndPrice: 0.00\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        const {\r\n            JobNumber,\r\n            StartDate,\r\n            EndDate,\r\n            StartPrice,\r\n            EndPrice\r\n        } = this.state;\r\n\r\n        console.log(JobNumber);\r\n        console.log(StartDate);\r\n        console.log(EndDate);\r\n        console.log(StartPrice);\r\n        console.log(EndPrice);\r\n\r\n        const {\r\n            Transactions\r\n        } = this.props;\r\n\r\n        let filteredTransactions;\r\n        let count;\r\n\r\n        if (JobNumber !== \"\") {\r\n            filteredTransactions = [];\r\n            count = 0;\r\n\r\n            for (let transaction of Transactions) {\r\n                if (transaction.JobNumber.includes(JobNumber)) {\r\n                    filteredTransactions[count++] = transaction;\r\n                }\r\n            }\r\n\r\n            this.cancelButton.click();\r\n            this.props.OnOK(filteredTransactions);\r\n            return;\r\n        }\r\n        else {\r\n            filteredTransactions = Transactions.slice();\r\n            let indicesToRemove;\r\n\r\n            if (StartDate !== \"\") {\r\n                console.log(\"Hllo\");\r\n                indicesToRemove = []\r\n                count = 0;\r\n\r\n                for (let transaction of filteredTransactions) {\r\n                    const created = new Date(transaction.Date);\r\n                    const startDate = new Date(StartDate);\r\n\r\n                    if (created < startDate) {\r\n                        indicesToRemove.push(count);\r\n                    }\r\n\r\n                    count++;\r\n                }\r\n\r\n                for (let index of indicesToRemove) {\r\n                    filteredTransactions.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            if (EndDate !== \"\") {\r\n                indicesToRemove = [];\r\n                count = 0;\r\n\r\n                for (let transaction of filteredTransactions) {\r\n                    const created = new Date(transaction.Date);\r\n                    const endDate = new Date(EndDate);\r\n\r\n                    if (created > endDate) {\r\n                        indicesToRemove.push(count);\r\n                    }\r\n\r\n                    count++;\r\n                }\r\n\r\n                for (let index of indicesToRemove) {\r\n                    filteredTransactions.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            if (StartPrice !== \"\" ||\r\n                StartPrice !== 0) {\r\n                indicesToRemove = [];\r\n                count = 0;\r\n\r\n                for (let transaction of filteredTransactions) {\r\n                    if (parseFloat(transaction.Amount) < parseFloat(StartPrice)) {\r\n                        indicesToRemove.push(count);\r\n                    }\r\n\r\n                    count++;\r\n                }\r\n\r\n                for (let index of indicesToRemove) {\r\n                    filteredTransactions.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            if (EndPrice !== \"\" ||\r\n                parseFloat(EndPrice) !== 0) {\r\n                indicesToRemove = [];\r\n                count = 0;\r\n\r\n                for (let transaction of filteredTransactions) {\r\n                    if (parseFloat(transaction.Amount) > parseFloat(EndPrice)) {\r\n                        indicesToRemove.push(count);\r\n                    }\r\n\r\n                    count++;\r\n                }\r\n\r\n                for (let index of indicesToRemove) {\r\n                    filteredTransactions.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            this.cancelButton.click();\r\n            this.props.OnOK(filteredTransactions);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            JobNumber,\r\n            StartDate,\r\n            EndDate,\r\n            StartPrice,\r\n            EndPrice\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div className=\"modal modal-center-vertical\" id=\"search-transactions-dialog\"\r\n                tabIndex=\"-1\" role=\"dialog\"\r\n                aria-labelledby=\"modal-sample-label\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" style={{ width: \"100%\", maxWidth: \"95%\" }}>\r\n                    <div className=\"modal-content\" style={{ backgroundColor: \"#FEFEFE\" }}>\r\n                        <div className=\"modal-header\">\r\n                            <div className=\"text-right\">\r\n                                <button className=\"btn btn-primary\" style={{ minWidth: \"0px\" }}\r\n                                    data-dismiss=\"modal\"\r\n                                    ref={cancelButton => this.cancelButton = cancelButton}>\r\n                                    <span className=\"fas fa-times\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n                                <div className=\"jumbotron theme-default\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"type-h3 color-default p-t-xxs\">Search Transactions</div>\r\n                                        <div className=\"row p-t-xxs\">\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Job Number</label>\r\n                                                    <input type=\"text\" name=\"JobNumber\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={JobNumber} onChange={this.onChange} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Starting Date</label>\r\n                                                    <input type=\"date\" name=\"StartDate\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={StartDate} onChange={this.onChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Ending Date</label>\r\n                                                    <input type=\"date\" name=\"EndDate\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={EndDate} onChange={this.onChange} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Staring Amount (USD)</label>\r\n                                                    <input type=\"number\" min=\"0.00\" step=\"0.01\" name=\"StartPrice\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={StartPrice} onChange={this.onChange} />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Ending Amount (USD)</label>\r\n                                                    <input type=\"number\" min=\"0.00\" step=\"0.01\" name=\"EndPrice\"\r\n                                                        className=\"form-control\" autoComplete=\"off\" value={EndPrice} onChange={this.onChange} />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <input type=\"submit\" value=\"Search Now\" className=\"btn btn-primary\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default SearchTransactionsDialog;","import React, { Component } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport ProgressBar from \"../../../../../../controls/ProgressBar\";\r\nimport AccountStatementTable from \"./AccountStatementTable\";\r\nimport SearchTransactionsDialog from \"./SearchTransactionsDialog\";\r\nimport { getData } from \"../../../../TransportCompanyResponsiblesFunctions\";\r\n\r\nclass AccountStatement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AccountStatement: null,\r\n            AllTransactions: [],\r\n            Searching: false,\r\n            ShowingSearchResults: false,\r\n            Refreshing: false\r\n        };\r\n\r\n        this.searchTruckAccountStatement = this.searchTruckAccountStatement.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.SearchTruckAccountStatement(this.searchTruckAccountStatement);\r\n    }\r\n\r\n    searchTruckAccountStatement = async truckNumber => {\r\n        if (localStorage.Token) {\r\n            let request = {\r\n                Token: localStorage.Token,\r\n                Get: \"TruckAccountStatement\",\r\n                Params: {\r\n                    TruckNumber: truckNumber\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                Searching: true\r\n            });\r\n\r\n            await getData(request).then(response => {\r\n                if (response.Message === \"Account statement found.\") {\r\n                    this.setState({\r\n                        AccountStatement: response.AccountStatement,\r\n                        AllTransactions: response.AccountStatement.Transactions,\r\n                        Searching: false\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        AccountStatement: null,\r\n                        AllTransactions: null,\r\n                        Searching: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            AccountStatement,\r\n            AllTransactions,\r\n            Searching,\r\n            ShowingSearchResults\r\n        } = this.state;\r\n\r\n        return (Searching || !AccountStatement) ?\r\n            <section>\r\n                <div className=\"jumbotron theme-default\" style={{ height: \"100vh\" }}>\r\n                    <div className=\"container\">\r\n                        {Searching ? <div className=\"text-center p-xxs\">\r\n                            <div className=\"type-h4 color-default\">Searching</div>\r\n                            <ProgressBar />\r\n                        </div> : <div className=\"text-center p-xxs\">\r\n                                <div className=\"type-h4\"><span className=\"fas fa-exclamation-triangle m-r-xxs\"\r\n                                    style={{ color: \"#FFBF15\" }}></span>No account statement to display. Search the truck by number to view its account statement.</div>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            </section> :\r\n            <section>\r\n                <div className=\"text-right p-xxs\" style={{ backgroundColor: \"#DDDDDD\" }}>\r\n                    <ReactToPrint\r\n                        trigger={() => <button className=\"btn btn-primary m-t-n\">Print</button>}\r\n                        content={() => this.TruckAccountStatement} />\r\n\r\n                    {ShowingSearchResults ?\r\n                        <button className=\"btn btn-secondary m-t-n\"\r\n                            onClick={() => {\r\n                                let {\r\n                                    AccountStatement,\r\n                                    AllTransactions\r\n                                } = this.state;\r\n\r\n                                AccountStatement.Transactions = AllTransactions;\r\n\r\n                                this.setState({\r\n                                    AccountStatement: AccountStatement,\r\n                                    ShowingSearchResults: false\r\n                                });\r\n                            }}>Cancel Search</button> :\r\n                        <button className=\"btn btn-secondary m-t-n\"\r\n                            data-toggle=\"modal\"\r\n                            data-target={`#search-transactions-dialog`}>Search Transactions</button>}\r\n                </div>\r\n\r\n                {ShowingSearchResults ? \r\n                    null :\r\n                    <SearchTransactionsDialog Transactions={AllTransactions}\r\n                        OnOK={transactions => {\r\n                            let {\r\n                                AccountStatement\r\n                            } = this.state;\r\n\r\n                            AccountStatement.Transactions = transactions;\r\n\r\n                            this.setState({\r\n                                AccountStatement: AccountStatement,\r\n                                ShowingSearchResults: true\r\n                            });\r\n                        }} />}\r\n\r\n                <AccountStatementTable AccountStatement={AccountStatement}\r\n                    ref={truckAccountStatement => (this.TruckAccountStatement = truckAccountStatement)} />\r\n            </section>;\r\n    }\r\n};\r\n\r\nexport default AccountStatement;","import React, { Component } from \"react\";\r\nimport AccountStatement from \"./accountStatement/AccountStatement\";\r\n\r\nclass TruckAccountStatementBrowser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            SearchString: \"\"\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n        this.SearchTruckAccountStatement(this.state.SearchString);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            SearchString\r\n        } = this.state;\r\n\r\n        return <section>\r\n            <div class=\"page-header\" style={{\r\n                backgroundImage: \"url(/images/poly_back.jpg)\",\r\n                backgroundSize: \"cover\",\r\n                backgroundColor: \"#215761\"\r\n            }}>\r\n                <div class=\"container p-b-xxs m-b-xxs\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-18\">\r\n                            <div className=\"type-h3 color-light\"><span className=\"fas fa-university m-r-xxs\"></span>Trucks' Account Statements</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", height: \"2px\", backgroundColor: \"#008575\" }}></div>\r\n            <div className=\"h3 m-n p-xxs\" style={{ backgroundColor: \"#EFEFEF\", }}>Account Statement</div>\r\n\r\n            <nav className=\"navbar navbar-default\" style={{ backgroundColor: \"#F5F5F5\" }}>\r\n                <div className=\"navbar-global theme-default\" style={{ backgroundColor: \"#E5E5E5;\" }}>\r\n                    <div style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                        <form noValidate onSubmit={this.onSearch} className=\"navbar-form navbar-right\" role=\"search\">\r\n                            <div className=\"putbox\" style={{ margin: \"0px\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"search\" name=\"SearchString\" className=\"form-control\" placeholder=\"Search Truck Number\"\r\n                                        style={{ maxWidth: \"500px\", width: \"100%\" }}\r\n                                        value={SearchString} onChange={this.onChange} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-default form-control\" style={{ width: \"34px\" }}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            <AccountStatement SearchTruckAccountStatement={searchTruckAccountStatement => {\r\n                this.SearchTruckAccountStatement = searchTruckAccountStatement;\r\n            }} />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TruckAccountStatementBrowser;","import React, { Component } from \"react\";\r\nimport TruckAccountStatementBrowser from \"./TruckAccountStatementBrowser\";\r\n\r\nclass TrucksAccountStatements extends Component {\r\n    render() {\r\n        return <section>\r\n            <TruckAccountStatementBrowser />\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default TrucksAccountStatements;","import React, { Component } from \"react\";\r\nimport PageHeading from \"../../../../controls/PageHeading\";\r\nimport AccountStatement from \"./accountStatement/AccountStatement\";\r\nimport TrucksAccountStatements from \"./trucksAccountStatement/TrucksAccountStatements\";\r\n\r\nclass FinancialAccounts extends Component {\r\n    render() {\r\n        return <section>\r\n            {/* <PageHeading Heading=\"FINANCIAL ACCOUNTS\" /> */}\r\n            <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                padding: \"10px\",\r\n                backgroundColor: \"#3A3A3C\",\r\n                width: \"100%\",\r\n                margin: \"0px\",\r\n            }}>\r\n                <li role=\"presentation\" className=\"active\">\r\n                    <a href=\"#account-statement\" aria-controls=\"account-statement\" role=\"tab\" data-toggle=\"tab\">Account Statement</a>\r\n                </li>\r\n                <li role=\"presentation\">\r\n                    <a href=\"#trucks-account-statement\" aria-controls=\"trucks-account-statement\" role=\"tab\" data-toggle=\"tab\">Trucks' Account Statement</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div class=\"tab-content\">\r\n                <div role=\"tabpanel\" class=\"tab-pane active\" id=\"account-statement\">\r\n                    <AccountStatement />\r\n                </div>\r\n                <div role=\"tabpanel\" class=\"tab-pane\" id=\"trucks-account-statement\">\r\n                    <TrucksAccountStatements />\r\n                </div>\r\n            </div>\r\n        </section>;\r\n    }\r\n};\r\n\r\nexport default FinancialAccounts;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Profile from \"./profile/Profile\";\r\nimport Settings from \"./settings/Settings\";\r\nimport Trucks from \"./trucks/Trucks\";\r\nimport Questions from \"./questions/Questions\";\r\nimport FinancialAccounts from \"./financialAccounts/FinancialAccounts\";\r\n\r\nclass TransportCompanyResponsiblesDashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //this.state = {\r\n        //    Left: -400\r\n        //};\r\n\r\n        //this.onCloseNavigation = this.onCloseNavigation.bind(this);\r\n    }\r\n\r\n    //onCloseNavigation = () => {\r\n    //    this.setState({\r\n    //        Left: -400\r\n    //    });\r\n    //}\r\n\r\n    render() {\r\n        if (!localStorage.Token) {\r\n            return <Redirect to={\"/login\"} />;\r\n        }\r\n        else {\r\n            return <section>\r\n                <ul className=\"nav nav-tabs theme-alt\" role=\"tablist\" style={{\r\n                    padding: \"10px\",\r\n                    backgroundColor: \"#133F4F\",\r\n                    width: \"100%\",\r\n                    margin: \"0px\",\r\n                }}>\r\n                    <li role=\"presentation\" className=\"active\">\r\n                        <a href=\"#trucks\" aria-controls=\"trucks\" role=\"tab\" data-toggle=\"tab\">Trucks</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#financial-accounts\" aria-controls=\"financial-accounts\" role=\"tab\" data-toggle=\"tab\">Financial Accounts</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#questions\" aria-controls=\"questions\" role=\"tab\" data-toggle=\"tab\">Questions</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#profile\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">Profile</a>\r\n                    </li>\r\n                    <li role=\"presentation\">\r\n                        <a href=\"#settings\" aria-controls=\"settings\" role=\"tab\" data-toggle=\"tab\">Settings</a>\r\n                    </li>\r\n                </ul>\r\n\r\n                {/*\r\n                 <div className=\"sidenav\" style={{ left: `${this.state.Left}px` }}>\r\n                    <a className=\"closebtn\" onClick={this.onCloseNavigation}>&times;</a>\r\n\r\n                    <div class=\"entity-list\" role=\"tablist\">\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#profile\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Profile</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#trucks\" aria-controls=\"trucks\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Trucks</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#financial-accounts\" aria-controls=\"financial-accounts\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Financial Accounts</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#questions\" aria-controls=\"questions\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Questions</a>\r\n                        </div>\r\n                        <div class=\"entity-list-item\" role=\"presentation\">\r\n                            <a href=\"#settings\" aria-controls=\"settings\" role=\"tab\" data-toggle=\"tab\" onClick={this.onCloseNavigation}>Settings</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                 */}\r\n\r\n                <div className=\"tab-content\">\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"profile\">\r\n                        <Profile />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane active\" id=\"trucks\">\r\n                        <Trucks />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"financial-accounts\">\r\n                        <FinancialAccounts />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"questions\">\r\n                        <Questions />\r\n                    </div>\r\n                    <div role=\"tabpanel\" className=\"tab-pane\" id=\"settings\">\r\n                        <Settings />\r\n                    </div>\r\n                </div>\r\n\r\n                {/*\r\n                 <div className=\"side-nav-btn\" onClick={() => {\r\n                    this.setState({\r\n                        Left: 0\r\n                    });\r\n                }}><div className=\"fas fa-bars\" style={{ fontSize: \"x-large\" }}></div>\r\n                </div>\r\n                 */}\r\n            </section>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default TransportCompanyResponsiblesDashboard;","import React, { Component } from \"react\";\r\n\r\nclass BackToTop extends Component {\r\n    render() {\r\n        return (\r\n            <a id=\"up\" href=\"#top\" className=\"back-to-top\" style={{ position: \"fixed\", right: \"20px\", bottom: \"20px\", }}>\r\n                <i className=\"glyph glyph-up\" style={{ color: \"#008575\", }}></i>\r\n                <span className=\"sr-only\">Back to top</span>\r\n            </a>\r\n        );\r\n    }\r\n};\r\n\r\nexport default BackToTop;","import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <footer className=\"border-top footer theme-default color-bg-light-neutral-high text-light\">\r\n                <div className=\"container\">\r\n                    &copy; {new Date().getFullYear()} - Core Infinite - <a asp-area=\"\" asp-controller=\"Home\" asp-action=\"Privacy\">Privacy</a>\r\n                </div>\r\n            </footer>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Header from \"./components/shared/Header\";\r\nimport Landing from \"./components/landing/Landing\";\r\nimport Login from \"./components/login/Login\";\r\nimport Register from \"./components/register/Register\";\r\nimport EmailConfirmation from \"./components/register/EmailConfirmation\";\r\nimport AccountSetup from \"./components/register/AccountSetup\";\r\nimport SetupAdministratorAccount from \"./components/register/SetupAdministratorAccount\";\r\nimport SetupTransportCompanyResponsibleAccount from \"./components/register/SetupTransportCompanyResponsibleAccount\";\r\nimport Congratulations from \"./components/register/Congratulations\";\r\nimport DriversDashboard from \"./components/drivers/dashboard/DriversDashboard\";\r\nimport TradersDashboard from \"./components/traders/dashboard/TradersDashboard\";\r\nimport AdministratorsDashboard from \"./components/administrators/dashboard/AdministratorsDashboard\";\r\nimport TransportCompanyResponsiblesDashboard from \"./components/transportCompanyResponsibles/dashboard/TransportComapanyResponsiblesDashboard\";\r\nimport BackToTop from \"./controls/BackToTop\";\r\nimport Footer from \"./components/shared/Footer\";\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Router basename=\"/\">\r\n                <div className=\"App\">\r\n                    <Header />\r\n                    <Route exact path=\"/\" component={Landing} />\r\n                    <Route exact path=\"/register\" component={Register} />\r\n                    <Route exact path=\"/emailConfirmation\" component={EmailConfirmation} />\r\n                    <Route exact path=\"/setupAccount\" component={AccountSetup} />\r\n                    <Route exact path=\"/setupAdministratorAccount\" component={SetupAdministratorAccount} />\r\n                    <Route exact path=\"/setupTransportCompanyResponsibleAccount\" component={SetupTransportCompanyResponsibleAccount} />\r\n                    <Route exact path=\"/congratulations\" component={Congratulations} />\r\n                    <Route exact path=\"/login\" component={Login} />\r\n                    <Route exact path=\"/drivers\" component={DriversDashboard} />\r\n                    <Route exact path=\"/traders\" component={TradersDashboard} />\r\n                    <Route exact path=\"/administrators\" component={AdministratorsDashboard} />\r\n                    <Route exact path=\"/transportCompanyResponsibles\" component={TransportCompanyResponsiblesDashboard} />\r\n                    <BackToTop />\r\n                    <Footer />\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = {\r\n    APP_NAME: \"Naqel\",\r\n    USER_TOKEN: \"userToken\",\r\n    USER_NOT_FOUND: \"Username not found.\",\r\n    INVALID_PASSWORD: \"Invalid password.\",\r\n    USERNAME_OR_EMAIL_TAKEN: \"Username or email is already taken.\",\r\n    NAQEL_SERVER: \"https://naqel-server.azurewebsites.net/\",\r\n    IMAGE_UPLOADER: \"https://us-central1-naqel-transport-jobs.cloudfunctions.net/uploadImage\",\r\n    STRIPE_PUBLISHABLE_KEY: \"pk_test_Wjc5dIC6ytMmH3g1roSUOYcm00FaTN1yBn\",\r\n    STRIPE_SECRET_KEY: \"sk_test_RVhdSfOgg0jQHCYLYH8Z05JM00bkPnPBVg\",\r\n    GOOGLE_API_KEY: \"AIzaSyD_U_2NzdPIL7TWb8ECBHWO1eROR2yrebI\",\r\n    SAUDI_RIYAL: \"SR\"\r\n};"],"sourceRoot":""}